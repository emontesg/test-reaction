[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar HTTP = Package.http.HTTP;\nvar HTTPInternals = Package.http.HTTPInternals;\nvar _ = Package.underscore._;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\n\n/* Package-scope variables */\nvar Instagram;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/bozhao_accounts-instagram/instagram_server.js                                              //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nInstagram = {};\n\nOauth.registerService('instagram', 2, null, function(query) {\n\n  var response = getTokenResponse(query);\n  var accessToken = response.access_token;\n  var identity = response.user;\n\n  var serviceData = _.extend(identity, {accessToken: response.access_token});\n\n  return {\n    serviceData: serviceData,\n    options: {\n      profile: { name: identity.full_name },\n      services: { instagram: identity }\n    }\n  };\n});\n\nvar getTokenResponse = function (query) {\n  var config = ServiceConfiguration.configurations.findOne({service: 'instagram'});\n\n  if (!config)\n    throw new ServiceConfiguration.ConfigError();\n\n  var response;\n  try {\n    response = HTTP.post(\n      \"https://api.instagram.com/oauth/access_token\", {\n        params: {\n          code: query.code,\n          client_id: config.clientId,\n          redirect_uri: OAuth._redirectUri(\"instagram\", config),\n          client_secret: OAuth.openSecret(config.secret),\n          grant_type: 'authorization_code'\n        }\n      });\n\n    if (response.error) // if the http response was an error\n        throw response.error;\n    if (typeof response.content === \"string\")\n        response.content = JSON.parse(response.content);\n    if (response.content.error)\n        throw response.content;\n  } catch (err) {\n    throw _.extend(new Error(\"Failed to complete OAuth handshake with Instagram. \" + err.message),\n                   {response: err.response});\n  }\n\n  return response.content;\n};\n\nInstagram.retrieveCredential = function(credentialToken, credentialSecret) {\n  return Oauth.retrieveCredential(credentialToken, credentialSecret);\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/bozhao_accounts-instagram/instagram.js                                                     //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nAccounts.oauth.registerService('instagram');\n\nif (Meteor.isClient) {\n  Meteor.loginWithInstagram = function(options, callback) {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Instagram.requestCredential(options, credentialRequestCompleteCallback);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    forLoggedInUser: ['services.instagram'],\n    forOtherUsers: [\n      'services.instagram.username',\n      'services.instagram.full_name',\n      'services.instagram.profile_picture'\n    ]\n  });\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"bozhao:accounts-instagram\", {\n  Instagram: Instagram\n});\n\n})();\n","servePath":"/packages/bozhao_accounts-instagram.js"}]