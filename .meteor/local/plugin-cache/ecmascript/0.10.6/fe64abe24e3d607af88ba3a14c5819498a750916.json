{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/graphql/server/resolvers/scalar/ConnectionCursor.js","filename":"imports/plugins/core/graphql/server/resolvers/scalar/ConnectionCursor.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/graphql/server/resolvers/scalar/ConnectionCursor.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/graphql/server/resolvers/scalar/ConnectionCursor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/graphql/server/resolvers/scalar/ConnectionCursor.js"}},"code":"let GraphQLScalarType;\nmodule.watch(require(\"graphql\"), {\n  GraphQLScalarType(v) {\n    GraphQLScalarType = v;\n  }\n\n}, 0);\nlet Kind;\nmodule.watch(require(\"graphql/language\"), {\n  Kind(v) {\n    Kind = v;\n  }\n\n}, 1);\n\nconst toCursor = value => value ? Buffer.from(value).toString(\"base64\") : null;\n\nconst fromCursor = cursor => cursor ? Buffer.from(cursor, \"base64\").toString(\"utf8\") : null;\n\nconst description = `\nAn opaque string that identifies a particular result within a connection,\nallowing you to request a subset of results before or after that result.\n`;\nmodule.exportDefault(new GraphQLScalarType({\n  description,\n  name: \"ConnectionCursor\",\n  serialize: toCursor,\n\n  parseLiteral(ast) {\n    if (ast.kind === Kind.STRING) return fromCursor(ast.value);\n    return null;\n  },\n\n  parseValue: fromCursor\n}));","map":{"version":3,"sources":["imports/plugins/core/graphql/server/resolvers/scalar/ConnectionCursor.js"],"names":["GraphQLScalarType","module","watch","require","v","Kind","toCursor","value","Buffer","from","toString","fromCursor","cursor","description","exportDefault","name","serialize","parseLiteral","ast","kind","STRING","parseValue"],"mappings":"AAAA,IAAIA,iBAAJ;AAAsBC,OAAOC,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACH,oBAAkBI,CAAlB,EAAoB;AAACJ,wBAAkBI,CAAlB;AAAoB;;AAA1C,CAAhC,EAA4E,CAA5E;AAA+E,IAAIC,IAAJ;AAASJ,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACE,OAAKD,CAAL,EAAO;AAACC,WAAKD,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;;AAG9G,MAAME,WAAYC,KAAD,IAAYA,QAAQC,OAAOC,IAAP,CAAYF,KAAZ,EAAmBG,QAAnB,CAA4B,QAA5B,CAAR,GAAgD,IAA7E;;AACA,MAAMC,aAAcC,MAAD,IAAaA,SAASJ,OAAOC,IAAP,CAAYG,MAAZ,EAAoB,QAApB,EAA8BF,QAA9B,CAAuC,MAAvC,CAAT,GAA0D,IAA1F;;AAEA,MAAMG,cAAe;;;CAArB;AANAZ,OAAOa,aAAP,CAWe,IAAId,iBAAJ,CAAsB;AACnCa,aADmC;AAEnCE,QAAM,kBAF6B;AAGnCC,aAAWV,QAHwB;;AAInCW,eAAaC,GAAb,EAAkB;AAChB,QAAIA,IAAIC,IAAJ,KAAad,KAAKe,MAAtB,EAA8B,OAAOT,WAAWO,IAAIX,KAAf,CAAP;AAC9B,WAAO,IAAP;AACD,GAPkC;;AAQnCc,cAAYV;AARuB,CAAtB,CAXf","sourcesContent":["import { GraphQLScalarType } from \"graphql\";\nimport { Kind } from \"graphql/language\";\n\nconst toCursor = (value) => (value ? Buffer.from(value).toString(\"base64\") : null);\nconst fromCursor = (cursor) => (cursor ? Buffer.from(cursor, \"base64\").toString(\"utf8\") : null);\n\nconst description = `\nAn opaque string that identifies a particular result within a connection,\nallowing you to request a subset of results before or after that result.\n`;\n\nexport default new GraphQLScalarType({\n  description,\n  name: \"ConnectionCursor\",\n  serialize: toCursor,\n  parseLiteral(ast) {\n    if (ast.kind === Kind.STRING) return fromCursor(ast.value);\n    return null;\n  },\n  parseValue: fromCursor\n});\n"]},"sourceType":"script","hash":"fe64abe24e3d607af88ba3a14c5819498a750916"}
