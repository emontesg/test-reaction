{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/search-mongo/server/publications/searchresults.js","filename":"imports/plugins/included/search-mongo/server/publications/searchresults.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/search-mongo/server/publications/searchresults.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/search-mongo/server/publications/searchresults.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/search-mongo/server/publications/searchresults.js"}},"code":"module.export({\n  getResults: () => getResults\n});\n\nlet _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  default(v) {\n    _includes = v;\n  }\n\n}, 0);\n\nlet _replace;\n\nmodule.watch(require(\"lodash/replace\"), {\n  default(v) {\n    _replace = v;\n  }\n\n}, 1);\nlet escapeStringRegex;\nmodule.watch(require(\"escape-string-regexp\"), {\n  default(v) {\n    escapeStringRegex = v;\n  }\n\n}, 2);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 3);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 4);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 5);\nlet Reaction, Logger;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 6);\nlet ProductSearch, OrderSearch, AccountSearch;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  ProductSearch(v) {\n    ProductSearch = v;\n  },\n\n  OrderSearch(v) {\n    OrderSearch = v;\n  },\n\n  AccountSearch(v) {\n    AccountSearch = v;\n  }\n\n}, 7);\nconst supportedCollections = [\"products\", \"orders\", \"accounts\"];\n\nfunction getProductFindTerm(searchTerm, searchTags, userId) {\n  const shopId = Reaction.getShopId();\n  const findTerm = {\n    shopId,\n    $text: {\n      $search: searchTerm\n    }\n  };\n\n  if (searchTags.length) {\n    findTerm.hashtags = {\n      $all: searchTags\n    };\n  }\n\n  if (!Roles.userIsInRole(userId, [\"admin\", \"owner\"], shopId)) {\n    findTerm.isVisible = true;\n  } // Deletes the shopId field from \"findTerm\" for primary shop\n  // thereby allowing users on primary shop to search all products\n\n\n  if (shopId === Reaction.getPrimaryShopId()) {\n    delete findTerm.shopId;\n  }\n\n  return findTerm;\n}\n\nconst getResults = {};\n\ngetResults.products = function (searchTerm, facets, maxResults, userId) {\n  const searchTags = facets || [];\n  const findTerm = getProductFindTerm(searchTerm, searchTags, userId);\n  const productResults = ProductSearch.find(findTerm, {\n    fields: {\n      score: {\n        $meta: \"textScore\"\n      },\n      title: 1,\n      hashtags: 1,\n      description: 1,\n      handle: 1,\n      price: 1,\n      isSoldOut: 1,\n      isLowQuantity: 1,\n      isBackorder: 1\n    },\n    sort: {\n      score: {\n        $meta: \"textScore\"\n      }\n    },\n    limit: maxResults\n  });\n  return productResults;\n};\n\ngetResults.orders = function (searchTerm, facets, maxResults, userId) {\n  let orderResults;\n  const regexSafeSearchTerm = escapeStringRegex(searchTerm);\n  const shopId = Reaction.getShopId();\n  const findTerm = {\n    $and: [{\n      shopId\n    }, {\n      $or: [{\n        _id: {\n          $regex: `^${regexSafeSearchTerm}`,\n          $options: \"i\"\n        }\n      }, {\n        userEmails: {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        shippingName: {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        billingName: {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        billingCard: {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        billingPhone: {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        shippingPhone: {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        \"product.title\": {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        \"variants.title\": {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }, {\n        \"variants.optionTitle\": {\n          $regex: regexSafeSearchTerm,\n          $options: \"i\"\n        }\n      }]\n    }]\n  }; // Deletes the shopId field from \"findTerm\" for primary shop\n  // thereby allowing users on primary shop to search all products\n\n  if (shopId === Reaction.getPrimaryShopId()) {\n    delete findTerm.$and[0].shopId;\n  }\n\n  if (Reaction.hasPermission(\"orders\", userId)) {\n    orderResults = OrderSearch.find(findTerm, {\n      limit: maxResults\n    });\n    Logger.debug(`Found ${orderResults.count()} orders searching for ${regexSafeSearchTerm}`);\n  }\n\n  return orderResults;\n};\n\ngetResults.accounts = function (searchTerm, facets, maxResults, userId) {\n  let accountResults;\n  const shopId = Reaction.getShopId();\n\n  const searchPhone = _replace(searchTerm, /\\D/g, \"\");\n\n  if (Reaction.hasPermission(\"reaction-accounts\", userId)) {\n    const findTerm = {\n      $and: [{\n        shopId\n      }, {\n        $or: [{\n          emails: {\n            $regex: searchTerm,\n            $options: \"i\"\n          }\n        }, {\n          \"profile.firstName\": {\n            $regex: `^${searchTerm}$`,\n            $options: \"i\"\n          }\n        }, {\n          \"profile.lastName\": {\n            $regex: `^${searchTerm}$`,\n            $options: \"i\"\n          }\n        }, {\n          \"profile.phone\": {\n            $regex: `^${searchPhone}$`,\n            $options: \"i\"\n          }\n        }]\n      }]\n    }; // Deletes the shopId field from \"findTerm\" for primary shop\n    // thereby allowing users on primary shop to search all products\n\n    if (shopId === Reaction.getPrimaryShopId()) {\n      delete findTerm.$and[0].shopId;\n    }\n\n    accountResults = AccountSearch.find(findTerm, {\n      limit: maxResults\n    });\n    Logger.debug(`Found ${accountResults.count()} accounts searching for ${searchTerm}`);\n  }\n\n  return accountResults;\n};\n\nMeteor.publish(\"SearchResults\", function (collection, searchTerm, facets, maxResults = 99) {\n  check(collection, String);\n  check(collection, Match.Where(coll => _includes(supportedCollections, coll)));\n  check(searchTerm, Match.Optional(String));\n  check(facets, Match.OneOf(Array, undefined));\n  Logger.debug(`Returning search results on ${collection}. SearchTerm: |${searchTerm}|. Facets: |${facets}|.`);\n\n  if (!searchTerm) {\n    return this.ready();\n  }\n\n  return getResults[collection](searchTerm, facets, maxResults, this.userId);\n});","map":{"version":3,"sources":["imports/plugins/included/search-mongo/server/publications/searchresults.js"],"names":["module","export","getResults","_includes","watch","require","default","v","_replace","escapeStringRegex","Meteor","Roles","check","Match","Reaction","Logger","ProductSearch","OrderSearch","AccountSearch","supportedCollections","getProductFindTerm","searchTerm","searchTags","userId","shopId","getShopId","findTerm","$text","$search","length","hashtags","$all","userIsInRole","isVisible","getPrimaryShopId","products","facets","maxResults","productResults","find","fields","score","$meta","title","description","handle","price","isSoldOut","isLowQuantity","isBackorder","sort","limit","orders","orderResults","regexSafeSearchTerm","$and","$or","_id","$regex","$options","userEmails","shippingName","billingName","billingCard","billingPhone","shippingPhone","hasPermission","debug","count","accounts","accountResults","searchPhone","emails","publish","collection","String","Where","coll","Optional","OneOf","Array","undefined","ready"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport escapeStringRegex from \"escape-string-regexp\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { check, Match } from \"meteor/check\";\nimport { Reaction, Logger } from \"/server/api\";\nimport { ProductSearch, OrderSearch, AccountSearch } from \"/lib/collections\";\n\nconst supportedCollections = [\"products\", \"orders\", \"accounts\"];\n\nfunction getProductFindTerm(searchTerm, searchTags, userId) {\n  const shopId = Reaction.getShopId();\n  const findTerm = {\n    shopId,\n    $text: { $search: searchTerm }\n  };\n  if (searchTags.length) {\n    findTerm.hashtags = { $all: searchTags };\n  }\n  if (!Roles.userIsInRole(userId, [\"admin\", \"owner\"], shopId)) {\n    findTerm.isVisible = true;\n  }\n  // Deletes the shopId field from \"findTerm\" for primary shop\n  // thereby allowing users on primary shop to search all products\n  if (shopId === Reaction.getPrimaryShopId()) {\n    delete findTerm.shopId;\n  }\n  return findTerm;\n}\n\nexport const getResults = {};\n\ngetResults.products = function (searchTerm, facets, maxResults, userId) {\n  const searchTags = facets || [];\n  const findTerm = getProductFindTerm(searchTerm, searchTags, userId);\n  const productResults = ProductSearch.find(\n    findTerm,\n    {\n      fields: {\n        score: { $meta: \"textScore\" },\n        title: 1,\n        hashtags: 1,\n        description: 1,\n        handle: 1,\n        price: 1,\n        isSoldOut: 1,\n        isLowQuantity: 1,\n        isBackorder: 1\n      },\n      sort: { score: { $meta: \"textScore\" } },\n      limit: maxResults\n    }\n  );\n  return productResults;\n};\n\ngetResults.orders = function (searchTerm, facets, maxResults, userId) {\n  let orderResults;\n  const regexSafeSearchTerm = escapeStringRegex(searchTerm);\n  const shopId = Reaction.getShopId();\n  const findTerm = {\n    $and: [\n      { shopId },\n      {\n        $or: [\n          {\n            _id: {\n              $regex: `^${regexSafeSearchTerm}`,\n              $options: \"i\"\n            }\n          },\n          {\n            userEmails: {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            shippingName: {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            billingName: {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            billingCard: {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            billingPhone: {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            shippingPhone: {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            \"product.title\": {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            \"variants.title\": {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          },\n          {\n            \"variants.optionTitle\": {\n              $regex: regexSafeSearchTerm,\n              $options: \"i\"\n            }\n          }\n        ]\n      }\n    ]\n  };\n  // Deletes the shopId field from \"findTerm\" for primary shop\n  // thereby allowing users on primary shop to search all products\n  if (shopId === Reaction.getPrimaryShopId()) {\n    delete findTerm.$and[0].shopId;\n  }\n  if (Reaction.hasPermission(\"orders\", userId)) {\n    orderResults = OrderSearch.find(findTerm, { limit: maxResults });\n    Logger.debug(`Found ${orderResults.count()} orders searching for ${regexSafeSearchTerm}`);\n  }\n  return orderResults;\n};\n\ngetResults.accounts = function (searchTerm, facets, maxResults, userId) {\n  let accountResults;\n  const shopId = Reaction.getShopId();\n  const searchPhone = _.replace(searchTerm, /\\D/g, \"\");\n  if (Reaction.hasPermission(\"reaction-accounts\", userId)) {\n    const findTerm = {\n      $and: [\n        { shopId },\n        {\n          $or: [\n            {\n              emails: {\n                $regex: searchTerm,\n                $options: \"i\"\n              }\n            },\n            {\n              \"profile.firstName\": {\n                $regex: `^${searchTerm}$`,\n                $options: \"i\"\n              }\n            },\n            {\n              \"profile.lastName\": {\n                $regex: `^${searchTerm}$`,\n                $options: \"i\"\n              }\n            },\n            {\n              \"profile.phone\": {\n                $regex: `^${searchPhone}$`,\n                $options: \"i\"\n              }\n            }\n          ]\n        }\n      ]\n    };\n    // Deletes the shopId field from \"findTerm\" for primary shop\n    // thereby allowing users on primary shop to search all products\n    if (shopId === Reaction.getPrimaryShopId()) {\n      delete findTerm.$and[0].shopId;\n    }\n    accountResults = AccountSearch.find(findTerm, {\n      limit: maxResults\n    });\n    Logger.debug(`Found ${accountResults.count()} accounts searching for ${searchTerm}`);\n  }\n  return accountResults;\n};\n\nMeteor.publish(\"SearchResults\", function (collection, searchTerm, facets, maxResults = 99) {\n  check(collection, String);\n  check(collection, Match.Where((coll) => _.includes(supportedCollections, coll)));\n  check(searchTerm, Match.Optional(String));\n  check(facets, Match.OneOf(Array, undefined));\n  Logger.debug(`Returning search results on ${collection}. SearchTerm: |${searchTerm}|. Facets: |${facets}|.`);\n  if (!searchTerm) {\n    return this.ready();\n  }\n  return getResults[collection](searchTerm, facets, maxResults, this.userId);\n});\n"]},"sourceType":"script","hash":"1a63e59ba72750b6df4c37632e943ab0be13fa81"}
