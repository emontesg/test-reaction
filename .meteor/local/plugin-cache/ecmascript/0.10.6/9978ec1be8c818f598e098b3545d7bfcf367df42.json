{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"client/modules/core/subscriptions.js","filename":"client/modules/core/subscriptions.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"client/modules/core/subscriptions.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"client/modules/core/subscriptions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/modules/core/subscriptions.js"}},"code":"module.export({\n  Subscriptions: function () {\n    return Subscriptions;\n  }\n});\nvar store;\nmodule.watch(require(\"store\"), {\n  \"default\": function (v) {\n    store = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random: function (v) {\n    Random = v;\n  }\n}, 2);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 3);\nvar Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 4);\nvar SubsManager;\nmodule.watch(require(\"meteor/meteorhacks:subs-manager\"), {\n  SubsManager: function (v) {\n    SubsManager = v;\n  }\n}, 5);\nvar Reaction;\nmodule.watch(require(\"./main\"), {\n  \"default\": function (v) {\n    Reaction = v;\n  }\n}, 6);\nvar Subscriptions = {};\n// Subscription Manager\n// See: https://github.com/kadirahq/subs-manager\nSubscriptions.Manager = new SubsManager();\nSubscriptions.Account = Subscriptions.Manager.subscribe(\"Accounts\", Meteor.userId());\n/*\n * Reaction.session\n * Create persistent sessions for users\n * The server returns only one record, so findOne will return that record\n * Stores into client session all data contained in server session\n * supports reactivity when server changes `newSession`\n * Stores the server session id into local storage / cookies\n *\n * Also localStorage session could be set from the client-side. This could\n * happen when user flush browser's cache, for example.\n * @see https://github.com/reactioncommerce/reaction/issues/609#issuecomment-166389252\n */\n\n/**\n * General Subscriptions\n */\n// Primary shop subscription\n\nSubscriptions.PrimaryShop = Subscriptions.Manager.subscribe(\"PrimaryShop\"); // Additional shop subscriptions\n\nSubscriptions.MerchantShops = Subscriptions.Manager.subscribe(\"MerchantShops\"); // This Packages subscription is used for the Active shop's packages\n// // Init sub here so we have a \"ready\" state\n\nSubscriptions.Packages = Subscriptions.Manager.subscribe(\"Packages\"); // This packages subscription is used for the Primary Shop's packages\n// The Packages publication defaults to returning the primaryShopId's packages,\n// so this subscription shouldn't ever need to be changed\n// TODO: Consider how to handle routes for several shops which are all active at once\n\nSubscriptions.PrimaryShopPackages = Subscriptions.Manager.subscribe(\"Packages\");\nSubscriptions.Tags = Subscriptions.Manager.subscribe(\"Tags\");\nSubscriptions.Groups = Subscriptions.Manager.subscribe(\"Groups\");\nSubscriptions.BrandAssets = Subscriptions.Manager.subscribe(\"BrandAssets\");\n/**\n * Subscriptions that need to reload on new sessions\n */\n\nTracker.autorun(function () {\n  // we are trying to track both amplify and Session.get here, but the problem\n  // is - we can't track amplify. It just not tracked. So, to track amplify we\n  // are using dirty hack inside Accounts.loginWithAnonymous method.\n  var sessionId = store.get(\"Reaction.session\");\n  var newSession;\n  Tracker.nonreactive(function () {\n    newSession = Random.id();\n  });\n\n  if (typeof sessionId !== \"string\") {\n    store.set(\"Reaction.session\", newSession);\n    Session.set(\"sessionId\", newSession);\n  }\n\n  if (typeof Session.get(\"sessionId\") !== \"string\") {\n    Session.set(\"sessionId\", store.get(\"Reaction.session\"));\n  }\n\n  Subscriptions.Sessions = Meteor.subscribe(\"Sessions\", Session.get(\"sessionId\"));\n}); // @see http://guide.meteor.com/data-loading.html#changing-arguments\n\nTracker.autorun(function () {\n  var sessionId; // we really don't need to track the sessionId here\n\n  Tracker.nonreactive(function () {\n    sessionId = Session.get(\"sessionId\");\n  });\n  Subscriptions.Cart = Subscriptions.Manager.subscribe(\"Cart\", sessionId, Meteor.userId());\n  Subscriptions.UserProfile = Meteor.subscribe(\"UserProfile\", Meteor.userId());\n});\nTracker.autorun(function () {\n  // Reload Packages sub if shopId changes\n  // We have a persistent subscription to the primary shop's packages,\n  // so don't refresh sub if we're updating to primaryShopId sub\n  if (Reaction.getShopId() && Reaction.getShopId() !== Reaction.getPrimaryShopId()) {\n    Subscriptions.Packages = Subscriptions.Manager.subscribe(\"Packages\", Reaction.getShopId());\n  }\n});","map":{"version":3,"sources":["client/modules/core/subscriptions.js"],"names":["module","export","Subscriptions","store","watch","require","v","Meteor","Random","Session","Tracker","SubsManager","Reaction","Manager","Account","subscribe","userId","PrimaryShop","MerchantShops","Packages","PrimaryShopPackages","Tags","Groups","BrandAssets","autorun","sessionId","get","newSession","nonreactive","id","set","Sessions","Cart","UserProfile","getShopId","getPrimaryShopId"],"mappings":"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","sourcesContent":["import store from \"store\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { Session } from \"meteor/session\";\nimport { Tracker } from \"meteor/tracker\";\nimport { SubsManager } from \"meteor/meteorhacks:subs-manager\";\nimport Reaction from \"./main\";\n\nexport const Subscriptions = {};\n\n// Subscription Manager\n// See: https://github.com/kadirahq/subs-manager\nSubscriptions.Manager = new SubsManager();\n\nSubscriptions.Account = Subscriptions.Manager.subscribe(\"Accounts\", Meteor.userId());\n\n/*\n * Reaction.session\n * Create persistent sessions for users\n * The server returns only one record, so findOne will return that record\n * Stores into client session all data contained in server session\n * supports reactivity when server changes `newSession`\n * Stores the server session id into local storage / cookies\n *\n * Also localStorage session could be set from the client-side. This could\n * happen when user flush browser's cache, for example.\n * @see https://github.com/reactioncommerce/reaction/issues/609#issuecomment-166389252\n */\n\n/**\n * General Subscriptions\n */\n\n// Primary shop subscription\nSubscriptions.PrimaryShop = Subscriptions.Manager.subscribe(\"PrimaryShop\");\n\n// Additional shop subscriptions\nSubscriptions.MerchantShops = Subscriptions.Manager.subscribe(\"MerchantShops\");\n\n// This Packages subscription is used for the Active shop's packages\n// // Init sub here so we have a \"ready\" state\nSubscriptions.Packages = Subscriptions.Manager.subscribe(\"Packages\");\n\n// This packages subscription is used for the Primary Shop's packages\n// The Packages publication defaults to returning the primaryShopId's packages,\n// so this subscription shouldn't ever need to be changed\n// TODO: Consider how to handle routes for several shops which are all active at once\nSubscriptions.PrimaryShopPackages = Subscriptions.Manager.subscribe(\"Packages\");\n\nSubscriptions.Tags = Subscriptions.Manager.subscribe(\"Tags\");\n\nSubscriptions.Groups = Subscriptions.Manager.subscribe(\"Groups\");\n\nSubscriptions.BrandAssets = Subscriptions.Manager.subscribe(\"BrandAssets\");\n\n/**\n * Subscriptions that need to reload on new sessions\n */\nTracker.autorun(() => {\n  // we are trying to track both amplify and Session.get here, but the problem\n  // is - we can't track amplify. It just not tracked. So, to track amplify we\n  // are using dirty hack inside Accounts.loginWithAnonymous method.\n  const sessionId = store.get(\"Reaction.session\");\n  let newSession;\n  Tracker.nonreactive(() => {\n    newSession = Random.id();\n  });\n  if (typeof sessionId !== \"string\") {\n    store.set(\"Reaction.session\", newSession);\n    Session.set(\"sessionId\", newSession);\n  }\n  if (typeof Session.get(\"sessionId\") !== \"string\") {\n    Session.set(\"sessionId\", store.get(\"Reaction.session\"));\n  }\n  Subscriptions.Sessions = Meteor.subscribe(\"Sessions\", Session.get(\"sessionId\"));\n});\n\n// @see http://guide.meteor.com/data-loading.html#changing-arguments\nTracker.autorun(() => {\n  let sessionId;\n  // we really don't need to track the sessionId here\n  Tracker.nonreactive(() => {\n    sessionId = Session.get(\"sessionId\");\n  });\n  Subscriptions.Cart = Subscriptions.Manager.subscribe(\"Cart\", sessionId, Meteor.userId());\n  Subscriptions.UserProfile = Meteor.subscribe(\"UserProfile\", Meteor.userId());\n});\n\nTracker.autorun(() => {\n  // Reload Packages sub if shopId changes\n  // We have a persistent subscription to the primary shop's packages,\n  // so don't refresh sub if we're updating to primaryShopId sub\n  if (Reaction.getShopId() && Reaction.getShopId() !== Reaction.getPrimaryShopId()) {\n    Subscriptions.Packages = Subscriptions.Manager.subscribe(\"Packages\", Reaction.getShopId());\n  }\n});\n"]},"sourceType":"script","hash":"9978ec1be8c818f598e098b3545d7bfcf367df42"}
