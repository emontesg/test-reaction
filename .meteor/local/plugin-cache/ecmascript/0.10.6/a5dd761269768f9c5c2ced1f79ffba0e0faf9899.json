{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui/client/containers/sortableItem.js","filename":"imports/plugins/core/ui/client/containers/sortableItem.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui/client/containers/sortableItem.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui/client/containers/sortableItem.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui/client/containers/sortableItem.js"}},"code":"module.export({\n  \"default\": function () {\n    return ComposeSortableItem;\n  }\n});\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar DragSource, DropTarget;\nmodule.watch(require(\"react-dnd\"), {\n  DragSource: function (v) {\n    DragSource = v;\n  },\n  DropTarget: function (v) {\n    DropTarget = v;\n  }\n}, 2);\n\n/**\n * Specifies the props to inject into your component.\n * @param {DragSourceConnector} connect An onject containing functions to assign roles to a component's DOM nodes\n * @param {DragSourceMonitor} monitor An object containing functions that return information about drag state\n * @return {Object} Props for drag source\n */\nfunction collectDropSource(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction collectDropTarget(connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n}\n\nvar cardSource = {\n  beginDrag: function (props) {\n    var index = props.index;\n    return {\n      index: index\n    };\n  }\n};\nvar cardTarget = {\n  hover: function (props, monitor) {\n    var dragIndex = monitor.getItem().index;\n    var hoverIndex = props.index; // Don't replace items with themselves\n\n    if (dragIndex === hoverIndex) {\n      return;\n    } // Time to actually perform the action\n\n\n    props.onMove(dragIndex, hoverIndex); // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n\n    monitor.getItem().index = hoverIndex;\n  },\n  drop: function (props) {\n    if (typeof props.onDrop === \"function\") props.onDrop();\n  }\n};\n\nfunction ComposeSortableItem(itemType) {\n  return function (SortableItemComponent) {\n    var SortableItem = function (props) {\n      return React.createElement(SortableItemComponent, props);\n    };\n\n    SortableItem.contextTypes = {\n      dragDropManager: PropTypes.object.isRequired\n    };\n    SortableItem.propTypes = {\n      // Injected by React DnD:\n      connectDragSource: PropTypes.func.isRequired,\n      connectDropTarget: PropTypes.func.isRequired,\n      isDragging: PropTypes.bool.isRequired\n    };\n    var decoratedComponent = SortableItem;\n    decoratedComponent = DragSource(itemType, cardSource, collectDropSource)(decoratedComponent);\n    decoratedComponent = DropTarget(itemType, cardTarget, collectDropTarget)(decoratedComponent);\n    return decoratedComponent;\n  };\n}","map":{"version":3,"sources":["imports/plugins/core/ui/client/containers/sortableItem.js"],"names":["module","export","ComposeSortableItem","React","watch","require","v","PropTypes","DragSource","DropTarget","collectDropSource","connect","monitor","connectDragSource","dragSource","isDragging","collectDropTarget","connectDropTarget","dropTarget","cardSource","beginDrag","props","index","cardTarget","hover","dragIndex","getItem","hoverIndex","onMove","drop","onDrop","itemType","SortableItemComponent","SortableItem","contextTypes","dragDropManager","object","isRequired","propTypes","func","bool","decoratedComponent"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAAC,aAAQ;AAAA,WAAIC,mBAAJ;AAAA;AAAT,CAAd;AAAiD,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,SAAJ;AAAcP,OAAOI,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,UAAJ,EAAeC,UAAf;AAA0BT,OAAOI,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACG,YAAD,YAAYF,CAAZ,EAAc;AAACE,iBAAWF,CAAX;AAAa,GAA5B;AAA6BG,YAA7B,YAAwCH,CAAxC,EAA0C;AAACG,iBAAWH,CAAX;AAAa;AAAxD,CAAlC,EAA4F,CAA5F;;AAI1N;;;;;;AAMA,SAASI,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AAC3C,SAAO;AACLC,uBAAmBF,QAAQG,UAAR,EADd;AAELC,gBAAYH,QAAQG,UAAR;AAFP,GAAP;AAID;;AAED,SAASC,iBAAT,CAA2BL,OAA3B,EAAoC;AAClC,SAAO;AACLM,uBAAmBN,QAAQO,UAAR;AADd,GAAP;AAGD;;AAED,IAAMC,aAAa;AACjBC,WADiB,YACPC,KADO,EACA;AAAA,QACPC,KADO,GACGD,KADH,CACPC,KADO;AAEf,WAAO;AACLA;AADK,KAAP;AAGD;AANgB,CAAnB;AASA,IAAMC,aAAa;AACjBC,OADiB,YACXH,KADW,EACJT,OADI,EACK;AACpB,QAAMa,YAAYb,QAAQc,OAAR,GAAkBJ,KAApC;AACA,QAAMK,aAAaN,MAAMC,KAAzB,CAFoB,CAIpB;;AACA,QAAIG,cAAcE,UAAlB,EAA8B;AAC5B;AACD,KAPmB,CASpB;;;AACAN,UAAMO,MAAN,CAAaH,SAAb,EAAwBE,UAAxB,EAVoB,CAYpB;AACA;AACA;AACA;;AACAf,YAAQc,OAAR,GAAkBJ,KAAlB,GAA0BK,UAA1B;AACD,GAlBgB;AAmBjBE,MAnBiB,YAmBZR,KAnBY,EAmBL;AACV,QAAI,OAAOA,MAAMS,MAAb,KAAwB,UAA5B,EAAwCT,MAAMS,MAAN;AACzC;AArBgB,CAAnB;;AAwBe,SAAS5B,mBAAT,CAA6B6B,QAA7B,EAAuC;AACpD,SAAO,UAAUC,qBAAV,EAAiC;AACtC,QAAMC,eAAe,UAACZ,KAAD;AAAA,aAAW,oBAAC,qBAAD,EAA2BA,KAA3B,CAAX;AAAA,KAArB;;AAEAY,iBAAaC,YAAb,GAA4B;AAC1BC,uBAAiB5B,UAAU6B,MAAV,CAAiBC;AADR,KAA5B;AAIAJ,iBAAaK,SAAb,GAAyB;AACvB;AACAzB,yBAAmBN,UAAUgC,IAAV,CAAeF,UAFX;AAGvBpB,yBAAmBV,UAAUgC,IAAV,CAAeF,UAHX;AAIvBtB,kBAAYR,UAAUiC,IAAV,CAAeH;AAJJ,KAAzB;AAOA,QAAII,qBAAqBR,YAAzB;AACAQ,yBAAqBjC,WAAWuB,QAAX,EAAqBZ,UAArB,EAAiCT,iBAAjC,EAAoD+B,kBAApD,CAArB;AACAA,yBAAqBhC,WAAWsB,QAAX,EAAqBR,UAArB,EAAiCP,iBAAjC,EAAoDyB,kBAApD,CAArB;AAEA,WAAOA,kBAAP;AACD,GAnBD;AAoBD","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragSource, DropTarget } from \"react-dnd\";\n\n/**\n * Specifies the props to inject into your component.\n * @param {DragSourceConnector} connect An onject containing functions to assign roles to a component's DOM nodes\n * @param {DragSourceMonitor} monitor An object containing functions that return information about drag state\n * @return {Object} Props for drag source\n */\nfunction collectDropSource(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction collectDropTarget(connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n}\n\nconst cardSource = {\n  beginDrag(props) {\n    const { index } = props;\n    return {\n      index\n    };\n  }\n};\n\nconst cardTarget = {\n  hover(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.onMove(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n  drop(props) {\n    if (typeof props.onDrop === \"function\") props.onDrop();\n  }\n};\n\nexport default function ComposeSortableItem(itemType) {\n  return function (SortableItemComponent) {\n    const SortableItem = (props) => <SortableItemComponent {...props} />;\n\n    SortableItem.contextTypes = {\n      dragDropManager: PropTypes.object.isRequired\n    };\n\n    SortableItem.propTypes = {\n      // Injected by React DnD:\n      connectDragSource: PropTypes.func.isRequired,\n      connectDropTarget: PropTypes.func.isRequired,\n      isDragging: PropTypes.bool.isRequired\n    };\n\n    let decoratedComponent = SortableItem;\n    decoratedComponent = DragSource(itemType, cardSource, collectDropSource)(decoratedComponent);\n    decoratedComponent = DropTarget(itemType, cardTarget, collectDropTarget)(decoratedComponent);\n\n    return decoratedComponent;\n  };\n}\n"]},"sourceType":"script","hash":"a5dd761269768f9c5c2ced1f79ffba0e0faf9899"}
