{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/dom/client/dom.js","filename":"imports/plugins/core/dom/client/dom.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/dom/client/dom.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/dom/client/dom.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/dom/client/dom.js"}},"code":"/**\n * @file Exposes the DOM object used to manipulate the document.\n * The functions are only meant to be used on the client.\n * @namespace DOM\n */\nvar DOM = {};\n/**\n * @method setMetaTag\n * @memberof DOM\n * @summary Sets/adds a meta tag to the document head\n * @param {Object} attributes - key/value pairs for tag attributes\n * @return {undefined} no return value\n */\n\nDOM.setMetaTag = function (attributes) {\n  var currentMetaTag = document.querySelector(\"meta[name=\\\"\" + attributes.name + \"\\\"]\"); // If tag exists, just update its content attribute\n\n  if (currentMetaTag) {\n    currentMetaTag.setAttribute(\"content\", attributes.content);\n    currentMetaTag.setAttribute(\"data-metatag\", \"1\");\n    return;\n  } // Otherwise, create a new meta tag element\n\n\n  var newMetaTag = document.createElement(\"meta\");\n  newMetaTag.setAttribute(\"name\", attributes.name);\n  newMetaTag.setAttribute(\"content\", attributes.content); // This attribute will be used to remove meta tags on route changes.\n\n  newMetaTag.setAttribute(\"data-metatag\", \"1\"); // Append to document head\n\n  document.head.appendChild(newMetaTag);\n};\n/**\n * @method addLinkTag\n * @memberof DOM\n * @summary Adds a link tags to the document head\n * @param {Object} attributes - key/value pairs for tag attributes\n * @return {undefined} no return value\n */\n\n\nDOM.addLinkTag = function (attributes) {\n  var newLinkTag = document.createElement(\"link\");\n\n  for (var key in meteorBabelHelpers.sanitizeForInObject(attributes)) {\n    if ({}.hasOwnProperty.call(attributes, key)) {\n      newLinkTag.setAttribute(key, attributes[key]);\n    }\n  }\n\n  document.head.appendChild(newLinkTag);\n};\n/**\n * @method removeDocHeadAddedTags\n * @memberof DOM\n * @summary Removes document head tags\n * @returns {undefined} no return value\n */\n\n\nDOM.removeDocHeadAddedTags = function () {\n  var elements = document.querySelectorAll(\"[data-metatag='1']\");\n\n  for (var _iterator = elements, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _element = _ref;\n\n    _element.parentNode.removeChild(_element);\n  }\n};\n\nmodule.exportDefault(DOM);","map":{"version":3,"sources":["imports/plugins/core/dom/client/dom.js"],"names":["DOM","setMetaTag","attributes","currentMetaTag","document","querySelector","name","setAttribute","content","newMetaTag","createElement","head","appendChild","addLinkTag","newLinkTag","key","hasOwnProperty","call","removeDocHeadAddedTags","elements","querySelectorAll","element","parentNode","removeChild","module","exportDefault"],"mappings":"AAAA;;;;;AAMA,IAAMA,MAAM,EAAZ;AAEA;;;;;;;;AAOAA,IAAIC,UAAJ,GAAiB,UAACC,UAAD,EAAgB;AAC/B,MAAMC,iBAAiBC,SAASC,aAAT,kBAAqCH,WAAWI,IAAhD,SAAvB,CAD+B,CAG/B;;AACA,MAAIH,cAAJ,EAAoB;AAClBA,mBAAeI,YAAf,CAA4B,SAA5B,EAAuCL,WAAWM,OAAlD;AACAL,mBAAeI,YAAf,CAA4B,cAA5B,EAA4C,GAA5C;AACA;AACD,GAR8B,CAU/B;;;AACA,MAAME,aAAaL,SAASM,aAAT,CAAuB,MAAvB,CAAnB;AAEAD,aAAWF,YAAX,CAAwB,MAAxB,EAAgCL,WAAWI,IAA3C;AACAG,aAAWF,YAAX,CAAwB,SAAxB,EAAmCL,WAAWM,OAA9C,EAd+B,CAe/B;;AACAC,aAAWF,YAAX,CAAwB,cAAxB,EAAwC,GAAxC,EAhB+B,CAkB/B;;AACAH,WAASO,IAAT,CAAcC,WAAd,CAA0BH,UAA1B;AACD,CApBD;AAsBA;;;;;;;;;AAOAT,IAAIa,UAAJ,GAAiB,UAACX,UAAD,EAAgB;AAC/B,MAAMY,aAAaV,SAASM,aAAT,CAAuB,MAAvB,CAAnB;;AAEA,OAAK,IAAMK,GAAX,2CAAkBb,UAAlB,GAA8B;AAC5B,QAAI,GAAGc,cAAH,CAAkBC,IAAlB,CAAuBf,UAAvB,EAAmCa,GAAnC,CAAJ,EAA6C;AAC3CD,iBAAWP,YAAX,CAAwBQ,GAAxB,EAA6Bb,WAAWa,GAAX,CAA7B;AACD;AACF;;AAEDX,WAASO,IAAT,CAAcC,WAAd,CAA0BE,UAA1B;AACD,CAVD;AAYA;;;;;;;;AAMAd,IAAIkB,sBAAJ,GAA6B,YAAM;AACjC,MAAMC,WAAWf,SAASgB,gBAAT,CAA0B,oBAA1B,CAAjB;;AACA,uBAAsBD,QAAtB,kHAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QAArBE,QAAqB;;AAC9BA,aAAQC,UAAR,CAAmBC,WAAnB,CAA+BF,QAA/B;AACD;AACF,CALD;;AA9DAG,OAAOC,aAAP,CAqEezB,GArEf","sourcesContent":["/**\n * @file Exposes the DOM object used to manipulate the document.\n * The functions are only meant to be used on the client.\n * @namespace DOM\n */\n\nconst DOM = {};\n\n/**\n * @method setMetaTag\n * @memberof DOM\n * @summary Sets/adds a meta tag to the document head\n * @param {Object} attributes - key/value pairs for tag attributes\n * @return {undefined} no return value\n */\nDOM.setMetaTag = (attributes) => {\n  const currentMetaTag = document.querySelector(`meta[name=\"${attributes.name}\"]`);\n\n  // If tag exists, just update its content attribute\n  if (currentMetaTag) {\n    currentMetaTag.setAttribute(\"content\", attributes.content);\n    currentMetaTag.setAttribute(\"data-metatag\", \"1\");\n    return;\n  }\n\n  // Otherwise, create a new meta tag element\n  const newMetaTag = document.createElement(\"meta\");\n\n  newMetaTag.setAttribute(\"name\", attributes.name);\n  newMetaTag.setAttribute(\"content\", attributes.content);\n  // This attribute will be used to remove meta tags on route changes.\n  newMetaTag.setAttribute(\"data-metatag\", \"1\");\n\n  // Append to document head\n  document.head.appendChild(newMetaTag);\n};\n\n/**\n * @method addLinkTag\n * @memberof DOM\n * @summary Adds a link tags to the document head\n * @param {Object} attributes - key/value pairs for tag attributes\n * @return {undefined} no return value\n */\nDOM.addLinkTag = (attributes) => {\n  const newLinkTag = document.createElement(\"link\");\n\n  for (const key in attributes) {\n    if ({}.hasOwnProperty.call(attributes, key)) {\n      newLinkTag.setAttribute(key, attributes[key]);\n    }\n  }\n\n  document.head.appendChild(newLinkTag);\n};\n\n/**\n * @method removeDocHeadAddedTags\n * @memberof DOM\n * @summary Removes document head tags\n * @returns {undefined} no return value\n */\nDOM.removeDocHeadAddedTags = () => {\n  const elements = document.querySelectorAll(\"[data-metatag='1']\");\n  for (const element of elements) {\n    element.parentNode.removeChild(element);\n  }\n};\n\nexport default DOM;\n"]},"sourceType":"script","hash":"ae2b5aca052ce257a182f7eee955f1ff3ad2fba7"}
