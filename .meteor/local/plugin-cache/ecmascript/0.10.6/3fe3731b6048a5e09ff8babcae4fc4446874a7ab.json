{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/accounts/client/templates/profile/profile.js","filename":"imports/plugins/core/accounts/client/templates/profile/profile.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/accounts/client/templates/profile/profile.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/accounts/client/templates/profile/profile.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/accounts/client/templates/profile/profile.js"}},"code":"var Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 2);\nvar i18next, Reaction;\nmodule.watch(require(\"../../../../../../../client/api\"), {\n  i18next: function (v) {\n    i18next = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 3);\nvar Collections;\nmodule.watch(require(\"../../../../../../../lib/collections\"), {\n  \"*\": function (v) {\n    Collections = v;\n  }\n}, 4);\nvar Components;\nmodule.watch(require(\"../../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  }\n}, 5);\n\n/**\n * @method isOwnerOfProfile\n * @summary checks whether or not the user viewing this profile is also\n * its owner.\n * @since 1.5.0\n * @return {Boolean} - whether or not the current user is also this\n * profile's owner.\n */\nfunction isOwnerOfProfile() {\n  var targetUserId = Reaction.Router.getQueryParam(\"userId\");\n  var loggedInUserId = Meteor.userId();\n  return targetUserId === undefined || targetUserId === loggedInUserId;\n}\n/**\n * @method getTargetAccount\n * @summary gets the account of the userId in the route, or the current user.\n * @since 1.5.0\n * @return {Object} - the account of the identified user.\n */\n\n\nfunction getTargetAccount() {\n  var targetUserId = Reaction.Router.getQueryParam(\"userId\") || Meteor.userId();\n  var account = Collections.Accounts.findOne(targetUserId);\n  return account;\n}\n/**\n * onCreated: Account Profile View\n */\n\n\nTemplate.accountProfile.onCreated(function () {\n  var template = Template.instance();\n  template.userHasPassword = ReactiveVar(false);\n  Meteor.call(\"accounts/currentUserHasPassword\", function (error, result) {\n    template.userHasPassword.set(result);\n  }); // hide actionView if open, doesn't relate to profile page\n\n  Reaction.hideActionView();\n});\n/**\n * Helpers: Account Profile View\n */\n\nTemplate.accountProfile.helpers({\n  /**\n   * @method doesUserExist\n   * @summary confirms that a given userId belongs to an existing user.\n   * @since 1.5.0\n   * @return {Boolean} - whether or not a user with a given ID exists.\n   */\n  doesUserExist: function () {\n    var targetUserId = Reaction.Router.getQueryParam(\"userId\");\n\n    if (!targetUserId) {\n      // If userId isn't in this route's query parameters, then a user\n      // is viewing his/her own profile.\n      return true;\n    }\n\n    var targetUser = Collections.Accounts.findOne(targetUserId);\n    return targetUser !== undefined;\n  },\n\n  /**\n   * @method isOwnerOfProfile\n   * @summary checks whether or not the user viewing this profile is also\n   * its owner.\n   * @since 1.5.0\n   * @return {Boolean} - whether or not the current user is also this\n   * profile's owner.\n   */\n  isOwnerOfProfile: function () {\n    return isOwnerOfProfile();\n  },\n\n  /**\n   * @method UpdateEmail\n   * @summary returns a component for updating a user's email.\n   * @since 1.5.0\n   * @return {Object} - contains the component for updating a user's email.\n   */\n  UpdateEmail: function () {\n    return {\n      component: Components.UpdateEmail\n    };\n  },\n\n  /**\n   * @method ReactionAvatar\n   * @summary returns a component that displays a user's avatar.\n   * @since 1.5.0\n   * @return {Object} - contains the component that displays a user's avatar.\n   */\n  ReactionAvatar: function () {\n    var account = Collections.Accounts.findOne({\n      _id: Meteor.userId()\n    });\n\n    if (account && account.profile && account.profile.picture) {\n      var picture = account.profile.picture;\n      return {\n        component: Components.ReactionAvatar,\n        currentUser: true,\n        src: picture\n      };\n    }\n\n    return {\n      component: Components.ReactionAvatar,\n      currentUser: true\n    };\n  },\n\n  /**\n   * @method AddressBook\n   * @summary returns a component for updating a user's address.\n   * @since 2.0.0\n   * @return {Object} - contains the component for updating a user's address.\n   */\n  AddressBook: function () {\n    return {\n      component: Components.AddressBook\n    };\n  },\n\n  /**\n   * @method userHasPassword\n   * @summary checks whether a user has set a password for his/her account.\n   * @since 1.5.0\n   * @return {Boolean} - returns true if the current user has a password\n   * and false if otherwise.\n   */\n  userHasPassword: function () {\n    return Template.instance().userHasPassword.get();\n  },\n\n  /**\n   * @method userOrders\n   * @summary returns a user's order history, up to the 25 most recent ones.\n   * @since 1.5.0\n   * @return {Array|null} - an array of a user's orders.\n   */\n  userOrders: function () {\n    var targetUserId = Reaction.Router.getQueryParam(\"userId\") || Meteor.userId();\n    var orderSub = Meteor.subscribe(\"AccountOrders\", targetUserId);\n\n    if (orderSub.ready()) {\n      return Collections.Orders.find({\n        userId: targetUserId\n      }, {\n        sort: {\n          createdAt: -1\n        },\n        limit: 25\n      });\n    }\n  },\n\n  /**\n   * @method displayName\n   * @summary returns the name of a user.\n   * @since 1.5.0\n   * @return {String} - the name of a given user.\n   */\n  displayName: function () {\n    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {\n      var account = getTargetAccount();\n\n      if (account) {\n        if (account.name) {\n          return account.name;\n        } else if (account.username) {\n          return account.username;\n        } else if (account.profile && account.profile.name) {\n          return account.profile.name;\n        }\n      }\n    }\n\n    if (Reaction.hasPermission(\"account/profile\")) {\n      return i18next.t(\"accountsUI.guest\", {\n        defaultValue: \"Guest\"\n      });\n    }\n  },\n\n  /**\n   * @method displayEmail\n   * @summary returns a user's email.\n   * @since 1.5.0\n   * @return {String} - the email of a given user.\n   */\n  displayEmail: function () {\n    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {\n      var account = getTargetAccount();\n\n      if (account && Array.isArray(account.emails)) {\n        var defaultEmail = account.emails.find(function (email) {\n          return email.provides === \"default\";\n        });\n        return defaultEmail && defaultEmail.address || account.emails[0].address;\n      }\n    }\n  },\n\n  /**\n   * @method showMerchantSignup\n   * @summary determines whether or not to show the button for signing up\n   * as a merchant/seller.\n   * @since 1.5.0\n   * @return {Boolean} - true if the merchant signup button is to be shown,\n   * and false if otherwise.\n   */\n  showMerchantSignup: function () {\n    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {\n      var account = Collections.Accounts.findOne({\n        _id: Meteor.userId()\n      });\n      var marketplaceEnabled = Reaction.marketplace && Reaction.marketplace.enabled === true;\n      var allowMerchantSignup = Reaction.marketplace && Reaction.marketplace.allowMerchantSignup === true; // A user has the primaryShopId until a shop is created for them.\n\n      var userHasShop = account.shopId !== Reaction.getPrimaryShopId();\n      return marketplaceEnabled && allowMerchantSignup && !userHasShop;\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["imports/plugins/core/accounts/client/templates/profile/profile.js"],"names":["Meteor","module","watch","require","v","Template","ReactiveVar","i18next","Reaction","Collections","Components","isOwnerOfProfile","targetUserId","Router","getQueryParam","loggedInUserId","userId","undefined","getTargetAccount","account","Accounts","findOne","accountProfile","onCreated","template","instance","userHasPassword","call","error","result","set","hideActionView","helpers","doesUserExist","targetUser","UpdateEmail","component","ReactionAvatar","_id","profile","picture","currentUser","src","AddressBook","get","userOrders","orderSub","subscribe","ready","Orders","find","sort","createdAt","limit","displayName","Subscriptions","Account","name","username","hasPermission","t","defaultValue","displayEmail","Array","isArray","emails","defaultEmail","email","provides","address","showMerchantSignup","marketplaceEnabled","marketplace","enabled","allowMerchantSignup","userHasShop","shopId","getPrimaryShopId"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { i18next, Reaction } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport { Components } from \"@reactioncommerce/reaction-components\";\n\n/**\n * @method isOwnerOfProfile\n * @summary checks whether or not the user viewing this profile is also\n * its owner.\n * @since 1.5.0\n * @return {Boolean} - whether or not the current user is also this\n * profile's owner.\n */\nfunction isOwnerOfProfile() {\n  const targetUserId = Reaction.Router.getQueryParam(\"userId\");\n  const loggedInUserId = Meteor.userId();\n  return targetUserId === undefined || targetUserId === loggedInUserId;\n}\n\n/**\n * @method getTargetAccount\n * @summary gets the account of the userId in the route, or the current user.\n * @since 1.5.0\n * @return {Object} - the account of the identified user.\n */\nfunction getTargetAccount() {\n  const targetUserId = Reaction.Router.getQueryParam(\"userId\") || Meteor.userId();\n  const account = Collections.Accounts.findOne(targetUserId);\n\n  return account;\n}\n\n/**\n * onCreated: Account Profile View\n */\nTemplate.accountProfile.onCreated(() => {\n  const template = Template.instance();\n\n  template.userHasPassword = ReactiveVar(false);\n\n  Meteor.call(\"accounts/currentUserHasPassword\", (error, result) => {\n    template.userHasPassword.set(result);\n  });\n  // hide actionView if open, doesn't relate to profile page\n  Reaction.hideActionView();\n});\n\n/**\n * Helpers: Account Profile View\n */\nTemplate.accountProfile.helpers({\n  /**\n   * @method doesUserExist\n   * @summary confirms that a given userId belongs to an existing user.\n   * @since 1.5.0\n   * @return {Boolean} - whether or not a user with a given ID exists.\n   */\n  doesUserExist() {\n    const targetUserId = Reaction.Router.getQueryParam(\"userId\");\n    if (!targetUserId) {\n      // If userId isn't in this route's query parameters, then a user\n      // is viewing his/her own profile.\n      return true;\n    }\n    const targetUser = Collections.Accounts.findOne(targetUserId);\n    return targetUser !== undefined;\n  },\n\n  /**\n   * @method isOwnerOfProfile\n   * @summary checks whether or not the user viewing this profile is also\n   * its owner.\n   * @since 1.5.0\n   * @return {Boolean} - whether or not the current user is also this\n   * profile's owner.\n   */\n  isOwnerOfProfile() {\n    return isOwnerOfProfile();\n  },\n\n  /**\n   * @method UpdateEmail\n   * @summary returns a component for updating a user's email.\n   * @since 1.5.0\n   * @return {Object} - contains the component for updating a user's email.\n   */\n  UpdateEmail() {\n    return {\n      component: Components.UpdateEmail\n    };\n  },\n\n  /**\n   * @method ReactionAvatar\n   * @summary returns a component that displays a user's avatar.\n   * @since 1.5.0\n   * @return {Object} - contains the component that displays a user's avatar.\n   */\n  ReactionAvatar() {\n    const account = Collections.Accounts.findOne({ _id: Meteor.userId() });\n    if (account && account.profile && account.profile.picture) {\n      const { picture } = account.profile;\n      return {\n        component: Components.ReactionAvatar,\n        currentUser: true,\n        src: picture\n      };\n    }\n    return {\n      component: Components.ReactionAvatar,\n      currentUser: true\n    };\n  },\n\n  /**\n   * @method AddressBook\n   * @summary returns a component for updating a user's address.\n   * @since 2.0.0\n   * @return {Object} - contains the component for updating a user's address.\n   */\n  AddressBook() {\n    return {\n      component: Components.AddressBook\n    };\n  },\n\n  /**\n   * @method userHasPassword\n   * @summary checks whether a user has set a password for his/her account.\n   * @since 1.5.0\n   * @return {Boolean} - returns true if the current user has a password\n   * and false if otherwise.\n   */\n  userHasPassword() {\n    return Template.instance().userHasPassword.get();\n  },\n\n  /**\n   * @method userOrders\n   * @summary returns a user's order history, up to the 25 most recent ones.\n   * @since 1.5.0\n   * @return {Array|null} - an array of a user's orders.\n   */\n  userOrders() {\n    const targetUserId = Reaction.Router.getQueryParam(\"userId\") || Meteor.userId();\n    const orderSub = Meteor.subscribe(\"AccountOrders\", targetUserId);\n    if (orderSub.ready()) {\n      return Collections.Orders.find({\n        userId: targetUserId\n      }, {\n        sort: {\n          createdAt: -1\n        },\n        limit: 25\n      });\n    }\n  },\n\n  /**\n   * @method displayName\n   * @summary returns the name of a user.\n   * @since 1.5.0\n   * @return {String} - the name of a given user.\n   */\n  displayName() {\n    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {\n      const account = getTargetAccount();\n\n      if (account) {\n        if (account.name) {\n          return account.name;\n        } else if (account.username) {\n          return account.username;\n        } else if (account.profile && account.profile.name) {\n          return account.profile.name;\n        }\n      }\n    }\n\n    if (Reaction.hasPermission(\"account/profile\")) {\n      return i18next.t(\"accountsUI.guest\", { defaultValue: \"Guest\" });\n    }\n  },\n\n  /**\n   * @method displayEmail\n   * @summary returns a user's email.\n   * @since 1.5.0\n   * @return {String} - the email of a given user.\n   */\n  displayEmail() {\n    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {\n      const account = getTargetAccount();\n\n      if (account && Array.isArray(account.emails)) {\n        const defaultEmail = account.emails.find((email) => email.provides === \"default\");\n        return (defaultEmail && defaultEmail.address) || account.emails[0].address;\n      }\n    }\n  },\n\n  /**\n   * @method showMerchantSignup\n   * @summary determines whether or not to show the button for signing up\n   * as a merchant/seller.\n   * @since 1.5.0\n   * @return {Boolean} - true if the merchant signup button is to be shown,\n   * and false if otherwise.\n   */\n  showMerchantSignup() {\n    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {\n      const account = Collections.Accounts.findOne({ _id: Meteor.userId() });\n      const marketplaceEnabled = Reaction.marketplace && Reaction.marketplace.enabled === true;\n      const allowMerchantSignup = Reaction.marketplace && Reaction.marketplace.allowMerchantSignup === true;\n      // A user has the primaryShopId until a shop is created for them.\n      const userHasShop = account.shopId !== Reaction.getPrimaryShopId();\n      return marketplaceEnabled && allowMerchantSignup && !userHasShop;\n    }\n    return false;\n  }\n});\n"]},"sourceType":"script","hash":"3fe3731b6048a5e09ff8babcae4fc4446874a7ab"}
