{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/orders/server/startup.js","filename":"imports/plugins/core/orders/server/startup.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/orders/server/startup.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/orders/server/startup.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/orders/server/startup.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Hooks;\nmodule.watch(require(\"../../../../../server/api\"), {\n  Hooks(v) {\n    Hooks = v;\n  }\n\n}, 1);\n\n/**\n*  Step 3 of the \"workflow/pushOrderWorkflow\" flow\n*\n*  The following methods are called from Orders.before.update hook.\n*  @see packages/reaction-schema/common/hooks/orders.js\n*  @see packages/reaction-core/common/methods/workflow.js\n*/\n\n/**\n * @method beforeUpdateOrderWorkflow hook\n *\n * @summary Updates an order's workflow before persisting order.\n *\n * @param {Order} order - Order object, before any modifications\n * @param {Object} options - Includes userId, modifier and validation\n * @return {Boolean} true if document should be updated, false otherwise\n*/\nHooks.Events.add(\"beforeUpdateOrderWorkflow\", (order, options) => {\n  const {\n    userId,\n    modifier\n  } = options; // if we're adding a new product or variant to the cart\n\n  if (modifier.$set) {\n    // Updating status of order e.g. \"coreOrderWorkflow/processing\"\n    if (modifier.$set[\"workflow.status\"]) {\n      const status = modifier.$set[\"workflow.status\"];\n      const workflowMethod = `workflow/${status}`;\n\n      if (Meteor.server.method_handlers[workflowMethod]) {\n        const result = Meteor.call(workflowMethod, {\n          userId,\n          order,\n          modifier\n        }); // Result should be true / false to all or disallow updating the status\n\n        return result;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["imports/plugins/core/orders/server/startup.js"],"names":["Meteor","module","watch","require","v","Hooks","Events","add","order","options","userId","modifier","$set","status","workflowMethod","server","method_handlers","result","call"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAAlD,EAAsE,CAAtE;;AAIpF;;;;;;;;AAQA;;;;;;;;;AASAC,MAAMC,MAAN,CAAaC,GAAb,CAAiB,2BAAjB,EAA8C,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAChE,QAAM;AAAEC,UAAF;AAAUC;AAAV,MAAuBF,OAA7B,CADgE,CAEhE;;AACA,MAAIE,SAASC,IAAb,EAAmB;AACjB;AACA,QAAID,SAASC,IAAT,CAAc,iBAAd,CAAJ,EAAsC;AACpC,YAAMC,SAASF,SAASC,IAAT,CAAc,iBAAd,CAAf;AACA,YAAME,iBAAkB,YAAWD,MAAO,EAA1C;;AAEA,UAAIb,OAAOe,MAAP,CAAcC,eAAd,CAA8BF,cAA9B,CAAJ,EAAmD;AACjD,cAAMG,SAASjB,OAAOkB,IAAP,CAAYJ,cAAZ,EAA4B;AACzCJ,gBADyC;AAEzCF,eAFyC;AAGzCG;AAHyC,SAA5B,CAAf,CADiD,CAMjD;;AACA,eAAOM,MAAP;AACD;AACF;AACF;AACF,CApBD","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Hooks } from \"/server/api\";\n\n\n/**\n*  Step 3 of the \"workflow/pushOrderWorkflow\" flow\n*\n*  The following methods are called from Orders.before.update hook.\n*  @see packages/reaction-schema/common/hooks/orders.js\n*  @see packages/reaction-core/common/methods/workflow.js\n*/\n\n/**\n * @method beforeUpdateOrderWorkflow hook\n *\n * @summary Updates an order's workflow before persisting order.\n *\n * @param {Order} order - Order object, before any modifications\n * @param {Object} options - Includes userId, modifier and validation\n * @return {Boolean} true if document should be updated, false otherwise\n*/\nHooks.Events.add(\"beforeUpdateOrderWorkflow\", (order, options) => {\n  const { userId, modifier } = options;\n  // if we're adding a new product or variant to the cart\n  if (modifier.$set) {\n    // Updating status of order e.g. \"coreOrderWorkflow/processing\"\n    if (modifier.$set[\"workflow.status\"]) {\n      const status = modifier.$set[\"workflow.status\"];\n      const workflowMethod = `workflow/${status}`;\n\n      if (Meteor.server.method_handlers[workflowMethod]) {\n        const result = Meteor.call(workflowMethod, {\n          userId,\n          order,\n          modifier\n        });\n        // Result should be true / false to all or disallow updating the status\n        return result;\n      }\n    }\n  }\n});\n"]},"sourceType":"script","hash":"c15d03a68912df331d99c8a844ca8fe8632fd8e1"}
