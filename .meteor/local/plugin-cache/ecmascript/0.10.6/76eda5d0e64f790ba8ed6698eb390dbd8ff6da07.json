{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/methods/core/payments.js","filename":"server/methods/core/payments.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/methods/core/payments.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/methods/core/payments.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/core/payments.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Reaction, Hooks;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Hooks(v) {\n    Hooks = v;\n  }\n\n}, 3);\nconst methods = {\n  /**\n   * @name payments/apply\n   * @method\n   * @memberof Methods/Payments\n   * @example Meteor.call(\"payments/apply\", id, paymentMethod, collection)\n   * @summary Adds payment to order\n   * @param {String} id - id\n   * @param {Object} paymentMethod - formatted payment method object\n   * @param  {String} collection collection (either Orders or Cart)\n   * @returns {String} return cart update result\n   */\n  \"payments/apply\"(id, paymentMethod, collection = \"Cart\") {\n    check(id, String);\n    check(paymentMethod, Object);\n    check(collection, String);\n    const Collection = Reaction.Collections[collection];\n    const cart = Collection.findOne(id); // The first record holds the selected billing address\n\n    const billing = cart.billing[0];\n    const billingId = Random.id();\n    const result = Collection.update({\n      _id: id\n    }, {\n      $addToSet: {\n        billing: (0, _objectSpread2.default)({}, billing, {\n          _id: billingId,\n          paymentMethod\n        })\n      }\n    }); // calculate discounts\n\n    Hooks.Events.run(\"afterCartUpdateCalculateDiscount\", id);\n    return result;\n  }\n\n};\n// export methods to Meteor\nMeteor.methods(methods);","map":{"version":3,"sources":["server/methods/core/payments.js"],"names":["module","export","methods","Meteor","watch","require","v","Random","check","Reaction","Hooks","id","paymentMethod","collection","String","Object","Collection","Collections","cart","findOne","billing","billingId","result","update","_id","$addToSet","Events","run"],"mappings":";;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,MAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,KAAJ;AAAUR,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIG,QAAJ,EAAaC,KAAb;AAAmBV,OAAOI,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACI,WAASH,CAAT,EAAW;AAACG,eAASH,CAAT;AAAW,GAAxB;;AAAyBI,QAAMJ,CAAN,EAAQ;AAACI,YAAMJ,CAAN;AAAQ;;AAA1C,CAAlC,EAA8E,CAA9E;AAY3Q,MAAMJ,UAAU;AACrB;;;;;;;;;;;AAWA,mBAAiBS,EAAjB,EAAqBC,aAArB,EAAoCC,aAAa,MAAjD,EAAyD;AACvDL,UAAMG,EAAN,EAAUG,MAAV;AACAN,UAAMI,aAAN,EAAqBG,MAArB;AACAP,UAAMK,UAAN,EAAkBC,MAAlB;AACA,UAAME,aAAaP,SAASQ,WAAT,CAAqBJ,UAArB,CAAnB;AAEA,UAAMK,OAAOF,WAAWG,OAAX,CAAmBR,EAAnB,CAAb,CANuD,CAOvD;;AACA,UAAMS,UAAUF,KAAKE,OAAL,CAAa,CAAb,CAAhB;AACA,UAAMC,YAAYd,OAAOI,EAAP,EAAlB;AACA,UAAMW,SAASN,WAAWO,MAAX,CAAkB;AAC/BC,WAAKb;AAD0B,KAAlB,EAEZ;AACDc,iBAAW;AACTL,iDACKA,OADL;AAEEI,eAAKH,SAFP;AAGET;AAHF;AADS;AADV,KAFY,CAAf,CAVuD,CAqBvD;;AACAF,UAAMgB,MAAN,CAAaC,GAAb,CAAiB,kCAAjB,EAAqDhB,EAArD;AAEA,WAAOW,MAAP;AACD;;AArCoB,CAAhB;AAwCP;AACAnB,OAAOD,OAAP,CAAeA,OAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { check } from \"meteor/check\";\nimport { Reaction, Hooks } from \"/server/api\";\n\n/**\n * @file Methods for Payments. Run these methods using `Meteor.call()`.\n *\n *\n * @namespace Methods/Payments\n*/\n\nexport const methods = {\n  /**\n   * @name payments/apply\n   * @method\n   * @memberof Methods/Payments\n   * @example Meteor.call(\"payments/apply\", id, paymentMethod, collection)\n   * @summary Adds payment to order\n   * @param {String} id - id\n   * @param {Object} paymentMethod - formatted payment method object\n   * @param  {String} collection collection (either Orders or Cart)\n   * @returns {String} return cart update result\n   */\n  \"payments/apply\"(id, paymentMethod, collection = \"Cart\") {\n    check(id, String);\n    check(paymentMethod, Object);\n    check(collection, String);\n    const Collection = Reaction.Collections[collection];\n\n    const cart = Collection.findOne(id);\n    // The first record holds the selected billing address\n    const billing = cart.billing[0];\n    const billingId = Random.id();\n    const result = Collection.update({\n      _id: id\n    }, {\n      $addToSet: {\n        billing: {\n          ...billing,\n          _id: billingId,\n          paymentMethod\n        }\n      }\n    });\n    // calculate discounts\n    Hooks.Events.run(\"afterCartUpdateCalculateDiscount\", id);\n\n    return result;\n  }\n};\n\n// export methods to Meteor\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"76eda5d0e64f790ba8ed6698eb390dbd8ff6da07"}
