{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-paypal/lib/api/payflow.js","filename":"imports/plugins/included/payments-paypal/lib/api/payflow.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-paypal/lib/api/payflow.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/included/payments-paypal/lib/api/payflow.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-paypal/lib/api/payflow.js"}},"code":"module.export({\n  PayFlow: function () {\n    return PayFlow;\n  }\n});\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 1);\nvar Reaction;\nmodule.watch(require(\"../../../../../../lib/api\"), {\n  \"default\": function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar PayFlow = {\n  payflowAccountOptions: function () {\n    var _Packages$findOne = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: Reaction.getShopId(),\n      enabled: true\n    }),\n        settings = _Packages$findOne.settings;\n\n    var mode;\n\n    if ((settings !== null ? settings.payflow_mode : undefined) === true) {\n      mode = \"live\";\n    } else {\n      mode = \"sandbox\";\n    }\n\n    var ref = Meteor.settings.paypal;\n    var options = {\n      mode: mode,\n      enabled: getSettings(settings, ref, \"payflow_enabled\"),\n      client_id: getSettings(settings, ref, \"client_id\"),\n      client_secret: getSettings(settings, ref, \"client_secret\")\n    };\n\n    if (!options.client_id) {\n      throw new Meteor.Error(\"invalid-credentials\", \"Invalid PayPal Credentials\");\n    }\n\n    return options;\n  },\n  authorize: function (cardInfo, paymentInfo, callback) {\n    Meteor.call(\"payflowpro/payment/submit\", \"authorize\", cardInfo, paymentInfo, callback);\n  },\n  capture: function (transactionId, amount, callback) {\n    var captureDetails = {\n      amount: {\n        currency: \"USD\",\n        // todo should this be locale.currency\n        total: parseFloat(amount, 10)\n      },\n      is_final_capture: true\n    };\n    Meteor.call(\"payflowpro/payment/capture\", transactionId, captureDetails, callback);\n  },\n  config: function (options) {\n    this.accountOptions = options;\n  },\n  paymentObj: function () {\n    return {\n      intent: \"sale\",\n      payer: {\n        payment_method: \"credit_card\",\n        funding_instruments: []\n      },\n      transactions: []\n    };\n  },\n  parseCardData: function (data) {\n    return {\n      credit_card: {\n        type: data.type,\n        number: data.number,\n        first_name: data.first_name,\n        last_name: data.last_name,\n        cvv2: data.cvv2,\n        expire_month: data.expire_month,\n        expire_year: data.expire_year\n      }\n    };\n  },\n  parsePaymentData: function (data) {\n    return {\n      amount: {\n        total: parseFloat(data.total, 10),\n        currency: data.currency\n      }\n    };\n  }\n};\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n\n  return {};\n}","map":{"version":3,"sources":["imports/plugins/included/payments-paypal/lib/api/payflow.js"],"names":["module","export","PayFlow","Meteor","watch","require","v","Packages","Reaction","payflowAccountOptions","findOne","name","shopId","getShopId","enabled","settings","mode","payflow_mode","undefined","ref","paypal","options","getSettings","client_id","client_secret","Error","authorize","cardInfo","paymentInfo","callback","call","capture","transactionId","amount","captureDetails","currency","total","parseFloat","is_final_capture","config","accountOptions","paymentObj","intent","payer","payment_method","funding_instruments","transactions","parseCardData","data","credit_card","type","number","first_name","last_name","cvv2","expire_month","expire_year","parsePaymentData","valueName"],"mappings":"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","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Packages } from \"/lib/collections\";\nimport Reaction from \"/lib/api\";\n\n// using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\nexport const PayFlow = {\n  payflowAccountOptions() {\n    const { settings } = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: Reaction.getShopId(),\n      enabled: true\n    });\n    let mode;\n    if ((settings !== null ? settings.payflow_mode : undefined) === true) {\n      mode = \"live\";\n    } else {\n      mode = \"sandbox\";\n    }\n    const ref = Meteor.settings.paypal;\n    const options = {\n      mode,\n      enabled: getSettings(settings, ref, \"payflow_enabled\"),\n      client_id: getSettings(settings, ref, \"client_id\"),\n      client_secret: getSettings(settings, ref, \"client_secret\")\n    };\n    if (!options.client_id) {\n      throw new Meteor.Error(\"invalid-credentials\", \"Invalid PayPal Credentials\");\n    }\n    return options;\n  },\n  authorize(cardInfo, paymentInfo, callback) {\n    Meteor.call(\"payflowpro/payment/submit\", \"authorize\", cardInfo, paymentInfo, callback);\n  },\n  capture(transactionId, amount, callback) {\n    const captureDetails = {\n      amount: {\n        currency: \"USD\", // todo should this be locale.currency\n        total: parseFloat(amount, 10)\n      },\n      is_final_capture: true\n    };\n    Meteor.call(\"payflowpro/payment/capture\", transactionId, captureDetails, callback);\n  },\n  config(options) {\n    this.accountOptions = options;\n  },\n  paymentObj() {\n    return {\n      intent: \"sale\",\n      payer: {\n        payment_method: \"credit_card\",\n        funding_instruments: []\n      },\n      transactions: []\n    };\n  },\n  parseCardData(data) {\n    return {\n      credit_card: {\n        type: data.type,\n        number: data.number,\n        first_name: data.first_name,\n        last_name: data.last_name,\n        cvv2: data.cvv2,\n        expire_month: data.expire_month,\n        expire_year: data.expire_year\n      }\n    };\n  },\n  parsePaymentData(data) {\n    return {\n      amount: {\n        total: parseFloat(data.total, 10),\n        currency: data.currency\n      }\n    };\n  }\n};\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n  return {};\n}\n"]},"sourceType":"script","hash":"667f5af679ef222d9a329d4ef801cf0310e5f73d"}
