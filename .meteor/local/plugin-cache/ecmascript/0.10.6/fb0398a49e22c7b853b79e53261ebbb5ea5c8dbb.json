{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"packages/aldeed:template-extension/tests.js","filename":"packages/aldeed:template-extension/tests.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/aldeed:template-extension/tests.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"packages/aldeed:template-extension/tests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:template-extension/tests.js"}},"code":"var testingInstanceGet = false;\nvar testingInstanceParent = false;\nvar testingData = false;\nTemplate.noop.onCreated(function () {\n  this._testTemplateFieldNoop = 50;\n});\nTemplate.testTemplate.onCreated(function () {\n  this._testTemplateField = 42;\n});\nTemplate.testTemplate.helpers({\n  data: function () {\n    return _.extend({}, this, {\n      data1: 'foo'\n    });\n  }\n});\nTemplate.testTemplate1.onCreated(function () {\n  this._testTemplateField1 = 43;\n});\nTemplate.testTemplate1.helpers({\n  data: function () {\n    // We add data2, but remove data1.\n    return _.omit(_.extend({}, this, {\n      data2: 'bar'\n    }), 'data1');\n  }\n});\nTemplate.testTemplate2.onCreated(function () {\n  this._testTemplateField3 = 44;\n});\nTemplate.testTemplate2.helpers({\n  testInstanceGet: function () {\n    if (testingInstanceGet) return EJSON.stringify(Template.instance().get(this.fieldName));\n  },\n  testInstanceParent: function () {\n    if (!testingInstanceParent) return;\n    var ancestors = [];\n    var template = Template.instance();\n\n    while (template) {\n      // Only fields which start with _.\n      ancestors.push(_.pick(template, _.filter(_.keys(template), function (key) {\n        return key.substr(0, 1) === '_' && key !== '_allSubsReadyDep' && key !== '_allSubsReady' && key !== '_subscriptionHandles' && key !== '_globalCreated' && key !== '_globalRendered' && key !== '_globalDestroyed';\n      })));\n      template = template.parent(this.numLevels, this.includeBlockHelpers);\n    }\n\n    return EJSON.stringify(ancestors);\n  },\n  testData: function () {\n    if (testingData) return EJSON.stringify(Template.parentData(this.numLevels));\n  }\n});\nTemplate.testTemplate3.events({\n  'click #button': function () {\n    return true;\n  }\n});\nTemplate.testTemplate4.events({\n  'mousemove .current': function () {\n    return true;\n  }\n});\nTemplate.testTemplate8.hooks({\n  rendered: function () {\n    this._rendered8 = true;\n  }\n});\nTemplate.testTemplate9.hooks({\n  created: function () {\n    this._created9 = true;\n  }\n});\nTemplate.testTemplate9.helpers({\n  copyAsHelper: function () {\n    return 'copyAs';\n  }\n});\nTemplate.testTemplate17.hooks({\n  created: function () {\n    this._created17 = true;\n  },\n  rendered: function () {\n    this._rendered17 = true;\n  },\n  destroyed: function () {\n    this._destroyed17 = true;\n  }\n});\nTemplate.templateTier1.hooks({\n  created: function () {\n    this.children = [];\n  },\n  rendered: function () {\n    this._renderedTemplateTier1 = true;\n  }\n});\nTemplate.templateTier2.hooks({\n  created: function () {\n    this.children = [];\n  },\n  rendered: function () {\n    this.parent().children.push(this);\n    this._renderedTemplateTier2 = true;\n  }\n});\nTemplate.templateTier3.hooks({\n  rendered: function () {\n    this.parent().children.push(this);\n    this._renderedTemplateTier3 = true;\n  }\n});\nTemplate.onCreated(function () {\n  this._globalCreated = true;\n});\nTemplate.onRendered(function () {\n  this._globalRendered = true;\n});\nTemplate.onDestroyed(function () {\n  this._globalDestroyed = true;\n});\nTemplate.clearEventMaps.events({\n  'click button': function () {\n    return false;\n  }\n});\nTemplate.setTest.onCreated(function () {\n  this.normalSet = 1;\n  this.reactiveSet = new ReactiveVar(1);\n});\nTemplate.setTestChild.events({\n  'click button': function () {\n    Template.instance().set('normalSet', 2);\n    Template.instance().set('reactiveSet', 2);\n  }\n});\nTinytest.add('template-extension - get', function (test) {\n  testingInstanceGet = true;\n\n  try {\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      fieldName: '_testTemplateField'\n    }), '42');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      fieldName: '_testTemplateField1'\n    }), '43');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      fieldName: '_testTemplateField3'\n    }), '44');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      fieldName: '_testTemplateFieldNoop'\n    }), '50');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      fieldName: '_nonexistent'\n    }), '');\n  } finally {\n    testingInstanceGet = false;\n  }\n});\nTinytest.add('template-extension - parent', function (test) {\n  testingInstanceParent = true;\n\n  try {\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 1,\n      includeBlockHelpers: false\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 1,\n      includeBlockHelpers: true\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      includeBlockHelpers: false\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      includeBlockHelpers: true\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: undefined,\n      includeBlockHelpers: false\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: undefined,\n      includeBlockHelpers: true\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: null,\n      includeBlockHelpers: false\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: null,\n      includeBlockHelpers: true\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 2,\n      includeBlockHelpers: false\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 2,\n      includeBlockHelpers: true\n    }), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43}]');\n    var multiTierView = Blaze.render(Template.templateTier1, $('body')[0]);\n    Tracker.flush();\n    test.isTrue(multiTierView._templateInstance._renderedTemplateTier1);\n    test.equal(multiTierView._templateInstance.parent(function () {\n      return false;\n    }), null); // Should have no parent template.\n\n    test.equal(multiTierView._templateInstance.children.length, 2);\n    Tracker.flush();\n    test.isTrue(multiTierView._templateInstance.children[0]._renderedTemplateTier2);\n    test.isTrue(multiTierView._templateInstance.children[1]._renderedTemplateTier2);\n    Tracker.flush();\n    test.isTrue(multiTierView._templateInstance.children[0].children[0]._renderedTemplateTier3);\n    test.isTrue(multiTierView._templateInstance.children[0].children[1]._renderedTemplateTier3);\n    test.isTrue(multiTierView._templateInstance.children[1].children[0]._renderedTemplateTier3);\n    test.isTrue(multiTierView._templateInstance.children[1].children[1]._renderedTemplateTier3);\n    test.equal(multiTierView._templateInstance.children[0].children.length, 2);\n    test.equal(multiTierView._templateInstance.children[1].children.length, 2);\n    var grandChild = multiTierView._templateInstance.children[1].children[0];\n    test.equal(grandChild.parent(function (t) {\n      return t.view.name === \"Template.templateTier2\";\n    }), multiTierView._templateInstance.children[1]);\n    var grandChild = multiTierView._templateInstance.children[1].children[0];\n    test.equal(grandChild.parent(function (t) {\n      return t.view.name === \"Template.templateTier1\";\n    }), multiTierView._templateInstance);\n  } finally {\n    testingInstanceParent = false;\n  }\n});\nTinytest.add('template-extension - parentData', function (test) {\n  testingData = true;\n\n  try {\n    // Testing default behavior.\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {}), '{\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: undefined\n    }), '{\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: null\n    }), '{\"numLevels\":null,\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 0\n    }), '{\"numLevels\":0,\"data2\":\"bar\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 1\n    }), '{\"numLevels\":1,\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 2\n    }), '{\"numLevels\":2}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: 3\n    }), 'null'); // Testing a function.\n\n    var hasField = function (fieldName) {\n      return function (data) {\n        return fieldName in data;\n      };\n    };\n\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: hasField('data1')\n    }), '{\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: hasField('data2')\n    }), '{\"data2\":\"bar\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {\n      numLevels: hasField('data3')\n    }), 'null');\n  } finally {\n    testingData = false;\n  }\n});\nTinytest.add('template-extension - inheritsHelpersFrom', function (test) {\n  Template.testTemplate3.inheritsHelpersFrom('testTemplate2');\n  test.equal(Template.testTemplate2.__helpers[' testInstanceGet'], Template.testTemplate3.__helpers[' testInstanceGet']);\n});\nTinytest.add('template-extension - inheritsHelpersFrom array', function (test) {\n  Template.testTemplate4.inheritsHelpersFrom(['testTemplate1', 'testTemplate2']);\n  test.equal(Template.testTemplate2.__helpers[' testInstanceGet'], Template.testTemplate4.__helpers[' testInstanceGet']);\n  test.equal(Template.testTemplate1.__helpers[' data'], Template.testTemplate4.__helpers[' data']);\n});\nTinytest.add('template-extension - inheritsEventsFrom', function (test) {\n  Template.testTemplate5.inheritsEventsFrom('testTemplate3');\n  test.equal(Template.testTemplate3.__eventMaps, Template.testTemplate5.__eventMaps);\n});\nTinytest.add('template-extension - inheritsEventsFrom array', function (test) {\n  Template.testTemplate6.inheritsEventsFrom(['testTemplate3', 'testTemplate4']);\n  test.equal(Template.testTemplate3.__eventMaps[0], Template.testTemplate6.__eventMaps[0]);\n  test.equal(Template.testTemplate4.__eventMaps[0], Template.testTemplate6.__eventMaps[1]);\n});\nTinytest.add('template-extension - inheritsEventsFrom fires on the correct template', function (test) {\n  var clickedOriginal = false;\n  var clickedCopy = false;\n  Template.eventsTest.clearEventMaps();\n  Template.eventsTest.events({\n    'click button': function () {\n      clickedOriginal = true;\n      return false;\n    }\n  });\n  delete Template.eventsTestCopy;\n  Template.eventsTest.copyAs('eventsTestCopy');\n  Template.eventsTestCopy.clearEventMaps();\n  Template.eventsTestCopy.events({\n    'click button': function () {\n      clickedCopy = true;\n      return false;\n    }\n  });\n  var view = Blaze.render(Template.eventsTest, $('body')[0]);\n\n  view._templateInstance.$('button').click();\n\n  test.isFalse(clickedCopy);\n  test.isTrue(clickedOriginal);\n  clickedOriginal = false;\n  clickedCopy = false;\n  view = Blaze.render(Template.eventsTestCopy, $('body')[0]);\n\n  view._templateInstance.$('button').click();\n\n  test.isTrue(clickedCopy);\n  test.isFalse(clickedOriginal);\n});\nTinytest.add('template-extension - inheritsHooksFrom', function (test) {\n  Template.testTemplate7.inheritsHooksFrom('testTemplate');\n  var view = Blaze.render(Template.testTemplate7, $('body')[0]);\n  test.equal(view._templateInstance._testTemplateField, 42);\n});\nTinytest.add('template-extension - inheritsHooksFrom array', function (test) {\n  Template.testTemplate9.inheritsHooksFrom(['testTemplate', 'testTemplate8']);\n  var view = Blaze.render(Template.testTemplate9, $('body')[0]);\n  test.equal(view._templateInstance._testTemplateField, 42);\n  Tracker.flush();\n  test.isTrue(view._templateInstance._rendered8);\n});\nTinytest.add('template-extension - copyAs', function (test) {\n  Template.testTemplate9.copyAs('testTemplate10');\n  test.equal(Blaze.toHTML(Template.testTemplate10), '<h1>copyAs</h1>');\n  var view = Blaze.render(Template.testTemplate10, $('body')[0]);\n  test.isTrue(view._templateInstance._created9);\n});\nTinytest.add('template-extension - copyAs array', function (test) {\n  Template.testTemplate9.copyAs(['testTemplate11', 'testTemplate12']);\n  test.equal(Blaze.toHTML(Template.testTemplate11), '<h1>copyAs</h1>');\n  test.equal(Blaze.toHTML(Template.testTemplate12), '<h1>copyAs</h1>');\n  var view = Blaze.render(Template.testTemplate11, $('body')[0]);\n  test.isTrue(view._templateInstance._created9);\n  view = Blaze.render(Template.testTemplate12, $('body')[0]);\n  test.isTrue(view._templateInstance._created9);\n});\nTinytest.add('template-extension - copyAs returns newly created template', function (test) {\n  var result = Template.testTemplate.copyAs('testTemplate3');\n  test.instanceOf(result, Blaze.Template);\n});\nTinytest.add('template-extension - copyAs returns newly created template array', function (test) {\n  var result = Template.testTemplate.copyAs(['testTemplate3', 'testTemplate4']);\n  test.instanceOf(result, Array);\n  test.instanceOf(result[0], Blaze.Template);\n  test.instanceOf(result[1], Blaze.Template);\n});\nTinytest.add('template-extension - replaces', function (test) {\n  Template.testTemplate9.replaces('testTemplate14');\n  Template.testTemplate14.inheritsHelpersFrom('testTemplate9');\n  test.equal(Blaze.toHTML(Template.testTemplate14), '<h1>copyAs</h1>');\n});\nTinytest.add('template-extension - replaces array', function (test) {\n  Template.testTemplate9.replaces(['testTemplate15', 'testTemplate16']);\n  Template.testTemplate15.inheritsHelpersFrom('testTemplate9');\n  Template.testTemplate16.inheritsHelpersFrom('testTemplate9');\n  test.equal(Blaze.toHTML(Template.testTemplate15), '<h1>copyAs</h1>');\n  test.equal(Blaze.toHTML(Template.testTemplate16), '<h1>copyAs</h1>');\n});\nTinytest.add('template-extension - hooks', function (test) {\n  var view = Blaze.render(Template.testTemplate17, $('body')[0]);\n  test.isTrue(view._templateInstance._created17);\n  Tracker.flush();\n  test.isTrue(view._templateInstance._rendered17);\n  Blaze.remove(view);\n  test.isTrue(view._templateInstance._destroyed17);\n});\nTinytest.add('template-extension - global hooks', function (test) {\n  var view = Blaze.render(Template.testTemplate20, $('body')[0]);\n  test.isTrue(view._templateInstance._globalCreated);\n  Tracker.flush();\n  test.isTrue(view._templateInstance._globalRendered);\n  Blaze.remove(view);\n  test.isTrue(view._templateInstance._globalDestroyed);\n});\nTinytest.add('template-extension - clearEventMaps', function (test) {\n  test.equal(Template.clearEventMaps.__eventMaps.length, 1);\n  Template.clearEventMaps.clearEventMaps();\n  test.equal(Template.clearEventMaps.__eventMaps.length, 0);\n});\nTinytest.add('template-extension - registerHelpers', function (test) {\n  Template.registerHelpers({\n    testHelper1: function () {\n      return 'test1';\n    },\n    testHelper2: function () {\n      return 'test2';\n    }\n  });\n  test.equal(Blaze._globalHelpers.testHelper1(), 'test1');\n  test.equal(Blaze._globalHelpers.testHelper2(), 'test2');\n});\nTinytest.add('template-extension - set', function (test) {\n  var view = Blaze.render(Template.setTest, $('body')[0]);\n\n  view._templateInstance.$('button').click();\n\n  test.equal(view._templateInstance.normalSet, 2);\n  test.equal(view._templateInstance.reactiveSet.get(), 2);\n});","map":{"version":3,"sources":["packages/aldeed:template-extension/tests.js"],"names":["testingInstanceGet","testingInstanceParent","testingData","Template","noop","onCreated","_testTemplateFieldNoop","testTemplate","_testTemplateField","helpers","data","_","extend","data1","testTemplate1","_testTemplateField1","omit","data2","testTemplate2","_testTemplateField3","testInstanceGet","EJSON","stringify","instance","get","fieldName","testInstanceParent","ancestors","template","push","pick","filter","keys","key","substr","parent","numLevels","includeBlockHelpers","testData","parentData","testTemplate3","events","testTemplate4","testTemplate8","hooks","rendered","_rendered8","testTemplate9","created","_created9","copyAsHelper","testTemplate17","_created17","_rendered17","destroyed","_destroyed17","templateTier1","children","_renderedTemplateTier1","templateTier2","_renderedTemplateTier2","templateTier3","_renderedTemplateTier3","_globalCreated","onRendered","_globalRendered","onDestroyed","_globalDestroyed","clearEventMaps","setTest","normalSet","reactiveSet","ReactiveVar","setTestChild","set","Tinytest","add","test","equal","Blaze","toHTMLWithData","undefined","multiTierView","render","$","Tracker","flush","isTrue","_templateInstance","length","grandChild","t","view","name","hasField","inheritsHelpersFrom","__helpers","testTemplate5","inheritsEventsFrom","__eventMaps","testTemplate6","clickedOriginal","clickedCopy","eventsTest","eventsTestCopy","copyAs","click","isFalse","testTemplate7","inheritsHooksFrom","toHTML","testTemplate10","testTemplate11","testTemplate12","result","instanceOf","Array","replaces","testTemplate14","testTemplate15","testTemplate16","remove","testTemplate20","registerHelpers","testHelper1","testHelper2","_globalHelpers"],"mappings":"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","sourcesContent":["var testingInstanceGet = false;\nvar testingInstanceParent = false;\nvar testingData = false;\n\nTemplate.noop.onCreated(function () {\n  this._testTemplateFieldNoop = 50;\n});\n\nTemplate.testTemplate.onCreated(function () {\n  this._testTemplateField = 42;\n});\n\nTemplate.testTemplate.helpers({\n  data() {\n    return _.extend({}, this, {data1: 'foo'});\n  }\n});\n\nTemplate.testTemplate1.onCreated(function () {\n  this._testTemplateField1 = 43;\n});\n\nTemplate.testTemplate1.helpers({\n  data() {\n    // We add data2, but remove data1.\n    return _.omit(_.extend({}, this, {data2: 'bar'}), 'data1');\n  }\n});\n\nTemplate.testTemplate2.onCreated(function () {\n  this._testTemplateField3 = 44;\n});\n\nTemplate.testTemplate2.helpers({\n  testInstanceGet() {\n    if (testingInstanceGet) return EJSON.stringify(Template.instance().get(this.fieldName));\n  },\n\n  testInstanceParent() {\n    if (!testingInstanceParent) return;\n\n    var ancestors = [];\n    var template = Template.instance();\n    while (template) {\n      // Only fields which start with _.\n      ancestors.push(_.pick(template, _.filter(_.keys(template), function (key) {\n        return key.substr(0, 1) === '_' &&\n          key !== '_allSubsReadyDep' &&\n          key !== '_allSubsReady' &&\n          key !== '_subscriptionHandles' &&\n          key !== '_globalCreated' &&\n          key !== '_globalRendered' &&\n          key !== '_globalDestroyed';\n      })));\n      template = template.parent(this.numLevels, this.includeBlockHelpers);\n    }\n    return EJSON.stringify(ancestors);\n  },\n\n  testData() {\n    if (testingData) return EJSON.stringify(Template.parentData(this.numLevels));\n  }\n});\n\nTemplate.testTemplate3.events({\n  'click #button'() {\n    return true;\n  }\n});\n\nTemplate.testTemplate4.events({\n  'mousemove .current'() {\n    return true;\n  }\n});\n\nTemplate.testTemplate8.hooks({\n  rendered() {\n    this._rendered8 = true;\n  }\n});\n\nTemplate.testTemplate9.hooks({\n  created() {\n    this._created9 = true;\n  }\n});\n\nTemplate.testTemplate9.helpers({\n  copyAsHelper() {\n    return 'copyAs';\n  }\n});\n\nTemplate.testTemplate17.hooks({\n  created() {\n    this._created17 = true;\n  },\n  rendered() {\n    this._rendered17 = true;\n  },\n  destroyed() {\n    this._destroyed17 = true;\n  },\n});\n\n\nTemplate.templateTier1.hooks({\n  created() {\n    this.children = [];\n  },\n  rendered() {\n    this._renderedTemplateTier1 = true;\n  }\n});\n\nTemplate.templateTier2.hooks({\n  created() {\n    this.children = [];\n  },\n  rendered() {\n    this.parent().children.push(this);\n    this._renderedTemplateTier2 = true;\n  }\n});\n\nTemplate.templateTier3.hooks({\n  rendered() {\n    this.parent().children.push(this);\n    this._renderedTemplateTier3 = true;\n  }\n});\n\nTemplate.onCreated(function () {\n  this._globalCreated = true;\n});\n\nTemplate.onRendered(function () {\n  this._globalRendered = true;\n});\n\nTemplate.onDestroyed(function () {\n  this._globalDestroyed = true;\n});\n\nTemplate.clearEventMaps.events({\n  'click button'() {\n    return false;\n  }\n});\n\nTemplate.setTest.onCreated(function () {\n  this.normalSet = 1;\n  this.reactiveSet = new ReactiveVar(1);\n});\n\nTemplate.setTestChild.events({\n  'click button'() {\n    Template.instance().set('normalSet', 2);\n    Template.instance().set('reactiveSet', 2);\n  },\n});\n\nTinytest.add('template-extension - get', function (test) {\n  testingInstanceGet = true;\n  try {\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {fieldName: '_testTemplateField'}), '42');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {fieldName: '_testTemplateField1'}), '43');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {fieldName: '_testTemplateField3'}), '44');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {fieldName: '_testTemplateFieldNoop'}), '50');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {fieldName: '_nonexistent'}), '');\n  }\n  finally {\n    testingInstanceGet = false;\n  }\n});\n\nTinytest.add('template-extension - parent', function (test) {\n  testingInstanceParent = true;\n  try {\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 1, includeBlockHelpers: false}), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 1, includeBlockHelpers: true}), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {includeBlockHelpers: false}), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {includeBlockHelpers: true}), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: undefined, includeBlockHelpers: false}), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: undefined, includeBlockHelpers: true}), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: null, includeBlockHelpers: false}), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: null, includeBlockHelpers: true}), '[{\"_testTemplateField3\":44},{\"_testTemplateFieldNoop\":50},{\"_testTemplateField1\":43},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 2, includeBlockHelpers: false}), '[{\"_testTemplateField3\":44},{\"_testTemplateField\":42}]');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 2, includeBlockHelpers: true}), '[{\"_testTemplateField3\":44},{\"_testTemplateField1\":43}]');\n\n    var multiTierView = Blaze.render(Template.templateTier1, $('body')[0]);\n    Tracker.flush();\n    test.isTrue(multiTierView._templateInstance._renderedTemplateTier1);\n    test.equal(multiTierView._templateInstance.parent(() => false), null);  // Should have no parent template.\n    test.equal(multiTierView._templateInstance.children.length, 2);\n    Tracker.flush();\n    test.isTrue(multiTierView._templateInstance.children[0]._renderedTemplateTier2);\n    test.isTrue(multiTierView._templateInstance.children[1]._renderedTemplateTier2);\n    Tracker.flush();\n    test.isTrue(multiTierView._templateInstance.children[0].children[0]._renderedTemplateTier3);\n    test.isTrue(multiTierView._templateInstance.children[0].children[1]._renderedTemplateTier3);\n    test.isTrue(multiTierView._templateInstance.children[1].children[0]._renderedTemplateTier3);\n    test.isTrue(multiTierView._templateInstance.children[1].children[1]._renderedTemplateTier3);\n    test.equal(multiTierView._templateInstance.children[0].children.length, 2);\n    test.equal(multiTierView._templateInstance.children[1].children.length, 2);\n\n    var grandChild = multiTierView._templateInstance.children[1].children[0];\n    test.equal(grandChild.parent((t) => t.view.name === \"Template.templateTier2\"),\n        multiTierView._templateInstance.children[1]);\n\n    var grandChild = multiTierView._templateInstance.children[1].children[0];\n    test.equal(grandChild.parent((t) => t.view.name === \"Template.templateTier1\"),\n        multiTierView._templateInstance);\n  }\n  finally {\n    testingInstanceParent = false;\n  }\n});\n\nTinytest.add('template-extension - parentData', function (test) {\n  testingData = true;\n  try {\n    // Testing default behavior.\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {}), '{\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: undefined}), '{\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: null}), '{\"numLevels\":null,\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 0}), '{\"numLevels\":0,\"data2\":\"bar\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 1}), '{\"numLevels\":1,\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 2}), '{\"numLevels\":2}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: 3}), 'null');\n\n    // Testing a function.\n    var hasField = function (fieldName) {\n      return function (data) {\n        return fieldName in data;\n      };\n    };\n\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: hasField('data1')}), '{\"data1\":\"foo\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: hasField('data2')}), '{\"data2\":\"bar\"}');\n    test.equal(Blaze.toHTMLWithData(Template.testTemplate, {numLevels: hasField('data3')}), 'null');\n  }\n  finally {\n    testingData = false;\n  }\n});\n\nTinytest.add('template-extension - inheritsHelpersFrom', function (test) {\n  Template.testTemplate3.inheritsHelpersFrom('testTemplate2');\n  test.equal(Template.testTemplate2.__helpers[' testInstanceGet'], Template.testTemplate3.__helpers[' testInstanceGet']);\n});\n\nTinytest.add('template-extension - inheritsHelpersFrom array', function (test) {\n  Template.testTemplate4.inheritsHelpersFrom(['testTemplate1', 'testTemplate2']);\n  test.equal(Template.testTemplate2.__helpers[' testInstanceGet'], Template.testTemplate4.__helpers[' testInstanceGet']);\n  test.equal(Template.testTemplate1.__helpers[' data'], Template.testTemplate4.__helpers[' data']);\n});\n\nTinytest.add('template-extension - inheritsEventsFrom', function (test) {\n  Template.testTemplate5.inheritsEventsFrom('testTemplate3');\n  test.equal(Template.testTemplate3.__eventMaps, Template.testTemplate5.__eventMaps);\n});\n\nTinytest.add('template-extension - inheritsEventsFrom array', function (test) {\n  Template.testTemplate6.inheritsEventsFrom(['testTemplate3', 'testTemplate4']);\n  test.equal(Template.testTemplate3.__eventMaps[0], Template.testTemplate6.__eventMaps[0]);\n  test.equal(Template.testTemplate4.__eventMaps[0], Template.testTemplate6.__eventMaps[1]);\n});\n\nTinytest.add('template-extension - inheritsEventsFrom fires on the correct template', function (test) {\n  let clickedOriginal = false;\n  let clickedCopy = false;\n\n  Template.eventsTest.clearEventMaps();\n\n  Template.eventsTest.events({\n    'click button'() {\n      clickedOriginal = true;\n      return false;\n    },\n  });\n\n  delete Template.eventsTestCopy;\n  Template.eventsTest.copyAs('eventsTestCopy');\n\n  Template.eventsTestCopy.clearEventMaps();\n  Template.eventsTestCopy.events({\n    'click button'() {\n      clickedCopy = true;\n      return false;\n    },\n  });\n\n  let view = Blaze.render(Template.eventsTest, $('body')[0]);\n  view._templateInstance.$('button').click();\n\n  test.isFalse(clickedCopy);\n  test.isTrue(clickedOriginal);\n\n  clickedOriginal = false;\n  clickedCopy = false;\n  view = Blaze.render(Template.eventsTestCopy, $('body')[0]);\n  view._templateInstance.$('button').click();\n\n  test.isTrue(clickedCopy);\n  test.isFalse(clickedOriginal);\n});\n\nTinytest.add('template-extension - inheritsHooksFrom', function (test) {\n  Template.testTemplate7.inheritsHooksFrom('testTemplate');\n  var view = Blaze.render(Template.testTemplate7, $('body')[0]);\n  test.equal(view._templateInstance._testTemplateField, 42);\n});\n\nTinytest.add('template-extension - inheritsHooksFrom array', function (test) {\n  Template.testTemplate9.inheritsHooksFrom(['testTemplate', 'testTemplate8']);\n  var view = Blaze.render(Template.testTemplate9, $('body')[0]);\n  test.equal(view._templateInstance._testTemplateField, 42);\n  Tracker.flush();\n  test.isTrue(view._templateInstance._rendered8);\n});\n\nTinytest.add('template-extension - copyAs', function (test) {\n  Template.testTemplate9.copyAs('testTemplate10');\n  test.equal(Blaze.toHTML(Template.testTemplate10),'<h1>copyAs</h1>');\n  var view = Blaze.render(Template.testTemplate10, $('body')[0]);\n  test.isTrue(view._templateInstance._created9);\n});\n\nTinytest.add('template-extension - copyAs array', function (test) {\n  Template.testTemplate9.copyAs(['testTemplate11', 'testTemplate12']);\n  test.equal(Blaze.toHTML(Template.testTemplate11),'<h1>copyAs</h1>');\n  test.equal(Blaze.toHTML(Template.testTemplate12),'<h1>copyAs</h1>');\n  var view = Blaze.render(Template.testTemplate11, $('body')[0]);\n  test.isTrue(view._templateInstance._created9);\n  view = Blaze.render(Template.testTemplate12, $('body')[0]);\n  test.isTrue(view._templateInstance._created9);\n});\n\nTinytest.add('template-extension - copyAs returns newly created template', function (test) {\n  var result = Template.testTemplate.copyAs('testTemplate3');\n  test.instanceOf(result, Blaze.Template);\n});\n\nTinytest.add('template-extension - copyAs returns newly created template array', function (test) {\n  var result = Template.testTemplate.copyAs(['testTemplate3', 'testTemplate4']);\n  test.instanceOf(result, Array);\n  test.instanceOf(result[0], Blaze.Template);\n  test.instanceOf(result[1], Blaze.Template);\n});\n\nTinytest.add('template-extension - replaces', function (test) {\n  Template.testTemplate9.replaces('testTemplate14');\n  Template.testTemplate14.inheritsHelpersFrom('testTemplate9');\n  test.equal(Blaze.toHTML(Template.testTemplate14),'<h1>copyAs</h1>');\n});\n\nTinytest.add('template-extension - replaces array', function (test) {\n  Template.testTemplate9.replaces(['testTemplate15', 'testTemplate16']);\n  Template.testTemplate15.inheritsHelpersFrom('testTemplate9');\n  Template.testTemplate16.inheritsHelpersFrom('testTemplate9');\n  test.equal(Blaze.toHTML(Template.testTemplate15),'<h1>copyAs</h1>');\n  test.equal(Blaze.toHTML(Template.testTemplate16),'<h1>copyAs</h1>');\n});\n\nTinytest.add('template-extension - hooks', function (test) {\n  var view = Blaze.render(Template.testTemplate17, $('body')[0]);\n  test.isTrue(view._templateInstance._created17);\n  Tracker.flush();\n  test.isTrue(view._templateInstance._rendered17);\n  Blaze.remove(view);\n  test.isTrue(view._templateInstance._destroyed17);\n});\n\nTinytest.add('template-extension - global hooks', function (test) {\n  var view = Blaze.render(Template.testTemplate20, $('body')[0]);\n  test.isTrue(view._templateInstance._globalCreated);\n  Tracker.flush();\n  test.isTrue(view._templateInstance._globalRendered);\n  Blaze.remove(view);\n  test.isTrue(view._templateInstance._globalDestroyed);\n});\n\nTinytest.add('template-extension - clearEventMaps', function (test) {\n  test.equal(Template.clearEventMaps.__eventMaps.length, 1);\n  Template.clearEventMaps.clearEventMaps();\n  test.equal(Template.clearEventMaps.__eventMaps.length, 0);\n});\n\nTinytest.add('template-extension - registerHelpers', function(test) {\n  Template.registerHelpers({\n    testHelper1() {\n      return 'test1';\n    },\n    testHelper2() {\n      return 'test2';\n    }\n  });\n\n  test.equal(Blaze._globalHelpers.testHelper1(), 'test1');\n  test.equal(Blaze._globalHelpers.testHelper2(), 'test2');\n});\n\nTinytest.add('template-extension - set', function(test) {\n  let view = Blaze.render(Template.setTest, $('body')[0]);\n  view._templateInstance.$('button').click();\n\n  test.equal(view._templateInstance.normalSet, 2);\n  test.equal(view._templateInstance.reactiveSet.get(), 2);\n});\n"]},"sourceType":"script","hash":"fb0398a49e22c7b853b79e53261ebbb5ea5c8dbb"}
