{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/webhooks/webhooks.js","filename":"imports/plugins/included/connectors-shopify/server/methods/webhooks/webhooks.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/webhooks/webhooks.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/connectors-shopify/server/methods/webhooks/webhooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/webhooks/webhooks.js"}},"code":"const module1 = module;\nmodule1.export({\n  methods: () => methods\n});\nlet Shopify;\nmodule1.watch(require(\"shopify-api-node\"), {\n  default(v) {\n    Shopify = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule1.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check;\nmodule1.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Reaction, Logger;\nmodule1.watch(require(\"/server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 3);\nlet Packages;\nmodule1.watch(require(\"/lib/collections\"), {\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 4);\nconst methods = {\n  /**\n   * Meteor method for creating a shopify webhook for the active shop\n   * See: https://help.shopify.com/api/reference/webhook for list of valid topics\n   * @async\n   * @method connectors/shopify/webhooks/create\n   * @param {object} options options object\n   * @param {string} options.topic - the shopify topic to subscribe to\n   * @param {string} [options.absoluteUrl] - Url to send webhook requests - should only be used in development mode\n   * @return {undefined}\n   */\n  \"connectors/shopify/webhooks/create\"(options) {\n    return Promise.asyncApply(() => {\n      check(options, Object); // Check for permissions\n\n      if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n        throw new Meteor.Error(\"access-denied\", \"Access denied\");\n      } // This code is duplicated in `../api/api`\n      // But is left here intentionally as we are updating the specific shopifyPkg that this returns later in this method\n\n\n      const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n        shopId: Reaction.getShopId(),\n        name: \"reaction-connectors-shopify\"\n      });\n\n      if (!shopifyPkg) {\n        throw new Meteor.Error(\"server-error\", `No shopify package found for shop ${Reaction.getShopId()}`);\n      }\n\n      const {\n        settings\n      } = shopifyPkg;\n      const shopify = new Shopify({\n        apiKey: settings.apiKey,\n        password: settings.password,\n        shopName: settings.shopName\n      });\n      const host = options.webhooksDomain || Meteor.absoluteUrl();\n      const webhookAddress = `${host}webhooks/shopify/${options.topic.replace(/\\//g, \"-\")}?shopId=${Reaction.getShopId()}`;\n\n      try {\n        let shopifyId; // Create webhook on Shopify if it isn't installed yet\n\n        const webhooks = Promise.await(shopify.webhook.list({\n          address: webhookAddress\n        }));\n\n        if (webhooks.length === 0) {\n          const webhookResponse = Promise.await(shopify.webhook.create({\n            topic: options.topic,\n            address: webhookAddress,\n            format: \"json\"\n          }));\n          shopifyId = webhookResponse.id;\n        } else {\n          shopifyId = webhooks[0].id;\n        }\n\n        const webhook = {\n          shopifyId,\n          topic: options.topic,\n          address: webhookAddress,\n          format: \"json\",\n          integrations: options.integrations // TODO: Add method to update an existing webhook if we want to change the integrations that use it\n          //       E.g. turn on inventory sync, but turn off order sync - both might use the same webhook subscription\n\n        }; // Add webhook to webhooks array in Shop specific connectors-shopify pkg\n\n        Packages.update({\n          _id: shopifyPkg._id\n        }, {\n          $addToSet: {\n            \"settings.webhooks\": webhook\n          }\n        });\n      } catch (error) {\n        Logger.error(\"server-error\", `Shopify API Error creating new webhook: ${error.message}`, error);\n        throw new Meteor.Error(\"server-error\", `Shopify API Error creating new webhook: ${error.message}`);\n      }\n    });\n  },\n\n  /**\n   * Given a shopifyWebhookId, delete that webhook via the Shopify API\n   * @async\n   * @method connectors/shopify/webhooks/delete\n   * @param {number} shopifyWebhookId The shopifyId of the webhook to delete\n   * @returns {number} the number of Packages updated (either 1 or 0)\n   */\n  \"connectors/shopify/webhooks/delete\"(shopifyWebhookId) {\n    return Promise.asyncApply(() => {\n      check(shopifyWebhookId, Number); // Check for permissions\n\n      if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n        throw new Meteor.Error(\"access-denied\", \"Access denied\");\n      } // This code is duplicated in `../api/api`\n      // But is left here intentionally as we are updating the specific shopifyPkg that this returns later in this method\n\n\n      const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n        shopId: Reaction.getShopId(),\n        name: \"reaction-connectors-shopify\"\n      });\n\n      if (!shopifyPkg) {\n        throw new Meteor.Error(\"server-error\", `No shopify package found for shop ${Reaction.getShopId()}`);\n      }\n\n      const {\n        settings\n      } = shopifyPkg;\n      const shopify = new Shopify({\n        apiKey: settings.apiKey,\n        password: settings.password,\n        shopName: settings.shopName\n      });\n\n      try {\n        // delete webhook on Shopify\n        Promise.await(shopify.webhook.delete(shopifyWebhookId)); // Remove webhook from webhooks array in Shop specific connectors-shopify pkg\n\n        return Packages.update({\n          _id: shopifyPkg._id\n        }, {\n          $pull: {\n            \"settings.webhooks\": {\n              shopifyId: shopifyWebhookId\n            }\n          }\n        });\n      } catch (error) {\n        // If Shopify returns a 404, it means this webhook doesn't exist\n        if (error.statusCode === 404) {\n          Logger.warn(\"api-error\", \"Shopify API Error, error deleting webhook, webhook not found.\"); // In this case, we need to delete the webhook from our database anyway\n\n          return Packages.update({\n            _id: shopifyPkg._id\n          }, {\n            $pull: {\n              \"settings.webhooks\": {\n                shopifyId: shopifyWebhookId\n              }\n            }\n          });\n        } // If there is another error, throw it.\n\n\n        throw new Meteor.Error(\"server-error\", `Shopify API Error, error deleting webhook: ${error}`);\n      }\n    });\n  },\n\n  /**\n   * Delete all registered Shopify webhooks via the Shopify API\n   * @async\n   * @method connectors/shopify/webhooks/deleteAll\n   * @returns {number} the number of Packages updated (either 1 or 0)\n   */\n  \"connectors/shopify/webhooks/deleteAll\"() {\n    return Promise.asyncApply(() => {\n      // Check for permissions\n      if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n        throw new Meteor.Error(\"access-denied\", \"Access denied\");\n      }\n\n      const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n        shopId: Reaction.getShopId(),\n        name: \"reaction-connectors-shopify\"\n      });\n\n      if (!shopifyPkg) {\n        throw new Meteor.Error(\"server-error\", `No shopify package found for shop ${Reaction.getShopId()}`);\n      }\n\n      const {\n        settings\n      } = shopifyPkg;\n      const shopify = new Shopify({\n        apiKey: settings.apiKey,\n        password: settings.password,\n        shopName: settings.shopName\n      });\n      const registeredShopifyWebhooks = settings.webhooks; // Exit early if no Shopify webhooks registered\n\n      if (!Array.isArray(registeredShopifyWebhooks) || registeredShopifyWebhooks.length <= 0) {\n        return Logger.debug(\"No Shopify webhooks registered. Exiting.\");\n      }\n\n      const responses = []; // Start all asynchronous operations immediately.\n\n      for (const webhook of registeredShopifyWebhooks) {\n        responses.push(shopify.webhook.delete(webhook.shopifyId));\n      }\n\n      try {\n        const results = Promise.await(Promise.all(responses));\n        Logger.debug(\"results\", results);\n      } catch (error) {\n        if (error.statusCode === 404) {\n          Logger.warn(\"api-warning\", \"At least one of the webhooks registered in Reaction was not found on Shopify\");\n        } else {\n          // TODO: Implement retry queue with exponential back-off for requests which are rejected\n          // because of too many requests\n          // In that case, we may need to resolve promises one-by-one instead of using Promise.all\n          Logger.error(\"api-error\", \"There was an error deleting webhooks on Shopify.\", error);\n        }\n      } // Remove all registered webhooks\n\n\n      return Packages.update({\n        _id: shopifyPkg._id\n      }, {\n        $set: {\n          \"settings.webhooks\": []\n        }\n      });\n    });\n  }\n\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/included/connectors-shopify/server/methods/webhooks/webhooks.js"],"names":["module1","module","export","methods","Shopify","watch","require","default","v","Meteor","check","Reaction","Logger","Packages","options","Object","hasPermission","Error","shopifyPkg","getPackageSettingsWithOptions","shopId","getShopId","name","settings","shopify","apiKey","password","shopName","host","webhooksDomain","absoluteUrl","webhookAddress","topic","replace","shopifyId","webhooks","webhook","list","address","length","webhookResponse","create","format","id","integrations","update","_id","$addToSet","error","message","shopifyWebhookId","Number","delete","$pull","statusCode","warn","registeredShopifyWebhooks","Array","isArray","debug","responses","push","results","Promise","all","$set"],"mappings":"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","sourcesContent":["import Shopify from \"shopify-api-node\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Reaction, Logger } from \"/server/api\";\nimport { Packages } from \"/lib/collections\";\n\n/**\n * @file Shopify connector webhook methods\n *       contains methods for creating and deleting webhooks providing\n *       synchronization between a Shopify store and a Reaction shop\n * @module connectors-shopify\n */\nexport const methods = {\n  /**\n   * Meteor method for creating a shopify webhook for the active shop\n   * See: https://help.shopify.com/api/reference/webhook for list of valid topics\n   * @async\n   * @method connectors/shopify/webhooks/create\n   * @param {object} options options object\n   * @param {string} options.topic - the shopify topic to subscribe to\n   * @param {string} [options.absoluteUrl] - Url to send webhook requests - should only be used in development mode\n   * @return {undefined}\n   */\n  async \"connectors/shopify/webhooks/create\"(options) {\n    check(options, Object);\n\n    // Check for permissions\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    // This code is duplicated in `../api/api`\n    // But is left here intentionally as we are updating the specific shopifyPkg that this returns later in this method\n    const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n      shopId: Reaction.getShopId(),\n      name: \"reaction-connectors-shopify\"\n    });\n\n    if (!shopifyPkg) {\n      throw new Meteor.Error(\"server-error\", `No shopify package found for shop ${Reaction.getShopId()}`);\n    }\n\n    const { settings } = shopifyPkg;\n    const shopify = new Shopify({\n      apiKey: settings.apiKey,\n      password: settings.password,\n      shopName: settings.shopName\n    });\n\n    const host = options.webhooksDomain || Meteor.absoluteUrl();\n    const webhookAddress = `${host}webhooks/shopify/${options.topic.replace(/\\//g, \"-\")}?shopId=${Reaction.getShopId()}`;\n\n    try {\n      let shopifyId;\n      // Create webhook on Shopify if it isn't installed yet\n      const webhooks = await shopify.webhook.list({\n        address: webhookAddress\n      });\n      if (webhooks.length === 0) {\n        const webhookResponse = await shopify.webhook.create({\n          topic: options.topic,\n          address: webhookAddress,\n          format: \"json\"\n        });\n        shopifyId = webhookResponse.id;\n      } else {\n        shopifyId = webhooks[0].id;\n      }\n      const webhook = {\n        shopifyId,\n        topic: options.topic,\n        address: webhookAddress,\n        format: \"json\",\n        integrations: options.integrations\n        // TODO: Add method to update an existing webhook if we want to change the integrations that use it\n        //       E.g. turn on inventory sync, but turn off order sync - both might use the same webhook subscription\n      };\n\n\n      // Add webhook to webhooks array in Shop specific connectors-shopify pkg\n      Packages.update({ _id: shopifyPkg._id }, {\n        $addToSet: {\n          \"settings.webhooks\": webhook\n        }\n      });\n    } catch (error) {\n      Logger.error(\"server-error\", `Shopify API Error creating new webhook: ${error.message}`, error);\n      throw new Meteor.Error(\"server-error\", `Shopify API Error creating new webhook: ${error.message}`);\n    }\n  },\n  /**\n   * Given a shopifyWebhookId, delete that webhook via the Shopify API\n   * @async\n   * @method connectors/shopify/webhooks/delete\n   * @param {number} shopifyWebhookId The shopifyId of the webhook to delete\n   * @returns {number} the number of Packages updated (either 1 or 0)\n   */\n  async \"connectors/shopify/webhooks/delete\"(shopifyWebhookId) {\n    check(shopifyWebhookId, Number);\n\n    // Check for permissions\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    // This code is duplicated in `../api/api`\n    // But is left here intentionally as we are updating the specific shopifyPkg that this returns later in this method\n    const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n      shopId: Reaction.getShopId(),\n      name: \"reaction-connectors-shopify\"\n    });\n\n    if (!shopifyPkg) {\n      throw new Meteor.Error(\"server-error\", `No shopify package found for shop ${Reaction.getShopId()}`);\n    }\n\n    const { settings } = shopifyPkg;\n    const shopify = new Shopify({\n      apiKey: settings.apiKey,\n      password: settings.password,\n      shopName: settings.shopName\n    });\n\n    try {\n      // delete webhook on Shopify\n      await shopify.webhook.delete(shopifyWebhookId);\n\n      // Remove webhook from webhooks array in Shop specific connectors-shopify pkg\n      return Packages.update({ _id: shopifyPkg._id }, {\n        $pull: {\n          \"settings.webhooks\": { shopifyId: shopifyWebhookId }\n        }\n      });\n    } catch (error) {\n      // If Shopify returns a 404, it means this webhook doesn't exist\n      if (error.statusCode === 404) {\n        Logger.warn(\"api-error\", \"Shopify API Error, error deleting webhook, webhook not found.\");\n\n        // In this case, we need to delete the webhook from our database anyway\n        return Packages.update({ _id: shopifyPkg._id }, {\n          $pull: {\n            \"settings.webhooks\": { shopifyId: shopifyWebhookId }\n          }\n        });\n      }\n      // If there is another error, throw it.\n      throw new Meteor.Error(\"server-error\", `Shopify API Error, error deleting webhook: ${error}`);\n    }\n  },\n  /**\n   * Delete all registered Shopify webhooks via the Shopify API\n   * @async\n   * @method connectors/shopify/webhooks/deleteAll\n   * @returns {number} the number of Packages updated (either 1 or 0)\n   */\n  async \"connectors/shopify/webhooks/deleteAll\"() {\n    // Check for permissions\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n      shopId: Reaction.getShopId(),\n      name: \"reaction-connectors-shopify\"\n    });\n\n    if (!shopifyPkg) {\n      throw new Meteor.Error(\"server-error\", `No shopify package found for shop ${Reaction.getShopId()}`);\n    }\n\n    const { settings } = shopifyPkg;\n    const shopify = new Shopify({\n      apiKey: settings.apiKey,\n      password: settings.password,\n      shopName: settings.shopName\n    });\n\n    const registeredShopifyWebhooks = settings.webhooks;\n\n    // Exit early if no Shopify webhooks registered\n    if (!Array.isArray(registeredShopifyWebhooks) || registeredShopifyWebhooks.length <= 0) {\n      return Logger.debug(\"No Shopify webhooks registered. Exiting.\");\n    }\n\n    const responses = [];\n    // Start all asynchronous operations immediately.\n    for (const webhook of registeredShopifyWebhooks) {\n      responses.push(shopify.webhook.delete(webhook.shopifyId));\n    }\n\n    try {\n      const results = await Promise.all(responses);\n      Logger.debug(\"results\", results);\n    } catch (error) {\n      if (error.statusCode === 404) {\n        Logger.warn(\"api-warning\", \"At least one of the webhooks registered in Reaction was not found on Shopify\");\n      } else {\n        // TODO: Implement retry queue with exponential back-off for requests which are rejected\n        // because of too many requests\n        // In that case, we may need to resolve promises one-by-one instead of using Promise.all\n        Logger.error(\"api-error\", \"There was an error deleting webhooks on Shopify.\", error);\n      }\n    }\n\n    // Remove all registered webhooks\n    return Packages.update({ _id: shopifyPkg._id }, {\n      $set: {\n        \"settings.webhooks\": []\n      }\n    });\n  }\n};\n\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"8757a40b91917ca9f3c107c7b7594fee0b831ab9"}
