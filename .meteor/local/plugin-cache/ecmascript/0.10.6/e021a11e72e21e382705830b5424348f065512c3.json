{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/collections/schemas/tags.js","filename":"lib/collections/schemas/tags.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"lib/collections/schemas/tags.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"lib/collections/schemas/tags.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/collections/schemas/tags.js"}},"code":"module.export({\n  Tag: () => Tag\n});\nlet SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet registerSchema;\nmodule.watch(require(\"@reactioncommerce/schemas\"), {\n  registerSchema(v) {\n    registerSchema = v;\n  }\n\n}, 3);\nlet createdAtAutoValue, shopIdAutoValue;\nmodule.watch(require(\"./helpers\"), {\n  createdAtAutoValue(v) {\n    createdAtAutoValue = v;\n  },\n\n  shopIdAutoValue(v) {\n    shopIdAutoValue = v;\n  }\n\n}, 4);\nlet Metafield;\nmodule.watch(require(\"./metafield\"), {\n  Metafield(v) {\n    Metafield = v;\n  }\n\n}, 5);\nconst Tag = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    optional: true\n  },\n  \"name\": {\n    type: String,\n    index: 1\n  },\n  \"slug\": String,\n  \"type\": {\n    type: String,\n    optional: true\n  },\n  \"metafields\": {\n    type: Array,\n    optional: true\n  },\n  \"metafields.$\": Metafield,\n  \"position\": {\n    type: SimpleSchema.Integer,\n    optional: true\n  },\n  \"relatedTagIds\": {\n    type: Array,\n    optional: true,\n    index: 1\n  },\n  \"relatedTagIds.$\": String,\n  \"isDeleted\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"isTopLevel\": Boolean,\n  \"isVisible\": {\n    type: Boolean,\n    defaultValue: true\n  },\n  \"groups\": {\n    type: Array,\n    // groupIds that this tag belongs to\n    optional: true,\n    defaultValue: []\n  },\n  \"groups.$\": String,\n  \"shopId\": {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Tag shopId\"\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: createdAtAutoValue\n  },\n  \"updatedAt\": {\n    type: Date,\n\n    autoValue() {\n      return new Date();\n    }\n\n  }\n}, {\n  check,\n  tracker: Tracker\n});\nregisterSchema(\"Tag\", Tag);","map":{"version":3,"sources":["lib/collections/schemas/tags.js"],"names":["module","export","Tag","SimpleSchema","watch","require","default","v","check","Tracker","registerSchema","createdAtAutoValue","shopIdAutoValue","Metafield","type","String","optional","index","Array","Integer","Boolean","defaultValue","autoValue","label","Date","tracker"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,OAAI,MAAIA;AAAT,CAAd;AAA6B,IAAIC,YAAJ;AAAiBH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACC,UAAQC,CAAR,EAAU;AAACJ,mBAAaI,CAAb;AAAe;;AAA3B,CAArC,EAAkE,CAAlE;AAAqE,IAAIC,KAAJ;AAAUR,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,OAAJ;AAAYT,OAAOI,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACI,UAAQF,CAAR,EAAU;AAACE,cAAQF,CAAR;AAAU;;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIG,cAAJ;AAAmBV,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACK,iBAAeH,CAAf,EAAiB;AAACG,qBAAeH,CAAf;AAAiB;;AAApC,CAAlD,EAAwF,CAAxF;AAA2F,IAAII,kBAAJ,EAAuBC,eAAvB;AAAuCZ,OAAOI,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACM,qBAAmBJ,CAAnB,EAAqB;AAACI,yBAAmBJ,CAAnB;AAAqB,GAA5C;;AAA6CK,kBAAgBL,CAAhB,EAAkB;AAACK,sBAAgBL,CAAhB;AAAkB;;AAAlF,CAAlC,EAAsH,CAAtH;AAAyH,IAAIM,SAAJ;AAAcb,OAAOI,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACQ,YAAUN,CAAV,EAAY;AAACM,gBAAUN,CAAV;AAAY;;AAA1B,CAApC,EAAgE,CAAhE;AA0B5hB,MAAML,MAAM,IAAIC,YAAJ,CAAiB;AAClC,SAAO;AACLW,UAAMC,MADD;AAELC,cAAU;AAFL,GAD2B;AAKlC,UAAQ;AACNF,UAAMC,MADA;AAENE,WAAO;AAFD,GAL0B;AASlC,UAAQF,MAT0B;AAUlC,UAAQ;AACND,UAAMC,MADA;AAENC,cAAU;AAFJ,GAV0B;AAclC,gBAAc;AACZF,UAAMI,KADM;AAEZF,cAAU;AAFE,GAdoB;AAkBlC,kBAAgBH,SAlBkB;AAmBlC,cAAY;AACVC,UAAMX,aAAagB,OADT;AAEVH,cAAU;AAFA,GAnBsB;AAuBlC,mBAAiB;AACfF,UAAMI,KADS;AAEfF,cAAU,IAFK;AAGfC,WAAO;AAHQ,GAvBiB;AA4BlC,qBAAmBF,MA5Be;AA6BlC,eAAa;AACXD,UAAMM,OADK;AAEXC,kBAAc;AAFH,GA7BqB;AAiClC,gBAAcD,OAjCoB;AAkClC,eAAa;AACXN,UAAMM,OADK;AAEXC,kBAAc;AAFH,GAlCqB;AAsClC,YAAU;AACRP,UAAMI,KADE;AACK;AACbF,cAAU,IAFF;AAGRK,kBAAc;AAHN,GAtCwB;AA2ClC,cAAYN,MA3CsB;AA4ClC,YAAU;AACRD,UAAMC,MADE;AAERE,WAAO,CAFC;AAGRK,eAAWV,eAHH;AAIRW,WAAO;AAJC,GA5CwB;AAkDlC,eAAa;AACXT,UAAMU,IADK;AAEXF,eAAWX;AAFA,GAlDqB;AAsDlC,eAAa;AACXG,UAAMU,IADK;;AAEXF,gBAAY;AACV,aAAO,IAAIE,IAAJ,EAAP;AACD;;AAJU;AAtDqB,CAAjB,EA4DhB;AAAEhB,OAAF;AAASiB,WAAShB;AAAlB,CA5DgB,CAAZ;AA8DPC,eAAe,KAAf,EAAsBR,GAAtB","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { check } from \"meteor/check\";\nimport { Tracker } from \"meteor/tracker\";\nimport { registerSchema } from \"@reactioncommerce/schemas\";\nimport { createdAtAutoValue, shopIdAutoValue } from \"./helpers\";\nimport { Metafield } from \"./metafield\";\n\n/**\n * @name Tag\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} _id optional\n * @property {String} name required\n * @property {String} slug required\n * @property {String} type optional\n * @property {Metafield[]} metafields optional\n * @property {Number} position optional\n * @property {String[]} relatedTagIds optional\n * @property {Boolean} isDeleted default value: `false`\n * @property {Boolean} isTopLevel required\n * @property {Boolean} isVisible defalut value: `true`\n * @property {String[]} groups optional, default value: `[],` groupIds that this tag belongs to\n * @property {String} shopId Tag shopId\n * @property {Date} createdAt required\n * @property {Date} updatedAt required\n */\nexport const Tag = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    optional: true\n  },\n  \"name\": {\n    type: String,\n    index: 1\n  },\n  \"slug\": String,\n  \"type\": {\n    type: String,\n    optional: true\n  },\n  \"metafields\": {\n    type: Array,\n    optional: true\n  },\n  \"metafields.$\": Metafield,\n  \"position\": {\n    type: SimpleSchema.Integer,\n    optional: true\n  },\n  \"relatedTagIds\": {\n    type: Array,\n    optional: true,\n    index: 1\n  },\n  \"relatedTagIds.$\": String,\n  \"isDeleted\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"isTopLevel\": Boolean,\n  \"isVisible\": {\n    type: Boolean,\n    defaultValue: true\n  },\n  \"groups\": {\n    type: Array, // groupIds that this tag belongs to\n    optional: true,\n    defaultValue: []\n  },\n  \"groups.$\": String,\n  \"shopId\": {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Tag shopId\"\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: createdAtAutoValue\n  },\n  \"updatedAt\": {\n    type: Date,\n    autoValue() {\n      return new Date();\n    }\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"Tag\", Tag);\n"]},"sourceType":"script","hash":"e021a11e72e21e382705830b5424348f065512c3"}
