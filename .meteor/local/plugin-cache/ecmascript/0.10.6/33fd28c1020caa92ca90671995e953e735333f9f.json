{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/ui-search/lib/components/searchModal.js","filename":"imports/plugins/included/ui-search/lib/components/searchModal.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/ui-search/lib/components/searchModal.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/ui-search/lib/components/searchModal.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/ui-search/lib/components/searchModal.js"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.watch(require(\"classnames\"), {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet Reaction;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 3);\nlet TextField, Button, IconButton, SortableTableLegacy;\nmodule.watch(require(\"../../../../core/ui/client/components\"), {\n  TextField(v) {\n    TextField = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  IconButton(v) {\n    IconButton = v;\n  },\n\n  SortableTableLegacy(v) {\n    SortableTableLegacy = v;\n  }\n\n}, 4);\nlet ProductGridContainer;\nmodule.watch(require(\"../../../product-variant/containers/productGridContainer\"), {\n  default(v) {\n    ProductGridContainer = v;\n  }\n\n}, 5);\nlet accountsTable;\nmodule.watch(require(\"../helpers\"), {\n  accountsTable(v) {\n    accountsTable = v;\n  }\n\n}, 6);\n\nclass SearchModal extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.state = {\n      activeTab: \"products\"\n    }, this.handleToggleProducts = () => {\n      this.props.handleToggle(\"products\");\n      this.setState({\n        activeTab: \"products\"\n      });\n    }, this.handleToggleAccounts = () => {\n      this.props.handleToggle(\"accounts\");\n      this.setState({\n        activeTab: \"accounts\"\n      });\n    }, this.handleOnKeyUpToggleProducts = event => {\n      if (this.isKeyboardAction(event)) {\n        this.handleToggleProducts();\n      }\n    }, this.handleOnKeyUpToggleAccounts = event => {\n      if (this.isKeyboardAction(event)) {\n        this.handleToggleAccounts();\n      }\n    }, this.handleSubmit = event => {\n      // Ignore submit events from form as search happens on chnage of the TextField\n      event.preventDefault();\n    }, _temp;\n  }\n\n  componentDidMount() {\n    // Focus and select all text in the search input\n    const {\n      input\n    } = this.textField.refs;\n    input.select();\n  }\n\n  isKeyboardAction(event) {\n    // keyCode 32 (spacebar)\n    // keyCode 13 (enter/return)\n    return event.keyCode === 13 || event.keyCode === 32;\n  }\n\n  renderSearchInput() {\n    return React.createElement(\"form\", {\n      className: \"rui search-modal-input\",\n      role: \"search\",\n      onSubmit: this.handleSubmit\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search search-icon\"\n    }), React.createElement(TextField, {\n      id: \"search-modal-input\",\n      ref: input => {\n        this.textField = input;\n      },\n      label: `Search ${this.props.siteName}`,\n      i18nKeyLabel: \"search.searchInputLabel\",\n      className: \"search-input\",\n      textFieldStyle: {\n        marginBottom: 0\n      },\n      onChange: this.props.handleChange,\n      value: this.props.value\n    }), React.createElement(Button, {\n      className: \"search-clear\",\n      i18nKeyLabel: \"search.clearSearch\",\n      label: \"Clear\",\n      containerStyle: {\n        fontWeight: \"normal\"\n      },\n      type: \"button\",\n      onClick: this.props.handleClick\n    }));\n  }\n\n  renderSearchTypeToggle() {\n    if (Reaction.hasPermission(\"admin\")) {\n      const productTabClassName = classnames({\n        \"search-type-option\": true,\n        \"search-type-active\": this.state.activeTab === \"products\"\n      });\n      const accountsTabClassName = classnames({\n        \"search-type-option\": true,\n        \"search-type-active\": this.state.activeTab === \"accounts\"\n      });\n      return React.createElement(\"div\", {\n        className: \"rui search-type-toggle\"\n      }, React.createElement(\"button\", {\n        className: productTabClassName,\n        \"data-i18n\": \"search.searchTypeProducts\",\n        \"data-event-action\": \"searchCollection\",\n        \"data-event-value\": \"products\",\n        onClick: this.handleToggleProducts,\n        onKeyUp: this.handleOnKeyUpToggleProducts\n      }, \"Products\"), Reaction.hasPermission(\"accounts\") && React.createElement(\"button\", {\n        className: accountsTabClassName,\n        \"data-i18n\": \"search.searchTypeAccounts\",\n        \"data-event-action\": \"searchCollection\",\n        \"data-event-value\": \"accounts\",\n        onClick: this.handleToggleAccounts,\n        onKeyUp: this.handleOnKeyUpToggleAccounts\n      }, \"Accounts\"));\n    }\n  }\n\n  renderProductSearchTags() {\n    return React.createElement(\"div\", {\n      className: \"rui search-modal-tags-container\"\n    }, React.createElement(\"p\", {\n      className: \"rui suggested-tags\",\n      \"data-i18n\": \"search.suggestedTags\"\n    }, \"Suggested tags\"), React.createElement(\"div\", {\n      className: \"rui search-tags\"\n    }, this.props.tags.map(tag => React.createElement(\"span\", {\n      className: \"rui search-tag\",\n      id: tag._id,\n      key: tag._id,\n      onClick: () => this.props.handleTagClick(tag._id),\n      onKeyUp: event => {\n        if (this.isKeyboardAction(event)) {\n          this.props.handleTagClick(tag._id);\n        }\n      },\n      role: \"button\",\n      tabIndex: 0\n    }, tag.name))));\n  }\n\n  render() {\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"rui search-modal-close\"\n    }, React.createElement(IconButton, {\n      icon: \"fa fa-times\",\n      onClick: this.props.unmountMe\n    })), React.createElement(\"div\", {\n      className: \"rui search-modal-header\"\n    }, this.renderSearchInput(), this.renderSearchTypeToggle(), this.props.tags.length > 0 && this.renderProductSearchTags()), React.createElement(\"div\", {\n      className: \"rui search-modal-results-container\"\n    }, this.props.products.length > 0 && React.createElement(ProductGridContainer, {\n      products: this.props.products,\n      unmountMe: this.props.unmountMe,\n      isSearch: true\n    }), this.props.accounts.length > 0 && React.createElement(\"div\", {\n      className: \"data-table\"\n    }, React.createElement(\"div\", {\n      className: \"table-responsive\"\n    }, React.createElement(SortableTableLegacy, {\n      data: this.props.accounts,\n      columns: accountsTable(),\n      onRowClick: this.props.handleAccountClick\n    })))));\n  }\n\n}\n\nSearchModal.propTypes = {\n  accounts: PropTypes.array,\n  handleAccountClick: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleClick: PropTypes.func,\n  handleTagClick: PropTypes.func,\n  handleToggle: PropTypes.func,\n  products: PropTypes.array,\n  siteName: PropTypes.string,\n  tags: PropTypes.array,\n  unmountMe: PropTypes.func,\n  value: PropTypes.string\n};\nmodule.exportDefault(SearchModal);","map":{"version":3,"sources":["imports/plugins/included/ui-search/lib/components/searchModal.js"],"names":["React","Component","module","watch","require","default","v","PropTypes","classnames","Reaction","TextField","Button","IconButton","SortableTableLegacy","ProductGridContainer","accountsTable","SearchModal","state","activeTab","handleToggleProducts","props","handleToggle","setState","handleToggleAccounts","handleOnKeyUpToggleProducts","event","isKeyboardAction","handleOnKeyUpToggleAccounts","handleSubmit","preventDefault","componentDidMount","input","textField","refs","select","keyCode","renderSearchInput","siteName","marginBottom","handleChange","value","fontWeight","handleClick","renderSearchTypeToggle","hasPermission","productTabClassName","accountsTabClassName","renderProductSearchTags","tags","map","tag","_id","handleTagClick","name","render","unmountMe","length","products","accounts","handleAccountClick","propTypes","array","func","string","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Reaction } from \"/client/api\";\nimport { TextField, Button, IconButton, SortableTableLegacy } from \"@reactioncommerce/reaction-ui\";\nimport ProductGridContainer from \"/imports/plugins/included/product-variant/containers/productGridContainer\";\nimport { accountsTable } from \"../helpers\";\n\nclass SearchModal extends Component {\n  static propTypes = {\n    accounts: PropTypes.array,\n    handleAccountClick: PropTypes.func,\n    handleChange: PropTypes.func,\n    handleClick: PropTypes.func,\n    handleTagClick: PropTypes.func,\n    handleToggle: PropTypes.func,\n    products: PropTypes.array,\n    siteName: PropTypes.string,\n    tags: PropTypes.array,\n    unmountMe: PropTypes.func,\n    value: PropTypes.string\n  }\n\n  state = {\n    activeTab: \"products\"\n  }\n\n  componentDidMount() {\n    // Focus and select all text in the search input\n    const { input } = this.textField.refs;\n    input.select();\n  }\n\n\n  isKeyboardAction(event) {\n    // keyCode 32 (spacebar)\n    // keyCode 13 (enter/return)\n    return event.keyCode === 13 || event.keyCode === 32;\n  }\n\n  handleToggleProducts = () => {\n    this.props.handleToggle(\"products\");\n    this.setState({ activeTab: \"products\" });\n  }\n\n  handleToggleAccounts = () => {\n    this.props.handleToggle(\"accounts\");\n    this.setState({ activeTab: \"accounts\" });\n  }\n\n  handleOnKeyUpToggleProducts = (event) => {\n    if (this.isKeyboardAction(event)) {\n      this.handleToggleProducts();\n    }\n  }\n\n  handleOnKeyUpToggleAccounts = (event) => {\n    if (this.isKeyboardAction(event)) {\n      this.handleToggleAccounts();\n    }\n  }\n\n  handleSubmit = (event) => {\n    // Ignore submit events from form as search happens on chnage of the TextField\n    event.preventDefault();\n  }\n\n  renderSearchInput() {\n    return (\n      <form className=\"rui search-modal-input\" role=\"search\" onSubmit={this.handleSubmit}>\n        <i className=\"fa fa-search search-icon\" />\n        <TextField\n          id=\"search-modal-input\"\n          ref={(input) => { this.textField = input; }}\n          label={`Search ${this.props.siteName}`}\n          i18nKeyLabel=\"search.searchInputLabel\"\n          className=\"search-input\"\n          textFieldStyle={{ marginBottom: 0 }}\n          onChange={this.props.handleChange}\n          value={this.props.value}\n        />\n        <Button\n          className=\"search-clear\"\n          i18nKeyLabel=\"search.clearSearch\"\n          label=\"Clear\"\n          containerStyle={{ fontWeight: \"normal\" }}\n          type=\"button\"\n          onClick={this.props.handleClick}\n        />\n      </form>\n    );\n  }\n\n  renderSearchTypeToggle() {\n    if (Reaction.hasPermission(\"admin\")) {\n      const productTabClassName = classnames({\n        \"search-type-option\": true,\n        \"search-type-active\": this.state.activeTab === \"products\"\n      });\n\n      const accountsTabClassName = classnames({\n        \"search-type-option\": true,\n        \"search-type-active\": this.state.activeTab === \"accounts\"\n      });\n\n      return (\n        <div className=\"rui search-type-toggle\">\n          <button\n            className={productTabClassName}\n            data-i18n=\"search.searchTypeProducts\"\n            data-event-action=\"searchCollection\"\n            data-event-value=\"products\"\n            onClick={this.handleToggleProducts}\n            onKeyUp={this.handleOnKeyUpToggleProducts}\n          >\n            Products\n          </button>\n          {Reaction.hasPermission(\"accounts\") &&\n            <button\n              className={accountsTabClassName}\n              data-i18n=\"search.searchTypeAccounts\"\n              data-event-action=\"searchCollection\"\n              data-event-value=\"accounts\"\n              onClick={this.handleToggleAccounts}\n              onKeyUp={this.handleOnKeyUpToggleAccounts}\n            >\n              Accounts\n            </button>\n          }\n        </div>\n      );\n    }\n  }\n\n  renderProductSearchTags() {\n    return (\n      <div className=\"rui search-modal-tags-container\">\n        <p className=\"rui suggested-tags\" data-i18n=\"search.suggestedTags\">Suggested tags</p>\n        <div className=\"rui search-tags\">\n          {this.props.tags.map((tag) => (\n            <span\n              className=\"rui search-tag\"\n              id={tag._id} key={tag._id}\n              onClick={() => this.props.handleTagClick(tag._id)}\n              onKeyUp={(event) => {\n                if (this.isKeyboardAction(event)) {\n                  this.props.handleTagClick(tag._id);\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n            >\n              {tag.name}\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"rui search-modal-close\"><IconButton icon=\"fa fa-times\" onClick={this.props.unmountMe} /></div>\n        <div className=\"rui search-modal-header\">\n          {this.renderSearchInput()}\n          {this.renderSearchTypeToggle()}\n          {this.props.tags.length > 0 && this.renderProductSearchTags()}\n        </div>\n        <div className=\"rui search-modal-results-container\">\n          {this.props.products.length > 0 &&\n            <ProductGridContainer\n              products={this.props.products}\n              unmountMe={this.props.unmountMe}\n              isSearch={true}\n            />\n          }\n          {this.props.accounts.length > 0 &&\n            <div className=\"data-table\">\n              <div className=\"table-responsive\">\n                <SortableTableLegacy\n                  data={this.props.accounts}\n                  columns={accountsTable()}\n                  onRowClick={this.props.handleAccountClick}\n                />\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchModal;\n"]},"sourceType":"script","hash":"33fd28c1020caa92ca90671995e953e735333f9f"}
