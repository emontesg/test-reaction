{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/imports/fixtures/shops.js","filename":"server/imports/fixtures/shops.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/imports/fixtures/shops.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/imports/fixtures/shops.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/imports/fixtures/shops.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  getShop: () => getShop,\n  getShopId: () => getShopId,\n  getAddress: () => getAddress,\n  createActiveShop: () => createActiveShop,\n  createShopFactory: () => createShopFactory,\n  createActiveShopFactory: () => createActiveShopFactory\n});\n\nlet _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  default(v) {\n    _defaults = v;\n  }\n\n}, 0);\nlet faker;\nmodule.watch(require(\"faker\"), {\n  default(v) {\n    faker = v;\n  }\n\n}, 1);\nlet Factory;\nmodule.watch(require(\"meteor/dburles:factory\"), {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 2);\nlet Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet Shops;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Shops(v) {\n    Shops = v;\n  }\n\n}, 4);\n\nfunction getShop() {\n  createShopFactory();\n  const existingShop = Shops.findOne();\n  return existingShop || Factory.create(\"shop\");\n}\n\nfunction getShopId() {\n  const shop = Shops.find({}).fetch()[0];\n  return shop && shop._id;\n}\n\nfunction getAddress(options = {}) {\n  const defaults = {\n    fullName: faker.name.findName(),\n    address1: faker.address.streetAddress(),\n    address2: faker.address.secondaryAddress(),\n    city: faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: faker.address.stateAbbr(),\n    postal: faker.address.zipCode(),\n    country: faker.address.countryCode(),\n    isCommercial: faker.random.boolean(),\n    isShippingDefault: faker.random.boolean(),\n    isBillingDefault: faker.random.boolean(),\n    metafields: []\n  };\n  return _defaults(options, defaults);\n}\n\nconst shop = {\n  name: () => faker.internet.domainName(),\n  description: faker.company.catchPhrase(),\n  keywords: faker.company.bsAdjective(),\n  addressBook: [getAddress()],\n  domains: [\"localhost\"],\n  emails: [{\n    address: faker.internet.email(),\n    verified: faker.random.boolean()\n  }],\n  currency: \"USD\",\n  // could use faker.finance.currencyCode()\n  currencies: {\n    USD: {\n      format: \"%s%v\",\n      symbol: \"$\"\n    },\n    EUR: {\n      format: \"%v %s\",\n      symbol: \"â‚¬\",\n      decimal: \",\",\n      thousand: \".\"\n    }\n  },\n  locale: \"en\",\n  locales: {\n    continents: {\n      NA: \"North America\"\n    },\n    countries: {\n      US: {\n        name: \"United States\",\n        native: \"United States\",\n        phone: \"1\",\n        continent: \"NA\",\n        capital: \"Washington D.C.\",\n        currency: \"USD,USN,USS\",\n        languages: \"en\"\n      }\n    }\n  },\n  baseUOL: \"in\",\n  unitsOfLength: [{\n    uol: \"in\",\n    label: \"Inches\",\n    default: true\n  }, {\n    uol: \"cm\",\n    label: \"Centimeters\"\n  }, {\n    uol: \"ft\",\n    label: \"Feet\"\n  }],\n  baseUOM: \"oz\",\n  unitsOfMeasure: [{\n    uom: \"oz\",\n    label: \"Ounces\",\n    default: true\n  }, {\n    uom: \"lb\",\n    label: \"Pounds\"\n  }, {\n    uom: \"g\",\n    label: \"Grams\"\n  }, {\n    uom: \"kg\",\n    label: \"Kilograms\"\n  }],\n  layout: [{\n    layout: \"coreLayout\",\n    workflow: \"coreLayout\",\n    theme: \"default\",\n    enabled: true\n  }, {\n    layout: \"coreLayout\",\n    workflow: \"coreCartWorkflow\",\n    collection: \"Cart\",\n    theme: \"default\",\n    enabled: true\n  }, {\n    layout: \"coreLayout\",\n    workflow: \"coreOrderWorkflow\",\n    collection: \"Orders\",\n    theme: \"default\",\n    enabled: true\n  }, {\n    layout: \"coreLayout\",\n    workflow: \"coreOrderShipmentWorkflow\",\n    collection: \"Orders\",\n    theme: \"default\",\n    enabled: true\n  }],\n  workflow: {\n    status: \"active\"\n  },\n  public: true,\n  brandAssets: [{\n    mediaId: \"J8Bhq3uTtdgwZx3rz\",\n    type: \"navbarBrandImage\"\n  }],\n  timezone: \"US/Pacific\",\n  metafields: [],\n  shopType: \"primary\",\n  createdAt: new Date(),\n  updatedAt: new Date()\n};\nconst activeShop = {\n  workflow: {\n    status: \"active\"\n  },\n  _id: Random.id()\n};\n/**\n * @method createActiveShop\n * @memberof Fixtures\n * @summary Find and return an existing shop from option parameters, or create an active shop factory\n * @param  {Object} [options={}] Any shop properties\n * @return {Object}              Shop, with active status\n */\n\nfunction createActiveShop(options = {}) {\n  const existingActiveShop = Shops.findOne((0, _objectSpread2.default)({\n    \"workflow.status\": \"active\"\n  }, options)); // If we found an existingActiveShop, return it\n\n  if (existingActiveShop) {\n    return existingActiveShop;\n  } // Otherwise, we need to create a new shop from the factory\n  // Setup the activeShop factory definition\n\n\n  createActiveShopFactory(); // Create a new shop from the factory with the provided options\n\n  return Factory.create(\"activeShop\", options);\n}\n\nfunction createShopFactory() {\n  Factory.define(\"shop\", Shops, shop);\n}\n\nfunction createActiveShopFactory() {\n  Factory.define(\"activeShop\", Shops, Object.assign({}, shop, activeShop));\n}\n\nmodule.exportDefault(function () {\n  createShopFactory();\n  createActiveShopFactory();\n});","map":{"version":3,"sources":["server/imports/fixtures/shops.js"],"names":["module","export","getShop","getShopId","getAddress","createActiveShop","createShopFactory","createActiveShopFactory","_defaults","watch","require","default","v","faker","Factory","Random","Shops","existingShop","findOne","create","shop","find","fetch","_id","options","defaults","fullName","name","findName","address1","address","streetAddress","address2","secondaryAddress","city","company","companyName","phone","phoneNumber","region","stateAbbr","postal","zipCode","country","countryCode","isCommercial","random","boolean","isShippingDefault","isBillingDefault","metafields","internet","domainName","description","catchPhrase","keywords","bsAdjective","addressBook","domains","emails","email","verified","currency","currencies","USD","format","symbol","EUR","decimal","thousand","locale","locales","continents","NA","countries","US","native","continent","capital","languages","baseUOL","unitsOfLength","uol","label","baseUOM","unitsOfMeasure","uom","layout","workflow","theme","enabled","collection","status","public","brandAssets","mediaId","type","timezone","shopType","createdAt","Date","updatedAt","activeShop","id","existingActiveShop","define","Object","assign","exportDefault"],"mappings":"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","sourcesContent":["import faker from \"faker\";\nimport _ from \"lodash\";\nimport { Factory } from \"meteor/dburles:factory\";\nimport { Random } from \"meteor/random\";\nimport { Shops } from \"/lib/collections\";\n\n/**\n * @method getShop\n * @memberof Fixtures\n * @summary Get an existing shop or create a shop factory\n * @return {Object} Shop\n */\nexport function getShop() {\n  createShopFactory();\n  const existingShop = Shops.findOne();\n  return existingShop || Factory.create(\"shop\");\n}\n\n/**\n * @method getShopId\n * @memberof Fixtures\n * @summary Get the first shop found and return the shop id\n * @return {String} Shop ID\n */\nexport function getShopId() {\n  const shop = Shops.find({}).fetch()[0];\n  return shop && shop._id;\n}\n\n/**\n * @method getAddress\n * @memberof Fixtures\n * @summary Get an address, supplying options (optional)\n * @param {Object} [options={}] Address options, optional\n * @param {String} [options.fullName] fullName - `faker.name.findName()`\n * @param {String} [options.address1] address1 - `faker.address.streetAddress()`\n * @param {String} [options.address2] address2 - `faker.address.secondaryAddress()`\n * @param {String} [options.city] city - `faker.address.city()`\n * @param {String} [options.company] company - `faker.company.companyName()`\n * @param {String} [options.phone] phone - `faker.phone.phoneNumber()`\n * @param {String} [options.region] region - `faker.address.stateAbbr()`\n * @param {String} [options.postal] postal - `faker.address.zipCode()`\n * @param {String} [options.country] country - `faker.address.countryCode()`\n * @param {String} [options.isCommercial] isCommercial - `faker.random.boolean()`\n * @param {Boolean} [options.isShippingDefault] isShippingDefault - `faker.random.boolean()`\n * @param {Boolean} [options.isBillingDefault] isBillingDefault - `faker.random.boolean()`\n * @param {Array} [options.metafields] metafields - `[]`\n * @return {Object} Address object\n */\nexport function getAddress(options = {}) {\n  const defaults = {\n    fullName: faker.name.findName(),\n    address1: faker.address.streetAddress(),\n    address2: faker.address.secondaryAddress(),\n    city: faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: faker.address.stateAbbr(),\n    postal: faker.address.zipCode(),\n    country: faker.address.countryCode(),\n    isCommercial: faker.random.boolean(),\n    isShippingDefault: faker.random.boolean(),\n    isBillingDefault: faker.random.boolean(),\n    metafields: []\n  };\n  return _.defaults(options, defaults);\n}\n\nconst shop = {\n  name: () => faker.internet.domainName(),\n  description: faker.company.catchPhrase(),\n  keywords: faker.company.bsAdjective(),\n  addressBook: [getAddress()],\n  domains: [\"localhost\"],\n  emails: [\n    {\n      address: faker.internet.email(),\n      verified: faker.random.boolean()\n    }\n  ],\n  currency: \"USD\", // could use faker.finance.currencyCode()\n  currencies: {\n    USD: {\n      format: \"%s%v\",\n      symbol: \"$\"\n    },\n    EUR: {\n      format: \"%v %s\",\n      symbol: \"â‚¬\",\n      decimal: \",\",\n      thousand: \".\"\n    }\n  },\n  locale: \"en\",\n  locales: {\n    continents: {\n      NA: \"North America\"\n    },\n    countries: {\n      US: {\n        name: \"United States\",\n        native: \"United States\",\n        phone: \"1\",\n        continent: \"NA\",\n        capital: \"Washington D.C.\",\n        currency: \"USD,USN,USS\",\n        languages: \"en\"\n      }\n    }\n  },\n  baseUOL: \"in\",\n  unitsOfLength: [{\n    uol: \"in\",\n    label: \"Inches\",\n    default: true\n  }, {\n    uol: \"cm\",\n    label: \"Centimeters\"\n  }, {\n    uol: \"ft\",\n    label: \"Feet\"\n  }],\n  baseUOM: \"oz\",\n  unitsOfMeasure: [{\n    uom: \"oz\",\n    label: \"Ounces\",\n    default: true\n  }, {\n    uom: \"lb\",\n    label: \"Pounds\"\n  }, {\n    uom: \"g\",\n    label: \"Grams\"\n  }, {\n    uom: \"kg\",\n    label: \"Kilograms\"\n  }],\n  layout: [{\n    layout: \"coreLayout\",\n    workflow: \"coreLayout\",\n    theme: \"default\",\n    enabled: true\n  }, {\n    layout: \"coreLayout\",\n    workflow: \"coreCartWorkflow\",\n    collection: \"Cart\",\n    theme: \"default\",\n    enabled: true\n  }, {\n    layout: \"coreLayout\",\n    workflow: \"coreOrderWorkflow\",\n    collection: \"Orders\",\n    theme: \"default\",\n    enabled: true\n  }, {\n    layout: \"coreLayout\",\n    workflow: \"coreOrderShipmentWorkflow\",\n    collection: \"Orders\",\n    theme: \"default\",\n    enabled: true\n  }],\n  workflow: {\n    status: \"active\"\n  },\n  public: true,\n  brandAssets: [\n    {\n      mediaId: \"J8Bhq3uTtdgwZx3rz\",\n      type: \"navbarBrandImage\"\n    }\n  ],\n  timezone: \"US/Pacific\",\n  metafields: [],\n  shopType: \"primary\",\n  createdAt: new Date(),\n  updatedAt: new Date()\n};\n\nconst activeShop = {\n  workflow: {\n    status: \"active\"\n  },\n  _id: Random.id()\n};\n\n/**\n * @method createActiveShop\n * @memberof Fixtures\n * @summary Find and return an existing shop from option parameters, or create an active shop factory\n * @param  {Object} [options={}] Any shop properties\n * @return {Object}              Shop, with active status\n */\nexport function createActiveShop(options = {}) {\n  const existingActiveShop = Shops.findOne({ \"workflow.status\": \"active\", ...options });\n\n  // If we found an existingActiveShop, return it\n  if (existingActiveShop) {\n    return existingActiveShop;\n  }\n  // Otherwise, we need to create a new shop from the factory\n\n  // Setup the activeShop factory definition\n  createActiveShopFactory();\n\n  // Create a new shop from the factory with the provided options\n  return Factory.create(\"activeShop\", options);\n}\n\n/**\n * @method createShopFactory\n * @memberof Fixtures\n * @summary Create Shop factory. Shop name should be unique for the slug to be unique.\n * @property {String} name - `faker.internet.domainName()`\n * @property {String} description - `faker.company.catchPhrase()`\n * @property {String} keywords - `faker.company.bsAdjective()`\n * @property {Array} addressBook - `[getAddress()]`\n * @property {Array} domains - `[\"localhost\"]`\n * @property {Array} emails - `[]`\n * @property {String} emails.address - `faker.internet.email()`\n * @property {Boolean} emails.verified - `faker.random.boolean()`\n * @property {String} currency - `\"USD\"` - Could use faker.finance.currencyCode()\n * @property {Object} currencies - `{}`\n * @property {Object} currencies.USD - `{}`\n * @property {String} currencies.USD.format - `\"%s%v\"`\n * @property {String} currencies.USD.symbol - `\"$\"`\n * @property {Object} currencies.EUR - `{}`\n * @property {String} currencies.EUR.format - `\"%v %s\"`\n * @property {String} currencies.EUR.symbol - `\"â‚¬\"`\n * @property {String} currencies.EUR.decimal - `\",\"`\n * @property {String} currencies.EUR.thousand - `\".\"`\n * @property {String} locale - `\"en\"`\n * @property {Object} locales - `{}`\n * @property {Object} locales.continents - `{}`\n * @property {String} locales.continents.NA - `\"North America\"`\n * @property {Object} locales.countries - `{}`\n * @property {Object} locales.countries.US - `{}`\n * @property {String} locales.countries.name - `\"United States\"`\n * @property {String} locales.countries.native - `\"United States\"`\n * @property {String} locales.countries.phone - `\"1\"`\n * @property {String} locales.countries.continent - `\"NA\"`\n * @property {String} locales.countries.capital - `\"Washington D.C.\"`\n * @property {String} locales.countries.currency - `\"USD,USN,USS\"`\n * @property {String} locales.countries.languages - `\"en\"`\n * @property {String} baseUOL - `\"in\"`\n * @property {Array} unitsOfLength - `[{}]`\n * @property {String} unitsOfLength.uol - `\"in\"`\n * @property {String} unitsOfLength.label - `\"Inches\"`\n * @property {String} unitsOfLength.default - `true`\n * @property {String} unitsOfLength.uol - `\"cm\"`\n * @property {String} unitsOfLength.label - `\"Centimeters\"`\n * @property {String} unitsOfLength.uol - `\"ft\"`\n * @property {String} unitsOfLength.label - `\"Feet\"`\n * @property {String} baseUOM - `\"oz\"`\n * @property {Array} unitsOfMeasure - `[{}]`\n * @property {String} unitsOfMeasure.uom - `\"oz\"`\n * @property {String} unitsOfMeasure.label - `\"Ounces\"`\n * @property {String} unitsOfMeasure.default - `true`\n * @property {String} unitsOfMeasure.uom - `\"lb\"`\n * @property {String} unitsOfMeasure.label - `\"Pounds\"`\n * @property {String} unitsOfMeasure.uom - `\"g\"`\n * @property {String} unitsOfMeasure.label - `\"Grams\"`\n * @property {String} unitsOfMeasure.uom - `\"kg\"`\n * @property {String} unitsOfMeasure.label - `\"Kilograms\"`\n * @property {Array} layout - `[{}]`\n * @property {String} layout - `\"coreLayout\"`\n * @property {String} workflow - `\"coreLayout\"`\n * @property {String} theme - `\"default\"`\n * @property {Boolean} enabled - `true`\n * @property {String} layout - `\"coreLayout\"`\n * @property {String} workflow - `\"coreCartWorkflow\"`\n * @property {String} collection - `\"Cart\"`\n * @property {String} theme - `\"default\"`\n * @property {Boolean} enabled - `true`\n * @property {String} layout - `\"coreLayout\"`\n * @property {String} workflow - `\"coreOrderWorkflow\"`\n * @property {String} collection - `\"Orders\"`\n * @property {String} theme - `\"default\"`\n * @property {Boolean} enabled - `true`\n * @property {String} layout - `\"coreLayout\"`\n * @property {String} workflow - `\"coreOrderShipmentWorkflow\"`\n * @property {String} collection - `\"Orders\"`\n * @property {String} theme - `\"default\"`\n * @property {Boolean} enabled - `true`\n * @property {Object} workflow - `{}`\n * @property {String} workflow.status - `\"active\"`\n * @property {Boolean} public - `true`\n * @property {Array} brandAssets - `[]`\n * @property {String} mediaId - `\"J8Bhq3uTtdgwZx3rz\"`\n * @property {String} type - `\"navbarBrandImage\"`\n * @property {String} timezone - `\"US/Pacific\"`\n * @property {Array} metafields - `[]`\n * @property {String} shopType - `\"primary\"` - Not having a primary shop will cause test failures. one shop in the marketplace is required as default shop. This is used to control marketplace settings.\n * @property {Date} createdAt - `new Date()`\n * @property {Date} updatedAt - `new Date()`\n * @return {Object} Shop with status `\"active\"`\n */\nexport function createShopFactory() {\n  Factory.define(\"shop\", Shops, shop);\n}\n\n/**\n * @name createActiveShopFactory\n * @memberof Fixtures\n * @summary Returns an active shop factory\n * @property {Object} workflow\n * @property {String} status - `\"active\"`\n * @property {String} id - `Random.id()`\n * @return {Object} Shop with status `\"active\"`\n */\nexport function createActiveShopFactory() {\n  Factory.define(\"activeShop\", Shops, Object.assign({}, shop, activeShop));\n}\n\nexport default function () {\n  createShopFactory();\n  createActiveShopFactory();\n}\n"]},"sourceType":"script","hash":"bc1ed9b89d2d70ffc5c5df1ddea0fc4fef176e8b"}
