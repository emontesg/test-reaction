{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/checkout/client/helpers/cart.js","filename":"imports/plugins/core/checkout/client/helpers/cart.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/checkout/client/helpers/cart.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/checkout/client/helpers/cart.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/checkout/client/helpers/cart.js"}},"code":"var Cart;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Cart: function (v) {\n    Cart = v;\n  }\n}, 0);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\n\n/*\n * Template helpers for cart\n *\n */\n\n/**\n * cart template helper\n * @description\n * methods to return cart calculated values\n * cartCount, cartSubTotal, cartShipping, cartTaxes, cartTotal\n * are calculated by a transformation on the collection\n * and are available to use in template as cart.xxx\n * in template: {{cart.getCount}}\n * in code: Cart.findOne().getTotal()\n * @return {Object} returns inventory helpers\n */\nTemplate.registerHelper(\"cart\", function () {\n  var cartHelpers = {\n    /**\n     * showCartIconWarning\n     * @return {Boolean} return true if low inventory on any item in cart\n     */\n    showCartIconWarning: function () {\n      if (this.showLowInventoryWarning()) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * showLowInventoryWarning\n     * @return {Boolean} return true if low inventory on any item in cart\n     */\n    showLowInventoryWarning: function () {\n      var item;\n      var storedCart = Cart.findOne(); // we're not being picky here - first thing in cart\n      // that is low will trigger a inventory warning\n\n      if (storedCart && storedCart.items) {\n        for (var _iterator = storedCart.items, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            item = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            item = _i.value;\n          }\n\n          if (item.variants && item.variants.inventoryPolicy && item.variants.lowInventoryWarningThreshold) {\n            return item.variants.inventoryQuantity <= item.variants.lowInventoryWarningThreshold;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * showLowInventoryWarning\n     * @param {Object} variant - variant object to check inventory levels on\n     * @return {Boolean} return true if low inventory on variant\n     */\n    showItemLowInventoryWarning: function (variant) {\n      if (variant && variant.inventoryPolicy && variant.lowInventoryWarningThreshold) {\n        return variant.inventoryQuantity <= variant.lowInventoryWarningThreshold;\n      }\n\n      return false;\n    }\n  };\n  return cartHelpers;\n});\n/**\n * cartPayerName\n * @summary gets current cart billing address / payment name\n * @return {String} returns cart.billing[0].fullName\n */\n\nTemplate.registerHelper(\"cartPayerName\", function () {\n  var cart = Cart.findOne();\n\n  if (cart && cart.billing && cart.billing[0] && cart.billing[0].address && cart.billing[0].address.fullName) {\n    var name = cart.billing[0].address.fullName;\n    if (name.replace(/[a-zA-Z ]*/, \"\").length === 0) return name;\n  }\n});","map":{"version":3,"sources":["imports/plugins/core/checkout/client/helpers/cart.js"],"names":["Cart","module","watch","require","v","Template","registerHelper","cartHelpers","showCartIconWarning","showLowInventoryWarning","item","storedCart","findOne","items","variants","inventoryPolicy","lowInventoryWarningThreshold","inventoryQuantity","showItemLowInventoryWarning","variant","cart","billing","address","fullName","name","replace","length"],"mappings":"AAAA,IAAIA,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,mCAAR,CAAb,EAA0D;AAACH,MAAD,YAAMI,CAAN,EAAQ;AAACJ,WAAKI,CAAL;AAAO;AAAhB,CAA1D,EAA4E,CAA5E;AAA+E,IAAIC,QAAJ;AAAaJ,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACE,UAAD,YAAUD,CAAV,EAAY;AAACC,eAASD,CAAT;AAAW;AAAxB,CAA1C,EAAoE,CAApE;;AAGrG;;;;;AAKA;;;;;;;;;;;AAWAC,SAASC,cAAT,CAAwB,MAAxB,EAAgC,YAAM;AACpC,MAAMC,cAAc;AAClB;;;;AAIAC,uBALkB,cAKI;AACpB,UAAI,KAAKC,uBAAL,EAAJ,EAAoC;AAClC,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAViB;;AAWlB;;;;AAIAA,2BAfkB,cAeQ;AACxB,UAAIC,IAAJ;AACA,UAAMC,aAAaX,KAAKY,OAAL,EAAnB,CAFwB,CAGxB;AACA;;AACA,UAAID,cAAcA,WAAWE,KAA7B,EAAoC;AAClC,6BAAaF,WAAWE,KAAxB,kHAA+B;AAAA;AAAA;AAA1BH,gBAA0B;AAAA;AAAA;AAAA;AAA1BA,gBAA0B;AAAA;;AAC7B,cAAIA,KAAKI,QAAL,IAAiBJ,KAAKI,QAAL,CAAcC,eAA/B,IACFL,KAAKI,QAAL,CAAcE,4BADhB,EAC8C;AAC5C,mBAAON,KAAKI,QAAL,CAAcG,iBAAd,IACLP,KAAKI,QAAL,CAAcE,4BADhB;AAED;AACF;AACF;;AACD,aAAO,KAAP;AACD,KA9BiB;;AA+BlB;;;;;AAKAE,+BApCkB,YAoCUC,OApCV,EAoCmB;AACnC,UAAIA,WAAWA,QAAQJ,eAAnB,IACFI,QAAQH,4BADV,EACwC;AACtC,eAAOG,QAAQF,iBAAR,IACLE,QAAQH,4BADV;AAED;;AACD,aAAO,KAAP;AACD;AA3CiB,GAApB;AA6CA,SAAOT,WAAP;AACD,CA/CD;AAiDA;;;;;;AAKAF,SAASC,cAAT,CAAwB,eAAxB,EAAyC,YAAM;AAC7C,MAAMc,OAAOpB,KAAKY,OAAL,EAAb;;AACA,MAAIQ,QAAQA,KAAKC,OAAb,IAAwBD,KAAKC,OAAL,CAAa,CAAb,CAAxB,IAA2CD,KAAKC,OAAL,CAAa,CAAb,EAAgBC,OAA3D,IAAsEF,KAAKC,OAAL,CAAa,CAAb,EAAgBC,OAAhB,CAAwBC,QAAlG,EAA4G;AAC1G,QAAMC,OAAOJ,KAAKC,OAAL,CAAa,CAAb,EAAgBC,OAAhB,CAAwBC,QAArC;AACA,QAAIC,KAAKC,OAAL,CAAa,YAAb,EAA2B,EAA3B,EAA+BC,MAA/B,KAA0C,CAA9C,EAAiD,OAAOF,IAAP;AAClD;AACF,CAND","sourcesContent":["import { Cart } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Template helpers for cart\n *\n */\n\n/**\n * cart template helper\n * @description\n * methods to return cart calculated values\n * cartCount, cartSubTotal, cartShipping, cartTaxes, cartTotal\n * are calculated by a transformation on the collection\n * and are available to use in template as cart.xxx\n * in template: {{cart.getCount}}\n * in code: Cart.findOne().getTotal()\n * @return {Object} returns inventory helpers\n */\nTemplate.registerHelper(\"cart\", () => {\n  const cartHelpers = {\n    /**\n     * showCartIconWarning\n     * @return {Boolean} return true if low inventory on any item in cart\n     */\n    showCartIconWarning() {\n      if (this.showLowInventoryWarning()) {\n        return true;\n      }\n      return false;\n    },\n    /**\n     * showLowInventoryWarning\n     * @return {Boolean} return true if low inventory on any item in cart\n     */\n    showLowInventoryWarning() {\n      let item;\n      const storedCart = Cart.findOne();\n      // we're not being picky here - first thing in cart\n      // that is low will trigger a inventory warning\n      if (storedCart && storedCart.items) {\n        for (item of storedCart.items) {\n          if (item.variants && item.variants.inventoryPolicy &&\n            item.variants.lowInventoryWarningThreshold) {\n            return item.variants.inventoryQuantity <=\n              item.variants.lowInventoryWarningThreshold;\n          }\n        }\n      }\n      return false;\n    },\n    /**\n     * showLowInventoryWarning\n     * @param {Object} variant - variant object to check inventory levels on\n     * @return {Boolean} return true if low inventory on variant\n     */\n    showItemLowInventoryWarning(variant) {\n      if (variant && variant.inventoryPolicy &&\n        variant.lowInventoryWarningThreshold) {\n        return variant.inventoryQuantity <=\n          variant.lowInventoryWarningThreshold;\n      }\n      return false;\n    }\n  };\n  return cartHelpers;\n});\n\n/**\n * cartPayerName\n * @summary gets current cart billing address / payment name\n * @return {String} returns cart.billing[0].fullName\n */\nTemplate.registerHelper(\"cartPayerName\", () => {\n  const cart = Cart.findOne();\n  if (cart && cart.billing && cart.billing[0] && cart.billing[0].address && cart.billing[0].address.fullName) {\n    const name = cart.billing[0].address.fullName;\n    if (name.replace(/[a-zA-Z ]*/, \"\").length === 0) return name;\n  }\n});\n"]},"sourceType":"script","hash":"b56a5eec7d9bd20999767d5aae534b6eb1d3ed2b"}
