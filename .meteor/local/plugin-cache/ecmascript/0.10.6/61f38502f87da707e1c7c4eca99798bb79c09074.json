{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/graphql/server/resolvers/xforms/currency.js","filename":"imports/plugins/core/graphql/server/resolvers/xforms/currency.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/graphql/server/resolvers/xforms/currency.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/graphql/server/resolvers/xforms/currency.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/graphql/server/resolvers/xforms/currency.js"}},"code":"module.export({\n  assocCurrencyInternalId: () => assocCurrencyInternalId,\n  assocCurrencyOpaqueId: () => assocCurrencyOpaqueId,\n  decodeCurrencyOpaqueId: () => decodeCurrencyOpaqueId,\n  encodeCurrencyOpaqueId: () => encodeCurrencyOpaqueId,\n  xformCurrencyEntry: () => xformCurrencyEntry,\n  xformLegacyCurrencies: () => xformLegacyCurrencies,\n  getXformedCurrenciesByShop: () => getXformedCurrenciesByShop,\n  getXformedCurrencyByCode: () => getXformedCurrencyByCode\n});\nlet assoc, compose, map, toPairs;\nmodule.watch(require(\"ramda\"), {\n  assoc(v) {\n    assoc = v;\n  },\n\n  compose(v) {\n    compose = v;\n  },\n\n  map(v) {\n    map = v;\n  },\n\n  toPairs(v) {\n    toPairs = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet namespaces;\nmodule.watch(require(\"../util\"), {\n  namespaces(v) {\n    namespaces = v;\n  }\n\n}, 2);\nlet assocInternalId, assocOpaqueId, decodeOpaqueIdForNamespace, encodeOpaqueId;\nmodule.watch(require(\"./id\"), {\n  assocInternalId(v) {\n    assocInternalId = v;\n  },\n\n  assocOpaqueId(v) {\n    assocOpaqueId = v;\n  },\n\n  decodeOpaqueIdForNamespace(v) {\n    decodeOpaqueIdForNamespace = v;\n  },\n\n  encodeOpaqueId(v) {\n    encodeOpaqueId = v;\n  }\n\n}, 3);\nconst assocCurrencyInternalId = assocInternalId(namespaces.Currency);\nconst assocCurrencyOpaqueId = assocOpaqueId(namespaces.Currency);\nconst decodeCurrencyOpaqueId = decodeOpaqueIdForNamespace(namespaces.Currency);\nconst encodeCurrencyOpaqueId = encodeOpaqueId(namespaces.Currency);\n\nconst xformCurrencyEntry = ([k, v]) => compose(assoc(\"code\", k), assoc(\"_id\", k))(v);\n\nconst xformLegacyCurrencies = compose(map(xformCurrencyEntry), toPairs);\n\nfunction getXformedCurrenciesByShop(shop) {\n  if (!shop || !shop.currencies) return [];\n  return xformLegacyCurrencies(shop.currencies);\n}\n\n// retrive all currencies from the Shops collection and xform them\nfunction getXformedCurrenciesByShopId(context, shopId) {\n  return Promise.asyncApply(() => {\n    const shop = Promise.await(context.collections.Shops.findOne({\n      _id: shopId\n    }));\n    return getXformedCurrenciesByShop(shop);\n  });\n} // Find an individual xformed currency\n\n\nfunction getXformedCurrencyByCode(context, shopId, code) {\n  return Promise.asyncApply(() => {\n    if (!code) return null;\n    if (!shopId) throw new Meteor.Error(\"invalid\", \"shopId is required to build a Currency object\");\n    const allCurrencies = Promise.await(getXformedCurrenciesByShopId(context, shopId));\n    return allCurrencies.find(currency => currency.code === code);\n  });\n}","map":{"version":3,"sources":["imports/plugins/core/graphql/server/resolvers/xforms/currency.js"],"names":["module","export","assocCurrencyInternalId","assocCurrencyOpaqueId","decodeCurrencyOpaqueId","encodeCurrencyOpaqueId","xformCurrencyEntry","xformLegacyCurrencies","getXformedCurrenciesByShop","getXformedCurrencyByCode","assoc","compose","map","toPairs","watch","require","v","Meteor","namespaces","assocInternalId","assocOpaqueId","decodeOpaqueIdForNamespace","encodeOpaqueId","Currency","k","shop","currencies","getXformedCurrenciesByShopId","context","shopId","collections","Shops","findOne","_id","code","Error","allCurrencies","find","currency"],"mappings":"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","sourcesContent":["import { assoc, compose, map, toPairs } from \"ramda\";\nimport { Meteor } from \"meteor/meteor\";\nimport { namespaces } from \"@reactioncommerce/reaction-graphql-utils\";\nimport { assocInternalId, assocOpaqueId, decodeOpaqueIdForNamespace, encodeOpaqueId } from \"./id\";\n\nexport const assocCurrencyInternalId = assocInternalId(namespaces.Currency);\nexport const assocCurrencyOpaqueId = assocOpaqueId(namespaces.Currency);\nexport const decodeCurrencyOpaqueId = decodeOpaqueIdForNamespace(namespaces.Currency);\nexport const encodeCurrencyOpaqueId = encodeOpaqueId(namespaces.Currency);\n\n// add `code` and `_id` keys to each currency object\nexport const xformCurrencyEntry = ([k, v]) => compose(\n  assoc(\"code\", k),\n  assoc(\"_id\", k)\n)(v);\n\n// map over all provided currencies, provided in the format stored in our Shops collection,\n// and convert them to the format that GraphQL needs\nexport const xformLegacyCurrencies = compose(map(xformCurrencyEntry), toPairs);\n\nexport function getXformedCurrenciesByShop(shop) {\n  if (!shop || !shop.currencies) return [];\n  return xformLegacyCurrencies(shop.currencies);\n}\n\n// retrive all currencies from the Shops collection and xform them\nasync function getXformedCurrenciesByShopId(context, shopId) {\n  const shop = await context.collections.Shops.findOne({ _id: shopId });\n  return getXformedCurrenciesByShop(shop);\n}\n\n// Find an individual xformed currency\nexport async function getXformedCurrencyByCode(context, shopId, code) {\n  if (!code) return null;\n  if (!shopId) throw new Meteor.Error(\"invalid\", \"shopId is required to build a Currency object\");\n  const allCurrencies = await getXformedCurrenciesByShopId(context, shopId);\n  return allCurrencies.find((currency) => currency.code === code);\n}\n"]},"sourceType":"script","hash":"61f38502f87da707e1c7c4eca99798bb79c09074"}
