{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui/client/components/media/mediaUploader.js","filename":"imports/plugins/core/ui/client/components/media/mediaUploader.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui/client/components/media/mediaUploader.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui/client/components/media/mediaUploader.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui/client/components/media/mediaUploader.js"}},"code":"var _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Dropzone;\nmodule.watch(require(\"react-dropzone\"), {\n  \"default\": function (v) {\n    Dropzone = v;\n  }\n}, 2);\nvar FileRecord;\nmodule.watch(require(\"@reactioncommerce/file-collections\"), {\n  FileRecord: function (v) {\n    FileRecord = v;\n  }\n}, 3);\nvar Components, registerComponent;\nmodule.watch(require(\"../../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  },\n  registerComponent: function (v) {\n    registerComponent = v;\n  }\n}, 4);\nvar Logger;\nmodule.watch(require(\"../../../../../../../client/api\"), {\n  Logger: function (v) {\n    Logger = v;\n  }\n}, 5);\nvar Media;\nmodule.watch(require(\"../../../../files/client\"), {\n  Media: function (v) {\n    Media = v;\n  }\n}, 6);\n\nvar MediaUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(MediaUploader, _Component);\n\n  function MediaUploader(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.uploadFiles = function (acceptedFiles) {\n      var metadata = _this.props.metadata;\n      var filesArray = Array.from(acceptedFiles);\n      if (filesArray.length === 0) return;\n\n      _this.setState({\n        isUploading: true\n      });\n\n      var promises = [];\n      filesArray.forEach(function (browserFile) {\n        var fileRecord = FileRecord.fromFile(browserFile);\n        if (metadata) fileRecord.metadata = metadata;\n        var promise = fileRecord.upload({}) // We insert only AFTER the server has confirmed that all chunks were uploaded\n        .then(function () {\n          return Media.insert(fileRecord);\n        }).catch(function (error) {\n          Logger.error(error);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(function () {\n        if (!_this._isMounted) return;\n\n        _this.setState({\n          isUploading: false\n        });\n      });\n    };\n\n    _this.state = {\n      isUploading: false\n    };\n    return _this;\n  }\n\n  var _proto = MediaUploader.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      this._isMounted = true;\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      this._isMounted = false;\n    }\n\n    return componentWillUnmount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var isUploading = this.state.isUploading;\n      return React.createElement(Dropzone, {\n        accept: \"image/jpg, image/png, image/jpeg\",\n        className: \"rui button btn btn-default btn-block\",\n        disabled: !!isUploading,\n        onDrop: this.uploadFiles\n      }, React.createElement(\"div\", {\n        className: \"contents\"\n      }, !!isUploading && React.createElement(\"div\", {\n        style: {\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        }\n      }, React.createElement(Components.CircularProgress, {\n        indeterminate: true\n      })), !isUploading && React.createElement(\"span\", {\n        className: \"title\"\n      }, React.createElement(Components.Translation, {\n        defaultValue: \"Click or drop images here to upload media\",\n        i18nKey: \"mediaUploader.dropFiles\"\n      }))));\n    }\n\n    return render;\n  }();\n\n  return MediaUploader;\n}(Component);\n\nMediaUploader.propTypes = {\n  metadata: PropTypes.object\n};\nregisterComponent(\"MediaUploader\", MediaUploader);\nmodule.exportDefault(MediaUploader);","map":{"version":3,"sources":["imports/plugins/core/ui/client/components/media/mediaUploader.js"],"names":["React","Component","module","watch","require","v","PropTypes","Dropzone","FileRecord","Components","registerComponent","Logger","Media","MediaUploader","props","uploadFiles","acceptedFiles","metadata","filesArray","Array","from","length","setState","isUploading","promises","forEach","browserFile","fileRecord","fromFile","promise","upload","then","insert","catch","error","push","Promise","all","_isMounted","state","componentDidMount","componentWillUnmount","render","marginLeft","marginRight","propTypes","object","exportDefault"],"mappings":";;;;AAAA,IAAIA,KAAJ,EAAUC,SAAV;AAAoBC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ,GAApB;AAAqBJ,WAArB,YAA+BI,CAA/B,EAAiC;AAACJ,gBAAUI,CAAV;AAAY;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,SAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,QAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAAA,uBAASC,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW;AAAvB,CAAvC,EAAgE,CAAhE;AAAmE,IAAIG,UAAJ;AAAeN,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACI,YAAD,YAAYH,CAAZ,EAAc;AAACG,iBAAWH,CAAX;AAAa;AAA5B,CAA3D,EAAyF,CAAzF;AAA4F,IAAII,UAAJ,EAAeC,iBAAf;AAAiCR,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAACK,YAAD,YAAYJ,CAAZ,EAAc;AAACI,iBAAWJ,CAAX;AAAa,GAA5B;AAA6BK,mBAA7B,YAA+CL,CAA/C,EAAiD;AAACK,wBAAkBL,CAAlB;AAAoB;AAAtE,CAAnD,EAA2H,CAA3H;AAA8H,IAAIM,MAAJ;AAAWT,OAAOC,KAAP,CAAaC,QAAQ,iCAAR,CAAb,EAAwD;AAACO,QAAD,YAAQN,CAAR,EAAU;AAACM,aAAON,CAAP;AAAS;AAApB,CAAxD,EAA8E,CAA9E;AAAiF,IAAIO,KAAJ;AAAUV,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACQ,OAAD,YAAOP,CAAP,EAAS;AAACO,YAAMP,CAAN;AAAQ;AAAlB,CAAjD,EAAqE,CAArE;;IAQ7mBQ,a;;;;;AAKJ,yBAAYC,KAAZ,EAAmB;AAAA;;AACjB,kCAAMA,KAAN;;AADiB,UAgBnBC,WAhBmB,GAgBL,UAACC,aAAD,EAAmB;AAAA,UACvBC,QADuB,GACV,MAAKH,KADK,CACvBG,QADuB;AAE/B,UAAMC,aAAaC,MAAMC,IAAN,CAAWJ,aAAX,CAAnB;AACA,UAAIE,WAAWG,MAAX,KAAsB,CAA1B,EAA6B;;AAE7B,YAAKC,QAAL,CAAc;AAAEC,qBAAa;AAAf,OAAd;;AAEA,UAAMC,WAAW,EAAjB;AACAN,iBAAWO,OAAX,CAAmB,UAACC,WAAD,EAAiB;AAClC,YAAMC,aAAanB,WAAWoB,QAAX,CAAoBF,WAApB,CAAnB;AAEA,YAAIT,QAAJ,EAAcU,WAAWV,QAAX,GAAsBA,QAAtB;AAEd,YAAMY,UAAUF,WAAWG,MAAX,CAAkB,EAAlB,EACd;AADc,SAEbC,IAFa,CAER;AAAA,iBAAMnB,MAAMoB,MAAN,CAAaL,UAAb,CAAN;AAAA,SAFQ,EAGbM,KAHa,CAGP,UAACC,KAAD,EAAW;AAChBvB,iBAAOuB,KAAP,CAAaA,KAAb;AACD,SALa,CAAhB;AAOAV,iBAASW,IAAT,CAAcN,OAAd;AACD,OAbD;AAeAO,cAAQC,GAAR,CAAYb,QAAZ,EAAsBO,IAAtB,CAA2B,YAAM;AAC/B,YAAI,CAAC,MAAKO,UAAV,EAAsB;;AACtB,cAAKhB,QAAL,CAAc;AAAEC,uBAAa;AAAf,SAAd;AACD,OAHD;AAID,KA3CkB;;AAGjB,UAAKgB,KAAL,GAAa;AACXhB,mBAAa;AADF,KAAb;AAHiB;AAMlB;;;;SAEDiB,iB;iCAAoB;AAClB,WAAKF,UAAL,GAAkB,IAAlB;AACD;;;;;SAEDG,oB;oCAAuB;AACrB,WAAKH,UAAL,GAAkB,KAAlB;AACD;;;;;SA+BDI,M;sBAAS;AAAA,UACCnB,WADD,GACiB,KAAKgB,KADtB,CACChB,WADD;AAGP,aACE,oBAAC,QAAD;AACE,gBAAO,kCADT;AAEE,mBAAU,sCAFZ;AAGE,kBAAU,CAAC,CAACA,WAHd;AAIE,gBAAQ,KAAKR;AAJf,SAME;AAAK,mBAAU;AAAf,SACG,CAAC,CAACQ,WAAF,IAAiB;AAAK,eAAO;AAAEoB,sBAAY,MAAd;AAAsBC,uBAAa;AAAnC;AAAZ,SAAyD,oBAAC,UAAD,CAAY,gBAAZ;AAA6B,uBAAe;AAA5C,QAAzD,CADpB,EAEG,CAACrB,WAAD,IAAgB;AAAM,mBAAU;AAAhB,SACf,oBAAC,UAAD,CAAY,WAAZ;AAAwB,sBAAa,2CAArC;AAAiF,iBAAQ;AAAzF,QADe,CAFnB,CANF,CADF;AAeD;;;;;;EApEyBtB,S;;AAAtBY,a,CACGgC,S,GAAY;AACjB5B,YAAUX,UAAUwC;AADH,C;AAsErBpC,kBAAkB,eAAlB,EAAmCG,aAAnC;AA/EAX,OAAO6C,aAAP,CAiFelC,aAjFf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Dropzone from \"react-dropzone\";\nimport { FileRecord } from \"@reactioncommerce/file-collections\";\nimport { Components, registerComponent } from \"@reactioncommerce/reaction-components\";\nimport { Logger } from \"/client/api\";\nimport { Media } from \"/imports/plugins/core/files/client\";\n\nclass MediaUploader extends Component {\n  static propTypes = {\n    metadata: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isUploading: false\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  uploadFiles = (acceptedFiles) => {\n    const { metadata } = this.props;\n    const filesArray = Array.from(acceptedFiles);\n    if (filesArray.length === 0) return;\n\n    this.setState({ isUploading: true });\n\n    const promises = [];\n    filesArray.forEach((browserFile) => {\n      const fileRecord = FileRecord.fromFile(browserFile);\n\n      if (metadata) fileRecord.metadata = metadata;\n\n      const promise = fileRecord.upload({})\n        // We insert only AFTER the server has confirmed that all chunks were uploaded\n        .then(() => Media.insert(fileRecord))\n        .catch((error) => {\n          Logger.error(error);\n        });\n\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      if (!this._isMounted) return;\n      this.setState({ isUploading: false });\n    });\n  };\n\n  render() {\n    const { isUploading } = this.state;\n\n    return (\n      <Dropzone\n        accept=\"image/jpg, image/png, image/jpeg\"\n        className=\"rui button btn btn-default btn-block\"\n        disabled={!!isUploading}\n        onDrop={this.uploadFiles}\n      >\n        <div className=\"contents\">\n          {!!isUploading && <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}><Components.CircularProgress indeterminate={true} /></div>}\n          {!isUploading && <span className=\"title\">\n            <Components.Translation defaultValue=\"Click or drop images here to upload media\" i18nKey=\"mediaUploader.dropFiles\" />\n          </span>}\n        </div>\n      </Dropzone>\n    );\n  }\n}\n\nregisterComponent(\"MediaUploader\", MediaUploader);\n\nexport default MediaUploader;\n"]},"sourceType":"script","hash":"b3590fe8b69403b1df80540f4c56ab91931a7bf9"}
