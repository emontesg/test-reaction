{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/api/core/endpoints.js","filename":"server/api/core/endpoints.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/api/core/endpoints.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/api/core/endpoints.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/api/core/endpoints.js"}},"code":"const module1 = module;\n\nlet _isFunction;\n\nmodule1.watch(require(\"lodash/isFunction\"), {\n  default(v) {\n    _isFunction = v;\n  }\n\n}, 0);\nlet Fiber;\nmodule1.watch(require(\"fibers\"), {\n  default(v) {\n    Fiber = v;\n  }\n\n}, 1);\nlet connect;\nmodule1.watch(require(\"connect\"), {\n  default(v) {\n    connect = v;\n  }\n\n}, 2);\nlet bodyParser;\nmodule1.watch(require(\"body-parser\"), {\n  default(v) {\n    bodyParser = v;\n  }\n\n}, 3);\nlet connectRoute;\nmodule1.watch(require(\"connect-route\"), {\n  default(v) {\n    connectRoute = v;\n  }\n\n}, 4);\nlet Meteor;\nmodule1.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 5);\nlet WebApp;\nmodule1.watch(require(\"meteor/webapp\"), {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 6);\n\n/**\n * @file Reaction Endpoints - This becomes Reaction.Endpoints and can be used in any server side code that\n * `imports { Reaction } from \"/server/api\"`\n * Adapted from https://github.com/stubailo/meteor-rest/tree/master/packages/json-routes\n * @todo Add a rate limiter to our HTTP endpoint module\n * @namespace Endpoints\n */\nconst Endpoints = {};\nWebApp.connectHandlers.use(bodyParser.json({\n  limit: \"200kb\",\n\n  // Override default request size\n  // Attach the raw body which is necessary for doing verifications for some webhooks\n  verify(req, res, buf) {\n    req.rawBody = buf;\n  },\n\n  extended: true\n})); // Handler for adding middleware before an endpoint (Endpoints.middleWare\n// is just for legacy reasons). Also serves as a namespace for middleware\n// packages to declare their middleware functions.\n\nEndpoints.middleWare = connect();\nEndpoints.Middleware = Endpoints.middleWare;\nWebApp.connectHandlers.use(Endpoints.Middleware); // List of all defined JSON API Endpoints\n\nEndpoints.routes = []; // Save reference to router for later\n\nlet connectRouter; // Register as a middleware\n\nWebApp.connectHandlers.use(Meteor.bindEnvironment(connectRoute(router => {\n  connectRouter = router;\n})));\n/**\n * @method writeJsonToBody\n * @summary Stringifies and writes JSON to body of response\n * @private\n * @param  {Object} res response object\n * @param  {Object} json JSON\n * @return {void}\n */\n\nfunction writeJsonToBody(res, json) {\n  if (json !== undefined) {\n    const shouldPrettyPrint = process.env.NODE_ENV === \"development\";\n    const spacer = shouldPrettyPrint ? 2 : null;\n    res.setHeader(\"Content-type\", \"application/json\");\n    res.write(JSON.stringify(json, null, spacer));\n  }\n} // Error middleware must be added last, to catch errors from prior middleware.\n// That's why we cache them and then add after startup.\n\n\nlet errorMiddlewares = [];\nEndpoints.ErrorMiddleware = {\n  use(...args) {\n    errorMiddlewares.push(args);\n  }\n\n};\nMeteor.startup(() => {\n  errorMiddlewares.forEach(errorMiddleware => {\n    const errorMiddlewareFn = errorMiddleware.map(maybeFn => {\n      if (_isFunction(maybeFn)) {\n        // A connect error middleware needs exactly 4 arguments because they use fn.length === 4 to\n        // decide if something is an error middleware.\n        return function (a, b, c, d) {\n          Meteor.bindEnvironment(maybeFn)(a, b, c, d);\n        };\n      }\n\n      return maybeFn;\n    });\n    WebApp.connectHandlers.use.apply(WebApp.connectHandlers, ...errorMiddlewareFn);\n  });\n  errorMiddlewares = [];\n});\nlet responseHeaders = {\n  \"Cache-Control\": \"no-store\",\n  \"Pragma\": \"no-cache\"\n};\n/**\n * @method add\n * @memberof Endpoints\n * @param  {String} method  HTTP method\n * @param  {String} path    HTTP path - Make sure path starts with a slash\n * @param  {Function} handler Callback handler\n * @example Reaction.Endpoints.add(\"post\", \"/webhooks/shopify/orders-create\", function (req, res){})\n * @return {undefined}\n */\n\nEndpoints.add = function (method, path, handler) {\n  // Make sure path starts with a slash\n  let slashedPath = path;\n\n  if (path[0] !== \"/\") {\n    slashedPath = `/${path}`;\n  } // Add to list of known Endpoints\n\n\n  Endpoints.routes.push({\n    method,\n    path: slashedPath\n  });\n  connectRouter[method.toLowerCase()](path, (req, res, next) => {\n    // Set headers on response\n    const headerKeys = Object.keys(responseHeaders);\n    headerKeys.forEach(key => {\n      res.setHeader(key, responseHeaders[key]);\n    });\n    Fiber(() => {\n      try {\n        handler(req, res, next);\n      } catch (error) {\n        next(error);\n      }\n    }).run();\n  });\n};\n/**\n * @method setResponseHeaders\n * @memberof Endpoints\n * @param  {Object} headers HTTP headers\n * @return {undefined}\n */\n\n\nEndpoints.setResponseHeaders = function (headers) {\n  responseHeaders = headers;\n};\n/**\n * @method sendResponse\n * @summary Sets the response headers, status code, and body, and ends it.\n * The JSON response will be pretty printed if NODE_ENV is `development`.\n * @memberof Endpoints\n * @example Reaction.Endpoints.sendResponse(res)\n * @param {Object} res Response object\n * @param {Object} [options] Options object\n * @param {Number} [options.code] HTTP status code. Default is 200.\n * @param {Object} [options.headers] Dictionary of headers.\n * @param {Object|Array|null|undefined} [options.data] The object to\n *   stringify as the response. If `null`, the response will be \"null\".\n *   If `undefined`, there will be no response body.\n * @return {void}\n */\n\n\nEndpoints.sendResponse = function (res, options = {}) {\n  // We've already set global headers on response, but if they\n  // pass in more here, we set those.\n  if (options.headers) {\n    const headerKeys = Object.keys(options.headers);\n    headerKeys.forEach(key => {\n      res.setHeader(key, options.headers[key]);\n    });\n  } // Set status code on response\n\n\n  res.statusCode = options.code || 200; // Set response body\n\n  writeJsonToBody(res, options.data); // Send the response\n\n  res.end();\n};\n\nmodule1.exportDefault(Endpoints);","map":{"version":3,"sources":["server/api/core/endpoints.js"],"names":["module1","module","_isFunction","watch","require","default","v","Fiber","connect","bodyParser","connectRoute","Meteor","WebApp","Endpoints","connectHandlers","use","json","limit","verify","req","res","buf","rawBody","extended","middleWare","Middleware","routes","connectRouter","bindEnvironment","router","writeJsonToBody","undefined","shouldPrettyPrint","process","env","NODE_ENV","spacer","setHeader","write","JSON","stringify","errorMiddlewares","ErrorMiddleware","args","push","startup","forEach","errorMiddleware","errorMiddlewareFn","map","maybeFn","a","b","c","d","apply","responseHeaders","add","method","path","handler","slashedPath","toLowerCase","next","headerKeys","Object","keys","key","error","run","setResponseHeaders","headers","sendResponse","options","statusCode","code","data","end","exportDefault"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport Fiber from \"fibers\";\nimport connect from \"connect\";\nimport bodyParser from \"body-parser\";\nimport connectRoute from \"connect-route\";\n\nimport { Meteor } from \"meteor/meteor\";\nimport { WebApp } from \"meteor/webapp\";\n\n/**\n * @file Reaction Endpoints - This becomes Reaction.Endpoints and can be used in any server side code that\n * `imports { Reaction } from \"/server/api\"`\n * Adapted from https://github.com/stubailo/meteor-rest/tree/master/packages/json-routes\n * @todo Add a rate limiter to our HTTP endpoint module\n * @namespace Endpoints\n */\n\nconst Endpoints = {};\n\nWebApp.connectHandlers.use(bodyParser.json({\n  limit: \"200kb\", // Override default request size\n  // Attach the raw body which is necessary for doing verifications for some webhooks\n  verify(req, res, buf) {\n    req.rawBody = buf;\n  },\n  extended: true\n}));\n\n// Handler for adding middleware before an endpoint (Endpoints.middleWare\n// is just for legacy reasons). Also serves as a namespace for middleware\n// packages to declare their middleware functions.\nEndpoints.middleWare = connect();\nEndpoints.Middleware = Endpoints.middleWare;\nWebApp.connectHandlers.use(Endpoints.Middleware);\n\n// List of all defined JSON API Endpoints\nEndpoints.routes = [];\n\n// Save reference to router for later\nlet connectRouter;\n\n// Register as a middleware\nWebApp.connectHandlers.use(Meteor.bindEnvironment(connectRoute((router) => {\n  connectRouter = router;\n})));\n\n/**\n * @method writeJsonToBody\n * @summary Stringifies and writes JSON to body of response\n * @private\n * @param  {Object} res response object\n * @param  {Object} json JSON\n * @return {void}\n */\nfunction writeJsonToBody(res, json) {\n  if (json !== undefined) {\n    const shouldPrettyPrint = (process.env.NODE_ENV === \"development\");\n    const spacer = shouldPrettyPrint ? 2 : null;\n    res.setHeader(\"Content-type\", \"application/json\");\n    res.write(JSON.stringify(json, null, spacer));\n  }\n}\n\n// Error middleware must be added last, to catch errors from prior middleware.\n// That's why we cache them and then add after startup.\nlet errorMiddlewares = [];\nEndpoints.ErrorMiddleware = {\n  use(...args) {\n    errorMiddlewares.push(args);\n  }\n};\n\nMeteor.startup(() => {\n  errorMiddlewares.forEach((errorMiddleware) => {\n    const errorMiddlewareFn = errorMiddleware.map((maybeFn) => {\n      if (_.isFunction(maybeFn)) {\n        // A connect error middleware needs exactly 4 arguments because they use fn.length === 4 to\n        // decide if something is an error middleware.\n        return function (a, b, c, d) {\n          Meteor.bindEnvironment(maybeFn)(a, b, c, d);\n        };\n      }\n      return maybeFn;\n    });\n    WebApp.connectHandlers.use.apply(WebApp.connectHandlers, ...errorMiddlewareFn);\n  });\n\n  errorMiddlewares = [];\n});\n\nlet responseHeaders = {\n  \"Cache-Control\": \"no-store\",\n  \"Pragma\": \"no-cache\"\n};\n\n/**\n * @method add\n * @memberof Endpoints\n * @param  {String} method  HTTP method\n * @param  {String} path    HTTP path - Make sure path starts with a slash\n * @param  {Function} handler Callback handler\n * @example Reaction.Endpoints.add(\"post\", \"/webhooks/shopify/orders-create\", function (req, res){})\n * @return {undefined}\n */\nEndpoints.add = function (method, path, handler) {\n  // Make sure path starts with a slash\n  let slashedPath = path;\n  if (path[0] !== \"/\") {\n    slashedPath = `/${path}`;\n  }\n\n  // Add to list of known Endpoints\n  Endpoints.routes.push({\n    method,\n    path: slashedPath\n  });\n\n  connectRouter[method.toLowerCase()](path, (req, res, next) => {\n    // Set headers on response\n    const headerKeys = Object.keys(responseHeaders);\n    headerKeys.forEach((key) => {\n      res.setHeader(key, responseHeaders[key]);\n    });\n\n    Fiber(() => {\n      try {\n        handler(req, res, next);\n      } catch (error) {\n        next(error);\n      }\n    }).run();\n  });\n};\n\n/**\n * @method setResponseHeaders\n * @memberof Endpoints\n * @param  {Object} headers HTTP headers\n * @return {undefined}\n */\nEndpoints.setResponseHeaders = function (headers) {\n  responseHeaders = headers;\n};\n\n/**\n * @method sendResponse\n * @summary Sets the response headers, status code, and body, and ends it.\n * The JSON response will be pretty printed if NODE_ENV is `development`.\n * @memberof Endpoints\n * @example Reaction.Endpoints.sendResponse(res)\n * @param {Object} res Response object\n * @param {Object} [options] Options object\n * @param {Number} [options.code] HTTP status code. Default is 200.\n * @param {Object} [options.headers] Dictionary of headers.\n * @param {Object|Array|null|undefined} [options.data] The object to\n *   stringify as the response. If `null`, the response will be \"null\".\n *   If `undefined`, there will be no response body.\n * @return {void}\n */\nEndpoints.sendResponse = function (res, options = {}) {\n  // We've already set global headers on response, but if they\n  // pass in more here, we set those.\n  if (options.headers) {\n    const headerKeys = Object.keys(options.headers);\n    headerKeys.forEach((key) => {\n      res.setHeader(key, options.headers[key]);\n    });\n  }\n\n  // Set status code on response\n  res.statusCode = options.code || 200;\n\n  // Set response body\n  writeJsonToBody(res, options.data);\n\n  // Send the response\n  res.end();\n};\n\nexport default Endpoints;\n"]},"sourceType":"script","hash":"6173b47d82fa2910b17f043b5eef0496b2930139"}
