{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/discount-rates/server/methods/methods.js","filename":"imports/plugins/included/discount-rates/server/methods/methods.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/discount-rates/server/methods/methods.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/discount-rates/server/methods/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/discount-rates/server/methods/methods.js"}},"code":"module.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Reaction;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 2);\nlet Discounts;\nmodule.watch(require(\"../../../../core/discounts/lib/collections\"), {\n  Discounts(v) {\n    Discounts = v;\n  }\n\n}, 3);\nlet DiscountSchema;\nmodule.watch(require(\"../../lib/collections/schemas\"), {\n  DiscountRates(v) {\n    DiscountSchema = v;\n  }\n\n}, 4);\n// attach discount code specific schema\nDiscounts.attachSchema(DiscountSchema, {\n  selector: {\n    discountMethod: \"rate\"\n  }\n}); //\n// make all discount methods available\n//\n\nconst methods = {\n  /**\n   * discounts/rates/amount\n   * for discount rates\n   * @param  {String} cartId cartId\n   * @param  {String} rateId rateid\n   * @return {Number} returns discount total\n   */\n  \"discounts/rates/amount\"(cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0; // TODO: discounts/rates/amount\n    // should be pricing rate lookup.\n\n    return rate;\n  },\n\n  \"discounts/rates/discount\"(cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0; // TODO: discounts/rates/discount\n\n    return rate;\n  },\n\n  /**\n   * @name discounts/addRate\n   * @method\n   * @param  {Object} doc A Discounts document to be inserted\n   * @param  {String} [docId] DEPRECATED. Existing ID to trigger an update. Use discounts/editCode method instead.\n   * @return {String} Insert result\n   */\n  \"discounts/addRate\"(doc, docId) {\n    check(doc, Object); // actual schema validation happens during insert below\n    // Backward compatibility\n\n    check(docId, Match.Optional(String));\n    if (docId) return Meteor.call(\"discounts/editRate\", {\n      _id: docId,\n      modifier: doc\n    });\n    if (!Reaction.hasPermission(\"discount-rates\")) throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    return Discounts.insert(doc);\n  },\n\n  /**\n   * @name discounts/editRate\n   * @method\n   * @param  {Object} details An object with _id and modifier props\n   * @return {String} Update result\n   */\n  \"discounts/editRate\"(details) {\n    check(details, {\n      _id: String,\n      modifier: Object // actual schema validation happens during update below\n\n    });\n    if (!Reaction.hasPermission(\"discount-rates\")) throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    const {\n      _id,\n      modifier\n    } = details;\n    return Discounts.update(_id, modifier);\n  }\n\n};\n// export methods to Meteor\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/included/discount-rates/server/methods/methods.js"],"names":["module","export","methods","Meteor","watch","require","v","Match","check","Reaction","Discounts","DiscountSchema","DiscountRates","attachSchema","selector","discountMethod","cartId","rateId","String","rate","doc","docId","Object","Optional","call","_id","modifier","hasPermission","Error","insert","details","update"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Reaction } from \"/server/api\";\nimport { Discounts } from \"/imports/plugins/core/discounts/lib/collections\";\nimport { DiscountRates as DiscountSchema } from \"../../lib/collections/schemas\";\n\n// attach discount code specific schema\nDiscounts.attachSchema(DiscountSchema, { selector: { discountMethod: \"rate\" } });\n\n//\n// make all discount methods available\n//\nexport const methods = {\n  /**\n   * discounts/rates/amount\n   * for discount rates\n   * @param  {String} cartId cartId\n   * @param  {String} rateId rateid\n   * @return {Number} returns discount total\n   */\n  \"discounts/rates/amount\"(cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0;\n    // TODO: discounts/rates/amount\n    // should be pricing rate lookup.\n    return rate;\n  },\n\n  \"discounts/rates/discount\"(cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0;\n    // TODO: discounts/rates/discount\n    return rate;\n  },\n\n  /**\n   * @name discounts/addRate\n   * @method\n   * @param  {Object} doc A Discounts document to be inserted\n   * @param  {String} [docId] DEPRECATED. Existing ID to trigger an update. Use discounts/editCode method instead.\n   * @return {String} Insert result\n   */\n  \"discounts/addRate\"(doc, docId) {\n    check(doc, Object); // actual schema validation happens during insert below\n\n    // Backward compatibility\n    check(docId, Match.Optional(String));\n    if (docId) return Meteor.call(\"discounts/editRate\", { _id: docId, modifier: doc });\n\n    if (!Reaction.hasPermission(\"discount-rates\")) throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    return Discounts.insert(doc);\n  },\n\n  /**\n   * @name discounts/editRate\n   * @method\n   * @param  {Object} details An object with _id and modifier props\n   * @return {String} Update result\n   */\n  \"discounts/editRate\"(details) {\n    check(details, {\n      _id: String,\n      modifier: Object // actual schema validation happens during update below\n    });\n    if (!Reaction.hasPermission(\"discount-rates\")) throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    const { _id, modifier } = details;\n    return Discounts.update(_id, modifier);\n  }\n};\n\n// export methods to Meteor\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"767c4326540d4f667d56f453a6c12706f53316d7"}
