{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/imports/fixtures/accounts.js","filename":"server/imports/fixtures/accounts.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/imports/fixtures/accounts.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/imports/fixtures/accounts.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/imports/fixtures/accounts.js"}},"code":"module.export({\n  getUser: () => getUser,\n  getAddress: () => getAddress,\n  createAccountFactory: () => createAccountFactory\n});\n\nlet _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  default(v) {\n    _defaults = v;\n  }\n\n}, 0);\nlet faker;\nmodule.watch(require(\"faker\"), {\n  default(v) {\n    faker = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Factory;\nmodule.watch(require(\"meteor/dburles:factory\"), {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 3);\nlet Accounts;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 4);\nlet getShop;\nmodule.watch(require(\"./shops\"), {\n  getShop(v) {\n    getShop = v;\n  }\n\n}, 5);\n\nfunction getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nfunction getAddress(options = {}) {\n  const defaults = {\n    fullName: options.fullName || faker.name.findName(),\n    address1: options.address1 || faker.address.streetAddress(),\n    address2: options.address2 || faker.address.secondaryAddress(),\n    city: options.city || faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: options.region || faker.address.stateAbbr(),\n    postal: options.postal || faker.address.zipCode(),\n    country: options.country || faker.address.countryCode(),\n    isCommercial: options.isCommercial || faker.random.boolean(),\n    isShippingDefault: options.isShippingDefault || faker.random.boolean(),\n    isBillingDefault: options.isBillingDefault || faker.random.boolean(),\n    metafields: []\n  };\n  return _defaults(options, defaults);\n}\n\nfunction createAccountFactory() {\n  Factory.define(\"account\", Accounts, {\n    shopId: getShop()._id,\n    userId: getUser()._id,\n    emails: [{\n      address: faker.internet.email(),\n      verified: faker.random.boolean()\n    }],\n    acceptsMarketing: true,\n    state: \"new\",\n    note: faker.lorem.sentences(),\n    profile: {\n      addressBook: [getAddress()]\n    },\n    metafields: [],\n    createdAt: new Date(),\n    updatedAt: new Date()\n  });\n}\n\nmodule.exportDefault(function () {\n  createAccountFactory();\n});","map":{"version":3,"sources":["server/imports/fixtures/accounts.js"],"names":["module","export","getUser","getAddress","createAccountFactory","_defaults","watch","require","default","v","faker","Meteor","Factory","Accounts","getShop","existingUser","users","findOne","create","options","defaults","fullName","name","findName","address1","address","streetAddress","address2","secondaryAddress","city","company","companyName","phone","phoneNumber","region","stateAbbr","postal","zipCode","country","countryCode","isCommercial","random","boolean","isShippingDefault","isBillingDefault","metafields","define","shopId","_id","userId","emails","internet","email","verified","acceptsMarketing","state","note","lorem","sentences","profile","addressBook","createdAt","Date","updatedAt","exportDefault"],"mappings":"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","sourcesContent":["import faker from \"faker\";\nimport _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Factory } from \"meteor/dburles:factory\";\nimport { Accounts } from \"/lib/collections\";\nimport { getShop } from \"./shops\";\n\n/**\n * @method getUser\n * @memberof Fixtures\n * @return {Object} Existing user or Factory user\n */\nexport function getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\n/**\n * @method getAddress\n * @memberof Fixtures\n * @param {Object} [options={}] Address options, optional\n * @param {String} [options._id] - id of CartItem\n * @param {String} [options.fullName] fullName\n * @param {String} [options.address1] address1\n * @param {String} [options.address2] address2\n * @param {String} [options.city] city\n * @param {String} [options.company] company\n * @param {String} [options.phone] phone\n * @param {String} [options.region] region\n * @param {String} [options.postal] postal\n * @param {String} [options.country] country\n * @param {Boolean} [options.isCommercial] isCommercial\n * @param {Boolean} [options.isShippingDefault] isShippingDefault\n * @param {Boolean} [options.isBillingDefault] isBillingDefault\n * @param {Array} [options.metafields] metafields\n * @return {Object}              Address object\n */\nexport function getAddress(options = {}) {\n  const defaults = {\n    fullName: options.fullName || faker.name.findName(),\n    address1: options.address1 || faker.address.streetAddress(),\n    address2: options.address2 || faker.address.secondaryAddress(),\n    city: options.city || faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: options.region || faker.address.stateAbbr(),\n    postal: options.postal || faker.address.zipCode(),\n    country: options.country || faker.address.countryCode(),\n    isCommercial: options.isCommercial || faker.random.boolean(),\n    isShippingDefault: options.isShippingDefault || faker.random.boolean(),\n    isBillingDefault: options.isBillingDefault || faker.random.boolean(),\n    metafields: []\n  };\n  return _.defaults(options, defaults);\n}\n\n/**\n * @name account\n * @memberof Fixtures\n * @summary Factory for Account\n * @example Factory.create(\"account\", { _id: \"12345678\", shopId });\n * @property {String} shopID - `getShop()._id`\n * @property {String} userId id - `Factory.get(\"user\")`\n * @property {Array} emails `[{\n   address: faker.internet.email(),\n   verified: faker.random.boolean()\n }]`\n * @property {Boolean} acceptsMarketing - `true`\n * @property {String} state - `\"new\"`\n * @property {Note} note - `faker.lorem.sentences()`\n * @property {Object} profile - `{\n   addressBook: [\n     getAddress()\n   ]\n }`\n * @property {Array} metafields - '[]'\n * @property {Date} createdAt - `new Date()`\n * @property {Date} updatedAt - `new Date()`\n */\nexport function createAccountFactory() {\n  Factory.define(\"account\", Accounts, {\n    shopId: getShop()._id,\n    userId: getUser()._id,\n    emails: [{\n      address: faker.internet.email(),\n      verified: faker.random.boolean()\n    }],\n    acceptsMarketing: true,\n    state: \"new\",\n    note: faker.lorem.sentences(),\n    profile: {\n      addressBook: [\n        getAddress()\n      ]\n    },\n    metafields: [],\n    createdAt: new Date(),\n    updatedAt: new Date()\n  });\n}\n\nexport default function () {\n  createAccountFactory();\n}\n"]},"sourceType":"script","hash":"779e8e7938cb86831925ff2fb7bcd19fba70dcf3"}
