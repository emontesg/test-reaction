{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/api/core/utils.js","filename":"server/api/core/utils.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/api/core/utils.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/api/core/utils.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/api/core/utils.js"}},"code":"module.export({\n  getSlug: () => getSlug\n});\nlet latinLangs, getShopLang;\nmodule.watch(require(\"../../../lib/api/helpers\"), {\n  latinLangs(v) {\n    latinLangs = v;\n  },\n\n  getShopLang(v) {\n    getShopLang = v;\n  }\n\n}, 0);\n// dynamic import of slugiy/transliteration.slugify\nlet slugify;\n\nfunction lazyLoadSlugify() {\n  return Promise.asyncApply(() => {\n    let mod; // getting the shops base language\n\n    const lang = getShopLang(); // if slugify has been loaded but the language has changed\n    // to be a non latin based language then load transliteration\n\n    if (slugify && slugify.name === \"replace\" && latinLangs.indexOf(lang) === -1) {\n      mod = Promise.await(Promise.resolve().then(() => require(\"transliteration\")));\n    } else if (slugify) {\n      // if slugify/transliteration is loaded and no lang change\n      return;\n    } else if (latinLangs.indexOf(lang) >= 0) {\n      // if the shops language use latin based chars load slugify else load transliterations's slugify\n      mod = Promise.await(Promise.resolve().then(() => require(\"slugify\")));\n    } else {\n      mod = Promise.await(Promise.resolve().then(() => require(\"transliteration\")));\n    } // slugify is exported to modules.default while transliteration is exported to modules.slugify\n\n\n    slugify = mod.default || mod.slugify;\n  });\n}\n/**\n * @name getSlug\n * @summary Return a slugified string using \"slugify\" from transliteration\n * @see https://www.npmjs.com/package/transliteration\n * @method\n * @memberof Helpers\n * @locus Server\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\n\n\nfunction getSlug(slugString) {\n  let slug;\n  Promise.await(lazyLoadSlugify());\n\n  if (slugString && slugify) {\n    slug = slugify(slugString.toLowerCase());\n  } else {\n    slug = \"\";\n  }\n\n  return slug;\n}","map":{"version":3,"sources":["server/api/core/utils.js"],"names":["module","export","getSlug","latinLangs","getShopLang","watch","require","v","slugify","lazyLoadSlugify","mod","lang","name","indexOf","default","slugString","slug","Promise","await","toLowerCase"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,UAAJ,EAAeC,WAAf;AAA2BJ,OAAOK,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACH,aAAWI,CAAX,EAAa;AAACJ,iBAAWI,CAAX;AAAa,GAA5B;;AAA6BH,cAAYG,CAAZ,EAAc;AAACH,kBAAYG,CAAZ;AAAc;;AAA1D,CAAjD,EAA6G,CAA7G;AAEhE;AACA,IAAIC,OAAJ;;AACA,SAAeC,eAAf;AAAA,kCAAiC;AAC/B,QAAIC,GAAJ,CAD+B,CAE/B;;AACA,UAAMC,OAAOP,aAAb,CAH+B,CAI/B;AACA;;AACA,QAAII,WAAWA,QAAQI,IAAR,KAAiB,SAA5B,IAAyCT,WAAWU,OAAX,CAAmBF,IAAnB,MAA6B,CAAC,CAA3E,EAA8E;AAC5ED,+DAAmB,iBAAnB;AACD,KAFD,MAEO,IAAIF,OAAJ,EAAa;AAClB;AACA;AACD,KAHM,MAGA,IAAIL,WAAWU,OAAX,CAAmBF,IAAnB,KAA4B,CAAhC,EAAmC;AACxC;AACAD,+DAAmB,SAAnB;AACD,KAHM,MAGA;AACLA,+DAAmB,iBAAnB;AACD,KAhB8B,CAiB/B;;;AACAF,cAAUE,IAAII,OAAJ,IAAeJ,IAAIF,OAA7B;AACD,GAnBD;AAAA;AAqBA;;;;;;;;;;;;AAUO,SAASN,OAAT,CAAiBa,UAAjB,EAA6B;AAClC,MAAIC,IAAJ;AACAC,UAAQC,KAAR,CAAcT,iBAAd;;AACA,MAAIM,cAAcP,OAAlB,EAA2B;AACzBQ,WAAOR,QAAQO,WAAWI,WAAX,EAAR,CAAP;AACD,GAFD,MAEO;AACLH,WAAO,EAAP;AACD;;AACD,SAAOA,IAAP;AACD","sourcesContent":["import { latinLangs, getShopLang } from \"/lib/api/helpers\";\n\n// dynamic import of slugiy/transliteration.slugify\nlet slugify;\nasync function lazyLoadSlugify() {\n  let mod;\n  // getting the shops base language\n  const lang = getShopLang();\n  // if slugify has been loaded but the language has changed\n  // to be a non latin based language then load transliteration\n  if (slugify && slugify.name === \"replace\" && latinLangs.indexOf(lang) === -1) {\n    mod = await import(\"transliteration\");\n  } else if (slugify) {\n    // if slugify/transliteration is loaded and no lang change\n    return;\n  } else if (latinLangs.indexOf(lang) >= 0) {\n    // if the shops language use latin based chars load slugify else load transliterations's slugify\n    mod = await import(\"slugify\");\n  } else {\n    mod = await import(\"transliteration\");\n  }\n  // slugify is exported to modules.default while transliteration is exported to modules.slugify\n  slugify = mod.default || mod.slugify;\n}\n\n/**\n * @name getSlug\n * @summary Return a slugified string using \"slugify\" from transliteration\n * @see https://www.npmjs.com/package/transliteration\n * @method\n * @memberof Helpers\n * @locus Server\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  let slug;\n  Promise.await(lazyLoadSlugify());\n  if (slugString && slugify) {\n    slug = slugify(slugString.toLowerCase());\n  } else {\n    slug = \"\";\n  }\n  return slug;\n}\n"]},"sourceType":"script","hash":"514d8b89521144a659650e10b61eb8bb12a2b8be"}
