{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui/client/components/numericInput/numericInput.js","filename":"imports/plugins/core/ui/client/components/numericInput/numericInput.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui/client/components/numericInput/numericInput.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui/client/components/numericInput/numericInput.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui/client/components/numericInput/numericInput.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar classnames;\nmodule.watch(require(\"classnames\"), {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 2);\nvar accounting;\nmodule.watch(require(\"accounting-js\"), {\n  \"default\": function (v) {\n    accounting = v;\n  }\n}, 3);\nvar Components, registerComponent;\nmodule.watch(require(\"../../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  },\n  registerComponent: function (v) {\n    registerComponent = v;\n  }\n}, 4);\n\nvar NumericInput =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(NumericInput, _Component);\n\n  function NumericInput(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.onBlur = function () {\n      var value = _this.state.value;\n\n      if (value > _this.props.maxValue) {\n        value = _this.props.maxValue;\n      }\n\n      _this.setState({\n        isEditing: false,\n        value: value\n      });\n\n      if (_this.props.onBlur) {\n        var numberValue = _this.unformat(value);\n\n        _this.props.onBlur(event, numberValue, _this.props.name);\n      }\n    };\n\n    _this.onFocus = function (event) {\n      var currentTarget = event.currentTarget;\n\n      _this.setState({\n        isEditing: true\n      }, function () {\n        _this.setState({\n          value: _this.format(_this.state.value)\n        }, function () {\n          _this.selectAll(currentTarget);\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.currentTarget.value;\n\n      _this.setState({\n        value: value\n      });\n\n      if (_this.props.onChange) {\n        var numberValue = _this.unformat(value);\n\n        _this.props.onChange(event, numberValue, _this.props.name);\n      }\n    };\n\n    _this.state = {\n      value: _this.props.value,\n      isEditing: false\n    };\n    return _this;\n  }\n  /**\n   * update state when component receives props\n   * @param  {Object} nextProps new props\n   * @return {undefined}\n   */\n\n\n  var _proto = NumericInput.prototype;\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (nextProps.value !== undefined && !this.state.isEditing) {\n        var value = this.format(nextProps.value);\n        this.setState({\n          value: value\n        });\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n  /**\n   * Gets the displayed value. If in edit mode,\n   * the field's value is not formatted. If not in\n   * edit mode, the field gets formatted according to chosen locale.\n   * @returns {*}\n   */\n\n\n  /**\n   * Format this inputs value to a numeric string\n   * @return {String} Formatted numeric string\n   */\n  _proto.format = function () {\n    function format(value) {\n      var moneyFormat = Object.assign({}, this.props.format);\n\n      if (this.state.isEditing) {\n        moneyFormat.symbol = \"\"; // No currency sign in edit mode\n      }\n\n      var unformattedValue = this.unformat(value);\n      var formatted = accounting.formatMoney(unformattedValue, moneyFormat).trim();\n      return formatted;\n    }\n\n    return format;\n  }();\n  /**\n   * Get the field's value as rational number\n   * @param { Number } the field's value\n   */\n\n\n  _proto.unformat = function () {\n    function unformat(value) {\n      var unformattedValue = accounting.unformat(value, this.props.format.decimal);\n      return unformattedValue;\n    }\n\n    return unformat;\n  }();\n  /**\n   * onBlur\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n\n\n  /**\n   * onKeyDown\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  _proto.onKeyDown = function () {\n    function onKeyDown(event) {\n      if (this.props.onKeyDown) {\n        this.props.onKeyDown(event, this.props.name);\n      }\n\n      if (this.props.onReturnKeyDown && event.keyCode === 13) {\n        var numberValue = this.unformat(event.target.value);\n        this.props.onReturnKeyDown(event, numberValue, this.props.name);\n      }\n    }\n\n    return onKeyDown;\n  }();\n  /**\n   * Selects the text of the passed input field\n   * @param ctrl\n   */\n\n\n  _proto.selectAll = function () {\n    function selectAll(ctrl) {\n      if (ctrl.setSelectionRange) {\n        ctrl.setSelectionRange(0, ctrl.value.length);\n      }\n    }\n\n    return selectAll;\n  }();\n  /**\n   * onFocus\n   * @summary set the state when the input is focused\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n\n\n  /**\n   * renderLabel\n   * @summary Render the label for the field if one is provided in props\n   * @return {ReactNode|null} react node or null\n   */\n  _proto.renderLabel = function () {\n    function renderLabel() {\n      if (this.props.label) {\n        return React.createElement(\"label\", {\n          htmlFor: this.props.id\n        }, React.createElement(Components.Translation, {\n          defaultValue: this.props.label,\n          i18nKey: this.props.i18nKeyLabel\n        }));\n      }\n\n      return null;\n    }\n\n    return renderLabel;\n  }();\n  /**\n   * renderField\n   * @summary Render input box or field\n   * @return {JSX} jsx template\n   */\n\n\n  _proto.renderField = function () {\n    function renderField() {\n      var classNames = this.props.classNames;\n\n      if (this.props.isEditing === false) {\n        var textValueClassName = classnames((0, _objectSpread2.default)({\n          rui: true,\n          text: true\n        }, classNames.text || {}));\n        return React.createElement(\"span\", {\n          className: textValueClassName\n        }, this.displayValue);\n      }\n\n      var fieldClassName = classnames((0, _objectSpread2.default)({\n        \"form-control\": true\n      }, classNames.input || {}));\n      return React.createElement(\"div\", {\n        className: \"rui control numeric-input-field\"\n      }, React.createElement(\"input\", {\n        className: fieldClassName,\n        disabled: this.props.disabled,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        ref: \"input\",\n        onChange: this.handleChange,\n        value: this.displayValue\n      }));\n    }\n\n    return renderField;\n  }();\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", {\n        className: \"numeric-input\"\n      }, this.renderLabel(), this.renderField());\n    }\n\n    return render;\n  }();\n\n  (0, _createClass2.default)(NumericInput, [{\n    key: \"displayValue\",\n    get: function () {\n      var value = this.state.value;\n\n      if (this.state.isEditing) {\n        return value;\n      }\n\n      return this.format(value);\n    }\n  }]);\n  return NumericInput;\n}(Component);\n\nNumericInput.defaultProps = {\n  disabled: false,\n  isEditing: true,\n  classNames: {}\n};\nNumericInput.propTypes = {\n  classNames: PropTypes.shape({}),\n  disabled: PropTypes.bool,\n  format: PropTypes.shape({\n    decimal: PropTypes.string\n  }),\n  i18nKeyLabel: PropTypes.string,\n  id: PropTypes.string,\n  isEditing: PropTypes.bool,\n  label: PropTypes.string,\n  maxValue: PropTypes.number,\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReturnKeyDown: PropTypes.func,\n  value: PropTypes.number\n};\nregisterComponent(\"NumericInput\", NumericInput);\nmodule.exportDefault(NumericInput);","map":{"version":3,"sources":["imports/plugins/core/ui/client/components/numericInput/numericInput.js"],"names":["React","Component","module","watch","require","v","PropTypes","classnames","accounting","Components","registerComponent","NumericInput","props","onBlur","value","state","maxValue","setState","isEditing","numberValue","unformat","event","name","onFocus","currentTarget","format","selectAll","handleChange","onChange","componentWillReceiveProps","nextProps","undefined","moneyFormat","Object","assign","symbol","unformattedValue","formatted","formatMoney","trim","decimal","onKeyDown","onReturnKeyDown","keyCode","target","ctrl","setSelectionRange","length","renderLabel","label","id","i18nKeyLabel","renderField","classNames","textValueClassName","rui","text","displayValue","fieldClassName","input","disabled","render","defaultProps","propTypes","shape","bool","string","number","func","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport accounting from \"accounting-js\";\nimport { Components, registerComponent } from \"@reactioncommerce/reaction-components\";\n\nclass NumericInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      isEditing: false\n    };\n  }\n\n  /**\n   * update state when component receives props\n   * @param  {Object} nextProps new props\n   * @return {undefined}\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== undefined && !this.state.isEditing) {\n      const value = this.format(nextProps.value);\n      this.setState({\n        value\n      });\n    }\n  }\n\n  /**\n   * Gets the displayed value. If in edit mode,\n   * the field's value is not formatted. If not in\n   * edit mode, the field gets formatted according to chosen locale.\n   * @returns {*}\n   */\n  get displayValue() {\n    const { value } = this.state;\n    if (this.state.isEditing) {\n      return value;\n    }\n    return this.format(value);\n  }\n\n  /**\n   * Format this inputs value to a numeric string\n   * @return {String} Formatted numeric string\n   */\n  format(value) {\n    const moneyFormat = Object.assign({}, this.props.format);\n    if (this.state.isEditing) {\n      moneyFormat.symbol = \"\"; // No currency sign in edit mode\n    }\n    const unformattedValue = this.unformat(value);\n    const formatted = accounting.formatMoney(unformattedValue, moneyFormat).trim();\n    return formatted;\n  }\n\n  /**\n   * Get the field's value as rational number\n   * @param { Number } the field's value\n   */\n  unformat(value) {\n    const unformattedValue = accounting.unformat(value, this.props.format.decimal);\n    return unformattedValue;\n  }\n\n  /**\n   * onBlur\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onBlur = () => {\n    let { value } = this.state;\n    if (value > this.props.maxValue) {\n      value = this.props.maxValue;\n    }\n    this.setState({\n      isEditing: false,\n      value\n    });\n    if (this.props.onBlur) {\n      const numberValue = this.unformat(value);\n      this.props.onBlur(event, numberValue, this.props.name);\n    }\n  }\n\n  /**\n   * onKeyDown\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onKeyDown(event) {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(event, this.props.name);\n    }\n\n    if (this.props.onReturnKeyDown && event.keyCode === 13) {\n      const numberValue = this.unformat(event.target.value);\n      this.props.onReturnKeyDown(event, numberValue, this.props.name);\n    }\n  }\n\n  /**\n   * Selects the text of the passed input field\n   * @param ctrl\n   */\n  selectAll(ctrl) {\n    if (ctrl.setSelectionRange) {\n      ctrl.setSelectionRange(0, ctrl.value.length);\n    }\n  }\n\n  /**\n   * onFocus\n   * @summary set the state when the input is focused\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onFocus = (event) => {\n    const { currentTarget } = event;\n    this.setState({\n      isEditing: true\n    }, () => {\n      this.setState({\n        value: this.format(this.state.value)\n      }, () => {\n        this.selectAll(currentTarget);\n      });\n    });\n  }\n\n  /**\n   * Handle change event from text input\n   * @param  {SyntheticEvent} event Change event\n   * @return {undefined}\n   */\n  handleChange = (event) => {\n    const { value } = event.currentTarget;\n    this.setState({\n      value\n    });\n\n    if (this.props.onChange) {\n      const numberValue = this.unformat(value);\n      this.props.onChange(event, numberValue, this.props.name);\n    }\n  }\n\n  /**\n   * renderLabel\n   * @summary Render the label for the field if one is provided in props\n   * @return {ReactNode|null} react node or null\n   */\n  renderLabel() {\n    if (this.props.label) {\n      return (\n        <label htmlFor={this.props.id}>\n          <Components.Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n        </label>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * renderField\n   * @summary Render input box or field\n   * @return {JSX} jsx template\n   */\n  renderField() {\n    const { classNames } = this.props;\n\n    if (this.props.isEditing === false) {\n      const textValueClassName = classnames({\n        rui: true,\n        text: true,\n        ...(classNames.text || {})\n      });\n\n      return (\n        <span className={textValueClassName}>\n          {this.displayValue}\n        </span>\n      );\n    }\n    const fieldClassName = classnames({\n      \"form-control\": true, // eslint-disable-line: quote-props\n      ...(classNames.input || {})\n    });\n    return (\n      <div className=\"rui control numeric-input-field\">\n        <input\n          className={fieldClassName}\n          disabled={this.props.disabled}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          ref=\"input\"\n          onChange={this.handleChange}\n          value={this.displayValue}\n        />\n      </div>\n    );\n  }\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    return (\n      <div className=\"numeric-input\">\n        {this.renderLabel()}\n        {this.renderField()}\n      </div>\n    );\n  }\n}\n\nNumericInput.defaultProps = {\n  disabled: false,\n  isEditing: true,\n  classNames: {}\n};\n\nNumericInput.propTypes = {\n  classNames: PropTypes.shape({}),\n  disabled: PropTypes.bool,\n  format: PropTypes.shape({\n    decimal: PropTypes.string\n  }),\n  i18nKeyLabel: PropTypes.string,\n  id: PropTypes.string,\n  isEditing: PropTypes.bool,\n  label: PropTypes.string,\n  maxValue: PropTypes.number,\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReturnKeyDown: PropTypes.func,\n  value: PropTypes.number\n};\n\nregisterComponent(\"NumericInput\", NumericInput);\n\nexport default NumericInput;\n"]},"sourceType":"script","hash":"df6ae099fa84ab9530279f143c6b4f204acbeae3"}
