{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/api/core.js","filename":"lib/api/core.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"lib/api/core.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"lib/api/core.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/api/core.js"}},"code":"module.export({\n  Reaction: () => Reaction\n});\n\nlet _isEqual;\n\nmodule.watch(require(\"lodash/isEqual\"), {\n  default(v) {\n    _isEqual = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet Accounts, Shops, SellerShops;\nmodule.watch(require(\"../collections\"), {\n  Accounts(v) {\n    Accounts = v;\n  },\n\n  Shops(v) {\n    Shops = v;\n  },\n\n  SellerShops(v) {\n    SellerShops = v;\n  }\n\n}, 3);\nlet Core; // TODO: Decide how we want to approach this problem - duplicate content on both client\n// and server, or detecting client/server and DRYing up the code.\n\nif (Meteor.isServer) {\n  Core = require(\"../../server/api\");\n} else {\n  Core = require(\"../../client/api\");\n}\n/**\n * @method isPackageEnabled\n * @memberof Core\n * @summary Check if package is enabled\n * @example Reaction.isPackageEnabled()\n * @param  {String}  name - Package name\n * @return {Boolean}      True if the package is enabled\n */\n\n\nfunction isPackageEnabled(name) {\n  const settings = this.getPackageSettings(name);\n  return !!settings.enabled;\n}\n/**\n * @method getSeller\n * @memberof Core\n * @example Reaction.getSeller(shopId)\n * @param  {String} shopId ID of shop\n * @return {Object}        Account object of seller\n */\n\n\nfunction getSeller(shopId) {\n  let sellerShopId;\n\n  if (!shopId) {\n    const currentUser = Meteor.user();\n\n    if (currentUser) {\n      [sellerShopId] = Roles.getGroupsForUser(currentUser.id, \"admin\");\n    }\n  } else {\n    sellerShopId = shopId;\n  }\n\n  return Accounts.findOne({\n    shopId: sellerShopId\n  });\n}\n/**\n * @method getSellerShopId\n * @memberof Core\n * @summary Get a seller's shopId or default to parent shopId\n * @example Reaction.getSellerShopId(this.userId, true)\n * @param {String|Object} user - An optional user hash or userId to find a shop for\n * @param {Boolean} [noFallback=false] - Optional.If set to true doesn't fallback to owner shopId\n * when user doesn't have a shop.\n * @returns {String|Boolean} - The shopId belonging to userId, or loggedIn seller, or the parent shopId\n */\n\n\nfunction getSellerShopId(user, noFallback = false) {\n  let seller = user;\n\n  if (Meteor.isClient && !seller) {\n    seller = Meteor.user();\n  }\n\n  if (seller) {\n    const group = Roles.getGroupsForUser(seller, \"admin\")[0];\n\n    if (group) {\n      return group;\n    }\n  }\n\n  if (noFallback) {\n    return false;\n  }\n\n  return Core.Reaction.getShopId();\n}\n/**\n * @method getSellerShop\n * @memberof Core\n * @summary Get a seller's shop or default to parent shop\n * @param {String|Object} user - An optional user hash or userId to find a shop for\n * @param {Boolean} [noFallback=false] - Optional.If set to true doesn't fallback to owner shop\n * when user doesn't have a shop.\n * @returns {String|Boolean} - The shop hash belonging to userId, or loggedIn seller, or the parent shop\n */\n\n\nfunction getSellerShop(user, noFallback = false) {\n  const _id = getSellerShopId(user, noFallback);\n\n  if (!_id) {\n    return false;\n  }\n\n  if (Meteor.isClient && _id !== Core.Reaction.getShopId()) {\n    return SellerShops.findOne({\n      _id\n    });\n  }\n\n  return Shops.findOne({\n    _id\n  });\n}\n/**\n  * getShopsForUser -\n  * @summary gets shopIds of shops where user has provided permissions\n  * @param {Array} roles - roles to check if user has\n  * @param {Object} userId - userId to check permissions for (defaults to current user)\n  * @return {Array} - shopIds user has provided permissions for\n  */\n\n\nfunction getShopsForUser(roles, userId = Meteor.userId()) {\n  // Get full user object, and get shopIds of all shops they are attached to\n  const user = Meteor.user(userId);\n\n  if (!user || !user.roles) {\n    return [];\n  }\n\n  const shopIds = Object.keys(user.roles); // Remove \"__global_roles__\" from the list of shopIds, as this function will always return true for\n  // marketplace admins if that \"id\" is left in the check\n\n  const filteredShopIds = shopIds.filter(shopId => shopId !== \"__global_roles__\"); // Reduce shopIds to shopsWithPermission, using the roles passed in to this function\n\n  const shopIdsWithRoles = filteredShopIds.reduce((shopsWithPermission, shopId) => {\n    // Get list of roles user has for this shop\n    const rolesUserHas = user.roles[shopId]; // Find first role that is included in the passed in roles array, otherwise hasRole is undefined\n\n    const hasRole = rolesUserHas.find(roleUserHas => roles.includes(roleUserHas)); // if we found the role, then the user has permission for this shop. Add shopId to shopsWithPermission array\n\n    if (hasRole) {\n      shopsWithPermission.push(shopId);\n    }\n\n    return shopsWithPermission;\n  }, []);\n  return shopIdsWithRoles;\n}\n/**\n  * hasPermissionForAll -\n  * @summary return if the user has permissions for all the shops\n  * @param {Array} roles - roles to check if user has\n  * @param {String} userId - userId to check permissions for (defaults to current user)\n  * @param {Array} shopsOfUser - shopIds to be checked\n  * @return {Boolean} - true if the user has permissions for all the shops\n  */\n\n\nfunction hasPermissionForAll(roles, userId = Meteor.userId(), shopsOfUser) {\n  return !_isEqual(getShopsForUser([\"admin\"], userId), shopsOfUser);\n}\n\nconst Reaction = Object.assign(Core.Reaction, {\n  isPackageEnabled,\n  getSeller,\n  getSellerShopId,\n  getSellerShop,\n  getShopsForUser,\n  hasPermissionForAll\n});","map":{"version":3,"sources":["lib/api/core.js"],"names":["module","export","Reaction","_isEqual","watch","require","default","v","Meteor","Roles","Accounts","Shops","SellerShops","Core","isServer","isPackageEnabled","name","settings","getPackageSettings","enabled","getSeller","shopId","sellerShopId","currentUser","user","getGroupsForUser","id","findOne","getSellerShopId","noFallback","seller","isClient","group","getShopId","getSellerShop","_id","getShopsForUser","roles","userId","shopIds","Object","keys","filteredShopIds","filter","shopIdsWithRoles","reduce","shopsWithPermission","rolesUserHas","hasRole","find","roleUserHas","includes","push","hasPermissionForAll","shopsOfUser","assign"],"mappings":"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","sourcesContent":["import { isEqual } from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { Accounts, Shops, SellerShops } from \"/lib/collections\";\n\nlet Core;\n\n// TODO: Decide how we want to approach this problem - duplicate content on both client\n// and server, or detecting client/server and DRYing up the code.\nif (Meteor.isServer) {\n  Core = require(\"/server/api\");\n} else {\n  Core = require(\"/client/api\");\n}\n\n/**\n * @method isPackageEnabled\n * @memberof Core\n * @summary Check if package is enabled\n * @example Reaction.isPackageEnabled()\n * @param  {String}  name - Package name\n * @return {Boolean}      True if the package is enabled\n */\nfunction isPackageEnabled(name) {\n  const settings = this.getPackageSettings(name);\n\n  return !!settings.enabled;\n}\n\n/**\n * @method getSeller\n * @memberof Core\n * @example Reaction.getSeller(shopId)\n * @param  {String} shopId ID of shop\n * @return {Object}        Account object of seller\n */\nfunction getSeller(shopId) {\n  let sellerShopId;\n\n  if (!shopId) {\n    const currentUser = Meteor.user();\n    if (currentUser) {\n      [sellerShopId] = Roles.getGroupsForUser(currentUser.id, \"admin\");\n    }\n  } else {\n    sellerShopId = shopId;\n  }\n\n  return Accounts.findOne({ shopId: sellerShopId });\n}\n\n/**\n * @method getSellerShopId\n * @memberof Core\n * @summary Get a seller's shopId or default to parent shopId\n * @example Reaction.getSellerShopId(this.userId, true)\n * @param {String|Object} user - An optional user hash or userId to find a shop for\n * @param {Boolean} [noFallback=false] - Optional.If set to true doesn't fallback to owner shopId\n * when user doesn't have a shop.\n * @returns {String|Boolean} - The shopId belonging to userId, or loggedIn seller, or the parent shopId\n */\nfunction getSellerShopId(user, noFallback = false) {\n  let seller = user;\n\n  if (Meteor.isClient && !seller) {\n    seller = Meteor.user();\n  }\n\n  if (seller) {\n    const group = Roles.getGroupsForUser(seller, \"admin\")[0];\n    if (group) {\n      return group;\n    }\n  }\n\n\n  if (noFallback) {\n    return false;\n  }\n\n  return Core.Reaction.getShopId();\n}\n\n/**\n * @method getSellerShop\n * @memberof Core\n * @summary Get a seller's shop or default to parent shop\n * @param {String|Object} user - An optional user hash or userId to find a shop for\n * @param {Boolean} [noFallback=false] - Optional.If set to true doesn't fallback to owner shop\n * when user doesn't have a shop.\n * @returns {String|Boolean} - The shop hash belonging to userId, or loggedIn seller, or the parent shop\n */\nfunction getSellerShop(user, noFallback = false) {\n  const _id = getSellerShopId(user, noFallback);\n\n  if (!_id) {\n    return false;\n  }\n\n  if (Meteor.isClient && _id !== Core.Reaction.getShopId()) {\n    return SellerShops.findOne({ _id });\n  }\n\n  return Shops.findOne({ _id });\n}\n\n/**\n  * getShopsForUser -\n  * @summary gets shopIds of shops where user has provided permissions\n  * @param {Array} roles - roles to check if user has\n  * @param {Object} userId - userId to check permissions for (defaults to current user)\n  * @return {Array} - shopIds user has provided permissions for\n  */\nfunction getShopsForUser(roles, userId = Meteor.userId()) {\n  // Get full user object, and get shopIds of all shops they are attached to\n  const user = Meteor.user(userId);\n  if (!user || !user.roles) {\n    return [];\n  }\n  const shopIds = Object.keys(user.roles);\n  // Remove \"__global_roles__\" from the list of shopIds, as this function will always return true for\n  // marketplace admins if that \"id\" is left in the check\n  const filteredShopIds = shopIds.filter((shopId) => shopId !== \"__global_roles__\");\n\n  // Reduce shopIds to shopsWithPermission, using the roles passed in to this function\n  const shopIdsWithRoles = filteredShopIds.reduce((shopsWithPermission, shopId) => {\n    // Get list of roles user has for this shop\n    const rolesUserHas = user.roles[shopId];\n\n    // Find first role that is included in the passed in roles array, otherwise hasRole is undefined\n    const hasRole = rolesUserHas.find((roleUserHas) => roles.includes(roleUserHas));\n\n    // if we found the role, then the user has permission for this shop. Add shopId to shopsWithPermission array\n    if (hasRole) {\n      shopsWithPermission.push(shopId);\n    }\n    return shopsWithPermission;\n  }, []);\n\n  return shopIdsWithRoles;\n}\n\n/**\n  * hasPermissionForAll -\n  * @summary return if the user has permissions for all the shops\n  * @param {Array} roles - roles to check if user has\n  * @param {String} userId - userId to check permissions for (defaults to current user)\n  * @param {Array} shopsOfUser - shopIds to be checked\n  * @return {Boolean} - true if the user has permissions for all the shops\n  */\nfunction hasPermissionForAll(roles, userId = Meteor.userId(), shopsOfUser) {\n  return !isEqual(getShopsForUser([\"admin\"], userId), shopsOfUser);\n}\n\nconst Reaction = Object.assign(Core.Reaction, {\n  isPackageEnabled,\n  getSeller,\n  getSellerShopId,\n  getSellerShop,\n  getShopsForUser,\n  hasPermissionForAll\n});\n\nexport { Reaction };\n"]},"sourceType":"script","hash":"52de91cf98a2717c58b077967e23f3acc9090003"}
