{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/accounts/server/methods/groupQuery.js","filename":"imports/plugins/core/accounts/server/methods/groupQuery.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/accounts/server/methods/groupQuery.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/accounts/server/methods/groupQuery.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/accounts/server/methods/groupQuery.js"}},"code":"module.export({\n  groupQuery: () => groupQuery,\n  groupsQuery: () => groupsQuery\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nfunction groupQuery(context, id) {\n  return Promise.asyncApply(() => {\n    const {\n      collections,\n      userHasPermission,\n      userId\n    } = context;\n    const {\n      Accounts,\n      Groups\n    } = collections;\n    const group = Promise.await(Groups.findOne({\n      _id: id\n    }));\n    if (!group) throw new Meteor.Error(\"not-found\", \"There is no group with this ID\"); // If the user has sufficient permissions, then allow them to find any group by ID\n\n    if (userHasPermission([\"owner\", \"admin\", \"reaction-accounts\"], group.shopId)) return group; // Otherwise, only let users see groups that they are members of\n\n    const userAccount = Promise.await(Accounts.findOne({\n      _id: userId,\n      groups: id\n    }, {\n      projection: {\n        _id: 1\n      }\n    })); // If user is not found, throw an error\n\n    if (!userAccount) throw new Meteor.Error(\"access-denied\", \"User does not have permissions to view groups\");\n    return group;\n  });\n}\n\nfunction groupsQuery(context, shopId) {\n  return Promise.asyncApply(() => {\n    const {\n      collections,\n      userHasPermission,\n      userId\n    } = context;\n    const {\n      Accounts,\n      Groups\n    } = collections;\n\n    if (userHasPermission([\"owner\", \"admin\", \"reaction-accounts\"], shopId)) {\n      // find groups by shop ID\n      return Groups.find({\n        shopId\n      });\n    }\n\n    const userAccount = Accounts.findOne({\n      _id: userId\n    }, {\n      projection: {\n        groups: 1\n      }\n    }); // If user is not found, throw an error\n\n    if (!userAccount) throw new Meteor.Error(\"access-denied\", \"User does not have permissions to view groups\"); // find groups by shop ID limited to those the current user is in\n\n    return Groups.find({\n      _id: {\n        $in: userAccount.groups || []\n      },\n      shopId\n    });\n  });\n}","map":{"version":3,"sources":["imports/plugins/core/accounts/server/methods/groupQuery.js"],"names":["module","export","groupQuery","groupsQuery","Meteor","watch","require","v","context","id","collections","userHasPermission","userId","Accounts","Groups","group","findOne","_id","Error","shopId","userAccount","groups","projection","find","$in"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW,MAAIA,UAAhB;AAA2BC,eAAY,MAAIA;AAA3C,CAAd;AAAuE,IAAIC,MAAJ;AAAWJ,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;;AAU3E,SAAeL,UAAf,CAA0BM,OAA1B,EAAmCC,EAAnC;AAAA,kCAAuC;AAC5C,UAAM;AAAEC,iBAAF;AAAeC,uBAAf;AAAkCC;AAAlC,QAA6CJ,OAAnD;AACA,UAAM;AAAEK,cAAF;AAAYC;AAAZ,QAAuBJ,WAA7B;AAEA,UAAMK,sBAAcD,OAAOE,OAAP,CAAe;AAAEC,WAAKR;AAAP,KAAf,CAAd,CAAN;AACA,QAAI,CAACM,KAAL,EAAY,MAAM,IAAIX,OAAOc,KAAX,CAAiB,WAAjB,EAA8B,gCAA9B,CAAN,CALgC,CAO5C;;AACA,QAAIP,kBAAkB,CAAC,OAAD,EAAU,OAAV,EAAmB,mBAAnB,CAAlB,EAA2DI,MAAMI,MAAjE,CAAJ,EAA8E,OAAOJ,KAAP,CARlC,CAU5C;;AACA,UAAMK,4BAAoBP,SAASG,OAAT,CAAiB;AACzCC,WAAKL,MADoC;AAEzCS,cAAQZ;AAFiC,KAAjB,EAGvB;AACDa,kBAAY;AACVL,aAAK;AADK;AADX,KAHuB,CAApB,CAAN,CAX4C,CAoB5C;;AACA,QAAI,CAACG,WAAL,EAAkB,MAAM,IAAIhB,OAAOc,KAAX,CAAiB,eAAjB,EAAkC,+CAAlC,CAAN;AAElB,WAAOH,KAAP;AACD,GAxBM;AAAA;;AAkCA,SAAeZ,WAAf,CAA2BK,OAA3B,EAAoCW,MAApC;AAAA,kCAA4C;AACjD,UAAM;AAAET,iBAAF;AAAeC,uBAAf;AAAkCC;AAAlC,QAA6CJ,OAAnD;AACA,UAAM;AAAEK,cAAF;AAAYC;AAAZ,QAAuBJ,WAA7B;;AAEA,QAAIC,kBAAkB,CAAC,OAAD,EAAU,OAAV,EAAmB,mBAAnB,CAAlB,EAA2DQ,MAA3D,CAAJ,EAAwE;AACtE;AACA,aAAOL,OAAOS,IAAP,CAAY;AAAEJ;AAAF,OAAZ,CAAP;AACD;;AAED,UAAMC,cAAcP,SAASG,OAAT,CAAiB;AACnCC,WAAKL;AAD8B,KAAjB,EAEjB;AACDU,kBAAY;AACVD,gBAAQ;AADE;AADX,KAFiB,CAApB,CATiD,CAiBjD;;AACA,QAAI,CAACD,WAAL,EAAkB,MAAM,IAAIhB,OAAOc,KAAX,CAAiB,eAAjB,EAAkC,+CAAlC,CAAN,CAlB+B,CAoBjD;;AACA,WAAOJ,OAAOS,IAAP,CAAY;AACjBN,WAAK;AACHO,aAAKJ,YAAYC,MAAZ,IAAsB;AADxB,OADY;AAIjBF;AAJiB,KAAZ,CAAP;AAMD,GA3BM;AAAA","sourcesContent":["import { Meteor } from \"meteor/meteor\";\n\n/**\n * @name groupQuery\n * @method\n * @summary query the Groups collection and return group data\n * @param {Object} context - an object containing the per-request state\n * @param {String} id - id of group to query\n * @return {Object} group object\n */\nexport async function groupQuery(context, id) {\n  const { collections, userHasPermission, userId } = context;\n  const { Accounts, Groups } = collections;\n\n  const group = await Groups.findOne({ _id: id });\n  if (!group) throw new Meteor.Error(\"not-found\", \"There is no group with this ID\");\n\n  // If the user has sufficient permissions, then allow them to find any group by ID\n  if (userHasPermission([\"owner\", \"admin\", \"reaction-accounts\"], group.shopId)) return group;\n\n  // Otherwise, only let users see groups that they are members of\n  const userAccount = await Accounts.findOne({\n    _id: userId,\n    groups: id\n  }, {\n    projection: {\n      _id: 1\n    }\n  });\n\n  // If user is not found, throw an error\n  if (!userAccount) throw new Meteor.Error(\"access-denied\", \"User does not have permissions to view groups\");\n\n  return group;\n}\n\n/**\n * @name groupsQuery\n * @method\n * @summary query the Groups collection and return a MongoDB cursor\n * @param {Object} context - an object containing the per-request state\n * @param {String} shopId - shop ID to get groups for\n * @return {Object} Groups collection cursor\n */\nexport async function groupsQuery(context, shopId) {\n  const { collections, userHasPermission, userId } = context;\n  const { Accounts, Groups } = collections;\n\n  if (userHasPermission([\"owner\", \"admin\", \"reaction-accounts\"], shopId)) {\n    // find groups by shop ID\n    return Groups.find({ shopId });\n  }\n\n  const userAccount = Accounts.findOne({\n    _id: userId\n  }, {\n    projection: {\n      groups: 1\n    }\n  });\n\n  // If user is not found, throw an error\n  if (!userAccount) throw new Meteor.Error(\"access-denied\", \"User does not have permissions to view groups\");\n\n  // find groups by shop ID limited to those the current user is in\n  return Groups.find({\n    _id: {\n      $in: userAccount.groups || []\n    },\n    shopId\n  });\n}\n"]},"sourceType":"script","hash":"5251eb81ee84b1295b0419185f59cdf3141e1fac"}
