{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/taxes/server/publications/taxes.js","filename":"imports/plugins/core/taxes/server/publications/taxes.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/taxes/server/publications/taxes.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/taxes/server/publications/taxes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/taxes/server/publications/taxes.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Security;\nmodule.watch(require(\"meteor/ongoworks:security\"), {\n  Security(v) {\n    Security = v;\n  }\n\n}, 2);\nlet Counts;\nmodule.watch(require(\"meteor/tmeasday:publish-counts\"), {\n  Counts(v) {\n    Counts = v;\n  }\n\n}, 3);\nlet Taxes, TaxCodes;\nmodule.watch(require(\"../../lib/collections\"), {\n  Taxes(v) {\n    Taxes = v;\n  },\n\n  TaxCodes(v) {\n    TaxCodes = v;\n  }\n\n}, 4);\nlet Reaction;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 5);\n//\n// Security\n// import \"/server/security/collections\";\n// Security definitions\n//\nSecurity.permit([\"insert\", \"update\", \"remove\"]).collections([Taxes, TaxCodes]).ifHasRole({\n  role: \"admin\",\n  group: Reaction.getShopId()\n});\n/**\n * taxes\n */\n\nMeteor.publish(\"Taxes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object)); // check shopId\n\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {}; // append shopId to query\n  // taxes could be shared\n  // if you disregarded shopId\n\n  select.shopId = shopId; // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"taxes-count\", Taxes.find(select, options));\n  return Taxes.find(select, options);\n});\n/**\n * tax codes\n */\n\nMeteor.publish(\"TaxCodes\", function (query, params) {\n  check(query, Match.Optional(Object));\n  check(params, Match.Optional(Object)); // check shopId\n\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {}; // for now, not adding shopId to query\n  // taxCodes are reasonable shared??\n  //  select.shopId = shopId;\n\n  const options = params || {}; // const options = params || {\n  //   fields: {\n  //     id: 1,\n  //     label: 1\n  //   },\n  //   sort: {\n  //     label: 1\n  //   }\n  // };\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"taxcode-count\", TaxCodes.find(select, options));\n  return TaxCodes.find(select, options);\n});","map":{"version":3,"sources":["imports/plugins/core/taxes/server/publications/taxes.js"],"names":["Meteor","module","watch","require","v","Match","check","Security","Counts","Taxes","TaxCodes","Reaction","permit","collections","ifHasRole","role","group","getShopId","publish","query","options","Optional","Object","shopId","ready","select","find","params"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Security } from \"meteor/ongoworks:security\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Taxes, TaxCodes } from \"../../lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n//\n// Security\n// import \"/server/security/collections\";\n// Security definitions\n//\nSecurity.permit([\"insert\", \"update\", \"remove\"]).collections([\n  Taxes,\n  TaxCodes\n]).ifHasRole({\n  role: \"admin\",\n  group: Reaction.getShopId()\n});\n/**\n * taxes\n */\nMeteor.publish(\"Taxes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // taxes could be shared\n  // if you disregarded shopId\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"taxes-count\", Taxes.find(\n    select,\n    options\n  ));\n\n  return Taxes.find(\n    select,\n    options\n  );\n});\n\n/**\n * tax codes\n */\nMeteor.publish(\"TaxCodes\", function (query, params) {\n  check(query, Match.Optional(Object));\n  check(params, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n\n  // for now, not adding shopId to query\n  // taxCodes are reasonable shared??\n  //  select.shopId = shopId;\n\n  const options = params || {};\n  // const options = params || {\n  //   fields: {\n  //     id: 1,\n  //     label: 1\n  //   },\n  //   sort: {\n  //     label: 1\n  //   }\n  // };\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"taxcode-count\", TaxCodes.find(\n    select,\n    options\n  ));\n\n  return TaxCodes.find(\n    select,\n    options\n  );\n});\n"]},"sourceType":"script","hash":"3efdcd4b022606b006b47f526cf1a9b251a2fb55"}
