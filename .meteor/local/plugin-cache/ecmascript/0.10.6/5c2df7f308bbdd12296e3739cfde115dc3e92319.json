{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/api/core/shopName.js","filename":"server/api/core/shopName.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/api/core/shopName.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/api/core/shopName.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/api/core/shopName.js"}},"code":"module.export({\n  setShopName: () => setShopName\n});\nlet Shops;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Shops(v) {\n    Shops = v;\n  }\n\n}, 0);\nlet Logger;\nmodule.watch(require(\"./..\"), {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 1);\n\nfunction setShopName(shop) {\n  const name = process.env.REACTION_SHOP_NAME;\n  if (!name) return; // if this shop name has already been used, don't use it again\n\n  const existingShopWithName = Shops.findOne({\n    name\n  });\n\n  if (existingShopWithName) {\n    Logger.info(`Default shop name ${name} already used`);\n    return;\n  } // update the shop name with the REACTION_SHOP_NAME env var\n\n\n  const {\n    _id\n  } = shop;\n\n  try {\n    Shops.update({\n      _id\n    }, {\n      $set: {\n        name\n      }\n    });\n  } catch (err) {\n    Logger.error(\"Failed to update shop name\", err);\n  }\n}","map":{"version":3,"sources":["server/api/core/shopName.js"],"names":["module","export","setShopName","Shops","watch","require","v","Logger","shop","name","process","env","REACTION_SHOP_NAME","existingShopWithName","findOne","info","_id","update","$set","err","error"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,eAAY,MAAIA;AAAjB,CAAd;AAA6C,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAAjD,EAAqE,CAArE;AAAwE,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,MAAR,CAAb,EAA6B;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAA7B,EAAmD,CAAnD;;AAWnI,SAASJ,WAAT,CAAqBM,IAArB,EAA2B;AAChC,QAAMC,OAAOC,QAAQC,GAAR,CAAYC,kBAAzB;AACA,MAAI,CAACH,IAAL,EAAW,OAFqB,CAIhC;;AACA,QAAMI,uBAAuBV,MAAMW,OAAN,CAAc;AAAEL;AAAF,GAAd,CAA7B;;AACA,MAAII,oBAAJ,EAA0B;AACxBN,WAAOQ,IAAP,CAAa,qBAAoBN,IAAK,eAAtC;AACA;AACD,GAT+B,CAWhC;;;AACA,QAAM;AAAEO;AAAF,MAAUR,IAAhB;;AACA,MAAI;AACFL,UAAMc,MAAN,CAAa;AAAED;AAAF,KAAb,EAAsB;AAAEE,YAAM;AAAET;AAAF;AAAR,KAAtB;AACD,GAFD,CAEE,OAAOU,GAAP,EAAY;AACZZ,WAAOa,KAAP,CAAa,4BAAb,EAA2CD,GAA3C;AACD;AACF","sourcesContent":["import { Shops } from \"/lib/collections\";\nimport { Logger } from \"/server/api\";\n\n/**\n *  @method setShopName\n *  @memberof Core\n *  @example Reaction.setShopName(shop)\n *  @param {Object} shop - Shops document with `_id` property\n *  @summary when new shop is created, set shop name if REACTION_SHOP_NAME env var exists\n *  @returns {undefined} undefined\n */\nexport function setShopName(shop) {\n  const name = process.env.REACTION_SHOP_NAME;\n  if (!name) return;\n\n  // if this shop name has already been used, don't use it again\n  const existingShopWithName = Shops.findOne({ name });\n  if (existingShopWithName) {\n    Logger.info(`Default shop name ${name} already used`);\n    return;\n  }\n\n  // update the shop name with the REACTION_SHOP_NAME env var\n  const { _id } = shop;\n  try {\n    Shops.update({ _id }, { $set: { name } });\n  } catch (err) {\n    Logger.error(\"Failed to update shop name\", err);\n  }\n}\n"]},"sourceType":"script","hash":"5c2df7f308bbdd12296e3739cfde115dc3e92319"}
