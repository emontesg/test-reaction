{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui-tagnav/client/helpers/tags.js","filename":"imports/plugins/core/ui-tagnav/client/helpers/tags.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui-tagnav/client/helpers/tags.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui-tagnav/client/helpers/tags.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui-tagnav/client/helpers/tags.js"}},"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nmodule.export({\n  TagHelpers: function () {\n    return TagHelpers;\n  }\n});\n\nvar _compact;\n\nmodule.watch(require(\"lodash/compact\"), {\n  \"default\": function (v) {\n    _compact = v;\n  }\n}, 0);\n\nvar _isEmpty;\n\nmodule.watch(require(\"lodash/isEmpty\"), {\n  \"default\": function (v) {\n    _isEmpty = v;\n  }\n}, 1);\n\nvar _find;\n\nmodule.watch(require(\"lodash/find\"), {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 2);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 3);\nvar Reaction, i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 4);\nvar Tags;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Tags: function (v) {\n    Tags = v;\n  }\n}, 5);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 6);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 7);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 8);\nvar TagHelpers = {\n  moveItem: function (oldArray, fromIndex, toIndex) {\n    var newArray = _toConsumableArray(oldArray);\n\n    newArray.splice(toIndex, 0, newArray.splice(fromIndex, 1)[0]);\n    return newArray;\n  },\n  subTags: function (parentTag) {\n    if (_isArray(parentTag.relatedTagIds)) {\n      var tags = Tags.find({\n        isTopLevel: false,\n        _id: {\n          $in: parentTag.relatedTagIds\n        }\n      }).fetch();\n      var subTags = parentTag.relatedTagIds.map(function (tagId) {\n        return _find(tags, function (tagObject) {\n          return tagObject._id === tagId;\n        });\n      });\n      return subTags;\n    }\n\n    return [];\n  },\n  currentTag: function () {\n    return Session.get(\"currentTag\");\n  },\n  getTags: function () {\n    var tags = [];\n    tags = Tags.find({\n      isTopLevel: true\n    }, {\n      sort: {\n        position: 1\n      }\n    }).fetch();\n    /*\n    if (this.tagIds) {\n      for (let relatedTagId of this.tagIds) {\n        if (!_.find(tags, {\n          _id: relatedTagId\n        })) {\n          tags.push(Tags.findOne(relatedTagId));\n        }\n      }\n    }*/\n\n    if (this.tag) {\n      Session.set(\"currentTag\", this.tag._id);\n    } else {\n      Session.set(\"currentTag\", \"\");\n    }\n\n    return tags; // there are cases where\n    // we'll have no tags, and sort will error\n    // so we check length for safety\n    // if (tags) {\n    //   tags.sort(function (a, b) {\n    //     return a.position - b.position;\n    //   });\n    //   return tags;\n    // }\n  },\n  createTag: function (tagName, tagId, parentTag) {\n    if (!tagName) {\n      return;\n    }\n\n    var parentTagId;\n\n    if (parentTag) {\n      parentTagId = parentTag._id;\n    }\n\n    Meteor.call(\"shop/updateHeaderTags\", tagName, null, parentTagId, function (error) {\n      if (error) {\n        Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n      }\n    });\n  },\n  updateTag: function (tagId, tagName, parentTagId) {\n    Meteor.call(\"shop/updateHeaderTags\", tagName, tagId, parentTagId, function (error) {\n      if (error) {\n        Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n      }\n    });\n  },\n\n  /* eslint no-unused-vars: 0 */\n  //\n  //   TODO review toIndex, ofList variable implementation in tags.js moveTagToNewParent\n  //\n  moveTagToNewParent: function (movedTagId, toListId, toIndex, ofList) {\n    if (movedTagId) {\n      if (toListId) {\n        var _result = Tags.update(toListId, {\n          $addToSet: {\n            relatedTagIds: movedTagId\n          }\n        });\n\n        return _result;\n      }\n\n      var result = Tags.update(movedTagId, {\n        $set: {\n          isTopLevel: true\n        }\n      });\n      return result;\n    }\n\n    return 0;\n  },\n  sortTags: function (tagIds, parentTag) {\n    if (_isArray(tagIds)) {\n      if (_isEmpty(parentTag)) {\n        // Top level tags\n        for (var _iterator = tagIds, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray2) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var _tagId = _ref;\n          Tags.update(_tagId, {\n            $set: {\n              position: tagIds.indexOf(_tagId)\n            }\n          });\n        }\n      } else {\n        // Sub tags\n        Tags.update(parentTag._id, {\n          $set: {\n            relatedTagIds: _compact(tagIds)\n          }\n        });\n      }\n    }\n  },\n  removeTag: function (tag, parentTag) {\n    if (_isEmpty(parentTag) === false) {\n      Tags.update(parentTag._id, {\n        $pullAll: {\n          relatedTagIds: [tag._id]\n        }\n      });\n    } else if (tag.isTopLevel === true) {\n      Tags.update(tag._id, {\n        $set: {\n          isTopLevel: false\n        }\n      });\n    }\n  },\n  updateSuggestions: function (term, _ref2) {\n    var excludeTags = _ref2.excludeTags;\n    var slug = Reaction.getSlug(term);\n    var selector = {\n      slug: new RegExp(slug, \"i\")\n    };\n\n    if (Array.isArray(excludeTags)) {\n      selector._id = {\n        $nin: excludeTags\n      };\n    }\n\n    var tags = Tags.find(selector).map(function (tag) {\n      return {\n        label: tag.name\n      };\n    });\n    return tags;\n  }\n};\nTemplate.registerHelper(\"reactionSubTags\", TagHelpers.subTags);","map":{"version":3,"sources":["imports/plugins/core/ui-tagnav/client/helpers/tags.js"],"names":["module","export","TagHelpers","_compact","watch","require","v","_isEmpty","_find","_isArray","Reaction","i18next","Tags","Meteor","Session","Template","moveItem","oldArray","fromIndex","toIndex","newArray","splice","subTags","parentTag","relatedTagIds","tags","find","isTopLevel","_id","$in","fetch","map","tagId","tagObject","currentTag","get","getTags","sort","position","tag","set","createTag","tagName","parentTagId","call","error","Alerts","toast","t","updateTag","moveTagToNewParent","movedTagId","toListId","ofList","result","update","$addToSet","$set","sortTags","tagIds","indexOf","removeTag","$pullAll","updateSuggestions","term","excludeTags","slug","getSlug","selector","RegExp","Array","isArray","$nin","label","name","registerHelper"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * Reaction TagNav shared helpers\n * @type {Object}\n */\nexport const TagHelpers = {\n  moveItem(oldArray, fromIndex, toIndex) {\n    const newArray = [...oldArray];\n    newArray.splice(toIndex, 0, newArray.splice(fromIndex, 1)[0]);\n    return newArray;\n  },\n\n  subTags(parentTag) {\n    if (_.isArray(parentTag.relatedTagIds)) {\n      const tags = Tags.find({\n        isTopLevel: false,\n        _id: {\n          $in: parentTag.relatedTagIds\n        }\n      }).fetch();\n\n      const subTags = parentTag.relatedTagIds.map((tagId) => _.find(tags, (tagObject) => tagObject._id === tagId));\n\n      return subTags;\n    }\n\n    return [];\n  },\n\n  currentTag() {\n    return Session.get(\"currentTag\");\n  },\n\n  getTags() {\n    let tags = [];\n\n    tags = Tags.find({\n      isTopLevel: true\n    }, {\n      sort: {\n        position: 1\n      }\n    }).fetch();\n    /*\n    if (this.tagIds) {\n      for (let relatedTagId of this.tagIds) {\n        if (!_.find(tags, {\n          _id: relatedTagId\n        })) {\n          tags.push(Tags.findOne(relatedTagId));\n        }\n      }\n    }*/\n\n    if (this.tag) {\n      Session.set(\"currentTag\", this.tag._id);\n    } else {\n      Session.set(\"currentTag\", \"\");\n    }\n\n    return tags;\n    // there are cases where\n    // we'll have no tags, and sort will error\n    // so we check length for safety\n    // if (tags) {\n    //   tags.sort(function (a, b) {\n    //     return a.position - b.position;\n    //   });\n    //   return tags;\n    // }\n  },\n\n  createTag(tagName, tagId, parentTag) {\n    if (!tagName) {\n      return;\n    }\n    let parentTagId;\n\n    if (parentTag) {\n      parentTagId = parentTag._id;\n    }\n\n    Meteor.call(\"shop/updateHeaderTags\", tagName, null, parentTagId, (error) => {\n      if (error) {\n        Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n      }\n    });\n  },\n\n  updateTag(tagId, tagName, parentTagId) {\n    Meteor.call(\"shop/updateHeaderTags\", tagName, tagId, parentTagId, (error) => {\n      if (error) {\n        Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n      }\n    });\n  },\n\n  /* eslint no-unused-vars: 0 */\n  //\n  //   TODO review toIndex, ofList variable implementation in tags.js moveTagToNewParent\n  //\n  moveTagToNewParent(movedTagId, toListId, toIndex, ofList) {\n    if (movedTagId) {\n      if (toListId) {\n        const result = Tags.update(toListId, {\n          $addToSet: {\n            relatedTagIds: movedTagId\n          }\n        });\n\n        return result;\n      }\n\n      const result = Tags.update(movedTagId, {\n        $set: {\n          isTopLevel: true\n        }\n      });\n\n      return result;\n    }\n    return 0;\n  },\n\n  sortTags(tagIds, parentTag) {\n    if (_.isArray(tagIds)) {\n      if (_.isEmpty(parentTag)) {\n        // Top level tags\n        for (const tagId of tagIds) {\n          Tags.update(tagId, {\n            $set: {\n              position: tagIds.indexOf(tagId)\n            }\n          });\n        }\n      } else {\n        // Sub tags\n        Tags.update(parentTag._id, {\n          $set: {\n            relatedTagIds: _.compact(tagIds)\n          }\n        });\n      }\n    }\n  },\n\n  removeTag(tag, parentTag) {\n    if (_.isEmpty(parentTag) === false) {\n      Tags.update(parentTag._id, {\n        $pullAll: {\n          relatedTagIds: [tag._id]\n        }\n      });\n    } else if (tag.isTopLevel === true) {\n      Tags.update(tag._id, {\n        $set: {\n          isTopLevel: false\n        }\n      });\n    }\n  },\n\n  updateSuggestions(term, { excludeTags }) {\n    const slug = Reaction.getSlug(term);\n\n    const selector = {\n      slug: new RegExp(slug, \"i\")\n    };\n\n    if (Array.isArray(excludeTags)) {\n      selector._id = {\n        $nin: excludeTags\n      };\n    }\n\n    const tags = Tags.find(selector).map((tag) => ({\n      label: tag.name\n    }));\n\n    return tags;\n  }\n};\n\nTemplate.registerHelper(\"reactionSubTags\", TagHelpers.subTags);\n"]},"sourceType":"script","hash":"fbea415f7434c6fbd49ef74e59e71e67b19267ec"}
