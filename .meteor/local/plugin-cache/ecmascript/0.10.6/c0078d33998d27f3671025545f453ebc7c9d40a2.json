{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/shipping/server/methods/methods.js","filename":"imports/plugins/core/shipping/server/methods/methods.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/shipping/server/methods/methods.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/shipping/server/methods/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/shipping/server/methods/methods.js"}},"code":"module.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Shipping, Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Shipping(v) {\n    Shipping = v;\n  },\n\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 2);\nlet Reaction;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 3);\nlet shippingRoles;\nmodule.watch(require(\"../lib/roles\"), {\n  shippingRoles(v) {\n    shippingRoles = v;\n  }\n\n}, 4);\nconst methods = {\n  /**\n   * @name shipping/status/refresh\n   * @method\n   * @memberof Methods/Shipping\n   * @todo This is a stub for future core processing\n   * @summary Blank method. Serves as a place for Method Hooks,\n   * in other shipping packages, like Shippo\n   * @param  {String} orderId order ID\n   * @return {String}         order ID\n   */\n  \"shipping/status/refresh\"(orderId) {\n    check(orderId, String); // this is a stub for future core processing\n    // it also serves as a place for Method Hooks\n    // in other shipping packages, like Shippo\n\n    return orderId;\n  },\n\n  /**\n   * @name shipping/provider/toggle\n   * @method\n   * @memberof Methods/Shipping\n   * @example Meteor.call(\"shipping/provider/toggle\", packageId, settingsKey)\n   * @summary Toggle enabled provider\n   * @param { String } packageId packageId\n   * @param { String } provider provider name\n   * @return { Number } update result\n   */\n  \"shipping/provider/toggle\"(packageId, provider) {\n    check(packageId, String);\n    check(provider, String);\n\n    if (!Reaction.hasPermission(shippingRoles)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    const pkg = Packages.findOne(packageId);\n\n    if (pkg && pkg.settings[provider]) {\n      const current = Shipping.findOne({\n        \"provider.name\": provider\n      });\n      const {\n        enabled\n      } = pkg.settings[provider]; // const enabled = !current.provider.enabled;\n\n      if (current && current.provider) {\n        return Shipping.update({\n          \"_id\": current._id,\n          \"provider.name\": provider\n        }, {\n          $set: {\n            \"provider.enabled\": enabled\n          }\n        }, {\n          multi: true\n        });\n      }\n    }\n  }\n\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/core/shipping/server/methods/methods.js"],"names":["module","export","methods","Meteor","watch","require","v","check","Shipping","Packages","Reaction","shippingRoles","orderId","String","packageId","provider","hasPermission","Error","pkg","findOne","settings","current","enabled","update","_id","$set","multi"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,MAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,QAAJ,EAAaC,QAAb;AAAsBT,OAAOI,KAAP,CAAaC,QAAQ,mCAAR,CAAb,EAA0D;AAACG,WAASF,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW,GAAxB;;AAAyBG,WAASH,CAAT,EAAW;AAACG,eAASH,CAAT;AAAW;;AAAhD,CAA1D,EAA4G,CAA5G;AAA+G,IAAII,QAAJ;AAAaV,OAAOI,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAACK,WAASJ,CAAT,EAAW;AAACI,eAASJ,CAAT;AAAW;;AAAxB,CAArD,EAA+E,CAA/E;AAAkF,IAAIK,aAAJ;AAAkBX,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACM,gBAAcL,CAAd,EAAgB;AAACK,oBAAcL,CAAd;AAAgB;;AAAlC,CAArC,EAAyE,CAAzE;AAWpa,MAAMJ,UAAU;AACrB;;;;;;;;;;AAUA,4BAA0BU,OAA1B,EAAmC;AACjCL,UAAMK,OAAN,EAAeC,MAAf,EADiC,CAEjC;AACA;AACA;;AACA,WAAOD,OAAP;AACD,GAjBoB;;AAmBrB;;;;;;;;;;AAUA,6BAA2BE,SAA3B,EAAsCC,QAAtC,EAAgD;AAC9CR,UAAMO,SAAN,EAAiBD,MAAjB;AACAN,UAAMQ,QAAN,EAAgBF,MAAhB;;AACA,QAAI,CAACH,SAASM,aAAT,CAAuBL,aAAvB,CAAL,EAA4C;AAC1C,YAAM,IAAIR,OAAOc,KAAX,CAAiB,eAAjB,EAAkC,eAAlC,CAAN;AACD;;AACD,UAAMC,MAAMT,SAASU,OAAT,CAAiBL,SAAjB,CAAZ;;AACA,QAAII,OAAOA,IAAIE,QAAJ,CAAaL,QAAb,CAAX,EAAmC;AACjC,YAAMM,UAAUb,SAASW,OAAT,CAAiB;AAAE,yBAAiBJ;AAAnB,OAAjB,CAAhB;AACA,YAAM;AAAEO;AAAF,UAAcJ,IAAIE,QAAJ,CAAaL,QAAb,CAApB,CAFiC,CAGjC;;AACA,UAAIM,WAAWA,QAAQN,QAAvB,EAAiC;AAC/B,eAAOP,SAASe,MAAT,CAAgB;AACrB,iBAAOF,QAAQG,GADM;AAErB,2BAAiBT;AAFI,SAAhB,EAGJ;AACDU,gBAAM;AACJ,gCAAoBH;AADhB;AADL,SAHI,EAOJ;AACDI,iBAAO;AADN,SAPI,CAAP;AAUD;AACF;AACF;;AArDoB,CAAhB;AAwDPvB,OAAOD,OAAP,CAAeA,OAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Shipping, Packages } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\nimport { shippingRoles } from \"../lib/roles\";\n\n/**\n *\n * @namespace Methods/Shipping\n */\n\nexport const methods = {\n  /**\n   * @name shipping/status/refresh\n   * @method\n   * @memberof Methods/Shipping\n   * @todo This is a stub for future core processing\n   * @summary Blank method. Serves as a place for Method Hooks,\n   * in other shipping packages, like Shippo\n   * @param  {String} orderId order ID\n   * @return {String}         order ID\n   */\n  \"shipping/status/refresh\"(orderId) {\n    check(orderId, String);\n    // this is a stub for future core processing\n    // it also serves as a place for Method Hooks\n    // in other shipping packages, like Shippo\n    return orderId;\n  },\n\n  /**\n   * @name shipping/provider/toggle\n   * @method\n   * @memberof Methods/Shipping\n   * @example Meteor.call(\"shipping/provider/toggle\", packageId, settingsKey)\n   * @summary Toggle enabled provider\n   * @param { String } packageId packageId\n   * @param { String } provider provider name\n   * @return { Number } update result\n   */\n  \"shipping/provider/toggle\"(packageId, provider) {\n    check(packageId, String);\n    check(provider, String);\n    if (!Reaction.hasPermission(shippingRoles)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n    const pkg = Packages.findOne(packageId);\n    if (pkg && pkg.settings[provider]) {\n      const current = Shipping.findOne({ \"provider.name\": provider });\n      const { enabled } = pkg.settings[provider];\n      // const enabled = !current.provider.enabled;\n      if (current && current.provider) {\n        return Shipping.update({\n          \"_id\": current._id,\n          \"provider.name\": provider\n        }, {\n          $set: {\n            \"provider.enabled\": enabled\n          }\n        }, {\n          multi: true\n        });\n      }\n    }\n  }\n};\n\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"c0078d33998d27f3671025545f453ebc7c9d40a2"}
