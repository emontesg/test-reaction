{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/versions/server/migrations/15_update_shipping_status_to_workflow.js","filename":"imports/plugins/core/versions/server/migrations/15_update_shipping_status_to_workflow.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/versions/server/migrations/15_update_shipping_status_to_workflow.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/versions/server/migrations/15_update_shipping_status_to_workflow.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/versions/server/migrations/15_update_shipping_status_to_workflow.js"}},"code":"let Migrations;\nmodule.watch(require(\"meteor/percolate:migrations\"), {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Orders;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Orders(v) {\n    Orders = v;\n  }\n\n}, 1);\nMigrations.add({\n  version: 15,\n\n  // Reaction v1.0 had 3 shipping boolean states (packed, shipped, delivered). Shipping workflow is not managed with a\n  // workflow object that keeps track of previous state.\n  up() {\n    Orders.find().forEach(order => {\n      const currentShipping = order.shipping[0];\n      currentShipping.workflow = {};\n\n      if (currentShipping.packed) {\n        currentShipping.workflow.status = \"coreOrderWorkflow/packed\";\n        currentShipping.workflow.workflow = [\"coreOrderWorkflow/notStarted\", \"coreOrderWorkflow/picked\", \"coreOrderWorkflow/packed\"];\n      }\n\n      if (currentShipping.shipped) {\n        currentShipping.workflow.status = \"coreOrderWorkflow/shipped\";\n        currentShipping.workflow.workflow = [\"coreOrderWorkflow/notStarted\", \"coreOrderWorkflow/picked\", \"coreOrderWorkflow/packed\", \"coreOrderWorkflow/labeled\", \"coreOrderWorkflow/shipped\"];\n      }\n\n      if (currentShipping.delivered) {\n        currentShipping.workflow.status = \"coreOrderWorkflow/delivered\";\n        currentShipping.workflow.workflow = [\"coreOrderWorkflow/notStarted\", \"coreOrderWorkflow/picked\", \"coreOrderWorkflow/packed\", \"coreOrderWorkflow/labeled\", \"coreOrderWorkflow/shipped\", \"coreOrderWorkflow/delivered\"];\n      } // If none of the 3 v1.0 states is true, set as unstarted.\n      // Note: In case of customized workflow status, modify here to capture the added status(es) before running the migration\n\n\n      currentShipping.workflow.status = \"new\";\n      currentShipping.workflow.workflow = [\"coreOrderWorkflow/notStarted\"];\n      delete currentShipping.packed;\n      delete currentShipping.shipped;\n      delete currentShipping.delivered;\n      Orders.update({\n        _id: order._id\n      }, {\n        $set: {\n          \"shipping.0\": currentShipping\n        }\n      }, {\n        bypassCollection2: true\n      });\n    });\n  },\n\n  down() {\n    Orders.find().forEach(order => {\n      const currentShipping = order.shipping[0];\n      const {\n        workflow\n      } = currentShipping;\n      currentShipping.packed = false;\n      currentShipping.shipped = false;\n      currentShipping.delivered = false;\n\n      if (workflow && workflow.status === \"coreOrderWorkflow/packed\") {\n        currentShipping.packed = true;\n      }\n\n      if (workflow && workflow.status === \"coreOrderWorkflow/shipped\") {\n        currentShipping.shipped = true;\n      }\n\n      if (workflow && workflow.status === \"coreOrderWorkflow/delivered\") {\n        currentShipping.delivered = true;\n      }\n\n      delete currentShipping.workflow.workflow;\n      Orders.update({\n        _id: order._id\n      }, {\n        $set: {\n          \"shipping.0\": currentShipping\n        }\n      }, {\n        bypassCollection2: true\n      });\n    });\n  }\n\n});","map":{"version":3,"sources":["imports/plugins/core/versions/server/migrations/15_update_shipping_status_to_workflow.js"],"names":["Migrations","module","watch","require","v","Orders","add","version","up","find","forEach","order","currentShipping","shipping","workflow","packed","status","shipped","delivered","update","_id","$set","bypassCollection2","down"],"mappings":"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","sourcesContent":["import { Migrations } from \"meteor/percolate:migrations\";\nimport { Orders } from \"/lib/collections\";\n\nMigrations.add({\n  version: 15,\n  // Reaction v1.0 had 3 shipping boolean states (packed, shipped, delivered). Shipping workflow is not managed with a\n  // workflow object that keeps track of previous state.\n  up() {\n    Orders.find().forEach((order) => {\n      const currentShipping = order.shipping[0];\n      currentShipping.workflow = {};\n\n      if (currentShipping.packed) {\n        currentShipping.workflow.status = \"coreOrderWorkflow/packed\";\n        currentShipping.workflow.workflow = [\n          \"coreOrderWorkflow/notStarted\",\n          \"coreOrderWorkflow/picked\",\n          \"coreOrderWorkflow/packed\"\n        ];\n      }\n\n      if (currentShipping.shipped) {\n        currentShipping.workflow.status = \"coreOrderWorkflow/shipped\";\n        currentShipping.workflow.workflow = [\n          \"coreOrderWorkflow/notStarted\",\n          \"coreOrderWorkflow/picked\",\n          \"coreOrderWorkflow/packed\",\n          \"coreOrderWorkflow/labeled\",\n          \"coreOrderWorkflow/shipped\"\n        ];\n      }\n\n      if (currentShipping.delivered) {\n        currentShipping.workflow.status = \"coreOrderWorkflow/delivered\";\n        currentShipping.workflow.workflow = [\n          \"coreOrderWorkflow/notStarted\",\n          \"coreOrderWorkflow/picked\",\n          \"coreOrderWorkflow/packed\",\n          \"coreOrderWorkflow/labeled\",\n          \"coreOrderWorkflow/shipped\",\n          \"coreOrderWorkflow/delivered\"\n        ];\n      }\n\n      // If none of the 3 v1.0 states is true, set as unstarted.\n      // Note: In case of customized workflow status, modify here to capture the added status(es) before running the migration\n      currentShipping.workflow.status = \"new\";\n      currentShipping.workflow.workflow = [\"coreOrderWorkflow/notStarted\"];\n\n      delete currentShipping.packed;\n      delete currentShipping.shipped;\n      delete currentShipping.delivered;\n\n      Orders.update({ _id: order._id }, {\n        $set: { \"shipping.0\": currentShipping }\n      }, { bypassCollection2: true });\n    });\n  },\n  down() {\n    Orders.find().forEach((order) => {\n      const currentShipping = order.shipping[0];\n      const { workflow } = currentShipping;\n\n      currentShipping.packed = false;\n      currentShipping.shipped = false;\n      currentShipping.delivered = false;\n\n      if (workflow && workflow.status === \"coreOrderWorkflow/packed\") {\n        currentShipping.packed = true;\n      }\n\n      if (workflow && workflow.status === \"coreOrderWorkflow/shipped\") {\n        currentShipping.shipped = true;\n      }\n\n      if (workflow && workflow.status === \"coreOrderWorkflow/delivered\") {\n        currentShipping.delivered = true;\n      }\n\n      delete currentShipping.workflow.workflow;\n\n      Orders.update({ _id: order._id }, {\n        $set: { \"shipping.0\": currentShipping }\n      }, { bypassCollection2: true });\n    });\n  }\n});\n\n"]},"sourceType":"script","hash":"4f2d0ea0a0ef05b6baac44633210efa4e3e5d1fc"}
