{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-stripe/server/methods/stripe-connect.js","filename":"imports/plugins/included/payments-stripe/server/methods/stripe-connect.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-stripe/server/methods/stripe-connect.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/payments-stripe/server/methods/stripe-connect.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-stripe/server/methods/stripe-connect.js"}},"code":"module.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.watch(require(\"meteor/http\"), {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Reaction, Logger;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 3);\nlet Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 4);\nconst methods = {\n  // separate url into params\n  // save params into sellerShop collection\n  \"stripe/connect/authorizeMerchant\"(shopId, authCode) {\n    check(shopId, String);\n    check(authCode, String);\n\n    if (!Reaction.hasPermission([\"owner\", \"admin\", \"reaction-stripe\"], Meteor.userId(), shopId)) {\n      Logger.warn(`user: ${Meteor.userId()} attempted to authorize merchant account\n        for shopId ${shopId} but was denied access due to insufficient privileges.`);\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    let result;\n    const primaryShopId = Reaction.getPrimaryShopId();\n    const stripePkg = Reaction.getPackageSettingsWithOptions({\n      shopId: primaryShopId,\n      name: \"reaction-stripe\"\n    });\n\n    if (!stripePkg || !stripePkg.settings || !stripePkg.settings.api_key) {\n      throw new Meteor.Error(\"invalid-parameters\", \"Cannot authorize stripe connect merchant. Primary shop stripe must be configured.\");\n    }\n\n    const merchantStripePkg = Reaction.getPackageSettingsWithOptions({\n      shopId,\n      name: \"reaction-stripe\"\n    });\n\n    if (merchantStripePkg && merchantStripePkg.settings && merchantStripePkg.settings.connectAuth && typeof merchantStripePkg.settings.connectAuth.stripe_user_id === \"string\") {\n      return true;\n    }\n\n    const apiKey = stripePkg.settings.api_key;\n    const stripeAuthUrl = \"https://connect.stripe.com/oauth/token\";\n\n    try {\n      result = HTTP.call(\"POST\", stripeAuthUrl, {\n        params: {\n          client_secret: apiKey,\n          // eslint-disable-line camelcase\n          code: authCode,\n          grant_type: \"authorization_code\" // eslint-disable-line camelcase\n\n        }\n      });\n\n      if (result.error) {\n        throw new Meteor.Error(\"There was a problem authorizing stripe connect\", result.error, result.error_description);\n      }\n\n      if (result && result.data) {\n        // Setup connectAuth settings for this merchant\n        Packages.update({\n          _id: merchantStripePkg._id\n        }, {\n          $set: {\n            \"settings.connectAuth\": result.data\n          }\n        });\n      }\n    } catch (error) {\n      Logger.error(error);\n      result = {\n        error\n      };\n    }\n\n    return result;\n  }\n\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/included/payments-stripe/server/methods/stripe-connect.js"],"names":["module","export","methods","Meteor","watch","require","v","HTTP","check","Reaction","Logger","Packages","shopId","authCode","String","hasPermission","userId","warn","Error","result","primaryShopId","getPrimaryShopId","stripePkg","getPackageSettingsWithOptions","name","settings","api_key","merchantStripePkg","connectAuth","stripe_user_id","apiKey","stripeAuthUrl","call","params","client_secret","code","grant_type","error","error_description","data","update","_id","$set"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { HTTP } from \"meteor/http\";\nimport { check } from \"meteor/check\";\nimport { Reaction, Logger } from \"/server/api\";\nimport { Packages } from \"/lib/collections\";\n\nexport const methods = {\n  // separate url into params\n  // save params into sellerShop collection\n  \"stripe/connect/authorizeMerchant\"(shopId, authCode) {\n    check(shopId, String);\n    check(authCode, String);\n\n    if (!Reaction.hasPermission([\"owner\", \"admin\", \"reaction-stripe\"], Meteor.userId(), shopId)) {\n      Logger.warn(`user: ${Meteor.userId()} attempted to authorize merchant account\n        for shopId ${shopId} but was denied access due to insufficient privileges.`);\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    let result;\n    const primaryShopId = Reaction.getPrimaryShopId();\n    const stripePkg = Reaction.getPackageSettingsWithOptions({\n      shopId: primaryShopId,\n      name: \"reaction-stripe\"\n    });\n\n    if (!stripePkg || !stripePkg.settings || !stripePkg.settings.api_key) {\n      throw new Meteor.Error(\"invalid-parameters\", \"Cannot authorize stripe connect merchant. Primary shop stripe must be configured.\");\n    }\n\n    const merchantStripePkg = Reaction.getPackageSettingsWithOptions({\n      shopId,\n      name: \"reaction-stripe\"\n    });\n\n    if (merchantStripePkg &&\n        merchantStripePkg.settings &&\n        merchantStripePkg.settings.connectAuth &&\n        typeof merchantStripePkg.settings.connectAuth.stripe_user_id === \"string\") {\n      return true;\n    }\n\n\n    const apiKey = stripePkg.settings.api_key;\n    const stripeAuthUrl = \"https://connect.stripe.com/oauth/token\";\n    try {\n      result = HTTP.call(\"POST\", stripeAuthUrl, {\n        params: {\n          client_secret: apiKey, // eslint-disable-line camelcase\n          code: authCode,\n          grant_type: \"authorization_code\" // eslint-disable-line camelcase\n        }\n      });\n\n      if (result.error) {\n        throw new Meteor.Error(\"There was a problem authorizing stripe connect\", result.error, result.error_description);\n      }\n\n      if (result && result.data) {\n        // Setup connectAuth settings for this merchant\n        Packages.update({ _id: merchantStripePkg._id }, {\n          $set: {\n            \"settings.connectAuth\": result.data\n          }\n        });\n      }\n    } catch (error) {\n      Logger.error(error);\n      result = { error };\n    }\n    return result;\n  }\n};\n\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"c270684e1cbc9c3f3130860c74fe3d50a55e2450"}
