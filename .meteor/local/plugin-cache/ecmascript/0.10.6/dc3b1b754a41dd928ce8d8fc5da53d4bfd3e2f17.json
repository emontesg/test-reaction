{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"client/modules/i18n/startup.js","filename":"client/modules/i18n/startup.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"client/modules/i18n/startup.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"client/modules/i18n/startup.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/modules/i18n/startup.js"}},"code":"var i18nextBrowserLanguageDetector;\nmodule.watch(require(\"i18next-browser-languagedetector\"), {\n  \"default\": function (v) {\n    i18nextBrowserLanguageDetector = v;\n  }\n}, 0);\nvar i18nextLocalStorageCache;\nmodule.watch(require(\"i18next-localstorage-cache\"), {\n  \"default\": function (v) {\n    i18nextLocalStorageCache = v;\n  }\n}, 1);\nvar i18nextSprintfPostProcessor;\nmodule.watch(require(\"i18next-sprintf-postprocessor\"), {\n  \"default\": function (v) {\n    i18nextSprintfPostProcessor = v;\n  }\n}, 2);\nvar i18nextJquery;\nmodule.watch(require(\"jquery-i18next\"), {\n  \"default\": function (v) {\n    i18nextJquery = v;\n  }\n}, 3);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 4);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 5);\nvar $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 6);\nvar Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 7);\nvar ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 8);\nvar SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 9);\nvar Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 10);\nvar Shops, Translations, Packages;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Shops: function (v) {\n    Shops = v;\n  },\n  Translations: function (v) {\n    Translations = v;\n  },\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 11);\nvar Schemas;\nmodule.watch(require(\"@reactioncommerce/schemas\"), {\n  \"default\": function (v) {\n    Schemas = v;\n  }\n}, 12);\nvar i18next, getLabelsFor, getValidationErrorMessages, i18nextDep, currencyDep;\nmodule.watch(require(\"./main\"), {\n  \"default\": function (v) {\n    i18next = v;\n  },\n  getLabelsFor: function (v) {\n    getLabelsFor = v;\n  },\n  getValidationErrorMessages: function (v) {\n    getValidationErrorMessages = v;\n  },\n  i18nextDep: function (v) {\n    i18nextDep = v;\n  },\n  currencyDep: function (v) {\n    currencyDep = v;\n  }\n}, 13);\nvar mergeDeep;\nmodule.watch(require(\"../../../lib/api\"), {\n  mergeDeep: function (v) {\n    mergeDeep = v;\n  }\n}, 14);\n\n/**\n * Every schema that feature an expireMonth and an expireYear\n * field will be validated against the dateBeforeNow rule.\n */\nSimpleSchema.addValidator(function () {\n  var expireMonth;\n  var expireYear;\n  var sibling;\n\n  if (this.key === \"expireMonth\") {\n    sibling = \"expireYear\";\n    expireMonth = this.value;\n    expireYear = this.field(sibling).value;\n  }\n\n  if (this.key === \"expireYear\") {\n    sibling = \"expireMonth\";\n    expireMonth = this.field(sibling).value;\n    expireYear = this.value;\n  }\n\n  if (expireYear && expireMonth) {\n    var now = new Date();\n    var expire = new Date(expireYear, expireMonth);\n\n    if (now > expire) {\n      return \"dateBeforeNow\";\n    } // Remove error message from the other field as well.\n\n\n    var validationErrors = this.validationContext && this.validationContext._validationErrors;\n    var deps = this.validationContext && this.validationContext._deps;\n\n    if (validationErrors) {\n      var index = validationErrors.findIndex(function (error) {\n        return error.name === sibling && error.type === \"dateBeforeNow\";\n      });\n\n      if (index !== -1) {\n        validationErrors.splice(index, 1);\n        if (deps) deps[sibling].changed();\n      }\n    }\n  }\n});\n/**\n * Error messages that are used for all SimpleSchema instances\n * ATM, validation errors are not translated in Reaction in general.\n */\n\nSimpleSchema.setDefaultMessages({\n  messages: {\n    en: {\n      dateBeforeNow: \"Dates in the past are not allowed.\"\n    }\n  }\n}); // setup options for i18nextBrowserLanguageDetector\n// note: this isn't fully operational yet\n// language is set by user currently\n// progress toward detecting language\n// should focus around i18nextBrowserLanguageDetector\n//\n\nvar options = {\n  // order and from where user language should be detected\n  order: [\"querystring\", \"cookie\", \"localStorage\", \"navigator\", \"htmlTag\"],\n  // keys or params to lookup language from\n  lookupQuerystring: \"lng\",\n  lookupCookie: \"i18next\",\n  lookupLocalStorage: \"i18nextLng\",\n  // cache user language on\n  caches: [\"localStorage\", \"cookie\"],\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement\n};\nvar userProfileLanguage = new ReactiveVar(null);\nMeteor.startup(function () {\n  // We need to ensure fine-grained reactivity on only the profile.lang because\n  // user.profile changed frequently and causes excessive reruns\n  Tracker.autorun(function () {\n    var userId = Meteor.userId();\n    var user = userId && Meteor.users.findOne(userId, {\n      fields: {\n        profile: 1\n      }\n    });\n    userProfileLanguage.set(user && user.profile && user.profile.lang || null);\n  }); // use tracker autorun to detect language changes\n  // this only runs on initial page loaded\n  // and when user.profile.lang updates\n\n  Tracker.autorun(function () {\n    if (!Reaction.Subscriptions.PrimaryShop.ready() || !Reaction.Subscriptions.MerchantShops.ready()) return; // Depend on user.profile.language reactively\n\n    var userLanguage = userProfileLanguage.get(); // Choose shop to get language from\n\n    var shopId;\n\n    if (Reaction.marketplaceEnabled && Reaction.merchantLanguage) {\n      shopId = Reaction.getShopId();\n    } else {\n      shopId = Reaction.getPrimaryShopId();\n    } // By specifying \"fields\", we limit reruns to only when that field changes\n\n\n    var shop = Shops.findOne({\n      _id: shopId\n    }, {\n      fields: {\n        language: 1\n      },\n      reactive: false\n    });\n    var shopLanguage = shop && shop.language || null; // Use fallbacks to determine the final language\n\n    var language = userLanguage || shopLanguage || \"en\"; //\n    // subscribe to user + shop Translations\n    //\n\n    return Meteor.subscribe(\"Translations\", language, function () {\n      // Get the list of packages for that shop\n      var packageNamespaces = Packages.find({\n        shopId: shopId\n      }, {\n        fields: {\n          name: 1\n        }\n      }).map(function (pkg) {\n        return pkg.name;\n      }); //\n      // reduce and merge translations\n      // into i18next resource format\n      //\n\n      var resources = {};\n      Translations.find({}).forEach(function (translation) {\n        var _mergeDeep;\n\n        resources = mergeDeep(resources, (_mergeDeep = {}, _mergeDeep[translation.i18n] = translation.translation, _mergeDeep));\n      }); //\n      // initialize i18next\n      //\n\n      i18next.use(i18nextBrowserLanguageDetector).use(i18nextLocalStorageCache).use(i18nextSprintfPostProcessor).init({\n        detection: options,\n        debug: false,\n        ns: packageNamespaces,\n        // translation namespace for every package\n        defaultNS: \"core\",\n        // reaction \"core\" is the default namespace\n        fallbackNS: packageNamespaces,\n        lng: language,\n        fallbackLng: shopLanguage,\n        resources: resources\n      }, function () {\n        // Loop through registered Schemas to change labels and messages\n        for (var schemaName in meteorBabelHelpers.sanitizeForInObject(Schemas)) {\n          if ({}.hasOwnProperty.call(Schemas, schemaName)) {\n            var _schemaInstance$messa;\n\n            var schemaInstance = Schemas[schemaName];\n            schemaInstance.labels(getLabelsFor(schemaInstance, schemaName));\n            schemaInstance.messageBox.messages((_schemaInstance$messa = {}, _schemaInstance$messa[language] = getValidationErrorMessages(), _schemaInstance$messa));\n            schemaInstance.messageBox.setLanguage(language);\n          }\n        }\n\n        i18nextDep.changed(); // global first time init event finds and replaces\n        // data-i18n attributes in html/template source.\n\n        $(\"[data-i18n]\").localize(); // apply language direction to html\n\n        if (i18next.dir(language) === \"rtl\") {\n          return $(\"html\").addClass(\"rtl\");\n        }\n\n        return $(\"html\").removeClass(\"rtl\");\n      });\n    }); // return\n  }); // Detect user currency changes.\n  // These two autoruns work together to ensure currencyDep is only considered\n  // to be changed when it should be.\n  // XXX currencyDep is not used by the main app. Maybe can get rid of this\n  // if no add-on packages use it?\n\n  var userCurrency = new ReactiveVar();\n  Tracker.autorun(function () {\n    // We are using the reactive var only to be sure that currencyDep.changed()\n    // is called only when the value is actually changed from the previous value.\n    var currency = userCurrency.get();\n    if (currency) currencyDep.changed();\n  });\n  Tracker.autorun(function () {\n    var user = Meteor.user();\n\n    if (Reaction.Subscriptions.PrimaryShop.ready() && Reaction.Subscriptions.MerchantShops.ready() && user) {\n      userCurrency.set(user.profile && user.profile.currency || undefined);\n    }\n  }); //\n  // init i18nextJquery\n  //\n\n  i18nextJquery.init(i18next, $, {\n    tName: \"t\",\n    // --> appends $.t = i18next.t\n    i18nName: \"i18n\",\n    // --> appends $.i18n = i18next\n    handleName: \"localize\",\n    // --> appends $(selector).localize(opts);\n    selectorAttr: \"data-i18n\",\n    // selector for translating elements\n    targetAttr: \"data-i18n-target\",\n    // element attribute to grab target element to translate (if diffrent then itself)\n    parseDefaultValueFromContent: true // parses default values from content ele.val or ele.text\n\n  }); // global onRendered event finds and replaces\n  // data-i18n attributes in html/template source.\n  // uses methods from i18nextJquery\n\n  Template.onRendered(function () {\n    this.autorun(function () {\n      return function () {\n        i18nextDep.depend();\n        $(\"[data-i18n]\").localize();\n      };\n    }(this));\n  });\n});","map":{"version":3,"sources":["client/modules/i18n/startup.js"],"names":["i18nextBrowserLanguageDetector","module","watch","require","v","i18nextLocalStorageCache","i18nextSprintfPostProcessor","i18nextJquery","Meteor","Template","$","Tracker","ReactiveVar","SimpleSchema","Reaction","Shops","Translations","Packages","Schemas","i18next","getLabelsFor","getValidationErrorMessages","i18nextDep","currencyDep","mergeDeep","addValidator","expireMonth","expireYear","sibling","key","value","field","now","Date","expire","validationErrors","validationContext","_validationErrors","deps","_deps","index","findIndex","error","name","type","splice","changed","setDefaultMessages","messages","en","dateBeforeNow","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","caches","htmlTag","document","documentElement","userProfileLanguage","startup","autorun","userId","user","users","findOne","fields","profile","set","lang","Subscriptions","PrimaryShop","ready","MerchantShops","userLanguage","get","shopId","marketplaceEnabled","merchantLanguage","getShopId","getPrimaryShopId","shop","_id","language","reactive","shopLanguage","subscribe","packageNamespaces","find","map","pkg","resources","forEach","translation","i18n","use","init","detection","debug","ns","defaultNS","fallbackNS","lng","fallbackLng","schemaName","hasOwnProperty","call","schemaInstance","labels","messageBox","setLanguage","localize","dir","addClass","removeClass","userCurrency","currency","undefined","tName","i18nName","handleName","selectorAttr","targetAttr","parseDefaultValueFromContent","onRendered","depend"],"mappings":"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","sourcesContent":["import i18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\nimport i18nextLocalStorageCache from \"i18next-localstorage-cache\";\nimport i18nextSprintfPostProcessor from \"i18next-sprintf-postprocessor\";\nimport i18nextJquery from \"jquery-i18next\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { $ } from \"meteor/jquery\";\nimport { Tracker } from \"meteor/tracker\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport SimpleSchema from \"simpl-schema\";\nimport { Reaction } from \"/client/api\";\nimport { Shops, Translations, Packages } from \"/lib/collections\";\nimport Schemas from \"@reactioncommerce/schemas\";\nimport i18next, { getLabelsFor, getValidationErrorMessages, i18nextDep, currencyDep } from \"./main\";\nimport { mergeDeep } from \"/lib/api\";\n\n/**\n * Every schema that feature an expireMonth and an expireYear\n * field will be validated against the dateBeforeNow rule.\n */\nSimpleSchema.addValidator(function () {\n  let expireMonth;\n  let expireYear;\n  let sibling;\n  if (this.key === \"expireMonth\") {\n    sibling = \"expireYear\";\n    expireMonth = this.value;\n    expireYear = this.field(sibling).value;\n  }\n  if (this.key === \"expireYear\") {\n    sibling = \"expireMonth\";\n    expireMonth = this.field(sibling).value;\n    expireYear = this.value;\n  }\n  if (expireYear && expireMonth) {\n    const now = new Date();\n    const expire = new Date(expireYear, expireMonth);\n    if (now > expire) {\n      return \"dateBeforeNow\";\n    }\n\n    // Remove error message from the other field as well.\n    const validationErrors = this.validationContext && this.validationContext._validationErrors;\n    const deps = this.validationContext && this.validationContext._deps;\n    if (validationErrors) {\n      const index = validationErrors.findIndex((error) => error.name === sibling && error.type === \"dateBeforeNow\");\n      if (index !== -1) {\n        validationErrors.splice(index, 1);\n        if (deps) deps[sibling].changed();\n      }\n    }\n  }\n});\n\n/**\n * Error messages that are used for all SimpleSchema instances\n * ATM, validation errors are not translated in Reaction in general.\n */\nSimpleSchema.setDefaultMessages({\n  messages: {\n    en: {\n      dateBeforeNow: \"Dates in the past are not allowed.\"\n    }\n  }\n});\n\n// setup options for i18nextBrowserLanguageDetector\n// note: this isn't fully operational yet\n// language is set by user currently\n// progress toward detecting language\n// should focus around i18nextBrowserLanguageDetector\n//\nconst options = {\n  // order and from where user language should be detected\n  order: [\"querystring\", \"cookie\", \"localStorage\", \"navigator\", \"htmlTag\"],\n\n  // keys or params to lookup language from\n  lookupQuerystring: \"lng\",\n  lookupCookie: \"i18next\",\n  lookupLocalStorage: \"i18nextLng\",\n\n  // cache user language on\n  caches: [\"localStorage\", \"cookie\"],\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement\n};\n\nconst userProfileLanguage = new ReactiveVar(null);\n\nMeteor.startup(() => {\n  // We need to ensure fine-grained reactivity on only the profile.lang because\n  // user.profile changed frequently and causes excessive reruns\n  Tracker.autorun(() => {\n    const userId = Meteor.userId();\n    const user = userId && Meteor.users.findOne(userId, { fields: { profile: 1 } });\n    userProfileLanguage.set((user && user.profile && user.profile.lang) || null);\n  });\n  // use tracker autorun to detect language changes\n  // this only runs on initial page loaded\n  // and when user.profile.lang updates\n  Tracker.autorun(() => {\n    if (!Reaction.Subscriptions.PrimaryShop.ready() ||\n      !Reaction.Subscriptions.MerchantShops.ready()) return;\n\n    // Depend on user.profile.language reactively\n    const userLanguage = userProfileLanguage.get();\n\n    // Choose shop to get language from\n    let shopId;\n    if (Reaction.marketplaceEnabled && Reaction.merchantLanguage) {\n      shopId = Reaction.getShopId();\n    } else {\n      shopId = Reaction.getPrimaryShopId();\n    }\n    // By specifying \"fields\", we limit reruns to only when that field changes\n    const shop = Shops.findOne({ _id: shopId }, { fields: { language: 1 }, reactive: false });\n    const shopLanguage = (shop && shop.language) || null;\n\n    // Use fallbacks to determine the final language\n    const language = userLanguage || shopLanguage || \"en\";\n\n    //\n    // subscribe to user + shop Translations\n    //\n    return Meteor.subscribe(\"Translations\", language, () => {\n      // Get the list of packages for that shop\n      const packageNamespaces = Packages.find({\n        shopId\n      }, {\n        fields: {\n          name: 1\n        }\n      }).map((pkg) => pkg.name);\n\n      //\n      // reduce and merge translations\n      // into i18next resource format\n      //\n      let resources = {};\n      Translations.find({}).forEach((translation) => {\n        resources = mergeDeep(resources, {\n          [translation.i18n]: translation.translation\n        });\n      });\n\n      //\n      // initialize i18next\n      //\n      i18next\n        .use(i18nextBrowserLanguageDetector)\n        .use(i18nextLocalStorageCache)\n        .use(i18nextSprintfPostProcessor)\n        .init({\n          detection: options,\n          debug: false,\n          ns: packageNamespaces, // translation namespace for every package\n          defaultNS: \"core\", // reaction \"core\" is the default namespace\n          fallbackNS: packageNamespaces,\n          lng: language,\n          fallbackLng: shopLanguage,\n          resources\n        }, () => {\n          // Loop through registered Schemas to change labels and messages\n          for (const schemaName in Schemas) {\n            if ({}.hasOwnProperty.call(Schemas, schemaName)) {\n              const schemaInstance = Schemas[schemaName];\n              schemaInstance.labels(getLabelsFor(schemaInstance, schemaName));\n              schemaInstance.messageBox.messages({\n                [language]: getValidationErrorMessages()\n              });\n              schemaInstance.messageBox.setLanguage(language);\n            }\n          }\n\n          i18nextDep.changed();\n\n          // global first time init event finds and replaces\n          // data-i18n attributes in html/template source.\n          $(\"[data-i18n]\").localize();\n\n          // apply language direction to html\n          if (i18next.dir(language) === \"rtl\") {\n            return $(\"html\").addClass(\"rtl\");\n          }\n          return $(\"html\").removeClass(\"rtl\");\n        });\n    }); // return\n  });\n\n  // Detect user currency changes.\n  // These two autoruns work together to ensure currencyDep is only considered\n  // to be changed when it should be.\n  // XXX currencyDep is not used by the main app. Maybe can get rid of this\n  // if no add-on packages use it?\n  const userCurrency = new ReactiveVar();\n  Tracker.autorun(() => {\n    // We are using the reactive var only to be sure that currencyDep.changed()\n    // is called only when the value is actually changed from the previous value.\n    const currency = userCurrency.get();\n    if (currency) currencyDep.changed();\n  });\n  Tracker.autorun(() => {\n    const user = Meteor.user();\n    if (Reaction.Subscriptions.PrimaryShop.ready() &&\n        Reaction.Subscriptions.MerchantShops.ready() &&\n        user) {\n      userCurrency.set((user.profile && user.profile.currency) || undefined);\n    }\n  });\n\n  //\n  // init i18nextJquery\n  //\n  i18nextJquery.init(i18next, $, {\n    tName: \"t\", // --> appends $.t = i18next.t\n    i18nName: \"i18n\", // --> appends $.i18n = i18next\n    handleName: \"localize\", // --> appends $(selector).localize(opts);\n    selectorAttr: \"data-i18n\", // selector for translating elements\n    targetAttr: \"data-i18n-target\", // element attribute to grab target element to translate (if diffrent then itself)\n    parseDefaultValueFromContent: true // parses default values from content ele.val or ele.text\n  });\n\n  // global onRendered event finds and replaces\n  // data-i18n attributes in html/template source.\n  // uses methods from i18nextJquery\n  Template.onRendered(function () {\n    this.autorun((function () {\n      return function () {\n        i18nextDep.depend();\n        $(\"[data-i18n]\").localize();\n      };\n    })(this));\n  });\n});\n"]},"sourceType":"script","hash":"dc3b1b754a41dd928ce8d8fc5da53d4bfd3e2f17"}
