{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/orders.js","filename":"imports/plugins/included/connectors-shopify/server/methods/sync/orders.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/orders.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/connectors-shopify/server/methods/sync/orders.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/orders.js"}},"code":"const module1 = module;\nmodule1.export({\n  methods: () => methods\n});\nlet check;\nmodule1.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet Hooks;\nmodule1.watch(require(\"/server/api\"), {\n  Hooks(v) {\n    Hooks = v;\n  }\n\n}, 1);\nlet Products;\nmodule1.watch(require(\"/lib/collections\"), {\n  Products(v) {\n    Products = v;\n  }\n\n}, 2);\n\n/**\n * @file Methods for syncing Shopify orders\n *       contains methods and helpers for synchronization of orders between a Shopify store and a Reaction shop\n * @module connectors-shopify\n */\n\n/**\n * Given a list of variants in an ancestor chain, finds the bottommost variant\n * @private\n * @method findBottomVariant\n * @param  {array} variants Array of variant objects\n * @return {object} Bottommost variant object\n */\nfunction findBottomVariant(variants) {\n  return variants.reduce((bottomVariant, variant) => {\n    if (!bottomVariant.ancestors || !Array.isArray(bottomVariant.ancestors)) {\n      return variant;\n    }\n\n    if (Array.isArray(variant.ancestors)) {\n      if (variant.ancestors.length > bottomVariant.ancestors.length) {\n        return variant;\n      }\n    }\n\n    return bottomVariant;\n  });\n}\n\nconst methods = {\n  /**\n   * Given an array of line items from a Shopify order, this method updates the inventory quantity for all variants\n   * in the Reaction store which have a matching shopifyId to the line items in the order\n   * @method connectors/shopify/sync/orders/created\n   * @param {object} lineItems array of line items from a Shopify order\n   * @returns {undefined}\n   */\n  adjustInventory: lineItems => {\n    check(lineItems, [Object]);\n    lineItems.forEach(lineItem => {\n      const variantsWithShopifyId = Products.find({\n        shopifyId: lineItem.variant_id\n      }).fetch(); // iterate through the variants that match this shopifyId\n      // return the one with the longest list of ancestors\n\n      const variant = findBottomVariant(variantsWithShopifyId); // adjust inventory for variant and push an event into the eventLog\n\n      Products.update({\n        _id: variant._id\n      }, {\n        $inc: {\n          inventoryQuantity: lineItem.quantity * -1\n        },\n        $push: {\n          eventLog: {\n            title: \"Product inventory updated by Shopify webhook\",\n            type: \"update-webhook\",\n            description: `Shopify order created which caused inventory to be reduced by ${lineItem.quantity}`,\n            createdAt: new Date()\n          }\n        }\n      }, {\n        selector: {\n          type: \"variant\"\n        },\n        publish: true\n      });\n      Hooks.Events.run(\"afterUpdateCatalogProduct\", variant);\n    });\n  }\n};","map":{"version":3,"sources":["imports/plugins/included/connectors-shopify/server/methods/sync/orders.js"],"names":["module1","module","export","methods","check","watch","require","v","Hooks","Products","findBottomVariant","variants","reduce","bottomVariant","variant","ancestors","Array","isArray","length","adjustInventory","lineItems","Object","forEach","lineItem","variantsWithShopifyId","find","shopifyId","variant_id","fetch","update","_id","$inc","inventoryQuantity","quantity","$push","eventLog","title","type","description","createdAt","Date","selector","publish","Events","run"],"mappings":"AAAA,MAAMA,UAAQC,MAAd;AAAqBD,QAAQE,MAAR,CAAe;AAACC,WAAQ,MAAIA;AAAb,CAAf;AAAsC,IAAIC,KAAJ;AAAUJ,QAAQK,KAAR,CAAcC,QAAQ,cAAR,CAAd,EAAsC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAAtC,EAA0D,CAA1D;AAA6D,IAAIC,KAAJ;AAAUR,QAAQK,KAAR,CAAcC,QAAQ,aAAR,CAAd,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,QAAJ;AAAaT,QAAQK,KAAR,CAAcC,QAAQ,kBAAR,CAAd,EAA0C;AAACG,WAASF,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW;;AAAxB,CAA1C,EAAoE,CAApE;;AAIrN;;;;;;AAMA;;;;;;;AAOA,SAASG,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAOA,SAASC,MAAT,CAAgB,CAACC,aAAD,EAAgBC,OAAhB,KAA4B;AACjD,QAAI,CAACD,cAAcE,SAAf,IAA4B,CAACC,MAAMC,OAAN,CAAcJ,cAAcE,SAA5B,CAAjC,EAAyE;AACvE,aAAOD,OAAP;AACD;;AACD,QAAIE,MAAMC,OAAN,CAAcH,QAAQC,SAAtB,CAAJ,EAAsC;AACpC,UAAID,QAAQC,SAAR,CAAkBG,MAAlB,GAA2BL,cAAcE,SAAd,CAAwBG,MAAvD,EAA+D;AAC7D,eAAOJ,OAAP;AACD;AACF;;AACD,WAAOD,aAAP;AACD,GAVM,CAAP;AAWD;;AAEM,MAAMV,UAAU;AACrB;;;;;;;AAOAgB,mBAAkBC,SAAD,IAAe;AAC9BhB,UAAMgB,SAAN,EAAiB,CAACC,MAAD,CAAjB;AAEAD,cAAUE,OAAV,CAAmBC,QAAD,IAAc;AAC9B,YAAMC,wBAAwBf,SAASgB,IAAT,CAAc;AAAEC,mBAAWH,SAASI;AAAtB,OAAd,EAAkDC,KAAlD,EAA9B,CAD8B,CAG9B;AACA;;AACA,YAAMd,UAAUJ,kBAAkBc,qBAAlB,CAAhB,CAL8B,CAO9B;;AACAf,eAASoB,MAAT,CAAgB;AACdC,aAAKhB,QAAQgB;AADC,OAAhB,EAEG;AACDC,cAAM;AAAEC,6BAAoBT,SAASU,QAAT,GAAoB,CAAC;AAA3C,SADL;AAEDC,eAAO;AACLC,oBAAU;AACRC,mBAAO,8CADC;AAERC,kBAAM,gBAFE;AAGRC,yBAAc,iEAAgEf,SAASU,QAAS,EAHxF;AAIRM,uBAAW,IAAIC,IAAJ;AAJH;AADL;AAFN,OAFH,EAYG;AAAEC,kBAAU;AAAEJ,gBAAM;AAAR,SAAZ;AAAiCK,iBAAS;AAA1C,OAZH;AAaAlC,YAAMmC,MAAN,CAAaC,GAAb,CAAiB,2BAAjB,EAA8C9B,OAA9C;AACD,KAtBD;AAuBD;AAlCoB,CAAhB","sourcesContent":["import { check } from \"meteor/check\";\nimport { Hooks } from \"/server/api\";\nimport { Products } from \"/lib/collections\";\n\n/**\n * @file Methods for syncing Shopify orders\n *       contains methods and helpers for synchronization of orders between a Shopify store and a Reaction shop\n * @module connectors-shopify\n */\n\n/**\n * Given a list of variants in an ancestor chain, finds the bottommost variant\n * @private\n * @method findBottomVariant\n * @param  {array} variants Array of variant objects\n * @return {object} Bottommost variant object\n */\nfunction findBottomVariant(variants) {\n  return variants.reduce((bottomVariant, variant) => {\n    if (!bottomVariant.ancestors || !Array.isArray(bottomVariant.ancestors)) {\n      return variant;\n    }\n    if (Array.isArray(variant.ancestors)) {\n      if (variant.ancestors.length > bottomVariant.ancestors.length) {\n        return variant;\n      }\n    }\n    return bottomVariant;\n  });\n}\n\nexport const methods = {\n  /**\n   * Given an array of line items from a Shopify order, this method updates the inventory quantity for all variants\n   * in the Reaction store which have a matching shopifyId to the line items in the order\n   * @method connectors/shopify/sync/orders/created\n   * @param {object} lineItems array of line items from a Shopify order\n   * @returns {undefined}\n   */\n  adjustInventory: (lineItems) => {\n    check(lineItems, [Object]);\n\n    lineItems.forEach((lineItem) => {\n      const variantsWithShopifyId = Products.find({ shopifyId: lineItem.variant_id }).fetch();\n\n      // iterate through the variants that match this shopifyId\n      // return the one with the longest list of ancestors\n      const variant = findBottomVariant(variantsWithShopifyId);\n\n      // adjust inventory for variant and push an event into the eventLog\n      Products.update({\n        _id: variant._id\n      }, {\n        $inc: { inventoryQuantity: (lineItem.quantity * -1) },\n        $push: {\n          eventLog: {\n            title: \"Product inventory updated by Shopify webhook\",\n            type: \"update-webhook\",\n            description: `Shopify order created which caused inventory to be reduced by ${lineItem.quantity}`,\n            createdAt: new Date()\n          }\n        }\n      }, { selector: { type: \"variant\" }, publish: true });\n      Hooks.Events.run(\"afterUpdateCatalogProduct\", variant);\n    });\n  }\n};\n"]},"sourceType":"script","hash":"62ad89a5375ccc9acb7535d415e9a0090b00bbcd"}
