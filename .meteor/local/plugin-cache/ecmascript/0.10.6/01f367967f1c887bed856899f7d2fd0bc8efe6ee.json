{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui/client/containers/avatar.js","filename":"imports/plugins/core/ui/client/containers/avatar.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui/client/containers/avatar.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui/client/containers/avatar.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui/client/containers/avatar.js"}},"code":"var registerComponent, composeWithTracker;\nmodule.watch(require(\"../../../components/lib\"), {\n  registerComponent: function (v) {\n    registerComponent = v;\n  },\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Accounts;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 2);\nvar Reaction;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 3);\nvar ReactionAvatar;\nmodule.watch(require(\"../components/avatar\"), {\n  ReactionAvatar: function (v) {\n    ReactionAvatar = v;\n  }\n}, 4);\n\nvar composer = function (props, onData) {\n  var targetUserId = Reaction.Router.getQueryParam(\"userId\");\n  var account = Accounts.findOne(targetUserId);\n  var email; // If an email is provided via props, use that email\n\n  if (props.email) {\n    email = props.email;\n  } // If there is no email provided, no query param provide, and the avatar is for the current user, find their account\n\n\n  if (!email && !account && props.currentUser) {\n    account = Accounts.findOne(Meteor.userId());\n  } // If we now have an account, and that account has an email address, return it\n\n\n  if (account && Array.isArray(account.emails)) {\n    var defaultEmail = account.emails.find(function (emailObj) {\n      return emailObj.provides === \"default\";\n    });\n    email = defaultEmail && defaultEmail.address || account.emails[0].address;\n  }\n\n  onData(null, {\n    email: email\n  });\n};\n\nregisterComponent(\"ReactionAvatar\", ReactionAvatar, composeWithTracker(composer));\nmodule.exportDefault(composeWithTracker(composer)(ReactionAvatar));","map":{"version":3,"sources":["imports/plugins/core/ui/client/containers/avatar.js"],"names":["registerComponent","composeWithTracker","module","watch","require","v","Meteor","Accounts","Reaction","ReactionAvatar","composer","props","onData","targetUserId","Router","getQueryParam","account","findOne","email","currentUser","userId","Array","isArray","emails","defaultEmail","find","emailObj","provides","address","exportDefault"],"mappings":"AAAA,IAAIA,iBAAJ,EAAsBC,kBAAtB;AAAyCC,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACJ,mBAAD,YAAmBK,CAAnB,EAAqB;AAACL,wBAAkBK,CAAlB;AAAoB,GAA1C;AAA2CJ,oBAA3C,YAA8DI,CAA9D,EAAgE;AAACJ,yBAAmBI,CAAnB;AAAqB;AAAtF,CAAhD,EAAwI,CAAxI;AAA2I,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,QAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,mCAAR,CAAb,EAA0D;AAACG,UAAD,YAAUF,CAAV,EAAY;AAACE,eAASF,CAAT;AAAW;AAAxB,CAA1D,EAAoF,CAApF;AAAuF,IAAIG,QAAJ;AAAaN,OAAOC,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAACI,UAAD,YAAUH,CAAV,EAAY;AAACG,eAASH,CAAT;AAAW;AAAxB,CAArD,EAA+E,CAA/E;AAAkF,IAAII,cAAJ;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACK,gBAAD,YAAgBJ,CAAhB,EAAkB;AAACI,qBAAeJ,CAAf;AAAiB;AAApC,CAA7C,EAAmF,CAAnF;;AAMpd,IAAMK,WAAW,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAClC,MAAMC,eAAeL,SAASM,MAAT,CAAgBC,aAAhB,CAA8B,QAA9B,CAArB;AACA,MAAIC,UAAUT,SAASU,OAAT,CAAiBJ,YAAjB,CAAd;AACA,MAAIK,KAAJ,CAHkC,CAKlC;;AACA,MAAIP,MAAMO,KAAV,EAAiB;AACZA,SADY,GACFP,KADE,CACZO,KADY;AAEhB,GARiC,CAUlC;;;AACA,MAAI,CAACA,KAAD,IAAU,CAACF,OAAX,IAAsBL,MAAMQ,WAAhC,EAA6C;AAC3CH,cAAUT,SAASU,OAAT,CAAiBX,OAAOc,MAAP,EAAjB,CAAV;AACD,GAbiC,CAelC;;;AACA,MAAIJ,WAAWK,MAAMC,OAAN,CAAcN,QAAQO,MAAtB,CAAf,EAA8C;AAC5C,QAAMC,eAAeR,QAAQO,MAAR,CAAeE,IAAf,CAAoB,UAACC,QAAD;AAAA,aAAcA,SAASC,QAAT,KAAsB,SAApC;AAAA,KAApB,CAArB;AACAT,YAASM,gBAAgBA,aAAaI,OAA9B,IAA0CZ,QAAQO,MAAR,CAAe,CAAf,EAAkBK,OAApE;AACD;;AACDhB,SAAO,IAAP,EAAa;AAAEM;AAAF,GAAb;AACD,CArBD;;AAuBAlB,kBAAkB,gBAAlB,EAAoCS,cAApC,EAAoDR,mBAAmBS,QAAnB,CAApD;AA7BAR,OAAO2B,aAAP,CA+Be5B,mBAAmBS,QAAnB,EAA6BD,cAA7B,CA/Bf","sourcesContent":["import { registerComponent, composeWithTracker } from \"@reactioncommerce/reaction-components\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Accounts } from \"/lib/collections\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionAvatar } from \"../components/avatar\";\n\nconst composer = (props, onData) => {\n  const targetUserId = Reaction.Router.getQueryParam(\"userId\");\n  let account = Accounts.findOne(targetUserId);\n  let email;\n\n  // If an email is provided via props, use that email\n  if (props.email) {\n    ({ email } = props);\n  }\n\n  // If there is no email provided, no query param provide, and the avatar is for the current user, find their account\n  if (!email && !account && props.currentUser) {\n    account = Accounts.findOne(Meteor.userId());\n  }\n\n  // If we now have an account, and that account has an email address, return it\n  if (account && Array.isArray(account.emails)) {\n    const defaultEmail = account.emails.find((emailObj) => emailObj.provides === \"default\");\n    email = (defaultEmail && defaultEmail.address) || account.emails[0].address;\n  }\n  onData(null, { email });\n};\n\nregisterComponent(\"ReactionAvatar\", ReactionAvatar, composeWithTracker(composer));\n\nexport default composeWithTracker(composer)(ReactionAvatar);\n"]},"sourceType":"script","hash":"01f367967f1c887bed856899f7d2fd0bc8efe6ee"}
