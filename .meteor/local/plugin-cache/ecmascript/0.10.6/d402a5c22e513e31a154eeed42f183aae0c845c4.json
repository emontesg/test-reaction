{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/orders/client/containers/invoiceContainer.js","filename":"imports/plugins/core/orders/client/containers/invoiceContainer.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/orders/client/containers/invoiceContainer.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/orders/client/containers/invoiceContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/orders/client/containers/invoiceContainer.js"}},"code":"var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _sumBy;\n\nmodule.watch(require(\"lodash/sumBy\"), {\n  \"default\": function (v) {\n    _sumBy = v;\n  }\n}, 0);\n\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 1);\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 2);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 3);\nvar accounting;\nmodule.watch(require(\"accounting-js\"), {\n  \"default\": function (v) {\n    accounting = v;\n  }\n}, 4);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 5);\nvar i18next, Logger, Reaction, formatPriceString;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  i18next: function (v) {\n    i18next = v;\n  },\n  Logger: function (v) {\n    Logger = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  formatPriceString: function (v) {\n    formatPriceString = v;\n  }\n}, 6);\nvar Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 7);\nvar getPrimaryMediaForOrderItem;\nmodule.watch(require(\"../../../../../../lib/api\"), {\n  getPrimaryMediaForOrderItem: function (v) {\n    getPrimaryMediaForOrderItem = v;\n  }\n}, 8);\nvar composeWithTracker, registerComponent;\nmodule.watch(require(\"../../../components/lib\"), {\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  },\n  registerComponent: function (v) {\n    registerComponent = v;\n  }\n}, 9);\nvar Invoice;\nmodule.watch(require(\"../components/invoice.js\"), {\n  \"default\": function (v) {\n    Invoice = v;\n  }\n}, 10);\nvar getOrderRiskStatus, getOrderRiskBadge, getBillingInfo;\nmodule.watch(require(\"../helpers\"), {\n  getOrderRiskStatus: function (v) {\n    getOrderRiskStatus = v;\n  },\n  getOrderRiskBadge: function (v) {\n    getOrderRiskBadge = v;\n  },\n  getBillingInfo: function (v) {\n    getBillingInfo = v;\n  }\n}, 11);\n\nvar InvoiceContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(InvoiceContainer, _Component);\n\n  function InvoiceContainer(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.handlePopOverOpen = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        popOverIsOpen: true\n      });\n    };\n\n    _this.handleClearRefunds = function () {\n      _this.setState({\n        editedItems: [],\n        selectedItems: [],\n        selectAllItems: false,\n        popOverIsOpen: false\n      });\n    };\n\n    _this.handleItemSelect = function (lineItem) {\n      var _this$state = _this.state,\n          selectedItems = _this$state.selectedItems,\n          editedItems = _this$state.editedItems; // if item is not in the selectedItems array\n\n      if (!selectedItems.includes(lineItem._id)) {\n        // include it in the array\n        selectedItems.push(lineItem._id); // Add every quantity in the row to be refunded\n\n        var isEdited = editedItems.find(function (item) {\n          return item.id === lineItem._id;\n        });\n        var adjustedQuantity = lineItem.quantity - _this.state.value;\n\n        if (isEdited) {\n          editedItems = editedItems.filter(function (item) {\n            return item.id !== lineItem._id;\n          });\n          isEdited.refundedTotal = lineItem.variants.price * adjustedQuantity;\n          isEdited.refundedQuantity = adjustedQuantity;\n          editedItems.push(isEdited);\n        } else {\n          editedItems.push({\n            id: lineItem._id,\n            title: lineItem.title,\n            refundedTotal: lineItem.variants.price * lineItem.quantity,\n            refundedQuantity: lineItem.quantity\n          });\n        }\n\n        _this.setState({\n          editedItems: editedItems,\n          selectedItems: selectedItems,\n          isUpdating: true,\n          selectAllItems: false\n        });\n      } else {\n        // remove item from selected items\n        selectedItems = selectedItems.filter(function (id) {\n          return id !== lineItem._id;\n        }); // remove item from edited quantities\n\n        editedItems = editedItems.filter(function (item) {\n          return item.id !== lineItem._id;\n        });\n\n        _this.setState({\n          editedItems: editedItems,\n          selectedItems: selectedItems,\n          isUpdating: true,\n          selectAllItems: false\n        });\n      }\n    };\n\n    _this.handleSelectAllItems = function (uniqueItems) {\n      if (_this.state.selectAllItems) {\n        // if all items are selected, clear the selectedItems array\n        // and set selectAllItems to false\n        _this.setState({\n          selectedItems: [],\n          editedItems: [],\n          selectAllItems: false\n        });\n      } else {\n        // if there are no selected items, or if there are some items that have been\n        // selected but not all of them, loop through the items array and return a\n        // new array with item ids only, then set the selectedItems array with the itemIds\n        var updateEditedItems = [];\n        var itemIds = uniqueItems.map(function (item) {\n          // on select all refunded quantity should be all existing items\n          updateEditedItems.push({\n            id: item._id,\n            title: item.title,\n            refundedTotal: item.variants.price * item.quantity,\n            refundedQuantity: item.quantity\n          });\n          return item._id;\n        });\n\n        _this.setState({\n          editedItems: updateEditedItems,\n          selectedItems: itemIds,\n          selectAllItems: true,\n          isUpdating: true\n        });\n      }\n    };\n\n    _this.handleInputChange = function (event, value, lineItem) {\n      var editedItems = _this.state.editedItems;\n      var isEdited = editedItems.find(function (item) {\n        return item.id === lineItem._id;\n      });\n      var refundedQuantity = lineItem.quantity - value;\n\n      if (isEdited) {\n        editedItems = editedItems.filter(function (item) {\n          return item.id !== lineItem._id;\n        });\n        isEdited.refundedTotal = lineItem.variants.price * refundedQuantity;\n        isEdited.refundedQuantity = refundedQuantity;\n\n        if (refundedQuantity !== 0) {\n          editedItems.push(isEdited);\n        }\n      } else if (refundedQuantity !== 0) {\n        editedItems.push({\n          id: lineItem._id,\n          title: lineItem.title,\n          refundedTotal: lineItem.variants.price * refundedQuantity,\n          refundedQuantity: refundedQuantity\n        });\n      }\n\n      _this.setState({\n        editedItems: editedItems,\n        value: value\n      });\n    };\n\n    _this.getRefundedItemsInfo = function () {\n      var editedItems = _this.state.editedItems;\n      return {\n        quantity: editedItems.reduce(function (acc, item) {\n          return acc + item.refundedQuantity;\n        }, 0),\n        total: editedItems.reduce(function (acc, item) {\n          return acc + item.refundedTotal;\n        }, 0),\n        items: editedItems\n      };\n    };\n\n    _this.handleApprove = function (event) {\n      event.preventDefault();\n      var order = _this.state.order;\n      approvePayment(order);\n    };\n\n    _this.handleCapturePayment = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        isCapturing: true\n      });\n\n      var order = _this.state.order;\n      capturePayments(order, function () {\n        _this.setState({\n          isCapturing: false\n        });\n      });\n    };\n\n    _this.handleCancelPayment = function (event) {\n      event.preventDefault();\n      var order = _this.state.order;\n      var invoiceTotal = getBillingInfo(order).invoice && getBillingInfo(order).invoice.total;\n      var currencySymbol = _this.state.currency.symbol;\n      Meteor.subscribe(\"Packages\", Reaction.getShopId());\n      var packageId = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.paymentPackageId;\n      var settingsKey = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.paymentSettingsKey; // check if payment provider supports de-authorize\n\n      var checkSupportedMethods = Packages.findOne({\n        _id: packageId,\n        shopId: Reaction.getShopId()\n      }).settings[settingsKey].support;\n      var orderStatus = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.status;\n      var orderMode = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.mode;\n      var alertText;\n\n      if (_includes(checkSupportedMethods, \"de-authorize\") || orderStatus === \"completed\" && orderMode === \"capture\") {\n        alertText = i18next.t(\"order.applyRefundDuringCancelOrder\", {\n          currencySymbol: currencySymbol,\n          invoiceTotal: invoiceTotal\n        });\n      } // TODO: Redesign the cancel order workflow to be more intuitive\n\n\n      Alerts.alert({\n        title: i18next.t(\"order.cancelOrder\"),\n        text: alertText,\n        type: \"warning\",\n        showCancelButton: true,\n        showCloseButton: true,\n        confirmButtonColor: \"#98afbc\",\n        cancelButtonColor: \"#98afbc\",\n        confirmButtonText: i18next.t(\"order.cancelOrderNoRestock\"),\n        cancelButtonText: i18next.t(\"order.cancelOrderThenRestock\")\n      }, function (isConfirm, cancel) {\n        var returnToStock;\n\n        if (isConfirm) {\n          returnToStock = false;\n          return Meteor.call(\"orders/cancelOrder\", order, returnToStock);\n        }\n\n        if (cancel === \"cancel\") {\n          returnToStock = true;\n          return Meteor.call(\"orders/cancelOrder\", order, returnToStock);\n        }\n      });\n    };\n\n    _this.handleRefund = function (event, value) {\n      event.preventDefault();\n      var currencySymbol = _this.state.currency.symbol;\n      var order = _this.state.order;\n      var paymentMethod = orderCreditMethod(order) && orderCreditMethod(order).paymentMethod;\n      var orderTotal = paymentMethod && paymentMethod.amount;\n      var discounts = paymentMethod && paymentMethod.discounts;\n      var refund = value;\n      var refunds = _this.state.refunds;\n      var refundTotal = refunds && Array.isArray(refunds) && refunds.reduce(function (acc, item) {\n        return acc + parseFloat(item.amount);\n      }, 0);\n      var adjustedTotal; // TODO extract Stripe specific fullfilment payment handling out of core.\n      // Stripe counts discounts as refunds, so we need to re-add the discount to not \"double discount\" in the adjustedTotal\n\n      if (paymentMethod && paymentMethod.processor === \"Stripe\") {\n        adjustedTotal = accounting.toFixed(orderTotal + discounts - refundTotal, 2);\n      } else {\n        adjustedTotal = accounting.toFixed(orderTotal - refundTotal, 2);\n      }\n\n      if (refund > adjustedTotal) {\n        Alerts.inline(\"Refund(s) total cannot be greater than adjusted total\", \"error\", {\n          placement: \"coreOrderRefund\",\n          i18nKey: \"order.invalidRefund\",\n          autoHide: 10000\n        });\n      } else {\n        Alerts.alert({\n          title: i18next.t(\"order.applyRefundToThisOrder\", {\n            refund: refund,\n            currencySymbol: currencySymbol\n          }),\n          showCancelButton: true,\n          confirmButtonText: i18next.t(\"order.applyRefund\")\n        }, function (isConfirm) {\n          if (isConfirm) {\n            _this.setState({\n              isRefunding: true\n            });\n\n            Meteor.call(\"orders/refunds/create\", order._id, paymentMethod, refund, function (error, result) {\n              if (error) {\n                Alerts.alert(error.reason);\n              }\n\n              if (result) {\n                Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n              }\n\n              _this.setState({\n                isRefunding: false\n              });\n            });\n          }\n        });\n      }\n    };\n\n    _this.handleRefundItems = function () {\n      var paymentMethod = orderCreditMethod(_this.state.order) && orderCreditMethod(_this.state.order).paymentMethod;\n      var orderMode = paymentMethod && paymentMethod.mode;\n      var order = _this.state.order; // Check if payment is yet to be captured approve and capture first before return\n\n      if (orderMode === \"authorize\") {\n        Alerts.alert({\n          title: i18next.t(\"order.refundItemsTitle\"),\n          type: \"warning\",\n          text: i18next.t(\"order.refundItemsApproveAlert\", {\n            refundItemsQuantity: _this.getRefundedItemsInfo().quantity,\n            totalAmount: formatPriceString(getBillingInfo(order).invoice && getBillingInfo(order).invoice.total)\n          }),\n          showCancelButton: true,\n          confirmButtonText: i18next.t(\"order.approveInvoice\")\n        }, function (isConfirm) {\n          if (isConfirm) {\n            approvePayment(order);\n\n            _this.alertToCapture(order);\n          }\n        });\n      } else {\n        _this.alertToRefund(order);\n      }\n    };\n\n    _this.alertToCapture = function (order) {\n      Alerts.alert({\n        title: i18next.t(\"order.refundItemsTitle\"),\n        text: i18next.t(\"order.refundItemsCaptureAlert\", {\n          refundItemsQuantity: _this.getRefundedItemsInfo().quantity,\n          totalAmount: formatPriceString(getBillingInfo(order).invoice && getBillingInfo(order).invoice.total)\n        }),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: i18next.t(\"order.capturePayment\")\n      }, function (isConfirm) {\n        if (isConfirm) {\n          capturePayments(order);\n\n          _this.alertToRefund(order);\n        }\n      });\n    };\n\n    _this.alertToRefund = function (order) {\n      var paymentMethod = orderCreditMethod(order) && orderCreditMethod(order).paymentMethod;\n      var orderMode = paymentMethod && paymentMethod.mode;\n\n      var refundInfo = _this.getRefundedItemsInfo();\n\n      Alerts.alert({\n        title: i18next.t(\"order.refundItemsTitle\"),\n        text: i18next.t(\"order.refundItemsAlert\", {\n          refundItemsQuantity: refundInfo.quantity,\n          refundItemsTotal: formatPriceString(refundInfo.total)\n        }),\n        showCancelButton: true,\n        confirmButtonText: i18next.t(\"order.refundAmount\")\n      }, function (isConfirm) {\n        if (isConfirm) {\n          _this.setState({\n            isRefunding: true\n          }); // Set warning if order is not yet captured\n\n\n          if (orderMode !== \"capture\") {\n            Alerts.alert({\n              text: i18next.t(\"order.refundItemsWait\"),\n              type: \"warning\"\n            });\n\n            _this.setState({\n              isRefunding: false\n            });\n\n            return;\n          }\n\n          Meteor.call(\"orders/refunds/refundItems\", _this.state.order._id, paymentMethod, refundInfo, function (error, result) {\n            if (result.refund === false) {\n              Alerts.alert(result.error.reason || result.error.error);\n            }\n\n            if (result.refund === true) {\n              Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n              Alerts.alert({\n                text: i18next.t(\"order.refundItemsSuccess\"),\n                type: \"success\",\n                allowOutsideClick: false\n              });\n            }\n\n            _this.setState({\n              isRefunding: false,\n              popOverIsOpen: false,\n              editedItems: [],\n              selectedItems: []\n            });\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      currency: props.currency,\n      refunds: props.refunds,\n      order: props.order,\n      isUpdating: false,\n      isCapturing: false,\n      isRefunding: false,\n      popOverIsOpen: false,\n      selectAllItems: false,\n      selectedItems: [],\n      editedItems: [],\n      value: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InvoiceContainer.prototype;\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (nextProps !== this.props) {\n        this.setState({\n          order: nextProps.order,\n          currency: nextProps.currency,\n          refunds: nextProps.refunds\n        });\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.hasRefundingEnabled = function () {\n    function hasRefundingEnabled() {\n      var order = this.state.order;\n      var orderBillingInfo = getBillingInfo(order);\n      var paymentMethodId = orderBillingInfo.paymentMethod && orderBillingInfo.paymentMethod.paymentPackageId;\n      var paymentMethodName = orderBillingInfo.paymentMethod && orderBillingInfo.paymentMethod.paymentSettingsKey;\n      var paymentMethod = Packages.findOne({\n        _id: paymentMethodId\n      });\n      var isRefundable = paymentMethod && paymentMethod.settings && paymentMethod.settings[paymentMethodName] && paymentMethod.settings[paymentMethodName].support.includes(\"Refund\");\n      return isRefundable;\n    }\n\n    return hasRefundingEnabled;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(Invoice, (0, _extends2.default)({}, this.props, {\n        clearRefunds: this.handleClearRefunds,\n        handlePopOverOpen: this.handlePopOverOpen,\n        handleSelectAllItems: this.handleSelectAllItems,\n        onClose: this.handleClose,\n        togglePopOver: this.togglePopOver,\n        handleInputChange: this.handleInputChange,\n        handleItemSelect: this.handleItemSelect,\n        displayMedia: getPrimaryMediaForOrderItem,\n        toggleUpdating: this.toggleUpdating,\n        handleRefundItems: this.handleRefundItems,\n        getRefundedItemsInfo: this.getRefundedItemsInfo,\n        handleApprove: this.handleApprove,\n        isAdjusted: this.isAdjusted,\n        handleCapturePayment: this.handleCapturePayment,\n        handleRefund: this.handleRefund,\n        hasRefundingEnabled: this.hasRefundingEnabled(),\n        value: this.state.value,\n        refunds: this.state.refunds,\n        isCapturing: this.state.isCapturing,\n        selectAllItems: this.state.selectAllItems,\n        selectedItems: this.state.selectedItems,\n        currency: this.state.currency,\n        isRefunding: this.state.isRefunding,\n        popOverIsOpen: this.state.popOverIsOpen,\n        editedItems: this.state.editedItems,\n        isUpdating: this.state.isUpdating\n      }));\n    }\n\n    return render;\n  }();\n\n  return InvoiceContainer;\n}(Component);\n/**\n * @method orderCreditMethod\n * @summary helper method to return the order payment object\n * @param {Object} order - object representing an order\n * @return {Object} object representing entire payment method\n */\n\n\nInvoiceContainer.propTypes = {\n  currency: PropTypes.object,\n  isFetching: PropTypes.bool,\n  order: PropTypes.object,\n  refunds: PropTypes.array,\n  uniqueItems: PropTypes.array\n};\n\nfunction orderCreditMethod(order) {\n  var billingInfo = getBillingInfo(order);\n\n  if (billingInfo.paymentMethod && billingInfo.paymentMethod.method === \"credit\") {\n    return billingInfo;\n  }\n}\n/**\n * @method approvePayment\n * @summary helper method to approve payment\n * @param {Object} order - object representing an order\n * @return {null} null\n */\n\n\nfunction approvePayment(order) {\n  var paymentMethod = orderCreditMethod(order);\n  var orderTotal = accounting.toFixed(paymentMethod.invoice.subtotal + paymentMethod.invoice.shipping + paymentMethod.invoice.taxes, 2);\n  var discount = order.discount; // TODO: review Discount cannot be greater than original total price\n  // logic is probably not valid any more. Discounts aren't valid below 0 order.\n\n  if (discount > orderTotal) {\n    Alerts.inline(\"Discount cannot be greater than original total price\", \"error\", {\n      placement: \"coreOrderShippingInvoice\",\n      i18nKey: \"order.invalidDiscount\",\n      autoHide: 10000\n    });\n  } else if (orderTotal === accounting.toFixed(discount, 2)) {\n    Alerts.alert({\n      title: i18next.t(\"order.fullDiscountWarning\"),\n      showCancelButton: true,\n      confirmButtonText: i18next.t(\"order.applyDiscount\")\n    }, function (isConfirm) {\n      if (isConfirm) {\n        Meteor.call(\"orders/approvePayment\", order, function (error) {\n          if (error) {\n            Logger.warn(error);\n          }\n        });\n      }\n    });\n  } else {\n    Meteor.call(\"orders/approvePayment\", order, function (error) {\n      if (error) {\n        Logger.warn(error);\n\n        if (error.error === \"orders/approvePayment.discount-amount\") {\n          Alerts.inline(\"Discount cannot be greater than original total price\", \"error\", {\n            placement: \"coreOrderShippingInvoice\",\n            i18nKey: \"order.invalidDiscount\",\n            autoHide: 10000\n          });\n        }\n      }\n    });\n  }\n}\n/**\n * @method capturePayments\n * @summary helper method to capture payments\n * @param {object} order - object representing an order\n * @param {function} onCancel - called on clicking cancel in alert dialog\n * @return {null} null\n */\n\n\nfunction capturePayments(order, onCancel) {\n  var capture = function () {\n    Meteor.call(\"orders/capturePayments\", order._id);\n\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order);\n      Reaction.Router.setQueryParams({\n        filter: \"processing\",\n        _id: order._id\n      });\n    }\n  }; // before capturing, check if there's a payment risk on order; alert admin before capture\n\n\n  if (getOrderRiskStatus(order)) {\n    alertDialog().then(capture).catch(onCancel);\n  } else {\n    capture();\n  }\n\n  function alertDialog() {\n    var alertType = \"warning\";\n    var riskBadge = getOrderRiskBadge(getOrderRiskStatus(order)); // use red alert color for high risk level\n\n    if (riskBadge === \"danger\") {\n      alertType = \"error\";\n    }\n\n    return Alerts.alert({\n      title: i18next.t(\"admin.orderRisk.riskCapture\"),\n      text: i18next.t(\"admin.orderRisk.riskCaptureWarn\"),\n      type: alertType,\n      showCancelButton: true,\n      cancelButtonText: i18next.t(\"admin.settings.cancel\"),\n      confirmButtonText: i18next.t(\"admin.settings.continue\")\n    });\n  }\n}\n\nvar composer = function (props, onData) {\n  var order = props.order,\n      refunds = props.refunds;\n  var shopBilling = getBillingInfo(order);\n  var creditMethod = orderCreditMethod(order);\n  var paymentMethod = creditMethod && creditMethod.paymentMethod;\n  var orderStatus = creditMethod && creditMethod.paymentMethod && creditMethod.paymentMethod.status;\n  var orderDiscounts = creditMethod && creditMethod.invoice.discounts;\n  var paymentApproved = orderStatus === \"approved\";\n  var showAfterPaymentCaptured = orderStatus === \"completed\";\n\n  var paymentCaptured = _includes([\"completed\", \"refunded\", \"partialRefund\"], orderStatus);\n\n  var paymentPendingApproval = _includes([\"created\", \"adjustments\", \"error\"], orderStatus); // get whether adjustments can be made\n\n\n  var canMakeAdjustments = !_includes([\"approved\", \"completed\", \"refunded\", \"partialRefund\"], orderStatus); // get adjusted Total\n\n  var adjustedTotal;\n  var refundTotal = refunds && Array.isArray(refunds) && refunds.reduce(function (acc, item) {\n    return acc + parseFloat(item.amount);\n  }, 0);\n\n  if (paymentMethod && paymentMethod.processor === \"Stripe\") {\n    adjustedTotal = Math.abs(paymentMethod.amount + orderDiscounts - refundTotal);\n  }\n\n  adjustedTotal = Math.abs(paymentMethod && paymentMethod.amount - refundTotal); // get invoice\n\n  var invoice = Object.assign({}, shopBilling.invoice, {\n    totalItems: _sumBy(order.items, function (o) {\n      return o.quantity;\n    })\n  }); // get discounts\n\n  var enabledPaymentsArr = [];\n  var apps = Reaction.Apps({\n    provides: \"paymentMethod\",\n    enabled: true\n  });\n\n  for (var _iterator = apps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _app = _ref;\n    if (_app.enabled === true) enabledPaymentsArr.push(_app);\n  }\n\n  var discounts = false;\n\n  for (var _i2 = 0; _i2 < enabledPaymentsArr.length; _i2++) {\n    var enabled = enabledPaymentsArr[_i2];\n\n    if (enabled.packageName === \"discount-codes\") {\n      discounts = true;\n      break;\n    }\n  } // get unique lineItems\n\n\n  var shipment = props.currentData.fulfillment;\n  var uniqueItems = order.items.map(function (item) {\n    var shipping = shipment && shipment.shipmentMethod;\n    item.shipping = shipping;\n\n    if (order.taxes !== undefined) {\n      var taxes = order.taxes.slice(0, -1);\n\n      if (taxes.length !== 0) {\n        var taxDetail = taxes.find(function (tax) {\n          return tax.lineNumber === item._id;\n        });\n        item.taxDetail = taxDetail;\n      }\n    }\n\n    return item;\n  }); // print order\n\n  var printOrder = Reaction.Router.pathFor(\"dashboard/pdf/orders\", {\n    hash: {\n      id: props.order._id,\n      shipment: props.currentData.fulfillment && props.currentData.fulfillment._id\n    }\n  });\n  onData(null, {\n    uniqueItems: uniqueItems,\n    invoice: invoice,\n    discounts: discounts,\n    adjustedTotal: adjustedTotal,\n    paymentCaptured: paymentCaptured,\n    paymentPendingApproval: paymentPendingApproval,\n    paymentApproved: paymentApproved,\n    canMakeAdjustments: canMakeAdjustments,\n    showAfterPaymentCaptured: showAfterPaymentCaptured,\n    printOrder: printOrder,\n    currentData: props.currentData,\n    currency: props.currency,\n    isFetching: props.isFetching,\n    order: props.order,\n    refunds: props.refunds\n  });\n};\n\nregisterComponent(\"InvoiceContainer\", InvoiceContainer, composeWithTracker(composer));\nmodule.exportDefault(composeWithTracker(composer)(InvoiceContainer));","map":{"version":3,"sources":["imports/plugins/core/orders/client/containers/invoiceContainer.js"],"names":["_sumBy","module","watch","require","v","_includes","React","Component","PropTypes","accounting","Meteor","i18next","Logger","Reaction","formatPriceString","Packages","getPrimaryMediaForOrderItem","composeWithTracker","registerComponent","Invoice","getOrderRiskStatus","getOrderRiskBadge","getBillingInfo","InvoiceContainer","props","handlePopOverOpen","event","preventDefault","setState","popOverIsOpen","handleClearRefunds","editedItems","selectedItems","selectAllItems","handleItemSelect","lineItem","state","includes","_id","push","isEdited","find","item","id","adjustedQuantity","quantity","value","filter","refundedTotal","variants","price","refundedQuantity","title","isUpdating","handleSelectAllItems","uniqueItems","updateEditedItems","itemIds","map","handleInputChange","getRefundedItemsInfo","reduce","acc","total","items","handleApprove","order","approvePayment","handleCapturePayment","isCapturing","capturePayments","handleCancelPayment","invoiceTotal","invoice","currencySymbol","currency","symbol","subscribe","getShopId","packageId","paymentMethod","paymentPackageId","settingsKey","paymentSettingsKey","checkSupportedMethods","findOne","shopId","settings","support","orderStatus","status","orderMode","mode","alertText","t","Alerts","alert","text","type","showCancelButton","showCloseButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","isConfirm","cancel","returnToStock","call","handleRefund","orderCreditMethod","orderTotal","amount","discounts","refund","refunds","refundTotal","Array","isArray","parseFloat","adjustedTotal","processor","toFixed","inline","placement","i18nKey","autoHide","isRefunding","error","result","reason","toast","handleRefundItems","refundItemsQuantity","totalAmount","alertToCapture","alertToRefund","refundInfo","refundItemsTotal","allowOutsideClick","undefined","componentWillReceiveProps","nextProps","hasRefundingEnabled","orderBillingInfo","paymentMethodId","paymentMethodName","isRefundable","render","handleClose","togglePopOver","toggleUpdating","isAdjusted","propTypes","object","isFetching","bool","array","billingInfo","method","subtotal","shipping","taxes","discount","warn","onCancel","capture","workflow","Router","setQueryParams","alertDialog","then","catch","alertType","riskBadge","composer","onData","shopBilling","creditMethod","orderDiscounts","paymentApproved","showAfterPaymentCaptured","paymentCaptured","paymentPendingApproval","canMakeAdjustments","Math","abs","Object","assign","totalItems","o","enabledPaymentsArr","apps","Apps","provides","enabled","app","packageName","shipment","currentData","fulfillment","shipmentMethod","slice","length","taxDetail","tax","lineNumber","printOrder","pathFor","hash","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport accounting from \"accounting-js\";\nimport _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { i18next, Logger, Reaction, formatPriceString } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { getPrimaryMediaForOrderItem } from \"/lib/api\";\nimport { composeWithTracker, registerComponent } from \"@reactioncommerce/reaction-components\";\nimport Invoice from \"../components/invoice.js\";\nimport { getOrderRiskStatus, getOrderRiskBadge, getBillingInfo } from \"../helpers\";\n\nclass InvoiceContainer extends Component {\n  static propTypes = {\n    currency: PropTypes.object,\n    isFetching: PropTypes.bool,\n    order: PropTypes.object,\n    refunds: PropTypes.array,\n    uniqueItems: PropTypes.array\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currency: props.currency,\n      refunds: props.refunds,\n      order: props.order,\n      isUpdating: false,\n      isCapturing: false,\n      isRefunding: false,\n      popOverIsOpen: false,\n      selectAllItems: false,\n      selectedItems: [],\n      editedItems: [],\n      value: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.setState({\n        order: nextProps.order,\n        currency: nextProps.currency,\n        refunds: nextProps.refunds\n      });\n    }\n  }\n\n  handlePopOverOpen = (event) => {\n    event.preventDefault();\n    this.setState({\n      popOverIsOpen: true\n    });\n  }\n\n  handleClearRefunds = () => {\n    this.setState({\n      editedItems: [],\n      selectedItems: [],\n      selectAllItems: false,\n      popOverIsOpen: false\n    });\n  };\n\n  handleItemSelect = (lineItem) => {\n    let { selectedItems, editedItems } = this.state;\n\n    // if item is not in the selectedItems array\n    if (!selectedItems.includes(lineItem._id)) {\n      // include it in the array\n      selectedItems.push(lineItem._id);\n\n      // Add every quantity in the row to be refunded\n      const isEdited = editedItems.find((item) => item.id === lineItem._id);\n\n      const adjustedQuantity = lineItem.quantity - this.state.value;\n\n      if (isEdited) {\n        editedItems = editedItems.filter((item) => item.id !== lineItem._id);\n        isEdited.refundedTotal = lineItem.variants.price * adjustedQuantity;\n        isEdited.refundedQuantity = adjustedQuantity;\n        editedItems.push(isEdited);\n      } else {\n        editedItems.push({\n          id: lineItem._id,\n          title: lineItem.title,\n          refundedTotal: lineItem.variants.price * lineItem.quantity,\n          refundedQuantity: lineItem.quantity\n        });\n      }\n\n      this.setState({\n        editedItems,\n        selectedItems,\n        isUpdating: true,\n        selectAllItems: false\n      });\n    } else {\n      // remove item from selected items\n      selectedItems = selectedItems.filter((id) => id !== lineItem._id);\n\n      // remove item from edited quantities\n      editedItems = editedItems.filter((item) => item.id !== lineItem._id);\n\n      this.setState({\n        editedItems,\n        selectedItems,\n        isUpdating: true,\n        selectAllItems: false\n      });\n    }\n  }\n\n  handleSelectAllItems = (uniqueItems) => {\n    if (this.state.selectAllItems) {\n      // if all items are selected, clear the selectedItems array\n      // and set selectAllItems to false\n      this.setState({\n        selectedItems: [],\n        editedItems: [],\n        selectAllItems: false\n      });\n    } else {\n      // if there are no selected items, or if there are some items that have been\n      // selected but not all of them, loop through the items array and return a\n      // new array with item ids only, then set the selectedItems array with the itemIds\n      const updateEditedItems = [];\n\n      const itemIds = uniqueItems.map((item) => {\n        // on select all refunded quantity should be all existing items\n        updateEditedItems.push({\n          id: item._id,\n          title: item.title,\n          refundedTotal: item.variants.price * item.quantity,\n          refundedQuantity: item.quantity\n        });\n        return item._id;\n      });\n      this.setState({\n        editedItems: updateEditedItems,\n        selectedItems: itemIds,\n        selectAllItems: true,\n        isUpdating: true\n      });\n    }\n  }\n\n  handleInputChange = (event, value, lineItem) => {\n    let { editedItems } = this.state;\n\n    const isEdited = editedItems.find((item) => item.id === lineItem._id);\n\n    const refundedQuantity = lineItem.quantity - value;\n\n    if (isEdited) {\n      editedItems = editedItems.filter((item) => item.id !== lineItem._id);\n      isEdited.refundedTotal = lineItem.variants.price * refundedQuantity;\n      isEdited.refundedQuantity = refundedQuantity;\n      if (refundedQuantity !== 0) {\n        editedItems.push(isEdited);\n      }\n    } else if (refundedQuantity !== 0) {\n      editedItems.push({\n        id: lineItem._id,\n        title: lineItem.title,\n        refundedTotal: lineItem.variants.price * refundedQuantity,\n        refundedQuantity\n      });\n    }\n    this.setState({\n      editedItems,\n      value\n    });\n  }\n\n  getRefundedItemsInfo = () => {\n    const { editedItems } = this.state;\n    return {\n      quantity: editedItems.reduce((acc, item) => acc + item.refundedQuantity, 0),\n      total: editedItems.reduce((acc, item) => acc + item.refundedTotal, 0),\n      items: editedItems\n    };\n  }\n\n  hasRefundingEnabled() {\n    const { order } = this.state;\n    const orderBillingInfo = getBillingInfo(order);\n    const paymentMethodId = orderBillingInfo.paymentMethod && orderBillingInfo.paymentMethod.paymentPackageId;\n    const paymentMethodName = orderBillingInfo.paymentMethod && orderBillingInfo.paymentMethod.paymentSettingsKey;\n    const paymentMethod = Packages.findOne({ _id: paymentMethodId });\n    const isRefundable = paymentMethod && paymentMethod.settings && paymentMethod.settings[paymentMethodName]\n      && paymentMethod.settings[paymentMethodName].support.includes(\"Refund\");\n\n    return isRefundable;\n  }\n\n  handleApprove = (event) => {\n    event.preventDefault();\n\n    const { order } = this.state;\n    approvePayment(order);\n  }\n\n  handleCapturePayment = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      isCapturing: true\n    });\n\n    const { order } = this.state;\n    capturePayments(order, () => {\n      this.setState({\n        isCapturing: false\n      });\n    });\n  }\n\n  handleCancelPayment = (event) => {\n    event.preventDefault();\n    const { order } = this.state;\n    const invoiceTotal = getBillingInfo(order).invoice && getBillingInfo(order).invoice.total;\n    const currencySymbol = this.state.currency.symbol;\n\n    Meteor.subscribe(\"Packages\", Reaction.getShopId());\n    const packageId = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.paymentPackageId;\n    const settingsKey = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.paymentSettingsKey;\n    // check if payment provider supports de-authorize\n    const checkSupportedMethods = Packages.findOne({\n      _id: packageId,\n      shopId: Reaction.getShopId()\n    }).settings[settingsKey].support;\n\n    const orderStatus = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.status;\n    const orderMode = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.mode;\n\n    let alertText;\n    if (_.includes(checkSupportedMethods, \"de-authorize\") ||\n      (orderStatus === \"completed\" && orderMode === \"capture\")) {\n      alertText = i18next.t(\"order.applyRefundDuringCancelOrder\", { currencySymbol, invoiceTotal });\n    }\n\n    // TODO: Redesign the cancel order workflow to be more intuitive\n    Alerts.alert({\n      title: i18next.t(\"order.cancelOrder\"),\n      text: alertText,\n      type: \"warning\",\n      showCancelButton: true,\n      showCloseButton: true,\n      confirmButtonColor: \"#98afbc\",\n      cancelButtonColor: \"#98afbc\",\n      confirmButtonText: i18next.t(\"order.cancelOrderNoRestock\"),\n      cancelButtonText: i18next.t(\"order.cancelOrderThenRestock\")\n    }, (isConfirm, cancel) => {\n      let returnToStock;\n      if (isConfirm) {\n        returnToStock = false;\n        return Meteor.call(\"orders/cancelOrder\", order, returnToStock);\n      }\n      if (cancel === \"cancel\") {\n        returnToStock = true;\n        return Meteor.call(\"orders/cancelOrder\", order, returnToStock);\n      }\n    });\n  }\n\n  handleRefund = (event, value) => {\n    event.preventDefault();\n\n    const currencySymbol = this.state.currency.symbol;\n    const { order } = this.state;\n    const paymentMethod = orderCreditMethod(order) && orderCreditMethod(order).paymentMethod;\n    const orderTotal = paymentMethod && paymentMethod.amount;\n    const discounts = paymentMethod && paymentMethod.discounts;\n    const refund = value;\n    const { refunds } = this.state;\n    const refundTotal = refunds && Array.isArray(refunds) && refunds.reduce((acc, item) => acc + parseFloat(item.amount), 0);\n\n    let adjustedTotal;\n\n    // TODO extract Stripe specific fullfilment payment handling out of core.\n    // Stripe counts discounts as refunds, so we need to re-add the discount to not \"double discount\" in the adjustedTotal\n    if (paymentMethod && paymentMethod.processor === \"Stripe\") {\n      adjustedTotal = accounting.toFixed(orderTotal + discounts - refundTotal, 2);\n    } else {\n      adjustedTotal = accounting.toFixed(orderTotal - refundTotal, 2);\n    }\n\n    if (refund > adjustedTotal) {\n      Alerts.inline(\"Refund(s) total cannot be greater than adjusted total\", \"error\", {\n        placement: \"coreOrderRefund\",\n        i18nKey: \"order.invalidRefund\",\n        autoHide: 10000\n      });\n    } else {\n      Alerts.alert({\n        title: i18next.t(\"order.applyRefundToThisOrder\", { refund, currencySymbol }),\n        showCancelButton: true,\n        confirmButtonText: i18next.t(\"order.applyRefund\")\n      }, (isConfirm) => {\n        if (isConfirm) {\n          this.setState({\n            isRefunding: true\n          });\n          Meteor.call(\"orders/refunds/create\", order._id, paymentMethod, refund, (error, result) => {\n            if (error) {\n              Alerts.alert(error.reason);\n            }\n            if (result) {\n              Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n            }\n            this.setState({\n              isRefunding: false\n            });\n          });\n        }\n      });\n    }\n  }\n\n  handleRefundItems = () => {\n    const paymentMethod = orderCreditMethod(this.state.order) && orderCreditMethod(this.state.order).paymentMethod;\n    const orderMode = paymentMethod && paymentMethod.mode;\n    const { order } = this.state;\n\n    // Check if payment is yet to be captured approve and capture first before return\n    if (orderMode === \"authorize\") {\n      Alerts.alert({\n        title: i18next.t(\"order.refundItemsTitle\"),\n        type: \"warning\",\n        text: i18next.t(\"order.refundItemsApproveAlert\", {\n          refundItemsQuantity: this.getRefundedItemsInfo().quantity,\n          totalAmount: formatPriceString(getBillingInfo(order).invoice && getBillingInfo(order).invoice.total)\n        }),\n        showCancelButton: true,\n        confirmButtonText: i18next.t(\"order.approveInvoice\")\n      }, (isConfirm) => {\n        if (isConfirm) {\n          approvePayment(order);\n          this.alertToCapture(order);\n        }\n      });\n    } else {\n      this.alertToRefund(order);\n    }\n  }\n\n  alertToCapture = (order) => {\n    Alerts.alert({\n      title: i18next.t(\"order.refundItemsTitle\"),\n      text: i18next.t(\"order.refundItemsCaptureAlert\", {\n        refundItemsQuantity: this.getRefundedItemsInfo().quantity,\n        totalAmount: formatPriceString(getBillingInfo(order).invoice && getBillingInfo(order).invoice.total)\n      }),\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: i18next.t(\"order.capturePayment\")\n    }, (isConfirm) => {\n      if (isConfirm) {\n        capturePayments(order);\n        this.alertToRefund(order);\n      }\n    });\n  }\n\n  alertToRefund = (order) => {\n    const paymentMethod = orderCreditMethod(order) && orderCreditMethod(order).paymentMethod;\n    const orderMode = paymentMethod && paymentMethod.mode;\n    const refundInfo = this.getRefundedItemsInfo();\n\n    Alerts.alert({\n      title: i18next.t(\"order.refundItemsTitle\"),\n      text: i18next.t(\"order.refundItemsAlert\", {\n        refundItemsQuantity: refundInfo.quantity,\n        refundItemsTotal: formatPriceString(refundInfo.total)\n      }),\n      showCancelButton: true,\n      confirmButtonText: i18next.t(\"order.refundAmount\")\n    }, (isConfirm) => {\n      if (isConfirm) {\n        this.setState({\n          isRefunding: true\n        });\n\n        // Set warning if order is not yet captured\n        if (orderMode !== \"capture\") {\n          Alerts.alert({\n            text: i18next.t(\"order.refundItemsWait\"),\n            type: \"warning\"\n          });\n          this.setState({\n            isRefunding: false\n          });\n          return;\n        }\n\n        Meteor.call(\"orders/refunds/refundItems\", this.state.order._id, paymentMethod, refundInfo, (error, result) => {\n          if (result.refund === false) {\n            Alerts.alert(result.error.reason || result.error.error);\n          }\n          if (result.refund === true) {\n            Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n\n            Alerts.alert({\n              text: i18next.t(\"order.refundItemsSuccess\"),\n              type: \"success\",\n              allowOutsideClick: false\n            });\n          }\n\n          this.setState({\n            isRefunding: false,\n            popOverIsOpen: false,\n            editedItems: [],\n            selectedItems: []\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Invoice\n        {...this.props}\n\n        clearRefunds={this.handleClearRefunds}\n        handlePopOverOpen={this.handlePopOverOpen}\n        handleSelectAllItems={this.handleSelectAllItems}\n        onClose={this.handleClose}\n        togglePopOver={this.togglePopOver}\n        handleInputChange={this.handleInputChange}\n        handleItemSelect={this.handleItemSelect}\n        displayMedia={getPrimaryMediaForOrderItem}\n        toggleUpdating={this.toggleUpdating}\n        handleRefundItems={this.handleRefundItems}\n        getRefundedItemsInfo={this.getRefundedItemsInfo}\n        handleApprove={this.handleApprove}\n        isAdjusted={this.isAdjusted}\n        handleCapturePayment={this.handleCapturePayment}\n        handleRefund={this.handleRefund}\n        hasRefundingEnabled={this.hasRefundingEnabled()}\n\n        value={this.state.value}\n        refunds={this.state.refunds}\n        isCapturing={this.state.isCapturing}\n        selectAllItems={this.state.selectAllItems}\n        selectedItems={this.state.selectedItems}\n        currency={this.state.currency}\n        isRefunding={this.state.isRefunding}\n        popOverIsOpen={this.state.popOverIsOpen}\n        editedItems={this.state.editedItems}\n        isUpdating={this.state.isUpdating}\n      />\n    );\n  }\n}\n\n/**\n * @method orderCreditMethod\n * @summary helper method to return the order payment object\n * @param {Object} order - object representing an order\n * @return {Object} object representing entire payment method\n */\nfunction orderCreditMethod(order) {\n  const billingInfo = getBillingInfo(order);\n\n  if (billingInfo.paymentMethod && billingInfo.paymentMethod.method === \"credit\") {\n    return billingInfo;\n  }\n}\n\n/**\n * @method approvePayment\n * @summary helper method to approve payment\n * @param {Object} order - object representing an order\n * @return {null} null\n */\nfunction approvePayment(order) {\n  const paymentMethod = orderCreditMethod(order);\n  const orderTotal = accounting.toFixed(\n    paymentMethod.invoice.subtotal\n    + paymentMethod.invoice.shipping\n    + paymentMethod.invoice.taxes\n    , 2\n  );\n\n  const { discount } = order;\n  // TODO: review Discount cannot be greater than original total price\n  // logic is probably not valid any more. Discounts aren't valid below 0 order.\n  if (discount > orderTotal) {\n    Alerts.inline(\"Discount cannot be greater than original total price\", \"error\", {\n      placement: \"coreOrderShippingInvoice\",\n      i18nKey: \"order.invalidDiscount\",\n      autoHide: 10000\n    });\n  } else if (orderTotal === accounting.toFixed(discount, 2)) {\n    Alerts.alert({\n      title: i18next.t(\"order.fullDiscountWarning\"),\n      showCancelButton: true,\n      confirmButtonText: i18next.t(\"order.applyDiscount\")\n    }, (isConfirm) => {\n      if (isConfirm) {\n        Meteor.call(\"orders/approvePayment\", order, (error) => {\n          if (error) {\n            Logger.warn(error);\n          }\n        });\n      }\n    });\n  } else {\n    Meteor.call(\"orders/approvePayment\", order, (error) => {\n      if (error) {\n        Logger.warn(error);\n        if (error.error === \"orders/approvePayment.discount-amount\") {\n          Alerts.inline(\"Discount cannot be greater than original total price\", \"error\", {\n            placement: \"coreOrderShippingInvoice\",\n            i18nKey: \"order.invalidDiscount\",\n            autoHide: 10000\n          });\n        }\n      }\n    });\n  }\n}\n\n/**\n * @method capturePayments\n * @summary helper method to capture payments\n * @param {object} order - object representing an order\n * @param {function} onCancel - called on clicking cancel in alert dialog\n * @return {null} null\n */\nfunction capturePayments(order, onCancel) {\n  const capture = () => {\n    Meteor.call(\"orders/capturePayments\", order._id);\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order);\n\n      Reaction.Router.setQueryParams({\n        filter: \"processing\",\n        _id: order._id\n      });\n    }\n  };\n\n  // before capturing, check if there's a payment risk on order; alert admin before capture\n  if (getOrderRiskStatus(order)) {\n    alertDialog()\n      .then(capture)\n      .catch(onCancel);\n  } else {\n    capture();\n  }\n\n  function alertDialog() {\n    let alertType = \"warning\";\n    const riskBadge = getOrderRiskBadge(getOrderRiskStatus(order));\n    // use red alert color for high risk level\n    if (riskBadge === \"danger\") {\n      alertType = \"error\";\n    }\n\n    return Alerts.alert({\n      title: i18next.t(\"admin.orderRisk.riskCapture\"),\n      text: i18next.t(\"admin.orderRisk.riskCaptureWarn\"),\n      type: alertType,\n      showCancelButton: true,\n      cancelButtonText: i18next.t(\"admin.settings.cancel\"),\n      confirmButtonText: i18next.t(\"admin.settings.continue\")\n    });\n  }\n}\n\nconst composer = (props, onData) => {\n  const { order, refunds } = props;\n\n  const shopBilling = getBillingInfo(order);\n  const creditMethod = orderCreditMethod(order);\n\n  const paymentMethod = creditMethod && creditMethod.paymentMethod;\n  const orderStatus = creditMethod && creditMethod.paymentMethod && creditMethod.paymentMethod.status;\n  const orderDiscounts = creditMethod && creditMethod.invoice.discounts;\n\n  const paymentApproved = orderStatus === \"approved\";\n  const showAfterPaymentCaptured = orderStatus === \"completed\";\n  const paymentCaptured = _.includes([\"completed\", \"refunded\", \"partialRefund\"], orderStatus);\n  const paymentPendingApproval = _.includes([\"created\", \"adjustments\", \"error\"], orderStatus);\n\n  // get whether adjustments can be made\n  const canMakeAdjustments = !_.includes([\"approved\", \"completed\", \"refunded\", \"partialRefund\"], orderStatus);\n\n  // get adjusted Total\n  let adjustedTotal;\n  const refundTotal = refunds && Array.isArray(refunds) && refunds.reduce((acc, item) => acc + parseFloat(item.amount), 0);\n\n  if (paymentMethod && paymentMethod.processor === \"Stripe\") {\n    adjustedTotal = Math.abs(paymentMethod.amount + orderDiscounts - refundTotal);\n  }\n  adjustedTotal = Math.abs(paymentMethod && paymentMethod.amount - refundTotal);\n\n  // get invoice\n  const invoice = Object.assign({}, shopBilling.invoice, {\n    totalItems: _.sumBy(order.items, (o) => o.quantity)\n  });\n\n  // get discounts\n  const enabledPaymentsArr = [];\n  const apps = Reaction.Apps({\n    provides: \"paymentMethod\",\n    enabled: true\n  });\n  for (const app of apps) {\n    if (app.enabled === true) enabledPaymentsArr.push(app);\n  }\n  let discounts = false;\n\n  for (const enabled of enabledPaymentsArr) {\n    if (enabled.packageName === \"discount-codes\") {\n      discounts = true;\n      break;\n    }\n  }\n\n  // get unique lineItems\n  const shipment = props.currentData.fulfillment;\n\n  const uniqueItems = order.items.map((item) => {\n    const shipping = shipment && shipment.shipmentMethod;\n    item.shipping = shipping;\n    if (order.taxes !== undefined) {\n      const taxes = order.taxes.slice(0, -1);\n\n      if (taxes.length !== 0) {\n        const taxDetail = taxes.find((tax) => tax.lineNumber === item._id);\n        item.taxDetail = taxDetail;\n      }\n    }\n    return item;\n  });\n\n  // print order\n  const printOrder = Reaction.Router.pathFor(\"dashboard/pdf/orders\", {\n    hash: {\n      id: props.order._id,\n      shipment: props.currentData.fulfillment && props.currentData.fulfillment._id\n    }\n  });\n\n  onData(null, {\n    uniqueItems,\n    invoice,\n    discounts,\n    adjustedTotal,\n    paymentCaptured,\n    paymentPendingApproval,\n    paymentApproved,\n    canMakeAdjustments,\n    showAfterPaymentCaptured,\n    printOrder,\n\n    currentData: props.currentData,\n    currency: props.currency,\n    isFetching: props.isFetching,\n    order: props.order,\n    refunds: props.refunds\n  });\n};\n\nregisterComponent(\"InvoiceContainer\", InvoiceContainer, composeWithTracker(composer));\n\nexport default composeWithTracker(composer)(InvoiceContainer);\n"]},"sourceType":"script","hash":"d402a5c22e513e31a154eeed42f183aae0c845c4"}
