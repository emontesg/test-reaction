{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/accounts/client/components/adminInviteForm.js","filename":"imports/plugins/core/accounts/client/components/adminInviteForm.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/accounts/client/components/adminInviteForm.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/accounts/client/components/adminInviteForm.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/accounts/client/components/adminInviteForm.js"}},"code":"var _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _startCase;\n\nmodule.watch(require(\"lodash/startCase\"), {\n  \"default\": function (v) {\n    _startCase = v;\n  }\n}, 0);\n\nvar _isEqual;\n\nmodule.watch(require(\"lodash/isEqual\"), {\n  \"default\": function (v) {\n    _isEqual = v;\n  }\n}, 1);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 3);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 4);\nvar Components, registerComponent;\nmodule.watch(require(\"../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  },\n  registerComponent: function (v) {\n    registerComponent = v;\n  }\n}, 5);\nvar ReactionAlerts;\nmodule.watch(require(\"../../../layout/client/templates/layout/alerts/inlineAlerts\"), {\n  \"default\": function (v) {\n    ReactionAlerts = v;\n  }\n}, 6);\nvar Reaction, i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 7);\nvar getDefaultUserInviteGroup;\nmodule.watch(require(\"../helpers/accountsHelper\"), {\n  getDefaultUserInviteGroup: function (v) {\n    getDefaultUserInviteGroup = v;\n  }\n}, 8);\n\n/**\n * @summary React component to display admin invite form\n * @memberof Accounts\n * @extends {Component}\n * @property {Function} canInviteToGroup\n * @property {Array} groups\n */\nvar AdminInviteForm =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(AdminInviteForm, _Component);\n\n  function AdminInviteForm(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.handleGroupSelect = function (event, group) {\n      _this.setState({\n        group: group\n      });\n    };\n\n    _this.removeAlert = function (oldAlert) {\n      return _this.setState({\n        alertArray: _this.state.alertArray.filter(function (alert) {\n          return !_isEqual(alert, oldAlert);\n        })\n      });\n    };\n\n    var groups = props.groups;\n    _this.state = {\n      alertId: \"admin-invite-form\",\n      groups: groups,\n      name: \"\",\n      email: \"\",\n      group: getDefaultUserInviteGroup(groups)\n    };\n    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = AdminInviteForm.prototype;\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      var groups = nextProps.groups;\n      this.setState({\n        groups: groups,\n        group: getDefaultUserInviteGroup(groups)\n      });\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.onChange = function () {\n    function onChange(event) {\n      var _setState;\n\n      this.setState((_setState = {}, _setState[event.target.name] = event.target.value, _setState));\n    }\n\n    return onChange;\n  }();\n\n  _proto.handleSubmit = function () {\n    function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _state = this.state,\n          name = _state.name,\n          email = _state.email,\n          group = _state.group,\n          alertId = _state.alertId;\n      var alertOptions = {\n        placement: alertId,\n        id: alertId,\n        autoHide: 4000\n      }; // if no group is selected, show alert that group is required to send invitation\n\n      if (!group._id) {\n        return ReactionAlerts.add(\"A group is required to invite an admin\", \"danger\", Object.assign({}, alertOptions, {\n          i18nKey: \"admin.groupsInvite.groupRequired\"\n        }));\n      }\n\n      var options = {\n        email: email,\n        name: name,\n        shopId: Reaction.getShopId(),\n        groupId: group._id\n      };\n      return Meteor.call(\"accounts/inviteShopMember\", options, function (error, result) {\n        if (error) {\n          var messageKey; // switching to use of package i18n keys (groupsInvite. namespace)\n\n          if (error.reason === \"Unable to send invitation email.\") {\n            messageKey = \"admin.groupsInvite.unableToSendInvitationEmail\";\n          } else if (error.reason === \"cannot directly invite owner\") {\n            messageKey = \"admin.groupsInvite.inviteOwnerError\";\n          } else if (error.reason === \"cannot invite to group\") {\n            messageKey = \"admin.groupsInvite.cannotInvite\";\n          } else if (error.reason === \"Need to set a username or email\") {\n            messageKey = \"admin.groupsInvite.NeedToSetUsernameOrEmail\";\n          } else {\n            messageKey = \"admin.groupsInvite.errorSendingInvite\";\n          }\n\n          ReactionAlerts.add(error.reason, \"danger\", Object.assign({}, alertOptions, {\n            i18nKey: messageKey\n          }));\n        }\n\n        if (result) {\n          _this2.setState({\n            name: \"\",\n            email: \"\"\n          });\n\n          Alerts.toast(i18next.t(\"accountsUI.info.invitationSent\"), \"success\");\n        }\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  _proto.renderDropDownButton = function () {\n    function renderDropDownButton() {\n      var group = this.state.group;\n\n      if (!group._id) {\n        return null;\n      }\n\n      var buttonElement = function (opt) {\n        return React.createElement(Components.Button, {\n          bezelStyle: \"solid\",\n          label: group.name && _startCase(group.name)\n        }, \"\\xA0\", opt && opt.length && // add icon only if there's a list of options\n        React.createElement(\"i\", {\n          className: \"fa fa-chevron-down\"\n        }));\n      }; // current selected option and \"owner\" should not show in list options\n\n\n      var dropOptions = this.state.groups.filter(function (grp) {\n        return grp._id !== group._id;\n      });\n\n      if (!dropOptions.length) {\n        return buttonElement();\n      } // do not use dropdown if only one option\n\n\n      return React.createElement(Components.DropDownMenu, {\n        buttonElement: buttonElement(dropOptions),\n        onChange: this.handleGroupSelect,\n        attachment: \"top right\",\n        targetAttachment: \"bottom right\"\n      }, dropOptions.map(function (grp, index) {\n        return React.createElement(Components.MenuItem, {\n          key: index,\n          label: _startCase(grp.name),\n          selectLabel: _startCase(grp.name),\n          value: grp\n        });\n      }));\n    }\n\n    return renderDropDownButton;\n  }();\n\n  _proto.renderForm = function () {\n    function renderForm() {\n      return React.createElement(\"div\", {\n        className: \"admin-invite-form\"\n      }, React.createElement(Components.Alerts, {\n        placement: this.state.alertId,\n        id: this.state.alertId,\n        onAlertRemove: this.removeAlert\n      }), React.createElement(\"div\", {\n        className: \"panel-body\"\n      }, React.createElement(\"form\", {\n        className: \"\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(Components.TextField, {\n        i18nKeyLabel: \"accountsUI.name\",\n        label: \"Name\",\n        name: \"name\",\n        id: \"member-form-name\",\n        type: \"text\",\n        i18nKeyPlaceholder: \"admin.groupsInvite.name\",\n        value: this.state.name,\n        onChange: this.onChange\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(Components.TextField, {\n        i18nKeyLabel: \"accountsUI.email\",\n        label: \"Email\",\n        name: \"email\",\n        id: \"member-form-email\",\n        type: \"text\",\n        i18nKeyPlaceholder: \"admin.groupsInvite.email\",\n        value: this.state.email,\n        onChange: this.onChange\n      })), React.createElement(\"div\", {\n        className: \"form-group action-select\"\n      }, this.renderDropDownButton(), React.createElement(\"div\", {\n        className: \"form-btns add-admin justify\"\n      }, React.createElement(Components.Button, {\n        status: \"primary\",\n        buttonType: \"submit\",\n        onClick: this.handleSubmit,\n        bezelStyle: \"solid\",\n        i18nKeyLabel: \"accountsUI.info.sendInvitation\",\n        label: \"Send Invitation\"\n      }))))));\n    }\n\n    return renderForm;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {\n        actAsExpander: true,\n        \"data-i18n\": \"accountsUI.info.addAdminUser\",\n        title: \"Add Admin User\",\n        id: \"accounts\"\n      }), React.createElement(Components.CardBody, {\n        expandable: true\n      }, this.renderForm()));\n    }\n\n    return render;\n  }();\n\n  return AdminInviteForm;\n}(Component);\n\nAdminInviteForm.propTypes = {\n  canInviteToGroup: PropTypes.func,\n  groups: PropTypes.array\n};\nregisterComponent(\"AdminInviteForm\", AdminInviteForm);\nmodule.exportDefault(AdminInviteForm);","map":{"version":3,"sources":["imports/plugins/core/accounts/client/components/adminInviteForm.js"],"names":["_startCase","module","watch","require","v","_isEqual","Meteor","React","Component","PropTypes","Components","registerComponent","ReactionAlerts","Reaction","i18next","getDefaultUserInviteGroup","AdminInviteForm","props","handleGroupSelect","event","group","setState","removeAlert","oldAlert","alertArray","state","filter","alert","groups","alertId","name","email","onChange","bind","handleSubmit","componentWillReceiveProps","nextProps","target","value","preventDefault","alertOptions","placement","id","autoHide","_id","add","Object","assign","i18nKey","options","shopId","getShopId","groupId","call","error","result","messageKey","reason","Alerts","toast","t","renderDropDownButton","buttonElement","opt","length","dropOptions","grp","map","index","renderForm","render","propTypes","canInviteToGroup","func","array","exportDefault"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Components, registerComponent } from \"@reactioncommerce/reaction-components\";\nimport ReactionAlerts from \"/imports/plugins/core/layout/client/templates/layout/alerts/inlineAlerts\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { getDefaultUserInviteGroup } from \"../helpers/accountsHelper\";\n\n/**\n * @summary React component to display admin invite form\n * @memberof Accounts\n * @extends {Component}\n * @property {Function} canInviteToGroup\n * @property {Array} groups\n */\nclass AdminInviteForm extends Component {\n  static propTypes = {\n    canInviteToGroup: PropTypes.func,\n    groups: PropTypes.array\n  };\n\n  constructor(props) {\n    super(props);\n    const { groups } = props;\n\n    this.state = {\n      alertId: \"admin-invite-form\",\n      groups,\n      name: \"\",\n      email: \"\",\n      group: getDefaultUserInviteGroup(groups)\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { groups } = nextProps;\n    this.setState({ groups, group: getDefaultUserInviteGroup(groups) });\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleGroupSelect = (event, group) => {\n    this.setState({ group });\n  };\n\n  removeAlert = (oldAlert) => this.setState({\n    alertArray: this.state.alertArray.filter((alert) => !_.isEqual(alert, oldAlert))\n  });\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { name, email, group, alertId } = this.state;\n    const alertOptions = { placement: alertId, id: alertId, autoHide: 4000 };\n\n    // if no group is selected, show alert that group is required to send invitation\n    if (!group._id) {\n      return ReactionAlerts.add(\n        \"A group is required to invite an admin\",\n        \"danger\",\n        Object.assign({}, alertOptions, { i18nKey: \"admin.groupsInvite.groupRequired\" })\n      );\n    }\n\n    const options = { email, name, shopId: Reaction.getShopId(), groupId: group._id };\n    return Meteor.call(\"accounts/inviteShopMember\", options, (error, result) => {\n      if (error) {\n        let messageKey;\n        // switching to use of package i18n keys (groupsInvite. namespace)\n        if (error.reason === \"Unable to send invitation email.\") {\n          messageKey = \"admin.groupsInvite.unableToSendInvitationEmail\";\n        } else if (error.reason === \"cannot directly invite owner\") {\n          messageKey = \"admin.groupsInvite.inviteOwnerError\";\n        } else if (error.reason === \"cannot invite to group\") {\n          messageKey = \"admin.groupsInvite.cannotInvite\";\n        } else if (error.reason === \"Need to set a username or email\") {\n          messageKey = \"admin.groupsInvite.NeedToSetUsernameOrEmail\";\n        } else {\n          messageKey = \"admin.groupsInvite.errorSendingInvite\";\n        }\n        ReactionAlerts.add(error.reason, \"danger\", Object.assign({}, alertOptions, { i18nKey: messageKey }));\n      }\n\n      if (result) {\n        this.setState({ name: \"\", email: \"\" });\n        Alerts.toast(i18next.t(\"accountsUI.info.invitationSent\"), \"success\");\n      }\n    });\n  }\n\n  renderDropDownButton() {\n    const { group } = this.state;\n\n    if (!group._id) {\n      return null;\n    }\n    const buttonElement = (opt) => (\n      <Components.Button bezelStyle=\"solid\" label={group.name && _.startCase(group.name)} >\n        &nbsp;\n        {opt && opt.length && // add icon only if there's a list of options\n          <i className=\"fa fa-chevron-down\" />\n        }\n      </Components.Button>\n    );\n\n    // current selected option and \"owner\" should not show in list options\n    const dropOptions = this.state.groups.filter((grp) => grp._id !== group._id);\n    if (!dropOptions.length) { return buttonElement(); } // do not use dropdown if only one option\n\n    return (\n      <Components.DropDownMenu\n        buttonElement={buttonElement(dropOptions)}\n        onChange={this.handleGroupSelect}\n        attachment=\"top right\"\n        targetAttachment=\"bottom right\"\n      >\n        {dropOptions\n          .map((grp, index) => (\n            <Components.MenuItem\n              key={index}\n              label={_.startCase(grp.name)}\n              selectLabel={_.startCase(grp.name)}\n              value={grp}\n            />\n          ))}\n      </Components.DropDownMenu>\n    );\n  }\n\n  renderForm() {\n    return (\n      <div className=\"admin-invite-form\">\n        <Components.Alerts placement={this.state.alertId} id={this.state.alertId} onAlertRemove={this.removeAlert} />\n        <div className=\"panel-body\">\n          <form className=\"\">\n            <div className=\"form-group\">\n              <Components.TextField\n                i18nKeyLabel=\"accountsUI.name\"\n                label=\"Name\"\n                name=\"name\"\n                id=\"member-form-name\"\n                type=\"text\"\n                i18nKeyPlaceholder=\"admin.groupsInvite.name\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <Components.TextField\n                i18nKeyLabel=\"accountsUI.email\"\n                label=\"Email\"\n                name=\"email\"\n                id=\"member-form-email\"\n                type=\"text\"\n                i18nKeyPlaceholder=\"admin.groupsInvite.email\"\n                value={this.state.email}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className=\"form-group action-select\">\n              {this.renderDropDownButton()}\n              <div className=\"form-btns add-admin justify\">\n                <Components.Button\n                  status=\"primary\"\n                  buttonType=\"submit\"\n                  onClick={this.handleSubmit}\n                  bezelStyle=\"solid\"\n                  i18nKeyLabel=\"accountsUI.info.sendInvitation\"\n                  label=\"Send Invitation\"\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Components.Card>\n        <Components.CardHeader\n          actAsExpander={true}\n          data-i18n=\"accountsUI.info.addAdminUser\"\n          title=\"Add Admin User\"\n          id=\"accounts\"\n        />\n        <Components.CardBody expandable={true}>\n          {this.renderForm()}\n        </Components.CardBody>\n      </Components.Card>\n    );\n  }\n}\n\nregisterComponent(\"AdminInviteForm\", AdminInviteForm);\n\nexport default AdminInviteForm;\n"]},"sourceType":"script","hash":"2f50fdb3751cb81660a7ecb8b749335d06cbcc49"}
