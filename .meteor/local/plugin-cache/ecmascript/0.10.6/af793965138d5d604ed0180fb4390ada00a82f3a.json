{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/product-variant/components/productGridItems.js","filename":"imports/plugins/included/product-variant/components/productGridItems.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/product-variant/components/productGridItems.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/product-variant/components/productGridItems.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/product-variant/components/productGridItems.js"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Components;\nmodule.watch(require(\"../../../core/components/lib\"), {\n  Components(v) {\n    Components = v;\n  }\n\n}, 2);\nlet formatPriceString;\nmodule.watch(require(\"../../../../../client/api\"), {\n  formatPriceString(v) {\n    formatPriceString = v;\n  }\n\n}, 3);\n\nclass ProductGridItems extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.handleDoubleClick = event => {\n      this.props.onDoubleClick(event);\n    }, this.handleClick = event => {\n      this.props.onClick(event);\n    }, _temp;\n  }\n\n  renderPinned() {\n    return this.props.positions().pinned ? \"pinned\" : \"\";\n  }\n\n  renderVisible() {\n    return this.props.product.isVisible ? \"\" : \"not-visible\";\n  }\n\n  renderOverlay() {\n    if (this.props.product.isVisible === false) {\n      return React.createElement(\"div\", {\n        className: \"product-grid-overlay\"\n      });\n    }\n  }\n\n  renderMedia() {\n    const {\n      product,\n      productMedia\n    } = this.props;\n    return React.createElement(Components.ProductImage, {\n      displayMedia: () => productMedia.primaryMedia,\n      item: product,\n      size: \"large\",\n      mode: \"span\"\n    });\n  }\n\n  renderAdditionalMedia() {\n    const {\n      isMediumWeight,\n      productMedia\n    } = this.props;\n    if (!isMediumWeight()) return null;\n    const mediaArray = productMedia.additionalMedia;\n    if (!mediaArray || mediaArray.length === 0) return null;\n    return React.createElement(\"div\", {\n      className: `product-additional-images ${this.renderVisible()}`\n    }, mediaArray.map(media => React.createElement(\"span\", {\n      key: media._id,\n      className: \"product-image\",\n      style: {\n        backgroundImage: `url('${media.url({\n          store: \"medium\"\n        })}')`\n      }\n    })), this.renderOverlay());\n  }\n\n  renderNotices() {\n    return React.createElement(\"div\", {\n      className: \"grid-alerts\"\n    }, React.createElement(Components.GridItemNotice, {\n      product: this.props.product\n    }), React.createElement(Components.GridItemControls, {\n      product: this.props.product\n    }));\n  }\n\n  renderGridContent() {\n    return React.createElement(\"div\", {\n      className: \"grid-content\"\n    }, React.createElement(\"a\", {\n      href: this.props.pdpPath(),\n      \"data-event-category\": \"grid\",\n      \"data-event-action\": \"product-click\",\n      \"data-event-label\": \"grid product click\",\n      \"data-event-value\": this.props.product._id,\n      onDoubleClick: this.handleDoubleClick,\n      onClick: this.handleClick\n    }, React.createElement(\"div\", {\n      className: \"overlay\"\n    }, React.createElement(\"div\", {\n      className: \"overlay-title\"\n    }, this.props.product.title), React.createElement(\"div\", {\n      className: \"currency-symbol\"\n    }, formatPriceString(this.props.displayPrice())), this.props.isSearch && React.createElement(\"div\", {\n      className: \"overlay-description\"\n    }, this.props.product.description))));\n  }\n\n  renderHoverClassName() {\n    return this.props.isSearch ? \"item-content\" : \"\";\n  }\n\n  render() {\n    const productItem = React.createElement(\"li\", {\n      className: `product-grid-item ${this.renderPinned()} ${this.props.weightClass()} ${this.props.isSelected()}`,\n      \"data-id\": this.props.product._id,\n      id: this.props.product._id\n    }, React.createElement(\"div\", {\n      className: this.renderHoverClassName()\n    }, React.createElement(\"span\", {\n      className: \"product-grid-item-alerts\"\n    }), React.createElement(\"a\", {\n      className: \"product-grid-item-images\",\n      href: this.props.pdpPath(),\n      \"data-event-category\": \"grid\",\n      \"data-event-label\": \"grid product click\",\n      \"data-event-value\": this.props.product._id,\n      onDoubleClick: this.handleDoubleClick,\n      onClick: this.handleClick\n    }, React.createElement(\"div\", {\n      className: `product-primary-images ${this.renderVisible()}`\n    }, this.renderMedia(), this.renderOverlay()), this.renderAdditionalMedia()), !this.props.isSearch && this.renderNotices(), this.renderGridContent()));\n\n    if (this.props.canEdit) {\n      return this.props.connectDropTarget(this.props.connectDragSource(productItem));\n    }\n\n    return productItem;\n  }\n\n}\n\nProductGridItems.propTypes = {\n  canEdit: PropTypes.bool,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  displayPrice: PropTypes.func,\n  isMediumWeight: PropTypes.func,\n  isSearch: PropTypes.bool,\n  isSelected: PropTypes.func,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  pdpPath: PropTypes.func,\n  positions: PropTypes.func,\n  product: PropTypes.object,\n  productMedia: PropTypes.object,\n  weightClass: PropTypes.func\n};\nProductGridItems.defaultProps = {\n  onClick() {},\n\n  onDoubleClick() {},\n\n  productMedia: {\n    additionalMedia: null,\n    primaryMedia: null\n  }\n};\nmodule.exportDefault(ProductGridItems);","map":{"version":3,"sources":["imports/plugins/included/product-variant/components/productGridItems.js"],"names":["React","Component","module","watch","require","default","v","PropTypes","Components","formatPriceString","ProductGridItems","handleDoubleClick","event","props","onDoubleClick","handleClick","onClick","renderPinned","positions","pinned","renderVisible","product","isVisible","renderOverlay","renderMedia","productMedia","primaryMedia","renderAdditionalMedia","isMediumWeight","mediaArray","additionalMedia","length","map","media","_id","backgroundImage","url","store","renderNotices","renderGridContent","pdpPath","title","displayPrice","isSearch","description","renderHoverClassName","render","productItem","weightClass","isSelected","canEdit","connectDropTarget","connectDragSource","propTypes","bool","func","object","defaultProps","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Components } from \"@reactioncommerce/reaction-components\";\nimport { formatPriceString } from \"/client/api\";\n\nclass ProductGridItems extends Component {\n  static propTypes = {\n    canEdit: PropTypes.bool,\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    displayPrice: PropTypes.func,\n    isMediumWeight: PropTypes.func,\n    isSearch: PropTypes.bool,\n    isSelected: PropTypes.func,\n    onClick: PropTypes.func,\n    onDoubleClick: PropTypes.func,\n    pdpPath: PropTypes.func,\n    positions: PropTypes.func,\n    product: PropTypes.object,\n    productMedia: PropTypes.object,\n    weightClass: PropTypes.func\n  }\n\n  static defaultProps = {\n    onClick() {},\n    onDoubleClick() {},\n    productMedia: {\n      additionalMedia: null,\n      primaryMedia: null\n    }\n  };\n\n  handleDoubleClick = (event) => {\n    this.props.onDoubleClick(event);\n  }\n\n  handleClick = (event) => {\n    this.props.onClick(event);\n  }\n\n  renderPinned() {\n    return this.props.positions().pinned ? \"pinned\" : \"\";\n  }\n\n  renderVisible() {\n    return this.props.product.isVisible ? \"\" : \"not-visible\";\n  }\n\n  renderOverlay() {\n    if (this.props.product.isVisible === false) {\n      return (\n        <div className=\"product-grid-overlay\" />\n      );\n    }\n  }\n\n  renderMedia() {\n    const { product, productMedia } = this.props;\n\n    return (\n      <Components.ProductImage displayMedia={() => productMedia.primaryMedia} item={product} size=\"large\" mode=\"span\" />\n    );\n  }\n\n  renderAdditionalMedia() {\n    const { isMediumWeight, productMedia } = this.props;\n    if (!isMediumWeight()) return null;\n\n    const mediaArray = productMedia.additionalMedia;\n    if (!mediaArray || mediaArray.length === 0) return null;\n\n    return (\n      <div className={`product-additional-images ${this.renderVisible()}`}>\n        {mediaArray.map((media) => (\n          <span\n            key={media._id}\n            className=\"product-image\"\n            style={{ backgroundImage: `url('${media.url({ store: \"medium\" })}')` }}\n          />\n        ))}\n        {this.renderOverlay()}\n      </div>\n    );\n  }\n\n  renderNotices() {\n    return (\n      <div className=\"grid-alerts\">\n        <Components.GridItemNotice product={this.props.product} />\n        <Components.GridItemControls product={this.props.product} />\n      </div>\n\n    );\n  }\n\n  renderGridContent() {\n    return (\n      <div className=\"grid-content\">\n        <a\n          href={this.props.pdpPath()}\n          data-event-category=\"grid\"\n          data-event-action=\"product-click\"\n          data-event-label=\"grid product click\"\n          data-event-value={this.props.product._id}\n          onDoubleClick={this.handleDoubleClick}\n          onClick={this.handleClick}\n        >\n          <div className=\"overlay\">\n            <div className=\"overlay-title\">{this.props.product.title}</div>\n            <div className=\"currency-symbol\">{formatPriceString(this.props.displayPrice())}</div>\n            {this.props.isSearch &&\n                <div className=\"overlay-description\">{this.props.product.description}</div>\n            }\n          </div>\n        </a>\n      </div>\n    );\n  }\n\n  renderHoverClassName() {\n    return this.props.isSearch ? \"item-content\" : \"\";\n  }\n\n  render() {\n    const productItem = (\n      <li\n        className={`product-grid-item ${this.renderPinned()} ${this.props.weightClass()} ${this.props.isSelected()}`}\n        data-id={this.props.product._id}\n        id={this.props.product._id}\n      >\n        <div className={this.renderHoverClassName()}>\n          <span className=\"product-grid-item-alerts\" />\n\n          <a className=\"product-grid-item-images\"\n            href={this.props.pdpPath()}\n            data-event-category=\"grid\"\n            data-event-label=\"grid product click\"\n            data-event-value={this.props.product._id}\n            onDoubleClick={this.handleDoubleClick}\n            onClick={this.handleClick}\n          >\n            <div className={`product-primary-images ${this.renderVisible()}`}>\n              {this.renderMedia()}\n              {this.renderOverlay()}\n            </div>\n\n            {this.renderAdditionalMedia()}\n          </a>\n\n          {!this.props.isSearch && this.renderNotices()}\n          {this.renderGridContent()}\n        </div>\n      </li>\n    );\n\n    if (this.props.canEdit) {\n      return (\n        this.props.connectDropTarget(this.props.connectDragSource(productItem))\n      );\n    }\n\n    return productItem;\n  }\n}\n\nexport default ProductGridItems;\n"]},"sourceType":"script","hash":"af793965138d5d604ed0180fb4390ada00a82f3a"}
