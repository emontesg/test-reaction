{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/product-variant/containers/productGridItemsContainer.js","filename":"imports/plugins/included/product-variant/containers/productGridItemsContainer.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/product-variant/containers/productGridItemsContainer.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/product-variant/containers/productGridItemsContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/product-variant/containers/productGridItemsContainer.js"}},"code":"var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/extends\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet _compose;\n\nmodule.watch(require(\"recompose/compose\"), {\n  default(v) {\n    _compose = v;\n  }\n\n}, 0);\n\nlet _max;\n\nmodule.watch(require(\"lodash/max\"), {\n  default(v) {\n    _max = v;\n  }\n\n}, 1);\n\nlet _min;\n\nmodule.watch(require(\"lodash/min\"), {\n  default(v) {\n    _min = v;\n  }\n\n}, 2);\n\nlet _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  default(v) {\n    _includes = v;\n  }\n\n}, 3);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 4);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 5);\nlet registerComponent;\nmodule.watch(require(\"../../../core/components/lib\"), {\n  registerComponent(v) {\n    registerComponent = v;\n  }\n\n}, 6);\nlet Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session(v) {\n    Session = v;\n  }\n\n}, 7);\nlet Reaction;\nmodule.watch(require(\"../../../../../client/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 8);\nlet ReactionProduct;\nmodule.watch(require(\"../../../../../lib/api\"), {\n  ReactionProduct(v) {\n    ReactionProduct = v;\n  }\n\n}, 9);\nlet SortableItem;\nmodule.watch(require(\"../../../core/ui/client/containers\"), {\n  SortableItem(v) {\n    SortableItem = v;\n  }\n\n}, 10);\nlet ProductGridItems;\nmodule.watch(require(\"../components/productGridItems\"), {\n  default(v) {\n    ProductGridItems = v;\n  }\n\n}, 11);\n\nconst wrapComponent = Comp => {\n  var _class, _temp2;\n\n  return _temp2 = _class = class ProductGridItemsContainer extends Component {\n    constructor(...args) {\n      var _temp;\n\n      return _temp = super(...args), this.onPageClick = event => {\n        // Do nothing if we are in preview mode\n        if (Reaction.isPreview() === false) {\n          // Don't trigger the clear selection if we're clicking on a grid item.\n          if (event.target.closest(\".product-grid-item\") === null) {\n            const selectedProducts = Session.get(\"productGrid/selectedProducts\"); // Do we have any selected products?\n            // If we do then lets reset the Grid Settings ActionView\n\n            if (Array.isArray(selectedProducts) && selectedProducts.length) {\n              // Reset sessions ver of selected products\n              Session.set(\"productGrid/selectedProducts\", []); // Reset the action view of selected products\n\n              Reaction.setActionView({\n                label: \"Grid Settings\",\n                i18nKeyLabel: \"gridSettingsPanel.title\",\n                template: \"productSettings\",\n                type: \"product\",\n                data: {}\n              });\n            }\n          }\n        }\n      }, this.productPath = () => {\n        if (this.props.product) {\n          let {\n            handle\n          } = this.props.product;\n\n          if (this.props.product.__published) {\n            ({\n              handle\n            } = this.props.product.__published);\n          }\n\n          return Reaction.Router.pathFor(\"product\", {\n            hash: {\n              handle\n            }\n          });\n        }\n\n        return \"/\";\n      }, this.positions = () => {\n        const tag = ReactionProduct.getTag();\n        return this.props.product.positions && this.props.product.positions[tag] || {};\n      }, this.weightClass = () => {\n        const positions = this.positions();\n        const weight = positions.weight || 0;\n\n        switch (weight) {\n          case 1:\n            return \"product-medium\";\n\n          case 2:\n            return \"product-large\";\n\n          default:\n            return \"product-small\";\n        }\n      }, this.isSelected = () => {\n        if (Reaction.isPreview() === false) {\n          return _includes(Session.get(\"productGrid/selectedProducts\"), this.props.product._id) ? \"active\" : \"\";\n        }\n\n        return false;\n      }, this.isMediumWeight = () => {\n        const positions = this.positions();\n        const weight = positions.weight || 0;\n        return weight === 1;\n      }, this.displayPrice = () => {\n        if (this.props.product.price && this.props.product.price.range) {\n          return this.props.product.price.range;\n        }\n      }, this.handleCheckboxSelect = (list, product) => {\n        let checkbox = list.querySelector(`input[type=checkbox][value=\"${product._id}\"]`);\n        const items = document.querySelectorAll(\"li.product-grid-item\");\n        const activeItems = document.querySelectorAll(\"li.product-grid-item.active\");\n        const selected = activeItems.length;\n\n        if (event.shiftKey && selected > 0) {\n          const indexes = [Array.prototype.indexOf.call(items, document.querySelector(`li.product-grid-item[id=\"${product._id}\"]`)), Array.prototype.indexOf.call(items, activeItems[0]), Array.prototype.indexOf.call(items, activeItems[selected - 1])];\n\n          for (let i = _min(indexes); i <= _max(indexes); i += 1) {\n            checkbox = items[i].querySelector(\"input[type=checkbox]\");\n\n            if (checkbox.checked === false) {\n              checkbox.checked = true;\n              this.props.itemSelectHandler(checkbox.checked, product._id);\n            }\n          }\n        } else if (checkbox) {\n          checkbox.checked = !checkbox.checked;\n          this.props.itemSelectHandler(checkbox.checked, product._id);\n        }\n      }, this.onDoubleClick = () => {\n        const {\n          product\n        } = this.props;\n        const handle = product.__published && product.__published.handle || product.handle;\n        Reaction.Router.go(\"product\", {\n          handle\n        }); // Open actionView to productDetails panel\n\n        Reaction.state.set(\"edit/focus\", \"productDetails\");\n        Reaction.setActionView({\n          i18nKeyLabel: \"productDetailEdit.productSettings\",\n          label: \"Product Settings\",\n          template: \"ProductAdmin\"\n        });\n\n        if (this.props.isSearch) {\n          this.props.unmountMe();\n        }\n      }, this.onClick = event => {\n        event.preventDefault();\n        const {\n          product\n        } = this.props;\n\n        if (Reaction.hasPermission(\"createProduct\") && Reaction.isPreview() === false) {\n          if (this.props.isSearch) {\n            let {\n              handle\n            } = product;\n\n            if (product.__published) {\n              ({\n                handle\n              } = product.__published);\n            }\n\n            Reaction.Router.go(\"product\", {\n              handle\n            });\n            this.props.unmountMe();\n          }\n\n          const isSelected = event.target.closest(\"li.product-grid-item.active\");\n          const list = document.getElementById(\"product-grid-list\");\n\n          if (isSelected) {\n            // If a product is already selected, and you are single clicking on another product(s)\n            // WITH command key, the product(s) are added to the selected products Session array\n            this.handleCheckboxSelect(list, product);\n\n            if (event.metaKey || event.ctrlKey || event.shiftKey) {\n              this.handleCheckboxSelect(list, product);\n            }\n          } else if (event.metaKey || event.ctrlKey || event.shiftKey) {\n            this.handleCheckboxSelect(list, product);\n          } else {\n            const checkbox = list.querySelector(`input[type=checkbox][value=\"${product._id}\"]`);\n            Session.set(\"productGrid/selectedProducts\", []);\n\n            if (checkbox) {\n              checkbox.checked = true;\n              this.props.itemSelectHandler(checkbox.checked, product._id);\n            }\n          }\n        } else {\n          const handle = product.__published && product.__published.handle || product.handle;\n          Reaction.Router.go(\"product\", {\n            handle\n          });\n\n          if (this.props.isSearch) {\n            this.props.unmountMe();\n          }\n        }\n      }, _temp;\n    }\n\n    componentDidMount() {\n      document.querySelector(\".page > main\").addEventListener(\"click\", this.onPageClick);\n    }\n\n    componentWillUnmount() {\n      document.querySelector(\".page > main\").removeEventListener(\"click\", this.onPageClick);\n    }\n\n    render() {\n      return React.createElement(Comp, (0, _extends2.default)({\n        product: this.props.product,\n        pdpPath: this.productPath,\n        positions: this.positions,\n        weightClass: this.weightClass,\n        isSelected: this.isSelected,\n        isMediumWeight: this.isMediumWeight,\n        displayPrice: this.displayPrice,\n        onDoubleClick: this.onDoubleClick,\n        onClick: this.onClick\n      }, this.props));\n    }\n\n  }, _class.propTypes = {\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isSearch: PropTypes.bool,\n    itemSelectHandler: PropTypes.func,\n    product: PropTypes.object,\n    unmountMe: PropTypes.func\n  }, _temp2;\n};\n\nregisterComponent(\"ProductGridItems\", ProductGridItems, [SortableItem(\"productGridItem\"), wrapComponent]);\nmodule.exportDefault(_compose(SortableItem(\"productGridItem\"), wrapComponent)(ProductGridItems));","map":{"version":3,"sources":["imports/plugins/included/product-variant/containers/productGridItemsContainer.js"],"names":["_compose","module","watch","require","default","v","_max","_min","_includes","React","Component","PropTypes","registerComponent","Session","Reaction","ReactionProduct","SortableItem","ProductGridItems","wrapComponent","Comp","ProductGridItemsContainer","onPageClick","event","isPreview","target","closest","selectedProducts","get","Array","isArray","length","set","setActionView","label","i18nKeyLabel","template","type","data","productPath","props","product","handle","__published","Router","pathFor","hash","positions","tag","getTag","weightClass","weight","isSelected","_id","isMediumWeight","displayPrice","price","range","handleCheckboxSelect","list","checkbox","querySelector","items","document","querySelectorAll","activeItems","selected","shiftKey","indexes","prototype","indexOf","call","i","checked","itemSelectHandler","onDoubleClick","go","state","isSearch","unmountMe","onClick","preventDefault","hasPermission","getElementById","metaKey","ctrlKey","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","propTypes","connectDragSource","func","connectDropTarget","bool","object","exportDefault"],"mappings":";;;;AAAA,IAAIA,QAAJ;;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,UAAQC,CAAR,EAAU;AAACL,eAASK,CAAT;AAAW;;AAAvB,CAA1C,EAAmE,CAAnE;;AAAsE,IAAIC,IAAJ;;AAASL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACC,WAAKD,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;;AAA2D,IAAIE,IAAJ;;AAASN,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACE,WAAKF,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;;AAA2D,IAAIG,SAAJ;;AAAcP,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACG,gBAAUH,CAAV;AAAY;;AAAxB,CAAxC,EAAkE,CAAlE;AAAqE,IAAII,KAAJ,EAAUC,SAAV;AAAoBT,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACI,YAAMJ,CAAN;AAAQ,GAApB;;AAAqBK,YAAUL,CAAV,EAAY;AAACK,gBAAUL,CAAV;AAAY;;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIM,SAAJ;AAAcV,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACM,gBAAUN,CAAV;AAAY;;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIO,iBAAJ;AAAsBX,OAAOC,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAACS,oBAAkBP,CAAlB,EAAoB;AAACO,wBAAkBP,CAAlB;AAAoB;;AAA1C,CAArD,EAAiG,CAAjG;AAAoG,IAAIQ,OAAJ;AAAYZ,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACU,UAAQR,CAAR,EAAU;AAACQ,cAAQR,CAAR;AAAU;;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIS,QAAJ;AAAab,OAAOC,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACW,WAAST,CAAT,EAAW;AAACS,eAAST,CAAT;AAAW;;AAAxB,CAAlD,EAA4E,CAA5E;AAA+E,IAAIU,eAAJ;AAAoBd,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAACY,kBAAgBV,CAAhB,EAAkB;AAACU,sBAAgBV,CAAhB;AAAkB;;AAAtC,CAA/C,EAAuF,CAAvF;AAA0F,IAAIW,YAAJ;AAAiBf,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACa,eAAaX,CAAb,EAAe;AAACW,mBAAaX,CAAb;AAAe;;AAAhC,CAA3D,EAA6F,EAA7F;AAAiG,IAAIY,gBAAJ;AAAqBhB,OAAOC,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAACC,UAAQC,CAAR,EAAU;AAACY,uBAAiBZ,CAAjB;AAAmB;;AAA/B,CAAvD,EAAwF,EAAxF;;AAW1/B,MAAMa,gBAAiBC,IAAD;AAAA;;AAAA,2BACpB,MAAMC,yBAAN,SAAwCV,SAAxC,CAAkD;AAAA;AAAA;;AAAA,0CAkBhDW,WAlBgD,GAkBjCC,KAAD,IAAW;AACvB;AACA,YAAIR,SAASS,SAAT,OAAyB,KAA7B,EAAoC;AAClC;AACA,cAAID,MAAME,MAAN,CAAaC,OAAb,CAAqB,oBAArB,MAA+C,IAAnD,EAAyD;AACvD,kBAAMC,mBAAmBb,QAAQc,GAAR,CAAY,8BAAZ,CAAzB,CADuD,CAGvD;AACA;;AACA,gBAAIC,MAAMC,OAAN,CAAcH,gBAAd,KAAmCA,iBAAiBI,MAAxD,EAAgE;AAC9D;AACAjB,sBAAQkB,GAAR,CAAY,8BAAZ,EAA4C,EAA5C,EAF8D,CAI9D;;AACAjB,uBAASkB,aAAT,CAAuB;AACrBC,uBAAO,eADc;AAErBC,8BAAc,yBAFO;AAGrBC,0BAAU,iBAHW;AAIrBC,sBAAM,SAJe;AAKrBC,sBAAM;AALe,eAAvB;AAOD;AACF;AACF;AACF,OA1C+C,OA4ChDC,WA5CgD,GA4ClC,MAAM;AAClB,YAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,cAAI;AAAEC;AAAF,cAAa,KAAKF,KAAL,CAAWC,OAA5B;;AAEA,cAAI,KAAKD,KAAL,CAAWC,OAAX,CAAmBE,WAAvB,EAAoC;AAClC,aAAC;AAAED;AAAF,gBAAa,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,WAAjC;AACD;;AAED,iBAAO5B,SAAS6B,MAAT,CAAgBC,OAAhB,CAAwB,SAAxB,EAAmC;AACxCC,kBAAM;AACJJ;AADI;AADkC,WAAnC,CAAP;AAKD;;AAED,eAAO,GAAP;AACD,OA5D+C,OA8DhDK,SA9DgD,GA8DpC,MAAM;AAChB,cAAMC,MAAMhC,gBAAgBiC,MAAhB,EAAZ;AACA,eAAQ,KAAKT,KAAL,CAAWC,OAAX,CAAmBM,SAAnB,IAAgC,KAAKP,KAAL,CAAWC,OAAX,CAAmBM,SAAnB,CAA6BC,GAA7B,CAAjC,IAAuE,EAA9E;AACD,OAjE+C,OAmEhDE,WAnEgD,GAmElC,MAAM;AAClB,cAAMH,YAAY,KAAKA,SAAL,EAAlB;AACA,cAAMI,SAASJ,UAAUI,MAAV,IAAoB,CAAnC;;AACA,gBAAQA,MAAR;AACE,eAAK,CAAL;AACE,mBAAO,gBAAP;;AACF,eAAK,CAAL;AACE,mBAAO,eAAP;;AACF;AACE,mBAAO,eAAP;AANJ;AAQD,OA9E+C,OAgFhDC,UAhFgD,GAgFnC,MAAM;AACjB,YAAIrC,SAASS,SAAT,OAAyB,KAA7B,EAAoC;AAClC,iBAAO,UAAWV,QAAQc,GAAR,CAAY,8BAAZ,CAAX,EAAwD,KAAKY,KAAL,CAAWC,OAAX,CAAmBY,GAA3E,IAAkF,QAAlF,GAA6F,EAApG;AACD;;AACD,eAAO,KAAP;AACD,OArF+C,OAuFhDC,cAvFgD,GAuF/B,MAAM;AACrB,cAAMP,YAAY,KAAKA,SAAL,EAAlB;AACA,cAAMI,SAASJ,UAAUI,MAAV,IAAoB,CAAnC;AAEA,eAAOA,WAAW,CAAlB;AACD,OA5F+C,OA8FhDI,YA9FgD,GA8FjC,MAAM;AACnB,YAAI,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,KAAnB,IAA4B,KAAKhB,KAAL,CAAWC,OAAX,CAAmBe,KAAnB,CAAyBC,KAAzD,EAAgE;AAC9D,iBAAO,KAAKjB,KAAL,CAAWC,OAAX,CAAmBe,KAAnB,CAAyBC,KAAhC;AACD;AACF,OAlG+C,OAoGhDC,oBApGgD,GAoGzB,CAACC,IAAD,EAAOlB,OAAP,KAAmB;AACxC,YAAImB,WAAWD,KAAKE,aAAL,CAAoB,+BAA8BpB,QAAQY,GAAI,IAA9D,CAAf;AACA,cAAMS,QAAQC,SAASC,gBAAT,CAA0B,sBAA1B,CAAd;AACA,cAAMC,cAAcF,SAASC,gBAAT,CAA0B,6BAA1B,CAApB;AACA,cAAME,WAAWD,YAAYlC,MAA7B;;AAEA,YAAIR,MAAM4C,QAAN,IAAkBD,WAAW,CAAjC,EAAoC;AAClC,gBAAME,UAAU,CACdvC,MAAMwC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BT,KAA7B,EAAoCC,SAASF,aAAT,CAAwB,4BAA2BpB,QAAQY,GAAI,IAA/D,CAApC,CADc,EAEdxB,MAAMwC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BT,KAA7B,EAAoCG,YAAY,CAAZ,CAApC,CAFc,EAGdpC,MAAMwC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BT,KAA7B,EAAoCG,YAAYC,WAAW,CAAvB,CAApC,CAHc,CAAhB;;AAKA,eAAK,IAAIM,IAAI,KAAMJ,OAAN,CAAb,EAA6BI,KAAK,KAAMJ,OAAN,CAAlC,EAAkDI,KAAK,CAAvD,EAA0D;AACxDZ,uBAAWE,MAAMU,CAAN,EAASX,aAAT,CAAuB,sBAAvB,CAAX;;AACA,gBAAID,SAASa,OAAT,KAAqB,KAAzB,EAAgC;AAC9Bb,uBAASa,OAAT,GAAmB,IAAnB;AACA,mBAAKjC,KAAL,CAAWkC,iBAAX,CAA6Bd,SAASa,OAAtC,EAA+ChC,QAAQY,GAAvD;AACD;AACF;AACF,SAbD,MAaO,IAAIO,QAAJ,EAAc;AACnBA,mBAASa,OAAT,GAAmB,CAACb,SAASa,OAA7B;AACA,eAAKjC,KAAL,CAAWkC,iBAAX,CAA6Bd,SAASa,OAAtC,EAA+ChC,QAAQY,GAAvD;AACD;AACF,OA3H+C,OA6HhDsB,aA7HgD,GA6HhC,MAAM;AACpB,cAAM;AAAElC;AAAF,YAAc,KAAKD,KAAzB;AACA,cAAME,SAAUD,QAAQE,WAAR,IAAuBF,QAAQE,WAAR,CAAoBD,MAA5C,IAAuDD,QAAQC,MAA9E;AAEA3B,iBAAS6B,MAAT,CAAgBgC,EAAhB,CAAmB,SAAnB,EAA8B;AAC5BlC;AAD4B,SAA9B,EAJoB,CAQpB;;AACA3B,iBAAS8D,KAAT,CAAe7C,GAAf,CAAmB,YAAnB,EAAiC,gBAAjC;AAEAjB,iBAASkB,aAAT,CAAuB;AACrBE,wBAAc,mCADO;AAErBD,iBAAO,kBAFc;AAGrBE,oBAAU;AAHW,SAAvB;;AAMA,YAAI,KAAKI,KAAL,CAAWsC,QAAf,EAAyB;AACvB,eAAKtC,KAAL,CAAWuC,SAAX;AACD;AACF,OAjJ+C,OAmJhDC,OAnJgD,GAmJrCzD,KAAD,IAAW;AACnBA,cAAM0D,cAAN;AACA,cAAM;AAAExC;AAAF,YAAc,KAAKD,KAAzB;;AAEA,YAAIzB,SAASmE,aAAT,CAAuB,eAAvB,KAA2CnE,SAASS,SAAT,OAAyB,KAAxE,EAA+E;AAC7E,cAAI,KAAKgB,KAAL,CAAWsC,QAAf,EAAyB;AACvB,gBAAI;AAAEpC;AAAF,gBAAaD,OAAjB;;AACA,gBAAIA,QAAQE,WAAZ,EAAyB;AACvB,eAAC;AAAED;AAAF,kBAAaD,QAAQE,WAAtB;AACD;;AAED5B,qBAAS6B,MAAT,CAAgBgC,EAAhB,CAAmB,SAAnB,EAA8B;AAC5BlC;AAD4B,aAA9B;AAIA,iBAAKF,KAAL,CAAWuC,SAAX;AACD;;AAED,gBAAM3B,aAAa7B,MAAME,MAAN,CAAaC,OAAb,CAAqB,6BAArB,CAAnB;AACA,gBAAMiC,OAAOI,SAASoB,cAAT,CAAwB,mBAAxB,CAAb;;AAEA,cAAI/B,UAAJ,EAAgB;AACd;AACA;AACA,iBAAKM,oBAAL,CAA0BC,IAA1B,EAAgClB,OAAhC;;AACA,gBAAIlB,MAAM6D,OAAN,IAAiB7D,MAAM8D,OAAvB,IAAkC9D,MAAM4C,QAA5C,EAAsD;AACpD,mBAAKT,oBAAL,CAA0BC,IAA1B,EAAgClB,OAAhC;AACD;AACF,WAPD,MAOO,IAAIlB,MAAM6D,OAAN,IAAiB7D,MAAM8D,OAAvB,IAAkC9D,MAAM4C,QAA5C,EAAsD;AAC3D,iBAAKT,oBAAL,CAA0BC,IAA1B,EAAgClB,OAAhC;AACD,WAFM,MAEA;AACL,kBAAMmB,WAAWD,KAAKE,aAAL,CAAoB,+BAA8BpB,QAAQY,GAAI,IAA9D,CAAjB;AACAvC,oBAAQkB,GAAR,CAAY,8BAAZ,EAA4C,EAA5C;;AACA,gBAAI4B,QAAJ,EAAc;AACZA,uBAASa,OAAT,GAAmB,IAAnB;AACA,mBAAKjC,KAAL,CAAWkC,iBAAX,CAA6Bd,SAASa,OAAtC,EAA+ChC,QAAQY,GAAvD;AACD;AACF;AACF,SAlCD,MAkCO;AACL,gBAAMX,SAAUD,QAAQE,WAAR,IAAuBF,QAAQE,WAAR,CAAoBD,MAA5C,IAAuDD,QAAQC,MAA9E;AAEA3B,mBAAS6B,MAAT,CAAgBgC,EAAhB,CAAmB,SAAnB,EAA8B;AAC5BlC;AAD4B,WAA9B;;AAIA,cAAI,KAAKF,KAAL,CAAWsC,QAAf,EAAyB;AACvB,iBAAKtC,KAAL,CAAWuC,SAAX;AACD;AACF;AACF,OApM+C;AAAA;;AAUhDO,wBAAoB;AAClBvB,eAASF,aAAT,CAAuB,cAAvB,EAAuC0B,gBAAvC,CAAwD,OAAxD,EAAiE,KAAKjE,WAAtE;AACD;;AAEDkE,2BAAuB;AACrBzB,eAASF,aAAT,CAAuB,cAAvB,EAAuC4B,mBAAvC,CAA2D,OAA3D,EAAoE,KAAKnE,WAAzE;AACD;;AAsLDoE,aAAS;AACP,aACE,oBAAC,IAAD;AACE,iBAAS,KAAKlD,KAAL,CAAWC,OADtB;AAEE,iBAAS,KAAKF,WAFhB;AAGE,mBAAW,KAAKQ,SAHlB;AAIE,qBAAa,KAAKG,WAJpB;AAKE,oBAAY,KAAKE,UALnB;AAME,wBAAgB,KAAKE,cANvB;AAOE,sBAAc,KAAKC,YAPrB;AAQE,uBAAe,KAAKoB,aARtB;AASE,iBAAS,KAAKK;AAThB,SAUM,KAAKxC,KAVX,EADF;AAcD;;AArN+C,GAD9B,SAEXmD,SAFW,GAEC;AACjBC,uBAAmBhF,UAAUiF,IADZ;AAEjBC,uBAAmBlF,UAAUiF,IAFZ;AAGjBf,cAAUlE,UAAUmF,IAHH;AAIjBrB,uBAAmB9D,UAAUiF,IAJZ;AAKjBpD,aAAS7B,UAAUoF,MALF;AAMjBjB,eAAWnE,UAAUiF;AANJ,GAFD;AAAA,CAAtB;;AA0NAhF,kBAAkB,kBAAlB,EAAsCK,gBAAtC,EAAwD,CACtDD,aAAa,iBAAb,CADsD,EAEtDE,aAFsD,CAAxD;AArOAjB,OAAO+F,aAAP,CA0Oe,SACbhF,aAAa,iBAAb,CADa,EAEbE,aAFa,EAGbD,gBAHa,CA1Of","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { compose } from \"recompose\";\nimport { registerComponent } from \"@reactioncommerce/reaction-components\";\nimport { Session } from \"meteor/session\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { SortableItem } from \"/imports/plugins/core/ui/client/containers\";\nimport ProductGridItems from \"../components/productGridItems\";\n\nconst wrapComponent = (Comp) => (\n  class ProductGridItemsContainer extends Component {\n    static propTypes = {\n      connectDragSource: PropTypes.func,\n      connectDropTarget: PropTypes.func,\n      isSearch: PropTypes.bool,\n      itemSelectHandler: PropTypes.func,\n      product: PropTypes.object,\n      unmountMe: PropTypes.func\n    }\n\n    componentDidMount() {\n      document.querySelector(\".page > main\").addEventListener(\"click\", this.onPageClick);\n    }\n\n    componentWillUnmount() {\n      document.querySelector(\".page > main\").removeEventListener(\"click\", this.onPageClick);\n    }\n\n    onPageClick = (event) => {\n      // Do nothing if we are in preview mode\n      if (Reaction.isPreview() === false) {\n        // Don't trigger the clear selection if we're clicking on a grid item.\n        if (event.target.closest(\".product-grid-item\") === null) {\n          const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n          // Do we have any selected products?\n          // If we do then lets reset the Grid Settings ActionView\n          if (Array.isArray(selectedProducts) && selectedProducts.length) {\n            // Reset sessions ver of selected products\n            Session.set(\"productGrid/selectedProducts\", []);\n\n            // Reset the action view of selected products\n            Reaction.setActionView({\n              label: \"Grid Settings\",\n              i18nKeyLabel: \"gridSettingsPanel.title\",\n              template: \"productSettings\",\n              type: \"product\",\n              data: {}\n            });\n          }\n        }\n      }\n    }\n\n    productPath = () => {\n      if (this.props.product) {\n        let { handle } = this.props.product;\n\n        if (this.props.product.__published) {\n          ({ handle } = this.props.product.__published);\n        }\n\n        return Reaction.Router.pathFor(\"product\", {\n          hash: {\n            handle\n          }\n        });\n      }\n\n      return \"/\";\n    }\n\n    positions = () => {\n      const tag = ReactionProduct.getTag();\n      return (this.props.product.positions && this.props.product.positions[tag]) || {};\n    }\n\n    weightClass = () => {\n      const positions = this.positions();\n      const weight = positions.weight || 0;\n      switch (weight) {\n        case 1:\n          return \"product-medium\";\n        case 2:\n          return \"product-large\";\n        default:\n          return \"product-small\";\n      }\n    }\n\n    isSelected = () => {\n      if (Reaction.isPreview() === false) {\n        return _.includes(Session.get(\"productGrid/selectedProducts\"), this.props.product._id) ? \"active\" : \"\";\n      }\n      return false;\n    }\n\n    isMediumWeight = () => {\n      const positions = this.positions();\n      const weight = positions.weight || 0;\n\n      return weight === 1;\n    }\n\n    displayPrice = () => {\n      if (this.props.product.price && this.props.product.price.range) {\n        return this.props.product.price.range;\n      }\n    }\n\n    handleCheckboxSelect = (list, product) => {\n      let checkbox = list.querySelector(`input[type=checkbox][value=\"${product._id}\"]`);\n      const items = document.querySelectorAll(\"li.product-grid-item\");\n      const activeItems = document.querySelectorAll(\"li.product-grid-item.active\");\n      const selected = activeItems.length;\n\n      if (event.shiftKey && selected > 0) {\n        const indexes = [\n          Array.prototype.indexOf.call(items, document.querySelector(`li.product-grid-item[id=\"${product._id}\"]`)),\n          Array.prototype.indexOf.call(items, activeItems[0]),\n          Array.prototype.indexOf.call(items, activeItems[selected - 1])\n        ];\n        for (let i = _.min(indexes); i <= _.max(indexes); i += 1) {\n          checkbox = items[i].querySelector(\"input[type=checkbox]\");\n          if (checkbox.checked === false) {\n            checkbox.checked = true;\n            this.props.itemSelectHandler(checkbox.checked, product._id);\n          }\n        }\n      } else if (checkbox) {\n        checkbox.checked = !checkbox.checked;\n        this.props.itemSelectHandler(checkbox.checked, product._id);\n      }\n    }\n\n    onDoubleClick = () => {\n      const { product } = this.props;\n      const handle = (product.__published && product.__published.handle) || product.handle;\n\n      Reaction.Router.go(\"product\", {\n        handle\n      });\n\n      // Open actionView to productDetails panel\n      Reaction.state.set(\"edit/focus\", \"productDetails\");\n\n      Reaction.setActionView({\n        i18nKeyLabel: \"productDetailEdit.productSettings\",\n        label: \"Product Settings\",\n        template: \"ProductAdmin\"\n      });\n\n      if (this.props.isSearch) {\n        this.props.unmountMe();\n      }\n    }\n\n    onClick = (event) => {\n      event.preventDefault();\n      const { product } = this.props;\n\n      if (Reaction.hasPermission(\"createProduct\") && Reaction.isPreview() === false) {\n        if (this.props.isSearch) {\n          let { handle } = product;\n          if (product.__published) {\n            ({ handle } = product.__published);\n          }\n\n          Reaction.Router.go(\"product\", {\n            handle\n          });\n\n          this.props.unmountMe();\n        }\n\n        const isSelected = event.target.closest(\"li.product-grid-item.active\");\n        const list = document.getElementById(\"product-grid-list\");\n\n        if (isSelected) {\n          // If a product is already selected, and you are single clicking on another product(s)\n          // WITH command key, the product(s) are added to the selected products Session array\n          this.handleCheckboxSelect(list, product);\n          if (event.metaKey || event.ctrlKey || event.shiftKey) {\n            this.handleCheckboxSelect(list, product);\n          }\n        } else if (event.metaKey || event.ctrlKey || event.shiftKey) {\n          this.handleCheckboxSelect(list, product);\n        } else {\n          const checkbox = list.querySelector(`input[type=checkbox][value=\"${product._id}\"]`);\n          Session.set(\"productGrid/selectedProducts\", []);\n          if (checkbox) {\n            checkbox.checked = true;\n            this.props.itemSelectHandler(checkbox.checked, product._id);\n          }\n        }\n      } else {\n        const handle = (product.__published && product.__published.handle) || product.handle;\n\n        Reaction.Router.go(\"product\", {\n          handle\n        });\n\n        if (this.props.isSearch) {\n          this.props.unmountMe();\n        }\n      }\n    }\n\n    render() {\n      return (\n        <Comp\n          product={this.props.product}\n          pdpPath={this.productPath}\n          positions={this.positions}\n          weightClass={this.weightClass}\n          isSelected={this.isSelected}\n          isMediumWeight={this.isMediumWeight}\n          displayPrice={this.displayPrice}\n          onDoubleClick={this.onDoubleClick}\n          onClick={this.onClick}\n          {...this.props}\n        />\n      );\n    }\n  }\n);\n\nregisterComponent(\"ProductGridItems\", ProductGridItems, [\n  SortableItem(\"productGridItem\"),\n  wrapComponent\n]);\n\nexport default compose(\n  SortableItem(\"productGridItem\"),\n  wrapComponent\n)(ProductGridItems);\n"]},"sourceType":"script","hash":"dbaf8f7e2ca16b2927dbb1f899cc7b780a441bf8"}
