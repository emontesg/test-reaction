{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/product-variant/components/variantForm.js","filename":"imports/plugins/included/product-variant/components/variantForm.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/product-variant/components/variantForm.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/product-variant/components/variantForm.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/product-variant/components/variantForm.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet _isEqual;\n\nmodule.watch(require(\"lodash/isEqual\"), {\n  default(v) {\n    _isEqual = v;\n  }\n\n}, 0);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet classnames;\nmodule.watch(require(\"classnames\"), {\n  default(v) {\n    classnames = v;\n  }\n\n}, 3);\nlet Velocity;\nmodule.watch(require(\"velocity-animate\"), {\n  default(v) {\n    Velocity = v;\n  }\n\n}, 4);\nmodule.watch(require(\"velocity-animate/velocity.ui\"));\nlet Components;\nmodule.watch(require(\"../../../core/components/lib\"), {\n  Components(v) {\n    Components = v;\n  }\n\n}, 5);\nlet findCurrency;\nmodule.watch(require(\"../../../../../client/api\"), {\n  findCurrency(v) {\n    findCurrency = v;\n  }\n\n}, 6);\nconst fieldNames = [\"title\", \"originCountry\", \"compareAtPrice\", \"price\", \"width\", \"length\", \"height\", \"weight\", \"taxCode\", \"taxDescription\", \"inventoryQuantity\", \"inventoryPolicy\", \"lowInventoryWarningThreshold\"];\nconst fieldGroups = {\n  title: {\n    group: \"variantDetails\"\n  },\n  originCountry: {\n    group: \"variantDetails\"\n  },\n  compareAtPrice: {\n    group: \"variantDetails\"\n  },\n  price: {\n    group: \"variantDetails\"\n  },\n  width: {\n    group: \"variantDetails\"\n  },\n  length: {\n    group: \"variantDetails\"\n  },\n  height: {\n    group: \"variantDetails\"\n  },\n  weight: {\n    group: \"variantDetails\"\n  },\n  taxCode: {\n    group: \"taxable\"\n  },\n  taxDescription: {\n    group: \"taxable\"\n  },\n  inventoryQuantity: {\n    group: \"inventoryManagement\"\n  },\n  inventoryPolicy: {\n    group: \"inventoryManagement\"\n  },\n  lowInventoryWarningThreshold: {\n    group: \"inventoryManagement\"\n  }\n};\n\nclass VariantForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = (event, value, field) => {\n      this.setState(({\n        variant\n      }) => ({\n        variant: (0, _objectSpread2.default)({}, variant, {\n          [field]: value\n        })\n      }));\n    };\n\n    this.handleFieldBlur = (event, value, field) => {\n      if (this.props.onVariantFieldSave) {\n        this.props.onVariantFieldSave(this.variant._id, field, value, this.state.variant);\n      }\n    };\n\n    this.handleSelectChange = (value, field) => {\n      this.setState(({\n        variant\n      }) => ({\n        variant: (0, _objectSpread2.default)({}, variant, {\n          [field]: value\n        })\n      }), () => {\n        if (this.props.onVariantFieldSave) {\n          this.props.onVariantFieldSave(this.variant._id, field, value, this.state.variant);\n        }\n      });\n    };\n\n    this.handleCheckboxChange = (event, value, field) => {\n      this.setState(({\n        variant\n      }) => ({\n        variant: (0, _objectSpread2.default)({}, variant, {\n          [field]: value\n        })\n      }));\n      this.handleFieldBlur(event, value, field);\n    };\n\n    this.handleInventoryPolicyChange = (event, value, field) => {\n      /*\n      Due to some confusing verbiage on how inventoryPolicy works / is displayed, we need to handle this field\n      differently than we handle the other checkboxes in this component. Specifically, we display the opposite value of\n      what the actual field value is. Because this is a checkbox, that means that the opposite value is actually the\n      field value as well, not just a display value, so we need to reverse the boolean value when it gets passed into\n      this function before we send it to the server to update the data. Other than reversing the value, this function\n      is the same as `handleCheckboxChange`.\n      */\n      const inverseValue = !value;\n      this.setState(({\n        variant\n      }) => ({\n        variant: (0, _objectSpread2.default)({}, variant, {\n          [field]: inverseValue\n        })\n      }));\n      this.handleFieldBlur(event, inverseValue, field);\n    };\n\n    this.handleCardExpand = (event, card, cardName, isExpanded) => {\n      if (typeof this.props.onCardExpand === \"function\") {\n        this.props.onCardExpand(isExpanded ? cardName : undefined);\n      }\n    };\n\n    this.handleVariantVisibilityToggle = variant => this.props.onVisibilityButtonClick(variant);\n\n    this.isExpanded = groupName => this.state.expandedCard === groupName;\n\n    this.state = {\n      expandedCard: props.editFocus,\n      variant: props.variant,\n      inventoryPolicy: props.variant.inventoryPolicy,\n      taxable: props.variant.taxable,\n      inventoryManagement: props.variant.inventoryManagement\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextVariant = nextProps.variant || {};\n    const currentVariant = this.state.variant || {};\n\n    if (_isEqual(nextVariant, currentVariant) === false) {\n      for (const fieldName of fieldNames) {\n        if (nextVariant[fieldName] !== currentVariant[fieldName]) {\n          if (fieldName !== \"taxCode\") {\n            this.animateFieldFlash(fieldName);\n          }\n        }\n      }\n\n      this.setState({\n        expandedCard: nextProps.editFocus,\n        inventoryManagement: nextProps.variant.inventoryManagement,\n        inventoryPolicy: nextProps.variant.inventoryPolicy,\n        taxable: nextProps.variant.taxable,\n        variant: nextProps.variant\n      });\n    }\n\n    this.setState({\n      expandedCard: nextProps.editFocus\n    });\n  }\n\n  fieldGroupForFieldName(field) {\n    // Other wise, if a field was passed\n    // const fieldName = this.state.viewProps.field;\n    let fieldName; // If the field is an array of field name\n\n    if (Array.isArray(field) && field.length) {\n      // Use the first field name\n      [fieldName] = field;\n    } else {\n      fieldName = field;\n    }\n\n    const fieldData = fieldGroups[fieldName];\n\n    if (fieldData && fieldData.group) {\n      return fieldData.group;\n    }\n\n    return fieldName;\n  }\n\n  animateFieldFlash(fieldName) {\n    const fieldRef = this.refs[`${fieldName}Input`];\n\n    if (fieldRef) {\n      const {\n        input\n      } = fieldRef.refs;\n      const isFieldValid = this.props.validation.isFieldValid(fieldName);\n      const flashColor = isFieldValid ? \"#f0fff4\" : \"#ffeeef\";\n      Velocity.RunSequence([{\n        e: input,\n        p: {\n          backgroundColor: flashColor\n        },\n        o: {\n          duration: 200\n        }\n      }, {\n        e: input,\n        p: {\n          backgroundColor: \"#fff\"\n        },\n        o: {\n          duration: 100\n        }\n      }]);\n    }\n  }\n\n  get variant() {\n    return this.state.variant || this.props.variant || {};\n  }\n\n  renderTaxCodeField() {\n    if (this.props.isProviderEnabled()) {\n      return React.createElement(Components.Select, {\n        clearable: false,\n        i18nKeyLabel: \"productVariant.taxCode\",\n        i18nKeyPlaceholder: \"productVariant.selectTaxCode\",\n        label: \"Tax Code\",\n        name: \"taxCode\",\n        ref: \"taxCodeInput\",\n        options: this.props.fetchTaxCodes(),\n        onChange: this.handleSelectChange,\n        value: this.variant.taxCode\n      });\n    }\n\n    return React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.taxCode\",\n      i18nKeyPlaceholder: \"productVariant.selectTaxCode\",\n      placeholder: \"Select Tax Code\",\n      label: \"Tax Code\",\n      name: \"taxCode\",\n      ref: \"taxCodeInput\",\n      value: this.variant.taxCode,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    });\n  }\n\n  renderArchiveButton() {\n    if (this.props.isDeleted) {\n      return React.createElement(Components.Button, {\n        icon: \"refresh\",\n        className: \"rui btn btn-default btn-restore-variant flat\",\n        tooltip: \"Restore\",\n        onClick: () => this.props.restoreVariant(this.variant)\n      });\n    }\n\n    return React.createElement(Components.Button, {\n      icon: \"archive\",\n      className: \"rui btn btn-default btn-remove-variant flat\",\n      tooltip: \"Archive\",\n      onClick: () => this.props.removeVariant(this.variant)\n    });\n  }\n\n  renderArchivedLabel() {\n    if (this.props.isDeleted) {\n      return React.createElement(\"div\", {\n        className: \"panel-subheading\"\n      }, React.createElement(\"span\", {\n        className: \"badge badge-danger\",\n        \"data-i18n\": \"app.archived\"\n      }, React.createElement(\"span\", null, \"Archived\")));\n    }\n  }\n\n  renderInventoryPolicyField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return React.createElement(\"div\", {\n        className: \"col-sm-12\"\n      }, React.createElement(Components.Switch, {\n        i18nKeyLabel: \"productVariant.inventoryPolicy\",\n        i18nKeyOnLabel: \"productVariant.inventoryPolicy\",\n        name: \"inventoryPolicy\",\n        label: \"Allow backorder\",\n        onLabel: \"Allow backorder\",\n        checked: !this.state.inventoryPolicy,\n        onChange: this.handleInventoryPolicyChange,\n        validation: this.props.validation,\n        disabled: true,\n        helpText: \"Backorder allowance is now controlled by options\",\n        i18nKeyHelpText: \"admin.helpText.variantBackorderToggle\",\n        style: {\n          backgroundColor: \"lightgrey\",\n          cursor: \"not-allowed\"\n        }\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-sm-12\"\n    }, React.createElement(Components.Switch, {\n      i18nKeyLabel: \"productVariant.inventoryPolicy\",\n      i18nKeyOnLabel: \"productVariant.inventoryPolicy\",\n      name: \"inventoryPolicy\",\n      label: \"Allow backorder\",\n      onLabel: \"Allow backorder\",\n      checked: !this.state.inventoryPolicy,\n      onChange: this.handleInventoryPolicyChange,\n      validation: this.props.validation\n    }));\n  }\n\n  renderQuantityField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return React.createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, React.createElement(Components.TextField, {\n        i18nKeyLabel: \"productVariant.inventoryQuantity\",\n        i18nKeyPlaceholder: \"0\",\n        placeholder: \"0\",\n        label: \"Quantity\",\n        type: \"number\",\n        name: \"inventoryQuantity\",\n        ref: \"inventoryQuantityInput\",\n        value: this.props.onUpdateQuantityField(this.variant),\n        style: {\n          backgroundColor: \"lightgrey\",\n          cursor: \"not-allowed\"\n        },\n        disabled: true,\n        helpText: \"Variant inventory is now controlled by options\",\n        i18nKeyHelpText: \"admin.helpText.variantInventoryQuantity\"\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.inventoryQuantity\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Quantity\",\n      type: \"number\",\n      name: \"inventoryQuantity\",\n      ref: \"inventoryQuantityInput\",\n      value: this.variant.inventoryQuantity,\n      onChange: this.handleFieldChange,\n      onBlur: this.handleFieldBlur,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation,\n      helpText: \"Option inventory\",\n      i18nKeyHelpText: \"admin.helpText.optionInventoryQuantity\"\n    }));\n  }\n\n  renderVariantFields() {\n    const cardName = `variant-${this.variant._id}`;\n    const classNames = classnames({\n      \"variant-card\": true,\n      \"active\": this.isExpanded(cardName)\n    });\n    const currency = findCurrency(null, true);\n    return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, {\n      className: classNames,\n      expandable: true,\n      expanded: this.isExpanded(cardName),\n      name: cardName,\n      onExpand: this.handleCardExpand\n    }, React.createElement(Components.CardHeader, {\n      actAsExpander: true,\n      i18nKeyTitle: \"productDetailEdit.variantDetails\",\n      title: \"Variant Details\",\n      isValid: this.props.validation.isValid\n    }, this.renderArchivedLabel(), React.createElement(Components.Button, {\n      icon: \"files-o\",\n      className: \"rui btn btn-default btn-clone-variant flat\",\n      tooltip: \"Duplicate\",\n      onClick: () => this.props.cloneVariant(this.variant)\n    }), React.createElement(Components.VisibilityButton, {\n      onClick: () => this.handleVariantVisibilityToggle(this.variant),\n      bezelStyle: \"flat\",\n      primary: false,\n      toggleOn: this.variant.isVisible\n    }), this.renderArchiveButton()), React.createElement(Components.CardBody, {\n      expandable: true\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.title\",\n      i18nKeyPlaceholder: \"productVariant.title\",\n      placeholder: \"Label\",\n      label: \"Label\",\n      name: \"title\",\n      ref: \"titleInput\",\n      value: this.variant.title,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }), React.createElement(Components.Select, {\n      clearable: false,\n      i18nKeyLabel: \"productVariant.originCountry\",\n      i18nKeyPlaceholder: \"productVariant.originCountry\",\n      label: \"Origin Country\",\n      name: \"originCountry\",\n      ref: \"countryOfOriginInput\",\n      options: this.props.countries,\n      onChange: this.handleSelectChange,\n      value: this.variant.originCountry\n    }), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.NumericInput, {\n      i18nKeyLabel: \"productVariant.price\",\n      i18nKeyPlaceholder: \"0.00\",\n      placeholder: \"0.00\",\n      label: \"Price\",\n      name: \"price\",\n      ref: \"priceInput\",\n      value: this.variant.price,\n      format: currency,\n      numericType: \"currency\",\n      style: this.props.greyDisabledFields(this.variant),\n      disabled: this.props.hasChildVariants(this.variant),\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.NumericInput, {\n      i18nKeyLabel: \"productVariant.compareAtPrice\",\n      i18nKeyPlaceholder: \"0.00\",\n      placeholder: \"0.00\",\n      label: \"Compare At Price\",\n      name: \"compareAtPrice\",\n      ref: \"compareAtPriceInput\",\n      value: this.variant.compareAtPrice,\n      numericType: \"currency\",\n      format: currency,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }))), React.createElement(Components.Divider, null), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.width\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Width\",\n      name: \"width\",\n      ref: \"widthInput\",\n      value: this.variant.width,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.length\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Length\",\n      name: \"length\",\n      ref: \"lengthInput\",\n      value: this.variant.length,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }))), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.height\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Height\",\n      name: \"height\",\n      ref: \"heightInput\",\n      value: this.variant.height,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.weight\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Weight\",\n      name: \"weight\",\n      ref: \"weightInput\",\n      value: this.variant.weight,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }))))), React.createElement(Components.SettingsCard, {\n      enabled: this.state.taxable,\n      expandable: true,\n      i18nKeyTitle: \"productVariant.taxable\",\n      name: \"taxable\",\n      packageName: \"reaction-product-variant\",\n      saveOpenStateToPreferences: true,\n      showSwitch: true,\n      title: \"Taxable\",\n      onSwitchChange: this.handleCheckboxChange\n    }, this.renderTaxCodeField(), React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.taxDescription\",\n      i18nKeyPlaceholder: \"productVariant.taxDescription\",\n      placeholder: \"Tax Description\",\n      label: \"Tax Description\",\n      name: \"taxDescription\",\n      ref: \"taxDescriptionInput\",\n      value: this.variant.taxDescription,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    })), React.createElement(Components.SettingsCard, {\n      enabled: this.state.inventoryManagement,\n      expandable: true,\n      i18nKeyTitle: \"productVariant.inventoryManagement\",\n      name: \"inventoryManagement\",\n      packageName: \"reaction-product-variant\",\n      saveOpenStateToPreferences: true,\n      showSwitch: true,\n      title: \"Inventory Tracking\",\n      onSwitchChange: this.handleCheckboxChange\n    }, React.createElement(\"div\", {\n      className: \"row\"\n    }, this.renderQuantityField(), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.lowInventoryWarningThreshold\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      type: \"number\",\n      label: \"Warn At\",\n      name: \"lowInventoryWarningThreshold\",\n      ref: \"lowInventoryWarningThresholdInput\",\n      value: this.variant.lowInventoryWarningThreshold,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }))), React.createElement(\"div\", {\n      className: \"row\"\n    }, this.renderInventoryPolicyField())));\n  }\n\n  renderOptionFields() {\n    const cardName = `variant-${this.variant._id}`;\n    const classNames = classnames({\n      \"variant-option-card\": true,\n      \"active\": this.isExpanded(cardName)\n    });\n    const currency = findCurrency(null, true);\n    return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, {\n      className: classNames,\n      expandable: true,\n      expanded: this.isExpanded(cardName),\n      name: cardName,\n      onExpand: this.handleCardExpand\n    }, React.createElement(Components.CardHeader, {\n      actAsExpander: true,\n      title: this.variant.optionTitle || \"Label is required\",\n      isValid: this.props.validation.isValid\n    }, this.renderArchivedLabel(), React.createElement(Components.Button, {\n      icon: \"files-o\",\n      className: \"rui btn btn-default btn-clone-variant flat\",\n      tooltip: \"Duplicate\",\n      onClick: () => this.props.cloneVariant(this.variant)\n    }), React.createElement(Components.VisibilityButton, {\n      onClick: () => this.handleVariantVisibilityToggle(this.variant),\n      bezelStyle: \"flat\",\n      primary: false,\n      toggleOn: this.variant.isVisible\n    }), this.renderArchiveButton()), React.createElement(Components.CardBody, {\n      expandable: true\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.optionTitle\",\n      i18nKeyPlaceholder: \"productVariant.optionTitle\",\n      placeholder: \"optionTitle\",\n      label: \"Short Label\",\n      name: \"optionTitle\",\n      ref: \"optionTitleInput\",\n      value: this.variant.optionTitle,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation,\n      helpText: \"Displayed on Product Detail Page\",\n      i18nKeyHelpText: \"admin.helpText.optionTitle\"\n    }), React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.title\",\n      i18nKeyPlaceholder: \"productVariant.title\",\n      placeholder: \"Label\",\n      label: \"Label\",\n      name: \"title\",\n      ref: \"titleInput\",\n      value: this.variant.title,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation,\n      helpText: \"Displayed in cart, checkout, and orders\",\n      i18nKeyHelpText: \"admin.helpText.title\"\n    }), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.NumericInput, {\n      i18nKeyLabel: \"productVariant.price\",\n      i18nKeyPlaceholder: \"0.00\",\n      placeholder: \"0.00\",\n      label: \"Price\",\n      name: \"price\",\n      ref: \"priceInput\",\n      value: this.variant.price,\n      format: currency,\n      numericType: \"currency\",\n      style: this.props.greyDisabledFields(this.variant),\n      disabled: this.props.hasChildVariants(this.variant),\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation,\n      helpText: \"Purchase price\",\n      i18nKeyHelpText: \"admin.helpText.price\"\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.NumericInput, {\n      i18nKeyLabel: \"productVariant.compareAtPrice\",\n      i18nKeyPlaceholder: \"0.00\",\n      placeholder: \"0.00\",\n      label: \"Compare At Price\",\n      name: \"compareAtPrice\",\n      ref: \"compareAtPriceInput\",\n      value: this.variant.compareAtPrice,\n      format: currency,\n      numericType: \"currency\",\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation,\n      helpText: \"Original price or MSRP\",\n      i18nKeyHelpText: \"admin.helpText.compareAtPrice\"\n    }))), React.createElement(\"div\", {\n      className: \"row\"\n    }, this.renderQuantityField(), this.renderInventoryPolicyField()), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.width\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Width\",\n      name: \"width\",\n      ref: \"widthInput\",\n      value: this.variant.width,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.length\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Length\",\n      name: \"length\",\n      ref: \"lengthInput\",\n      value: this.variant.length,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }))), React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.height\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Height\",\n      name: \"height\",\n      ref: \"heightInput\",\n      value: this.variant.height,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\"\n    }, React.createElement(Components.TextField, {\n      i18nKeyLabel: \"productVariant.weight\",\n      i18nKeyPlaceholder: \"0\",\n      placeholder: \"0\",\n      label: \"Weight\",\n      name: \"weight\",\n      ref: \"weightInput\",\n      value: this.variant.weight,\n      onBlur: this.handleFieldBlur,\n      onChange: this.handleFieldChange,\n      onReturnKeyDown: this.handleFieldBlur,\n      validation: this.props.validation\n    }))))));\n  }\n\n  render() {\n    if (this.props.type === \"option\") {\n      return React.createElement(\"div\", null, this.renderOptionFields());\n    }\n\n    return React.createElement(\"div\", null, this.renderVariantFields());\n  }\n\n}\n\nVariantForm.propTypes = {\n  cloneVariant: PropTypes.func,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  fetchTaxCodes: PropTypes.func,\n  greyDisabledFields: PropTypes.func,\n  hasChildVariants: PropTypes.func,\n  isDeleted: PropTypes.bool,\n  isProviderEnabled: PropTypes.func,\n  onCardExpand: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onUpdateQuantityField: PropTypes.func,\n  onVariantFieldSave: PropTypes.func,\n  onVisibilityButtonClick: PropTypes.func,\n  removeVariant: PropTypes.func,\n  restoreVariant: PropTypes.func,\n  type: PropTypes.string,\n  validation: PropTypes.object,\n  variant: PropTypes.object\n};\nmodule.exportDefault(VariantForm);","map":{"version":3,"sources":["imports/plugins/included/product-variant/components/variantForm.js"],"names":["_isEqual","module","watch","require","default","v","React","Component","PropTypes","classnames","Velocity","Components","findCurrency","fieldNames","fieldGroups","title","group","originCountry","compareAtPrice","price","width","length","height","weight","taxCode","taxDescription","inventoryQuantity","inventoryPolicy","lowInventoryWarningThreshold","VariantForm","constructor","props","handleFieldChange","event","value","field","setState","variant","handleFieldBlur","onVariantFieldSave","_id","state","handleSelectChange","handleCheckboxChange","handleInventoryPolicyChange","inverseValue","handleCardExpand","card","cardName","isExpanded","onCardExpand","undefined","handleVariantVisibilityToggle","onVisibilityButtonClick","groupName","expandedCard","editFocus","taxable","inventoryManagement","componentWillReceiveProps","nextProps","nextVariant","currentVariant","fieldName","animateFieldFlash","fieldGroupForFieldName","Array","isArray","fieldData","fieldRef","refs","input","isFieldValid","validation","flashColor","RunSequence","e","p","backgroundColor","o","duration","renderTaxCodeField","isProviderEnabled","fetchTaxCodes","renderArchiveButton","isDeleted","restoreVariant","removeVariant","renderArchivedLabel","renderInventoryPolicyField","hasChildVariants","cursor","renderQuantityField","onUpdateQuantityField","renderVariantFields","classNames","currency","isValid","cloneVariant","isVisible","countries","greyDisabledFields","renderOptionFields","optionTitle","render","type","propTypes","func","arrayOf","object","oneOfType","string","bool","onFieldChange","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport _ from \"lodash\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { Components } from \"@reactioncommerce/reaction-components\";\nimport { findCurrency } from \"/client/api\";\n\nconst fieldNames = [\n  \"title\",\n  \"originCountry\",\n  \"compareAtPrice\",\n  \"price\",\n  \"width\",\n  \"length\",\n  \"height\",\n  \"weight\",\n  \"taxCode\",\n  \"taxDescription\",\n  \"inventoryQuantity\",\n  \"inventoryPolicy\",\n  \"lowInventoryWarningThreshold\"\n];\n\nconst fieldGroups = {\n  title: { group: \"variantDetails\" },\n  originCountry: { group: \"variantDetails\" },\n  compareAtPrice: { group: \"variantDetails\" },\n  price: { group: \"variantDetails\" },\n  width: { group: \"variantDetails\" },\n  length: { group: \"variantDetails\" },\n  height: { group: \"variantDetails\" },\n  weight: { group: \"variantDetails\" },\n  taxCode: { group: \"taxable\" },\n  taxDescription: { group: \"taxable\" },\n  inventoryQuantity: { group: \"inventoryManagement\" },\n  inventoryPolicy: { group: \"inventoryManagement\" },\n  lowInventoryWarningThreshold: { group: \"inventoryManagement\" }\n};\n\nclass VariantForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedCard: props.editFocus,\n      variant: props.variant,\n      inventoryPolicy: props.variant.inventoryPolicy,\n      taxable: props.variant.taxable,\n      inventoryManagement: props.variant.inventoryManagement\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextVariant = nextProps.variant || {};\n    const currentVariant = this.state.variant || {};\n\n    if (_.isEqual(nextVariant, currentVariant) === false) {\n      for (const fieldName of fieldNames) {\n        if (nextVariant[fieldName] !== currentVariant[fieldName]) {\n          if (fieldName !== \"taxCode\") {\n            this.animateFieldFlash(fieldName);\n          }\n        }\n      }\n\n      this.setState({\n        expandedCard: nextProps.editFocus,\n        inventoryManagement: nextProps.variant.inventoryManagement,\n        inventoryPolicy: nextProps.variant.inventoryPolicy,\n        taxable: nextProps.variant.taxable,\n        variant: nextProps.variant\n      });\n    }\n\n    this.setState({\n      expandedCard: nextProps.editFocus\n    });\n  }\n\n  fieldGroupForFieldName(field) {\n    // Other wise, if a field was passed\n    // const fieldName = this.state.viewProps.field;\n\n    let fieldName;\n\n    // If the field is an array of field name\n    if (Array.isArray(field) && field.length) {\n      // Use the first field name\n      [fieldName] = field;\n    } else {\n      fieldName = field;\n    }\n\n    const fieldData = fieldGroups[fieldName];\n\n    if (fieldData && fieldData.group) {\n      return fieldData.group;\n    }\n\n    return fieldName;\n  }\n\n  animateFieldFlash(fieldName) {\n    const fieldRef = this.refs[`${fieldName}Input`];\n\n    if (fieldRef) {\n      const { input } = fieldRef.refs;\n      const isFieldValid = this.props.validation.isFieldValid(fieldName);\n      const flashColor = isFieldValid ? \"#f0fff4\" : \"#ffeeef\";\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: flashColor }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get variant() {\n    return this.state.variant || this.props.variant || {};\n  }\n\n  handleFieldChange = (event, value, field) => {\n    this.setState(({ variant }) => ({\n      variant: {\n        ...variant,\n        [field]: value\n      }\n    }));\n  }\n\n  handleFieldBlur = (event, value, field) => {\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value, this.state.variant);\n    }\n  }\n\n  handleSelectChange = (value, field) => {\n    this.setState(({ variant }) => ({\n      variant: {\n        ...variant,\n        [field]: value\n      }\n    }), () => {\n      if (this.props.onVariantFieldSave) {\n        this.props.onVariantFieldSave(this.variant._id, field, value, this.state.variant);\n      }\n    });\n  }\n\n  handleCheckboxChange = (event, value, field) => {\n    this.setState(({ variant }) => ({\n      variant: {\n        ...variant,\n        [field]: value\n      }\n    }));\n\n    this.handleFieldBlur(event, value, field);\n  }\n\n  handleInventoryPolicyChange = (event, value, field) => {\n    /*\n    Due to some confusing verbiage on how inventoryPolicy works / is displayed, we need to handle this field\n    differently than we handle the other checkboxes in this component. Specifically, we display the opposite value of\n    what the actual field value is. Because this is a checkbox, that means that the opposite value is actually the\n    field value as well, not just a display value, so we need to reverse the boolean value when it gets passed into\n    this function before we send it to the server to update the data. Other than reversing the value, this function\n    is the same as `handleCheckboxChange`.\n    */\n\n    const inverseValue = !value;\n\n    this.setState(({ variant }) => ({\n      variant: {\n        ...variant,\n        [field]: inverseValue\n      }\n    }));\n\n\n    this.handleFieldBlur(event, inverseValue, field);\n  }\n\n  handleCardExpand = (event, card, cardName, isExpanded) => {\n    if (typeof this.props.onCardExpand === \"function\") {\n      this.props.onCardExpand(isExpanded ? cardName : undefined);\n    }\n  }\n\n  handleVariantVisibilityToggle = (variant) => this.props.onVisibilityButtonClick(variant)\n\n  isExpanded = (groupName) => this.state.expandedCard === groupName\n\n  renderTaxCodeField() {\n    if (this.props.isProviderEnabled()) {\n      return (\n        <Components.Select\n          clearable={false}\n          i18nKeyLabel=\"productVariant.taxCode\"\n          i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n          label=\"Tax Code\"\n          name=\"taxCode\"\n          ref=\"taxCodeInput\"\n          options={this.props.fetchTaxCodes()}\n          onChange={this.handleSelectChange}\n          value={this.variant.taxCode}\n        />\n      );\n    }\n    return (\n      <Components.TextField\n        i18nKeyLabel=\"productVariant.taxCode\"\n        i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n        placeholder=\"Select Tax Code\"\n        label=\"Tax Code\"\n        name=\"taxCode\"\n        ref=\"taxCodeInput\"\n        value={this.variant.taxCode}\n        onBlur={this.handleFieldBlur}\n        onChange={this.handleFieldChange}\n        onReturnKeyDown={this.handleFieldBlur}\n        validation={this.props.validation}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    if (this.props.isDeleted) {\n      return (\n        <Components.Button\n          icon=\"refresh\"\n          className=\"rui btn btn-default btn-restore-variant flat\"\n          tooltip=\"Restore\"\n          onClick={() => this.props.restoreVariant(this.variant)}\n        />\n      );\n    }\n    return (\n      <Components.Button\n        icon=\"archive\"\n        className=\"rui btn btn-default btn-remove-variant flat\"\n        tooltip=\"Archive\"\n        onClick={() => this.props.removeVariant(this.variant)}\n      />\n    );\n  }\n\n  renderArchivedLabel() {\n    if (this.props.isDeleted) {\n      return (\n        <div className=\"panel-subheading\">\n          <span className=\"badge badge-danger\" data-i18n=\"app.archived\">\n            <span>Archived</span>\n          </span>\n        </div>\n      );\n    }\n  }\n\n  renderInventoryPolicyField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return (\n        <div className=\"col-sm-12\">\n          <Components.Switch\n            i18nKeyLabel=\"productVariant.inventoryPolicy\"\n            i18nKeyOnLabel=\"productVariant.inventoryPolicy\"\n            name=\"inventoryPolicy\"\n            label={\"Allow backorder\"}\n            onLabel={\"Allow backorder\"}\n            checked={!this.state.inventoryPolicy}\n            onChange={this.handleInventoryPolicyChange}\n            validation={this.props.validation}\n            disabled={true}\n            helpText={\"Backorder allowance is now controlled by options\"}\n            i18nKeyHelpText={\"admin.helpText.variantBackorderToggle\"}\n            style={{ backgroundColor: \"lightgrey\", cursor: \"not-allowed\" }}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"col-sm-12\">\n        <Components.Switch\n          i18nKeyLabel=\"productVariant.inventoryPolicy\"\n          i18nKeyOnLabel=\"productVariant.inventoryPolicy\"\n          name=\"inventoryPolicy\"\n          label={\"Allow backorder\"}\n          onLabel={\"Allow backorder\"}\n          checked={!this.state.inventoryPolicy}\n          onChange={this.handleInventoryPolicyChange}\n          validation={this.props.validation}\n        />\n      </div>\n    );\n  }\n\n  renderQuantityField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return (\n        <div className=\"col-sm-6\">\n          <Components.TextField\n            i18nKeyLabel=\"productVariant.inventoryQuantity\"\n            i18nKeyPlaceholder=\"0\"\n            placeholder=\"0\"\n            label=\"Quantity\"\n            type=\"number\"\n            name=\"inventoryQuantity\"\n            ref=\"inventoryQuantityInput\"\n            value={this.props.onUpdateQuantityField(this.variant)}\n            style={{ backgroundColor: \"lightgrey\", cursor: \"not-allowed\" }}\n            disabled={true}\n            helpText={\"Variant inventory is now controlled by options\"}\n            i18nKeyHelpText={\"admin.helpText.variantInventoryQuantity\"}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"col-sm-6\">\n        <Components.TextField\n          i18nKeyLabel=\"productVariant.inventoryQuantity\"\n          i18nKeyPlaceholder=\"0\"\n          placeholder=\"0\"\n          label=\"Quantity\"\n          type=\"number\"\n          name=\"inventoryQuantity\"\n          ref=\"inventoryQuantityInput\"\n          value={this.variant.inventoryQuantity}\n          onChange={this.handleFieldChange}\n          onBlur={this.handleFieldBlur}\n          onReturnKeyDown={this.handleFieldBlur}\n          validation={this.props.validation}\n          helpText={\"Option inventory\"}\n          i18nKeyHelpText={\"admin.helpText.optionInventoryQuantity\"}\n        />\n      </div>\n    );\n  }\n\n  renderVariantFields() {\n    const cardName = `variant-${this.variant._id}`;\n\n    const classNames = classnames({\n      \"variant-card\": true,\n      \"active\": this.isExpanded(cardName)\n    });\n\n    const currency = findCurrency(null, true);\n\n    return (\n      <Components.CardGroup>\n        <Components.Card\n          className={classNames}\n          expandable={true}\n          expanded={this.isExpanded(cardName)}\n          name={cardName}\n          onExpand={this.handleCardExpand}\n        >\n          <Components.CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetailEdit.variantDetails\"\n            title=\"Variant Details\"\n            isValid={this.props.validation.isValid}\n          >\n            {this.renderArchivedLabel()}\n            <Components.Button\n              icon=\"files-o\"\n              className=\"rui btn btn-default btn-clone-variant flat\"\n              tooltip=\"Duplicate\"\n              onClick={() => this.props.cloneVariant(this.variant)}\n            />\n            <Components.VisibilityButton\n              onClick={() => this.handleVariantVisibilityToggle(this.variant)}\n              bezelStyle=\"flat\"\n              primary={false}\n              toggleOn={this.variant.isVisible}\n            />\n            {this.renderArchiveButton()}\n          </Components.CardHeader>\n          <Components.CardBody expandable={true}>\n            <Components.TextField\n              i18nKeyLabel=\"productVariant.title\"\n              i18nKeyPlaceholder=\"productVariant.title\"\n              placeholder=\"Label\"\n              label=\"Label\"\n              name=\"title\"\n              ref=\"titleInput\"\n              value={this.variant.title}\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              validation={this.props.validation}\n            />\n            <Components.Select\n              clearable={false}\n              i18nKeyLabel=\"productVariant.originCountry\"\n              i18nKeyPlaceholder=\"productVariant.originCountry\"\n              label=\"Origin Country\"\n              name=\"originCountry\"\n              ref=\"countryOfOriginInput\"\n              options={this.props.countries}\n              onChange={this.handleSelectChange}\n              value={this.variant.originCountry}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <Components.NumericInput\n                  i18nKeyLabel=\"productVariant.price\"\n                  i18nKeyPlaceholder=\"0.00\"\n                  placeholder=\"0.00\"\n                  label=\"Price\"\n                  name=\"price\"\n                  ref=\"priceInput\"\n                  value={this.variant.price}\n                  format={currency}\n                  numericType=\"currency\"\n                  style={this.props.greyDisabledFields(this.variant)}\n                  disabled={this.props.hasChildVariants(this.variant)}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Components.NumericInput\n                  i18nKeyLabel=\"productVariant.compareAtPrice\"\n                  i18nKeyPlaceholder=\"0.00\"\n                  placeholder=\"0.00\"\n                  label=\"Compare At Price\"\n                  name=\"compareAtPrice\"\n                  ref=\"compareAtPriceInput\"\n                  value={this.variant.compareAtPrice}\n                  numericType=\"currency\"\n                  format={currency}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n            </div>\n            <Components.Divider />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.width\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Width\"\n                  name=\"width\"\n                  ref=\"widthInput\"\n                  value={this.variant.width}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.length\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Length\"\n                  name=\"length\"\n                  ref=\"lengthInput\"\n                  value={this.variant.length}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.height\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Height\"\n                  name=\"height\"\n                  ref=\"heightInput\"\n                  value={this.variant.height}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.weight\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Weight\"\n                  name=\"weight\"\n                  ref=\"weightInput\"\n                  value={this.variant.weight}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n            </div>\n          </Components.CardBody>\n        </Components.Card>\n\n        <Components.SettingsCard\n          enabled={this.state.taxable}\n          expandable={true}\n          i18nKeyTitle=\"productVariant.taxable\"\n          name=\"taxable\"\n          packageName={\"reaction-product-variant\"}\n          saveOpenStateToPreferences={true}\n          showSwitch={true}\n          title=\"Taxable\"\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          {this.renderTaxCodeField()}\n          <Components.TextField\n            i18nKeyLabel=\"productVariant.taxDescription\"\n            i18nKeyPlaceholder=\"productVariant.taxDescription\"\n            placeholder=\"Tax Description\"\n            label=\"Tax Description\"\n            name=\"taxDescription\"\n            ref=\"taxDescriptionInput\"\n            value={this.variant.taxDescription}\n            onBlur={this.handleFieldBlur}\n            onChange={this.handleFieldChange}\n            onReturnKeyDown={this.handleFieldBlur}\n            validation={this.props.validation}\n          />\n        </Components.SettingsCard>\n\n        <Components.SettingsCard\n          enabled={this.state.inventoryManagement}\n          expandable={true}\n          i18nKeyTitle=\"productVariant.inventoryManagement\"\n          name=\"inventoryManagement\"\n          packageName={\"reaction-product-variant\"}\n          saveOpenStateToPreferences={true}\n          showSwitch={true}\n          title=\"Inventory Tracking\"\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          <div className=\"row\">\n            {this.renderQuantityField()}\n            <div className=\"col-sm-6\">\n              <Components.TextField\n                i18nKeyLabel=\"productVariant.lowInventoryWarningThreshold\"\n                i18nKeyPlaceholder=\"0\"\n                placeholder=\"0\"\n                type=\"number\"\n                label=\"Warn At\"\n                name=\"lowInventoryWarningThreshold\"\n                ref=\"lowInventoryWarningThresholdInput\"\n                value={this.variant.lowInventoryWarningThreshold}\n                onBlur={this.handleFieldBlur}\n                onChange={this.handleFieldChange}\n                onReturnKeyDown={this.handleFieldBlur}\n                validation={this.props.validation}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.renderInventoryPolicyField()}\n          </div>\n        </Components.SettingsCard>\n      </Components.CardGroup>\n    );\n  }\n\n\n  renderOptionFields() {\n    const cardName = `variant-${this.variant._id}`;\n\n    const classNames = classnames({\n      \"variant-option-card\": true,\n      \"active\": this.isExpanded(cardName)\n    });\n\n    const currency = findCurrency(null, true);\n\n    return (\n      <Components.CardGroup>\n        <Components.Card\n          className={classNames}\n          expandable={true}\n          expanded={this.isExpanded(cardName)}\n          name={cardName}\n          onExpand={this.handleCardExpand}\n        >\n          <Components.CardHeader\n            actAsExpander={true}\n            title={this.variant.optionTitle || \"Label is required\"}\n            isValid={this.props.validation.isValid}\n          >\n            {this.renderArchivedLabel()}\n            <Components.Button\n              icon=\"files-o\"\n              className=\"rui btn btn-default btn-clone-variant flat\"\n              tooltip=\"Duplicate\"\n              onClick={() => this.props.cloneVariant(this.variant)}\n            />\n            <Components.VisibilityButton\n              onClick={() => this.handleVariantVisibilityToggle(this.variant)}\n              bezelStyle=\"flat\"\n              primary={false}\n              toggleOn={this.variant.isVisible}\n            />\n            {this.renderArchiveButton()}\n          </Components.CardHeader>\n          <Components.CardBody expandable={true}>\n            <Components.TextField\n              i18nKeyLabel=\"productVariant.optionTitle\"\n              i18nKeyPlaceholder=\"productVariant.optionTitle\"\n              placeholder=\"optionTitle\"\n              label=\"Short Label\"\n              name=\"optionTitle\"\n              ref=\"optionTitleInput\"\n              value={this.variant.optionTitle}\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              validation={this.props.validation}\n              helpText={\"Displayed on Product Detail Page\"}\n              i18nKeyHelpText={\"admin.helpText.optionTitle\"}\n            />\n            <Components.TextField\n              i18nKeyLabel=\"productVariant.title\"\n              i18nKeyPlaceholder=\"productVariant.title\"\n              placeholder=\"Label\"\n              label=\"Label\"\n              name=\"title\"\n              ref=\"titleInput\"\n              value={this.variant.title}\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              validation={this.props.validation}\n              helpText={\"Displayed in cart, checkout, and orders\"}\n              i18nKeyHelpText={\"admin.helpText.title\"}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <Components.NumericInput\n                  i18nKeyLabel=\"productVariant.price\"\n                  i18nKeyPlaceholder=\"0.00\"\n                  placeholder=\"0.00\"\n                  label=\"Price\"\n                  name=\"price\"\n                  ref=\"priceInput\"\n                  value={this.variant.price}\n                  format={currency}\n                  numericType=\"currency\"\n                  style={this.props.greyDisabledFields(this.variant)}\n                  disabled={this.props.hasChildVariants(this.variant)}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                  helpText={\"Purchase price\"}\n                  i18nKeyHelpText={\"admin.helpText.price\"}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Components.NumericInput\n                  i18nKeyLabel=\"productVariant.compareAtPrice\"\n                  i18nKeyPlaceholder=\"0.00\"\n                  placeholder=\"0.00\"\n                  label=\"Compare At Price\"\n                  name=\"compareAtPrice\"\n                  ref=\"compareAtPriceInput\"\n                  value={this.variant.compareAtPrice}\n                  format={currency}\n                  numericType=\"currency\"\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                  helpText={\"Original price or MSRP\"}\n                  i18nKeyHelpText={\"admin.helpText.compareAtPrice\"}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              {this.renderQuantityField()}\n              {this.renderInventoryPolicyField()}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.width\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Width\"\n                  name=\"width\"\n                  ref=\"widthInput\"\n                  value={this.variant.width}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.length\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Length\"\n                  name=\"length\"\n                  ref=\"lengthInput\"\n                  value={this.variant.length}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.height\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Height\"\n                  name=\"height\"\n                  ref=\"heightInput\"\n                  value={this.variant.height}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Components.TextField\n                  i18nKeyLabel=\"productVariant.weight\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Weight\"\n                  name=\"weight\"\n                  ref=\"weightInput\"\n                  value={this.variant.weight}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                  validation={this.props.validation}\n                />\n              </div>\n            </div>\n          </Components.CardBody>\n        </Components.Card>\n      </Components.CardGroup>\n    );\n  }\n\n  render() {\n    if (this.props.type === \"option\") {\n      return (\n        <div>\n          {this.renderOptionFields()}\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.renderVariantFields()}\n      </div>\n    );\n  }\n}\n\nVariantForm.propTypes = {\n  cloneVariant: PropTypes.func,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  fetchTaxCodes: PropTypes.func,\n  greyDisabledFields: PropTypes.func,\n  hasChildVariants: PropTypes.func,\n  isDeleted: PropTypes.bool,\n  isProviderEnabled: PropTypes.func,\n  onCardExpand: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onUpdateQuantityField: PropTypes.func,\n  onVariantFieldSave: PropTypes.func,\n  onVisibilityButtonClick: PropTypes.func,\n  removeVariant: PropTypes.func,\n  restoreVariant: PropTypes.func,\n  type: PropTypes.string,\n  validation: PropTypes.object,\n  variant: PropTypes.object\n};\n\nexport default VariantForm;\n"]},"sourceType":"script","hash":"9c266efb012ad76328bba5c4b4ae8cadffa2c381"}
