{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js","filename":"imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js"}},"code":"var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _compact;\n\nmodule.watch(require(\"lodash/compact\"), {\n  \"default\": function (v) {\n    _compact = v;\n  }\n}, 0);\n\nvar _debounce;\n\nmodule.watch(require(\"lodash/debounce\"), {\n  \"default\": function (v) {\n    _debounce = v;\n  }\n}, 1);\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 2);\nvar update;\nmodule.watch(require(\"immutability-helper\"), {\n  \"default\": function (v) {\n    update = v;\n  }\n}, 3);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 4);\nvar Components, registerComponent;\nmodule.watch(require(\"../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  },\n  registerComponent: function (v) {\n    registerComponent = v;\n  }\n}, 5);\n\nvar TagGroupBody =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(TagGroupBody, _Component);\n\n  function TagGroupBody(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.handleNewTagSave = function (event, tag) {\n      if (_this.props.onNewTagSave) {\n        _this.props.onNewTagSave(tag, _this.state.parentTag);\n\n        _this.setState({\n          newTag: {\n            name: \"\"\n          }\n        });\n      }\n    };\n\n    _this.handleTagUpdate = function (event, tag) {\n      var _tagsByKey;\n\n      var newState = update(_this.state, {\n        tagsByKey: (_tagsByKey = {}, _tagsByKey[tag._id] = {\n          $set: tag\n        }, _tagsByKey)\n      });\n\n      _this.setState(newState);\n    };\n\n    _this.handleNewTagUpdate = function (event, tag) {\n      // updates blank tag state being edited\n      _this.setState({\n        newTag: tag\n      });\n    };\n\n    _this.handleGetSuggestions = function (suggestionUpdateRequest) {\n      var suggestions = _this.props.updateSuggestions(suggestionUpdateRequest.value, {\n        excludeTags: _this.state.tagIds\n      });\n\n      _this.setState({\n        suggestions: suggestions\n      });\n    };\n\n    _this.handleClearSuggestions = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.handleMoveTag = function (dragIndex, hoverIndex) {\n      var tag = _this.state.tagIds[dragIndex];\n\n      if (!tag) {\n        return false;\n      } // Apply new sort order to variant list\n\n\n      var newState = update(_this.state, {\n        tagIds: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, tag]]\n        }\n      }); // Set local state so the component does't have to wait for a round-trip\n      // to the server to get the updated list of variants\n\n      _this.setState(newState, function () {\n        _debounce(function () {\n          return _this.props.onTagSort(_this.state.tagIds, _this.state.parentTag);\n        }, 500)();\n      });\n    };\n\n    _this.handleTagSave = function (event, tag) {\n      if (_this.props.onUpdateTag) {\n        _this.props.onUpdateTag(tag._id, tag.name, _this.state.parentTag._id);\n      }\n    };\n\n    var _props$tagGroupBodyPr = props.tagGroupBodyProps,\n        parentTag = _props$tagGroupBodyPr.parentTag,\n        tagsByKey = _props$tagGroupBodyPr.tagsByKey,\n        tagIds = _props$tagGroupBodyPr.tagIds;\n    _this.state = {\n      suggestions: [],\n      newTag: {\n        name: \"\"\n      },\n      tagIds: tagIds,\n      parentTag: parentTag,\n      tagsByKey: tagsByKey\n    };\n    return _this;\n  }\n\n  var _proto = TagGroupBody.prototype;\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      var _nextProps$tagGroupBo = nextProps.tagGroupBodyProps,\n          parentTag = _nextProps$tagGroupBo.parentTag,\n          tagsByKey = _nextProps$tagGroupBo.tagsByKey,\n          tagIds = _nextProps$tagGroupBo.tagIds;\n      this.setState({\n        tagIds: tagIds,\n        parentTag: parentTag,\n        tagsByKey: tagsByKey\n      });\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.genTagsList = function () {\n    function genTagsList(tags, parentTag) {\n      var _this2 = this;\n\n      if (Array.isArray(tags)) {\n        return tags.map(function (tag, index) {\n          return React.createElement(Components.TagItem, {\n            tag: tag,\n            index: index,\n            key: index,\n            \"data-id\": tag._id,\n            editable: _this2.props.editable,\n            isSelected: _this2.isSelected,\n            parentTag: parentTag,\n            draggable: true,\n            selectable: true,\n            suggestions: _this2.state.suggestions,\n            onClearSuggestions: _this2.handleClearSuggestions,\n            onGetSuggestions: _this2.handleGetSuggestions,\n            onMove: _this2.handleMoveTag,\n            onTagInputBlur: _this2.handleTagSave,\n            onTagMouseOut: _this2.handleTagMouseOut,\n            onTagMouseOver: _this2.handleTagMouseOver,\n            onTagRemove: _this2.props.onTagRemove,\n            onTagSave: _this2.handleTagSave,\n            onTagSelect: _this2.onTagSelect,\n            onTagUpdate: _this2.handleTagUpdate,\n            onTagClick: _this2.props.onTagClick\n          });\n        });\n      }\n    }\n\n    return genTagsList;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", {\n        className: \"content\"\n      }, React.createElement(\"div\", {\n        className: \"rui tags\",\n        \"data-id\": this.state.parentTag._id\n      }, this.genTagsList(_compact(this.tags), this.state.parentTag), this.props.editable && React.createElement(\"div\", {\n        className: \"rui item create\"\n      }, React.createElement(Components.TagItem, {\n        blank: true,\n        key: \"newTagForm\",\n        tag: this.state.newTag,\n        inputPlaceholder: \"Add Tag\",\n        i18nKeyInputPlaceholder: \"tags.addTag\",\n        suggestions: this.state.suggestions,\n        onClearSuggestions: this.handleClearSuggestions,\n        onGetSuggestions: this.handleGetSuggestions,\n        onMoveTag: this.handleMoveTag,\n        onTagInputBlur: this.handleNewTagSave,\n        onTagSave: this.handleNewTagSave,\n        onTagUpdate: this.handleNewTagUpdate\n      }))));\n    }\n\n    return render;\n  }();\n\n  (0, _createClass2.default)(TagGroupBody, [{\n    key: \"tags\",\n    get: function () {\n      var _this3 = this;\n\n      if (this.props.editable) {\n        return this.state.tagIds.map(function (tagId) {\n          return _this3.state.tagsByKey[tagId];\n        });\n      }\n\n      return this.props.tagGroupBodyProps.subTagGroups;\n    }\n  }]);\n  return TagGroupBody;\n}(Component);\n\nTagGroupBody.propTypes = {\n  editable: PropTypes.bool,\n  onNewTagSave: PropTypes.func,\n  onTagClick: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSort: PropTypes.func,\n  onUpdateTag: PropTypes.func,\n  tagGroupBodyProps: PropTypes.object,\n  updateSuggestions: PropTypes.func\n};\nregisterComponent(\"TagGroupBody\", TagGroupBody);\nmodule.exportDefault(TagGroupBody);","map":{"version":3,"sources":["imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js"],"names":["_compact","module","watch","require","v","_debounce","React","Component","update","PropTypes","Components","registerComponent","TagGroupBody","props","handleNewTagSave","event","tag","onNewTagSave","state","parentTag","setState","newTag","name","handleTagUpdate","newState","tagsByKey","_id","$set","handleNewTagUpdate","handleGetSuggestions","suggestionUpdateRequest","suggestions","updateSuggestions","value","excludeTags","tagIds","handleClearSuggestions","handleMoveTag","dragIndex","hoverIndex","$splice","onTagSort","handleTagSave","onUpdateTag","tagGroupBodyProps","componentWillReceiveProps","nextProps","genTagsList","tags","Array","isArray","map","index","editable","isSelected","handleTagMouseOut","handleTagMouseOver","onTagRemove","onTagSelect","onTagClick","render","tagId","subTagGroups","propTypes","bool","func","object","exportDefault"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport update from \"immutability-helper\";\nimport PropTypes from \"prop-types\";\nimport { Components, registerComponent } from \"@reactioncommerce/reaction-components\";\n\nclass TagGroupBody extends Component {\n  constructor(props) {\n    super(props);\n\n    const { parentTag, tagsByKey, tagIds } = props.tagGroupBodyProps;\n    this.state = {\n      suggestions: [],\n      newTag: {\n        name: \"\"\n      },\n      tagIds,\n      parentTag,\n      tagsByKey\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { parentTag, tagsByKey, tagIds } = nextProps.tagGroupBodyProps;\n    this.setState({ tagIds, parentTag, tagsByKey });\n  }\n\n  handleNewTagSave = (event, tag) => {\n    if (this.props.onNewTagSave) {\n      this.props.onNewTagSave(tag, this.state.parentTag);\n      this.setState({\n        newTag: { name: \"\" }\n      });\n    }\n  }\n\n  handleTagUpdate = (event, tag) => {\n    const newState = update(this.state, {\n      tagsByKey: {\n        [tag._id]: {\n          $set: tag\n        }\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  handleNewTagUpdate = (event, tag) => { // updates blank tag state being edited\n    this.setState({ newTag: tag });\n  }\n\n  handleGetSuggestions = (suggestionUpdateRequest) => {\n    const suggestions = this.props.updateSuggestions(\n      suggestionUpdateRequest.value,\n      { excludeTags: this.state.tagIds }\n    );\n\n    this.setState({ suggestions });\n  }\n\n  handleClearSuggestions = () => {\n    this.setState({ suggestions: [] });\n  }\n\n  handleMoveTag = (dragIndex, hoverIndex) => {\n    const tag = this.state.tagIds[dragIndex];\n    if (!tag) {\n      return false;\n    }\n    // Apply new sort order to variant list\n    const newState = update(this.state, {\n      tagIds: {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, tag]\n        ]\n      }\n    });\n\n    // Set local state so the component does't have to wait for a round-trip\n    // to the server to get the updated list of variants\n    this.setState(newState, () => {\n      _.debounce(() => this.props.onTagSort(this.state.tagIds, this.state.parentTag), 500)();\n    });\n  }\n\n  handleTagSave = (event, tag) => {\n    if (this.props.onUpdateTag) {\n      this.props.onUpdateTag(tag._id, tag.name, this.state.parentTag._id);\n    }\n  }\n\n  get tags() {\n    if (this.props.editable) {\n      return this.state.tagIds.map((tagId) => this.state.tagsByKey[tagId]);\n    }\n\n    return this.props.tagGroupBodyProps.subTagGroups;\n  }\n\n  genTagsList(tags, parentTag) {\n    if (Array.isArray(tags)) {\n      return tags.map((tag, index) => (\n        <Components.TagItem\n          tag={tag}\n          index={index}\n          key={index}\n          data-id={tag._id}\n          editable={this.props.editable}\n          isSelected={this.isSelected}\n          parentTag={parentTag}\n          draggable={true}\n          selectable={true}\n          suggestions={this.state.suggestions}\n          onClearSuggestions={this.handleClearSuggestions}\n          onGetSuggestions={this.handleGetSuggestions}\n          onMove={this.handleMoveTag}\n          onTagInputBlur={this.handleTagSave}\n          onTagMouseOut={this.handleTagMouseOut}\n          onTagMouseOver={this.handleTagMouseOver}\n          onTagRemove={this.props.onTagRemove}\n          onTagSave={this.handleTagSave}\n          onTagSelect={this.onTagSelect}\n          onTagUpdate={this.handleTagUpdate}\n          onTagClick={this.props.onTagClick}\n        />\n      ));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"rui tags\" data-id={this.state.parentTag._id}>\n          {this.genTagsList(_.compact(this.tags), this.state.parentTag)}\n          {this.props.editable &&\n            <div className=\"rui item create\">\n              <Components.TagItem\n                blank={true}\n                key=\"newTagForm\"\n                tag={this.state.newTag}\n                inputPlaceholder=\"Add Tag\"\n                i18nKeyInputPlaceholder=\"tags.addTag\"\n                suggestions={this.state.suggestions}\n                onClearSuggestions={this.handleClearSuggestions}\n                onGetSuggestions={this.handleGetSuggestions}\n                onMoveTag={this.handleMoveTag}\n                onTagInputBlur={this.handleNewTagSave}\n                onTagSave={this.handleNewTagSave}\n                onTagUpdate={this.handleNewTagUpdate}\n              />\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nTagGroupBody.propTypes = {\n  editable: PropTypes.bool,\n  onNewTagSave: PropTypes.func,\n  onTagClick: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSort: PropTypes.func,\n  onUpdateTag: PropTypes.func,\n  tagGroupBodyProps: PropTypes.object,\n  updateSuggestions: PropTypes.func\n};\n\nregisterComponent(\"TagGroupBody\", TagGroupBody);\n\nexport default TagGroupBody;\n"]},"sourceType":"script","hash":"ed3cb4ab921b2fce45b289bc07d91c30eabd3bc5"}
