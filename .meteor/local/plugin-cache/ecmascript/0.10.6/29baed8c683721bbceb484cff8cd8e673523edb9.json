{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/inventory/server/startup/init.js","filename":"imports/plugins/included/inventory/server/startup/init.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/inventory/server/startup/init.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/inventory/server/startup/init.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/inventory/server/startup/init.js"}},"code":"let Hooks, Logger;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Hooks(v) {\n    Hooks = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 0);\nlet Products, Inventory;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Products(v) {\n    Products = v;\n  },\n\n  Inventory(v) {\n    Inventory = v;\n  }\n\n}, 1);\nlet registerInventory;\nmodule.watch(require(\"../methods/inventory\"), {\n  registerInventory(v) {\n    registerInventory = v;\n  }\n\n}, 2);\n// On first-time startup init the Inventory collection with entries for each product\nHooks.Events.add(\"afterCoreInit\", () => {\n  // If we already have any inventory record, skip\n  const inventory = Inventory.find().count();\n\n  if (!inventory) {\n    const products = Products.find().fetch();\n\n    for (const product of products) {\n      Logger.debug(`Registering product ${product.title}`);\n      registerInventory(product);\n    }\n  }\n});","map":{"version":3,"sources":["imports/plugins/included/inventory/server/startup/init.js"],"names":["Hooks","Logger","module","watch","require","v","Products","Inventory","registerInventory","Events","add","inventory","find","count","products","fetch","product","debug","title"],"mappings":"AAAA,IAAIA,KAAJ,EAAUC,MAAV;AAAiBC,OAAOC,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAACJ,QAAMK,CAAN,EAAQ;AAACL,YAAMK,CAAN;AAAQ,GAAlB;;AAAmBJ,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAAtC,CAArD,EAA6F,CAA7F;AAAgG,IAAIC,QAAJ,EAAaC,SAAb;AAAuBL,OAAOC,KAAP,CAAaC,QAAQ,mCAAR,CAAb,EAA0D;AAACE,WAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW,GAAxB;;AAAyBE,YAAUF,CAAV,EAAY;AAACE,gBAAUF,CAAV;AAAY;;AAAlD,CAA1D,EAA8G,CAA9G;AAAiH,IAAIG,iBAAJ;AAAsBN,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACI,oBAAkBH,CAAlB,EAAoB;AAACG,wBAAkBH,CAAlB;AAAoB;;AAA1C,CAA7C,EAAyF,CAAzF;AAI/Q;AACAL,MAAMS,MAAN,CAAaC,GAAb,CAAiB,eAAjB,EAAkC,MAAM;AACtC;AACA,QAAMC,YAAYJ,UAAUK,IAAV,GAAiBC,KAAjB,EAAlB;;AACA,MAAI,CAACF,SAAL,EAAgB;AACd,UAAMG,WAAWR,SAASM,IAAT,GAAgBG,KAAhB,EAAjB;;AACA,SAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;AAC9Bb,aAAOgB,KAAP,CAAc,uBAAsBD,QAAQE,KAAM,EAAlD;AACAV,wBAAkBQ,OAAlB;AACD;AACF;AACF,CAVD","sourcesContent":["import { Hooks, Logger } from \"/server/api\";\nimport { Products, Inventory } from \"/lib/collections\";\nimport { registerInventory } from \"../methods/inventory\";\n\n// On first-time startup init the Inventory collection with entries for each product\nHooks.Events.add(\"afterCoreInit\", () => {\n  // If we already have any inventory record, skip\n  const inventory = Inventory.find().count();\n  if (!inventory) {\n    const products = Products.find().fetch();\n    for (const product of products) {\n      Logger.debug(`Registering product ${product.title}`);\n      registerInventory(product);\n    }\n  }\n});\n"]},"sourceType":"script","hash":"29baed8c683721bbceb484cff8cd8e673523edb9"}
