{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/imports/fixtures/users.js","filename":"server/imports/fixtures/users.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/imports/fixtures/users.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/imports/fixtures/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/imports/fixtures/users.js"}},"code":"module.export({\n  getUser: () => getUser,\n  getUsers: () => getUsers\n});\n\nlet _random;\n\nmodule.watch(require(\"lodash/random\"), {\n  default(v) {\n    _random = v;\n  }\n\n}, 0);\nlet faker;\nmodule.watch(require(\"faker\"), {\n  default(v) {\n    faker = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet Factory;\nmodule.watch(require(\"meteor/dburles:factory\"), {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 4);\nlet getShop;\nmodule.watch(require(\"./shops\"), {\n  getShop(v) {\n    getShop = v;\n  }\n\n}, 5);\n\nfunction getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nfunction getUsers(limit = 2) {\n  const users = [];\n  const existingUsers = Meteor.users.find({}, {\n    limit\n  }).fetch();\n\n  for (let i = 0; i < limit; i += 1) {\n    const user = existingUsers[i] || Factory.create(\"user\");\n    users.push(user);\n  }\n\n  return users;\n}\n\n/**\n * @name user\n * @memberof Fixtures\n * @summary Define user Factory\n * @example const user1 = Factory.create(\"user\");\n * @description Types of User factories\n * - `user` - A user\n * - `registeredUser` - A user with a password, loginTokens and roles: `account/profile, guest, product, tag, index, cart/checkout, cart/completed`\n * - `anonymous` - A user without an account with rules: `guest, anonymous, product, tag, index, cart/checkout, cart/completed`\n * @property {String} username - `faker.internet.userName() + _.random(0, 1000)`\n * @property {String} name - `faker.name.findName()`\n * @property {Array} emails - `[{address: faker.internet.email(), verified: true}]`\n * @property {Object} profile - `{\n   name: this.name,\n   email: faker.internet.email(),\n   profilePictureUrl: faker.image.imageUrl()\n }`\n * @property {String} gender - String: `\"Male\", \"Female\", \"Either\"`\n * @property {String} description - `faker.lorem.paragraphs(3)`\n * @property {Date} startTime - `calculatedStartTime`\n * @property {Date} createdAt - `new Date()`\n * @property {Object} roles - `{shopId: [\"guest\", \"anonymous\", \"product\"]}`\n */\nconst user = {\n  username() {\n    return faker.internet.userName() + _random(0, 1000);\n  },\n\n  name() {\n    return faker.name.findName();\n  },\n\n  emails() {\n    const email = faker.internet.email();\n    return [{\n      address: email,\n      verified: true\n    }];\n  },\n\n  profile() {\n    return {\n      name: this.name,\n      email: faker.internet.email(),\n      profilePictureUrl: faker.image.imageUrl()\n    };\n  },\n\n  gender() {\n    return [\"Either\", \"Male\", \"Female\"][_random(0, 2)];\n  },\n\n  description() {\n    return faker.lorem.paragraphs(3);\n  },\n\n  startTime() {\n    const numDaysToAdd = Math.floor(Math.random() * 32); // random number of days between 0 and 31\n\n    const numHoursToAdd = Math.floor(Math.random() * 25); // random number of hours between 0 and 24\n\n    const secondsInDay = 24 * 60 * 60 * 1000;\n    const secondsInHour = 24 * 60 * 60 * 1000;\n    const calculatedStartTime = Date.now() + numDaysToAdd * secondsInDay + (numHoursToAdd + secondsInHour);\n    return new Date(calculatedStartTime);\n  },\n\n  createdAt: new Date()\n};\nconst anonymous = {\n  roles: {\n    [getShop()._id]: [\"guest\", \"anonymous\", \"product\", \"tag\", \"index\", \"cart/checkout\", \"cart/completed\"]\n  }\n};\nmodule.exportDefault(function () {\n  const numDaysToAdd = Math.floor(Math.random() * 32); // random number of days between 0 and 31\n\n  const numHoursToAdd = Math.floor(Math.random() * 25); // random number of hours between 0 and 24\n\n  const secondsInDay = 24 * 60 * 60 * 1000;\n  const secondsInHour = 24 * 60 * 60 * 1000;\n  const timeOffset = Date.now() + numDaysToAdd * secondsInDay + (numHoursToAdd + secondsInHour);\n  const registered = {\n    roles: {\n      [getShop()._id]: [\"account/profile\", \"guest\", \"product\", \"tag\", \"index\", \"cart/checkout\", \"cart/completed\"]\n    },\n    services: {\n      password: {\n        bcrypt: Random.id(29)\n      },\n      resume: {\n        loginTokens: [{\n          when: timeOffset\n        }]\n      }\n    }\n  };\n  Factory.define(\"user\", Meteor.users, user);\n  Factory.define(\"registeredUser\", Meteor.users, Object.assign({}, user, registered));\n  Factory.define(\"anonymous\", Meteor.users, Object.assign({}, user, anonymous));\n});","map":{"version":3,"sources":["server/imports/fixtures/users.js"],"names":["module","export","getUser","getUsers","_random","watch","require","default","v","faker","Meteor","Random","Factory","getShop","existingUser","users","findOne","create","limit","existingUsers","find","fetch","i","user","push","username","internet","userName","name","findName","emails","email","address","verified","profile","profilePictureUrl","image","imageUrl","gender","description","lorem","paragraphs","startTime","numDaysToAdd","Math","floor","random","numHoursToAdd","secondsInDay","secondsInHour","calculatedStartTime","Date","now","createdAt","anonymous","roles","_id","exportDefault","timeOffset","registered","services","password","bcrypt","id","resume","loginTokens","when","define","Object","assign"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA,OAAb;AAAqBC,YAAS,MAAIA;AAAlC,CAAd;;AAA2D,IAAIC,OAAJ;;AAAYJ,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,UAAQC,CAAR,EAAU;AAACJ,cAAQI,CAAR;AAAU;;AAAtB,CAAtC,EAA8D,CAA9D;AAAiE,IAAIC,KAAJ;AAAUT,OAAOK,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACC,YAAMD,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIE,MAAJ;AAAWV,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACI,SAAOF,CAAP,EAAS;AAACE,aAAOF,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIG,MAAJ;AAAWX,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACK,SAAOH,CAAP,EAAS;AAACG,aAAOH,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAII,OAAJ;AAAYZ,OAAOK,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAACM,UAAQJ,CAAR,EAAU;AAACI,cAAQJ,CAAR;AAAU;;AAAtB,CAA/C,EAAuE,CAAvE;AAA0E,IAAIK,OAAJ;AAAYb,OAAOK,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACO,UAAQL,CAAR,EAAU;AAACK,cAAQL,CAAR;AAAU;;AAAtB,CAAhC,EAAwD,CAAxD;;AAYxb,SAASN,OAAT,GAAmB;AACxB,QAAMY,eAAeJ,OAAOK,KAAP,CAAaC,OAAb,EAArB;AACA,SAAOF,gBAAgBF,QAAQK,MAAR,CAAe,MAAf,CAAvB;AACD;;AAQM,SAASd,QAAT,CAAkBe,QAAQ,CAA1B,EAA6B;AAClC,QAAMH,QAAQ,EAAd;AACA,QAAMI,gBAAgBT,OAAOK,KAAP,CAAaK,IAAb,CAAkB,EAAlB,EAAsB;AAAEF;AAAF,GAAtB,EAAiCG,KAAjC,EAAtB;;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,KAApB,EAA2BI,KAAK,CAAhC,EAAmC;AACjC,UAAMC,OAAOJ,cAAcG,CAAd,KAAoBV,QAAQK,MAAR,CAAe,MAAf,CAAjC;AACAF,UAAMS,IAAN,CAAWD,IAAX;AACD;;AACD,SAAOR,KAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMQ,OAAO;AACXE,aAAW;AACT,WAAOhB,MAAMiB,QAAN,CAAeC,QAAf,KAA4B,QAAS,CAAT,EAAY,IAAZ,CAAnC;AACD,GAHU;;AAKXC,SAAO;AACL,WAAOnB,MAAMmB,IAAN,CAAWC,QAAX,EAAP;AACD,GAPU;;AASXC,WAAS;AACP,UAAMC,QAAQtB,MAAMiB,QAAN,CAAeK,KAAf,EAAd;AACA,WAAO,CAAC;AACNC,eAASD,KADH;AAENE,gBAAU;AAFJ,KAAD,CAAP;AAID,GAfU;;AAiBXC,YAAU;AACR,WAAO;AACLN,YAAM,KAAKA,IADN;AAELG,aAAOtB,MAAMiB,QAAN,CAAeK,KAAf,EAFF;AAGLI,yBAAmB1B,MAAM2B,KAAN,CAAYC,QAAZ;AAHd,KAAP;AAKD,GAvBU;;AAyBXC,WAAS;AACP,WAAO,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,QAAS,CAAT,EAAY,CAAZ,CAA7B,CAAP;AACD,GA3BU;;AA6BXC,gBAAc;AACZ,WAAO9B,MAAM+B,KAAN,CAAYC,UAAZ,CAAuB,CAAvB,CAAP;AACD,GA/BU;;AAiCXC,cAAY;AACV,UAAMC,eAAeC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAArB,CADU,CAC2C;;AACrD,UAAMC,gBAAgBH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAAtB,CAFU,CAE4C;;AACtD,UAAME,eAAe,KAAK,EAAL,GAAU,EAAV,GAAe,IAApC;AACA,UAAMC,gBAAgB,KAAK,EAAL,GAAU,EAAV,GAAe,IAArC;AAEA,UAAMC,sBAAsBC,KAAKC,GAAL,KAAcT,eAAeK,YAA7B,IAA8CD,gBAAgBE,aAA9D,CAA5B;AAEA,WAAO,IAAIE,IAAJ,CAASD,mBAAT,CAAP;AACD,GA1CU;;AA4CXG,aAAW,IAAIF,IAAJ;AA5CA,CAAb;AA+CA,MAAMG,YAAY;AAChBC,SAAO;AACL,KAAC1C,UAAU2C,GAAX,GAAiB,CACf,OADe,EAEf,WAFe,EAGf,SAHe,EAIf,KAJe,EAKf,OALe,EAMf,eANe,EAOf,gBAPe;AADZ;AADS,CAAlB;AAvGAxD,OAAOyD,aAAP,CAqHe,YAAY;AACzB,QAAMd,eAAeC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAArB,CADyB,CAC4B;;AACrD,QAAMC,gBAAgBH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,EAA3B,CAAtB,CAFyB,CAE6B;;AACtD,QAAME,eAAe,KAAK,EAAL,GAAU,EAAV,GAAe,IAApC;AACA,QAAMC,gBAAgB,KAAK,EAAL,GAAU,EAAV,GAAe,IAArC;AAEA,QAAMS,aAAaP,KAAKC,GAAL,KAAcT,eAAeK,YAA7B,IAA8CD,gBAAgBE,aAA9D,CAAnB;AAEA,QAAMU,aAAa;AACjBJ,WAAO;AACL,OAAC1C,UAAU2C,GAAX,GAAiB,CACf,iBADe,EAEf,OAFe,EAGf,SAHe,EAIf,KAJe,EAKf,OALe,EAMf,eANe,EAOf,gBAPe;AADZ,KADU;AAYjBI,cAAU;AACRC,gBAAU;AACRC,gBAAQnD,OAAOoD,EAAP,CAAU,EAAV;AADA,OADF;AAIRC,cAAQ;AACNC,qBAAa,CACX;AACEC,gBAAMR;AADR,SADW;AADP;AAJA;AAZO,GAAnB;AA2BA9C,UAAQuD,MAAR,CAAe,MAAf,EAAuBzD,OAAOK,KAA9B,EAAqCQ,IAArC;AACAX,UAAQuD,MAAR,CACE,gBADF,EACoBzD,OAAOK,KAD3B,EAEEqD,OAAOC,MAAP,CAAc,EAAd,EAAkB9C,IAAlB,EAAwBoC,UAAxB,CAFF;AAKA/C,UAAQuD,MAAR,CAAe,WAAf,EAA4BzD,OAAOK,KAAnC,EAA0CqD,OAAOC,MAAP,CAAc,EAAd,EAAkB9C,IAAlB,EAAwB+B,SAAxB,CAA1C;AACD,CA/JD","sourcesContent":["import faker from \"faker\";\nimport _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { Factory } from \"meteor/dburles:factory\";\nimport { getShop } from \"./shops\";\n\n/**\n * @method getUser\n * @memberof Fixtures\n * @return {Object} Existing user or Factory user\n */\nexport function getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\n/**\n * @method getUsers\n * @memberof Fixtures\n * @param {Number} limit Default set to 2\n * @return {Array} Array of existing users or Factory user\n */\nexport function getUsers(limit = 2) {\n  const users = [];\n  const existingUsers = Meteor.users.find({}, { limit }).fetch();\n  for (let i = 0; i < limit; i += 1) {\n    const user = existingUsers[i] || Factory.create(\"user\");\n    users.push(user);\n  }\n  return users;\n}\n\n/**\n * @name user\n * @memberof Fixtures\n * @summary Define user Factory\n * @example const user1 = Factory.create(\"user\");\n * @description Types of User factories\n * - `user` - A user\n * - `registeredUser` - A user with a password, loginTokens and roles: `account/profile, guest, product, tag, index, cart/checkout, cart/completed`\n * - `anonymous` - A user without an account with rules: `guest, anonymous, product, tag, index, cart/checkout, cart/completed`\n * @property {String} username - `faker.internet.userName() + _.random(0, 1000)`\n * @property {String} name - `faker.name.findName()`\n * @property {Array} emails - `[{address: faker.internet.email(), verified: true}]`\n * @property {Object} profile - `{\n   name: this.name,\n   email: faker.internet.email(),\n   profilePictureUrl: faker.image.imageUrl()\n }`\n * @property {String} gender - String: `\"Male\", \"Female\", \"Either\"`\n * @property {String} description - `faker.lorem.paragraphs(3)`\n * @property {Date} startTime - `calculatedStartTime`\n * @property {Date} createdAt - `new Date()`\n * @property {Object} roles - `{shopId: [\"guest\", \"anonymous\", \"product\"]}`\n */\nconst user = {\n  username() {\n    return faker.internet.userName() + _.random(0, 1000);\n  },\n\n  name() {\n    return faker.name.findName();\n  },\n\n  emails() {\n    const email = faker.internet.email();\n    return [{\n      address: email,\n      verified: true\n    }];\n  },\n\n  profile() {\n    return {\n      name: this.name,\n      email: faker.internet.email(),\n      profilePictureUrl: faker.image.imageUrl()\n    };\n  },\n\n  gender() {\n    return [\"Either\", \"Male\", \"Female\"][_.random(0, 2)];\n  },\n\n  description() {\n    return faker.lorem.paragraphs(3);\n  },\n\n  startTime() {\n    const numDaysToAdd = Math.floor(Math.random() * 32); // random number of days between 0 and 31\n    const numHoursToAdd = Math.floor(Math.random() * 25); // random number of hours between 0 and 24\n    const secondsInDay = 24 * 60 * 60 * 1000;\n    const secondsInHour = 24 * 60 * 60 * 1000;\n\n    const calculatedStartTime = Date.now() + (numDaysToAdd * secondsInDay) + (numHoursToAdd + secondsInHour);\n\n    return new Date(calculatedStartTime);\n  },\n\n  createdAt: new Date()\n};\n\nconst anonymous = {\n  roles: {\n    [getShop()._id]: [\n      \"guest\",\n      \"anonymous\",\n      \"product\",\n      \"tag\",\n      \"index\",\n      \"cart/checkout\",\n      \"cart/completed\"\n    ]\n  }\n};\n\nexport default function () {\n  const numDaysToAdd = Math.floor(Math.random() * 32); // random number of days between 0 and 31\n  const numHoursToAdd = Math.floor(Math.random() * 25); // random number of hours between 0 and 24\n  const secondsInDay = 24 * 60 * 60 * 1000;\n  const secondsInHour = 24 * 60 * 60 * 1000;\n\n  const timeOffset = Date.now() + (numDaysToAdd * secondsInDay) + (numHoursToAdd + secondsInHour);\n\n  const registered = {\n    roles: {\n      [getShop()._id]: [\n        \"account/profile\",\n        \"guest\",\n        \"product\",\n        \"tag\",\n        \"index\",\n        \"cart/checkout\",\n        \"cart/completed\"\n      ]\n    },\n    services: {\n      password: {\n        bcrypt: Random.id(29)\n      },\n      resume: {\n        loginTokens: [\n          {\n            when: timeOffset\n          }\n        ]\n      }\n    }\n  };\n\n\n  Factory.define(\"user\", Meteor.users, user);\n  Factory.define(\n    \"registeredUser\", Meteor.users,\n    Object.assign({}, user, registered)\n  );\n\n  Factory.define(\"anonymous\", Meteor.users, Object.assign({}, user, anonymous));\n}\n"]},"sourceType":"script","hash":"b9a760e7e3c7940f73574973b57f354b17f96259"}
