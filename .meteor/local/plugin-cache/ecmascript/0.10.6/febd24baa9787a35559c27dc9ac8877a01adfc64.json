{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/imports/fixtures/orders.js","filename":"server/imports/fixtures/orders.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/imports/fixtures/orders.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/imports/fixtures/orders.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/imports/fixtures/orders.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  randomProcessor: () => randomProcessor,\n  randomStatus: () => randomStatus,\n  randomMode: () => randomMode,\n  paymentMethod: () => paymentMethod,\n  getUserId: () => getUserId,\n  getShopId: () => getShopId\n});\n\nlet _sample;\n\nmodule.watch(require(\"lodash/sample\"), {\n  default(v) {\n    _sample = v;\n  }\n\n}, 0);\nlet faker;\nmodule.watch(require(\"faker\"), {\n  default(v) {\n    faker = v;\n  }\n\n}, 1);\nlet Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet Factory;\nmodule.watch(require(\"meteor/dburles:factory\"), {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 3);\nlet Orders, Products;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Orders(v) {\n    Orders = v;\n  },\n\n  Products(v) {\n    Products = v;\n  }\n\n}, 4);\nlet getShop;\nmodule.watch(require(\"./shops\"), {\n  getShop(v) {\n    getShop = v;\n  }\n\n}, 5);\nlet getUser;\nmodule.watch(require(\"./users\"), {\n  getUser(v) {\n    getUser = v;\n  }\n\n}, 6);\nlet getPkgData;\nmodule.watch(require(\"./packages\"), {\n  getPkgData(v) {\n    getPkgData = v;\n  }\n\n}, 7);\nlet getAddress;\nmodule.watch(require(\"./accounts\"), {\n  getAddress(v) {\n    getAddress = v;\n  }\n\n}, 8);\nlet addProduct;\nmodule.watch(require(\"./products\"), {\n  addProduct(v) {\n    addProduct = v;\n  }\n\n}, 9);\n\nfunction randomProcessor() {\n  return _sample([\"Stripe\", \"Paypal\", \"Braintree\"]);\n}\n\nconst itemIdOne = Random.id();\nconst itemIdTwo = Random.id();\n/**\n * @method randomStatus\n * @memberof Fixtures\n * @summary Return a random payment status, from: `\"created\", \"approved\", \"failed\", \"canceled\", \"expired\", \"pending\", \"voided\", \"settled\"`\n * @return {String} Payment status string\n */\n\nfunction randomStatus() {\n  return _sample([\"created\", \"approved\", \"failed\", \"canceled\", \"expired\", \"pending\", \"voided\", \"settled\"]);\n}\n\nfunction randomMode() {\n  return _sample([\"authorize\", \"capture\", \"refund\", \"void\"]);\n}\n\nfunction paymentMethod(doc) {\n  return (0, _objectSpread2.default)({}, doc, {\n    processor: doc.processor ? doc.processor : randomProcessor(),\n    storedCard: doc.storedCard ? doc.storedCard : \"4242424242424242\",\n    transactionId: doc.transactionId ? doc.transactionId : Random.id(),\n    status: doc.status ? doc.status : randomStatus(),\n    mode: doc.mode ? doc.mode : randomMode(),\n    authorization: \"auth field\",\n    amount: doc.amount ? doc.amount : faker.commerce.price()\n  });\n}\n\nfunction getUserId() {\n  return getUser()._id;\n}\n\nfunction getShopId() {\n  return getShop()._id;\n}\n\nmodule.exportDefault(function () {\n  const shopId = getShopId();\n  /**\n   * @name order\n   * @summary Create an Order Factory\n   * @example order = Factory.create(\"order\")\n   * @property {String} additionalField OrderItems - `faker.lorem.sentence()`\n   * @property {String} status OrderItems - `faker.lorem.sentence(3)`\n   * @property {Array} history OrderItems History - `[]`\n   * @property {Array} documents OrderItems Document - `[]`\n   * @property {String} cartId Order - `Random.id()`\n   * @property {Array} notes Order - `[]`\n   * @property {String} shopId Cart - `shopId`\n   * @property {String} shopId.userId Cart - `userId`\n   * @property {String} shopId.sessionId Cart - `\"Session\"`\n   * @property {String} shopId.email Cart - `faker.internet.email()`\n   * @property {String} shopId.workflow Cart - Object\n   * @property {String} shopId.workflow.status Cart - `\"new\"`\n   * @property {String} shopId.workflow Cart - `\"coreOrderWorkflow/created\"`\n   * @property {Array} shopId.items Array of products\n   * @property {String} shopId.items._id Cart - Product - cart ID\n   * @property {String} shopId.items.title Cart - Product - `\"itemOne\"`\n   * @property {String} shopId.items.shopId Cart - Product - store ID\n   * @property {String} shopId.items.productId Cart - Product - product ID\n   * @property {Number} shopId.items.quantity Cart - Product - `1`\n   * @property {Object} shopId.items.variants Cart - Product - variants\n   * @property {Object} shopId.items.workflow Cart - Product - Object\n   * @property {String} shopId.items.workflow.status Cart - Product - `\"new\"`\n   * @property {Boolean} requiresShipping - `true`\n   * @property {Array} shipping - Shipping - `[{}]`\n   * @property {Object} items - Shipping - `Object`\n   * @property {String} item._id - Shipping - `itemIdOne`\n   * @property {String} item.productId - Shipping - `Random.id()`\n   * @property {String} item.variantId - Shipping - `Random.id()`\n   * @property {Boolean} item.packed - Shipping - `false`\n   * @property {Array} billing - Billing - `[]`\n   * @property {String} billing._id - Billing - `Random.id()`\n   * @property {Object} billing.address - Billing - Address object\n   * @property {Object} billing.paymentMethod - Billing - Payment Method\n   * @property {String} billing.paymentMethod.method - `\"credit\"`\n   * @property {String} billing.paymentMethod.processor - `\"Example\"`\n   * @property {String} billing.paymentMethod.storedCard - `\"Mastercard 2346\"`\n   * @property {String} billing.paymentMethod.paymentPackageId - `getPkgData(\"example-paymentmethod\")._id`\n   * @property {String} paymentSettingsKey - `\"example-paymentmethod\"`\n   * @property {String} mode - `\"authorize\"`\n   * @property {String} status - `\"created\"`\n   * @property {Number} amount - `12.4`\n   * @property {Object} invoice - Object\n   * @property {Number} invoice.total - `12.45`\n   * @property {Number} invoice.subtotal - `12.45`\n   * @property {Number} invoice.discounts - `0`\n   * @property {Number} invoice.taxes - `0.12`\n   * @property {Number} invoice.shipping - `4.0`\n   * @property {String} state - `\"new\"`\n   * @property {Date} createdAt - `new Date()`\n   * @property {Date} updatedAt - `new Date()`\n   */\n\n  Factory.define(\"order\", Orders, {\n    // Schemas.OrderItems\n    additionalField: faker.lorem.sentence(),\n    status: faker.lorem.sentence(3),\n    history: [],\n    documents: [],\n    // Schemas.Order\n    cartId: Random.id(),\n    notes: [],\n    // Schemas.Cart\n    shopId,\n    userId: getUserId(),\n    sessionId: \"Session\",\n    email: faker.internet.email(),\n    workflow: {\n      status: \"new\",\n      workflow: [\"coreOrderWorkflow/created\"]\n    },\n\n    items() {\n      const product = addProduct({\n        shopId\n      });\n      const variant = Products.findOne({\n        ancestors: [product._id]\n      });\n      const childVariants = Products.find({\n        ancestors: [product._id, variant._id]\n      }).fetch();\n      const selectedOption = Random.choice(childVariants);\n      const product2 = addProduct({\n        shopId\n      });\n      const variant2 = Products.findOne({\n        ancestors: [product2._id]\n      });\n      const childVariants2 = Products.find({\n        ancestors: [product2._id, variant2._id]\n      }).fetch();\n      const selectedOption2 = Random.choice(childVariants2);\n      return [{\n        _id: itemIdOne,\n        title: \"firstItem\",\n        shopId: product.shopId,\n        productId: product._id,\n        quantity: 1,\n        product,\n        variants: selectedOption,\n        workflow: {\n          status: \"new\"\n        }\n      }, {\n        _id: itemIdTwo,\n        title: \"secondItem\",\n        shopId: product2.shopId,\n        productId: product2._id,\n        quantity: 1,\n        product: product2,\n        variants: selectedOption2,\n        workflow: {\n          status: \"new\"\n        }\n      }];\n    },\n\n    requiresShipping: true,\n    shipping: [{\n      shopId,\n      address: getAddress({\n        isShippingDefault: true\n      }),\n      items: [{\n        _id: itemIdOne,\n        productId: Random.id(),\n        quantity: 1,\n        shopId,\n        variantId: Random.id(),\n        packed: false\n      }, {\n        _id: itemIdTwo,\n        productId: Random.id(),\n        quantity: 1,\n        shopId,\n        variantId: Random.id(),\n        packed: false\n      }]\n    }],\n    // Shipping Schema\n    billing: [{\n      _id: Random.id(),\n      shopId,\n      address: getAddress({\n        isBillingDefault: true\n      }),\n      paymentMethod: paymentMethod({\n        method: \"credit\",\n        processor: \"Example\",\n        storedCard: \"Mastercard 2346\",\n        paymentPackageId: getPkgData(\"example-paymentmethod\") ? getPkgData(\"example-paymentmethod\")._id : \"uiwneiwknekwewe\",\n        paymentSettingsKey: \"example-paymentmethod\",\n        mode: \"authorize\",\n        status: \"created\",\n        amount: 12.45\n      }),\n      invoice: {\n        total: 12.45,\n        subtotal: 12.45,\n        discounts: 0,\n        taxes: 0.12,\n        shipping: 4.00\n      }\n    }],\n    state: \"new\",\n    createdAt: new Date(),\n    updatedAt: new Date()\n  });\n  /**\n   * @name authorizedApprovedPaypalOrder\n   * @summary Defines order factory which generates an authorized, approved, paypal order.\n   * @memberof Fixtures\n   * @property {Array} billing - Array of Billing objects\n   * @property {String} billing._id\n   * @property {String} billing.shopId\n   * @property {Object} billing.address - Address object\n   * @property {Object} billing.paymentMethod\n   * @property {String} billing.paymentMethod.processor \"Paypal\"\n   * @property {String} billing.paymentMethod.mode \"authorize\"\n   * @property {String} billing.paymentMethod.status \"approved\n   */\n\n  Factory.define(\"authorizedApprovedPaypalOrder\", Orders, Factory.extend(\"order\", {\n    billing: [{\n      _id: Random.id(),\n      shopId: getShopId(),\n      address: getAddress({\n        isBillingDefault: true\n      }),\n      paymentMethod: paymentMethod({\n        processor: \"Paypal\",\n        mode: \"authorize\",\n        status: \"approved\"\n      })\n    }]\n  }));\n});","map":{"version":3,"sources":["server/imports/fixtures/orders.js"],"names":["module","export","randomProcessor","randomStatus","randomMode","paymentMethod","getUserId","getShopId","_sample","watch","require","default","v","faker","Random","Factory","Orders","Products","getShop","getUser","getPkgData","getAddress","addProduct","itemIdOne","id","itemIdTwo","doc","processor","storedCard","transactionId","status","mode","authorization","amount","commerce","price","_id","exportDefault","shopId","define","additionalField","lorem","sentence","history","documents","cartId","notes","userId","sessionId","email","internet","workflow","items","product","variant","findOne","ancestors","childVariants","find","fetch","selectedOption","choice","product2","variant2","childVariants2","selectedOption2","title","productId","quantity","variants","requiresShipping","shipping","address","isShippingDefault","variantId","packed","billing","isBillingDefault","method","paymentPackageId","paymentSettingsKey","invoice","total","subtotal","discounts","taxes","state","createdAt","Date","updatedAt","extend"],"mappings":"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","sourcesContent":["import faker from \"faker\";\nimport _ from \"lodash\";\nimport { Random } from \"meteor/random\";\nimport { Factory } from \"meteor/dburles:factory\";\nimport { Orders, Products } from \"/lib/collections\";\nimport { getShop } from \"./shops\";\nimport { getUser } from \"./users\";\nimport { getPkgData } from \"./packages\";\nimport { getAddress } from \"./accounts\";\nimport { addProduct } from \"./products\";\n\n/**\n * @method randomProcessor\n * @memberof Fixtures\n * @summary Return a random payment processor string, either: `\"Stripe\"`, `\"Paypal\"` or `\"Braintree\"`\n * @return {String} Name of payment processor\n */\nexport function randomProcessor() {\n  return _.sample([\"Stripe\", \"Paypal\", \"Braintree\"]);\n}\n\nconst itemIdOne = Random.id();\nconst itemIdTwo = Random.id();\n\n/**\n * @method randomStatus\n * @memberof Fixtures\n * @summary Return a random payment status, from: `\"created\", \"approved\", \"failed\", \"canceled\", \"expired\", \"pending\", \"voided\", \"settled\"`\n * @return {String} Payment status string\n */\nexport function randomStatus() {\n  return _.sample([\n    \"created\",\n    \"approved\",\n    \"failed\",\n    \"canceled\",\n    \"expired\",\n    \"pending\",\n    \"voided\",\n    \"settled\"\n  ]);\n}\n\n/**\n * @method randomMode\n * @memberof Fixtures\n * @summary Return a random credit card status, from: `\"authorize\", \"capture\", \"refund\", \"void\"`\n * @return {String} Payment status string\n */\nexport function randomMode() {\n  return _.sample([\"authorize\", \"capture\", \"refund\", \"void\"]);\n}\n\n/**\n * @method paymentMethod\n * @memberof Fixtures\n * @summary Create Payment Method object\n * @return {Object}     Payment method object\n * @property {String} processor - `randomProcessor()`\n * @property {String} storedCard - `\"4242424242424242\"`\n * @property {String} transactionId - `Random.id()`\n * @property {String} status - `randomStatus()`\n * @property {String} mode - `randomMode()`\n * @property {String} authorization - `\"auth field\"`\n * @property {Number} amount - `faker.commerce.price()`\n */\nexport function paymentMethod(doc) {\n  return {\n    ...doc,\n    processor: doc.processor ? doc.processor : randomProcessor(),\n    storedCard: doc.storedCard ? doc.storedCard : \"4242424242424242\",\n    transactionId: doc.transactionId ? doc.transactionId : Random.id(),\n    status: doc.status ? doc.status : randomStatus(),\n    mode: doc.mode ? doc.mode : randomMode(),\n    authorization: \"auth field\",\n    amount: doc.amount ? doc.amount : faker.commerce.price()\n  };\n}\n\n/**\n * @method getUserId\n * @memberof Fixtures\n * @return {String} ID\n */\nexport function getUserId() {\n  return getUser()._id;\n}\n\n/**\n * @method getShopId\n * @memberof Fixtures\n * @return {String} ID\n */\nexport function getShopId() {\n  return getShop()._id;\n}\n\nexport default function () {\n  const shopId = getShopId();\n  /**\n   * @name order\n   * @summary Create an Order Factory\n   * @example order = Factory.create(\"order\")\n   * @property {String} additionalField OrderItems - `faker.lorem.sentence()`\n   * @property {String} status OrderItems - `faker.lorem.sentence(3)`\n   * @property {Array} history OrderItems History - `[]`\n   * @property {Array} documents OrderItems Document - `[]`\n   * @property {String} cartId Order - `Random.id()`\n   * @property {Array} notes Order - `[]`\n   * @property {String} shopId Cart - `shopId`\n   * @property {String} shopId.userId Cart - `userId`\n   * @property {String} shopId.sessionId Cart - `\"Session\"`\n   * @property {String} shopId.email Cart - `faker.internet.email()`\n   * @property {String} shopId.workflow Cart - Object\n   * @property {String} shopId.workflow.status Cart - `\"new\"`\n   * @property {String} shopId.workflow Cart - `\"coreOrderWorkflow/created\"`\n   * @property {Array} shopId.items Array of products\n   * @property {String} shopId.items._id Cart - Product - cart ID\n   * @property {String} shopId.items.title Cart - Product - `\"itemOne\"`\n   * @property {String} shopId.items.shopId Cart - Product - store ID\n   * @property {String} shopId.items.productId Cart - Product - product ID\n   * @property {Number} shopId.items.quantity Cart - Product - `1`\n   * @property {Object} shopId.items.variants Cart - Product - variants\n   * @property {Object} shopId.items.workflow Cart - Product - Object\n   * @property {String} shopId.items.workflow.status Cart - Product - `\"new\"`\n   * @property {Boolean} requiresShipping - `true`\n   * @property {Array} shipping - Shipping - `[{}]`\n   * @property {Object} items - Shipping - `Object`\n   * @property {String} item._id - Shipping - `itemIdOne`\n   * @property {String} item.productId - Shipping - `Random.id()`\n   * @property {String} item.variantId - Shipping - `Random.id()`\n   * @property {Boolean} item.packed - Shipping - `false`\n   * @property {Array} billing - Billing - `[]`\n   * @property {String} billing._id - Billing - `Random.id()`\n   * @property {Object} billing.address - Billing - Address object\n   * @property {Object} billing.paymentMethod - Billing - Payment Method\n   * @property {String} billing.paymentMethod.method - `\"credit\"`\n   * @property {String} billing.paymentMethod.processor - `\"Example\"`\n   * @property {String} billing.paymentMethod.storedCard - `\"Mastercard 2346\"`\n   * @property {String} billing.paymentMethod.paymentPackageId - `getPkgData(\"example-paymentmethod\")._id`\n   * @property {String} paymentSettingsKey - `\"example-paymentmethod\"`\n   * @property {String} mode - `\"authorize\"`\n   * @property {String} status - `\"created\"`\n   * @property {Number} amount - `12.4`\n   * @property {Object} invoice - Object\n   * @property {Number} invoice.total - `12.45`\n   * @property {Number} invoice.subtotal - `12.45`\n   * @property {Number} invoice.discounts - `0`\n   * @property {Number} invoice.taxes - `0.12`\n   * @property {Number} invoice.shipping - `4.0`\n   * @property {String} state - `\"new\"`\n   * @property {Date} createdAt - `new Date()`\n   * @property {Date} updatedAt - `new Date()`\n   */\n  Factory.define(\"order\", Orders, {\n    // Schemas.OrderItems\n    additionalField: faker.lorem.sentence(),\n    status: faker.lorem.sentence(3),\n    history: [],\n    documents: [],\n\n    // Schemas.Order\n    cartId: Random.id(),\n    notes: [],\n\n    // Schemas.Cart\n    shopId,\n    userId: getUserId(),\n    sessionId: \"Session\",\n    email: faker.internet.email(),\n    workflow: {\n      status: \"new\",\n      workflow: [\n        \"coreOrderWorkflow/created\"\n      ]\n    },\n    items() {\n      const product = addProduct({ shopId });\n      const variant = Products.findOne({ ancestors: [product._id] });\n      const childVariants = Products.find({\n        ancestors: [\n          product._id, variant._id\n        ]\n      }).fetch();\n      const selectedOption = Random.choice(childVariants);\n      const product2 = addProduct({ shopId });\n      const variant2 = Products.findOne({ ancestors: [product2._id] });\n      const childVariants2 = Products.find({\n        ancestors: [\n          product2._id, variant2._id\n        ]\n      }).fetch();\n      const selectedOption2 = Random.choice(childVariants2);\n      return [{\n        _id: itemIdOne,\n        title: \"firstItem\",\n        shopId: product.shopId,\n        productId: product._id,\n        quantity: 1,\n        product,\n        variants: selectedOption,\n        workflow: {\n          status: \"new\"\n        }\n      }, {\n        _id: itemIdTwo,\n        title: \"secondItem\",\n        shopId: product2.shopId,\n        productId: product2._id,\n        quantity: 1,\n        product: product2,\n        variants: selectedOption2,\n        workflow: {\n          status: \"new\"\n        }\n      }];\n    },\n    requiresShipping: true,\n    shipping: [{\n      shopId,\n      address: getAddress({ isShippingDefault: true }),\n      items: [\n        {\n          _id: itemIdOne,\n          productId: Random.id(),\n          quantity: 1,\n          shopId,\n          variantId: Random.id(),\n          packed: false\n        },\n        {\n          _id: itemIdTwo,\n          productId: Random.id(),\n          quantity: 1,\n          shopId,\n          variantId: Random.id(),\n          packed: false\n        }\n      ]\n    }], // Shipping Schema\n    billing: [{\n      _id: Random.id(),\n      shopId,\n      address: getAddress({ isBillingDefault: true }),\n      paymentMethod: paymentMethod({\n        method: \"credit\",\n        processor: \"Example\",\n        storedCard: \"Mastercard 2346\",\n        paymentPackageId: getPkgData(\"example-paymentmethod\") ? getPkgData(\"example-paymentmethod\")._id : \"uiwneiwknekwewe\",\n        paymentSettingsKey: \"example-paymentmethod\",\n        mode: \"authorize\",\n        status: \"created\",\n        amount: 12.45\n      }),\n      invoice: {\n        total: 12.45,\n        subtotal: 12.45,\n        discounts: 0,\n        taxes: 0.12,\n        shipping: 4.00\n      }\n    }],\n    state: \"new\",\n    createdAt: new Date(),\n    updatedAt: new Date()\n  });\n\n  /**\n   * @name authorizedApprovedPaypalOrder\n   * @summary Defines order factory which generates an authorized, approved, paypal order.\n   * @memberof Fixtures\n   * @property {Array} billing - Array of Billing objects\n   * @property {String} billing._id\n   * @property {String} billing.shopId\n   * @property {Object} billing.address - Address object\n   * @property {Object} billing.paymentMethod\n   * @property {String} billing.paymentMethod.processor \"Paypal\"\n   * @property {String} billing.paymentMethod.mode \"authorize\"\n   * @property {String} billing.paymentMethod.status \"approved\n   */\n  Factory.define(\n    \"authorizedApprovedPaypalOrder\", Orders,\n    Factory.extend(\"order\", {\n      billing: [{\n        _id: Random.id(),\n        shopId: getShopId(),\n        address: getAddress({ isBillingDefault: true }),\n        paymentMethod: paymentMethod({\n          processor: \"Paypal\",\n          mode: \"authorize\",\n          status: \"approved\"\n        })\n      }]\n    })\n  );\n}\n"]},"sourceType":"script","hash":"febd24baa9787a35559c27dc9ac8877a01adfc64"}
