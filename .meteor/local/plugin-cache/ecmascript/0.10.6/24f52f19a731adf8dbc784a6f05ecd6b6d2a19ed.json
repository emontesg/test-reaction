{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/accounts/server/methods/userAccountQuery.js","filename":"imports/plugins/core/accounts/server/methods/userAccountQuery.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/accounts/server/methods/userAccountQuery.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/accounts/server/methods/userAccountQuery.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/accounts/server/methods/userAccountQuery.js"}},"code":"module.export({\n  userAccountQuery: () => userAccountQuery\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nfunction userAccountQuery(context, id) {\n  return Promise.asyncApply(() => {\n    const {\n      collections,\n      userHasPermission,\n      userId\n    } = context;\n    const {\n      Accounts\n    } = collections;\n    const userAccount = Promise.await(Accounts.findOne({\n      _id: id\n    }));\n    if (!userAccount) throw new Meteor.Error(\"not-found\", \"No account found\"); // Check to make sure current user has permissions to view queried user\n\n    if (userId !== id && !userHasPermission([\"reaction-accounts\"], userAccount.shopId)) {\n      throw new Meteor.Error(\"access-denied\", \"User does not have permission\");\n    }\n\n    return userAccount;\n  });\n}","map":{"version":3,"sources":["imports/plugins/core/accounts/server/methods/userAccountQuery.js"],"names":["module","export","userAccountQuery","Meteor","watch","require","v","context","id","collections","userHasPermission","userId","Accounts","userAccount","findOne","_id","Error","shopId"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,oBAAiB,MAAIA;AAAtB,CAAd;AAAuD,IAAIC,MAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;;AAU3D,SAAeJ,gBAAf,CAAgCK,OAAhC,EAAyCC,EAAzC;AAAA,kCAA6C;AAClD,UAAM;AAAEC,iBAAF;AAAeC,uBAAf;AAAkCC;AAAlC,QAA6CJ,OAAnD;AACA,UAAM;AAAEK;AAAF,QAAeH,WAArB;AAEA,UAAMI,4BAAoBD,SAASE,OAAT,CAAiB;AAAEC,WAAKP;AAAP,KAAjB,CAApB,CAAN;AACA,QAAI,CAACK,WAAL,EAAkB,MAAM,IAAIV,OAAOa,KAAX,CAAiB,WAAjB,EAA8B,kBAA9B,CAAN,CALgC,CAOlD;;AACA,QAAIL,WAAWH,EAAX,IAAiB,CAACE,kBAAkB,CAAC,mBAAD,CAAlB,EAAyCG,YAAYI,MAArD,CAAtB,EAAoF;AAClF,YAAM,IAAId,OAAOa,KAAX,CAAiB,eAAjB,EAAkC,+BAAlC,CAAN;AACD;;AAED,WAAOH,WAAP;AACD,GAbM;AAAA","sourcesContent":["import { Meteor } from \"meteor/meteor\";\n\n/**\n * @name userAccountQuery\n * @method\n * @summary query the Accounts collection and return user account data\n * @param {Object} context - an object containing the per-request state\n * @param {String} id - id of user to query\n * @return {Object} user account object\n */\nexport async function userAccountQuery(context, id) {\n  const { collections, userHasPermission, userId } = context;\n  const { Accounts } = collections;\n\n  const userAccount = await Accounts.findOne({ _id: id });\n  if (!userAccount) throw new Meteor.Error(\"not-found\", \"No account found\");\n\n  // Check to make sure current user has permissions to view queried user\n  if (userId !== id && !userHasPermission([\"reaction-accounts\"], userAccount.shopId)) {\n    throw new Meteor.Error(\"access-denied\", \"User does not have permission\");\n  }\n\n  return userAccount;\n}\n"]},"sourceType":"script","hash":"24f52f19a731adf8dbc784a6f05ecd6b6d2a19ed"}
