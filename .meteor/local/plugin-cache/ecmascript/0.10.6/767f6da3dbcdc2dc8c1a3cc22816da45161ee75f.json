{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"packages/gadicc:blaze-react-component/blaze-react-component-client.js","filename":"packages/gadicc:blaze-react-component/blaze-react-component-client.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"packages/gadicc:blaze-react-component/blaze-react-component-client.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"packages/gadicc:blaze-react-component/blaze-react-component-client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/gadicc:blaze-react-component/blaze-react-component-client.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/extends\"));\n\nmodule.export({\n  blazeToReact: () => blazeToReact\n});\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.watch(require(\"react-dom\"), {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Blaze;\nmodule.watch(require(\"meteor/blaze\"), {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 2);\nlet ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 3);\nlet Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template(v) {\n    Template = v;\n  }\n\n}, 4);\n\nclass BlazeComponent extends Component {\n  componentDidMount() {\n    this.renderBlazeView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.template != this.props.template) {\n      Blaze.remove(this._blazeView);\n      this.renderBlazeView();\n    }\n  }\n\n  renderBlazeView() {\n    this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));\n    let template,\n        tArg = this.props.template;\n\n    if (typeof tArg === 'string') {\n      template = Template[tArg];\n      if (!template) throw new Error(`No Template[\"${tArg}\"] exists.  If this template ` + \"originates in your app, make sure you have the `templating` \" + \"package installed (and not, for e.g. `static-html`)\");\n    } else if (tArg instanceof Blaze.Template) {\n      template = tArg;\n    } else {\n      throw new Error(\"Invalid template= argument specified.  Expected \" + \"the string name of an existing Template, or the template \" + \"itself, instead got ''\" + typeof tArg + \": \" + JSON.stringify(tArg));\n    }\n\n    this._blazeView = Blaze.renderWithData(template, () => this._blazeData.get(), ReactDOM.findDOMNode(this._blazeRef));\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Never call render() for props except template again; Blaze will do what's necessary.\n    return nextProps.template !== this.props.template;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._blazeData.set(_.omit(nextProps, 'template'));\n  }\n\n  componentWillUnmount() {\n    Blaze.remove(this._blazeView);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      className: this.props.className || '',\n      ref: c => this._blazeRef = c\n    });\n  }\n\n}\n\nmodule.runSetters(blazeToReact = function (template) {\n  return props => React.createElement(BlazeComponent, (0, _extends2.default)({}, props, {\n    template: template\n  }));\n});\nmodule.exportDefault(BlazeComponent);","map":{"version":3,"sources":["packages/gadicc:blaze-react-component/blaze-react-component-client.js"],"names":["module","export","blazeToReact","React","Component","watch","require","default","v","ReactDOM","Blaze","ReactiveVar","Template","BlazeComponent","componentDidMount","renderBlazeView","componentDidUpdate","prevProps","template","props","remove","_blazeView","_blazeData","_","omit","tArg","Error","JSON","stringify","renderWithData","get","findDOMNode","_blazeRef","shouldComponentUpdate","nextProps","componentWillReceiveProps","set","componentWillUnmount","render","className","c","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Blaze } from 'meteor/blaze';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Template } from 'meteor/templating';\n\nclass BlazeComponent extends Component {\n\n  componentDidMount() {\n    this.renderBlazeView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.template != this.props.template) {\n      Blaze.remove(this._blazeView);\n      this.renderBlazeView();\n    }\n  }\n\n  renderBlazeView() {\n    this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));\n\n    let template, tArg = this.props.template;\n    if (typeof tArg === 'string') {\n      template = Template[tArg];\n      if (!template)\n        throw new Error(`No Template[\"${tArg}\"] exists.  If this template `\n          + \"originates in your app, make sure you have the `templating` \"\n          + \"package installed (and not, for e.g. `static-html`)\");\n    } else if (tArg instanceof Blaze.Template) {\n      template = tArg;\n    } else {\n        throw new Error(\"Invalid template= argument specified.  Expected \"\n          + \"the string name of an existing Template, or the template \"\n          + \"itself, instead got ''\" + typeof tArg + \": \"\n          + JSON.stringify(tArg));\n    }\n\n    this._blazeView = Blaze.renderWithData(\n      template,\n      () => this._blazeData.get(),\n      ReactDOM.findDOMNode(this._blazeRef)\n    );\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Never call render() for props except template again; Blaze will do what's necessary.\n    return nextProps.template !== this.props.template;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._blazeData.set(_.omit(nextProps, 'template'));\n  }\n\n  componentWillUnmount() {\n    Blaze.remove(this._blazeView);\n  }\n\n  render() {\n    return ( <span className={this.props.className || ''} ref={(c) => this._blazeRef = c} /> );\n  }\n\n}\n\nblazeToReact = function(template) {\n  return (props) => <BlazeComponent {...props} template={template} />;\n}\n\nexport { blazeToReact };\nexport default BlazeComponent;\n"]},"sourceType":"script","hash":"767f6da3dbcdc2dc8c1a3cc22816da45161ee75f"}
