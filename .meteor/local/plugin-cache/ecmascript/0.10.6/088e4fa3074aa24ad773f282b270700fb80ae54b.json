{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/accounts/serviceConfiguration.js","filename":"server/publications/accounts/serviceConfiguration.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/accounts/serviceConfiguration.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/accounts/serviceConfiguration.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/accounts/serviceConfiguration.js"}},"code":"let ServiceConfiguration;\nmodule.watch(require(\"meteor/service-configuration\"), {\n  ServiceConfiguration(v) {\n    ServiceConfiguration = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 3);\nlet Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 4);\n\n/**\n * Publish ServiceConfiguration\n * @param {String} checkUserId - we not using it directly because if shows not\n * correct userId. Instead of it we are believe only to `this.userId`\n */\nMeteor.publish(\"ServiceConfiguration\", function (checkUserId) {\n  check(checkUserId, Match.OneOf(String, null));\n\n  if (this.userId === null) {\n    return this.ready();\n  } // Admins and account managers can manage the login methods for the shop\n\n\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"dashboard/accounts\"], Reaction.getShopId())) {\n    return ServiceConfiguration.configurations.find({}, {\n      fields: {\n        secret: 1\n      }\n    });\n  }\n\n  return ServiceConfiguration.configurations.find({});\n});","map":{"version":3,"sources":["server/publications/accounts/serviceConfiguration.js"],"names":["ServiceConfiguration","module","watch","require","v","Meteor","check","Match","Roles","Reaction","publish","checkUserId","OneOf","String","userId","ready","userIsInRole","getShopId","configurations","find","fields","secret"],"mappings":"AAAA,IAAIA,oBAAJ;AAAyBC,OAAOC,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAACH,uBAAqBI,CAArB,EAAuB;AAACJ,2BAAqBI,CAArB;AAAuB;;AAAhD,CAArD,EAAuG,CAAvG;AAA0G,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,KAAJ,EAAUC,KAAV;AAAgBN,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ,GAAlB;;AAAmBG,QAAMH,CAAN,EAAQ;AAACG,YAAMH,CAAN;AAAQ;;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAII,KAAJ;AAAUP,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACK,QAAMJ,CAAN,EAAQ;AAACI,YAAMJ,CAAN;AAAQ;;AAAlB,CAA9C,EAAkE,CAAlE;AAAqE,IAAIK,QAAJ;AAAaR,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACM,WAASL,CAAT,EAAW;AAACK,eAASL,CAAT;AAAW;;AAAxB,CAAlC,EAA4D,CAA5D;;AAMvY;;;;;AAKAC,OAAOK,OAAP,CAAe,sBAAf,EAAuC,UAAUC,WAAV,EAAuB;AAC5DL,QAAMK,WAAN,EAAmBJ,MAAMK,KAAN,CAAYC,MAAZ,EAAoB,IAApB,CAAnB;;AACA,MAAI,KAAKC,MAAL,KAAgB,IAApB,EAA0B;AACxB,WAAO,KAAKC,KAAL,EAAP;AACD,GAJ2D,CAK5D;;;AACA,MAAIP,MAAMQ,YAAN,CACF,KAAKF,MADH,EACW,CAAC,OAAD,EAAU,OAAV,EAAmB,oBAAnB,CADX,EAEFL,SAASQ,SAAT,EAFE,CAAJ,EAGG;AACD,WAAOjB,qBAAqBkB,cAArB,CAAoCC,IAApC,CAAyC,EAAzC,EAA6C;AAClDC,cAAQ;AACNC,gBAAQ;AADF;AAD0C,KAA7C,CAAP;AAKD;;AAED,SAAOrB,qBAAqBkB,cAArB,CAAoCC,IAApC,CAAyC,EAAzC,CAAP;AACD,CAlBD","sourcesContent":["import { ServiceConfiguration } from \"meteor/service-configuration\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * Publish ServiceConfiguration\n * @param {String} checkUserId - we not using it directly because if shows not\n * correct userId. Instead of it we are believe only to `this.userId`\n */\nMeteor.publish(\"ServiceConfiguration\", function (checkUserId) {\n  check(checkUserId, Match.OneOf(String, null));\n  if (this.userId === null) {\n    return this.ready();\n  }\n  // Admins and account managers can manage the login methods for the shop\n  if (Roles.userIsInRole(\n    this.userId, [\"owner\", \"admin\", \"dashboard/accounts\"],\n    Reaction.getShopId()\n  )) {\n    return ServiceConfiguration.configurations.find({}, {\n      fields: {\n        secret: 1\n      }\n    });\n  }\n\n  return ServiceConfiguration.configurations.find({});\n});\n"]},"sourceType":"script","hash":"088e4fa3074aa24ad773f282b270700fb80ae54b"}
