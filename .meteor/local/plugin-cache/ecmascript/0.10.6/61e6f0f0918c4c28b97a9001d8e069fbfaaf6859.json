{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/collections/schemas/helpers.js","filename":"lib/collections/schemas/helpers.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"lib/collections/schemas/helpers.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"lib/collections/schemas/helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/collections/schemas/helpers.js"}},"code":"module.export({\n  createdAtAutoValue: function () {\n    return createdAtAutoValue;\n  },\n  updatedAtAutoValue: function () {\n    return updatedAtAutoValue;\n  },\n  shopIdAutoValue: function () {\n    return shopIdAutoValue;\n  },\n  shopIdAutoValueForCart: function () {\n    return shopIdAutoValueForCart;\n  },\n  schemaIdAutoValue: function () {\n    return schemaIdAutoValue;\n  },\n  shopDefaultCountry: function () {\n    return shopDefaultCountry;\n  }\n});\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Random;\nmodule.watch(require(\"meteor/random\"), {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar Shops;\nmodule.watch(require(\"./..\"), {\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 3);\n\nfunction createdAtAutoValue() {\n  // We don't want to unset or overwrite a createdAt in a nested\n  // document, for example, in a product being added to cart items\n  if (this.closestSubschemaFieldName) return;\n  if (this.isInsert) return new Date();\n  if (this.isUpsert) return {\n    $setOnInsert: new Date()\n  };\n  this.unset();\n}\n\nfunction updatedAtAutoValue() {\n  // We don't want to overwrite an updatedAt in a nested\n  // document, for example, in a product being added to cart items\n  if (this.closestSubschemaFieldName) return;\n  return new Date();\n}\n\nfunction shopIdAutoValue() {\n  // we should always have a shopId\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {\n    return Reaction.getShopId();\n  }\n\n  return this.unset();\n}\n\nfunction shopIdAutoValueForCart() {\n  // we should always have a shopId\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {\n    var shopId = Reaction.getPrimaryShopId();\n    var marketplaceSettings = Reaction.getMarketplaceSettings();\n\n    if (marketplaceSettings && marketplaceSettings.public && marketplaceSettings.public.merchantCart === true) {\n      shopId = Reaction.getShopId();\n    }\n\n    return shopId;\n  }\n\n  return this.unset();\n}\n\nfunction schemaIdAutoValue() {\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if (Meteor.isServer && this.operator !== \"$pull\" || Meteor.isClient && this.isInsert) {\n    return Random.id();\n  }\n\n  return this.unset();\n}\n\nfunction shopDefaultCountry() {\n  try {\n    // Check to see if this is client or server, and the type of update being performed\n    if (this.isSet && Meteor.isServer) {\n      return this.value;\n    } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {\n      // Find the current shop\n      var shop = Shops.findOne({\n        _id: Reaction.getShopId()\n      }); // Find the current shops primary shipping address\n\n      if (shop && shop.addressBook) {\n        var defaultShippingAddress = shop.addressBook.find(function (address) {\n          return address.isShippingDefault === true;\n        }); // return the shops country to auto-populate the Country of Origin field in the scheme\n\n        return defaultShippingAddress.country;\n      }\n\n      return this.value;\n    }\n\n    return this.unset();\n  } catch (e) {\n    return this.value;\n  }\n}","map":{"version":3,"sources":["lib/collections/schemas/helpers.js"],"names":["module","export","createdAtAutoValue","updatedAtAutoValue","shopIdAutoValue","shopIdAutoValueForCart","schemaIdAutoValue","shopDefaultCountry","Meteor","watch","require","v","Random","Reaction","Shops","closestSubschemaFieldName","isInsert","Date","isUpsert","$setOnInsert","unset","isSet","isServer","value","isUpdate","isClient","getShopId","shopId","getPrimaryShopId","marketplaceSettings","getMarketplaceSettings","public","merchantCart","operator","id","shop","findOne","_id","addressBook","defaultShippingAddress","find","address","isShippingDefault","country","e"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,sBAAmB;AAAA,WAAIA,kBAAJ;AAAA,GAApB;AAA2CC,sBAAmB;AAAA,WAAIA,kBAAJ;AAAA,GAA9D;AAAqFC,mBAAgB;AAAA,WAAIA,eAAJ;AAAA,GAArG;AAAyHC,0BAAuB;AAAA,WAAIA,sBAAJ;AAAA,GAAhJ;AAA2KC,qBAAkB;AAAA,WAAIA,iBAAJ;AAAA,GAA7L;AAAmNC,sBAAmB;AAAA,WAAIA,kBAAJ;AAAA;AAAtO,CAAd;AAA6Q,IAAIC,MAAJ;AAAWR,OAAOS,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,QAAD,YAAQG,CAAR,EAAU;AAACH,aAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,MAAJ;AAAWZ,OAAOS,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,QAAJ;AAAab,OAAOS,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACG,UAAD,YAAUF,CAAV,EAAY;AAACE,eAASF,CAAT;AAAW;AAAxB,CAAlC,EAA4D,CAA5D;AAA+D,IAAIG,KAAJ;AAAUd,OAAOS,KAAP,CAAaC,QAAQ,MAAR,CAAb,EAA6B;AAACI,OAAD,YAAOH,CAAP,EAAS;AAACG,YAAMH,CAAN;AAAQ;AAAlB,CAA7B,EAAiD,CAAjD;;AAahf,SAAST,kBAAT,GAA8B;AACnC;AACA;AACA,MAAI,KAAKa,yBAAT,EAAoC;AAEpC,MAAI,KAAKC,QAAT,EAAmB,OAAO,IAAIC,IAAJ,EAAP;AACnB,MAAI,KAAKC,QAAT,EAAmB,OAAO;AAAEC,kBAAc,IAAIF,IAAJ;AAAhB,GAAP;AACnB,OAAKG,KAAL;AACD;;AAUM,SAASjB,kBAAT,GAA8B;AACnC;AACA;AACA,MAAI,KAAKY,yBAAT,EAAoC;AAEpC,SAAO,IAAIE,IAAJ,EAAP;AACD;;AAUM,SAASb,eAAT,GAA2B;AAChC;AACA,MAAI,KAAKiB,KAAL,IAAcb,OAAOc,QAAzB,EAAmC;AACjC,WAAO,KAAKC,KAAZ;AACD,GAFD,MAEO,IAAKf,OAAOc,QAAP,IAAmB,CAAC,KAAKE,QAA1B,IAAwChB,OAAOiB,QAAP,IAAmB,KAAKT,QAApE,EAA+E;AACpF,WAAOH,SAASa,SAAT,EAAP;AACD;;AACD,SAAO,KAAKN,KAAL,EAAP;AACD;;AAUM,SAASf,sBAAT,GAAkC;AACvC;AACA,MAAI,KAAKgB,KAAL,IAAcb,OAAOc,QAAzB,EAAmC;AACjC,WAAO,KAAKC,KAAZ;AACD,GAFD,MAEO,IAAKf,OAAOc,QAAP,IAAmB,CAAC,KAAKE,QAA1B,IAAwChB,OAAOiB,QAAP,IAAmB,KAAKT,QAApE,EAA+E;AACpF,QAAIW,SAASd,SAASe,gBAAT,EAAb;AACA,QAAMC,sBAAsBhB,SAASiB,sBAAT,EAA5B;;AAEA,QAAID,uBAAuBA,oBAAoBE,MAA3C,IAAqDF,oBAAoBE,MAApB,CAA2BC,YAA3B,KAA4C,IAArG,EAA2G;AACzGL,eAASd,SAASa,SAAT,EAAT;AACD;;AACD,WAAOC,MAAP;AACD;;AACD,SAAO,KAAKP,KAAL,EAAP;AACD;;AAUM,SAASd,iBAAT,GAA6B;AAClC,MAAI,KAAKe,KAAL,IAAcb,OAAOc,QAAzB,EAAmC;AACjC,WAAO,KAAKC,KAAZ;AACD,GAFD,MAEO,IAAKf,OAAOc,QAAP,IAAmB,KAAKW,QAAL,KAAkB,OAAtC,IACRzB,OAAOiB,QAAP,IAAmB,KAAKT,QADpB,EAC+B;AACpC,WAAOJ,OAAOsB,EAAP,EAAP;AACD;;AACD,SAAO,KAAKd,KAAL,EAAP;AACD;;AAUM,SAASb,kBAAT,GAA8B;AACnC,MAAI;AACF;AACA,QAAI,KAAKc,KAAL,IAAcb,OAAOc,QAAzB,EAAmC;AACjC,aAAO,KAAKC,KAAZ;AACD,KAFD,MAEO,IAAKf,OAAOc,QAAP,IAAmB,CAAC,KAAKE,QAA1B,IAAwChB,OAAOiB,QAAP,IAAmB,KAAKT,QAApE,EAA+E;AACpF;AACA,UAAMmB,OAAOrB,MAAMsB,OAAN,CAAc;AACzBC,aAAKxB,SAASa,SAAT;AADoB,OAAd,CAAb,CAFoF,CAMpF;;AACA,UAAIS,QAAQA,KAAKG,WAAjB,EAA8B;AAC5B,YAAMC,yBAAyBJ,KAAKG,WAAL,CAAiBE,IAAjB,CAAsB,UAACC,OAAD;AAAA,iBAAaA,QAAQC,iBAAR,KAA8B,IAA3C;AAAA,SAAtB,CAA/B,CAD4B,CAG5B;;AACA,eAAOH,uBAAuBI,OAA9B;AACD;;AAED,aAAO,KAAKpB,KAAZ;AACD;;AACD,WAAO,KAAKH,KAAL,EAAP;AACD,GArBD,CAqBE,OAAOwB,CAAP,EAAU;AACV,WAAO,KAAKrB,KAAZ;AACD;AACF","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { Reaction } from \"/lib/api\";\nimport { Shops } from \"/lib/collections\";\n\n/**\n * @name createdAtAutoValue\n * @memberof schemas\n * @method\n * @summary Helper method used for schema injection autoValue\n * @example autoValue: createdAtAutoValue\n * @return {Date} Date representing now if it's an insert\n */\nexport function createdAtAutoValue() {\n  // We don't want to unset or overwrite a createdAt in a nested\n  // document, for example, in a product being added to cart items\n  if (this.closestSubschemaFieldName) return;\n\n  if (this.isInsert) return new Date();\n  if (this.isUpsert) return { $setOnInsert: new Date() };\n  this.unset();\n}\n\n/**\n * @name updatedAtAutoValue\n * @memberof schemas\n * @method\n * @summary Helper method used for schema injection autoValue\n * @example autoValue: updatedAtAutoValue\n * @return {Date} Date representing now\n */\nexport function updatedAtAutoValue() {\n  // We don't want to overwrite an updatedAt in a nested\n  // document, for example, in a product being added to cart items\n  if (this.closestSubschemaFieldName) return;\n\n  return new Date();\n}\n\n/**\n * @name shopIdAutoValue\n * @memberof schemas\n * @method\n * @summary Helper method used for schema injection autoValue\n * @example autoValue: shopIdAutoValue\n * @return {String} current shopId\n */\nexport function shopIdAutoValue() {\n  // we should always have a shopId\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if ((Meteor.isServer && !this.isUpdate) || (Meteor.isClient && this.isInsert)) {\n    return Reaction.getShopId();\n  }\n  return this.unset();\n}\n\n/**\n * @name shopIdAutoValueForCart\n * @memberof schemas\n * @method\n * @summary Helper method copy of shopIdAutoValue with modification for Cart\n * @example autoValue: shopIdAutoValue\n * @return {String} shopId\n */\nexport function shopIdAutoValueForCart() {\n  // we should always have a shopId\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if ((Meteor.isServer && !this.isUpdate) || (Meteor.isClient && this.isInsert)) {\n    let shopId = Reaction.getPrimaryShopId();\n    const marketplaceSettings = Reaction.getMarketplaceSettings();\n\n    if (marketplaceSettings && marketplaceSettings.public && marketplaceSettings.public.merchantCart === true) {\n      shopId = Reaction.getShopId();\n    }\n    return shopId;\n  }\n  return this.unset();\n}\n\n/**\n * @name schemaIdAutoValue\n * @memberof schemas\n * @method\n * @summary Helper method used for schema injection autoValue\n * @example autoValue: schemaIdAutoValue\n * @return {String} randomId\n */\nexport function schemaIdAutoValue() {\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if ((Meteor.isServer && this.operator !== \"$pull\") ||\n    (Meteor.isClient && this.isInsert)) {\n    return Random.id();\n  }\n  return this.unset();\n}\n\n/**\n * @name shopDefaultCountry\n * @memberof schemas\n * @method\n * @summary Helper method used for schema injection autoValue\n * @example autoValue: shopDefaultCountry\n * @return {String} country value from default shop\n */\nexport function shopDefaultCountry() {\n  try {\n    // Check to see if this is client or server, and the type of update being performed\n    if (this.isSet && Meteor.isServer) {\n      return this.value;\n    } else if ((Meteor.isServer && !this.isUpdate) || (Meteor.isClient && this.isInsert)) {\n      // Find the current shop\n      const shop = Shops.findOne({\n        _id: Reaction.getShopId()\n      });\n\n      // Find the current shops primary shipping address\n      if (shop && shop.addressBook) {\n        const defaultShippingAddress = shop.addressBook.find((address) => address.isShippingDefault === true);\n\n        // return the shops country to auto-populate the Country of Origin field in the scheme\n        return defaultShippingAddress.country;\n      }\n\n      return this.value;\n    }\n    return this.unset();\n  } catch (e) {\n    return this.value;\n  }\n}\n"]},"sourceType":"script","hash":"61e6f0f0918c4c28b97a9001d8e069fbfaaf6859"}
