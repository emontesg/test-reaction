{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","filename":"imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js"}},"code":"module.export({\n  PaypalPackageConfig: () => PaypalPackageConfig,\n  PaypalPayment: () => PaypalPayment\n});\nlet SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\nlet PackageConfig;\nmodule.watch(require(\"../../../../../../../lib/collections/schemas/registry\"), {\n  PackageConfig(v) {\n    PackageConfig = v;\n  }\n\n}, 3);\nlet registerSchema;\nmodule.watch(require(\"@reactioncommerce/schemas\"), {\n  registerSchema(v) {\n    registerSchema = v;\n  }\n\n}, 4);\nconst PaypalPackageConfig = PackageConfig.clone().extend({\n  // Remove blackbox: true from settings obj\n  \"settings\": {\n    type: Object,\n    optional: true,\n    blackbox: false,\n    defaultValue: {}\n  },\n  \"settings.expressAuthAndCapture\": {\n    type: Boolean,\n    label: \"Capture at time of Auth\",\n    defaultValue: false\n  },\n  \"settings.express\": {\n    type: Object,\n    defaultValue: {}\n  },\n  \"settings.express.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.express.support.$\": {\n    type: String,\n    allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n  },\n  \"settings.payflow\": {\n    type: Object,\n    defaultValue: {}\n  },\n  \"settings.payflow.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.payflow.support.$\": {\n    type: String,\n    allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n  },\n  \"settings.merchantId\": {\n    type: String,\n    label: \"Merchant ID\",\n    optional: true\n  },\n  \"settings.username\": {\n    type: String,\n    label: \"Username\",\n    optional: true\n  },\n  \"settings.password\": {\n    type: String,\n    label: \"Password\",\n    optional: true\n  },\n  \"settings.signature\": {\n    type: String,\n    label: \"Signature\",\n    optional: true\n  },\n  \"settings.express_mode\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"settings.payflow_enabled\": {\n    type: Boolean,\n    defaultValue: true\n  },\n  \"settings.client_id\": {\n    type: String,\n    label: \"API Client ID\",\n    min: 60,\n    optional: true\n  },\n  \"settings.client_secret\": {\n    type: String,\n    label: \"API Secret\",\n    min: 60,\n    optional: true\n  },\n  \"settings.payflow_mode\": {\n    type: Boolean,\n    defaultValue: false\n  }\n});\nregisterSchema(\"PaypalPackageConfig\", PaypalPackageConfig);\nconst PaypalPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\"\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n}, {\n  check,\n  tracker: Tracker\n});\nregisterSchema(\"PaypalPayment\", PaypalPayment);","map":{"version":3,"sources":["imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js"],"names":["module","export","PaypalPackageConfig","PaypalPayment","SimpleSchema","watch","require","default","v","check","Tracker","PackageConfig","registerSchema","clone","extend","type","Object","optional","blackbox","defaultValue","Boolean","label","Array","String","allowedValues","min","payerName","cardNumber","max","expireMonth","expireYear","cvv","tracker"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { check } from \"meteor/check\";\nimport { Tracker } from \"meteor/tracker\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\nimport { registerSchema } from \"@reactioncommerce/schemas\";\n\nexport const PaypalPackageConfig = PackageConfig.clone().extend({\n  // Remove blackbox: true from settings obj\n  \"settings\": {\n    type: Object,\n    optional: true,\n    blackbox: false,\n    defaultValue: {}\n  },\n  \"settings.expressAuthAndCapture\": {\n    type: Boolean,\n    label: \"Capture at time of Auth\",\n    defaultValue: false\n  },\n  \"settings.express\": {\n    type: Object,\n    defaultValue: {}\n  },\n  \"settings.express.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.express.support.$\": {\n    type: String,\n    allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n  },\n  \"settings.payflow\": {\n    type: Object,\n    defaultValue: {}\n  },\n  \"settings.payflow.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.payflow.support.$\": {\n    type: String,\n    allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n  },\n  \"settings.merchantId\": {\n    type: String,\n    label: \"Merchant ID\",\n    optional: true\n  },\n  \"settings.username\": {\n    type: String,\n    label: \"Username\",\n    optional: true\n  },\n  \"settings.password\": {\n    type: String,\n    label: \"Password\",\n    optional: true\n  },\n  \"settings.signature\": {\n    type: String,\n    label: \"Signature\",\n    optional: true\n  },\n  \"settings.express_mode\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"settings.payflow_enabled\": {\n    type: Boolean,\n    defaultValue: true\n  },\n  \"settings.client_id\": {\n    type: String,\n    label: \"API Client ID\",\n    min: 60,\n    optional: true\n  },\n  \"settings.client_secret\": {\n    type: String,\n    label: \"API Secret\",\n    min: 60,\n    optional: true\n  },\n  \"settings.payflow_mode\": {\n    type: Boolean,\n    defaultValue: false\n  }\n});\n\nregisterSchema(\"PaypalPackageConfig\", PaypalPackageConfig);\n\nexport const PaypalPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\"\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"PaypalPayment\", PaypalPayment);\n"]},"sourceType":"script","hash":"b50183df2dbba6e0659895b0b1955bc66e8571e8"}
