{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/collections/schemas/orders.js","filename":"lib/collections/schemas/orders.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"lib/collections/schemas/orders.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"lib/collections/schemas/orders.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/collections/schemas/orders.js"}},"code":"module.export({\n  Document: function () {\n    return Document;\n  },\n  History: function () {\n    return History;\n  },\n  ExportHistory: function () {\n    return ExportHistory;\n  },\n  Notes: function () {\n    return Notes;\n  },\n  OrderItem: function () {\n    return OrderItem;\n  },\n  OrderTransaction: function () {\n    return OrderTransaction;\n  },\n  Order: function () {\n    return Order;\n  },\n  OrderDocument: function () {\n    return OrderDocument;\n  }\n});\nvar SimpleSchema;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar check;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar registerSchema;\nmodule.watch(require(\"@reactioncommerce/schemas\"), {\n  registerSchema: function (v) {\n    registerSchema = v;\n  }\n}, 3);\nvar createdAtAutoValue;\nmodule.watch(require(\"./helpers\"), {\n  createdAtAutoValue: function (v) {\n    createdAtAutoValue = v;\n  }\n}, 4);\nvar Cart, CartItem;\nmodule.watch(require(\"./cart\"), {\n  Cart: function (v) {\n    Cart = v;\n  },\n  CartItem: function (v) {\n    CartItem = v;\n  }\n}, 5);\nvar Workflow;\nmodule.watch(require(\"./workflow\"), {\n  Workflow: function (v) {\n    Workflow = v;\n  }\n}, 6);\nvar Document = new SimpleSchema({\n  docId: {\n    type: String\n  },\n  docType: {\n    type: String,\n    optional: true\n  }\n}, {\n  check: check,\n  tracker: Tracker\n});\nregisterSchema(\"Document\", Document);\n/**\n * @name History\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} event required\n * @property {String} value required\n * @property {String} userId required\n * @property {String} updatedAt required\n */\n\nvar History = new SimpleSchema({\n  event: {\n    type: String\n  },\n  value: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  updatedAt: {\n    type: Date\n  }\n}, {\n  check: check,\n  tracker: Tracker\n});\nregisterSchema(\"History\", History);\n/**\n * @name ExportHistory\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} required Whether the export attempt succeeded or failed\n * @property {Date} required Date the export was attempted\n * @property {String} required Name of the export method (e.g. CSV, Shopify)\n * @property {String} optional The identifier for this order on the remote system\n */\n\nvar ExportHistory = new SimpleSchema({\n  status: {\n    type: String,\n    allowedValues: [\"success\", \"failure\"]\n  },\n  dateAttempted: {\n    type: Date\n  },\n  exportMethod: {\n    type: String\n  },\n  destinationIdentifier: {\n    type: String,\n    optional: true\n  },\n  shopId: {\n    type: String\n  }\n});\nregisterSchema(\"ExportHistory\", ExportHistory);\n/**\n * @name Notes\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} content required\n * @property {String} userId required\n * @property {Date} updatedAt required\n */\n\nvar Notes = new SimpleSchema({\n  content: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  updatedAt: {\n    type: Date\n  }\n}, {\n  check: check,\n  tracker: Tracker\n});\nregisterSchema(\"Notes\", Notes);\n/**\n * @name OrderItem\n * @memberof schemas\n * @summary CartItem + some additional properties\n * @type {SimpleSchema}\n * @property {String} additionalField optional\n * @property {Workflow} workflow optional\n * @property {History[]} history optional\n * @property {Document[]} documents optional\n*/\n\nvar OrderItem = new SimpleSchema({\n  \"additionalField\": {\n    type: String,\n    optional: true\n  },\n  \"workflow\": {\n    type: Workflow,\n    optional: true,\n    defaultValue: {}\n  },\n  \"history\": {\n    type: Array,\n    optional: true\n  },\n  \"history.$\": {\n    type: History\n  },\n  \"documents\": {\n    type: Array,\n    optional: true\n  },\n  \"documents.$\": {\n    type: Document\n  }\n}, {\n  check: check,\n  tracker: Tracker\n});\nregisterSchema(\"OrderItem\", OrderItem);\n/**\n * @name OrderTransaction Schema\n * @memberof schemas\n * @summary Order transactions tie Shipping, Payment, and Inventory transactions\n * @type {SimpleSchema}\n * @property {String} itemId optional\n * @property {String} paymentId optional\n * @property {String} shipmentId optional\n * @property {String} inventoryId optional\n * @property {Date} createdAt required\n */\n\nvar OrderTransaction = new SimpleSchema({\n  itemId: {\n    type: String,\n    optional: true\n  },\n  paymentId: {\n    type: String,\n    optional: true\n  },\n  shipmentId: {\n    type: String,\n    optional: true\n  },\n  inventoryId: {\n    type: String,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: createdAtAutoValue\n  }\n}, {\n  check: check,\n  tracker: Tracker\n});\nregisterSchema(\"OrderTransaction\", OrderTransaction);\n/**\n * @name Order Schema\n * @memberof schemas\n * @type {SimpleSchema}\n * @summary Order ties a User to a Cart and an array of History, Documents, Notes, Items and OrderTransactions.\n * @property {String} userId required\n * @property {String} cartId optional\n * @property {History[]} history optional\n * @property {Document[]} documents optional\n * @property {Notes[]} notes optional\n * @property {OrderItem[]} items optional\n * @property {OrderTransaction[]} transactions optional\n */\n\nvar Order = new SimpleSchema({\n  \"userId\": {\n    type: String,\n    unique: false\n  },\n  \"cartId\": {\n    type: String,\n    optional: true\n  },\n  \"history\": {\n    type: Array,\n    optional: true\n  },\n  \"history.$\": {\n    type: History\n  },\n  \"documents\": {\n    type: Array,\n    optional: true\n  },\n  \"documents.$\": {\n    type: Document\n  },\n  \"notes\": {\n    type: Array,\n    optional: true\n  },\n  \"notes.$\": Notes,\n  \"taxCalculationFailed\": {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  \"bypassAddressValidation\": {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  \"items\": {\n    type: Array,\n    optional: true\n  },\n  \"items.$\": CartItem.clone().extend(OrderItem),\n  \"transactions\": {\n    type: Array,\n    optional: true\n  },\n  \"transactions.$\": OrderTransaction,\n  \"exportHistory\": {\n    type: Array,\n    optional: true\n  },\n  \"exportHistory.$\": ExportHistory\n}, {\n  check: check,\n  tracker: Tracker\n});\nregisterSchema(\"Order\", Order);\nvar OrderDocument = Cart.clone().extend(Order).extend(OrderItem);\nregisterSchema(\"OrderDocument\", OrderDocument);","map":{"version":3,"sources":["lib/collections/schemas/orders.js"],"names":["module","export","Document","History","ExportHistory","Notes","OrderItem","OrderTransaction","Order","OrderDocument","SimpleSchema","watch","require","v","check","Tracker","registerSchema","createdAtAutoValue","Cart","CartItem","Workflow","docId","type","String","docType","optional","tracker","event","value","userId","updatedAt","Date","status","allowedValues","dateAttempted","exportMethod","destinationIdentifier","shopId","content","defaultValue","Array","itemId","paymentId","shipmentId","inventoryId","createdAt","autoValue","unique","Boolean","clone","extend"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { check } from \"meteor/check\";\nimport { Tracker } from \"meteor/tracker\";\nimport { registerSchema } from \"@reactioncommerce/schemas\";\nimport { createdAtAutoValue } from \"./helpers\";\nimport { Cart, CartItem } from \"./cart\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * @name Document\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} docId required\n * @property {String} docType optional\n */\nexport const Document = new SimpleSchema({\n  docId: {\n    type: String\n  },\n  docType: {\n    type: String,\n    optional: true\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"Document\", Document);\n\n/**\n * @name History\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} event required\n * @property {String} value required\n * @property {String} userId required\n * @property {String} updatedAt required\n */\nexport const History = new SimpleSchema({\n  event: {\n    type: String\n  },\n  value: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  updatedAt: {\n    type: Date\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"History\", History);\n\n/**\n * @name ExportHistory\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} required Whether the export attempt succeeded or failed\n * @property {Date} required Date the export was attempted\n * @property {String} required Name of the export method (e.g. CSV, Shopify)\n * @property {String} optional The identifier for this order on the remote system\n */\nexport const ExportHistory = new SimpleSchema({\n  status: {\n    type: String,\n    allowedValues: [\"success\", \"failure\"]\n  },\n  dateAttempted: {\n    type: Date\n  },\n  exportMethod: {\n    type: String\n  },\n  destinationIdentifier: {\n    type: String,\n    optional: true\n  },\n  shopId: {\n    type: String\n  }\n});\n\nregisterSchema(\"ExportHistory\", ExportHistory);\n\n/**\n * @name Notes\n * @memberof schemas\n * @type {SimpleSchema}\n * @property {String} content required\n * @property {String} userId required\n * @property {Date} updatedAt required\n */\nexport const Notes = new SimpleSchema({\n  content: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  updatedAt: {\n    type: Date\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"Notes\", Notes);\n\n/**\n * @name OrderItem\n * @memberof schemas\n * @summary CartItem + some additional properties\n * @type {SimpleSchema}\n * @property {String} additionalField optional\n * @property {Workflow} workflow optional\n * @property {History[]} history optional\n * @property {Document[]} documents optional\n*/\nexport const OrderItem = new SimpleSchema({\n  \"additionalField\": {\n    type: String,\n    optional: true\n  },\n  \"workflow\": {\n    type: Workflow,\n    optional: true,\n    defaultValue: {}\n  },\n  \"history\": {\n    type: Array,\n    optional: true\n  },\n  \"history.$\": {\n    type: History\n  },\n  \"documents\": {\n    type: Array,\n    optional: true\n  },\n  \"documents.$\": {\n    type: Document\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"OrderItem\", OrderItem);\n\n/**\n * @name OrderTransaction Schema\n * @memberof schemas\n * @summary Order transactions tie Shipping, Payment, and Inventory transactions\n * @type {SimpleSchema}\n * @property {String} itemId optional\n * @property {String} paymentId optional\n * @property {String} shipmentId optional\n * @property {String} inventoryId optional\n * @property {Date} createdAt required\n */\nexport const OrderTransaction = new SimpleSchema({\n  itemId: {\n    type: String,\n    optional: true\n  },\n  paymentId: {\n    type: String,\n    optional: true\n  },\n  shipmentId: {\n    type: String,\n    optional: true\n  },\n  inventoryId: {\n    type: String,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: createdAtAutoValue\n  }\n}, { check, tracker: Tracker });\n\nregisterSchema(\"OrderTransaction\", OrderTransaction);\n\n/**\n * @name Order Schema\n * @memberof schemas\n * @type {SimpleSchema}\n * @summary Order ties a User to a Cart and an array of History, Documents, Notes, Items and OrderTransactions.\n * @property {String} userId required\n * @property {String} cartId optional\n * @property {History[]} history optional\n * @property {Document[]} documents optional\n * @property {Notes[]} notes optional\n * @property {OrderItem[]} items optional\n * @property {OrderTransaction[]} transactions optional\n */\nexport const Order = new SimpleSchema({\n  \"userId\": {\n    type: String,\n    unique: false\n  },\n  \"cartId\": {\n    type: String,\n    optional: true\n  },\n  \"history\": {\n    type: Array,\n    optional: true\n  },\n  \"history.$\": {\n    type: History\n  },\n  \"documents\": {\n    type: Array,\n    optional: true\n  },\n  \"documents.$\": {\n    type: Document\n  },\n  \"notes\": {\n    type: Array,\n    optional: true\n  },\n  \"notes.$\": Notes,\n  \"taxCalculationFailed\": {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  \"bypassAddressValidation\": {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  \"items\": {\n    type: Array,\n    optional: true\n  },\n  \"items.$\": CartItem.clone().extend(OrderItem),\n  \"transactions\": {\n    type: Array,\n    optional: true\n  },\n  \"transactions.$\": OrderTransaction,\n  \"exportHistory\": {\n    type: Array,\n    optional: true\n  },\n  \"exportHistory.$\": ExportHistory\n}, { check, tracker: Tracker });\n\nregisterSchema(\"Order\", Order);\n\nexport const OrderDocument = Cart.clone().extend(Order).extend(OrderItem);\nregisterSchema(\"OrderDocument\", OrderDocument);\n"]},"sourceType":"script","hash":"7d732853b07fb2742cc54937a17c75da6b69aaf8"}
