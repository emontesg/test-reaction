{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"client/modules/core/helpers/globals.js","filename":"client/modules/core/helpers/globals.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"client/modules/core/helpers/globals.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"client/modules/core/helpers/globals.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/modules/core/helpers/globals.js"}},"code":"module.export({\n  toggleSession: function () {\n    return toggleSession;\n  },\n  getCardType: function () {\n    return getCardType;\n  },\n  getGuestLoginState: function () {\n    return getGuestLoginState;\n  }\n});\n\nvar _pluck;\n\nmodule.watch(require(\"lodash/fp/pluck\"), {\n  \"default\": function (v) {\n    _pluck = v;\n  }\n}, 0);\n\nvar _isEqual;\n\nmodule.watch(require(\"lodash/isEqual\"), {\n  \"default\": function (v) {\n    _isEqual = v;\n  }\n}, 1);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 2);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 3);\nvar Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function (v) {\n    Roles = v;\n  }\n}, 4);\n\nfunction toggleSession(sessionVariable, positiveState) {\n  var session = Session.get(sessionVariable);\n  var positive = positiveState || true;\n\n  if (_isEqual(positive, session)) {\n    Session.set(sessionVariable, false);\n  } else {\n    Session.set(sessionVariable, positive);\n  }\n\n  return Session.get(sessionVariable);\n}\n\nfunction getCardType(cardNumber) {\n  var re = new RegExp(\"^4\");\n\n  if (cardNumber.match(re) !== null) {\n    return \"visa\";\n  }\n\n  re = new RegExp(\"^(34|37)\");\n\n  if (cardNumber.match(re) !== null) {\n    return \"amex\";\n  }\n\n  re = new RegExp(\"^5[1-5]\");\n\n  if (cardNumber.match(re) !== null) {\n    return \"mastercard\";\n  }\n\n  re = new RegExp(\"^6011\");\n\n  if (cardNumber.match(re) !== null) {\n    return \"discover\";\n  }\n\n  return \"\";\n}\n\nfunction getGuestLoginState() {\n  if (Meteor.userId() === \"string\" && this.getShopId() && this.allowGuestCheckout()) {\n    var isGuestFlow = Session.equals(\"guestCheckoutFlow\", true);\n    var isGuest = Roles.userIsInRole(Meteor.userId(), \"guest\", this.getShopId());\n    var isAnonymous = Roles.userIsInRole(Meteor.userId(), \"anonymous\", this.getShopId());\n\n    if (!isGuestFlow && !isGuest && isAnonymous) {\n      return false;\n    } else if (!isGuestFlow && isGuest && !isAnonymous) {\n      return true;\n    }\n  } else if (Session.equals(\"guestCheckoutFlow\", true) && _pluck(Meteor.user().emails, \"address\")) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["client/modules/core/helpers/globals.js"],"names":["module","export","toggleSession","getCardType","getGuestLoginState","_pluck","watch","require","v","_isEqual","Session","Meteor","Roles","sessionVariable","positiveState","session","get","positive","set","cardNumber","re","RegExp","match","userId","getShopId","allowGuestCheckout","isGuestFlow","equals","isGuest","userIsInRole","isAnonymous","user","emails"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Roles } from \"meteor/alanning:roles\";\n\n/* eslint \"no-extend-native\": [2, {\"exceptions\": [\"String\"]}] */\n/* eslint \"no-alert\": 0 */\n\n/**\n * @name toggleSession\n * @method\n * @memberof Helpers\n * @todo These should all be removed. PR's happily accepted.\n * @summary Quick and easy snippet for toggling sessions\n * @param {String} sessionVariable - string name, see http://docs.meteor.com/#/basic/session\n * @param {String} positiveState - optional, if is is positiveState, set opposite\n * @return {Object} return session value\n */\nexport function toggleSession(sessionVariable, positiveState) {\n  const session = Session.get(sessionVariable);\n  const positive = positiveState || true;\n  if (_.isEqual(positive, session)) {\n    Session.set(sessionVariable, false);\n  } else {\n    Session.set(sessionVariable, positive);\n  }\n  return Session.get(sessionVariable);\n}\n\n/**\n * @name getCardTypes\n * @method\n * @memberof Helpers\n * @todo These should all be removed. PR's happily accepted.\n * @summary Determine the card type and return label\n * @todo needs i18n conversion?\n * @param {String} cardNumber - a credit card number\n * @return {String} card label, ie: visa\n */\nexport function getCardType(cardNumber) {\n  let re = new RegExp(\"^4\");\n  if (cardNumber.match(re) !== null) {\n    return \"visa\";\n  }\n  re = new RegExp(\"^(34|37)\");\n  if (cardNumber.match(re) !== null) {\n    return \"amex\";\n  }\n  re = new RegExp(\"^5[1-5]\");\n  if (cardNumber.match(re) !== null) {\n    return \"mastercard\";\n  }\n  re = new RegExp(\"^6011\");\n  if (cardNumber.match(re) !== null) {\n    return \"discover\";\n  }\n  return \"\";\n}\n\n/**\n * @name getGuestLoginState\n * @method\n * @memberof Helpers\n * @todo These should all be removed. PR's happily accepted.\n * @summary Determines if a guest checkout is enabled and the login state for users\n * @return {Boolean} true if authenticated user\n */\nexport function getGuestLoginState() {\n  if (Meteor.userId() === \"string\" && this.getShopId() && this.allowGuestCheckout()) {\n    const isGuestFlow = Session.equals(\"guestCheckoutFlow\", true);\n    const isGuest = Roles.userIsInRole(Meteor.userId(), \"guest\", this.getShopId());\n    const isAnonymous = Roles.userIsInRole(Meteor.userId(), \"anonymous\", this.getShopId());\n    if (!isGuestFlow && !isGuest && isAnonymous) {\n      return false;\n    } else if (!isGuestFlow && isGuest && !isAnonymous) {\n      return true;\n    }\n  } else if (Session.equals(\"guestCheckoutFlow\", true) && _.pluck(Meteor.user()\n    .emails, \"address\")) {\n    return true;\n  }\n  return false;\n}\n"]},"sourceType":"script","hash":"05a1ecfd582ec77d0a6d72eaf32904dc7d41411f"}
