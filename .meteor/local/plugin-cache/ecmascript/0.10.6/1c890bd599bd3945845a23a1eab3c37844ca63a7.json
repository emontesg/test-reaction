{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"packages/ongoworks:security/lib/builtInRules.js","filename":"packages/ongoworks:security/lib/builtInRules.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"packages/ongoworks:security/lib/builtInRules.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"packages/ongoworks:security/lib/builtInRules.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ongoworks:security/lib/builtInRules.js"}},"code":"/*\n * This file defines built-in restriction methods\n */\n\n/*\n * No one\n */\nSecurity.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow: function () {\n    return false;\n  }\n});\n/*\n * Logged In\n */\n\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId) {\n    return !!userId;\n  }\n});\n/*\n * Specific User ID\n */\n\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId) {\n    return userId === arg;\n  }\n});\n/*\n * Specific Roles\n */\n\n/*\n * alanning:roles support\n */\n\nif (Package && Package[\"alanning:roles\"]) {\n  var Roles = Package[\"alanning:roles\"].Roles;\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow: function (type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    }\n  });\n}\n/*\n * nicolaslopezj:roles support\n * Note: doesn't support groups\n */\n\n\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow: function (type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n}\n/*\n * Specific Properties\n */\n\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n    fieldNames = fieldNames || _.keys(doc);\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  }\n});\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n    fieldNames = fieldNames || _.keys(doc);\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  }\n});","map":{"version":3,"sources":["packages/ongoworks:security/lib/builtInRules.js"],"names":["Security","defineMethod","fetch","transform","allow","type","arg","userId","Package","Roles","Error","role","userIsInRole","group","userHasRole","doc","fieldNames","_","isArray","keys","every","fieldName","contains","any"],"mappings":"AAAA;;;;AAIA;;;AAIAA,SAASC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,SAAO,EADsB;AAE7BC,aAAW,IAFkB;AAG7BC,OAH6B,cAGrB;AACN,WAAO,KAAP;AACD;AAL4B,CAA/B;AAQA;;;;AAIAJ,SAASC,YAAT,CAAsB,YAAtB,EAAoC;AAClCC,SAAO,EAD2B;AAElCC,aAAW,IAFuB;AAGlCC,OAHkC,YAG5BC,IAH4B,EAGtBC,GAHsB,EAGjBC,MAHiB,EAGT;AACvB,WAAO,CAAC,CAACA,MAAT;AACD;AALiC,CAApC;AAQA;;;;AAIAP,SAASC,YAAT,CAAsB,aAAtB,EAAqC;AACnCC,SAAO,EAD4B;AAEnCC,aAAW,IAFwB;AAGnCC,OAHmC,YAG7BC,IAH6B,EAGvBC,GAHuB,EAGlBC,MAHkB,EAGV;AACvB,WAAOA,WAAWD,GAAlB;AACD;AALkC,CAArC;AAQA;;;;AAIA;;;;AAGA,IAAIE,WAAWA,QAAQ,gBAAR,CAAf,EAA0C;AAExC,MAAIC,QAAQD,QAAQ,gBAAR,EAA0BC,KAAtC;AAEAT,WAASC,YAAT,CAAsB,WAAtB,EAAmC;AACjCC,WAAO,EAD0B;AAEjCC,eAAW,IAFsB;AAGjCC,SAHiC,YAG3BC,IAH2B,EAGrBC,GAHqB,EAGhBC,MAHgB,EAGR;AACvB,UAAI,CAACD,GAAL,EAAU,MAAM,IAAII,KAAJ,CAAU,qDAAV,CAAN;;AACV,UAAIJ,IAAIK,IAAR,EAAc;AACZ,eAAOF,MAAMG,YAAN,CAAmBL,MAAnB,EAA2BD,IAAIK,IAA/B,EAAqCL,IAAIO,KAAzC,CAAP;AACD,OAFD,MAEO;AACL,eAAOJ,MAAMG,YAAN,CAAmBL,MAAnB,EAA2BD,GAA3B,CAAP;AACD;AACF;AAVgC,GAAnC;AAaD;AAED;;;;;;AAIA,IAAIE,WAAWA,QAAQ,qBAAR,CAAf,EAA+C;AAE7C,MAAIC,QAAQD,QAAQ,qBAAR,EAA+BC,KAA3C;AAEAT,WAASC,YAAT,CAAsB,WAAtB,EAAmC;AACjCC,WAAO,EAD0B;AAEjCC,eAAW,IAFsB;AAGjCC,SAHiC,YAG3BC,IAH2B,EAGrBC,GAHqB,EAGhBC,MAHgB,EAGR;AACvB,UAAI,CAACD,GAAL,EAAU,MAAM,IAAII,KAAJ,CAAU,qDAAV,CAAN;AACV,aAAOD,MAAMK,WAAN,CAAkBP,MAAlB,EAA0BD,GAA1B,CAAP;AACD;AANgC,GAAnC;AASD;AAED;;;;;AAIAN,SAASC,YAAT,CAAsB,WAAtB,EAAmC;AACjCC,SAAO,EAD0B;AAEjCC,aAAW,IAFsB;AAGjCC,OAHiC,YAG3BC,IAH2B,EAGrBC,GAHqB,EAGhBC,MAHgB,EAGRQ,GAHQ,EAGHC,UAHG,EAGS;AACxC,QAAI,CAACC,EAAEC,OAAF,CAAUZ,GAAV,CAAL,EAAqBA,MAAM,CAACA,GAAD,CAAN;AAErBU,iBAAaA,cAAcC,EAAEE,IAAF,CAAOJ,GAAP,CAA3B;AAEA,WAAOE,EAAEG,KAAF,CAAQJ,UAAR,EAAoB,UAAUK,SAAV,EAAqB;AAC9C,aAAOJ,EAAEK,QAAF,CAAWhB,GAAX,EAAgBe,SAAhB,CAAP;AACD,KAFM,CAAP;AAGD;AAXgC,CAAnC;AAcArB,SAASC,YAAT,CAAsB,aAAtB,EAAqC;AACnCC,SAAO,EAD4B;AAEnCC,aAAW,IAFwB;AAGnCC,OAHmC,YAG7BC,IAH6B,EAGvBC,GAHuB,EAGlBC,MAHkB,EAGVQ,GAHU,EAGLC,UAHK,EAGO;AACxC,QAAI,CAACC,EAAEC,OAAF,CAAUZ,GAAV,CAAL,EAAqBA,MAAM,CAACA,GAAD,CAAN;AAErBU,iBAAaA,cAAcC,EAAEE,IAAF,CAAOJ,GAAP,CAA3B;AAEA,WAAO,CAACE,EAAEM,GAAF,CAAMP,UAAN,EAAkB,UAAUK,SAAV,EAAqB;AAC7C,aAAOJ,EAAEK,QAAF,CAAWhB,GAAX,EAAgBe,SAAhB,CAAP;AACD,KAFO,CAAR;AAGD;AAXkC,CAArC","sourcesContent":["/*\n * This file defines built-in restriction methods\n */\n\n/*\n * No one\n */\n\nSecurity.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow() {\n    return false;\n  },\n});\n\n/*\n * Logged In\n */\n\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return !!userId;\n  },\n});\n\n/*\n * Specific User ID\n */\n\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return userId === arg;\n  },\n});\n\n/*\n * Specific Roles\n */\n\n/*\n * alanning:roles support\n */\nif (Package && Package[\"alanning:roles\"]) {\n\n  var Roles = Package[\"alanning:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    },\n  });\n\n}\n\n/*\n * nicolaslopezj:roles support\n * Note: doesn't support groups\n */\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n\n}\n\n/*\n * Specific Properties\n */\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n"]},"sourceType":"script","hash":"1c890bd599bd3945845a23a1eab3c37844ca63a7"}
