{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/api/core/connectionDataStore.js","filename":"server/api/core/connectionDataStore.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/api/core/connectionDataStore.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/api/core/connectionDataStore.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/api/core/connectionDataStore.js"}},"code":"let DDP;\nmodule.watch(require(\"meteor/ddp-client\"), {\n  DDP(v) {\n    DDP = v;\n  }\n\n}, 0);\nconst inMemoryCache = {};\nconst connectionKey = \"connection-data\";\n\nfunction connectionData() {\n  // similar to Meteor.userId()\n  const invocation = DDP._CurrentMethodInvocation.get() || DDP._CurrentPublicationInvocation.get();\n\n  if (!invocation) {\n    // operating outside of a connection\n    return inMemoryCache;\n  }\n\n  const {\n    connection\n  } = invocation;\n\n  if (!connection) {\n    return inMemoryCache;\n  }\n\n  const hasDataKey = connectionKey in connection;\n\n  if (!hasDataKey) {\n    connection[connectionKey] = {};\n  }\n\n  return connection[connectionKey];\n}\n\nmodule.exportDefault({\n  get(key) {\n    return connectionData()[key];\n  },\n\n  set(key, val) {\n    connectionData()[key] = val;\n  },\n\n  clear(key) {\n    delete connectionData()[key];\n  }\n\n});","map":{"version":3,"sources":["server/api/core/connectionDataStore.js"],"names":["DDP","module","watch","require","v","inMemoryCache","connectionKey","connectionData","invocation","_CurrentMethodInvocation","get","_CurrentPublicationInvocation","connection","hasDataKey","exportDefault","key","set","val","clear"],"mappings":"AAAA,IAAIA,GAAJ;AAAQC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,MAAII,CAAJ,EAAM;AAACJ,UAAII,CAAJ;AAAM;;AAAd,CAA1C,EAA0D,CAA1D;AAER,MAAMC,gBAAgB,EAAtB;AACA,MAAMC,gBAAgB,iBAAtB;;AAEA,SAASC,cAAT,GAA0B;AACxB;AACA,QAAMC,aACJR,IAAIS,wBAAJ,CAA6BC,GAA7B,MACAV,IAAIW,6BAAJ,CAAkCD,GAAlC,EAFF;;AAIA,MAAI,CAACF,UAAL,EAAiB;AACf;AACA,WAAOH,aAAP;AACD;;AAED,QAAM;AAAEO;AAAF,MAAiBJ,UAAvB;;AAEA,MAAI,CAACI,UAAL,EAAiB;AACf,WAAOP,aAAP;AACD;;AAED,QAAMQ,aAAaP,iBAAiBM,UAApC;;AAEA,MAAI,CAACC,UAAL,EAAiB;AACfD,eAAWN,aAAX,IAA4B,EAA5B;AACD;;AAED,SAAOM,WAAWN,aAAX,CAAP;AACD;;AA7BDL,OAAOa,aAAP,CA+Be;AACbJ,MAAIK,GAAJ,EAAS;AACP,WAAOR,iBAAiBQ,GAAjB,CAAP;AACD,GAHY;;AAKbC,MAAID,GAAJ,EAASE,GAAT,EAAc;AACZV,qBAAiBQ,GAAjB,IAAwBE,GAAxB;AACD,GAPY;;AASbC,QAAMH,GAAN,EAAW;AACT,WAAOR,iBAAiBQ,GAAjB,CAAP;AACD;;AAXY,CA/Bf","sourcesContent":["import { DDP } from \"meteor/ddp-client\";\n\nconst inMemoryCache = {};\nconst connectionKey = \"connection-data\";\n\nfunction connectionData() {\n  // similar to Meteor.userId()\n  const invocation =\n    DDP._CurrentMethodInvocation.get() ||\n    DDP._CurrentPublicationInvocation.get();\n\n  if (!invocation) {\n    // operating outside of a connection\n    return inMemoryCache;\n  }\n\n  const { connection } = invocation;\n\n  if (!connection) {\n    return inMemoryCache;\n  }\n\n  const hasDataKey = connectionKey in connection;\n\n  if (!hasDataKey) {\n    connection[connectionKey] = {};\n  }\n\n  return connection[connectionKey];\n}\n\nexport default {\n  get(key) {\n    return connectionData()[key];\n  },\n\n  set(key, val) {\n    connectionData()[key] = val;\n  },\n\n  clear(key) {\n    delete connectionData()[key];\n  }\n};\n"]},"sourceType":"script","hash":"753dea20e520d47ddd4ee7b04e71105b8ffebe6e"}
