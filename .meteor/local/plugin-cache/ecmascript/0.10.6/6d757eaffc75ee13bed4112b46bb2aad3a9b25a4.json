{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/collections/product.js","filename":"server/publications/collections/product.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/collections/product.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/collections/product.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/collections/product.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Products, Revisions, Shops;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Products(v) {\n    Products = v;\n  },\n\n  Revisions(v) {\n    Revisions = v;\n  },\n\n  Shops(v) {\n    Shops = v;\n  }\n\n}, 2);\nlet Logger, Reaction;\nmodule.watch(require(\"../../api\"), {\n  Logger(v) {\n    Logger = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 3);\nlet RevisionApi;\nmodule.watch(require(\"../../../imports/plugins/core/revisions/lib/api/revisions\"), {\n  RevisionApi(v) {\n    RevisionApi = v;\n  }\n\n}, 4);\n\n/**\n * product detail publication\n * @param {String} productIdOrHandle - productId or handle\n * @return {Object} return product cursor\n */\nMeteor.publish(\"Product\", function (productIdOrHandle, shopIdOrSlug) {\n  check(productIdOrHandle, Match.OptionalOrNull(String));\n  check(shopIdOrSlug, Match.Maybe(String));\n\n  if (!productIdOrHandle) {\n    Logger.debug(\"ignoring null request on Product subscription\");\n    return this.ready();\n  }\n\n  const selector = {\n    $or: [{\n      _id: productIdOrHandle\n    }, {\n      handle: productIdOrHandle\n    }]\n  };\n\n  if (shopIdOrSlug) {\n    const shop = Shops.findOne({\n      $or: [{\n        _id: shopIdOrSlug\n      }, {\n        slug: shopIdOrSlug\n      }]\n    });\n\n    if (shop) {\n      selector.shopId = shop._id;\n    } else {\n      return this.ready();\n    }\n  } // TODO review for REGEX / DOS vulnerabilities.\n  // Need to peek into product to get associated shop. This is important to check permissions.\n\n\n  const product = Products.findOne(selector);\n\n  if (!product) {\n    // Product not found, return empty subscription.\n    return this.ready();\n  }\n\n  const {\n    _id\n  } = product;\n  selector.isVisible = true;\n  selector.isDeleted = {\n    $in: [null, false]\n  };\n  selector.$or = [{\n    _id\n  }, {\n    ancestors: _id\n  }, {\n    handle: productIdOrHandle\n  }]; // Authorized content curators for the shop get special publication of the product\n  // all all relevant revisions all is one package\n\n  if (Reaction.hasPermission([\"owner\", \"createProduct\"], this.userId, product.shopId)) {\n    selector.isVisible = {\n      $in: [true, false, undefined]\n    };\n\n    if (RevisionApi.isRevisionControlEnabled()) {\n      const handle = Revisions.find({\n        \"workflow.status\": {\n          $nin: [\"revision/published\"]\n        },\n        \"$or\": [{\n          \"documentData._id\": _id\n        }, {\n          \"documentData.ancestors\": _id\n        }]\n      }).observe({\n        added: revision => {\n          this.added(\"Revisions\", revision._id, revision);\n\n          if (revision.documentType === \"product\") {\n            // Check merge box (session collection view), if product is already in cache.\n            // If yes, we send a `changed`, otherwise `added`. I'm assuming\n            // that this._documents.Products is somewhat equivalent to the\n            // merge box Meteor.server.sessions[sessionId].getCollectionView(\"Products\").documents\n            if (this._documents.Products && this._documents.Products[revision.documentId]) {\n              this.changed(\"Products\", revision.documentId, {\n                __revisions: [revision]\n              });\n            } else {\n              this.added(\"Products\", revision.documentId, {\n                __revisions: [revision]\n              });\n            }\n          }\n        },\n        changed: revision => {\n          this.changed(\"Revisions\", revision._id, revision);\n\n          if (revision.documentType === \"product\") {\n            if (this._documents.Products && this._documents.Products[revision.documentId]) {\n              this.changed(\"Products\", revision.documentId, {\n                __revisions: [revision]\n              });\n            }\n          }\n        },\n        removed: revision => {\n          this.removed(\"Revisions\", revision._id);\n\n          if (revision.documentType === \"product\") {\n            if (this._documents.Products && this._documents.Products[revision.documentId]) {\n              this.changed(\"Products\", revision.documentId, {\n                __revisions: []\n              });\n            }\n          }\n        }\n      });\n      this.onStop(() => {\n        handle.stop();\n      });\n    }\n  }\n\n  return Products.find(selector);\n});","map":{"version":3,"sources":["server/publications/collections/product.js"],"names":["Meteor","module","watch","require","v","check","Match","Products","Revisions","Shops","Logger","Reaction","RevisionApi","publish","productIdOrHandle","shopIdOrSlug","OptionalOrNull","String","Maybe","debug","ready","selector","$or","_id","handle","shop","findOne","slug","shopId","product","isVisible","isDeleted","$in","ancestors","hasPermission","userId","undefined","isRevisionControlEnabled","find","$nin","observe","added","revision","documentType","_documents","documentId","changed","__revisions","removed","onStop","stop"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Products, Revisions, Shops } from \"/lib/collections\";\nimport { Logger, Reaction } from \"/server/api\";\nimport { RevisionApi } from \"/imports/plugins/core/revisions/lib/api/revisions\";\n\n/**\n * product detail publication\n * @param {String} productIdOrHandle - productId or handle\n * @return {Object} return product cursor\n */\nMeteor.publish(\"Product\", function (productIdOrHandle, shopIdOrSlug) {\n  check(productIdOrHandle, Match.OptionalOrNull(String));\n  check(shopIdOrSlug, Match.Maybe(String));\n\n  if (!productIdOrHandle) {\n    Logger.debug(\"ignoring null request on Product subscription\");\n    return this.ready();\n  }\n\n  const selector = {\n    $or: [{\n      _id: productIdOrHandle\n    }, {\n      handle: productIdOrHandle\n    }]\n  };\n\n  if (shopIdOrSlug) {\n    const shop = Shops.findOne({\n      $or: [{\n        _id: shopIdOrSlug\n      }, {\n        slug: shopIdOrSlug\n      }]\n    });\n\n    if (shop) {\n      selector.shopId = shop._id;\n    } else {\n      return this.ready();\n    }\n  }\n\n  // TODO review for REGEX / DOS vulnerabilities.\n  // Need to peek into product to get associated shop. This is important to check permissions.\n  const product = Products.findOne(selector);\n  if (!product) {\n    // Product not found, return empty subscription.\n    return this.ready();\n  }\n\n  const { _id } = product;\n\n  selector.isVisible = true;\n  selector.isDeleted = { $in: [null, false] };\n  selector.$or = [\n    { _id },\n    { ancestors: _id },\n    { handle: productIdOrHandle }];\n\n  // Authorized content curators for the shop get special publication of the product\n  // all all relevant revisions all is one package\n  if (Reaction.hasPermission([\"owner\", \"createProduct\"], this.userId, product.shopId)) {\n    selector.isVisible = {\n      $in: [true, false, undefined]\n    };\n\n    if (RevisionApi.isRevisionControlEnabled()) {\n      const handle = Revisions.find({\n        \"workflow.status\": {\n          $nin: [\n            \"revision/published\"\n          ]\n        },\n        \"$or\": [\n          { \"documentData._id\": _id },\n          { \"documentData.ancestors\": _id }\n        ]\n      }).observe({\n        added: (revision) => {\n          this.added(\"Revisions\", revision._id, revision);\n          if (revision.documentType === \"product\") {\n            // Check merge box (session collection view), if product is already in cache.\n            // If yes, we send a `changed`, otherwise `added`. I'm assuming\n            // that this._documents.Products is somewhat equivalent to the\n            // merge box Meteor.server.sessions[sessionId].getCollectionView(\"Products\").documents\n            if (this._documents.Products && this._documents.Products[revision.documentId]) {\n              this.changed(\"Products\", revision.documentId, { __revisions: [revision] });\n            } else {\n              this.added(\"Products\", revision.documentId, { __revisions: [revision] });\n            }\n          }\n        },\n        changed: (revision) => {\n          this.changed(\"Revisions\", revision._id, revision);\n          if (revision.documentType === \"product\") {\n            if (this._documents.Products && this._documents.Products[revision.documentId]) {\n              this.changed(\"Products\", revision.documentId, { __revisions: [revision] });\n            }\n          }\n        },\n        removed: (revision) => {\n          this.removed(\"Revisions\", revision._id);\n          if (revision.documentType === \"product\") {\n            if (this._documents.Products && this._documents.Products[revision.documentId]) {\n              this.changed(\"Products\", revision.documentId, { __revisions: [] });\n            }\n          }\n        }\n      });\n      this.onStop(() => {\n        handle.stop();\n      });\n    }\n  }\n\n  return Products.find(selector);\n});\n"]},"sourceType":"script","hash":"6d757eaffc75ee13bed4112b46bb2aad3a9b25a4"}
