{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"packages/ongoworks:security/lib/server/Security.js","filename":"packages/ongoworks:security/lib/server/Security.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"packages/ongoworks:security/lib/server/Security.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"packages/ongoworks:security/lib/server/Security.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ongoworks:security/lib/server/Security.js"}},"code":"// The `Security` object is exported and provides the package API\nSecurity = {\n  // Putting these on the exported object allows package users to override if necessary\n  errorMessages: {\n    multipleCan: 'You may not combine more than one insert, update, or remove on a Security.can chain',\n    notAllowed: 'Action not allowed',\n    requiresDefinition: 'Security.defineMethod requires a \"definition\" argument',\n    requiresAllow: 'Security.defineMethod requires an \"allow\" function',\n    collectionsArg: 'The collections argument must be a Mongo.Collection instance or an array of them',\n    noCollectionOrType: 'At a minimum, you must call permit and collections methods for a security rule.'\n  },\n  // the starting point of the chain\n  permit: function permit(types) {\n    return new Security.Rule(types);\n  },\n  can: function can(userId) {\n    return new Security.Check(userId);\n  },\n  defineMethod: function securityDefineMethod(name, definition) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n\n    if (!definition) throw new Error(Security.errorMessages.requiresDefinition); // If \"deny\" is used, convert to \"allow\" for backwards compatibility\n\n    if (definition.deny) {\n      definition.allow = (...args) => {\n        return !definition.deny(...args);\n      };\n    } // Make sure the definition argument is an object that has an `allow` property\n\n\n    if (!definition.allow) throw new Error(Security.errorMessages.requiresAllow); // Wrap transform, if provided\n\n    if (definition.transform) {\n      definition.transform = LocalCollection.wrapTransform(definition.transform);\n    }\n\n    Security.Rule.prototype[name] = function (arg) {\n      this._restrictions.push({\n        definition,\n        arg\n      });\n\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function (types) {\n  return Security.permit(types).collections(this);\n};","map":{"version":3,"sources":["packages/ongoworks:security/lib/server/Security.js"],"names":["Security","errorMessages","multipleCan","notAllowed","requiresDefinition","requiresAllow","collectionsArg","noCollectionOrType","permit","types","Rule","can","userId","Check","defineMethod","securityDefineMethod","name","definition","prototype","Error","deny","allow","args","transform","LocalCollection","wrapTransform","arg","_restrictions","push","Mongo","Collection","collections"],"mappings":"AAAA;AACAA,WAAW;AACT;AACAC,iBAAe;AACbC,iBAAa,qFADA;AAEbC,gBAAY,oBAFC;AAGbC,wBAAoB,wDAHP;AAIbC,mBAAe,oDAJF;AAKbC,oBAAgB,kFALH;AAMbC,wBAAoB;AANP,GAFN;AAUT;AACAC,UAAQ,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAC7B,WAAO,IAAIT,SAASU,IAAb,CAAkBD,KAAlB,CAAP;AACD,GAbQ;AAcTE,OAAK,SAASA,GAAT,CAAaC,MAAb,EAAqB;AACxB,WAAO,IAAIZ,SAASa,KAAb,CAAmBD,MAAnB,CAAP;AACD,GAhBQ;AAiBTE,gBAAc,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,UAApC,EAAgD;AAC5D;AACA,QAAIjB,SAASU,IAAT,CAAcQ,SAAd,CAAwBF,IAAxB,CAAJ,EAAmC;AACjC,YAAM,IAAIG,KAAJ,CAAU,sCAAsCH,IAAtC,GAA6C,4BAAvD,CAAN;AACD;;AACD,QAAI,CAACC,UAAL,EAAiB,MAAM,IAAIE,KAAJ,CAAUnB,SAASC,aAAT,CAAuBG,kBAAjC,CAAN,CAL2C,CAM5D;;AACA,QAAIa,WAAWG,IAAf,EAAqB;AACnBH,iBAAWI,KAAX,GAAmB,CAAC,GAAGC,IAAJ,KAAa;AAC9B,eAAO,CAACL,WAAWG,IAAX,CAAgB,GAAGE,IAAnB,CAAR;AACD,OAFD;AAGD,KAX2D,CAY5D;;;AACA,QAAI,CAACL,WAAWI,KAAhB,EAAuB,MAAM,IAAIF,KAAJ,CAAUnB,SAASC,aAAT,CAAuBI,aAAjC,CAAN,CAbqC,CAc5D;;AACA,QAAIY,WAAWM,SAAf,EAA0B;AACxBN,iBAAWM,SAAX,GAAuBC,gBAAgBC,aAAhB,CAA8BR,WAAWM,SAAzC,CAAvB;AACD;;AACDvB,aAASU,IAAT,CAAcQ,SAAd,CAAwBF,IAAxB,IAAgC,UAAUU,GAAV,EAAe;AAC7C,WAAKC,aAAL,CAAmBC,IAAnB,CAAwB;AACtBX,kBADsB;AAEtBS;AAFsB,OAAxB;;AAIA,aAAO,IAAP;AACD,KAND;AAOD;AA1CQ,CAAX;;AA6CAG,MAAMC,UAAN,CAAiBZ,SAAjB,CAA2BV,MAA3B,GAAoC,UAAUC,KAAV,EAAiB;AACnD,SAAOT,SAASQ,MAAT,CAAgBC,KAAhB,EAAuBsB,WAAvB,CAAmC,IAAnC,CAAP;AACD,CAFD","sourcesContent":["// The `Security` object is exported and provides the package API\nSecurity = {\n  // Putting these on the exported object allows package users to override if necessary\n  errorMessages: {\n    multipleCan: 'You may not combine more than one insert, update, or remove on a Security.can chain',\n    notAllowed: 'Action not allowed',\n    requiresDefinition: 'Security.defineMethod requires a \"definition\" argument',\n    requiresAllow: 'Security.defineMethod requires an \"allow\" function',\n    collectionsArg: 'The collections argument must be a Mongo.Collection instance or an array of them',\n    noCollectionOrType: 'At a minimum, you must call permit and collections methods for a security rule.',\n  },\n  // the starting point of the chain\n  permit: function permit(types) {\n    return new Security.Rule(types);\n  },\n  can: function can(userId) {\n    return new Security.Check(userId);\n  },\n  defineMethod: function securityDefineMethod(name, definition) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n    if (!definition) throw new Error(Security.errorMessages.requiresDefinition);\n    // If \"deny\" is used, convert to \"allow\" for backwards compatibility\n    if (definition.deny) {\n      definition.allow = (...args) => {\n        return !definition.deny(...args);\n      };\n    }\n    // Make sure the definition argument is an object that has an `allow` property\n    if (!definition.allow) throw new Error(Security.errorMessages.requiresAllow);\n    // Wrap transform, if provided\n    if (definition.transform) {\n      definition.transform = LocalCollection.wrapTransform(definition.transform);\n    }\n    Security.Rule.prototype[name] = function (arg) {\n      this._restrictions.push({\n        definition,\n        arg,\n      });\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function (types) {\n  return Security.permit(types).collections(this);\n};\n"]},"sourceType":"script","hash":"fdd88f0ab6ebab17a91fed88eeaf66d5c6a90493"}
