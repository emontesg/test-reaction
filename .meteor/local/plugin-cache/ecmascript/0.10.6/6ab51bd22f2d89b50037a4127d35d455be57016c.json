{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/orders/client/helpers/index.js","filename":"imports/plugins/core/orders/client/helpers/index.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/orders/client/helpers/index.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/orders/client/helpers/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/orders/client/helpers/index.js"}},"code":"module.export({\n  getOrderRiskBadge: function () {\n    return getOrderRiskBadge;\n  },\n  getOrderRiskStatus: function () {\n    return getOrderRiskStatus;\n  },\n  getTaxRiskStatus: function () {\n    return getTaxRiskStatus;\n  },\n  filterWorkflowStatus: function () {\n    return filterWorkflowStatus;\n  },\n  filterShippingStatus: function () {\n    return filterShippingStatus;\n  },\n  getBillingInfo: function () {\n    return getBillingInfo;\n  },\n  getShippingInfo: function () {\n    return getShippingInfo;\n  }\n});\nvar Reaction;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 0);\n\nfunction getOrderRiskBadge(riskLevel) {\n  var label;\n\n  switch (riskLevel) {\n    case \"high\":\n      label = \"danger\";\n      break;\n\n    case \"elevated\":\n      label = \"warning\";\n      break;\n\n    default:\n      label = \"\";\n  }\n\n  return label;\n}\n\nfunction getOrderRiskStatus(order) {\n  var billingForShop = order.billing.find(function (billing) {\n    return billing.shopId === Reaction.getShopId();\n  });\n  var paymentMethod = billingForShop && billingForShop.paymentMethod || {};\n  var riskLevel = paymentMethod.riskLevel; // normal transactions do not need to be flagged\n\n  if (riskLevel === \"normal\") {\n    return \"\";\n  }\n\n  if (!riskLevel) {\n    return \"\";\n  }\n\n  return riskLevel;\n}\n\nfunction getTaxRiskStatus(order) {\n  return order.taxCalculationFailed || order.bypassAddressValidation;\n}\n\nfunction filterWorkflowStatus(filter) {\n  var query = {};\n\n  switch (filter) {\n    // New orders\n    case \"new\":\n      query = {\n        \"workflow.status\": \"new\"\n      };\n      break;\n    // Orders that have been approved\n\n    case \"approved\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/processing\",\n        \"billing.paymentMethod.status\": \"approved\"\n      };\n      break;\n    // Orders that have been captured\n\n    case \"captured\":\n      query = {\n        \"billing.paymentMethod.status\": \"completed\",\n        \"shipping.shipped\": false\n      };\n      break;\n    // Orders that are being processed\n\n    case \"processing\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/processing\"\n      };\n      break;\n    // Orders that are complete, including all items with complete status\n\n    case \"completed\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/completed\"\n      };\n      break;\n\n    case \"canceled\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/canceled\"\n      };\n      break;\n\n    default:\n  }\n\n  return query;\n}\n\nfunction filterShippingStatus(filter) {\n  var query = {};\n\n  switch (filter) {\n    case \"picked\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/picked\"\n      };\n      break;\n\n    case \"packed\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/packed\"\n      };\n      break;\n\n    case \"labeled\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/labeled\"\n      };\n      break;\n\n    case \"shipped\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/shipped\"\n      };\n      break;\n\n    default:\n  }\n\n  return query;\n}\n\nfunction getBillingInfo(order) {\n  var billingInfo = order && order.billing && order.billing.find(function (billing) {\n    return billing && billing.shopId === Reaction.getShopId();\n  });\n  return billingInfo || {};\n}\n\nfunction getShippingInfo(order) {\n  var shippingInfo = order && order.shipping && order.shipping.find(function (shipping) {\n    return shipping && shipping.shopId === Reaction.getShopId();\n  });\n  return shippingInfo || {};\n}","map":{"version":3,"sources":["imports/plugins/core/orders/client/helpers/index.js"],"names":["module","export","getOrderRiskBadge","getOrderRiskStatus","getTaxRiskStatus","filterWorkflowStatus","filterShippingStatus","getBillingInfo","getShippingInfo","Reaction","watch","require","v","riskLevel","label","order","billingForShop","billing","find","shopId","getShopId","paymentMethod","taxCalculationFailed","bypassAddressValidation","filter","query","billingInfo","shippingInfo","shipping"],"mappings":"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","sourcesContent":["import { Reaction } from \"/client/api\";\n\n/*\n * @method getOrderRiskBadge\n * @private\n * @summary Selects appropriate color badge (e.g  danger, warning) value based on risklevel\n * @param {string} riskLevel - risk level value on the paymentMethod\n * @return {string} label - style color class based on risk level\n */\nexport function getOrderRiskBadge(riskLevel) {\n  let label;\n  switch (riskLevel) {\n    case \"high\":\n      label = \"danger\";\n      break;\n    case \"elevated\":\n      label = \"warning\";\n      break;\n    default:\n      label = \"\";\n  }\n  return label;\n}\n\n/*\n * @method getOrderRiskStatus\n * @private\n * @summary Gets the risk label on the paymentMethod object for a shop on an order.\n * An empty string is returned if the value is \"normal\" becuase we don't flag a normal charge\n * @param {object} order - order object\n * @return {string} label - risklevel value (if risklevel is not normal)\n */\nexport function getOrderRiskStatus(order) {\n  const billingForShop = order.billing.find((billing) => billing.shopId === Reaction.getShopId());\n  const paymentMethod = (billingForShop && billingForShop.paymentMethod) || {};\n  const { riskLevel } = paymentMethod;\n\n  // normal transactions do not need to be flagged\n  if (riskLevel === \"normal\") {\n    return \"\";\n  }\n\n  if (!riskLevel) {\n    return \"\";\n  }\n\n  return riskLevel;\n}\n\n/*\n * @method getTaxRiskStatus\n * @private\n * @summary Gets the tax status of the order.\n * @param {object} order - order object\n * @return {boolean} label - true if the tax was not submitted by user.\n */\nexport function getTaxRiskStatus(order) {\n  return order.taxCalculationFailed || order.bypassAddressValidation;\n}\n\n/**\n * filterWorkflowStatus\n *\n * @summary get query for a given filter\n * @param {String} filter - filter string to check against\n * @return {Object} query for the workflow status\n */\nexport function filterWorkflowStatus(filter) {\n  let query = {};\n\n  switch (filter) {\n    // New orders\n    case \"new\":\n      query = {\n        \"workflow.status\": \"new\"\n      };\n      break;\n\n    // Orders that have been approved\n    case \"approved\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/processing\",\n        \"billing.paymentMethod.status\": \"approved\"\n      };\n      break;\n\n    // Orders that have been captured\n    case \"captured\":\n      query = {\n        \"billing.paymentMethod.status\": \"completed\",\n        \"shipping.shipped\": false\n      };\n      break;\n\n    // Orders that are being processed\n    case \"processing\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/processing\"\n      };\n      break;\n\n    // Orders that are complete, including all items with complete status\n    case \"completed\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/completed\"\n      };\n      break;\n\n    case \"canceled\":\n      query = {\n        \"workflow.status\": \"coreOrderWorkflow/canceled\"\n      };\n      break;\n\n    default:\n  }\n\n  return query;\n}\n\n/**\n * filterShippingStatus\n *\n * @summary get query for a given filter\n * @param {String} filter - filter string to check against\n * @return {Object} query for the shipping status\n */\nexport function filterShippingStatus(filter) {\n  let query = {};\n\n  switch (filter) {\n    case \"picked\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/picked\"\n      };\n      break;\n\n    case \"packed\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/packed\"\n      };\n      break;\n\n    case \"labeled\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/labeled\"\n      };\n      break;\n\n    case \"shipped\":\n      query = {\n        \"shipping.workflow.status\": \"coreOrderWorkflow/shipped\"\n      };\n      break;\n\n    default:\n  }\n\n  return query;\n}\n\n/**\n * getBillingInfo\n *\n * @summary get proper billing object as per current active shop\n * @param {Object} order - order object to check against\n * @return {Object} proper billing object to use\n */\nexport function getBillingInfo(order) {\n  const billingInfo = order && order.billing && order.billing.find((billing) => billing && (billing.shopId === Reaction.getShopId()));\n  return billingInfo || {};\n}\n\n/**\n * getShippingInfo\n *\n * @summary get proper shipping object as per current active shop\n * @param {Object} order - order object to check against\n * @return {Object} proper shipping object to use\n */\nexport function getShippingInfo(order) {\n  const shippingInfo = order && order.shipping && order.shipping.find((shipping) => shipping && shipping.shopId === Reaction.getShopId());\n  return shippingInfo || {};\n}\n"]},"sourceType":"script","hash":"6ab51bd22f2d89b50037a4127d35d455be57016c"}
