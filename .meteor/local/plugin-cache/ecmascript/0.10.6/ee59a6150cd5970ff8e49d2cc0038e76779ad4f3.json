{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/hooks.js","filename":"imports/plugins/included/connectors-shopify/server/methods/sync/hooks.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/hooks.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/connectors-shopify/server/methods/sync/hooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/hooks.js"}},"code":"module.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Reaction;\nmodule.watch(require(\"/server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 2);\nlet Packages;\nmodule.watch(require(\"/lib/collections\"), {\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 3);\nlet connectorsRoles;\nmodule.watch(require(\"../../lib/roles\"), {\n  connectorsRoles(v) {\n    connectorsRoles = v;\n  }\n\n}, 4);\nconst methods = {\n  /**\n   * @summary define hooks handlers for adding event hooks\n   * @param {String} hook - The name of the hook to add a handler for\n   * @returns {Number} Results of Packages update\n   */\n  \"synchooks/shopify/addHook\": hook => {\n    check(hook, {\n      name: String,\n      checked: Boolean\n    });\n\n    if (!Reaction.hasPermission(connectorsRoles)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    const [topic, event, syncType] = hook.name.split(\":\");\n    const hookSetting = {\n      topic,\n      event,\n      syncType\n    };\n    return Packages.update({\n      \"name\": \"reaction-connectors-shopify\",\n      \"shopId\": Reaction.getShopId(),\n      // This $not $elemMatch block prevents us from creating duplicate synchooks as we won't find a package to update that\n      // matches this shopId and existing synchook\n      \"settings.synchooks\": {\n        $not: {\n          $elemMatch: {\n            topic: \"orders\",\n            event: \"orders/create\",\n            syncType: \"exportToShopify\"\n          }\n        }\n      }\n    }, {\n      $push: {\n        \"settings.synchooks\": hookSetting\n      }\n    });\n  },\n\n  /**\n   * @summary define hooks handlers for removing event hooks\n   * @param {String} hook - The name of the hook to remove a handler for\n   * @returns {Number} Results of Packages update\n   */\n  \"synchooks/shopify/removeHook\": hook => {\n    if (!Reaction.hasPermission(connectorsRoles)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    check(hook, {\n      name: String,\n      checked: Boolean\n    });\n    const [topic, event, syncType] = hook.name.split(\":\");\n    const hookSetting = {\n      topic,\n      event,\n      syncType\n    };\n    return Packages.update({\n      name: \"reaction-connectors-shopify\",\n      shopId: Reaction.getShopId()\n    }, {\n      $pull: {\n        \"settings.synchooks\": hookSetting\n      }\n    });\n  }\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/included/connectors-shopify/server/methods/sync/hooks.js"],"names":["module","export","methods","Meteor","watch","require","v","check","Reaction","Packages","connectorsRoles","hook","name","String","checked","Boolean","hasPermission","Error","topic","event","syncType","split","hookSetting","update","getShopId","$not","$elemMatch","$push","shopId","$pull"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,MAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,QAAJ;AAAaR,OAAOI,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACG,WAASF,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW;;AAAxB,CAApC,EAA8D,CAA9D;AAAiE,IAAIG,QAAJ;AAAaT,OAAOI,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACI,WAASH,CAAT,EAAW;AAACG,eAASH,CAAT;AAAW;;AAAxB,CAAzC,EAAmE,CAAnE;AAAsE,IAAII,eAAJ;AAAoBV,OAAOI,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACK,kBAAgBJ,CAAhB,EAAkB;AAACI,sBAAgBJ,CAAhB;AAAkB;;AAAtC,CAAxC,EAAgF,CAAhF;AAMnW,MAAMJ,UAAU;AACrB;;;;;AAKA,+BAA8BS,IAAD,IAAU;AACrCJ,UAAMI,IAAN,EAAY;AAAEC,YAAMC,MAAR;AAAgBC,eAASC;AAAzB,KAAZ;;AACA,QAAI,CAACP,SAASQ,aAAT,CAAuBN,eAAvB,CAAL,EAA8C;AAC5C,YAAM,IAAIP,OAAOc,KAAX,CAAiB,eAAjB,EAAkC,eAAlC,CAAN;AACD;;AACD,UAAM,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,IAA2BT,KAAKC,IAAL,CAAUS,KAAV,CAAgB,GAAhB,CAAjC;AACA,UAAMC,cAAc;AAAEJ,WAAF;AAASC,WAAT;AAAgBC;AAAhB,KAApB;AACA,WAAOX,SAASc,MAAT,CAAgB;AACrB,cAAQ,6BADa;AAErB,gBAAUf,SAASgB,SAAT,EAFW;AAGrB;AACA;AACA,4BAAsB;AACpBC,cAAM;AACJC,sBAAY;AACVR,mBAAO,QADG;AAEVC,mBAAO,eAFG;AAGVC,sBAAU;AAHA;AADR;AADc;AALD,KAAhB,EAcJ;AACDO,aAAO;AAAE,8BAAsBL;AAAxB;AADN,KAdI,CAAP;AAiBD,GA9BoB;;AA+BrB;;;;;AAKA,kCAAiCX,IAAD,IAAU;AACxC,QAAI,CAACH,SAASQ,aAAT,CAAuBN,eAAvB,CAAL,EAA8C;AAC5C,YAAM,IAAIP,OAAOc,KAAX,CAAiB,eAAjB,EAAkC,eAAlC,CAAN;AACD;;AACDV,UAAMI,IAAN,EAAY;AAAEC,YAAMC,MAAR;AAAgBC,eAASC;AAAzB,KAAZ;AACA,UAAM,CAACG,KAAD,EAAQC,KAAR,EAAeC,QAAf,IAA2BT,KAAKC,IAAL,CAAUS,KAAV,CAAgB,GAAhB,CAAjC;AACA,UAAMC,cAAc;AAAEJ,WAAF;AAASC,WAAT;AAAgBC;AAAhB,KAApB;AACA,WAAOX,SAASc,MAAT,CACL;AAAEX,YAAM,6BAAR;AAAuCgB,cAAQpB,SAASgB,SAAT;AAA/C,KADK,EAEL;AAAEK,aAAO;AAAE,8BAAsBP;AAAxB;AAAT,KAFK,CAAP;AAID;AA/CoB,CAAhB;AAkDPnB,OAAOD,OAAP,CAAeA,OAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Reaction } from \"/server/api\";\nimport { Packages } from \"/lib/collections\";\nimport { connectorsRoles } from \"../../lib/roles\";\n\nexport const methods = {\n  /**\n   * @summary define hooks handlers for adding event hooks\n   * @param {String} hook - The name of the hook to add a handler for\n   * @returns {Number} Results of Packages update\n   */\n  \"synchooks/shopify/addHook\": (hook) => {\n    check(hook, { name: String, checked: Boolean });\n    if (!Reaction.hasPermission(connectorsRoles)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n    const [topic, event, syncType] = hook.name.split(\":\");\n    const hookSetting = { topic, event, syncType };\n    return Packages.update({\n      \"name\": \"reaction-connectors-shopify\",\n      \"shopId\": Reaction.getShopId(),\n      // This $not $elemMatch block prevents us from creating duplicate synchooks as we won't find a package to update that\n      // matches this shopId and existing synchook\n      \"settings.synchooks\": {\n        $not: {\n          $elemMatch: {\n            topic: \"orders\",\n            event: \"orders/create\",\n            syncType: \"exportToShopify\"\n          }\n        }\n      }\n    }, {\n      $push: { \"settings.synchooks\": hookSetting }\n    });\n  },\n  /**\n   * @summary define hooks handlers for removing event hooks\n   * @param {String} hook - The name of the hook to remove a handler for\n   * @returns {Number} Results of Packages update\n   */\n  \"synchooks/shopify/removeHook\": (hook) => {\n    if (!Reaction.hasPermission(connectorsRoles)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n    check(hook, { name: String, checked: Boolean });\n    const [topic, event, syncType] = hook.name.split(\":\");\n    const hookSetting = { topic, event, syncType };\n    return Packages.update(\n      { name: \"reaction-connectors-shopify\", shopId: Reaction.getShopId() },\n      { $pull: { \"settings.synchooks\": hookSetting } }\n    );\n  }\n};\n\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"ee59a6150cd5970ff8e49d2cc0038e76779ad4f3"}
