{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/collections/revisions.js","filename":"server/publications/collections/revisions.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/collections/revisions.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/collections/revisions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/collections/revisions.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet Revisions;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Revisions(v) {\n    Revisions = v;\n  }\n\n}, 3);\nlet Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 4);\n\n/**\n * accounts\n */\nMeteor.publish(\"Revisions\", function (documentIds) {\n  check(documentIds, Match.OneOf(String, Array)); // we could additionally make checks of useId defined, but this could lead to\n  // situation when user will may not have time to get an account\n\n  if (this.userId === null) {\n    return this.ready();\n  }\n\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    if (Array.isArray(documentIds)) {\n      return Revisions.find({\n        // shopId,\n        documentId: {\n          $in: documentIds\n        }\n      });\n    } // global admin can get all accounts\n\n\n    return Revisions.find({\n      // shopId,\n      documentId: documentIds\n    });\n  } // regular users should get just their account\n\n\n  return this.ready();\n});","map":{"version":3,"sources":["server/publications/collections/revisions.js"],"names":["Meteor","module","watch","require","v","check","Match","Roles","Revisions","Reaction","publish","documentIds","OneOf","String","Array","userId","ready","shopId","getShopId","userIsInRole","isArray","find","documentId","$in"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ,EAAUC,KAAV;AAAgBL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ,GAAlB;;AAAmBE,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ;;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIG,KAAJ;AAAUN,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACI,QAAMH,CAAN,EAAQ;AAACG,YAAMH,CAAN;AAAQ;;AAAlB,CAA9C,EAAkE,CAAlE;AAAqE,IAAII,SAAJ;AAAcP,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACK,YAAUJ,CAAV,EAAY;AAACI,gBAAUJ,CAAV;AAAY;;AAA1B,CAAjD,EAA6E,CAA7E;AAAgF,IAAIK,QAAJ;AAAaR,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACM,WAASL,CAAT,EAAW;AAACK,eAASL,CAAT;AAAW;;AAAxB,CAAlC,EAA4D,CAA5D;;AAMlW;;;AAIAJ,OAAOU,OAAP,CAAe,WAAf,EAA4B,UAAUC,WAAV,EAAuB;AACjDN,QAAMM,WAAN,EAAmBL,MAAMM,KAAN,CAAYC,MAAZ,EAAoBC,KAApB,CAAnB,EADiD,CAGjD;AACA;;AACA,MAAI,KAAKC,MAAL,KAAgB,IAApB,EAA0B;AACxB,WAAO,KAAKC,KAAL,EAAP;AACD;;AACD,QAAMC,SAASR,SAASS,SAAT,EAAf;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,KAAKD,KAAL,EAAP;AACD;;AAED,MAAIT,MAAMY,YAAN,CAAmB,KAAKJ,MAAxB,EAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,CAAJ,EAAyD;AACvD,QAAID,MAAMM,OAAN,CAAcT,WAAd,CAAJ,EAAgC;AAC9B,aAAOH,UAAUa,IAAV,CAAe;AACpB;AACAC,oBAAY;AACVC,eAAKZ;AADK;AAFQ,OAAf,CAAP;AAMD,KARsD,CAUvD;;;AACA,WAAOH,UAAUa,IAAV,CAAe;AACpB;AACAC,kBAAYX;AAFQ,KAAf,CAAP;AAID,GA5BgD,CA6BjD;;;AACA,SAAO,KAAKK,KAAL,EAAP;AACD,CA/BD","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { Revisions } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * accounts\n */\n\nMeteor.publish(\"Revisions\", function (documentIds) {\n  check(documentIds, Match.OneOf(String, Array));\n\n  // we could additionally make checks of useId defined, but this could lead to\n  // situation when user will may not have time to get an account\n  if (this.userId === null) {\n    return this.ready();\n  }\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    if (Array.isArray(documentIds)) {\n      return Revisions.find({\n        // shopId,\n        documentId: {\n          $in: documentIds\n        }\n      });\n    }\n\n    // global admin can get all accounts\n    return Revisions.find({\n      // shopId,\n      documentId: documentIds\n    });\n  }\n  // regular users should get just their account\n  return this.ready();\n});\n"]},"sourceType":"script","hash":"d9ffd742872e1c074ad2c43ed5d2c36440e09f79"}
