{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/connectors-shopify/server/jobs/image-import.js","filename":"imports/plugins/included/connectors-shopify/server/jobs/image-import.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/connectors-shopify/server/jobs/image-import.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/connectors-shopify/server/jobs/image-import.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/connectors-shopify/server/jobs/image-import.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nmodule.export({\n  importImages: () => importImages\n});\nlet FileRecord;\nmodule.watch(require(\"@reactioncommerce/file-collections\"), {\n  FileRecord(v) {\n    FileRecord = v;\n  }\n\n}, 0);\nlet Jobs;\nmodule.watch(require(\"/lib/collections\"), {\n  Jobs(v) {\n    Jobs = v;\n  }\n\n}, 1);\nlet Media;\nmodule.watch(require(\"/imports/plugins/core/files/server\"), {\n  Media(v) {\n    Media = v;\n  }\n\n}, 2);\nlet fetch;\nmodule.watch(require(\"node-fetch\"), {\n  default(v) {\n    fetch = v;\n  }\n\n}, 3);\n\nfunction addMediaFromUrl({\n  url,\n  metadata\n}) {\n  return Promise.asyncApply(() => {\n    const fileRecord = Promise.await(FileRecord.fromUrl(url, {\n      fetch\n    })); // Set workflow to \"published\" to bypass revision control on insert for this image.\n\n    fileRecord.metadata = (0, _objectSpread2.default)({}, metadata, {\n      workflow: \"published\"\n    });\n    return Media.insert(fileRecord);\n  });\n}\n\nconst importImages = () => {\n  Jobs.processJobs(\"connectors/shopify/import/image\", {\n    pollInterval: 60 * 60 * 1000,\n    // Retry failed images after an hour\n    workTimeout: 5 * 1000 // No image import should last more than 5 seconds\n\n  }, (job, callback) => {\n    const {\n      data\n    } = job;\n    const {\n      url\n    } = data;\n\n    try {\n      Promise.await(addMediaFromUrl(data));\n      job.done(`Finished importing image from ${url}`);\n      callback();\n    } catch (error) {\n      job.fail(`Failed to import image from ${url}.`);\n      callback();\n    }\n  });\n};","map":{"version":3,"sources":["imports/plugins/included/connectors-shopify/server/jobs/image-import.js"],"names":["module","export","importImages","FileRecord","watch","require","v","Jobs","Media","fetch","default","addMediaFromUrl","url","metadata","fileRecord","fromUrl","workflow","insert","processJobs","pollInterval","workTimeout","job","callback","data","Promise","await","done","error","fail"],"mappings":";;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,gBAAa,MAAIA;AAAlB,CAAd;AAA+C,IAAIC,UAAJ;AAAeH,OAAOI,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACF,aAAWG,CAAX,EAAa;AAACH,iBAAWG,CAAX;AAAa;;AAA5B,CAA3D,EAAyF,CAAzF;AAA4F,IAAIC,IAAJ;AAASP,OAAOI,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACE,OAAKD,CAAL,EAAO;AAACC,WAAKD,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIE,KAAJ;AAAUR,OAAOI,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACG,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ;;AAAlB,CAA3D,EAA+E,CAA/E;AAAkF,IAAIG,KAAJ;AAAUT,OAAOI,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACK,UAAQJ,CAAR,EAAU;AAACG,YAAMH,CAAN;AAAQ;;AAApB,CAAnC,EAAyD,CAAzD;;AAKvU,SAAeK,eAAf,CAA+B;AAAEC,KAAF;AAAOC;AAAP,CAA/B;AAAA,kCAAkD;AAChD,UAAMC,2BAAmBX,WAAWY,OAAX,CAAmBH,GAAnB,EAAwB;AAAEH;AAAF,KAAxB,CAAnB,CAAN,CADgD,CAGhD;;AACAK,eAAWD,QAAX,mCAA2BA,QAA3B;AAAqCG,gBAAU;AAA/C;AAEA,WAAOR,MAAMS,MAAN,CAAaH,UAAb,CAAP;AACD,GAPD;AAAA;;AASO,MAAMZ,eAAe,MAAM;AAChCK,OAAKW,WAAL,CAAiB,iCAAjB,EAAoD;AAClDC,kBAAc,KAAK,EAAL,GAAU,IAD0B;AACpB;AAC9BC,iBAAa,IAAI,IAFiC,CAE5B;;AAF4B,GAApD,EAGG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACpB,UAAM;AAAEC;AAAF,QAAWF,GAAjB;AACA,UAAM;AAAET;AAAF,QAAUW,IAAhB;;AACA,QAAI;AACFC,cAAQC,KAAR,CAAcd,gBAAgBY,IAAhB,CAAd;AACAF,UAAIK,IAAJ,CAAU,iCAAgCd,GAAI,EAA9C;AACAU;AACD,KAJD,CAIE,OAAOK,KAAP,EAAc;AACdN,UAAIO,IAAJ,CAAU,+BAA8BhB,GAAI,GAA5C;AACAU;AACD;AACF,GAdD;AAeD,CAhBM","sourcesContent":["import { FileRecord } from \"@reactioncommerce/file-collections\";\nimport { Jobs } from \"/lib/collections\";\nimport { Media } from \"/imports/plugins/core/files/server\";\nimport fetch from \"node-fetch\";\n\nasync function addMediaFromUrl({ url, metadata }) {\n  const fileRecord = await FileRecord.fromUrl(url, { fetch });\n\n  // Set workflow to \"published\" to bypass revision control on insert for this image.\n  fileRecord.metadata = { ...metadata, workflow: \"published\" };\n\n  return Media.insert(fileRecord);\n}\n\nexport const importImages = () => {\n  Jobs.processJobs(\"connectors/shopify/import/image\", {\n    pollInterval: 60 * 60 * 1000, // Retry failed images after an hour\n    workTimeout: 5 * 1000 // No image import should last more than 5 seconds\n  }, (job, callback) => {\n    const { data } = job;\n    const { url } = data;\n    try {\n      Promise.await(addMediaFromUrl(data));\n      job.done(`Finished importing image from ${url}`);\n      callback();\n    } catch (error) {\n      job.fail(`Failed to import image from ${url}.`);\n      callback();\n    }\n  });\n};\n"]},"sourceType":"script","hash":"e74a6d1821f30eb8e71a4988619c97bdddfa3947"}
