{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/router/lib/router.js","filename":"imports/plugins/core/router/lib/router.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/router/lib/router.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/router/lib/router.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/router/lib/router.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.export({\n  history: function () {\n    return history;\n  },\n  ReactionLayout: function () {\n    return ReactionLayout;\n  }\n});\n\nvar _uniqBy;\n\nmodule.watch(require(\"lodash/uniqBy\"), {\n  \"default\": function (v) {\n    _uniqBy = v;\n  }\n}, 0);\nvar React;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar Route;\nmodule.watch(require(\"react-router\"), {\n  Route: function (v) {\n    Route = v;\n  }\n}, 2);\nvar createBrowserHistory;\nmodule.watch(require(\"history/createBrowserHistory\"), {\n  \"default\": function (v) {\n    createBrowserHistory = v;\n  }\n}, 3);\nvar createMemoryHistory;\nmodule.watch(require(\"history/createMemoryHistory\"), {\n  \"default\": function (v) {\n    createMemoryHistory = v;\n  }\n}, 4);\nvar pathToRegexp;\nmodule.watch(require(\"path-to-regexp\"), {\n  \"default\": function (v) {\n    pathToRegexp = v;\n  }\n}, 5);\nvar queryParse;\nmodule.watch(require(\"query-parse\"), {\n  \"default\": function (v) {\n    queryParse = v;\n  }\n}, 6);\nvar Immutable;\nmodule.watch(require(\"immutable\"), {\n  \"default\": function (v) {\n    Immutable = v;\n  }\n}, 7);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 8);\nvar Blaze;\nmodule.watch(require(\"meteor/gadicc:blaze-react-component\"), {\n  \"default\": function (v) {\n    Blaze = v;\n  }\n}, 9);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 10);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 11);\nvar Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 12);\nvar Packages, Shops;\nmodule.watch(require(\"../../../../../lib/collections\"), {\n  Packages: function (v) {\n    Packages = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 13);\nvar getComponent;\nmodule.watch(require(\"../../components/lib/components\"), {\n  getComponent: function (v) {\n    getComponent = v;\n  }\n}, 14);\nvar Hooks;\nmodule.watch(require(\"./hooks\"), {\n  \"default\": function (v) {\n    Hooks = v;\n  }\n}, 15);\nvar history = Meteor.isClient ? createBrowserHistory() : createMemoryHistory();\n// Private vars\nvar currentRoute = Immutable.Map();\nvar routerReadyDependency = new Tracker.Dependency();\nvar routerChangeDependency = new Tracker.Dependency();\n/** Class representing a static base router */\n\nvar Router =\n/*#__PURE__*/\nfunction () {\n  function Router() {}\n\n  /**\n   * Triggers reactively on router ready state changed\n   * @return {Boolean} Router initalization state\n   */\n  Router.ready = function () {\n    function ready() {\n      routerReadyDependency.depend();\n      return Router._initialized;\n    }\n\n    return ready;\n  }();\n  /**\n   * Re-triggers router ready dependency\n   * @return {undefined}\n   */\n\n\n  Router.triggerRouterReady = function () {\n    function triggerRouterReady() {\n      routerReadyDependency.changed();\n    }\n\n    return triggerRouterReady;\n  }();\n  /**\n   * Hooks\n   * @type {Hooks}\n   */\n\n\n  /**\n   * Get the current route date. Not reactive.\n   * @return {Object} Object containing route data\n   */\n  Router.current = function () {\n    function current() {\n      return currentRoute.toJS();\n    }\n\n    return current;\n  }();\n  /**\n   * Set current route data. Is reactive.\n   * @param {Object} routeData Object containing route data\n   * @return {undefined}\n   */\n\n\n  Router.setCurrentRoute = function () {\n    function setCurrentRoute(routeData) {\n      currentRoute = Immutable.Map(routeData);\n      routerChangeDependency.changed();\n    }\n\n    return setCurrentRoute;\n  }();\n  /**\n   * Get the name of the current route. Is reactive.\n   * @return {String} Name of current route\n   */\n\n\n  Router.getRouteName = function () {\n    function getRouteName() {\n      var current = Router.current();\n      return current.route && current.route.name || \"\";\n    }\n\n    return getRouteName;\n  }();\n  /**\n   * Get param by name. Is reactive.\n   * @param  {String} name Param name\n   * @return {String|undefined} String value or undefined\n   */\n\n\n  Router.getParam = function () {\n    function getParam(name) {\n      routerChangeDependency.depend();\n      var current = Router.current();\n      return current.params && current.params[name] || undefined;\n    }\n\n    return getParam;\n  }();\n  /**\n   * Get query param by name\n   * @param  {String} name Query param name. Is reactive.\n   * @return {String|undefined} String value or undefined\n   */\n\n\n  Router.getQueryParam = function () {\n    function getQueryParam(name) {\n      routerChangeDependency.depend();\n      var current = Router.current();\n      return current.query && current.query[name] || undefined;\n    }\n\n    return getQueryParam;\n  }();\n  /**\n   * Merge new query params with current params\n   * @param {Object} newParams Object containing params\n   * @return {undefined}\n   */\n\n\n  Router.setQueryParams = function () {\n    function setQueryParams(newParams) {\n      var current = Router.current(); // Merge current and new params\n\n      var queryParams = Object.assign({}, current.query, newParams); // Any param marked as null or undefined will be removed\n\n      for (var key in meteorBabelHelpers.sanitizeForInObject(queryParams)) {\n        if (queryParams[key] === null || queryParams[key] === undefined) {\n          delete queryParams[key];\n        }\n      } // Update route\n\n\n      Router.go(current.route.name, current.params, queryParams);\n    }\n\n    return setQueryParams;\n  }();\n  /**\n   * Watch path change. Is Reactive.\n   * @return {undefined}\n   */\n\n\n  Router.watchPathChange = function () {\n    function watchPathChange() {\n      routerChangeDependency.depend();\n    }\n\n    return watchPathChange;\n  }();\n\n  (0, _createClass2.default)(Router, null, [{\n    key: \"_routes\",\n\n    /**\n     * history\n     * @type {history}\n     */\n\n    /**\n     * Hooks\n     * @type {Hooks}\n     */\n\n    /**\n     * Registered route definitions\n     * @type {Array}\n     */\n\n    /**\n     * Router initialization state\n     * @type {Boolean}\n     */\n\n    /**\n     * Active classname for active routes\n     * @type {String}\n     */\n\n    /**\n     * Routes array\n     * @type {Array}\n     * @param {Array} value An array of objects\n     */\n    set: function (value) {\n      Router.routes = value;\n    },\n    get: function () {\n      return Router.routes;\n    }\n  }, {\n    key: \"triggers\",\n    get: function () {\n      return Hooks;\n    }\n  }]);\n  return Router;\n}();\n/**\n * pathFor\n * @summary get current router path\n * @param {String} path - path to fetch\n * @param {Object} options - url params\n * @return {String} returns current router path\n */\n\n\nRouter.history = history;\nRouter.Hooks = Hooks;\nRouter.routes = [];\nRouter._initialized = false;\nRouter.activeClassName = \"active\";\n\nRouter.pathFor = function (path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var foundPath = Router.routes.find(function (pathObject) {\n    if (pathObject.route) {\n      if (options.hash && options.hash.shopSlug) {\n        if (pathObject.options.name === path && pathObject.route.includes(\"shopSlug\")) {\n          return true;\n        }\n      } else if (pathObject.options.name === path && !pathObject.route.includes(\"shopSlug\")) {\n        return true;\n      }\n    } // No path found\n\n\n    return false;\n  });\n\n  if (foundPath) {\n    // Pull the hash out of options\n    //\n    // This is becuase of Spacebars that we have hash.\n    // Spacebars takes all params passed into a template tag and places\n    // them into the options.hash object. This will also include any `query` params\n    var hash = options && options.hash || {}; // Create an executable function based on the route regex\n\n    var toPath = pathToRegexp.compile(foundPath.route); // Compile the regex path with the params from the hash\n\n    var compiledPath = toPath(hash); // Convert the query object to a string\n    // e.g. { a: \"one\", b: \"two\"} => \"a=one&b=two\"\n\n    var queryString = queryParse.toString(hash.query); // Return the compiled path + query string if we have one\n\n    if (typeof queryString === \"string\" && queryString.length) {\n      return compiledPath + \"?\" + queryString;\n    } // Return only the compiled path\n\n\n    return compiledPath;\n  }\n\n  return \"/\";\n};\n/**\n * Navigate to path with params and query\n * @param  {String} path Path string\n * @param  {Object} params Route params object\n * @param  {Object} query Query params object\n * @return {undefined} undefined\n */\n\n\nRouter.go = function (path, params, query) {\n  var actualPath;\n\n  var routerGo = function () {\n    if (typeof path === \"string\" && path.startsWith(\"/\")) {\n      actualPath = path;\n    } else {\n      actualPath = Router.pathFor(path, {\n        hash: (0, _objectSpread2.default)({}, params, {\n          query: query\n        })\n      });\n    }\n\n    if (window) {\n      history.push(actualPath);\n    }\n  }; // if Router is in a non ready/initialized state yet, wait until it is\n\n\n  if (!Router.ready()) {\n    Tracker.autorun(function (routerReadyWaitFor) {\n      if (Router.ready()) {\n        routerReadyWaitFor.stop();\n        routerGo();\n      }\n    });\n    return;\n  }\n\n  routerGo();\n};\n/**\n * Replace location\n * @param  {String} path Path string\n * @param  {Object} params Route params object\n * @param  {Object} query Query params object\n * @return {undefined} undefined\n */\n\n\nRouter.replace = function (path, params, query) {\n  var actualPath = Router.pathFor(path, {\n    hash: (0, _objectSpread2.default)({}, params, {\n      query: query\n    })\n  });\n\n  if (window) {\n    history.replace(actualPath);\n  }\n};\n/**\n * Reload router\n * @return {undefined} undefined\n */\n\n\nRouter.reload = function () {\n  var current = Router.current();\n\n  if (window) {\n    history.replace(current.route.fullPath || \"/\");\n  }\n};\n/**\n * isActive\n * @summary general helper to return \"active\" when on current path\n * @example {{active \"name\"}}\n * @param {String} routeName - route name as defined in registry\n * @return {String} return \"active\" or null\n */\n\n\nRouter.isActiveClassName = function (routeName) {\n  var current = Router.current();\n  var group = current.route.group;\n  var prefix = \"\";\n\n  if (current.route) {\n    var path = current.route.path;\n\n    if (group && group.prefix) {\n      prefix = current.route.group.prefix;\n    } // Match route\n\n\n    if (prefix.length && routeName.startsWith(prefix) && path === routeName) {\n      // Route name is a path and starts with the prefix. (default '/reaction')\n      return Router.activeClassName;\n    } else if (routeName.startsWith(\"/\") && path === routeName) {\n      // Route name isa  path and starts with slash, but was not prefixed\n      return Router.activeClassName;\n    } else if (current.route.name === routeName) {\n      // Route name is the actual name of the route\n      return Router.activeClassName;\n    }\n  }\n\n  return \"\";\n};\n/**\n * hasRoutePermission\n * check if user has route permissions\n * @access private\n * @param  {Object} route - route context\n * @return {Boolean} returns `true` if user is allowed to see route, `false` otherwise\n */\n\n\nfunction hasRoutePermission(route) {\n  var routeName = route.name;\n  return routeName === \"index\" || routeName === \"not-found\" || Router.Reaction.hasPermission(route.permissions, Meteor.userId());\n}\n/**\n * getRegistryRouteName\n * assemble route name to be standard\n * prefix/package name + registry name or route\n * @param  {String} packageName  [package name]\n * @param  {Object} registryItem [registry object]\n * @return {String}              [route name]\n */\n\n\nfunction getRegistryRouteName(packageName, registryItem) {\n  var routeName;\n\n  if (packageName && registryItem) {\n    if (registryItem.name) {\n      routeName = registryItem.name;\n    } else if (registryItem.template) {\n      routeName = packageName + \"/\" + registryItem.template;\n    } else {\n      routeName = packageName;\n    } // dont include params in the name\n\n\n    var _routeName$split = routeName.split(\":\");\n\n    var _routeName$split2 = _slicedToArray(_routeName$split, 1);\n\n    routeName = _routeName$split2[0];\n    return routeName;\n  }\n\n  return null;\n}\n/**\n * selectLayout\n * @access private\n * @param {Object} layout - element of shops.layout array\n * @param {Object} setLayout - layout\n * @param {Object} setWorkflow - workflow\n * @returns {Object} layout - return object of template definitions for Blaze Layout\n */\n\n\nfunction selectLayout(layout, setLayout, setWorkflow) {\n  var currentLayout = setLayout || Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n  var currentWorkflow = setWorkflow || Session.get(\"DEFAULT_WORKFLOW\") || \"coreWorkflow\";\n\n  if (layout.layout === currentLayout && layout.workflow === currentWorkflow && layout.enabled === true) {\n    return layout;\n  }\n\n  return null;\n}\n/**\n * ReactionLayout\n * sets and returns reaction layout structure\n * @access public\n * @param {Object} options - this router context\n * @param {String} options.layout - string of shop.layout.layout (defaults to coreLayout)\n * @param {String} options.workflow - string of shop.layout.workflow (defaults to coreLayout)\n * @returns {Object} layout - return object of template definitions for Blaze Layout\n */\n\n\nfunction ReactionLayout() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Find a workflow layout to render\n  // By default we'll use the primary shop for layouts\n  var shopId = Router.Reaction.getPrimaryShopId(); // We'll check the marketplace settings too so that we can use the active shopId\n  // if merchantTemplates is enabled\n  // XXX: using merchantTemplates is not ready for production and has not been tested! Use at your own risk.\n\n  var marketplaceSettings;\n\n  if (Meteor.isClient) {\n    // If we're on the client, use the cached marketplace settings\n    marketplaceSettings = Router.Reaction.marketplace;\n  } else {\n    // if we're on the server, go get the settings from the db with this method\n    marketplaceSettings = Router.Reaction.getMarketplaceSettings();\n\n    if (marketplaceSettings && marketplaceSettings.public) {\n      // We're only interested in the public settings here\n      marketplaceSettings = marketplaceSettings.public;\n    }\n  } // If merchantTemplates is enabled, use the active shopId\n\n\n  if (marketplaceSettings && marketplaceSettings.merchantTemplates === true) {\n    shopId = Router.Reaction.getShopId();\n  } // Get the shop data\n\n\n  var shop = Shops.findOne(shopId); // get the layout & workflow from options if they exist\n  // Otherwise get them from the Session. this is set in `/client/config/defaults`\n  // Otherwise, default to hard-coded values\n\n  var layoutName = options.layout || Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n  var workflowName = options.workflow || Session.get(\"DEFAULT_WORKFLOW\") || \"coreWorkflow\"; // Layout object used to render\n  // Defaults provided for reference\n\n  var layoutStructure = {\n    template: \"\",\n    layoutHeader: \"\",\n    layoutFooter: \"\",\n    notFound: \"notFound\",\n    dashboardHeader: \"\",\n    dashboardControls: \"\",\n    dashboardHeaderControls: \"\",\n    adminControlsFooter: \"\"\n  };\n  var layoutTheme = \"default\"; // Find a registered layout using the layoutName and workflowName\n\n  if (shop) {\n    var sortedLayout = shop.layout.sort(function (prev, next) {\n      return prev.priority - next.priority;\n    });\n    var foundLayout = sortedLayout.find(function (x) {\n      return selectLayout(x, layoutName, workflowName);\n    });\n\n    if (foundLayout) {\n      if (foundLayout.structure) {\n        layoutStructure = (0, _objectSpread2.default)({}, foundLayout.structure);\n      }\n\n      if (foundLayout.theme) {\n        layoutTheme = foundLayout.theme;\n      }\n    }\n  } // If the original options did not include a workflow, but did have a template,\n  // then we override the template from the layout with the one provided by the options.\n  //\n  // Why is this? We always need a workflow to render the entire layout of the app.\n  // The default layout has a default template that may not be the one we want to render.\n  // Some routes, such as `/account/profile` do no have a workflow, but define a template.\n  // Without the logic below, it would end up rendering the homepage instead of the profile\n  // page.\n  // const optionsHasWorkflow = typeof options.workflow === \"string\";\n\n\n  var optionsHasTemplate = typeof options.template === \"string\";\n\n  if (optionsHasTemplate) {\n    layoutStructure.template = options.template;\n  } // If there is no Blaze Template (Template[]) or React Component (getComponent)\n  // Then use the notFound template instead\n\n\n  var hasReactComponent = true;\n\n  try {\n    getComponent(layoutStructure.template);\n  } catch (e) {\n    hasReactComponent = false;\n  }\n\n  if (!Template[layoutStructure.template] && !hasReactComponent) {\n    return React.createElement(Blaze, {\n      template: layoutStructure.notFound\n    });\n  } // Render the layout\n\n\n  return {\n    theme: layoutTheme,\n    structure: layoutStructure,\n    component: function (props) {\n      // eslint-disable-line react/no-multi-comp, react/display-name\n      var _Router$current = Router.current(),\n          route = _Router$current.route;\n\n      var permissions = options.permissions;\n      var structure = (0, _objectSpread2.default)({}, layoutStructure); // If the current route is unauthorized, and is not the \"not-found\" route,\n      // then override the template to use the default unauthorized template\n\n      if (hasRoutePermission((0, _objectSpread2.default)({}, route, {\n        permissions: permissions\n      })) === false && route.name !== \"not-found\" && !Meteor.user()) {\n        if (!Router.Reaction.hasPermission(route.permissions, Meteor.userId())) {\n          structure.template = \"unauthorized\";\n        }\n\n        return false;\n      }\n\n      try {\n        // Try to create a React component if defined\n        return React.createElement(getComponent(layoutName), (0, _objectSpread2.default)({}, props, {\n          structure: structure\n        }));\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(e, \"Failed to create a React layout element\");\n      } // If all else fails, render a not found page\n\n\n      return React.createElement(Blaze, {\n        template: structure.notFound\n      });\n    }\n  };\n}\n\n/**\n * initPackageRoutes\n * registers route and template when registry item has\n * registryItem.route && registryItem.template\n * @param {Object} options - options and context for route creation\n * @returns {undefined} returns undefined\n */\nRouter.initPackageRoutes = function (options) {\n  // make _initialized = false in case router is reinitialized\n  Router._initialized = false;\n  routerReadyDependency.changed();\n  Router.Reaction = options.reactionContext;\n  Router.routes = [];\n  var marketplaceSettings = {\n    shopPrefix: \"/shop\" // default value\n\n  };\n  var marketplace = Packages.findOne({\n    name: \"reaction-marketplace\",\n    shopId: Router.Reaction.getPrimaryShopId()\n  });\n\n  if (marketplace && marketplace.settings && marketplace.settings.public) {\n    marketplaceSettings = marketplace.settings.public;\n  }\n\n  var pkgs = Packages.find().fetch();\n  var routeDefinitions = []; // prefixing isnt necessary if we only have one shop\n  // but we need to bypass the current\n  // subscription to determine this.\n\n  var shopSub = Meteor.subscribe(\"shopsCount\");\n  Tracker.autorun(function (shopSubWaitFor) {\n    if (shopSub.ready()) {\n      shopSubWaitFor.stop(); // using tmeasday:publish-counts\n      // Default layouts\n\n      var indexLayout = ReactionLayout(options.indexRoute);\n      var notFoundLayout = ReactionLayout({\n        template: \"notFound\"\n      }); // Index route\n\n      routeDefinitions.push({\n        route: \"/\",\n        name: \"index\",\n        options: (0, _objectSpread2.default)({\n          name: \"index\"\n        }, options.indexRoute, {\n          theme: indexLayout.theme,\n          component: indexLayout.component,\n          structure: indexLayout.structure\n        })\n      });\n      routeDefinitions.push({\n        route: marketplaceSettings.shopPrefix + \"/:shopSlug\",\n        name: \"index\",\n        options: (0, _objectSpread2.default)({\n          name: \"index\",\n          type: \"shop-prefix\"\n        }, options.indexRoute, {\n          theme: indexLayout.theme,\n          component: indexLayout.component,\n          structure: indexLayout.structure\n        })\n      }); // Not-found route\n\n      routeDefinitions.push({\n        route: \"/not-found\",\n        name: \"not-found\",\n        options: (0, _objectSpread2.default)({\n          name: \"not-found\"\n        }, notFoundLayout.indexRoute, {\n          theme: notFoundLayout.theme,\n          component: notFoundLayout.component,\n          structure: notFoundLayout.structure\n        })\n      }); // get package registry route configurations\n\n      for (var _iterator = pkgs, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i2 >= _iterator.length) break;\n          _ref = _iterator[_i2++];\n        } else {\n          _i2 = _iterator.next();\n          if (_i2.done) break;\n          _ref = _i2.value;\n        }\n\n        var _pkg = _ref;\n        var newRoutes = []; // pkg registry\n\n        if (_pkg.registry && _pkg.enabled) {\n          var registry = Array.from(_pkg.registry);\n\n          for (var _i3 = 0; _i3 < registry.length; _i3++) {\n            var registryItem = registry[_i3];\n\n            // registryItems\n            if (registryItem.route) {\n              var meta = registryItem.meta,\n                  _route = registryItem.route,\n                  permissions = registryItem.permissions,\n                  template = registryItem.template,\n                  layout = registryItem.layout,\n                  workflow = registryItem.workflow;\n              var name = getRegistryRouteName(_pkg.name, registryItem); // define new route\n              // we could allow the options to be passed in the registry if we need to be more flexible\n\n              var reactionLayout = ReactionLayout({\n                template: template,\n                workflow: workflow,\n                layout: layout,\n                permissions: permissions\n              });\n              var newRouteConfig = {\n                route: _route,\n                name: name,\n                options: {\n                  meta: meta,\n                  name: name,\n                  template: template,\n                  layout: layout,\n                  triggersEnter: Router.Hooks.get(\"onEnter\", name),\n                  triggersExit: Router.Hooks.get(\"onExit\", name),\n                  component: reactionLayout.component,\n                  theme: reactionLayout.theme,\n                  structure: reactionLayout.structure\n                }\n              };\n              newRoutes.push((0, _objectSpread2.default)({}, newRouteConfig, {\n                route: \"/shop/:shopSlug\" + _route,\n                options: (0, _objectSpread2.default)({}, newRouteConfig.options, {\n                  type: \"shop-prefix\"\n                })\n              })); // push new routes\n\n              newRoutes.push(newRouteConfig);\n            } // end registryItems\n\n          } // end package.registry\n          //\n          // add group and routes to routing table\n          //\n\n\n          for (var _i4 = 0; _i4 < newRoutes.length; _i4++) {\n            var route = newRoutes[_i4];\n            // allow overriding of prefix in route definitions\n            // define an \"absolute\" url by excluding \"/\"\n            route.group = {};\n\n            if (route.route.substring(0, 1) !== \"/\") {\n              route.route = \"/\" + route.route;\n              route.group.prefix = \"\";\n            }\n\n            routeDefinitions.push(route);\n          }\n        }\n      } // end package loop\n      // Uniq-ify routes\n      // Take all route definitions in the order that were received, and reverse it.\n      // Routes defined later, like in the case of custom routes will then have a\n      // higher precedence. Any duplicates after the first instance will be removed.\n      //\n      // TODO: In the future, sort by priority\n      // TODO: Allow duplicated routes with a prefix / suffix / flag\n\n\n      var uniqRoutes = _uniqBy(routeDefinitions.reverse(), \"route\");\n\n      var reactRouterRoutes = uniqRoutes.map(function (route, index) {\n        return React.createElement(Route, {\n          key: route.name + \"-\" + index,\n          path: route.route,\n          exact: true,\n          render: route.options.component\n        });\n      }); // Last route, if no other route is matched, this one will be the not-found view\n      // Note: This is last becuase all other routes must at-least attempt a match\n      // before falling back to this not-found route.\n\n      reactRouterRoutes.push(React.createElement(Route, {\n        key: \"not-found\",\n        render: notFoundLayout.component\n      })); // Finish initialization\n\n      Router._initialized = true;\n      Router.reactComponents = reactRouterRoutes;\n      Router._routes = uniqRoutes; // Trigger a reactive refresh to re-render routes\n\n      routerReadyDependency.changed();\n    }\n  });\n};\n\nmodule.exportDefault(Router);","map":{"version":3,"sources":["imports/plugins/core/router/lib/router.js"],"names":["module","export","history","ReactionLayout","_uniqBy","watch","require","v","React","Route","createBrowserHistory","createMemoryHistory","pathToRegexp","queryParse","Immutable","Meteor","Blaze","Template","Session","Tracker","Packages","Shops","getComponent","Hooks","isClient","currentRoute","Map","routerReadyDependency","Dependency","routerChangeDependency","Router","ready","depend","_initialized","triggerRouterReady","changed","current","toJS","setCurrentRoute","routeData","getRouteName","route","name","getParam","params","undefined","getQueryParam","query","setQueryParams","newParams","queryParams","Object","assign","key","go","watchPathChange","value","routes","activeClassName","pathFor","path","options","foundPath","find","pathObject","hash","shopSlug","includes","toPath","compile","compiledPath","queryString","toString","length","actualPath","routerGo","startsWith","window","push","autorun","routerReadyWaitFor","stop","replace","reload","fullPath","isActiveClassName","routeName","group","prefix","hasRoutePermission","Reaction","hasPermission","permissions","userId","getRegistryRouteName","packageName","registryItem","template","split","selectLayout","layout","setLayout","setWorkflow","currentLayout","get","currentWorkflow","workflow","enabled","shopId","getPrimaryShopId","marketplaceSettings","marketplace","getMarketplaceSettings","public","merchantTemplates","getShopId","shop","findOne","layoutName","workflowName","layoutStructure","layoutHeader","layoutFooter","notFound","dashboardHeader","dashboardControls","dashboardHeaderControls","adminControlsFooter","layoutTheme","sortedLayout","sort","prev","next","priority","foundLayout","x","structure","theme","optionsHasTemplate","hasReactComponent","e","component","props","user","createElement","console","warn","initPackageRoutes","reactionContext","shopPrefix","settings","pkgs","fetch","routeDefinitions","shopSub","subscribe","shopSubWaitFor","indexLayout","indexRoute","notFoundLayout","type","pkg","newRoutes","registry","Array","from","meta","reactionLayout","newRouteConfig","triggersEnter","triggersExit","substring","uniqRoutes","reverse","reactRouterRoutes","map","index","reactComponents","_routes","exportDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router\";\nimport createBrowserHistory from \"history/createBrowserHistory\";\nimport createMemoryHistory from \"history/createMemoryHistory\";\nimport pathToRegexp from \"path-to-regexp\";\nimport queryParse from \"query-parse\";\nimport Immutable from \"immutable\";\nimport { uniqBy } from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport { Template } from \"meteor/templating\";\nimport { Session } from \"meteor/session\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { getComponent } from \"@reactioncommerce/reaction-components/components\";\nimport Hooks from \"./hooks\";\n\n// Using a ternary operator here to avoid a mutable export - open to suggestions for a better way to do this\nexport const history = Meteor.isClient ? createBrowserHistory() : createMemoryHistory();\n\n// Private vars\nlet currentRoute = Immutable.Map();\nconst routerReadyDependency = new Tracker.Dependency();\nconst routerChangeDependency = new Tracker.Dependency();\n\n/** Class representing a static base router */\nclass Router {\n  /**\n   * history\n   * @type {history}\n   */\n  static history = history\n\n  /**\n   * Hooks\n   * @type {Hooks}\n   */\n  static Hooks = Hooks\n\n  /**\n   * Registered route definitions\n   * @type {Array}\n   */\n  static routes = []\n\n  /**\n   * Router initialization state\n   * @type {Boolean}\n   */\n  static _initialized = false;\n\n  /**\n   * Active classname for active routes\n   * @type {String}\n   */\n  static activeClassName = \"active\";\n\n  /**\n   * Routes array\n   * @type {Array}\n   * @param {Array} value An array of objects\n   */\n  static set _routes(value) {\n    Router.routes = value;\n  }\n\n  static get _routes() {\n    return Router.routes;\n  }\n\n  /**\n   * Triggers reactively on router ready state changed\n   * @return {Boolean} Router initalization state\n   */\n  static ready() {\n    routerReadyDependency.depend();\n    return Router._initialized;\n  }\n\n  /**\n   * Re-triggers router ready dependency\n   * @return {undefined}\n   */\n  static triggerRouterReady() {\n    routerReadyDependency.changed();\n  }\n\n  /**\n   * Hooks\n   * @type {Hooks}\n   */\n  static get triggers() {\n    return Hooks;\n  }\n\n  /**\n   * Get the current route date. Not reactive.\n   * @return {Object} Object containing route data\n   */\n  static current() {\n    return currentRoute.toJS();\n  }\n\n  /**\n   * Set current route data. Is reactive.\n   * @param {Object} routeData Object containing route data\n   * @return {undefined}\n   */\n  static setCurrentRoute(routeData) {\n    currentRoute = Immutable.Map(routeData);\n    routerChangeDependency.changed();\n  }\n\n  /**\n   * Get the name of the current route. Is reactive.\n   * @return {String} Name of current route\n   */\n  static getRouteName() {\n    const current = Router.current();\n\n    return (current.route && current.route.name) || \"\";\n  }\n\n  /**\n   * Get param by name. Is reactive.\n   * @param  {String} name Param name\n   * @return {String|undefined} String value or undefined\n   */\n  static getParam(name) {\n    routerChangeDependency.depend();\n    const current = Router.current();\n\n    return (current.params && current.params[name]) || undefined;\n  }\n\n  /**\n   * Get query param by name\n   * @param  {String} name Query param name. Is reactive.\n   * @return {String|undefined} String value or undefined\n   */\n  static getQueryParam(name) {\n    routerChangeDependency.depend();\n    const current = Router.current();\n\n    return (current.query && current.query[name]) || undefined;\n  }\n\n  /**\n   * Merge new query params with current params\n   * @param {Object} newParams Object containing params\n   * @return {undefined}\n   */\n  static setQueryParams(newParams) {\n    const current = Router.current();\n\n    // Merge current and new params\n    const queryParams = Object.assign({}, current.query, newParams);\n\n    // Any param marked as null or undefined will be removed\n    for (const key in queryParams) {\n      if (queryParams[key] === null || queryParams[key] === undefined) {\n        delete queryParams[key];\n      }\n    }\n\n    // Update route\n    Router.go(current.route.name, current.params, queryParams);\n  }\n\n  /**\n   * Watch path change. Is Reactive.\n   * @return {undefined}\n   */\n  static watchPathChange() {\n    routerChangeDependency.depend();\n  }\n}\n\n/**\n * pathFor\n * @summary get current router path\n * @param {String} path - path to fetch\n * @param {Object} options - url params\n * @return {String} returns current router path\n */\nRouter.pathFor = (path, options = {}) => {\n  const foundPath = Router.routes.find((pathObject) => {\n    if (pathObject.route) {\n      if (options.hash && options.hash.shopSlug) {\n        if (pathObject.options.name === path && pathObject.route.includes(\"shopSlug\")) {\n          return true;\n        }\n      } else if (pathObject.options.name === path && !pathObject.route.includes(\"shopSlug\")) {\n        return true;\n      }\n    }\n\n    // No path found\n    return false;\n  });\n\n  if (foundPath) {\n    // Pull the hash out of options\n    //\n    // This is becuase of Spacebars that we have hash.\n    // Spacebars takes all params passed into a template tag and places\n    // them into the options.hash object. This will also include any `query` params\n    const hash = (options && options.hash) || {};\n\n    // Create an executable function based on the route regex\n    const toPath = pathToRegexp.compile(foundPath.route);\n\n    // Compile the regex path with the params from the hash\n    const compiledPath = toPath(hash);\n\n    // Convert the query object to a string\n    // e.g. { a: \"one\", b: \"two\"} => \"a=one&b=two\"\n    const queryString = queryParse.toString(hash.query);\n\n    // Return the compiled path + query string if we have one\n    if (typeof queryString === \"string\" && queryString.length) {\n      return `${compiledPath}?${queryString}`;\n    }\n\n    // Return only the compiled path\n    return compiledPath;\n  }\n\n  return \"/\";\n};\n\n/**\n * Navigate to path with params and query\n * @param  {String} path Path string\n * @param  {Object} params Route params object\n * @param  {Object} query Query params object\n * @return {undefined} undefined\n */\nRouter.go = (path, params, query) => {\n  let actualPath;\n\n  const routerGo = () => {\n    if (typeof path === \"string\" && path.startsWith(\"/\")) {\n      actualPath = path;\n    } else {\n      actualPath = Router.pathFor(path, {\n        hash: {\n          ...params,\n          query\n        }\n      });\n    }\n\n    if (window) {\n      history.push(actualPath);\n    }\n  };\n\n  // if Router is in a non ready/initialized state yet, wait until it is\n  if (!Router.ready()) {\n    Tracker.autorun((routerReadyWaitFor) => {\n      if (Router.ready()) {\n        routerReadyWaitFor.stop();\n        routerGo();\n      }\n    });\n\n    return;\n  }\n\n  routerGo();\n};\n\n/**\n * Replace location\n * @param  {String} path Path string\n * @param  {Object} params Route params object\n * @param  {Object} query Query params object\n * @return {undefined} undefined\n */\nRouter.replace = (path, params, query) => {\n  const actualPath = Router.pathFor(path, {\n    hash: {\n      ...params,\n      query\n    }\n  });\n\n  if (window) {\n    history.replace(actualPath);\n  }\n};\n\n/**\n * Reload router\n * @return {undefined} undefined\n */\nRouter.reload = () => {\n  const current = Router.current();\n\n  if (window) {\n    history.replace(current.route.fullPath || \"/\");\n  }\n};\n\n/**\n * isActive\n * @summary general helper to return \"active\" when on current path\n * @example {{active \"name\"}}\n * @param {String} routeName - route name as defined in registry\n * @return {String} return \"active\" or null\n */\nRouter.isActiveClassName = (routeName) => {\n  const current = Router.current();\n  const { group } = current.route;\n  let prefix = \"\";\n\n  if (current.route) {\n    const { path } = current.route;\n\n    if (group && group.prefix) {\n      ({ prefix } = current.route.group);\n    }\n\n    // Match route\n    if (prefix.length && routeName.startsWith(prefix) && path === routeName) {\n      // Route name is a path and starts with the prefix. (default '/reaction')\n      return Router.activeClassName;\n    } else if (routeName.startsWith(\"/\") && path === routeName) {\n      // Route name isa  path and starts with slash, but was not prefixed\n      return Router.activeClassName;\n    } else if (current.route.name === routeName) {\n      // Route name is the actual name of the route\n      return Router.activeClassName;\n    }\n  }\n\n  return \"\";\n};\n\n/**\n * hasRoutePermission\n * check if user has route permissions\n * @access private\n * @param  {Object} route - route context\n * @return {Boolean} returns `true` if user is allowed to see route, `false` otherwise\n */\nfunction hasRoutePermission(route) {\n  const routeName = route.name;\n\n  return routeName === \"index\" ||\n    routeName === \"not-found\" ||\n    Router.Reaction.hasPermission(route.permissions, Meteor.userId());\n}\n\n\n/**\n * getRegistryRouteName\n * assemble route name to be standard\n * prefix/package name + registry name or route\n * @param  {String} packageName  [package name]\n * @param  {Object} registryItem [registry object]\n * @return {String}              [route name]\n */\nfunction getRegistryRouteName(packageName, registryItem) {\n  let routeName;\n  if (packageName && registryItem) {\n    if (registryItem.name) {\n      routeName = registryItem.name;\n    } else if (registryItem.template) {\n      routeName = `${packageName}/${registryItem.template}`;\n    } else {\n      routeName = packageName;\n    }\n    // dont include params in the name\n    [routeName] = routeName.split(\":\");\n    return routeName;\n  }\n  return null;\n}\n\n/**\n * selectLayout\n * @access private\n * @param {Object} layout - element of shops.layout array\n * @param {Object} setLayout - layout\n * @param {Object} setWorkflow - workflow\n * @returns {Object} layout - return object of template definitions for Blaze Layout\n */\nfunction selectLayout(layout, setLayout, setWorkflow) {\n  const currentLayout = setLayout || Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n  const currentWorkflow = setWorkflow || Session.get(\"DEFAULT_WORKFLOW\") || \"coreWorkflow\";\n  if (layout.layout === currentLayout && layout.workflow === currentWorkflow && layout.enabled === true) {\n    return layout;\n  }\n  return null;\n}\n\n/**\n * ReactionLayout\n * sets and returns reaction layout structure\n * @access public\n * @param {Object} options - this router context\n * @param {String} options.layout - string of shop.layout.layout (defaults to coreLayout)\n * @param {String} options.workflow - string of shop.layout.workflow (defaults to coreLayout)\n * @returns {Object} layout - return object of template definitions for Blaze Layout\n */\nexport function ReactionLayout(options = {}) {\n  // Find a workflow layout to render\n\n  // By default we'll use the primary shop for layouts\n  let shopId = Router.Reaction.getPrimaryShopId();\n\n  // We'll check the marketplace settings too so that we can use the active shopId\n  // if merchantTemplates is enabled\n  // XXX: using merchantTemplates is not ready for production and has not been tested! Use at your own risk.\n  let marketplaceSettings;\n\n  if (Meteor.isClient) { // If we're on the client, use the cached marketplace settings\n    marketplaceSettings = Router.Reaction.marketplace;\n  } else { // if we're on the server, go get the settings from the db with this method\n    marketplaceSettings = Router.Reaction.getMarketplaceSettings();\n    if (marketplaceSettings && marketplaceSettings.public) {\n      // We're only interested in the public settings here\n      marketplaceSettings = marketplaceSettings.public;\n    }\n  }\n\n  // If merchantTemplates is enabled, use the active shopId\n  if (marketplaceSettings && marketplaceSettings.merchantTemplates === true) {\n    shopId = Router.Reaction.getShopId();\n  }\n\n  // Get the shop data\n  const shop = Shops.findOne(shopId);\n\n  // get the layout & workflow from options if they exist\n  // Otherwise get them from the Session. this is set in `/client/config/defaults`\n  // Otherwise, default to hard-coded values\n  const layoutName = options.layout || Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n  const workflowName = options.workflow || Session.get(\"DEFAULT_WORKFLOW\") || \"coreWorkflow\";\n\n  // Layout object used to render\n  // Defaults provided for reference\n  let layoutStructure = {\n    template: \"\",\n    layoutHeader: \"\",\n    layoutFooter: \"\",\n    notFound: \"notFound\",\n    dashboardHeader: \"\",\n    dashboardControls: \"\",\n    dashboardHeaderControls: \"\",\n    adminControlsFooter: \"\"\n  };\n\n  let layoutTheme = \"default\";\n\n  // Find a registered layout using the layoutName and workflowName\n  if (shop) {\n    const sortedLayout = shop.layout.sort((prev, next) => prev.priority - next.priority);\n    const foundLayout = sortedLayout.find((x) => selectLayout(x, layoutName, workflowName));\n\n    if (foundLayout) {\n      if (foundLayout.structure) {\n        layoutStructure = {\n          ...foundLayout.structure\n        };\n      }\n      if (foundLayout.theme) {\n        layoutTheme = foundLayout.theme;\n      }\n    }\n  }\n\n  // If the original options did not include a workflow, but did have a template,\n  // then we override the template from the layout with the one provided by the options.\n  //\n  // Why is this? We always need a workflow to render the entire layout of the app.\n  // The default layout has a default template that may not be the one we want to render.\n  // Some routes, such as `/account/profile` do no have a workflow, but define a template.\n  // Without the logic below, it would end up rendering the homepage instead of the profile\n  // page.\n  // const optionsHasWorkflow = typeof options.workflow === \"string\";\n  const optionsHasTemplate = typeof options.template === \"string\";\n\n  if (optionsHasTemplate) {\n    layoutStructure.template = options.template;\n  }\n\n  // If there is no Blaze Template (Template[]) or React Component (getComponent)\n  // Then use the notFound template instead\n  let hasReactComponent = true;\n\n  try {\n    getComponent(layoutStructure.template);\n  } catch (e) {\n    hasReactComponent = false;\n  }\n\n  if (!Template[layoutStructure.template] && !hasReactComponent) {\n    return (\n      <Blaze template={layoutStructure.notFound} />\n    );\n  }\n\n  // Render the layout\n  return {\n    theme: layoutTheme,\n    structure: layoutStructure,\n    component: (props) => { // eslint-disable-line react/no-multi-comp, react/display-name\n      const { route } = Router.current();\n      const { permissions } = options;\n      const structure = {\n        ...layoutStructure\n      };\n\n      // If the current route is unauthorized, and is not the \"not-found\" route,\n      // then override the template to use the default unauthorized template\n      if (hasRoutePermission({ ...route, permissions }) === false && route.name !== \"not-found\" && !Meteor.user()) {\n        if (!Router.Reaction.hasPermission(route.permissions, Meteor.userId())) {\n          structure.template = \"unauthorized\";\n        }\n        return false;\n      }\n      try {\n        // Try to create a React component if defined\n        return React.createElement(getComponent(layoutName), {\n          ...props,\n          structure\n        });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(e, \"Failed to create a React layout element\");\n      }\n      // If all else fails, render a not found page\n      return <Blaze template={structure.notFound} />;\n    }\n  };\n}\n\n/**\n * initPackageRoutes\n * registers route and template when registry item has\n * registryItem.route && registryItem.template\n * @param {Object} options - options and context for route creation\n * @returns {undefined} returns undefined\n */\nRouter.initPackageRoutes = (options) => {\n  // make _initialized = false in case router is reinitialized\n  Router._initialized = false;\n  routerReadyDependency.changed();\n\n  Router.Reaction = options.reactionContext;\n  Router.routes = [];\n\n  let marketplaceSettings = {\n    shopPrefix: \"/shop\" // default value\n  };\n\n  const marketplace = Packages.findOne({\n    name: \"reaction-marketplace\",\n    shopId: Router.Reaction.getPrimaryShopId()\n  });\n\n  if (marketplace && marketplace.settings && marketplace.settings.public) {\n    marketplaceSettings = marketplace.settings.public;\n  }\n\n  const pkgs = Packages.find().fetch();\n\n  const routeDefinitions = [];\n\n  // prefixing isnt necessary if we only have one shop\n  // but we need to bypass the current\n  // subscription to determine this.\n  const shopSub = Meteor.subscribe(\"shopsCount\");\n\n  Tracker.autorun((shopSubWaitFor) => {\n    if (shopSub.ready()) {\n      shopSubWaitFor.stop();\n      // using tmeasday:publish-counts\n\n      // Default layouts\n      const indexLayout = ReactionLayout(options.indexRoute);\n      const notFoundLayout = ReactionLayout({ template: \"notFound\" });\n\n      // Index route\n      routeDefinitions.push({\n        route: \"/\",\n        name: \"index\",\n        options: {\n          name: \"index\",\n          ...options.indexRoute,\n          theme: indexLayout.theme,\n          component: indexLayout.component,\n          structure: indexLayout.structure\n        }\n      });\n\n      routeDefinitions.push({\n        route: `${marketplaceSettings.shopPrefix}/:shopSlug`,\n        name: \"index\",\n        options: {\n          name: \"index\",\n          type: \"shop-prefix\",\n          ...options.indexRoute,\n          theme: indexLayout.theme,\n          component: indexLayout.component,\n          structure: indexLayout.structure\n        }\n      });\n\n      // Not-found route\n      routeDefinitions.push({\n        route: \"/not-found\",\n        name: \"not-found\",\n        options: {\n          name: \"not-found\",\n          ...notFoundLayout.indexRoute,\n          theme: notFoundLayout.theme,\n          component: notFoundLayout.component,\n          structure: notFoundLayout.structure\n        }\n      });\n\n      // get package registry route configurations\n      for (const pkg of pkgs) {\n        const newRoutes = [];\n        // pkg registry\n        if (pkg.registry && pkg.enabled) {\n          const registry = Array.from(pkg.registry);\n          for (const registryItem of registry) {\n            // registryItems\n            if (registryItem.route) {\n              const {\n                meta,\n                route,\n                permissions,\n                template,\n                layout,\n                workflow\n                // provides\n              } = registryItem;\n\n              const name = getRegistryRouteName(pkg.name, registryItem);\n\n              // define new route\n              // we could allow the options to be passed in the registry if we need to be more flexible\n              const reactionLayout = ReactionLayout({ template, workflow, layout, permissions });\n              const newRouteConfig = {\n                route,\n                name,\n                options: {\n                  meta,\n                  name,\n                  template,\n                  layout,\n                  triggersEnter: Router.Hooks.get(\"onEnter\", name),\n                  triggersExit: Router.Hooks.get(\"onExit\", name),\n                  component: reactionLayout.component,\n                  theme: reactionLayout.theme,\n                  structure: reactionLayout.structure\n                }\n              };\n              newRoutes.push({\n                ...newRouteConfig,\n                route: `/shop/:shopSlug${route}`,\n                options: {\n                  ...newRouteConfig.options,\n                  type: \"shop-prefix\"\n                }\n              });\n              // push new routes\n              newRoutes.push(newRouteConfig);\n            } // end registryItems\n          } // end package.registry\n\n          //\n          // add group and routes to routing table\n          //\n          for (const route of newRoutes) {\n            // allow overriding of prefix in route definitions\n            // define an \"absolute\" url by excluding \"/\"\n            route.group = {};\n\n            if (route.route.substring(0, 1) !== \"/\") {\n              route.route = `/${route.route}`;\n              route.group.prefix = \"\";\n            }\n\n            routeDefinitions.push(route);\n          }\n        }\n      } // end package loop\n\n      // Uniq-ify routes\n      // Take all route definitions in the order that were received, and reverse it.\n      // Routes defined later, like in the case of custom routes will then have a\n      // higher precedence. Any duplicates after the first instance will be removed.\n      //\n      // TODO: In the future, sort by priority\n      // TODO: Allow duplicated routes with a prefix / suffix / flag\n      const uniqRoutes = uniqBy(routeDefinitions.reverse(), \"route\");\n      const reactRouterRoutes = uniqRoutes.map((route, index) => (\n        <Route\n          key={`${route.name}-${index}`}\n          path={route.route}\n          exact={true}\n          render={route.options.component}\n        />\n      ));\n\n      // Last route, if no other route is matched, this one will be the not-found view\n      // Note: This is last becuase all other routes must at-least attempt a match\n      // before falling back to this not-found route.\n      reactRouterRoutes.push((\n        <Route\n          key=\"not-found\"\n          render={notFoundLayout.component}\n        />\n      ));\n\n      // Finish initialization\n      Router._initialized = true;\n      Router.reactComponents = reactRouterRoutes;\n      Router._routes = uniqRoutes;\n\n      // Trigger a reactive refresh to re-render routes\n      routerReadyDependency.changed();\n    }\n  });\n};\n\n\nexport default Router;\n"]},"sourceType":"script","hash":"136dbc90c58f28aaf1c49e42c48e760086134b95"}
