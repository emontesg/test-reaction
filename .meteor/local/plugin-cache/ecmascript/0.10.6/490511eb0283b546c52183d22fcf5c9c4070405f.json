{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/graphql/server/getErrorFormatter.js","filename":"imports/plugins/core/graphql/server/getErrorFormatter.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/graphql/server/getErrorFormatter.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/graphql/server/getErrorFormatter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/graphql/server/getErrorFormatter.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet cuid;\nmodule.watch(require(\"cuid\"), {\n  default(v) {\n    cuid = v;\n  }\n\n}, 0);\nlet Logger;\nmodule.watch(require(\"./logger\"), {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 1);\n\nfunction getErrorFormatter(context = {}) {\n  return err => {\n    const {\n      originalError\n    } = err; // Generate an ID that can be used to correlate client errors with this server error\n\n    err.errorId = cuid();\n    let type = \"unknown\";\n\n    if (originalError) {\n      const eventObj = (0, _objectSpread2.default)({\n        errorId: err.errorId,\n        path: err.path,\n        userId: context.user && context.user._id || null\n      }, originalError.eventData || {});\n      Logger.error(eventObj);\n      if (typeof originalError.error === \"string\") type = originalError.error;\n    } // Add a `type` prop to our `errors` response object for client parsing\n\n\n    err.type = type;\n    return err;\n  };\n}\n\nmodule.exportDefault(getErrorFormatter);","map":{"version":3,"sources":["imports/plugins/core/graphql/server/getErrorFormatter.js"],"names":["cuid","module","watch","require","default","v","Logger","getErrorFormatter","context","err","originalError","errorId","type","eventObj","path","userId","user","_id","eventData","error","exportDefault"],"mappings":";;;;AAAA,IAAIA,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,MAAR,CAAb,EAA6B;AAACC,UAAQC,CAAR,EAAU;AAACL,WAAKK,CAAL;AAAO;;AAAnB,CAA7B,EAAkD,CAAlD;AAAqD,IAAIC,MAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAACG,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAjC,EAAuD,CAAvD;;AAGzE,SAASE,iBAAT,CAA2BC,UAAU,EAArC,EAAyC;AACvC,SAAQC,GAAD,IAAS;AACd,UAAM;AAAEC;AAAF,QAAoBD,GAA1B,CADc,CAGd;;AACAA,QAAIE,OAAJ,GAAcX,MAAd;AAEA,QAAIY,OAAO,SAAX;;AACA,QAAIF,aAAJ,EAAmB;AACjB,YAAMG;AACJF,iBAASF,IAAIE,OADT;AAEJG,cAAML,IAAIK,IAFN;AAGJC,gBAASP,QAAQQ,IAAR,IAAgBR,QAAQQ,IAAR,CAAaC,GAA9B,IAAsC;AAH1C,SAIAP,cAAcQ,SAAd,IAA2B,EAJ3B,CAAN;AAOAZ,aAAOa,KAAP,CAAaN,QAAb;AAEA,UAAI,OAAOH,cAAcS,KAArB,KAA+B,QAAnC,EAA6CP,OAAOF,cAAcS,KAArB;AAC9C,KAlBa,CAoBd;;;AACAV,QAAIG,IAAJ,GAAWA,IAAX;AAEA,WAAOH,GAAP;AACD,GAxBD;AAyBD;;AA7BDR,OAAOmB,aAAP,CA+Beb,iBA/Bf","sourcesContent":["import cuid from \"cuid\";\nimport { Logger } from \"./logger\";\n\nfunction getErrorFormatter(context = {}) {\n  return (err) => {\n    const { originalError } = err;\n\n    // Generate an ID that can be used to correlate client errors with this server error\n    err.errorId = cuid();\n\n    let type = \"unknown\";\n    if (originalError) {\n      const eventObj = {\n        errorId: err.errorId,\n        path: err.path,\n        userId: (context.user && context.user._id) || null,\n        ...(originalError.eventData || {})\n      };\n\n      Logger.error(eventObj);\n\n      if (typeof originalError.error === \"string\") type = originalError.error;\n    }\n\n    // Add a `type` prop to our `errors` response object for client parsing\n    err.type = type;\n\n    return err;\n  };\n}\n\nexport default getErrorFormatter;\n"]},"sourceType":"script","hash":"490511eb0283b546c52183d22fcf5c9c4070405f"}
