{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/sync.js","filename":"imports/plugins/included/connectors-shopify/server/methods/sync/sync.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/sync.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/connectors-shopify/server/methods/sync/sync.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/connectors-shopify/server/methods/sync/sync.js"}},"code":"const module1 = module;\nmodule1.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule1.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule1.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Reaction, Logger;\nmodule1.watch(require(\"/server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 2);\nconst methods = {\n  /**\n   * Given an array of integrations, creates and registers a webhook with the Shopify store for each integration\n   * @method connectors/shopify/sync/setup\n   * @param {array} integrations Array of integrations. Each integration should take the form\n   *                                topic:method - e.g. orders/create:updateInventory\n   *                                The top will be used to subscribe to a webhook and each integration will be stored\n   *                                in the integrations array within the shopify webhooks settings\n   *  @returns {undefined}\n   */\n  \"connectors/shopify/sync/setup\"(integrations, webhooksDomain) {\n    check(integrations, [String]);\n    check(webhooksDomain, String); // Check for permissions\n\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    const integrationsByTopic = integrations.reduce((topics, integration) => {\n      const splitIntegration = integration.split(\":\");\n      const topic = splitIntegration[0];\n\n      if (topics[topic]) {\n        topics[topic].push(integration);\n      } else {\n        topics[topic] = [integration];\n      }\n\n      return topics;\n    }, {});\n    const topics = Object.keys(integrationsByTopic);\n    topics.forEach(topic => {\n      Logger.info(`Setting up shopify webhook ${topic} for ${integrationsByTopic[topic]}`);\n      Meteor.call(\"connectors/shopify/webhooks/create\", {\n        topic,\n        integrations: integrationsByTopic[topic],\n        webhooksDomain\n      });\n    });\n  },\n\n  /**\n   * wrapper method for deleting all the shopify webhooks.\n   * May be used in the future to do some checks before deleting\n   * or to be a way to selectively delete webhooks.\n   * @method connectors/shopify/sync/teardown\n   * @returns {undefined}\n   */\n  \"connectors/shopify/sync/teardown\"() {\n    // Check for permissions\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    Meteor.call(\"connectors/shopify/webhooks/deleteAll\");\n  } // TODO: Add a \"connectors/shopify/sync/update\" method that can remove and add subscriptions based on integrations\n  //       Once more than one sync integration is available for Shopify, we'll need a way to update webhooks,\n  //       as well as selectively remove or add webhooks, or to add integrations to other webhooks\n\n\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/included/connectors-shopify/server/methods/sync/sync.js"],"names":["module1","module","export","methods","Meteor","watch","require","v","check","Reaction","Logger","integrations","webhooksDomain","String","hasPermission","Error","integrationsByTopic","reduce","topics","integration","splitIntegration","split","topic","push","Object","keys","forEach","info","call"],"mappings":"AAAA,MAAMA,UAAQC,MAAd;AAAqBD,QAAQE,MAAR,CAAe;AAACC,WAAQ,MAAIA;AAAb,CAAf;AAAsC,IAAIC,MAAJ;AAAWJ,QAAQK,KAAR,CAAcC,QAAQ,eAAR,CAAd,EAAuC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAvC,EAA6D,CAA7D;AAAgE,IAAIC,KAAJ;AAAUR,QAAQK,KAAR,CAAcC,QAAQ,cAAR,CAAd,EAAsC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAAtC,EAA0D,CAA1D;AAA6D,IAAIE,QAAJ,EAAaC,MAAb;AAAoBV,QAAQK,KAAR,CAAcC,QAAQ,aAAR,CAAd,EAAqC;AAACG,WAASF,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW,GAAxB;;AAAyBG,SAAOH,CAAP,EAAS;AAACG,aAAOH,CAAP;AAAS;;AAA5C,CAArC,EAAmF,CAAnF;AAS1N,MAAMJ,UAAU;AACrB;;;;;;;;;AASA,kCAAgCQ,YAAhC,EAA8CC,cAA9C,EAA8D;AAC5DJ,UAAMG,YAAN,EAAoB,CAACE,MAAD,CAApB;AACAL,UAAMI,cAAN,EAAsBC,MAAtB,EAF4D,CAI5D;;AACA,QAAI,CAACJ,SAASK,aAAT,CAAuB,CAAC,OAAD,EAAU,qBAAV,EAAiC,6BAAjC,CAAvB,CAAL,EAA8F;AAC5F,YAAM,IAAIV,OAAOW,KAAX,CAAiB,eAAjB,EAAkC,eAAlC,CAAN;AACD;;AAED,UAAMC,sBAAsBL,aAAaM,MAAb,CAAoB,CAACC,MAAD,EAASC,WAAT,KAAyB;AACvE,YAAMC,mBAAmBD,YAAYE,KAAZ,CAAkB,GAAlB,CAAzB;AACA,YAAMC,QAAQF,iBAAiB,CAAjB,CAAd;;AAEA,UAAIF,OAAOI,KAAP,CAAJ,EAAmB;AACjBJ,eAAOI,KAAP,EAAcC,IAAd,CAAmBJ,WAAnB;AACD,OAFD,MAEO;AACLD,eAAOI,KAAP,IAAgB,CAACH,WAAD,CAAhB;AACD;;AAED,aAAOD,MAAP;AACD,KAX2B,EAWzB,EAXyB,CAA5B;AAaA,UAAMA,SAASM,OAAOC,IAAP,CAAYT,mBAAZ,CAAf;AACAE,WAAOQ,OAAP,CAAgBJ,KAAD,IAAW;AACxBZ,aAAOiB,IAAP,CAAa,8BAA6BL,KAAM,QAAON,oBAAoBM,KAApB,CAA2B,EAAlF;AACAlB,aAAOwB,IAAP,CAAY,oCAAZ,EAAkD;AAChDN,aADgD;AAEhDX,sBAAcK,oBAAoBM,KAApB,CAFkC;AAGhDV;AAHgD,OAAlD;AAKD,KAPD;AAQD,GAzCoB;;AA0CrB;;;;;;;AAOA,uCAAqC;AACnC;AACA,QAAI,CAACH,SAASK,aAAT,CAAuB,CAAC,OAAD,EAAU,qBAAV,EAAiC,6BAAjC,CAAvB,CAAL,EAA8F;AAC5F,YAAM,IAAIV,OAAOW,KAAX,CAAiB,eAAjB,EAAkC,eAAlC,CAAN;AACD;;AAEDX,WAAOwB,IAAP,CAAY,uCAAZ;AACD,GAxDoB,CAyDrB;AACA;AACA;;;AA3DqB,CAAhB;AA8DPxB,OAAOD,OAAP,CAAeA,OAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Reaction, Logger } from \"/server/api\";\n\n/**\n * @file **Shopify Connector** - Methods for setting up and removing synchronization between a Shopify store and a Reaction shop\n * @module connectors-shopify\n */\n\nexport const methods = {\n  /**\n   * Given an array of integrations, creates and registers a webhook with the Shopify store for each integration\n   * @method connectors/shopify/sync/setup\n   * @param {array} integrations Array of integrations. Each integration should take the form\n   *                                topic:method - e.g. orders/create:updateInventory\n   *                                The top will be used to subscribe to a webhook and each integration will be stored\n   *                                in the integrations array within the shopify webhooks settings\n   *  @returns {undefined}\n   */\n  \"connectors/shopify/sync/setup\"(integrations, webhooksDomain) {\n    check(integrations, [String]);\n    check(webhooksDomain, String);\n\n    // Check for permissions\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    const integrationsByTopic = integrations.reduce((topics, integration) => {\n      const splitIntegration = integration.split(\":\");\n      const topic = splitIntegration[0];\n\n      if (topics[topic]) {\n        topics[topic].push(integration);\n      } else {\n        topics[topic] = [integration];\n      }\n\n      return topics;\n    }, {});\n\n    const topics = Object.keys(integrationsByTopic);\n    topics.forEach((topic) => {\n      Logger.info(`Setting up shopify webhook ${topic} for ${integrationsByTopic[topic]}`);\n      Meteor.call(\"connectors/shopify/webhooks/create\", {\n        topic,\n        integrations: integrationsByTopic[topic],\n        webhooksDomain\n      });\n    });\n  },\n  /**\n   * wrapper method for deleting all the shopify webhooks.\n   * May be used in the future to do some checks before deleting\n   * or to be a way to selectively delete webhooks.\n   * @method connectors/shopify/sync/teardown\n   * @returns {undefined}\n   */\n  \"connectors/shopify/sync/teardown\"() {\n    // Check for permissions\n    if (!Reaction.hasPermission([\"owner\", \"settings/connectors\", \"settings/connectors/shopify\"])) {\n      throw new Meteor.Error(\"access-denied\", \"Access denied\");\n    }\n\n    Meteor.call(\"connectors/shopify/webhooks/deleteAll\");\n  }\n  // TODO: Add a \"connectors/shopify/sync/update\" method that can remove and add subscriptions based on integrations\n  //       Once more than one sync integration is available for Shopify, we'll need a way to update webhooks,\n  //       as well as selectively remove or add webhooks, or to add integrations to other webhooks\n};\n\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"9fff92c6f8d80ceba30e70f7dc1b7fe5191d4e48"}
