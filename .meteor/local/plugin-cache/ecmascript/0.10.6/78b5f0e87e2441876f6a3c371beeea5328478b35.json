{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/graphql/server/resolvers/account/Mutation/addAccountToGroup.js","filename":"imports/plugins/core/graphql/server/resolvers/account/Mutation/addAccountToGroup.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/graphql/server/resolvers/account/Mutation/addAccountToGroup.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/graphql/server/resolvers/account/Mutation/addAccountToGroup.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/graphql/server/resolvers/account/Mutation/addAccountToGroup.js"}},"code":"module.export({\n  default: () => addAccountToGroup\n});\nlet decodeAccountOpaqueId;\nmodule.watch(require(\"../../xforms/account\"), {\n  decodeAccountOpaqueId(v) {\n    decodeAccountOpaqueId = v;\n  }\n\n}, 0);\nlet decodeGroupOpaqueId;\nmodule.watch(require(\"../../xforms/group\"), {\n  decodeGroupOpaqueId(v) {\n    decodeGroupOpaqueId = v;\n  }\n\n}, 1);\n\nfunction addAccountToGroup(_, {\n  input\n}, context) {\n  const {\n    accountId,\n    groupId,\n    clientMutationId = null\n  } = input;\n  const dbAccountId = decodeAccountOpaqueId(accountId);\n  const dbGroupId = decodeGroupOpaqueId(groupId);\n  const group = context.methods[\"group/addUser\"](context, [dbAccountId, dbGroupId]);\n  return {\n    group,\n    clientMutationId\n  };\n}","map":{"version":3,"sources":["imports/plugins/core/graphql/server/resolvers/account/Mutation/addAccountToGroup.js"],"names":["module","export","default","addAccountToGroup","decodeAccountOpaqueId","watch","require","v","decodeGroupOpaqueId","_","input","context","accountId","groupId","clientMutationId","dbAccountId","dbGroupId","group","methods"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIC;AAAb,CAAd;AAA+C,IAAIC,qBAAJ;AAA0BJ,OAAOK,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACF,wBAAsBG,CAAtB,EAAwB;AAACH,4BAAsBG,CAAtB;AAAwB;;AAAlD,CAA7C,EAAiG,CAAjG;AAAoG,IAAIC,mBAAJ;AAAwBR,OAAOK,KAAP,CAAaC,QAAQ,oBAAR,CAAb,EAA2C;AAACE,sBAAoBD,CAApB,EAAsB;AAACC,0BAAoBD,CAApB;AAAsB;;AAA9C,CAA3C,EAA2F,CAA3F;;AAetL,SAASJ,iBAAT,CAA2BM,CAA3B,EAA8B;AAAEC;AAAF,CAA9B,EAAyCC,OAAzC,EAAkD;AAC/D,QAAM;AAAEC,aAAF;AAAaC,WAAb;AAAsBC,uBAAmB;AAAzC,MAAkDJ,KAAxD;AACA,QAAMK,cAAcX,sBAAsBQ,SAAtB,CAApB;AACA,QAAMI,YAAYR,oBAAoBK,OAApB,CAAlB;AACA,QAAMI,QAAQN,QAAQO,OAAR,CAAgB,eAAhB,EAAiCP,OAAjC,EAA0C,CAACI,WAAD,EAAcC,SAAd,CAA1C,CAAd;AACA,SAAO;AACLC,SADK;AAELH;AAFK,GAAP;AAID","sourcesContent":["import { decodeAccountOpaqueId } from \"@reactioncommerce/reaction-graphql-xforms/account\";\nimport { decodeGroupOpaqueId } from \"@reactioncommerce/reaction-graphql-xforms/group\";\n\n/**\n * @name addAccountToGroup\n * @method\n * @summary resolver for the addAccountToGroup GraphQL mutation\n * @param {Object} _ - unused\n * @param {Object} args.input - an object of all mutation arguments that were sent by the client\n * @param {String} args.input.accoundId - The account ID\n * @param {String} args.input.groupId - The group ID\n * @param {String} [args.input.clientMutationId] - An optional string identifying the mutation call\n * @param {Object} context - an object containing the per-request state\n * @return {Object} AddAccountToGroupPayload\n */\nexport default function addAccountToGroup(_, { input }, context) {\n  const { accountId, groupId, clientMutationId = null } = input;\n  const dbAccountId = decodeAccountOpaqueId(accountId);\n  const dbGroupId = decodeGroupOpaqueId(groupId);\n  const group = context.methods[\"group/addUser\"](context, [dbAccountId, dbGroupId]);\n  return {\n    group,\n    clientMutationId\n  };\n}\n"]},"sourceType":"script","hash":"78b5f0e87e2441876f6a3c371beeea5328478b35"}
