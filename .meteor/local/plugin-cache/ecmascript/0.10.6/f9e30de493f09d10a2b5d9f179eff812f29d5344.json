{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/collections/orders.js","filename":"server/publications/collections/orders.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/collections/orders.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/collections/orders.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/collections/orders.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet ReactiveAggregate;\nmodule.watch(require(\"./reactiveAggregate\"), {\n  ReactiveAggregate(v) {\n    ReactiveAggregate = v;\n  }\n\n}, 3);\nlet MediaRecords, Orders;\nmodule.watch(require(\"../../../lib/collections\"), {\n  MediaRecords(v) {\n    MediaRecords = v;\n  },\n\n  Orders(v) {\n    Orders = v;\n  }\n\n}, 4);\nlet Counts;\nmodule.watch(require(\"meteor/tmeasday:publish-counts\"), {\n  Counts(v) {\n    Counts = v;\n  }\n\n}, 5);\nlet Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 6);\n\n/**\n * A shared way of creating a projection\n * @param {String} shopId - shopId to filter records by\n * @param {Object} sort - An object containing a sort\n * @param {Number} limit - An optional limit of how many records to return\n * @param {Object} query - An optional query to match\n * @returns {Array} An array of projection operators\n * @private\n */\nfunction createAggregate(shopId, sort = {\n  createdAt: -1\n}, limit = 0, query = {}, skip = 0) {\n  // NOTE: in Mongo 3.4 using the $in operator will be supported for projection filters\n  const aggregate = [{\n    $match: (0, _objectSpread2.default)({\n      \"items.shopId\": shopId\n    }, query)\n  }, {\n    $project: {\n      items: {\n        $filter: {\n          input: \"$items\",\n          as: \"item\",\n          cond: {\n            $eq: [\"$$item.shopId\", shopId]\n          }\n        }\n      },\n      billing: {\n        $filter: {\n          input: \"$billing\",\n          as: \"billing\",\n          cond: {\n            $eq: [\"$$billing.shopId\", shopId]\n          }\n        }\n      },\n      shipping: {\n        $filter: {\n          input: \"$shipping\",\n          as: \"shipping\",\n          cond: {\n            $eq: [\"$$shipping.shopId\", shopId]\n          }\n        }\n      },\n      cartId: 1,\n      sessionId: 1,\n      shopId: 1,\n      // workflow is still stored at the top level and used to showing status\n      workflow: 1,\n      discount: 1,\n      tax: 1,\n      email: 1,\n      createdAt: 1,\n      userId: 1,\n      taxCalculationFailed: 1,\n      bypassAddressValidation: 1\n    }\n  }, {\n    $sort: sort\n  }, {\n    $skip: skip\n  }];\n\n  if (limit > 0) {\n    aggregate.push({\n      $limit: limit\n    });\n  }\n\n  return aggregate;\n}\n\nMeteor.publish(\"Orders\", function () {\n  if (this.userId === null) {\n    return this.ready();\n  }\n\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  } // return any order for which the shopId is attached to an item\n\n\n  const aggregateOptions = {\n    observeSelector: {\n      \"items.shopId\": shopId\n    }\n  };\n  const aggregate = createAggregate(shopId);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\", \"orders\"], shopId)) {\n    ReactiveAggregate(this, Orders, aggregate, aggregateOptions);\n  } else {\n    return Orders.find({\n      shopId,\n      userId: this.userId\n    });\n  }\n});\nMeteor.publish(\"PaginatedOrders\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  if (this.userId === null) {\n    return this.ready();\n  }\n\n  const shopId = Reaction.getUserShopId(this.userId) || Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  } // return any order for which the shopId is attached to an item\n\n\n  const aggregateOptions = {\n    observeSelector: {\n      \"items.shopId\": shopId\n    }\n  };\n  const limit = options && options.limit ? options.limit : 0;\n  const skip = options && options.skip ? options.skip : 0;\n  const aggregate = createAggregate(shopId, {\n    createdAt: -1\n  }, limit, query, skip);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\", \"orders\"], shopId)) {\n    Counts.publish(this, \"orders-count\", Orders.find(), {\n      noReady: true\n    });\n    ReactiveAggregate(this, Orders, aggregate, aggregateOptions);\n  } else {\n    return Orders.find({\n      shopId,\n      userId: this.userId\n    });\n  }\n});\n/**\n * account orders\n */\n\nMeteor.publish(\"AccountOrders\", function (userId, currentShopId) {\n  check(userId, String);\n  check(currentShopId, Match.OptionalOrNull(String));\n\n  if (this.userId === \"\") {\n    return this.ready();\n  }\n\n  const shopId = currentShopId || Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  return Orders.find({\n    userId,\n    shopId\n  });\n});\n/**\n * completed cart order\n */\n\nMeteor.publish(\"CompletedCartOrder\", function (userId, cartId) {\n  check(userId, Match.OneOf(String, null));\n  check(cartId, String);\n\n  if (this.userId === null) {\n    return this.ready();\n  }\n\n  if (typeof userId === \"string\" && userId !== this.userId) {\n    return this.ready();\n  }\n\n  return Orders.find({\n    cartId,\n    userId\n  });\n});\nMeteor.publish(\"OrderImages\", orderId => {\n  check(orderId, Match.Optional(String));\n  if (!orderId) return [];\n  const order = Orders.findOne(orderId);\n  const {\n    items: orderItems\n  } = order || {};\n  if (!Array.isArray(orderItems)) return []; // Ensure each of these are unique\n\n  const productIds = [...new Set(orderItems.map(item => item.product._id))];\n  const variantIds = [...new Set(orderItems.map(item => item.variants._id))]; // return image for each the top level product or the variant and let the client code decide which to display\n\n  return MediaRecords.find({\n    \"$or\": [{\n      \"metadata.productId\": {\n        $in: productIds\n      }\n    }, {\n      \"metadata.variantId\": {\n        $in: variantIds\n      }\n    }],\n    \"metadata.workflow\": {\n      $nin: [\"archived\", \"unpublished\"]\n    }\n  });\n});","map":{"version":3,"sources":["server/publications/collections/orders.js"],"names":["Meteor","module","watch","require","v","check","Match","Roles","ReactiveAggregate","MediaRecords","Orders","Counts","Reaction","createAggregate","shopId","sort","createdAt","limit","query","skip","aggregate","$match","$project","items","$filter","input","as","cond","$eq","billing","shipping","cartId","sessionId","workflow","discount","tax","email","userId","taxCalculationFailed","bypassAddressValidation","$sort","$skip","push","$limit","publish","ready","getShopId","aggregateOptions","observeSelector","userIsInRole","find","options","Optional","Object","getUserShopId","noReady","currentShopId","String","OptionalOrNull","OneOf","orderId","order","findOne","orderItems","Array","isArray","productIds","Set","map","item","product","_id","variantIds","variants","$in","$nin"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { ReactiveAggregate } from \"./reactiveAggregate\";\nimport { MediaRecords, Orders } from \"/lib/collections\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * A shared way of creating a projection\n * @param {String} shopId - shopId to filter records by\n * @param {Object} sort - An object containing a sort\n * @param {Number} limit - An optional limit of how many records to return\n * @param {Object} query - An optional query to match\n * @returns {Array} An array of projection operators\n * @private\n */\nfunction createAggregate(shopId, sort = { createdAt: -1 }, limit = 0, query = {}, skip = 0) {\n  // NOTE: in Mongo 3.4 using the $in operator will be supported for projection filters\n  const aggregate = [\n    { $match: { \"items.shopId\": shopId, ...query } },\n    {\n      $project: {\n        items: {\n          $filter: {\n            input: \"$items\",\n            as: \"item\",\n            cond: { $eq: [\"$$item.shopId\", shopId] }\n          }\n        },\n        billing: {\n          $filter: {\n            input: \"$billing\",\n            as: \"billing\",\n            cond: { $eq: [\"$$billing.shopId\", shopId] }\n          }\n        },\n        shipping: {\n          $filter: {\n            input: \"$shipping\",\n            as: \"shipping\",\n            cond: { $eq: [\"$$shipping.shopId\", shopId] }\n          }\n        },\n        cartId: 1,\n        sessionId: 1,\n        shopId: 1, // workflow is still stored at the top level and used to showing status\n        workflow: 1,\n        discount: 1,\n        tax: 1,\n        email: 1,\n        createdAt: 1,\n        userId: 1,\n        taxCalculationFailed: 1,\n        bypassAddressValidation: 1\n      }\n    },\n    { $sort: sort },\n    { $skip: skip }\n  ];\n\n  if (limit > 0) {\n    aggregate.push({ $limit: limit });\n  }\n  return aggregate;\n}\n\nMeteor.publish(\"Orders\", function () {\n  if (this.userId === null) {\n    return this.ready();\n  }\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  // return any order for which the shopId is attached to an item\n  const aggregateOptions = {\n    observeSelector: {\n      \"items.shopId\": shopId\n    }\n  };\n  const aggregate = createAggregate(shopId);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\", \"orders\"], shopId)) {\n    ReactiveAggregate(this, Orders, aggregate, aggregateOptions);\n  } else {\n    return Orders.find({\n      shopId,\n      userId: this.userId\n    });\n  }\n});\n\n\nMeteor.publish(\"PaginatedOrders\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  if (this.userId === null) {\n    return this.ready();\n  }\n  const shopId = Reaction.getUserShopId(this.userId) || Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  // return any order for which the shopId is attached to an item\n  const aggregateOptions = {\n    observeSelector: {\n      \"items.shopId\": shopId\n    }\n  };\n  const limit = (options && options.limit) ? options.limit : 0;\n  const skip = (options && options.skip) ? options.skip : 0;\n  const aggregate = createAggregate(shopId, { createdAt: -1 }, limit, query, skip);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\", \"orders\"], shopId)) {\n    Counts.publish(this, \"orders-count\", Orders.find(), { noReady: true });\n    ReactiveAggregate(this, Orders, aggregate, aggregateOptions);\n  } else {\n    return Orders.find({\n      shopId,\n      userId: this.userId\n    });\n  }\n});\n\n/**\n * account orders\n */\nMeteor.publish(\"AccountOrders\", function (userId, currentShopId) {\n  check(userId, String);\n  check(currentShopId, Match.OptionalOrNull(String));\n\n  if (this.userId === \"\") {\n    return this.ready();\n  }\n  const shopId = currentShopId || Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n  return Orders.find({\n    userId,\n    shopId\n  });\n});\n\n/**\n * completed cart order\n */\nMeteor.publish(\"CompletedCartOrder\", function (userId, cartId) {\n  check(userId, Match.OneOf(String, null));\n  check(cartId, String);\n  if (this.userId === null) {\n    return this.ready();\n  }\n  if (typeof userId === \"string\" && userId !== this.userId) {\n    return this.ready();\n  }\n\n  return Orders.find({\n    cartId,\n    userId\n  });\n});\n\nMeteor.publish(\"OrderImages\", (orderId) => {\n  check(orderId, Match.Optional(String));\n  if (!orderId) return [];\n\n  const order = Orders.findOne(orderId);\n  const { items: orderItems } = order || {};\n  if (!Array.isArray(orderItems)) return [];\n\n  // Ensure each of these are unique\n  const productIds = [...new Set(orderItems.map((item) => item.product._id))];\n  const variantIds = [...new Set(orderItems.map((item) => item.variants._id))];\n\n  // return image for each the top level product or the variant and let the client code decide which to display\n  return MediaRecords.find({\n    \"$or\": [\n      {\n        \"metadata.productId\": {\n          $in: productIds\n        }\n      },\n      {\n        \"metadata.variantId\": {\n          $in: variantIds\n        }\n      }\n    ],\n    \"metadata.workflow\": {\n      $nin: [\"archived\", \"unpublished\"]\n    }\n  });\n});\n"]},"sourceType":"script","hash":"f9e30de493f09d10a2b5d9f179eff812f29d5344"}
