{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/email-templates/server/index.js","filename":"imports/plugins/included/email-templates/server/index.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/email-templates/server/index.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/email-templates/server/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/email-templates/server/index.js"}},"code":"let Reaction;\nmodule.watch(require(\"../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 0);\nlet TemplatePaths;\nmodule.watch(require(\"../lib/paths.js\"), {\n  \"*\"(v) {\n    TemplatePaths = v;\n  }\n\n}, 1);\n\n/*\n * Default email templates\n * Used when no other template is found\n */\nReaction.registerTemplate({\n  title: \"Default\",\n  name: TemplatePaths.coreDefaultTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreDefaultTemplate),\n  subject: \"A message from {{shop.name}}\"\n});\n/*\n * Account related email templates\n */\n\n/*\n * Accounts - Invite Shop member with an Existing User Account\n * When: Admin invites new member to shop\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member - Existing User Account\",\n  name: TemplatePaths.inviteShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopMemberTemplate),\n  subject: \"You have been invited to join the group \\\"{{groupName}}\\\" in the store \\\"{{shop.name}}\\\"\"\n});\n/*\n * Accounts - Invite Shop member and create new user account\n * When: Admin invites new member to shop\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member - New User Account\",\n  name: TemplatePaths.inviteNewShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteNewShopMemberTemplate),\n  subject: \"You have been invited to join the group \\\"{{groupName}}\\\" in the store \\\"{{shop.name}}\\\"\"\n});\n/*\n * Accounts - Invite Shop Owner\n * When: A new shop is created. This is sent to the new shop owner\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Owner\",\n  name: TemplatePaths.inviteShopOwnerTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopOwnerTemplate),\n  subject: \"{{shop.name}} has invited you to manage a store\"\n});\n/*\n * Accounts - Reset Password\n * When: User requests to reset their password\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Reset Password\",\n  name: TemplatePaths.resetPaswordTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.resetPaswordTemplate),\n  subject: \"{{shop.name}}: Here's your password reset link\"\n});\n/*\n * Accounts - Welcome Email\n * When: New user signs up for an account\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Welcome Email\",\n  name: TemplatePaths.welcomeEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.welcomeEmailTemplate),\n  subject: \"You're In. Welcome to {{shop.name}}!\"\n});\n/*\n * Accounts - Verify Email\n * When: A user signs up through launchdock\n * TODO: Used by launchdock, I haven't been able to test efficiently\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Verify Account (via LaunchDock)\",\n  name: TemplatePaths.verifyEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyEmailTemplate),\n  subject: \"{{shopName}}: Please verify your email address\"\n});\n/*\n * Accounts - Verify Updated Email\n * When: A user signs up through launchdock\n * TODO: Used by launchdock, I haven't been able to test efficiently\n */\n\nReaction.registerTemplate({\n  title: \"Accounts - Verify Updated Email Address\",\n  name: TemplatePaths.verifyUpdatedEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyUpdatedEmailTemplate),\n  subject: \"Verify your new email address\"\n});\n/*\n * Order (coreOrder) related email templates\n */\n\n/*\n * Orders - New Order Place\n * When: A user completes the cart checkout flow and a new order is placed\n */\n\nReaction.registerTemplate({\n  title: \"Orders - New Order Placed\",\n  name: TemplatePaths.coreOrderNewTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreOrderNewTemplate),\n  subject: \"Your order is confirmed - {{order._id}}\"\n});\n/*\n * Orders - Order Shipped\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\n\nReaction.registerTemplate({\n  title: \"Orders - Order Shipped\",\n  name: TemplatePaths.orderShipped,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderShipped),\n  subject: \"{{shop.name}}: Your order has shipped - {{order._id}}\"\n});\n/*\n * Orders - Order Refunded\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\n\nReaction.registerTemplate({\n  title: \"Orders - Order Refunded\",\n  name: TemplatePaths.orderRefunded,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderRefunded),\n  subject: \"{{shop.name}}: Confirmation of refund for {{order._id}}\"\n});\n/*\n  * Orders - Order Refunded\n  * When: Admin completes the order flow and item is shipped\n  * When: Admin refunds line items\n  */\n\nReaction.registerTemplate({\n  title: \"Orders - Order Item Refunded\",\n  name: TemplatePaths.orderItemRefund,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderItemRefund),\n  subject: \"{{shop.name}}: Refund confirmation - {{order._id}}\"\n});","map":{"version":3,"sources":["imports/plugins/included/email-templates/server/index.js"],"names":["Reaction","module","watch","require","v","TemplatePaths","registerTemplate","title","name","coreDefaultTemplate","type","template","Email","getTemplateFile","subject","inviteShopMemberTemplate","inviteNewShopMemberTemplate","inviteShopOwnerTemplate","resetPaswordTemplate","welcomeEmailTemplate","verifyEmailTemplate","verifyUpdatedEmailTemplate","coreOrderNewTemplate","orderShipped","orderRefunded","orderItemRefund"],"mappings":"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","sourcesContent":["import { Reaction } from \"/server/api\";\nimport * as TemplatePaths from \"../lib/paths.js\";\n\n/*\n * Default email templates\n * Used when no other template is found\n */\nReaction.registerTemplate({\n  title: \"Default\",\n  name: TemplatePaths.coreDefaultTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreDefaultTemplate),\n  subject: \"A message from {{shop.name}}\"\n});\n\n\n/*\n * Account related email templates\n */\n\n/*\n * Accounts - Invite Shop member with an Existing User Account\n * When: Admin invites new member to shop\n */\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member - Existing User Account\",\n  name: TemplatePaths.inviteShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopMemberTemplate),\n  subject: \"You have been invited to join the group \\\"{{groupName}}\\\" in the store \\\"{{shop.name}}\\\"\"\n});\n\n/*\n * Accounts - Invite Shop member and create new user account\n * When: Admin invites new member to shop\n */\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member - New User Account\",\n  name: TemplatePaths.inviteNewShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteNewShopMemberTemplate),\n  subject: \"You have been invited to join the group \\\"{{groupName}}\\\" in the store \\\"{{shop.name}}\\\"\"\n});\n\n/*\n * Accounts - Invite Shop Owner\n * When: A new shop is created. This is sent to the new shop owner\n */\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Owner\",\n  name: TemplatePaths.inviteShopOwnerTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopOwnerTemplate),\n  subject: \"{{shop.name}} has invited you to manage a store\"\n});\n\n/*\n * Accounts - Reset Password\n * When: User requests to reset their password\n */\nReaction.registerTemplate({\n  title: \"Accounts - Reset Password\",\n  name: TemplatePaths.resetPaswordTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.resetPaswordTemplate),\n  subject: \"{{shop.name}}: Here's your password reset link\"\n});\n\n/*\n * Accounts - Welcome Email\n * When: New user signs up for an account\n */\nReaction.registerTemplate({\n  title: \"Accounts - Welcome Email\",\n  name: TemplatePaths.welcomeEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.welcomeEmailTemplate),\n  subject: \"You're In. Welcome to {{shop.name}}!\"\n});\n\n/*\n * Accounts - Verify Email\n * When: A user signs up through launchdock\n * TODO: Used by launchdock, I haven't been able to test efficiently\n */\nReaction.registerTemplate({\n  title: \"Accounts - Verify Account (via LaunchDock)\",\n  name: TemplatePaths.verifyEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyEmailTemplate),\n  subject: \"{{shopName}}: Please verify your email address\"\n});\n\n/*\n * Accounts - Verify Updated Email\n * When: A user signs up through launchdock\n * TODO: Used by launchdock, I haven't been able to test efficiently\n */\nReaction.registerTemplate({\n  title: \"Accounts - Verify Updated Email Address\",\n  name: TemplatePaths.verifyUpdatedEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyUpdatedEmailTemplate),\n  subject: \"Verify your new email address\"\n});\n\n\n/*\n * Order (coreOrder) related email templates\n */\n\n/*\n * Orders - New Order Place\n * When: A user completes the cart checkout flow and a new order is placed\n */\nReaction.registerTemplate({\n  title: \"Orders - New Order Placed\",\n  name: TemplatePaths.coreOrderNewTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreOrderNewTemplate),\n  subject: \"Your order is confirmed - {{order._id}}\"\n});\n\n/*\n * Orders - Order Shipped\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\nReaction.registerTemplate({\n  title: \"Orders - Order Shipped\",\n  name: TemplatePaths.orderShipped,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderShipped),\n  subject: \"{{shop.name}}: Your order has shipped - {{order._id}}\"\n});\n\n/*\n * Orders - Order Refunded\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\nReaction.registerTemplate({\n  title: \"Orders - Order Refunded\",\n  name: TemplatePaths.orderRefunded,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderRefunded),\n  subject: \"{{shop.name}}: Confirmation of refund for {{order._id}}\"\n});\n\n/*\n  * Orders - Order Refunded\n  * When: Admin completes the order flow and item is shipped\n  * When: Admin refunds line items\n  */\nReaction.registerTemplate({\n  title: \"Orders - Order Item Refunded\",\n  name: TemplatePaths.orderItemRefund,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderItemRefund),\n  subject: \"{{shop.name}}: Refund confirmation - {{order._id}}\"\n});\n"]},"sourceType":"script","hash":"fc4c70eb91061103e462297b4261e1b75dcd4256"}
