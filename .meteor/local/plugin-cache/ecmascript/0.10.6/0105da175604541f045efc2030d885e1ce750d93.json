{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js","filename":"imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js"}},"code":"var Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 1);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 3);\nvar $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 4);\nvar Reaction;\nmodule.watch(require(\"../../../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 5);\nvar Cart, Packages;\nmodule.watch(require(\"../../../../../../../../lib/collections\"), {\n  Cart: function (v) {\n    Cart = v;\n  },\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 6);\nvar Logger;\nmodule.watch(require(\"../../../../../../../../client/modules/logger\"), {\n  \"default\": function (v) {\n    Logger = v;\n  }\n}, 7);\n\n// This template handles receiving the token from Paypal, recording it and moving on the checkout\nfunction isDuplicate(error) {\n  var errorMessage = error.message;\n  var duplicateErrorCode = \"10415\";\n  return errorMessage.indexOf(duplicateErrorCode) > -1;\n}\n\nfunction showError(error) {\n  $(\".spinner-container\").hide();\n  $(\"#paypal-error-message\").text(error);\n  $(\".paypal-done-error\").show();\n}\n\nfunction buildPaymentMethod(result, status, mode) {\n  Meteor.subscribe(\"Packages\", Reaction.getShopId());\n  var packageData = Packages.findOne({\n    name: \"reaction-paypal\",\n    shopId: Reaction.getShopId()\n  });\n  var paymentMethod = {\n    processor: \"PaypalExpress\",\n    paymentPackageId: packageData._id,\n    paymentSettingsKey: packageData.registry[0].settingsKey,\n    method: \"credit\",\n    transactionId: result.TRANSACTIONID,\n    amount: parseFloat(result.AMT, 10),\n    status: status,\n    mode: mode,\n    createdAt: new Date(result.ORDERTIME),\n    updatedAt: new Date(result.ORDERTIME),\n    transactions: [result]\n  };\n  return paymentMethod;\n}\n\nTemplate.paypalDone.onRendered(function () {\n  $(\".paypal-done-error\").hide();\n});\nTemplate.paypalDone.helpers({\n  checkoutUrl: function () {\n    var template = Template.instance();\n    return template.checkoutUrl;\n  }\n});\nTemplate.paypalDone.onCreated(function () {\n  var payerId = Reaction.Router.getQueryParam(\"PayerID\");\n  var token = Reaction.Router.getQueryParam(\"token\");\n  var prefix = Reaction.getShopPrefix();\n  this.checkoutUrl = prefix + \"/cart/checkout\"; // wait for cart to be ready\n\n  Tracker.autorun(function (c) {\n    if (Reaction.Subscriptions.Cart.ready()) {\n      var cart = Cart.findOne();\n\n      if (!cart) {\n        Logger.warn(\"Could not find valid cart\");\n        return;\n      }\n\n      c.stop();\n\n      if (Session.get(\"expressToken\") !== token) {\n        Session.set(\"expressToken\", token);\n        Meteor.call(\"confirmPaymentAuthorization\", cart._id, token, payerId, function (error, result) {\n          if (error) {\n            if (isDuplicate(error)) {\n              Reaction.Router.go(\"cart/completed\", {}, {\n                _id: cart._id\n              });\n            }\n\n            var msg = error !== null ? error.error : undefined;\n            showError(msg);\n          }\n\n          if (result) {\n            var status;\n            var mode = \"authorize\"; // Normalize status depending on results\n\n            if (result.PAYMENTSTATUS === \"Pending\") {\n              status = \"created\";\n            } else if (result.PAYMENTSTATUS === \"Completed\") {\n              // If we set capture at auth this will be completed\n              status = \"completed\";\n              mode = \"capture\";\n            } else {\n              status = result.PAYMENTSTATUS;\n            }\n\n            var paymentMethod = buildPaymentMethod(result, status, mode);\n            Meteor.call(\"cart/submitPayment\", paymentMethod, function (payError, payResult) {\n              if (!payResult && payError) {\n                Logger.warn(payError, \"Error received during submitting Payment via Paypal\");\n                showError(payError);\n                Session.set(\"guestCheckoutFlow\", true);\n              }\n            });\n          }\n        });\n      }\n    }\n  });\n});","map":{"version":3,"sources":["imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js"],"names":["Meteor","module","watch","require","v","Session","Template","Tracker","$","Reaction","Cart","Packages","Logger","isDuplicate","error","errorMessage","message","duplicateErrorCode","indexOf","showError","hide","text","show","buildPaymentMethod","result","status","mode","subscribe","getShopId","packageData","findOne","name","shopId","paymentMethod","processor","paymentPackageId","_id","paymentSettingsKey","registry","settingsKey","method","transactionId","TRANSACTIONID","amount","parseFloat","AMT","createdAt","Date","ORDERTIME","updatedAt","transactions","paypalDone","onRendered","helpers","checkoutUrl","template","instance","onCreated","payerId","Router","getQueryParam","token","prefix","getShopPrefix","autorun","c","Subscriptions","ready","cart","warn","stop","get","set","call","go","msg","undefined","PAYMENTSTATUS","payError","payResult"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,OAAJ;AAAYJ,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACE,SAAD,YAASD,CAAT,EAAW;AAACC,cAAQD,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIE,QAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACG,UAAD,YAAUF,CAAV,EAAY;AAACE,eAASF,CAAT;AAAW;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIG,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACI,SAAD,YAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAII,CAAJ;AAAMP,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACK,GAAD,YAAGJ,CAAH,EAAK;AAACI,QAAEJ,CAAF;AAAI;AAAV,CAAtC,EAAkD,CAAlD;AAAqD,IAAIK,QAAJ;AAAaR,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACM,UAAD,YAAUL,CAAV,EAAY;AAACK,eAASL,CAAT;AAAW;AAAxB,CAA3D,EAAqF,CAArF;AAAwF,IAAIM,IAAJ,EAASC,QAAT;AAAkBV,OAAOC,KAAP,CAAaC,QAAQ,yCAAR,CAAb,EAAgE;AAACO,MAAD,YAAMN,CAAN,EAAQ;AAACM,WAAKN,CAAL;AAAO,GAAhB;AAAiBO,UAAjB,YAA0BP,CAA1B,EAA4B;AAACO,eAASP,CAAT;AAAW;AAAxC,CAAhE,EAA0G,CAA1G;AAA6G,IAAIQ,MAAJ;AAAWX,OAAOC,KAAP,CAAaC,QAAQ,+CAAR,CAAb,EAAsE;AAAA,uBAASC,CAAT,EAAW;AAACQ,aAAOR,CAAP;AAAS;AAArB,CAAtE,EAA6F,CAA7F;;AASpmB;AAEA,SAASS,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAMC,eAAeD,MAAME,OAA3B;AACA,MAAMC,qBAAqB,OAA3B;AACA,SAAOF,aAAaG,OAAb,CAAqBD,kBAArB,IAA2C,CAAC,CAAnD;AACD;;AAED,SAASE,SAAT,CAAmBL,KAAnB,EAA0B;AACxBN,IAAE,oBAAF,EAAwBY,IAAxB;AACAZ,IAAE,uBAAF,EAA2Ba,IAA3B,CAAgCP,KAAhC;AACAN,IAAE,oBAAF,EAAwBc,IAAxB;AACD;;AAED,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkD;AAChD1B,SAAO2B,SAAP,CAAiB,UAAjB,EAA6BlB,SAASmB,SAAT,EAA7B;AACA,MAAMC,cAAclB,SAASmB,OAAT,CAAiB;AACnCC,UAAM,iBAD6B;AAEnCC,YAAQvB,SAASmB,SAAT;AAF2B,GAAjB,CAApB;AAKA,MAAMK,gBAAgB;AACpBC,eAAW,eADS;AAEpBC,sBAAkBN,YAAYO,GAFV;AAGpBC,wBAAoBR,YAAYS,QAAZ,CAAqB,CAArB,EAAwBC,WAHxB;AAIpBC,YAAQ,QAJY;AAKpBC,mBAAejB,OAAOkB,aALF;AAMpBC,YAAQC,WAAWpB,OAAOqB,GAAlB,EAAuB,EAAvB,CANY;AAOpBpB,kBAPoB;AAQpBC,cARoB;AASpBoB,eAAW,IAAIC,IAAJ,CAASvB,OAAOwB,SAAhB,CATS;AAUpBC,eAAW,IAAIF,IAAJ,CAASvB,OAAOwB,SAAhB,CAVS;AAWpBE,kBAAc,CAAC1B,MAAD;AAXM,GAAtB;AAaA,SAAOS,aAAP;AACD;;AAED3B,SAAS6C,UAAT,CAAoBC,UAApB,CAA+B,YAAM;AACnC5C,IAAE,oBAAF,EAAwBY,IAAxB;AACD,CAFD;AAIAd,SAAS6C,UAAT,CAAoBE,OAApB,CAA4B;AAC1BC,aAD0B,cACZ;AACZ,QAAMC,WAAWjD,SAASkD,QAAT,EAAjB;AACA,WAAOD,SAASD,WAAhB;AACD;AAJyB,CAA5B;AAOAhD,SAAS6C,UAAT,CAAoBM,SAApB,CAA8B,YAAY;AACxC,MAAMC,UAAUjD,SAASkD,MAAT,CAAgBC,aAAhB,CAA8B,SAA9B,CAAhB;AACA,MAAMC,QAAQpD,SAASkD,MAAT,CAAgBC,aAAhB,CAA8B,OAA9B,CAAd;AACA,MAAME,SAASrD,SAASsD,aAAT,EAAf;AACA,OAAKT,WAAL,GAAsBQ,MAAtB,oBAJwC,CAKxC;;AACAvD,UAAQyD,OAAR,CAAgB,UAACC,CAAD,EAAO;AACrB,QAAIxD,SAASyD,aAAT,CAAuBxD,IAAvB,CAA4ByD,KAA5B,EAAJ,EAAyC;AACvC,UAAMC,OAAO1D,KAAKoB,OAAL,EAAb;;AACA,UAAI,CAACsC,IAAL,EAAW;AACTxD,eAAOyD,IAAP,CAAY,2BAAZ;AACA;AACD;;AACDJ,QAAEK,IAAF;;AACA,UAAIjE,QAAQkE,GAAR,CAAY,cAAZ,MAAgCV,KAApC,EAA2C;AACzCxD,gBAAQmE,GAAR,CAAY,cAAZ,EAA4BX,KAA5B;AACA7D,eAAOyE,IAAP,CAAY,6BAAZ,EAA2CL,KAAKhC,GAAhD,EAAqDyB,KAArD,EAA4DH,OAA5D,EAAqE,UAAC5C,KAAD,EAAQU,MAAR,EAAmB;AACtF,cAAIV,KAAJ,EAAW;AACT,gBAAID,YAAYC,KAAZ,CAAJ,EAAwB;AACtBL,uBAASkD,MAAT,CAAgBe,EAAhB,CAAmB,gBAAnB,EAAqC,EAArC,EAAyC;AACvCtC,qBAAKgC,KAAKhC;AAD6B,eAAzC;AAGD;;AACD,gBAAMuC,MAAO7D,UAAU,IAAV,GAAiBA,MAAMA,KAAvB,GAA+B8D,SAA5C;AACAzD,sBAAUwD,GAAV;AACD;;AAED,cAAInD,MAAJ,EAAY;AACV,gBAAIC,MAAJ;AACA,gBAAIC,OAAO,WAAX,CAFU,CAGV;;AACA,gBAAIF,OAAOqD,aAAP,KAAyB,SAA7B,EAAwC;AACtCpD,uBAAS,SAAT;AACD,aAFD,MAEO,IAAID,OAAOqD,aAAP,KAAyB,WAA7B,EAA0C;AAAE;AACjDpD,uBAAS,WAAT;AACAC,qBAAO,SAAP;AACD,aAHM,MAGA;AACLD,uBAASD,OAAOqD,aAAhB;AACD;;AACD,gBAAM5C,gBAAgBV,mBAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,IAAnC,CAAtB;AAEA1B,mBAAOyE,IAAP,CAAY,oBAAZ,EAAkCxC,aAAlC,EAAiD,UAAC6C,QAAD,EAAWC,SAAX,EAAyB;AACxE,kBAAI,CAACA,SAAD,IAAcD,QAAlB,EAA4B;AAC1BlE,uBAAOyD,IAAP,CAAYS,QAAZ,EAAsB,qDAAtB;AACA3D,0BAAU2D,QAAV;AACAzE,wBAAQmE,GAAR,CAAY,mBAAZ,EAAiC,IAAjC;AACD;AACF,aAND;AAOD;AACF,SAjCD;AAkCD;AACF;AACF,GA9CD;AA+CD,CArDD","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Tracker } from \"meteor/tracker\";\nimport { $ } from \"meteor/jquery\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Packages } from \"/lib/collections\";\nimport Logger from \"/client/modules/logger\";\n\n// This template handles receiving the token from Paypal, recording it and moving on the checkout\n\nfunction isDuplicate(error) {\n  const errorMessage = error.message;\n  const duplicateErrorCode = \"10415\";\n  return errorMessage.indexOf(duplicateErrorCode) > -1;\n}\n\nfunction showError(error) {\n  $(\".spinner-container\").hide();\n  $(\"#paypal-error-message\").text(error);\n  $(\".paypal-done-error\").show();\n}\n\nfunction buildPaymentMethod(result, status, mode) {\n  Meteor.subscribe(\"Packages\", Reaction.getShopId());\n  const packageData = Packages.findOne({\n    name: \"reaction-paypal\",\n    shopId: Reaction.getShopId()\n  });\n\n  const paymentMethod = {\n    processor: \"PaypalExpress\",\n    paymentPackageId: packageData._id,\n    paymentSettingsKey: packageData.registry[0].settingsKey,\n    method: \"credit\",\n    transactionId: result.TRANSACTIONID,\n    amount: parseFloat(result.AMT, 10),\n    status,\n    mode,\n    createdAt: new Date(result.ORDERTIME),\n    updatedAt: new Date(result.ORDERTIME),\n    transactions: [result]\n  };\n  return paymentMethod;\n}\n\nTemplate.paypalDone.onRendered(() => {\n  $(\".paypal-done-error\").hide();\n});\n\nTemplate.paypalDone.helpers({\n  checkoutUrl() {\n    const template = Template.instance();\n    return template.checkoutUrl;\n  }\n});\n\nTemplate.paypalDone.onCreated(function () {\n  const payerId = Reaction.Router.getQueryParam(\"PayerID\");\n  const token = Reaction.Router.getQueryParam(\"token\");\n  const prefix = Reaction.getShopPrefix();\n  this.checkoutUrl = `${prefix}/cart/checkout`;\n  // wait for cart to be ready\n  Tracker.autorun((c) => {\n    if (Reaction.Subscriptions.Cart.ready()) {\n      const cart = Cart.findOne();\n      if (!cart) {\n        Logger.warn(\"Could not find valid cart\");\n        return;\n      }\n      c.stop();\n      if (Session.get(\"expressToken\") !== token) {\n        Session.set(\"expressToken\", token);\n        Meteor.call(\"confirmPaymentAuthorization\", cart._id, token, payerId, (error, result) => {\n          if (error) {\n            if (isDuplicate(error)) {\n              Reaction.Router.go(\"cart/completed\", {}, {\n                _id: cart._id\n              });\n            }\n            const msg = (error !== null ? error.error : undefined);\n            showError(msg);\n          }\n\n          if (result) {\n            let status;\n            let mode = \"authorize\";\n            // Normalize status depending on results\n            if (result.PAYMENTSTATUS === \"Pending\") {\n              status = \"created\";\n            } else if (result.PAYMENTSTATUS === \"Completed\") { // If we set capture at auth this will be completed\n              status = \"completed\";\n              mode = \"capture\";\n            } else {\n              status = result.PAYMENTSTATUS;\n            }\n            const paymentMethod = buildPaymentMethod(result, status, mode);\n\n            Meteor.call(\"cart/submitPayment\", paymentMethod, (payError, payResult) => {\n              if (!payResult && payError) {\n                Logger.warn(payError, \"Error received during submitting Payment via Paypal\");\n                showError(payError);\n                Session.set(\"guestCheckoutFlow\", true);\n              }\n            });\n          }\n        });\n      }\n    }\n  });\n});\n"]},"sourceType":"script","hash":"0105da175604541f045efc2030d885e1ce750d93"}
