{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-paypal/lib/api/payflow.js","filename":"imports/plugins/included/payments-paypal/lib/api/payflow.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-paypal/lib/api/payflow.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/payments-paypal/lib/api/payflow.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-paypal/lib/api/payflow.js"}},"code":"module.export({\n  PayFlow: () => PayFlow\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 1);\nlet Reaction;\nmodule.watch(require(\"../../../../../../lib/api\"), {\n  default(v) {\n    Reaction = v;\n  }\n\n}, 2);\nconst PayFlow = {\n  payflowAccountOptions() {\n    const {\n      settings\n    } = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: Reaction.getShopId(),\n      enabled: true\n    });\n    let mode;\n\n    if ((settings !== null ? settings.payflow_mode : undefined) === true) {\n      mode = \"live\";\n    } else {\n      mode = \"sandbox\";\n    }\n\n    const ref = Meteor.settings.paypal;\n    const options = {\n      mode,\n      enabled: getSettings(settings, ref, \"payflow_enabled\"),\n      client_id: getSettings(settings, ref, \"client_id\"),\n      client_secret: getSettings(settings, ref, \"client_secret\")\n    };\n\n    if (!options.client_id) {\n      throw new Meteor.Error(\"invalid-credentials\", \"Invalid PayPal Credentials\");\n    }\n\n    return options;\n  },\n\n  authorize(cardInfo, paymentInfo, callback) {\n    Meteor.call(\"payflowpro/payment/submit\", \"authorize\", cardInfo, paymentInfo, callback);\n  },\n\n  capture(transactionId, amount, callback) {\n    const captureDetails = {\n      amount: {\n        currency: \"USD\",\n        // todo should this be locale.currency\n        total: parseFloat(amount, 10)\n      },\n      is_final_capture: true\n    };\n    Meteor.call(\"payflowpro/payment/capture\", transactionId, captureDetails, callback);\n  },\n\n  config(options) {\n    this.accountOptions = options;\n  },\n\n  paymentObj() {\n    return {\n      intent: \"sale\",\n      payer: {\n        payment_method: \"credit_card\",\n        funding_instruments: []\n      },\n      transactions: []\n    };\n  },\n\n  parseCardData(data) {\n    return {\n      credit_card: {\n        type: data.type,\n        number: data.number,\n        first_name: data.first_name,\n        last_name: data.last_name,\n        cvv2: data.cvv2,\n        expire_month: data.expire_month,\n        expire_year: data.expire_year\n      }\n    };\n  },\n\n  parsePaymentData(data) {\n    return {\n      amount: {\n        total: parseFloat(data.total, 10),\n        currency: data.currency\n      }\n    };\n  }\n\n};\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n\n  return {};\n}","map":{"version":3,"sources":["imports/plugins/included/payments-paypal/lib/api/payflow.js"],"names":["module","export","PayFlow","Meteor","watch","require","v","Packages","Reaction","default","payflowAccountOptions","settings","findOne","name","shopId","getShopId","enabled","mode","payflow_mode","undefined","ref","paypal","options","getSettings","client_id","client_secret","Error","authorize","cardInfo","paymentInfo","callback","call","capture","transactionId","amount","captureDetails","currency","total","parseFloat","is_final_capture","config","accountOptions","paymentObj","intent","payer","payment_method","funding_instruments","transactions","parseCardData","data","credit_card","type","number","first_name","last_name","cvv2","expire_month","expire_year","parsePaymentData","valueName"],"mappings":"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","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Packages } from \"/lib/collections\";\nimport Reaction from \"/lib/api\";\n\n// using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\nexport const PayFlow = {\n  payflowAccountOptions() {\n    const { settings } = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: Reaction.getShopId(),\n      enabled: true\n    });\n    let mode;\n    if ((settings !== null ? settings.payflow_mode : undefined) === true) {\n      mode = \"live\";\n    } else {\n      mode = \"sandbox\";\n    }\n    const ref = Meteor.settings.paypal;\n    const options = {\n      mode,\n      enabled: getSettings(settings, ref, \"payflow_enabled\"),\n      client_id: getSettings(settings, ref, \"client_id\"),\n      client_secret: getSettings(settings, ref, \"client_secret\")\n    };\n    if (!options.client_id) {\n      throw new Meteor.Error(\"invalid-credentials\", \"Invalid PayPal Credentials\");\n    }\n    return options;\n  },\n  authorize(cardInfo, paymentInfo, callback) {\n    Meteor.call(\"payflowpro/payment/submit\", \"authorize\", cardInfo, paymentInfo, callback);\n  },\n  capture(transactionId, amount, callback) {\n    const captureDetails = {\n      amount: {\n        currency: \"USD\", // todo should this be locale.currency\n        total: parseFloat(amount, 10)\n      },\n      is_final_capture: true\n    };\n    Meteor.call(\"payflowpro/payment/capture\", transactionId, captureDetails, callback);\n  },\n  config(options) {\n    this.accountOptions = options;\n  },\n  paymentObj() {\n    return {\n      intent: \"sale\",\n      payer: {\n        payment_method: \"credit_card\",\n        funding_instruments: []\n      },\n      transactions: []\n    };\n  },\n  parseCardData(data) {\n    return {\n      credit_card: {\n        type: data.type,\n        number: data.number,\n        first_name: data.first_name,\n        last_name: data.last_name,\n        cvv2: data.cvv2,\n        expire_month: data.expire_month,\n        expire_year: data.expire_year\n      }\n    };\n  },\n  parsePaymentData(data) {\n    return {\n      amount: {\n        total: parseFloat(data.total, 10),\n        currency: data.currency\n      }\n    };\n  }\n};\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n  return {};\n}\n"]},"sourceType":"script","hash":"a14ffbb5eaf095474c01f61cd1c0552268ad78e6"}
