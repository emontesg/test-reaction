{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/shipping-rates/client/templates/settings/rates.js","filename":"imports/plugins/included/shipping-rates/client/templates/settings/rates.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/shipping-rates/client/templates/settings/rates.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/included/shipping-rates/client/templates/settings/rates.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/shipping-rates/client/templates/settings/rates.js"}},"code":"var $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar ReactiveDict;\nmodule.watch(require(\"meteor/reactive-dict\"), {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 3);\nvar AutoForm;\nmodule.watch(require(\"meteor/aldeed:autoform\"), {\n  AutoForm: function (v) {\n    AutoForm = v;\n  }\n}, 4);\nvar Shipping;\nmodule.watch(require(\"../../../../../../../lib/collections\"), {\n  Shipping: function (v) {\n    Shipping = v;\n  }\n}, 5);\nvar i18next;\nmodule.watch(require(\"../../../../../../../client/api\"), {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 6);\nvar IconButton, Loading, SortableTable;\nmodule.watch(require(\"../../../../../core/ui/client/components\"), {\n  IconButton: function (v) {\n    IconButton = v;\n  },\n  Loading: function (v) {\n    Loading = v;\n  },\n  SortableTable: function (v) {\n    SortableTable = v;\n  }\n}, 7);\nTemplate.shippingRatesSettings.onCreated(function () {\n  var _this = this;\n\n  this.autorun(function () {\n    _this.subscribe(\"Shipping\");\n  });\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\nTemplate.shippingRatesSettings.helpers({\n  editButton: function () {\n    var instance = Template.instance();\n    var state = instance.state;\n    var isEditing = state.equals(\"isEditing\", true);\n    var editingId = state.get(\"editingId\"); // toggle edit state\n\n    if (!isEditing) {\n      editingId = null;\n    } // return icon\n\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick: function () {\n        // remove active rows from grid\n        $(\".shipping-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  shippingGrid: function () {\n    var filteredFields = [\"name\", \"group\", \"label\", \"rate\"];\n    var noDataMessage = i18next.t(\"admin.shippingSettings.noRatesFound\");\n    var instance = Template.instance(); // griddle helper to select row\n\n    function editRow(options) {\n      var currentId = instance.state.get(\"editingId\"); // isEditing is shipping rate object\n\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id); // toggle edit mode clicking on same row\n\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    } // add shipping-grid-row class\n\n\n    var customRowMetaData = {\n      bodyCssClassName: function () {\n        return \"shipping-grid-row\";\n      }\n    }; // add i18n handling to headers\n\n    var customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      var columnMeta = {\n        accessor: field,\n        Header: i18next.t(\"admin.shippingGrid.\" + field)\n      };\n      customColumnMetadata.push(columnMeta);\n    }); // filter and extract shipping methods\n    // from flat rate shipping provider\n\n    function transform(results) {\n      var result = [];\n\n      for (var _iterator = results, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _method = _ref;\n\n        if (_method.provider && _method.provider.name === \"flatRates\") {\n          result.push(_method.methods);\n        }\n      }\n\n      return result[0];\n    } // return shipping Grid\n\n\n    return {\n      component: SortableTable,\n      publication: \"Shipping\",\n      transform: transform,\n      collection: Shipping,\n      matchingResultsCount: \"shipping-count\",\n      showFilter: true,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n  instance: function () {\n    var instance = Template.instance();\n    return instance;\n  },\n  shippingRate: function () {\n    var instance = Template.instance();\n    var id = instance.state.get(\"editingId\");\n    var providerRates = Shipping.findOne({\n      \"provider.name\": \"flatRates\"\n    }) || {};\n    var rate = {};\n\n    if (providerRates && providerRates.methods) {\n      if (id) {\n        for (var _iterator2 = providerRates.methods, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var _method2 = _ref2;\n\n          if (_method2._id === id) {\n            rate = _method2;\n          }\n        }\n      } else {\n        // a little trick to provide _id for insert\n        rate._id = providerRates._id;\n      }\n    }\n\n    return rate;\n  }\n}); //\n// on submit lets clear the form state\n//\n\nTemplate.shippingRatesSettings.events({\n  \"submit #shipping-rates-update-form\": function () {\n    var instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #shipping-rates-insert-form\": function () {\n    var instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .shipping-grid-row .active\": function () {\n    var instance = Template.instance(); // remove active rows from grid\n\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    }); // ugly hack\n\n    $(\".shipping-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    var confirmTitle = i18next.t(\"admin.shippingSettings.confirmRateDelete\");\n    var confirmButtonText = i18next.t(\"app.delete\");\n    var instance = Template.instance();\n    var id = instance.state.get(\"editingId\"); // confirm delete\n\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, function (isConfirm) {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"shipping/rates/delete\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .shipping-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".shipping-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n}); //\n// Hooks for update and insert forms\n//\n\nAutoForm.hooks({\n  \"shipping-rates-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateFailed\") + \" \" + error, \"error\");\n    }\n  },\n  \"shipping-rates-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateFailed\") + \" \" + error, \"error\");\n    }\n  }\n});","map":{"version":3,"sources":["imports/plugins/included/shipping-rates/client/templates/settings/rates.js"],"names":["$","module","watch","require","v","Meteor","Template","ReactiveDict","AutoForm","Shipping","i18next","IconButton","Loading","SortableTable","shippingRatesSettings","onCreated","autorun","subscribe","state","setDefault","isEditing","editingId","helpers","editButton","instance","equals","get","component","icon","onIcon","toggle","toggleOn","style","position","top","right","onClick","removeClass","set","shippingGrid","filteredFields","noDataMessage","t","editRow","options","currentId","props","data","_id","customRowMetaData","bodyCssClassName","customColumnMetadata","forEach","field","columnMeta","accessor","Header","push","transform","results","result","method","provider","name","methods","publication","collection","matchingResultsCount","showFilter","rowMetadata","columns","onRowClick","columnMetadata","externalLoadingComponent","shippingRate","id","providerRates","findOne","rate","events","confirmTitle","confirmButtonText","Alerts","alert","title","type","showCancelButton","isConfirm","call","event","currentTarget","addClass","hooks","onSuccess","toast","onError","operation","error"],"mappings":"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","sourcesContent":["import { $ } from \"meteor/jquery\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Shipping } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\nimport { IconButton, Loading, SortableTable } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.shippingRatesSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.shippingRatesSettings.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const { state } = instance;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".shipping-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId\n        });\n      }\n    };\n  },\n  shippingGrid() {\n    const filteredFields = [\"name\", \"group\", \"label\", \"rate\"];\n    const noDataMessage = i18next.t(\"admin.shippingSettings.noRatesFound\");\n    const instance = Template.instance();\n\n    // griddle helper to select row\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is shipping rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    // add shipping-grid-row class\n    const customRowMetaData = {\n      bodyCssClassName: () => \"shipping-grid-row\"\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach((field) => {\n      const columnMeta = {\n        accessor: field,\n        Header: i18next.t(`admin.shippingGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // filter and extract shipping methods\n    // from flat rate shipping provider\n    function transform(results) {\n      const result = [];\n      for (const method of results) {\n        if (method.provider && method.provider.name === \"flatRates\") {\n          result.push(method.methods);\n        }\n      }\n      return result[0];\n    }\n\n    // return shipping Grid\n    return {\n      component: SortableTable,\n      publication: \"Shipping\",\n      transform,\n      collection: Shipping,\n      matchingResultsCount: \"shipping-count\",\n      showFilter: true,\n      rowMetadata: customRowMetaData,\n      filteredFields,\n      columns: filteredFields,\n      noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n\n  shippingRate() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const providerRates = Shipping.findOne({ \"provider.name\": \"flatRates\" }) || {};\n    let rate = {};\n    if (providerRates && providerRates.methods) {\n      if (id) {\n        for (const method of providerRates.methods) {\n          if (method._id === id) {\n            rate = method;\n          }\n        }\n      } else {\n        // a little trick to provide _id for insert\n        rate._id = providerRates._id;\n      }\n    }\n    return rate;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.shippingRatesSettings.events({\n  \"submit #shipping-rates-update-form\"() {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #shipping-rates-insert-form\"() {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .shipping-grid-row .active\"() {\n    const instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".shipping-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\"() {\n    const confirmTitle = i18next.t(\"admin.shippingSettings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"shipping/rates/delete\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .shipping-grid-row\"(event) {\n    // toggle all rows off, then add our active row\n    $(\".shipping-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"shipping-rates-update-form\": {\n    onSuccess() {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateSaved\"), \"success\");\n    },\n    onError(operation, error) {\n      return Alerts.toast(`${i18next.t(\"admin.shippingSettings.rateFailed\")} ${error}`, \"error\");\n    }\n  },\n  \"shipping-rates-insert-form\": {\n    onSuccess() {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateSaved\"), \"success\");\n    },\n    onError(operation, error) {\n      return Alerts.toast(`${i18next.t(\"admin.shippingSettings.rateFailed\")} ${error}`, \"error\");\n    }\n  }\n});\n"]},"sourceType":"script","hash":"d8fbf257c2d1d66e15499eaf8ccca98c82302d37"}
