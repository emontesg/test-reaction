{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"client/modules/core/helpers/templates.js","filename":"client/modules/core/helpers/templates.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"client/modules/core/helpers/templates.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"client/modules/core/helpers/templates.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/modules/core/helpers/templates.js"}},"code":"var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nmodule.watch(require(\"moment/min/locales.min.js\"));\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar Accounts;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 3);\nvar Spacebars;\nmodule.watch(require(\"meteor/spacebars\"), {\n  Spacebars: function (v) {\n    Spacebars = v;\n  }\n}, 4);\nvar ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 5);\nvar Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function (v) {\n    Roles = v;\n  }\n}, 6);\nvar i18next, Reaction;\nmodule.watch(require(\"../../../api\"), {\n  i18next: function (v) {\n    i18next = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 7);\nvar Collections;\nmodule.watch(require(\"../../../../lib/collections\"), {\n  \"*\": function (v) {\n    Collections = v;\n  }\n}, 8);\nvar Schemas;\nmodule.watch(require(\"../../../../lib/collections/schemas\"), {\n  \"*\": function (v) {\n    Schemas = v;\n  }\n}, 9);\nvar toCamelCase;\nmodule.watch(require(\"../../../../lib/api\"), {\n  toCamelCase: function (v) {\n    toCamelCase = v;\n  }\n}, 10);\n// Lazyload moment-timezone.months\nvar monthOptionsVar = new ReactiveVar([]);\n\nfunction lazyLoadMonths() {\n  var _ref, locale, months, lang, monthOptions, monthsList, index, month, mnum;\n\n  return _regenerator.default.async(function () {\n    function lazyLoadMonths$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!monthOptionsVar.get().length) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return _regenerator.default.awrap(Promise.resolve().then(function () {\n              return require(\"moment-timezone\");\n            }));\n\n          case 4:\n            _ref = _context.sent;\n            locale = _ref.locale;\n            months = _ref.months;\n            lang = i18next.language;\n\n            if (lang === \"zh\") {\n              lang = \"zh-cn\";\n            }\n\n            locale(lang);\n            monthOptions = [];\n            monthsList = months(); // parse into autoform array\n\n            for (index in meteorBabelHelpers.sanitizeForInObject(monthsList)) {\n              if ({}.hasOwnProperty.call(monthsList, index)) {\n                month = monthsList[index];\n                mnum = parseInt(index, 10) + 1;\n                monthOptions.push({\n                  value: mnum,\n                  label: mnum + \" | \" + month\n                });\n              }\n            }\n\n            monthOptionsVar.set(monthOptions);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }\n\n    return lazyLoadMonths$;\n  }(), null, this);\n}\n\nTemplate.registerHelper(\"Collections\", function () {\n  return Collections;\n});\nTemplate.registerHelper(\"Schemas\", function () {\n  return Schemas;\n});\n/**\n * currentUser\n * @summary overrides Meteor Package.blaze currentUser method\n * @return {Boolean} returns true/null if user has registered\n */\n\nTemplate.registerHelper(\"currentUser\", function () {\n  if ((0, _typeof2.default)(Reaction) === \"object\") {\n    var shopId = Reaction.getShopId();\n    var user = Accounts.user();\n    if (!shopId || (0, _typeof2.default)(user) !== \"object\") return null; // shoppers should always be guests\n\n    var isGuest = Roles.userIsInRole(user, \"guest\", shopId); // but if a user has never logged in then they are anonymous\n\n    var isAnonymous = Roles.userIsInRole(user, \"anonymous\", shopId);\n    return isGuest && !isAnonymous ? user : null;\n  }\n\n  return null;\n});\nTemplate.registerHelper(\"monthOptions\", function () {\n  var showDefaultOption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var label = i18next.t(\"app.monthOptions\", \"Choose month\"); // Call to get monthOptinosVar ReactiveVar\n\n  lazyLoadMonths();\n  var monthOptions = [];\n\n  if (showDefaultOption) {\n    monthOptions.push({\n      value: \"\",\n      label: label\n    });\n  }\n\n  monthOptions = monthOptions.concat(monthOptionsVar.get());\n  return monthOptions;\n});\n/**\n * yearOptions\n * @summary formats moment.js next 9 years into array for autoform selector\n * @return {Array} returns array of years [value:, label:]\n */\n\nTemplate.registerHelper(\"yearOptions\", function () {\n  var showDefaultOption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var label = i18next.t(\"app.yearOptions\", \"Choose year\");\n  var yearOptions = [];\n\n  if (showDefaultOption) {\n    yearOptions.push({\n      value: \"\",\n      label: label\n    });\n  }\n\n  var year = new Date().getFullYear();\n\n  for (var i = 1; i < 9; i += 1) {\n    yearOptions.push({\n      value: year,\n      label: year\n    });\n    year += 1;\n  }\n\n  return yearOptions;\n});\n/**\n * camelToSpace\n * @summary convert a camelcased string to spaces\n * @param {String} str - camelcased string\n * @return {String} returns space formatted string\n */\n\nTemplate.registerHelper(\"camelToSpace\", function (str) {\n  var downCamel = str.replace(/\\W+/g, \"-\").replace(/([a-z\\d])([A-Z])/g, \"$1 $2\");\n  return downCamel.toLowerCase();\n});\n/**\n * toLowerCase\n * @summary convert a string to lower case\n * @param {String} str - string\n * @return {String} returns lowercased string\n */\n\nTemplate.registerHelper(\"toLowerCase\", function (str) {\n  return str.toLowerCase();\n});\n/**\n * toUpperCase\n * @summary convert a string to upper case\n * @param {String} str - string\n * @return {String} returns uppercased string\n */\n\nTemplate.registerHelper(\"toUpperCase\", function (str) {\n  return str.toUpperCase();\n});\n/**\n * capitalize\n * @summary capitalize first character of string\n * @param {String} str - string\n * @return {String} returns string with first letter capitalized\n */\n\nTemplate.registerHelper(\"capitalize\", function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\n/**\n * toCamelCase\n * @summary camelCases a string\n * @param {String} str - string\n * @return {String|undefined} returns camelCased string\n */\n\nTemplate.registerHelper(\"toCamelCase\", function (str) {\n  return !!str && toCamelCase(str);\n});\n/**\n * siteName\n * @summary get the shop name\n * @return {String} returns site name\n */\n\nTemplate.registerHelper(\"siteName\", function () {\n  var shop = Collections.Shops.findOne();\n  return (0, _typeof2.default)(shop) === \"object\" && shop.name ? shop.name : \"\";\n});\n/*\n *  General helpers for template functionality\n */\n\n/**\n * condition\n * @summary conditional string comparison template helper\n * @example {{#if condition status \"eq\" ../value}}\n * @param {String} v1 - first variable to compare\n * @param {String} operator - eq,neq,ideq,or,lt,gt comparision operator\n * @param {String} v2 - second variable to compare\n * @return {Boolean} returns true/false\n */\n\nTemplate.registerHelper(\"condition\", function (v1, operator, v2) {\n  switch (operator) {\n    case \"==\":\n    case \"eq\":\n      return v1 === v2;\n\n    case \"!=\":\n    case \"neq\":\n      return v1 !== v2;\n\n    case \"===\":\n    case \"ideq\":\n      return v1 === v2;\n\n    case \"!==\":\n    case \"nideq\":\n      return v1 !== v2;\n\n    case \"&&\":\n    case \"and\":\n      return v1 && v2;\n\n    case \"||\":\n    case \"or\":\n      return v1 || v2;\n\n    case \"<\":\n    case \"lt\":\n      return v1 < v2;\n\n    case \"<=\":\n    case \"lte\":\n      return v1 <= v2;\n\n    case \">\":\n    case \"gt\":\n      return v1 > v2;\n\n    case \">=\":\n    case \"gte\":\n      return v1 >= v2;\n\n    default:\n      throw new Meteor.Error(\"undefined-operator\", \"Undefined conditional operator \" + operator);\n  }\n});\n/**\n * orElse\n * @summary if this is true, or else this\n * @param {String} v1 - variable one\n * @param {String} v2 - variable two\n * @return {String} returns v1 || v2\n */\n\nTemplate.registerHelper(\"orElse\", function (v1, v2) {\n  return v1 || v2;\n});\n/**\n * key_value\n * @summary template helper pushing object key/value into array\n * @param {Object} context - object to parse into key / value\n * @return {Array} returns array[key:,value:]\n */\n\nTemplate.registerHelper(\"key_value\", function (context) {\n  var result = [];\n\n  _each(context, function (value, key) {\n    return result.push({\n      key: key,\n      value: value\n    });\n  });\n\n  return result;\n});\n/**\n * nl2br\n * @summary template helper nl2br - Converts new line (\\n\\r) to <br>\n * from http://phpjs.org/functions/nl2br:480\n * @param {String} text - text\n * @returns {String} returns formatted Spacebars.SafeString\n */\n\nTemplate.registerHelper(\"nl2br\", function (text) {\n  var nl2br = (\"\" + text).replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, \"$1<br>$2\");\n  return new Spacebars.SafeString(nl2br);\n});\n/**\n * pluralize\n * @summary general helper for plurization of strings\n * @example {{plurize \"1 thing\"}}\n * @param {String} nCount - number, ie \"1 \"\n * @param {String} pString - plural string ie \" thing\"\n * @todo adapt to, and use i18next\n */\n\nTemplate.registerHelper(\"pluralize\", function (nCount, pString) {\n  if (nCount === 1) {\n    return \"1 \" + pString;\n  }\n\n  return nCount + \" \" + pString + \"s\";\n});","map":{"version":3,"sources":["client/modules/core/helpers/templates.js"],"names":["_each","module","watch","require","v","Meteor","Template","Accounts","Spacebars","ReactiveVar","Roles","i18next","Reaction","Collections","Schemas","toCamelCase","monthOptionsVar","lazyLoadMonths","get","length","locale","months","lang","language","monthOptions","monthsList","index","hasOwnProperty","call","month","mnum","parseInt","push","value","label","set","registerHelper","shopId","getShopId","user","isGuest","userIsInRole","isAnonymous","showDefaultOption","t","concat","yearOptions","year","Date","getFullYear","i","str","downCamel","replace","toLowerCase","toUpperCase","charAt","slice","shop","Shops","findOne","name","v1","operator","v2","Error","context","result","key","text","nl2br","SafeString","nCount","pString"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport \"moment/min/locales.min.js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Accounts } from \"meteor/accounts-base\";\nimport { Spacebars } from \"meteor/spacebars\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { i18next, Reaction } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport * as Schemas from \"/lib/collections/schemas\";\nimport { toCamelCase } from \"/lib/api\";\n\n// Lazyload moment-timezone.months\nconst monthOptionsVar = new ReactiveVar([]);\nasync function lazyLoadMonths() {\n  if (monthOptionsVar.get().length) return;\n  const { locale, months } = await import(\"moment-timezone\");\n\n  let lang = i18next.language;\n  if (lang === \"zh\") {\n    lang = \"zh-cn\";\n  }\n\n  locale(lang);\n\n  const monthOptions = [];\n  const monthsList = months();\n\n  // parse into autoform array\n  for (const index in monthsList) {\n    if ({}.hasOwnProperty.call(monthsList, index)) {\n      const month = monthsList[index];\n      const mnum = parseInt(index, 10) + 1;\n      monthOptions.push({\n        value: mnum,\n        label: `${mnum} | ${month}`\n      });\n    }\n  }\n\n  monthOptionsVar.set(monthOptions);\n}\n\nTemplate.registerHelper(\"Collections\", () => Collections);\n\nTemplate.registerHelper(\"Schemas\", () => Schemas);\n\n/**\n * currentUser\n * @summary overrides Meteor Package.blaze currentUser method\n * @return {Boolean} returns true/null if user has registered\n */\n\nTemplate.registerHelper(\"currentUser\", () => {\n  if (typeof Reaction === \"object\") {\n    const shopId = Reaction.getShopId();\n    const user = Accounts.user();\n    if (!shopId || typeof user !== \"object\") return null;\n    // shoppers should always be guests\n    const isGuest = Roles.userIsInRole(user, \"guest\", shopId);\n    // but if a user has never logged in then they are anonymous\n    const isAnonymous = Roles.userIsInRole(user, \"anonymous\", shopId);\n\n    return isGuest && !isAnonymous ? user : null;\n  }\n  return null;\n});\n\n\nTemplate.registerHelper(\"monthOptions\", (showDefaultOption = true) => {\n  const label = i18next.t(\"app.monthOptions\", \"Choose month\");\n\n  // Call to get monthOptinosVar ReactiveVar\n  lazyLoadMonths();\n  let monthOptions = [];\n\n  if (showDefaultOption) {\n    monthOptions.push({\n      value: \"\",\n      label\n    });\n  }\n\n  monthOptions = monthOptions.concat(monthOptionsVar.get());\n\n  return monthOptions;\n});\n\n/**\n * yearOptions\n * @summary formats moment.js next 9 years into array for autoform selector\n * @return {Array} returns array of years [value:, label:]\n */\nTemplate.registerHelper(\"yearOptions\", (showDefaultOption = true) => {\n  const label = i18next.t(\"app.yearOptions\", \"Choose year\");\n  const yearOptions = [];\n\n  if (showDefaultOption) {\n    yearOptions.push({\n      value: \"\",\n      label\n    });\n  }\n\n  let year = new Date().getFullYear();\n  for (let i = 1; i < 9; i += 1) {\n    yearOptions.push({\n      value: year,\n      label: year\n    });\n    year += 1;\n  }\n  return yearOptions;\n});\n\n/**\n * camelToSpace\n * @summary convert a camelcased string to spaces\n * @param {String} str - camelcased string\n * @return {String} returns space formatted string\n */\nTemplate.registerHelper(\"camelToSpace\", (str) => {\n  const downCamel = str.replace(/\\W+/g, \"-\").replace(/([a-z\\d])([A-Z])/g, \"$1 $2\");\n  return downCamel.toLowerCase();\n});\n\n/**\n * toLowerCase\n * @summary convert a string to lower case\n * @param {String} str - string\n * @return {String} returns lowercased string\n */\nTemplate.registerHelper(\"toLowerCase\", (str) => str.toLowerCase());\n\n/**\n * toUpperCase\n * @summary convert a string to upper case\n * @param {String} str - string\n * @return {String} returns uppercased string\n */\nTemplate.registerHelper(\"toUpperCase\", (str) => str.toUpperCase());\n\n/**\n * capitalize\n * @summary capitalize first character of string\n * @param {String} str - string\n * @return {String} returns string with first letter capitalized\n */\nTemplate.registerHelper(\"capitalize\", (str) => str.charAt(0).toUpperCase() + str.slice(1));\n\n/**\n * toCamelCase\n * @summary camelCases a string\n * @param {String} str - string\n * @return {String|undefined} returns camelCased string\n */\nTemplate.registerHelper(\"toCamelCase\", (str) => !!str && toCamelCase(str));\n\n\n/**\n * siteName\n * @summary get the shop name\n * @return {String} returns site name\n */\nTemplate.registerHelper(\"siteName\", () => {\n  const shop = Collections.Shops.findOne();\n  return typeof shop === \"object\" && shop.name ? shop.name : \"\";\n});\n\n/*\n *  General helpers for template functionality\n */\n\n/**\n * condition\n * @summary conditional string comparison template helper\n * @example {{#if condition status \"eq\" ../value}}\n * @param {String} v1 - first variable to compare\n * @param {String} operator - eq,neq,ideq,or,lt,gt comparision operator\n * @param {String} v2 - second variable to compare\n * @return {Boolean} returns true/false\n */\nTemplate.registerHelper(\"condition\", (v1, operator, v2) => {\n  switch (operator) {\n    case \"==\":\n    case \"eq\":\n      return v1 === v2;\n    case \"!=\":\n    case \"neq\":\n      return v1 !== v2;\n    case \"===\":\n    case \"ideq\":\n      return v1 === v2;\n    case \"!==\":\n    case \"nideq\":\n      return v1 !== v2;\n    case \"&&\":\n    case \"and\":\n      return v1 && v2;\n    case \"||\":\n    case \"or\":\n      return v1 || v2;\n    case \"<\":\n    case \"lt\":\n      return v1 < v2;\n    case \"<=\":\n    case \"lte\":\n      return v1 <= v2;\n    case \">\":\n    case \"gt\":\n      return v1 > v2;\n    case \">=\":\n    case \"gte\":\n      return v1 >= v2;\n    default:\n      throw new Meteor.Error(\"undefined-operator\", `Undefined conditional operator ${operator}`);\n  }\n});\n\n/**\n * orElse\n * @summary if this is true, or else this\n * @param {String} v1 - variable one\n * @param {String} v2 - variable two\n * @return {String} returns v1 || v2\n */\nTemplate.registerHelper(\"orElse\", (v1, v2) => v1 || v2);\n\n/**\n * key_value\n * @summary template helper pushing object key/value into array\n * @param {Object} context - object to parse into key / value\n * @return {Array} returns array[key:,value:]\n */\nTemplate.registerHelper(\"key_value\", (context) => {\n  const result = [];\n  _.each(context, (value, key) => result.push({\n    key,\n    value\n  }));\n  return result;\n});\n\n/**\n * nl2br\n * @summary template helper nl2br - Converts new line (\\n\\r) to <br>\n * from http://phpjs.org/functions/nl2br:480\n * @param {String} text - text\n * @returns {String} returns formatted Spacebars.SafeString\n */\nTemplate.registerHelper(\"nl2br\", (text) => {\n  const nl2br = (`${text}`).replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, \"$1<br>$2\");\n  return new Spacebars.SafeString(nl2br);\n});\n\n/**\n * pluralize\n * @summary general helper for plurization of strings\n * @example {{plurize \"1 thing\"}}\n * @param {String} nCount - number, ie \"1 \"\n * @param {String} pString - plural string ie \" thing\"\n * @todo adapt to, and use i18next\n */\nTemplate.registerHelper(\"pluralize\", (nCount, pString) => {\n  if (nCount === 1) {\n    return `1 ${pString}`;\n  }\n  return `${nCount} ${pString}s`;\n});\n"]},"sourceType":"script","hash":"bb73b5975ba27e12eea9b5c00837e4d636eeede5"}
