{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/router/lib/hooks.js","filename":"imports/plugins/core/router/lib/hooks.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/router/lib/hooks.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/router/lib/hooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/router/lib/hooks.js"}},"code":"/**\n * @file Route Hook Methods - The Router.Hooks namespace provides a router-agnostic API for registering functions to be called either on specific routes or on every route. Read more about [Routing in Reaction](https://docs.reactioncommerce.com/reaction-docs/master/routing).\n *\n * @namespace Router.Hooks\n */\nvar Hooks = {\n  _hooks: {\n    onEnter: {},\n    onExit: {}\n  },\n  _addHook: function (type, routeName, callback) {\n    if (typeof this._hooks[type][routeName] === \"undefined\") {\n      this._hooks[type][routeName] = [];\n    }\n\n    this._hooks[type][routeName].push(callback);\n  },\n  enter: function (callback) {\n    var _this = this;\n\n    if (Array.isArray(callback)) {\n      callback.forEach(function (cb) {\n        _this.onEnter(cb);\n      });\n    } else {\n      this.onEnter(callback);\n    }\n  },\n  leave: function (callback) {\n    var _this2 = this;\n\n    if (Array.isArray(callback)) {\n      callback.forEach(function (cb) {\n        _this2.onExit(cb);\n      });\n    } else {\n      return this.onExit(callback);\n    }\n  },\n\n  /**\n   * @method onEnter\n   * @memberof Router.Hooks\n   * @summary Register a hook on a specific route\n   * Can be called as many times as needed to add more than one callback\n   * @example // create a function to do something on the product detail page\n  function logSomeStuff() {\n  console.log(\"We're arriving at the product page!\");\n  }\n  // add that to the product detail page onEnter hook\n  Router.Hooks.onEnter(\"product\", logSomeStuff);\n   * @param  {String}   routeName Name of route\n   * @param  {Function} callback  Callback method\n   * @return {undefined}\n   */\n  onEnter: function (routeName, callback) {\n    // if first argument is a function it's a global callback\n    if (arguments.length === 1 && typeof routeName === \"function\") {\n      var cb = routeName;\n      return this._addHook(\"onEnter\", \"GLOBAL\", cb);\n    } // route-specific onEnter callback\n\n\n    return this._addHook(\"onEnter\", routeName, callback);\n  },\n\n  /**\n   * @method onExit\n   * @memberof Router.Hooks\n   * @summary Register a hook on a specific route\n   * Can be called as many times as needed to add more than one callback\n   * @param  {String}   routeName Name of route\n   * @param  {Function} callback  Callback method\n   * @return {undefined}\n   */\n  onExit: function (routeName, callback) {\n    // if first argument is a function it's a global callback\n    if (arguments.length === 1 && typeof routeName === \"function\") {\n      var cb = routeName;\n      return this._addHook(\"onExit\", \"GLOBAL\", cb);\n    } // route-specific onExit callback\n\n\n    return this._addHook(\"onExit\", routeName, callback);\n  },\n\n  /**\n   * @method get\n   * @memberof Router.Hooks\n   * @summary Get all registered hooks for a specific route\n   * @param  {String} type Type of hook - `\"onEnter\"` or `\"onExit\"`\n   * @param  {String} name Name of Route\n   * @return {Array}  Array of hooks\n   */\n  get: function (type, name) {\n    var group = this._hooks[type] || {};\n    var callbacks = group[name];\n    return typeof callbacks !== \"undefined\" && !!callbacks.length ? callbacks : [];\n  },\n\n  /**\n   * @method run\n   * @memberof Router.Hooks\n   * @summary Run all registered hooks\n   * @param  {String} type Type of hook - `\"onEnter\"` or `\"onExit\"`\n   * @param  {String} name \"GLOBAL\" for all registered global hooks\n   * @param  {Object} [context] Context object, optional, or `routeName`\n   * @return {Array}  Array of hooks\n   */\n  run: function (type, name, context) {\n    var callbacks = this.get(type, name);\n\n    if (typeof callbacks !== \"undefined\" && !!callbacks.length) {\n      return callbacks.forEach(function (callback) {\n        return callback(context);\n      });\n    }\n\n    return null;\n  }\n};\nmodule.exportDefault(Hooks);","map":{"version":3,"sources":["imports/plugins/core/router/lib/hooks.js"],"names":["Hooks","_hooks","onEnter","onExit","_addHook","type","routeName","callback","push","enter","Array","isArray","forEach","cb","leave","arguments","length","get","name","group","callbacks","run","context","module","exportDefault"],"mappings":"AAAA;;;;;AAMA,IAAMA,QAAQ;AACZC,UAAQ;AACNC,aAAS,EADH;AAENC,YAAQ;AAFF,GADI;AAMZC,UANY,YAMHC,IANG,EAMGC,SANH,EAMcC,QANd,EAMwB;AAClC,QAAI,OAAO,KAAKN,MAAL,CAAYI,IAAZ,EAAkBC,SAAlB,CAAP,KAAwC,WAA5C,EAAyD;AACvD,WAAKL,MAAL,CAAYI,IAAZ,EAAkBC,SAAlB,IAA+B,EAA/B;AACD;;AACD,SAAKL,MAAL,CAAYI,IAAZ,EAAkBC,SAAlB,EAA6BE,IAA7B,CAAkCD,QAAlC;AACD,GAXW;AAaZE,OAbY,YAaNF,QAbM,EAaI;AAAA;;AACd,QAAIG,MAAMC,OAAN,CAAcJ,QAAd,CAAJ,EAA6B;AAC3BA,eAASK,OAAT,CAAiB,UAACC,EAAD,EAAQ;AACvB,cAAKX,OAAL,CAAaW,EAAb;AACD,OAFD;AAGD,KAJD,MAIO;AACL,WAAKX,OAAL,CAAaK,QAAb;AACD;AACF,GArBW;AAuBZO,OAvBY,YAuBNP,QAvBM,EAuBI;AAAA;;AACd,QAAIG,MAAMC,OAAN,CAAcJ,QAAd,CAAJ,EAA6B;AAC3BA,eAASK,OAAT,CAAiB,UAACC,EAAD,EAAQ;AACvB,eAAKV,MAAL,CAAYU,EAAZ;AACD,OAFD;AAGD,KAJD,MAIO;AACL,aAAO,KAAKV,MAAL,CAAYI,QAAZ,CAAP;AACD;AACF,GA/BW;;AAiCZ;;;;;;;;;;;;;;;AAeAL,SAhDY,YAgDJI,SAhDI,EAgDOC,QAhDP,EAgDiB;AAC3B;AACA,QAAIQ,UAAUC,MAAV,KAAqB,CAArB,IAA0B,OAAOV,SAAP,KAAqB,UAAnD,EAA+D;AAC7D,UAAMO,KAAKP,SAAX;AACA,aAAO,KAAKF,QAAL,CAAc,SAAd,EAAyB,QAAzB,EAAmCS,EAAnC,CAAP;AACD,KAL0B,CAM3B;;;AACA,WAAO,KAAKT,QAAL,CAAc,SAAd,EAAyBE,SAAzB,EAAoCC,QAApC,CAAP;AACD,GAxDW;;AA0DZ;;;;;;;;;AASAJ,QAnEY,YAmELG,SAnEK,EAmEMC,QAnEN,EAmEgB;AAC1B;AACA,QAAIQ,UAAUC,MAAV,KAAqB,CAArB,IAA0B,OAAOV,SAAP,KAAqB,UAAnD,EAA+D;AAC7D,UAAMO,KAAKP,SAAX;AACA,aAAO,KAAKF,QAAL,CAAc,QAAd,EAAwB,QAAxB,EAAkCS,EAAlC,CAAP;AACD,KALyB,CAM1B;;;AACA,WAAO,KAAKT,QAAL,CAAc,QAAd,EAAwBE,SAAxB,EAAmCC,QAAnC,CAAP;AACD,GA3EW;;AA6EZ;;;;;;;;AAQAU,KArFY,YAqFRZ,IArFQ,EAqFFa,IArFE,EAqFI;AACd,QAAMC,QAAQ,KAAKlB,MAAL,CAAYI,IAAZ,KAAqB,EAAnC;AACA,QAAMe,YAAYD,MAAMD,IAAN,CAAlB;AACA,WAAQ,OAAOE,SAAP,KAAqB,WAArB,IAAoC,CAAC,CAACA,UAAUJ,MAAjD,GAA2DI,SAA3D,GAAuE,EAA9E;AACD,GAzFW;;AA2FZ;;;;;;;;;AASAC,KApGY,YAoGRhB,IApGQ,EAoGFa,IApGE,EAoGII,OApGJ,EAoGa;AACvB,QAAMF,YAAY,KAAKH,GAAL,CAASZ,IAAT,EAAea,IAAf,CAAlB;;AACA,QAAI,OAAOE,SAAP,KAAqB,WAArB,IAAoC,CAAC,CAACA,UAAUJ,MAApD,EAA4D;AAC1D,aAAOI,UAAUR,OAAV,CAAkB,UAACL,QAAD;AAAA,eAAcA,SAASe,OAAT,CAAd;AAAA,OAAlB,CAAP;AACD;;AACD,WAAO,IAAP;AACD;AA1GW,CAAd;AANAC,OAAOC,aAAP,CAmHexB,KAnHf","sourcesContent":["/**\n * @file Route Hook Methods - The Router.Hooks namespace provides a router-agnostic API for registering functions to be called either on specific routes or on every route. Read more about [Routing in Reaction](https://docs.reactioncommerce.com/reaction-docs/master/routing).\n *\n * @namespace Router.Hooks\n */\n\nconst Hooks = {\n  _hooks: {\n    onEnter: {},\n    onExit: {}\n  },\n\n  _addHook(type, routeName, callback) {\n    if (typeof this._hooks[type][routeName] === \"undefined\") {\n      this._hooks[type][routeName] = [];\n    }\n    this._hooks[type][routeName].push(callback);\n  },\n\n  enter(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onEnter(cb);\n      });\n    } else {\n      this.onEnter(callback);\n    }\n  },\n\n  leave(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onExit(cb);\n      });\n    } else {\n      return this.onExit(callback);\n    }\n  },\n\n  /**\n   * @method onEnter\n   * @memberof Router.Hooks\n   * @summary Register a hook on a specific route\n   * Can be called as many times as needed to add more than one callback\n   * @example // create a function to do something on the product detail page\nfunction logSomeStuff() {\n  console.log(\"We're arriving at the product page!\");\n}\n// add that to the product detail page onEnter hook\nRouter.Hooks.onEnter(\"product\", logSomeStuff);\n   * @param  {String}   routeName Name of route\n   * @param  {Function} callback  Callback method\n   * @return {undefined}\n   */\n  onEnter(routeName, callback) {\n    // if first argument is a function it's a global callback\n    if (arguments.length === 1 && typeof routeName === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onEnter\", \"GLOBAL\", cb);\n    }\n    // route-specific onEnter callback\n    return this._addHook(\"onEnter\", routeName, callback);\n  },\n\n  /**\n   * @method onExit\n   * @memberof Router.Hooks\n   * @summary Register a hook on a specific route\n   * Can be called as many times as needed to add more than one callback\n   * @param  {String}   routeName Name of route\n   * @param  {Function} callback  Callback method\n   * @return {undefined}\n   */\n  onExit(routeName, callback) {\n    // if first argument is a function it's a global callback\n    if (arguments.length === 1 && typeof routeName === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onExit\", \"GLOBAL\", cb);\n    }\n    // route-specific onExit callback\n    return this._addHook(\"onExit\", routeName, callback);\n  },\n\n  /**\n   * @method get\n   * @memberof Router.Hooks\n   * @summary Get all registered hooks for a specific route\n   * @param  {String} type Type of hook - `\"onEnter\"` or `\"onExit\"`\n   * @param  {String} name Name of Route\n   * @return {Array}  Array of hooks\n   */\n  get(type, name) {\n    const group = this._hooks[type] || {};\n    const callbacks = group[name];\n    return (typeof callbacks !== \"undefined\" && !!callbacks.length) ? callbacks : [];\n  },\n\n  /**\n   * @method run\n   * @memberof Router.Hooks\n   * @summary Run all registered hooks\n   * @param  {String} type Type of hook - `\"onEnter\"` or `\"onExit\"`\n   * @param  {String} name \"GLOBAL\" for all registered global hooks\n   * @param  {Object} [context] Context object, optional, or `routeName`\n   * @return {Array}  Array of hooks\n   */\n  run(type, name, context) {\n    const callbacks = this.get(type, name);\n    if (typeof callbacks !== \"undefined\" && !!callbacks.length) {\n      return callbacks.forEach((callback) => callback(context));\n    }\n    return null;\n  }\n};\n\nexport default Hooks;\n"]},"sourceType":"script","hash":"9f4d6f64306ecedb7f4922558d9c9627c9cdd8e5"}
