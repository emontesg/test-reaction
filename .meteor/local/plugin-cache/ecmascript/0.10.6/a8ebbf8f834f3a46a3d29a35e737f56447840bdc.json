{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/search-mongo/server/methods/formHandler.js","filename":"imports/plugins/included/search-mongo/server/methods/formHandler.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/search-mongo/server/methods/formHandler.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/search-mongo/server/methods/formHandler.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/search-mongo/server/methods/formHandler.js"}},"code":"let _get;\n\nmodule.watch(require(\"lodash/get\"), {\n  default(v) {\n    _get = v;\n  }\n\n}, 0);\n\nlet _keys;\n\nmodule.watch(require(\"lodash/keys\"), {\n  default(v) {\n    _keys = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nlet Job;\nmodule.watch(require(\"../../../../core/job-collection/lib\"), {\n  Job(v) {\n    Job = v;\n  }\n\n}, 4);\nlet Packages, Jobs;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Packages(v) {\n    Packages = v;\n  },\n\n  Jobs(v) {\n    Jobs = v;\n  }\n\n}, 5);\nlet SearchPackageConfig;\nmodule.watch(require(\"../../lib/collections/schemas\"), {\n  SearchPackageConfig(v) {\n    SearchPackageConfig = v;\n  }\n\n}, 6);\nlet Logger, Reaction;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Logger(v) {\n    Logger = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 7);\n\nfunction fieldsChanged(changedFields, fieldType = \"includes\") {\n  for (const field of changedFields) {\n    if (field.indexOf(fieldType) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction weightsChanged(changedFields) {\n  return fieldsChanged(changedFields, \"weights\");\n}\n\nMeteor.methods({\n  /**\n   * @name search/updateSearchSettings\n   * @method\n   * @param  {Object} details An object with _id and modifier props\n   * @param  {String} [docId] DEPRECATED. The _id, if details is the modifier.\n   */\n  \"search/updateSearchSettings\"(details, docId) {\n    check(details, Object); // Backward compatibility\n\n    check(docId, Match.Optional(String));\n    const id = docId || details._id;\n    const modifier = docId ? details : details.modifier;\n    check(id, String);\n    SearchPackageConfig.validate(modifier, {\n      modifier: true\n    });\n    const currentSettings = Packages.findOne(id);\n\n    const newSettingsArray = _keys(modifier.$set);\n\n    const changedSettings = [];\n\n    for (const setting of newSettingsArray) {\n      const currentSetting = _get(currentSettings, setting);\n\n      if (currentSetting !== modifier.$set[setting]) {\n        changedSettings.push(setting);\n      }\n    } // must have core permissions\n\n\n    if (!Reaction.hasPermission(\"core\")) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    let rebuildJob;\n\n    if (fieldsChanged(changedSettings)) {\n      Logger.debug(\"Fields have changed, we need to rebuild the ProductSearch Collection\"); // fields have changed, we need to rebuild entire Product Search Collection\n\n      rebuildJob = new Job(Jobs, \"product/buildSearchCollection\", {}).priority(\"normal\").retry({\n        retries: 5,\n        wait: 60000,\n        backoff: \"exponential\" // delay by twice as long for each subsequent retry\n\n      }).save({\n        // Cancel any jobs of the same type,\n        // but only if this job repeats forever.\n        cancelRepeats: true\n      });\n    } else if (weightsChanged(changedSettings)) {\n      // only weights have changed, we only need to build the index\n      Logger.debug(\"Weights have changed, we need to rebuild the ProductSearch index\");\n      rebuildJob = new Job(Jobs, \"product/buildSearchIndex\", {}).priority(\"normal\").retry({\n        retries: 5,\n        wait: 60000,\n        backoff: \"exponential\"\n      }).save({\n        // Cancel any jobs of the same type,\n        // but only if this job repeats forever.\n        cancelRepeats: true\n      });\n    }\n\n    Packages.update(id, modifier);\n    return rebuildJob;\n  }\n\n});","map":{"version":3,"sources":["imports/plugins/included/search-mongo/server/methods/formHandler.js"],"names":["_get","module","watch","require","default","v","_keys","Meteor","check","Match","Job","Packages","Jobs","SearchPackageConfig","Logger","Reaction","fieldsChanged","changedFields","fieldType","field","indexOf","weightsChanged","methods","details","docId","Object","Optional","String","id","_id","modifier","validate","currentSettings","findOne","newSettingsArray","$set","changedSettings","setting","currentSetting","push","hasPermission","Error","rebuildJob","debug","priority","retry","retries","wait","backoff","save","cancelRepeats","update"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Job } from \"/imports/plugins/core/job-collection/lib\";\nimport { Packages, Jobs } from \"/lib/collections\";\nimport { SearchPackageConfig } from \"../../lib/collections/schemas\";\nimport { Logger, Reaction } from \"/server/api\";\n\nfunction fieldsChanged(changedFields, fieldType = \"includes\") {\n  for (const field of changedFields) {\n    if (field.indexOf(fieldType) !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction weightsChanged(changedFields) {\n  return fieldsChanged(changedFields, \"weights\");\n}\n\nMeteor.methods({\n  /**\n   * @name search/updateSearchSettings\n   * @method\n   * @param  {Object} details An object with _id and modifier props\n   * @param  {String} [docId] DEPRECATED. The _id, if details is the modifier.\n   */\n  \"search/updateSearchSettings\"(details, docId) {\n    check(details, Object);\n\n    // Backward compatibility\n    check(docId, Match.Optional(String));\n    const id = docId || details._id;\n    const modifier = docId ? details : details.modifier;\n\n    check(id, String);\n    SearchPackageConfig.validate(modifier, { modifier: true });\n\n    const currentSettings = Packages.findOne(id);\n    const newSettingsArray = _.keys(modifier.$set);\n    const changedSettings = [];\n    for (const setting of newSettingsArray) {\n      const currentSetting = _.get(currentSettings, setting);\n      if (currentSetting !== modifier.$set[setting]) {\n        changedSettings.push(setting);\n      }\n    }\n    // must have core permissions\n    if (!Reaction.hasPermission(\"core\")) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n    let rebuildJob;\n    if (fieldsChanged(changedSettings)) {\n      Logger.debug(\"Fields have changed, we need to rebuild the ProductSearch Collection\");\n      // fields have changed, we need to rebuild entire Product Search Collection\n      rebuildJob = new Job(Jobs, \"product/buildSearchCollection\", {})\n        .priority(\"normal\")\n        .retry({\n          retries: 5,\n          wait: 60000,\n          backoff: \"exponential\" // delay by twice as long for each subsequent retry\n        })\n        .save({\n          // Cancel any jobs of the same type,\n          // but only if this job repeats forever.\n          cancelRepeats: true\n        });\n    } else if (weightsChanged(changedSettings)) {\n      // only weights have changed, we only need to build the index\n      Logger.debug(\"Weights have changed, we need to rebuild the ProductSearch index\");\n      rebuildJob = new Job(Jobs, \"product/buildSearchIndex\", {})\n        .priority(\"normal\")\n        .retry({\n          retries: 5,\n          wait: 60000,\n          backoff: \"exponential\"\n        })\n        .save({\n          // Cancel any jobs of the same type,\n          // but only if this job repeats forever.\n          cancelRepeats: true\n        });\n    }\n    Packages.update(id, modifier);\n    return rebuildJob;\n  }\n});\n"]},"sourceType":"script","hash":"a8ebbf8f834f3a46a3d29a35e737f56447840bdc"}
