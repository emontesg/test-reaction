{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/api/helpers.js","filename":"lib/api/helpers.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"lib/api/helpers.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"lib/api/helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/api/helpers.js"}},"code":"module.export({\n  latinLangs: () => latinLangs,\n  getShopId: () => getShopId,\n  getPrimaryShopId: () => getPrimaryShopId,\n  getShopSettings: () => getShopSettings,\n  getShopName: () => getShopName,\n  getShopLang: () => getShopLang,\n  getPrimaryShopLang: () => getPrimaryShopLang,\n  getShopPrefix: () => getShopPrefix,\n  getAbsoluteUrl: () => getAbsoluteUrl,\n  getCurrentTag: () => getCurrentTag,\n  getSlug: () => getSlug,\n  formatPhoneNumber: () => formatPhoneNumber,\n  toCamelCase: () => toCamelCase,\n  translateRegistry: () => translateRegistry,\n  isObject: () => isObject,\n  mergeDeep: () => mergeDeep,\n  convertWeight: () => convertWeight,\n  getPrimaryMediaForItem: () => getPrimaryMediaForItem,\n  getPrimaryMediaForOrderItem: () => getPrimaryMediaForOrderItem,\n  ValidCardNumber: () => ValidCardNumber,\n  ValidExpireMonth: () => ValidExpireMonth,\n  ValidExpireYear: () => ValidExpireYear,\n  ValidCVV: () => ValidCVV,\n  ValidEmail: () => ValidEmail\n});\nlet url;\nmodule.watch(require(\"url\"), {\n  default(v) {\n    url = v;\n  }\n\n}, 0);\nlet parse, isValidNumber, getPhoneCode;\nmodule.watch(require(\"libphonenumber-js\"), {\n  parse(v) {\n    parse = v;\n  },\n\n  isValidNumber(v) {\n    isValidNumber = v;\n  },\n\n  getPhoneCode(v) {\n    getPhoneCode = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nlet Router;\nmodule.watch(require(\"../../imports/plugins/core/router/lib\"), {\n  Router(v) {\n    Router = v;\n  }\n\n}, 4);\nlet Shops;\nmodule.watch(require(\"../collections\"), {\n  Shops(v) {\n    Shops = v;\n  }\n\n}, 5);\nconst latinLangs = [\"az\", \"da\", \"de\", \"en\", \"es\", \"ff\", \"fr\", \"ha\", \"hr\", \"hu\", \"ig\", \"is\", \"it\", \"jv\", \"ku\", \"ms\", \"nl\", \"no\", \"om\", \"pl\", \"pt\", \"ro\", \"sv\", \"sw\", \"tl\", \"tr\", \"uz\", \"vi\", \"yo\"];\n// eslint-disable-line max-len\n// dynamic import of slugiy/transliteration.slugify\nlet slugify;\n\nfunction lazyLoadSlugify() {\n  return Promise.asyncApply(() => {\n    let mod; // getting the shops base language\n\n    let lang;\n\n    if (Meteor.isServer) {\n      lang = getPrimaryShopLang();\n    } else {\n      lang = getShopLang();\n    } // if slugify has been loaded but the language has changed\n    // to be a non latin based language then load transliteration\n\n\n    if (slugify && slugify.name === \"replace\" && latinLangs.indexOf(lang) === -1) {\n      mod = Promise.await(Promise.resolve().then(() => require(\"transliteration\")));\n    } else if (slugify) {\n      // if slugify/transliteration is loaded and no lang change\n      return;\n    } else if (latinLangs.indexOf(lang) >= 0) {\n      // if the shops language use latin based chars load slugify else load transliterations's slugify\n      mod = Promise.await(Promise.resolve().then(() => require(\"slugify\")));\n    } else {\n      mod = Promise.await(Promise.resolve().then(() => require(\"transliteration\")));\n    } // slugify is exported to modules.default while transliteration is exported to modules.slugify\n\n\n    slugify = mod.default || mod.slugify;\n  });\n}\n\nlet Media;\n\nif (Meteor.isClient) {\n  ({\n    Media\n  } = require(\"../../imports/plugins/core/files/client\"));\n} else {\n  ({\n    Media\n  } = require(\"../../imports/plugins/core/files/server\"));\n}\n/**\n * @file Various helper methods\n *\n * @namespace Helpers\n */\n\n\nlet Core;\n\nif (Meteor.isClient) {\n  Core = require(\"../../client/api\");\n} else {\n  Core = require(\"../../server/api\");\n}\n/**\n * @name getShopId\n * @method\n * @memberof Helpers\n * @return {String} returns current shopId\n */\n\n\nfunction getShopId() {\n  return Core.Reaction.getShopId();\n}\n\nfunction getPrimaryShopId() {\n  return Core.Reaction.getPrimaryShopId();\n}\n\nfunction getShopSettings() {\n  return Core.Reaction.getShopSettings();\n}\n\nfunction getShopName() {\n  const shopId = getShopId();\n  let shop;\n\n  if (shopId) {\n    shop = Shops.findOne({\n      _id: shopId\n    });\n    return shop && shop.name || \"\";\n  }\n\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n  shop = Shops.findOne({\n    domains: {\n      $in: [domain]\n    }\n  });\n  return shop ? shop.name : \"\";\n}\n\nfunction getShopLang() {\n  const shopId = getShopId();\n  const shop = Shops.findOne({\n    _id: shopId\n  });\n  return shop ? shop.language : \"\";\n}\n\nfunction getPrimaryShopLang() {\n  const shopId = getPrimaryShopId();\n  const shop = Shops.findOne({\n    _id: shopId\n  });\n  return shop ? shop.language : \"\";\n}\n\nfunction getShopPrefix(leading = \"/\") {\n  const shopId = getShopId();\n\n  if (shopId) {\n    const shop = Shops.findOne({\n      _id: shopId\n    }, {\n      fields: {\n        _id: 1,\n        name: 1,\n        shopType: 1\n      }\n    });\n    const settings = Core.Reaction.getMarketplaceSettings();\n    const slug = leading + getSlug(shop.slug || getShopName().toLowerCase());\n\n    if (shop.shopType === \"primary\") {\n      // If naked routes is turned off, use the shop slug for our primary shop routes\n      if (settings && settings.marketplaceNakedRoutes === false) {\n        return slug;\n      }\n\n      return \"\";\n    } // If this is not the primary shop, use the shop slug in routes for this shop\n    // TODO: \"/shop\" should be configurable in marketplace settings\n\n\n    return `/shop${slug}`;\n  }\n\n  return \"\";\n}\n\nfunction getAbsoluteUrl(path) {\n  const prefix = getShopPrefix(\"\");\n\n  if (prefix) {\n    const absUrl = Meteor.absoluteUrl(`${prefix}/${path}`);\n    return absUrl;\n  }\n\n  const absUrl = Meteor.absoluteUrl(`${path}`);\n  return absUrl;\n}\n\nfunction getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n\n  return null;\n}\n\nfunction getSlug(slugString) {\n  let slug;\n  Promise.await(lazyLoadSlugify());\n\n  if (slugString) {\n    slug = slugify(slugString.toLowerCase());\n  } else {\n    slug = \"\";\n  }\n\n  return slug;\n}\n\nfunction formatPhoneNumber(phone, countryCode) {\n  try {\n    // phone no. already has the country code attached\n    if (isValidNumber(phone)) {\n      return phone;\n    }\n\n    const phoneNumber = parse(phone, countryCode).phone;\n    const countryExtension = getPhoneCode(countryCode);\n\n    if (phoneNumber && countryExtension) {\n      // try attaching the country code to phone number\n      return `${countryExtension}${phoneNumber}`;\n    }\n\n    throw new Meteor.Error(\"invalid-parameter\", `Incorrect format for phone number ${phone} with country ${countryCode}`);\n  } catch (error) {\n    throw new Meteor.Error(\"invalid-parameter\", error);\n  }\n}\n\nfunction toCamelCase(needscamels) {\n  let s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, (a, b, c) => c.toUpperCase());\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, (a, b, c) => b + c.toUpperCase());\n  return s;\n}\n\nfunction translateRegistry(registry, app) {\n  let registryLabel = \"\";\n  let i18nKey = \"\"; // first we check the default place for a label\n\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = `admin.${registry.provides}.${registryLabel}`; // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length && app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = `admin.${app.registry[0].provides}.${registryLabel}`;\n  }\n\n  registry.i18nKeyLabel = `${i18nKey}Label`;\n  registry.i18nKeyDescription = `${i18nKey}Description`;\n  registry.i18nKeyPlaceholder = `${i18nKey}Placeholder`;\n  registry.i18nKeyTooltip = `${i18nKey}Tooltip`;\n  registry.i18nKeyTitle = `${i18nKey}Title`; // return registry object with added i18n keys\n\n  return registry;\n}\n\nfunction isObject(item) {\n  return item && typeof item === \"object\" && !Array.isArray(item) && item !== null;\n}\n\nfunction mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {\n          [key]: {}\n        });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n\n  return target;\n}\n\nfunction convertWeight(from, to, weight) {\n  check(from, String); // we need to check for specific values\n\n  check(to, String);\n  check(weight, Number);\n\n  if (from === to) {\n    return weight;\n  } // grams\n\n\n  if (from === \"lb\" && to === \"g\") {\n    const convertedWeight = weight * 453.592;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"g\") {\n    const convertedWeight = weight * 1000;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"g\") {\n    const convertedWeight = weight * 28.3495;\n    return convertedWeight;\n  } // lbs\n\n\n  if (from === \"kg\" && to === \"lb\") {\n    const convertedWeight = weight * 2.20462;\n    return convertedWeight;\n  }\n\n  if (from === \"g\" && to === \"lb\") {\n    const convertedWeight = weight * 0.00220462;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"lb\") {\n    const convertedWeight = weight * 0.0625;\n    return convertedWeight;\n  } // oz\n\n\n  if (from === \"lb\" && to === \"oz\") {\n    const convertedWeight = weight * 16;\n    return convertedWeight;\n  }\n\n  if (from === \"g\" && to === \"oz\") {\n    const convertedWeight = weight * 0.035274;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"oz\") {\n    const convertedWeight = weight * 35.274;\n    return convertedWeight;\n  } // kilograms\n\n\n  if (from === \"g\" && to === \"kg\") {\n    const convertedWeight = weight * 0.001;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"kg\") {\n    const convertedWeight = weight * 0.0283495;\n    return convertedWeight;\n  }\n\n  if (from === \"lb\" && to === \"kg\") {\n    const convertedWeight = weight * 0.453592;\n    return convertedWeight;\n  } // if we made it here, something has gone wrong\n\n\n  throw new Meteor.Error(\"invalid-parameter\", \"Invalid from or to value specified\");\n}\n\nfunction getPrimaryMediaForItem({\n  productId,\n  variantId\n} = {}) {\n  let result;\n\n  if (variantId) {\n    result = Media.findOneLocal({\n      \"metadata.variantId\": variantId\n    }, {\n      sort: {\n        \"metadata.priority\": 1,\n        \"uploadedAt\": 1\n      }\n    });\n  }\n\n  if (!result && productId) {\n    result = Media.findOneLocal({\n      \"metadata.productId\": productId\n    }, {\n      sort: {\n        \"metadata.priority\": 1,\n        \"uploadedAt\": 1\n      }\n    });\n  }\n\n  return result || null;\n}\n\nfunction getPrimaryMediaForOrderItem({\n  productId,\n  variants\n} = {}) {\n  const {\n    _id: variantId\n  } = variants || {}; // Order item format\n\n  return getPrimaryMediaForItem({\n    productId,\n    variantId\n  });\n}\n\n/*\n * @name luhnValid\n * @method\n * @memberOf Helpers\n * @summary Checks if a number passes Luhn's test\n * @param {String} cardNumber The card number to check\n * @returns {Boolean} The result of the test\n */\nfunction luhnValid(cardNumber) {\n  return [...cardNumber].reverse().reduce((sum, c, i) => {\n    let d = parseInt(c, 10);\n\n    if (i % 2 !== 0) {\n      d *= 2;\n    }\n\n    if (d > 9) {\n      d -= 9;\n    }\n\n    return sum + d;\n  }, 0) % 10 === 0;\n} // Regex to do card validations\n\n\nconst ValidCardNumber = Match.Where(x => /^[0-9]{12,19}$/.test(x) && luhnValid(x));\nconst ValidExpireMonth = Match.Where(x => /^[0-9]{1,2}$/.test(x));\nconst ValidExpireYear = Match.Where(x => /^[0-9]{4}$/.test(x));\nconst ValidCVV = Match.Where(x => /^[0-9]{3,4}$/.test(x));\n\nconst ValidEmail = x => /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(x);","map":{"version":3,"sources":["lib/api/helpers.js"],"names":["module","export","latinLangs","getShopId","getPrimaryShopId","getShopSettings","getShopName","getShopLang","getPrimaryShopLang","getShopPrefix","getAbsoluteUrl","getCurrentTag","getSlug","formatPhoneNumber","toCamelCase","translateRegistry","isObject","mergeDeep","convertWeight","getPrimaryMediaForItem","getPrimaryMediaForOrderItem","ValidCardNumber","ValidExpireMonth","ValidExpireYear","ValidCVV","ValidEmail","url","watch","require","default","v","parse","isValidNumber","getPhoneCode","Meteor","check","Match","Router","Shops","slugify","lazyLoadSlugify","mod","lang","isServer","name","indexOf","Media","isClient","Core","Reaction","shopId","shop","findOne","_id","domain","absoluteUrl","hostname","domains","$in","language","leading","fields","shopType","settings","getMarketplaceSettings","slug","toLowerCase","marketplaceNakedRoutes","path","prefix","absUrl","getRouteName","current","params","slugString","Promise","await","phone","countryCode","phoneNumber","countryExtension","Error","error","needscamels","s","replace","trim","a","b","c","toUpperCase","registry","app","registryLabel","i18nKey","label","provides","length","i18nKeyLabel","i18nKeyDescription","i18nKeyPlaceholder","i18nKeyTooltip","i18nKeyTitle","item","Array","isArray","target","source","Object","keys","forEach","key","assign","from","to","weight","String","Number","convertedWeight","productId","variantId","result","findOneLocal","sort","variants","luhnValid","cardNumber","reverse","reduce","sum","i","d","parseInt","Where","x","test"],"mappings":"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","sourcesContent":["import url from \"url\";\nimport { parse, isValidNumber, getPhoneCode } from \"libphonenumber-js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { Shops } from \"/lib/collections\";\n\n// Array of ISO Language codes for all languages that use latin based char sets\n// list is based on this matrix http://w3c.github.io/typography/gap-analysis/language-matrix.html\n// list of lang codes https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\nexport const latinLangs = [\"az\", \"da\", \"de\", \"en\", \"es\", \"ff\", \"fr\", \"ha\", \"hr\", \"hu\", \"ig\", \"is\", \"it\", \"jv\", \"ku\", \"ms\", \"nl\", \"no\", \"om\", \"pl\", \"pt\", \"ro\", \"sv\", \"sw\", \"tl\", \"tr\", \"uz\", \"vi\", \"yo\"]; // eslint-disable-line max-len\n\n// dynamic import of slugiy/transliteration.slugify\nlet slugify;\nasync function lazyLoadSlugify() {\n  let mod;\n  // getting the shops base language\n  let lang;\n  if (Meteor.isServer) {\n    lang = getPrimaryShopLang();\n  } else {\n    lang = getShopLang();\n  }\n\n  // if slugify has been loaded but the language has changed\n  // to be a non latin based language then load transliteration\n  if (slugify && slugify.name === \"replace\" && latinLangs.indexOf(lang) === -1) {\n    mod = await import(\"transliteration\");\n  } else if (slugify) {\n    // if slugify/transliteration is loaded and no lang change\n    return;\n  } else if (latinLangs.indexOf(lang) >= 0) {\n    // if the shops language use latin based chars load slugify else load transliterations's slugify\n    mod = await import(\"slugify\");\n  } else {\n    mod = await import(\"transliteration\");\n  }\n  // slugify is exported to modules.default while transliteration is exported to modules.slugify\n  slugify = mod.default || mod.slugify;\n}\n\n\nlet Media;\nif (Meteor.isClient) {\n  ({ Media } = require(\"/imports/plugins/core/files/client\"));\n} else {\n  ({ Media } = require(\"/imports/plugins/core/files/server\"));\n}\n\n/**\n * @file Various helper methods\n *\n * @namespace Helpers\n */\n\nlet Core;\nif (Meteor.isClient) {\n  Core = require(\"/client/api\");\n} else {\n  Core = require(\"/server/api\");\n}\n\n/**\n * @name getShopId\n * @method\n * @memberof Helpers\n * @return {String} returns current shopId\n */\nexport function getShopId() {\n  return Core.Reaction.getShopId();\n}\n\n/**\n * @name getPrimaryShopId\n * @method\n * @memberof Helpers\n * @return {String} returns primary shopId\n */\nexport function getPrimaryShopId() {\n  return Core.Reaction.getPrimaryShopId();\n}\n\n/**\n * getShopSettings\n * @return {Object} returns current shop settings\n */\nexport function getShopSettings() {\n  return Core.Reaction.getShopSettings();\n}\n\n/**\n * @name getShopName\n * @method\n * @memberof Helpers\n * @return {String} returns current shop name\n */\nexport function getShopName() {\n  const shopId = getShopId();\n  let shop;\n  if (shopId) {\n    shop = Shops.findOne({\n      _id: shopId\n    });\n    return (shop && shop.name) || \"\";\n  }\n\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  shop = Shops.findOne({ domains: { $in: [domain] } });\n\n  return shop ? shop.name : \"\";\n}\n\n/**\n * @name getShopLang\n * @method\n * @memberof Helpers\n * @return {String} returns current shop language\n */\nexport function getShopLang() {\n  const shopId = getShopId();\n  const shop = Shops.findOne({ _id: shopId });\n  return shop ? shop.language : \"\";\n}\n\n/**\n * @name getPrimaryShopLang\n * @method\n * @memberof Helpers\n * @return {String} returns primary shop language\n */\nexport function getPrimaryShopLang() {\n  const shopId = getPrimaryShopId();\n  const shop = Shops.findOne({ _id: shopId });\n  return shop ? shop.language : \"\";\n}\n\n\n/**\n * @name getShopPrefix\n * @method\n * @memberof Helpers\n * @param {String} leading - Default \"/\", prefix, the prefix with a leading shash\n * @return {String} returns shop url prefix\n */\nexport function getShopPrefix(leading = \"/\") {\n  const shopId = getShopId();\n\n  if (shopId) {\n    const shop = Shops.findOne({\n      _id: shopId\n    }, {\n      fields: {\n        _id: 1,\n        name: 1,\n        shopType: 1\n      }\n    });\n\n    const settings = Core.Reaction.getMarketplaceSettings();\n    const slug = leading + getSlug(shop.slug || getShopName().toLowerCase());\n\n    if (shop.shopType === \"primary\") {\n      // If naked routes is turned off, use the shop slug for our primary shop routes\n      if (settings && settings.marketplaceNakedRoutes === false) {\n        return slug;\n      }\n\n      return \"\";\n    }\n\n    // If this is not the primary shop, use the shop slug in routes for this shop\n    // TODO: \"/shop\" should be configurable in marketplace settings\n    return `/shop${slug}`;\n  }\n\n  return \"\";\n}\n\n/**\n * @name getAbsoluteUrl\n * @method\n * @memberof Helpers\n * @param {String} path - path to append to absolute Url, path should be prefixed with / if necessary\n * @return {String} returns absolute url (shop prefix + path)\n */\nexport function getAbsoluteUrl(path) {\n  const prefix = getShopPrefix(\"\");\n  if (prefix) {\n    const absUrl = Meteor.absoluteUrl(`${prefix}/${path}`);\n    return absUrl;\n  }\n  const absUrl = Meteor.absoluteUrl(`${path}`);\n  return absUrl;\n}\n\n/**\n * @name getCurrentTag\n * @method\n * @memberof Helpers\n * @return {String} returns current tag\n */\nexport function getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n  return null;\n}\n\n/**\n * @name getSlug\n * @method\n * @memberof Helpers\n * @summary return a slugified string using \"slugify\" from transliteration\n * https://www.npmjs.com/package/transliteration\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  let slug;\n  Promise.await(lazyLoadSlugify());\n  if (slugString) {\n    slug = slugify(slugString.toLowerCase());\n  } else {\n    slug = \"\";\n  }\n  return slug;\n}\n\n/**\n * @name formatPhoneNumber\n * @method\n * @memberof Helpers\n * @summary prepends country code to phone no. if required\n * @param  {String} phone the original phone no.\n * @param  {String} countryCode the country's code to which the phone no. belongs to\n * @return {String} the phone no. with country extension.\n */\nexport function formatPhoneNumber(phone, countryCode) {\n  try {\n    // phone no. already has the country code attached\n    if (isValidNumber(phone)) {\n      return phone;\n    }\n    const phoneNumber = parse(phone, countryCode).phone;\n    const countryExtension = getPhoneCode(countryCode);\n    if (phoneNumber && countryExtension) {\n      // try attaching the country code to phone number\n      return `${countryExtension}${phoneNumber}`;\n    }\n    throw new Meteor.Error(\"invalid-parameter\", `Incorrect format for phone number ${phone} with country ${countryCode}`);\n  } catch (error) {\n    throw new Meteor.Error(\"invalid-parameter\", error);\n  }\n}\n\n/**\n * @name toCamelCase\n * @method\n * @memberof Helpers\n * @summary helper for i18n - special toCamelCase for converting a string to camelCase for use with i18n keys\n * @param {String} needscamels String to be camel cased.\n * @return {String} camelCased string\n */\nexport function toCamelCase(needscamels) {\n  let s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, (a, b, c) => c.toUpperCase());\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, (a, b, c) => b + c.toUpperCase());\n  return s;\n}\n\n/**\n * @name translateRegistry\n * @method\n * @memberof Helpers\n * @summary adds i18n strings to registry object\n * @param {Object} registry registry object\n * @param {Object} [app] complete package object\n * @return {Object} with updated registry\n */\nexport function translateRegistry(registry, app) {\n  let registryLabel = \"\";\n  let i18nKey = \"\";\n  // first we check the default place for a label\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = `admin.${registry.provides}.${registryLabel}`;\n    // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length &&\n    app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = `admin.${app.registry[0].provides}.${registryLabel}`;\n  }\n  registry.i18nKeyLabel = `${i18nKey}Label`;\n  registry.i18nKeyDescription = `${i18nKey}Description`;\n  registry.i18nKeyPlaceholder = `${i18nKey}Placeholder`;\n  registry.i18nKeyTooltip = `${i18nKey}Tooltip`;\n  registry.i18nKeyTitle = `${i18nKey}Title`;\n  // return registry object with added i18n keys\n  return registry;\n}\n\n/**\n * @name isObject\n * @method\n * @memberof Helpers\n * @summary Simple is object check.\n * @param {Object} item item to check if is an object\n * @returns {boolean} return true if object\n */\nexport function isObject(item) {\n  return (item && typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n/**\n * @name mergeDeep\n * @method\n * @memberof Helpers\n * @summary Helper for Deep merge two objects.\n * @param {Object} target deep merge into this object\n * @param {Object} source merge this object\n * @returns {Object} return deep merged object\n */\nexport function mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    });\n  }\n  return target;\n}\n\n/**\n * @name convertWeight\n * @method\n * @memberOf Helpers\n * @summary Convert weight from/to different Units of Measure\n * @param {String} from The UOM to convert from\n * @param {String} to The UOM to convert to\n * @param {Number} weight The value to convert\n * @returns {Number} The converted value\n */\nexport function convertWeight(from, to, weight) {\n  check(from, String); // we need to check for specific values\n  check(to, String);\n  check(weight, Number);\n\n  if (from === to) {\n    return weight;\n  }\n  // grams\n  if (from === \"lb\" && to === \"g\") {\n    const convertedWeight = weight * 453.592;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"g\") {\n    const convertedWeight = weight * 1000;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"g\") {\n    const convertedWeight = weight * 28.3495;\n    return convertedWeight;\n  }\n\n  // lbs\n  if (from === \"kg\" && to === \"lb\") {\n    const convertedWeight = weight * 2.20462;\n    return convertedWeight;\n  }\n\n  if (from === \"g\" && to === \"lb\") {\n    const convertedWeight = weight * 0.00220462;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"lb\") {\n    const convertedWeight = weight * 0.0625;\n    return convertedWeight;\n  }\n\n  // oz\n  if (from === \"lb\" && to === \"oz\") {\n    const convertedWeight = weight * 16;\n    return convertedWeight;\n  }\n\n  if (from === \"g\" && to === \"oz\") {\n    const convertedWeight = weight * 0.035274;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"oz\") {\n    const convertedWeight = weight * 35.274;\n    return convertedWeight;\n  }\n\n  // kilograms\n  if (from === \"g\" && to === \"kg\") {\n    const convertedWeight = weight * 0.001;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"kg\") {\n    const convertedWeight = weight * 0.0283495;\n    return convertedWeight;\n  }\n\n  if (from === \"lb\" && to === \"kg\") {\n    const convertedWeight = weight * 0.453592;\n    return convertedWeight;\n  }\n  // if we made it here, something has gone wrong\n  throw new Meteor.Error(\"invalid-parameter\", \"Invalid from or to value specified\");\n}\n\n/**\n * @name getPrimaryMediaForItem\n * @summary Gets the FileRecord for the primary media item associated with the variant or product\n *   for the given item\n * @param {Object} item Must have `productId` and/or `variantId` set to get back a result.\n * @return {FileRecord|null}\n */\nexport function getPrimaryMediaForItem({ productId, variantId } = {}) {\n  let result;\n\n  if (variantId) {\n    result = Media.findOneLocal({\n      \"metadata.variantId\": variantId\n    }, { sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 } });\n  }\n\n  if (!result && productId) {\n    result = Media.findOneLocal({\n      \"metadata.productId\": productId\n    }, { sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 } });\n  }\n\n  return result || null;\n}\n\n/**\n * @name getPrimaryMediaForOrderItem\n * @summary Gets the FileRecord for the primary media item associated with the variant or product\n *   for the given item\n * @param {Object} item Must have `productId` and/or `variants._id` set to get back a result.\n * @return {FileRecord|null}\n */\nexport function getPrimaryMediaForOrderItem({ productId, variants } = {}) {\n  const { _id: variantId } = variants || {}; // Order item format\n  return getPrimaryMediaForItem({ productId, variantId });\n}\n\n/*\n * @name luhnValid\n * @method\n * @memberOf Helpers\n * @summary Checks if a number passes Luhn's test\n * @param {String} cardNumber The card number to check\n * @returns {Boolean} The result of the test\n */\nfunction luhnValid(cardNumber) {\n  return [...cardNumber].reverse().reduce((sum, c, i) => {\n    let d = parseInt(c, 10);\n    if (i % 2 !== 0) { d *= 2; }\n    if (d > 9) { d -= 9; }\n    return sum + d;\n  }, 0) % 10 === 0;\n}\n\n// Regex to do card validations\nexport const ValidCardNumber = Match.Where((x) => /^[0-9]{12,19}$/.test(x) && luhnValid(x));\n\nexport const ValidExpireMonth = Match.Where((x) => /^[0-9]{1,2}$/.test(x));\n\nexport const ValidExpireYear = Match.Where((x) => /^[0-9]{4}$/.test(x));\n\nexport const ValidCVV = Match.Where((x) => /^[0-9]{3,4}$/.test(x));\n\n// Email regex\nexport const ValidEmail = (x) => /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(x); // eslint-disable-line max-len\n"]},"sourceType":"script","hash":"6669291bfa6fce8106a3d9d9d5f1195313bac65e"}
