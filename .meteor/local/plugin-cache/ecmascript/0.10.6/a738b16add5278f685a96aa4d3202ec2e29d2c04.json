{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/taxes-avalara/client/accounts/exemption.js","filename":"imports/plugins/included/taxes-avalara/client/accounts/exemption.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/taxes-avalara/client/accounts/exemption.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/included/taxes-avalara/client/accounts/exemption.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/taxes-avalara/client/accounts/exemption.js"}},"code":"var _get;\n\nmodule.watch(require(\"lodash/get\"), {\n  \"default\": function (v) {\n    _get = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 3);\nvar AutoForm;\nmodule.watch(require(\"meteor/aldeed:autoform\"), {\n  AutoForm: function (v) {\n    AutoForm = v;\n  }\n}, 4);\nvar Reaction, i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 5);\nvar Packages, Accounts;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Packages: function (v) {\n    Packages = v;\n  },\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 6);\nvar AccountsSchema;\nmodule.watch(require(\"../../../../../../lib/collections/schemas/accounts\"), {\n  Accounts: function (v) {\n    AccountsSchema = v;\n  }\n}, 7);\nvar TaxEntityCodes;\nmodule.watch(require(\"../../../../../../client/collections\"), {\n  TaxEntityCodes: function (v) {\n    TaxEntityCodes = v;\n  }\n}, 8);\nvar entityCodeList = [];\nvar currentAccount;\nTemplate.taxSettingsPanel.onCreated(function () {\n  this.subscribe(\"UserAccount\", Meteor.userId());\n});\nTemplate.taxSettingsPanel.helpers({\n  account: function () {\n    if (Template.instance().subscriptionsReady()) {\n      var account = Accounts.findOne(this.member.userId);\n      currentAccount = account;\n      return account;\n    }\n\n    return null;\n  },\n  makeUniqueId: function () {\n    return \"tax-settings-form-\" + this.member.userId;\n  },\n  accountsSchema: function () {\n    return AccountsSchema;\n  },\n  entityCodes: function () {\n    var customOption = [{\n      label: i18next.t(\"admin.taxSettings.entityCodeCustomLabel\"),\n      value: \"CUSTOM USER INPUT\"\n    }];\n    var entityCodes = TaxEntityCodes.find().map(function (entityCode) {\n      return Object.assign({}, entityCode, {\n        label: entityCode.name,\n        value: entityCode.code\n      });\n    });\n    entityCodeList = (entityCodes || []).map(function (a) {\n      return a.code;\n    });\n    return (entityCodes || []).concat(customOption);\n  }\n});\nTemplate.taxSettingsPanel.events({\n  \"change [data-event-action=customType]\": function (event) {\n    event.stopPropagation();\n    var formId = $(event.currentTarget.closest(\"form\")).attr(\"id\");\n\n    if (isCustomValue(formId)) {\n      // show input field for custom; pre-fill with existing custom val\n      var currType = _get(currentAccount, \"taxSettings.customerUsageType\", \"\");\n\n      if (entityCodeList.indexOf(currType) < 0) {\n        $(\".customerUsageType input\").val(currType);\n      }\n\n      return $(\".customerUsageType\").toggleClass(\"hide\");\n    }\n\n    $(\".customerUsageType\").addClass(\"hide\");\n  }\n});\nTemplate.taxSettingsPanel.onCreated(function () {\n  var avalaraPackage = Packages.findOne({\n    name: \"taxes-avalara\",\n    shopId: Reaction.getShopId()\n  });\n\n  var isAvalaraEnabled = _get(avalaraPackage, \"settings.avalara.enabled\", false);\n\n  var currentCodes = TaxEntityCodes.find().fetch();\n\n  if (isAvalaraEnabled && !currentCodes.length) {\n    Meteor.call(\"avalara/getEntityCodes\", function (error, entityCodes) {\n      if (error) {\n        return Alerts.toast(i18next.t(\"settings.apiError\") + \" \" + error.message, \"error\");\n      }\n\n      (entityCodes || []).forEach(function (entityCode) {\n        return TaxEntityCodes.insert(entityCode);\n      });\n    });\n  }\n});\nAutoForm.addHooks(null, {\n  before: {\n    update: function (doc) {\n      var oldType = _get(Template.instance(), \"data.doc.taxSettings.customerUsageType\");\n\n      if (isCustomValue()) {\n        var value = $(\".customerUsageType input\").val();\n        doc.$set[\"taxSettings.customerUsageType\"] = value;\n      }\n\n      if (oldType && entityCodeList.indexOf(oldType) < 0) {\n        delete doc.$unset; // there's existing custom value.... this prevent autoform override\n      }\n\n      return doc;\n    }\n  }\n});\n/**\n * @summary Checks if customerUsageType is set to \"custom\"\n * @param {String} formId - Id of the Autoform instance..\n * @returns {boolean} - true if Custom Entity Type is set\n */\n\nfunction isCustomValue(formId) {\n  var formData = AutoForm.getFormValues(formId);\n\n  var value = _get(formData, \"insertDoc.taxSettings.customerUsageType\");\n\n  return value === \"CUSTOM USER INPUT\";\n}","map":{"version":3,"sources":["imports/plugins/included/taxes-avalara/client/accounts/exemption.js"],"names":["_get","module","watch","require","v","Meteor","Template","$","AutoForm","Reaction","i18next","Packages","Accounts","AccountsSchema","TaxEntityCodes","entityCodeList","currentAccount","taxSettingsPanel","onCreated","subscribe","userId","helpers","account","instance","subscriptionsReady","findOne","member","makeUniqueId","accountsSchema","entityCodes","customOption","label","t","value","find","map","entityCode","Object","assign","name","code","a","concat","events","event","stopPropagation","formId","currentTarget","closest","attr","isCustomValue","currType","indexOf","val","toggleClass","addClass","avalaraPackage","shopId","getShopId","isAvalaraEnabled","currentCodes","fetch","length","call","error","Alerts","toast","message","forEach","insert","addHooks","before","update","doc","oldType","$set","$unset","formData","getFormValues"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { $ } from \"meteor/jquery\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages, Accounts } from \"/lib/collections\";\nimport { Accounts as AccountsSchema } from \"/lib/collections/schemas/accounts\";\nimport { TaxEntityCodes } from \"/client/collections\";\n\nlet entityCodeList = [];\nlet currentAccount;\n\nTemplate.taxSettingsPanel.onCreated(function () {\n  this.subscribe(\"UserAccount\", Meteor.userId());\n});\n\nTemplate.taxSettingsPanel.helpers({\n  account() {\n    if (Template.instance().subscriptionsReady()) {\n      const account = Accounts.findOne(this.member.userId);\n      currentAccount = account;\n      return account;\n    }\n\n    return null;\n  },\n  makeUniqueId() {\n    return `tax-settings-form-${this.member.userId}`;\n  },\n  accountsSchema() {\n    return AccountsSchema;\n  },\n  entityCodes() {\n    const customOption = [{\n      label: i18next.t(\"admin.taxSettings.entityCodeCustomLabel\"),\n      value: \"CUSTOM USER INPUT\"\n    }];\n\n    const entityCodes = TaxEntityCodes.find().map((entityCode) => Object.assign({}, entityCode, {\n      label: entityCode.name,\n      value: entityCode.code\n    }));\n    entityCodeList = (entityCodes || []).map((a) => a.code);\n    return (entityCodes || []).concat(customOption);\n  }\n});\n\nTemplate.taxSettingsPanel.events({\n  \"change [data-event-action=customType]\"(event) {\n    event.stopPropagation();\n    const formId = $(event.currentTarget.closest(\"form\")).attr(\"id\");\n\n    if (isCustomValue(formId)) {\n      // show input field for custom; pre-fill with existing custom val\n      const currType = _.get(currentAccount, \"taxSettings.customerUsageType\", \"\");\n      if (entityCodeList.indexOf(currType) < 0) {\n        $(\".customerUsageType input\").val(currType);\n      }\n      return $(\".customerUsageType\").toggleClass(\"hide\");\n    }\n\n    $(\".customerUsageType\").addClass(\"hide\");\n  }\n});\n\nTemplate.taxSettingsPanel.onCreated(() => {\n  const avalaraPackage = Packages.findOne({\n    name: \"taxes-avalara\",\n    shopId: Reaction.getShopId()\n  });\n  const isAvalaraEnabled = _.get(avalaraPackage, \"settings.avalara.enabled\", false);\n  const currentCodes = TaxEntityCodes.find().fetch();\n\n  if (isAvalaraEnabled && !currentCodes.length) {\n    Meteor.call(\"avalara/getEntityCodes\", (error, entityCodes) => {\n      if (error) {\n        return Alerts.toast(`${i18next.t(\"settings.apiError\")} ${error.message}`, \"error\");\n      }\n      (entityCodes || []).forEach((entityCode) => TaxEntityCodes.insert(entityCode));\n    });\n  }\n});\n\nAutoForm.addHooks(null, {\n  before: {\n    update(doc) {\n      const oldType = _.get(Template.instance(), \"data.doc.taxSettings.customerUsageType\");\n      if (isCustomValue()) {\n        const value = $(\".customerUsageType input\").val();\n        doc.$set[\"taxSettings.customerUsageType\"] = value;\n      }\n      if (oldType && entityCodeList.indexOf(oldType) < 0) {\n        delete doc.$unset; // there's existing custom value.... this prevent autoform override\n      }\n\n      return doc;\n    }\n  }\n});\n\n/**\n * @summary Checks if customerUsageType is set to \"custom\"\n * @param {String} formId - Id of the Autoform instance..\n * @returns {boolean} - true if Custom Entity Type is set\n */\nfunction isCustomValue(formId) {\n  const formData = AutoForm.getFormValues(formId);\n  const value = _.get(formData, \"insertDoc.taxSettings.customerUsageType\");\n  return value === \"CUSTOM USER INPUT\";\n}\n"]},"sourceType":"script","hash":"a738b16add5278f685a96aa4d3202ec2e29d2c04"}
