{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/revisions/client/components/simpleDiff.js","filename":"imports/plugins/core/revisions/client/components/simpleDiff.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/revisions/client/components/simpleDiff.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/revisions/client/components/simpleDiff.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/revisions/client/components/simpleDiff.js"}},"code":"var _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar SimpleDiff =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(SimpleDiff, _Component);\n\n  function SimpleDiff() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = SimpleDiff.prototype;\n\n  _proto.renderDiff = function () {\n    function renderDiff() {\n      var diff = this.props.diff;\n      return diff.map(function (change, index) {\n        var rightHandSide = change.rhs && change.rhs.toString();\n        var leftHandSide = change.lhs && change.lhs.toString();\n\n        switch (change.kind) {\n          // Array change\n          case \"A\":\n            return React.createElement(\"tr\", {\n              className: \"success\",\n              key: index\n            }, React.createElement(\"td\", null, React.createElement(\"i\", {\n              className: \"fa fa-plus\"\n            })), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, leftHandSide), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, rightHandSide));\n          // Added property / element\n\n          case \"N\":\n            return React.createElement(\"tr\", {\n              className: \"success\",\n              key: index\n            }, React.createElement(\"td\", null, React.createElement(\"i\", {\n              className: \"fa fa-plus\"\n            })), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, leftHandSide), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, rightHandSide));\n          // Edited property or element\n\n          case \"E\":\n            return React.createElement(\"tr\", {\n              className: \"warning\",\n              key: index\n            }, React.createElement(\"td\", null, React.createElement(\"i\", {\n              className: \"fa fa-pencil\"\n            })), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, leftHandSide), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, rightHandSide));\n          // Removed property / element\n\n          case \"D\":\n            return React.createElement(\"tr\", {\n              className: \"danger\",\n              key: index\n            }, React.createElement(\"td\", null, React.createElement(\"i\", {\n              className: \"fa fa-times\"\n            })), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, leftHandSide), React.createElement(\"td\", {\n              style: {\n                whiteSpace: \"normal\"\n              }\n            }, rightHandSide));\n\n          default:\n            return null;\n        }\n      });\n    }\n\n    return renderDiff;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", null, React.createElement(\"table\", {\n        className: \"table table-bordered\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null), React.createElement(\"th\", null, \"Current\"), React.createElement(\"th\", null, \"Change\"))), React.createElement(\"tbody\", null, this.renderDiff())));\n    }\n\n    return render;\n  }();\n\n  return SimpleDiff;\n}(Component);\n\nSimpleDiff.defaultProps = {\n  diff: []\n};\nSimpleDiff.propTypes = {\n  diff: PropTypes.arrayOf(PropTypes.object)\n};\nmodule.exportDefault(SimpleDiff);","map":{"version":3,"sources":["imports/plugins/core/revisions/client/components/simpleDiff.js"],"names":["React","Component","module","watch","require","v","PropTypes","SimpleDiff","renderDiff","diff","props","map","change","index","rightHandSide","rhs","toString","leftHandSide","lhs","kind","whiteSpace","render","defaultProps","propTypes","arrayOf","object","exportDefault"],"mappings":";;;;AAAA,IAAIA,KAAJ,EAAUC,SAAV;AAAoBC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ,GAApB;AAAqBJ,WAArB,YAA+BI,CAA/B,EAAiC;AAACJ,gBAAUI,CAAV;AAAY;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,SAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;;IAG7GE,U;;;;;;;;;;;SACJC,U;0BAAa;AAAA,UACHC,IADG,GACM,KAAKC,KADX,CACHD,IADG;AAGX,aAAOA,KAAKE,GAAL,CAAS,UAACC,MAAD,EAASC,KAAT,EAAmB;AACjC,YAAMC,gBAAgBF,OAAOG,GAAP,IAAcH,OAAOG,GAAP,CAAWC,QAAX,EAApC;AACA,YAAMC,eAAeL,OAAOM,GAAP,IAAcN,OAAOM,GAAP,CAAWF,QAAX,EAAnC;;AAEA,gBAAQJ,OAAOO,IAAf;AACE;AACA,eAAK,GAAL;AACE,mBACE;AAAI,yBAAU,SAAd;AAAwB,mBAAKN;AAA7B,eACE,gCAAI;AAAG,yBAAU;AAAb,cAAJ,CADF,EAEE;AAAI,qBAAO;AAAEO,4BAAY;AAAd;AAAX,eAAsCH,YAAtC,CAFF,EAGE;AAAI,qBAAO;AAAEG,4BAAY;AAAd;AAAX,eAAsCN,aAAtC,CAHF,CADF;AAQF;;AACA,eAAK,GAAL;AACE,mBACE;AAAI,yBAAU,SAAd;AAAwB,mBAAKD;AAA7B,eACE,gCAAI;AAAG,yBAAU;AAAb,cAAJ,CADF,EAEE;AAAI,qBAAO;AAAEO,4BAAY;AAAd;AAAX,eAAsCH,YAAtC,CAFF,EAGE;AAAI,qBAAO;AAAEG,4BAAY;AAAd;AAAX,eAAsCN,aAAtC,CAHF,CADF;AAQF;;AACA,eAAK,GAAL;AACE,mBACE;AAAI,yBAAU,SAAd;AAAwB,mBAAKD;AAA7B,eACE,gCAAI;AAAG,yBAAU;AAAb,cAAJ,CADF,EAEE;AAAI,qBAAO;AAAEO,4BAAY;AAAd;AAAX,eAAsCH,YAAtC,CAFF,EAGE;AAAI,qBAAO;AAAEG,4BAAY;AAAd;AAAX,eAAsCN,aAAtC,CAHF,CADF;AAQF;;AACA,eAAK,GAAL;AACE,mBACE;AAAI,yBAAU,QAAd;AAAuB,mBAAKD;AAA5B,eACE,gCAAI;AAAG,yBAAU;AAAb,cAAJ,CADF,EAEE;AAAI,qBAAO;AAAEO,4BAAY;AAAd;AAAX,eAAsCH,YAAtC,CAFF,EAGE;AAAI,qBAAO;AAAEG,4BAAY;AAAd;AAAX,eAAsCN,aAAtC,CAHF,CADF;;AAOF;AACE,mBAAO,IAAP;AAzCJ;AA2CD,OA/CM,CAAP;AAgDD;;;;;SAEDO,M;sBAAS;AACP,aACE,iCACE;AAAO,mBAAU;AAAjB,SACE,mCACE,gCACE,+BADF,EAEE,gCAAK,SAAL,CAFF,EAGE,gCAAK,QAAL,CAHF,CADF,CADF,EAQE,mCACG,KAAKb,UAAL,EADH,CARF,CADF,CADF;AAgBD;;;;;;EAvEsBP,S;;AA0EzBM,WAAWe,YAAX,GAA0B;AACxBb,QAAM;AADkB,CAA1B;AAIAF,WAAWgB,SAAX,GAAuB;AACrBd,QAAMH,UAAUkB,OAAV,CAAkBlB,UAAUmB,MAA5B;AADe,CAAvB;AAjFAvB,OAAOwB,aAAP,CAqFenB,UArFf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass SimpleDiff extends Component {\n  renderDiff() {\n    const { diff } = this.props;\n\n    return diff.map((change, index) => {\n      const rightHandSide = change.rhs && change.rhs.toString();\n      const leftHandSide = change.lhs && change.lhs.toString();\n\n      switch (change.kind) {\n        // Array change\n        case \"A\":\n          return (\n            <tr className=\"success\" key={index}>\n              <td><i className=\"fa fa-plus\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n\n        // Added property / element\n        case \"N\":\n          return (\n            <tr className=\"success\" key={index}>\n              <td><i className=\"fa fa-plus\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n\n        // Edited property or element\n        case \"E\":\n          return (\n            <tr className=\"warning\" key={index}>\n              <td><i className=\"fa fa-pencil\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n\n        // Removed property / element\n        case \"D\":\n          return (\n            <tr className=\"danger\" key={index}>\n              <td><i className=\"fa fa-times\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n        default:\n          return null;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th />\n              <th>{\"Current\"}</th>\n              <th>{\"Change\"}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderDiff()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nSimpleDiff.defaultProps = {\n  diff: []\n};\n\nSimpleDiff.propTypes = {\n  diff: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default SimpleDiff;\n"]},"sourceType":"script","hash":"efc2094a09b4184e4e30ef8b9bbb84a54b0ec474"}
