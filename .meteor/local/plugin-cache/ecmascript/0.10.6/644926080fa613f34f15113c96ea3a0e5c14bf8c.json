{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/router/client/browserRouter.js","filename":"imports/plugins/core/router/client/browserRouter.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/router/client/browserRouter.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/router/client/browserRouter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/router/client/browserRouter.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  getRootNode: function () {\n    return getRootNode;\n  },\n  initBrowserRouter: function () {\n    return initBrowserRouter;\n  }\n});\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar ReactDOM;\nmodule.watch(require(\"react-dom\"), {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 2);\nvar matchPath;\nmodule.watch(require(\"react-router\"), {\n  matchPath: function (v) {\n    matchPath = v;\n  }\n}, 3);\nvar ReactRouter;\nmodule.watch(require(\"react-router-dom\"), {\n  Router: function (v) {\n    ReactRouter = v;\n  }\n}, 4);\nvar equal;\nmodule.watch(require(\"deep-equal\"), {\n  \"default\": function (v) {\n    equal = v;\n  }\n}, 5);\nvar pathToRegexp;\nmodule.watch(require(\"path-to-regexp\"), {\n  \"default\": function (v) {\n    pathToRegexp = v;\n  }\n}, 6);\nvar queryParse;\nmodule.watch(require(\"query-parse\"), {\n  \"default\": function (v) {\n    queryParse = v;\n  }\n}, 7);\nvar Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 8);\nvar Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 9);\nvar Components;\nmodule.watch(require(\"../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  }\n}, 10);\nvar Reaction;\nmodule.watch(require(\"../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 11);\nvar TranslationProvider;\nmodule.watch(require(\"../../ui/client/providers\"), {\n  TranslationProvider: function (v) {\n    TranslationProvider = v;\n  }\n}, 12);\nvar MetaData;\nmodule.watch(require(\"../../../../../lib/api/router/metadata\"), {\n  MetaData: function (v) {\n    MetaData = v;\n  }\n}, 13);\nvar Router;\nmodule.watch(require(\"../lib\"), {\n  Router: function (v) {\n    Router = v;\n  }\n}, 14);\nvar _Router = Router,\n    history = _Router.history;\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(BrowserRouter, _Component);\n\n  function BrowserRouter() {\n    var _temp, _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleLocationChange = function (location) {\n      // Find all matching paths\n      var foundPaths = Router.routes.filter(function (pathObject) {\n        return matchPath(location.pathname, {\n          path: pathObject.route,\n          exact: true\n        });\n      }); // If no matching path is found, fetch the not-found route definition\n\n      if (foundPaths.length === 0 && location.pathname !== \"not-found\") {\n        foundPaths = Router.routes.filter(function (pathObject) {\n          return matchPath(\"/not-found\", {\n            path: pathObject.route,\n            exact: true\n          });\n        });\n      } // If we have a found path, take the first match\n\n\n      var foundPath = foundPaths.length && foundPaths[0];\n      var params = {}; // Process the params from the found path definiton\n\n      if (foundPath) {\n        var keys = [];\n        var re = pathToRegexp(foundPath.route, keys); // Create parser with route regex\n\n        var values = re.exec(location.pathname); // Process values\n        // Create params object\n\n        keys.forEach(function (key, index) {\n          params[key.name] = values[index + 1];\n        });\n      } // Get serach (query) string from current location\n\n\n      var search = location.search; // Remove the ? if it exists at the beginning\n\n      if (typeof search === \"string\" && search.startsWith(\"?\")) {\n        search = search.substr(1);\n      } // Create object of all necessary data for the current route\n\n\n      var routeData = {\n        route: (0, _objectSpread2.default)({}, foundPath, {\n          name: foundPath.name,\n          path: location.pathname,\n          fullPath: \"\" + location.pathname + location.search\n        }),\n        params: params,\n        query: queryParse.toObject(search),\n        // Parse query string into object\n        payload: location\n      }; // The currentRoute is equal to the routeData.route that we just setup\n\n      var currentRoute = routeData.route || {}; // Get the previousRouteData, which is the Router.current() just before it changes.\n      // Default to empty objects to guard against error\n\n      var previousRouteData = Router.current() || {};\n      var previousRoute = previousRouteData.route; // If routes are not identical, run onExit and onEnter\n\n      if (!equal({\n        params: previousRouteData.params,\n        query: previousRouteData.query,\n        route: previousRouteData.route\n      }, {\n        params: routeData.params,\n        query: routeData.query,\n        route: routeData.route\n      })) {\n        // Run onExit hooks if the previousRoute exists\n        if (previousRoute) {\n          Router.Hooks.run(\"onExit\", \"GLOBAL\", previousRouteData);\n          Router.Hooks.run(\"onExit\", previousRoute.name, previousRouteData);\n        } // Set current route reactive-var\n\n\n        Router.setCurrentRoute(routeData); // Run on enter hooks for the new route\n\n        Router.Hooks.run(\"onEnter\", \"GLOBAL\", routeData);\n        Router.Hooks.run(\"onEnter\", currentRoute.name, routeData);\n      }\n\n      MetaData.init(routeData);\n    }, _temp) || (0, _assertThisInitialized2.default)(_this);\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.componentWillMount = function () {\n    function componentWillMount() {\n      this.unsubscribeFromHistory = history.listen(this.handleLocationChange);\n      this.handleLocationChange(history.location);\n    }\n\n    return componentWillMount;\n  }();\n\n  _proto.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      if (this.unsubscribeFromHistory) this.unsubscribeFromHistory();\n    }\n\n    return componentWillUnmount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(ReactRouter, this.props);\n    }\n\n    return render;\n  }();\n\n  return BrowserRouter;\n}(Component);\n\nBrowserRouter.propTypes = {\n  children: PropTypes.node,\n  history: PropTypes.object,\n  store: PropTypes.object\n};\nBrowserRouter.contextTypes = {\n  store: PropTypes.object\n};\n\nfunction getRootNode() {\n  var rootNode = document.getElementById(\"react-root\");\n\n  if (rootNode) {\n    return rootNode;\n  }\n\n  var rootNodeHtml = \"<div id='react-root'></div>\";\n  var body = document.getElementsByTagName(\"body\")[0];\n  body.insertAdjacentHTML(\"beforeend\", rootNodeHtml);\n  rootNode = document.getElementById(\"react-root\");\n  return rootNode;\n}\n\nfunction initBrowserRouter() {\n  Router.initPackageRoutes({\n    reactionContext: Reaction,\n    indexRoute: Session.get(\"INDEX_OPTIONS\") || {}\n  });\n  Router.Hooks.onEnter(MetaData.init);\n  Tracker.autorun(function (computation) {\n    if (Router.ready()) {\n      ReactDOM.render(React.createElement(BrowserRouter, {\n        history: history\n      }, React.createElement(TranslationProvider, null, React.createElement(Components.App, {\n        children: Router.reactComponents\n      }))), getRootNode());\n      computation.stop();\n    }\n  });\n}\n\nmodule.exportDefault(BrowserRouter);","map":{"version":3,"sources":["imports/plugins/core/router/client/browserRouter.js"],"names":["module","export","getRootNode","initBrowserRouter","React","Component","watch","require","v","PropTypes","ReactDOM","matchPath","ReactRouter","Router","equal","pathToRegexp","queryParse","Session","Tracker","Components","Reaction","TranslationProvider","MetaData","history","BrowserRouter","handleLocationChange","location","foundPaths","routes","filter","pathObject","pathname","path","route","exact","length","foundPath","params","keys","re","values","exec","forEach","key","index","name","search","startsWith","substr","routeData","fullPath","query","toObject","payload","currentRoute","previousRouteData","current","previousRoute","Hooks","run","setCurrentRoute","init","componentWillMount","unsubscribeFromHistory","listen","componentWillUnmount","render","props","propTypes","children","node","object","store","contextTypes","rootNode","document","getElementById","rootNodeHtml","body","getElementsByTagName","insertAdjacentHTML","initPackageRoutes","reactionContext","indexRoute","get","onEnter","autorun","computation","ready","reactComponents","stop","exportDefault"],"mappings":";;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,eAAY;AAAA,WAAIA,WAAJ;AAAA,GAAb;AAA6BC,qBAAkB;AAAA,WAAIA,iBAAJ;AAAA;AAA/C,CAAd;AAAqF,IAAIC,KAAJ,EAAUC,SAAV;AAAoBL,OAAOM,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ,GAApB;AAAqBH,WAArB,YAA+BG,CAA/B,EAAiC;AAACH,gBAAUG,CAAV;AAAY;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,SAAJ;AAAcT,OAAOM,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,QAAJ;AAAaV,OAAOM,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA,uBAASC,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW;AAAvB,CAAlC,EAA2D,CAA3D;AAA8D,IAAIG,SAAJ;AAAcX,OAAOM,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACI,WAAD,YAAWH,CAAX,EAAa;AAACG,gBAAUH,CAAV;AAAY;AAA1B,CAArC,EAAiE,CAAjE;AAAoE,IAAII,WAAJ;AAAgBZ,OAAOM,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACM,QAAD,YAAQL,CAAR,EAAU;AAACI,kBAAYJ,CAAZ;AAAc;AAAzB,CAAzC,EAAoE,CAApE;AAAuE,IAAIM,KAAJ;AAAUd,OAAOM,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACM,YAAMN,CAAN;AAAQ;AAApB,CAAnC,EAAyD,CAAzD;AAA4D,IAAIO,YAAJ;AAAiBf,OAAOM,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAAA,uBAASC,CAAT,EAAW;AAACO,mBAAaP,CAAb;AAAe;AAA3B,CAAvC,EAAoE,CAApE;AAAuE,IAAIQ,UAAJ;AAAehB,OAAOM,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAAA,uBAASC,CAAT,EAAW;AAACQ,iBAAWR,CAAX;AAAa;AAAzB,CAApC,EAA+D,CAA/D;AAAkE,IAAIS,OAAJ;AAAYjB,OAAOM,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACU,SAAD,YAAST,CAAT,EAAW;AAACS,cAAQT,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIU,OAAJ;AAAYlB,OAAOM,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACW,SAAD,YAASV,CAAT,EAAW;AAACU,cAAQV,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIW,UAAJ;AAAenB,OAAOM,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACY,YAAD,YAAYX,CAAZ,EAAc;AAACW,iBAAWX,CAAX;AAAa;AAA5B,CAA7C,EAA2E,EAA3E;AAA+E,IAAIY,QAAJ;AAAapB,OAAOM,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACa,UAAD,YAAUZ,CAAV,EAAY;AAACY,eAASZ,CAAT;AAAW;AAAxB,CAAlD,EAA4E,EAA5E;AAAgF,IAAIa,mBAAJ;AAAwBrB,OAAOM,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACc,qBAAD,YAAqBb,CAArB,EAAuB;AAACa,0BAAoBb,CAApB;AAAsB;AAA9C,CAAlD,EAAkG,EAAlG;AAAsG,IAAIc,QAAJ;AAAatB,OAAOM,KAAP,CAAaC,QAAQ,wCAAR,CAAb,EAA+D;AAACe,UAAD,YAAUd,CAAV,EAAY;AAACc,eAASd,CAAT;AAAW;AAAxB,CAA/D,EAAyF,EAAzF;AAA6F,IAAIK,MAAJ;AAAWb,OAAOM,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACM,QAAD,YAAQL,CAAR,EAAU;AAACK,aAAOL,CAAP;AAAS;AAApB,CAA/B,EAAqD,EAArD;cAgBjyCK,M;IAAZU,O,WAAAA,O;;IAEFC,a;;;;;;;;;;;;kGAoBJC,oB,GAAuB,UAACC,QAAD,EAAc;AACnC;AACA,UAAIC,aAAad,OAAOe,MAAP,CAAcC,MAAd,CAAqB,UAACC,UAAD;AAAA,eAAgBnB,UAAUe,SAASK,QAAnB,EAA6B;AACjFC,gBAAMF,WAAWG,KADgE;AAEjFC,iBAAO;AAF0E,SAA7B,CAAhB;AAAA,OAArB,CAAjB,CAFmC,CAOnC;;AACA,UAAIP,WAAWQ,MAAX,KAAsB,CAAtB,IAA2BT,SAASK,QAAT,KAAsB,WAArD,EAAkE;AAChEJ,qBAAad,OAAOe,MAAP,CAAcC,MAAd,CAAqB,UAACC,UAAD;AAAA,iBAAgBnB,UAAU,YAAV,EAAwB;AACxEqB,kBAAMF,WAAWG,KADuD;AAExEC,mBAAO;AAFiE,WAAxB,CAAhB;AAAA,SAArB,CAAb;AAID,OAbkC,CAenC;;;AACA,UAAME,YAAYT,WAAWQ,MAAX,IAAqBR,WAAW,CAAX,CAAvC;AACA,UAAMU,SAAS,EAAf,CAjBmC,CAmBnC;;AACA,UAAID,SAAJ,EAAe;AACb,YAAME,OAAO,EAAb;AACA,YAAMC,KAAKxB,aAAaqB,UAAUH,KAAvB,EAA8BK,IAA9B,CAAX,CAFa,CAEmC;;AAChD,YAAME,SAASD,GAAGE,IAAH,CAAQf,SAASK,QAAjB,CAAf,CAHa,CAG8B;AAE3C;;AACAO,aAAKI,OAAL,CAAa,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC3BP,iBAAOM,IAAIE,IAAX,IAAmBL,OAAOI,QAAQ,CAAf,CAAnB;AACD,SAFD;AAGD,OA7BkC,CA+BnC;;;AA/BmC,UAgC7BE,MAhC6B,GAgClBpB,QAhCkB,CAgC7BoB,MAhC6B,EAkCnC;;AACA,UAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,OAAOC,UAAP,CAAkB,GAAlB,CAAlC,EAA0D;AACxDD,iBAASA,OAAOE,MAAP,CAAc,CAAd,CAAT;AACD,OArCkC,CAuCnC;;;AACA,UAAMC,YAAY;AAChBhB,+CACKG,SADL;AAEES,gBAAMT,UAAUS,IAFlB;AAGEb,gBAAMN,SAASK,QAHjB;AAIEmB,yBAAaxB,SAASK,QAAtB,GAAiCL,SAASoB;AAJ5C,UADgB;AAOhBT,sBAPgB;AAQhBc,eAAOnC,WAAWoC,QAAX,CAAoBN,MAApB,CARS;AAQoB;AACpCO,iBAAS3B;AATO,OAAlB,CAxCmC,CAoDnC;;AACA,UAAM4B,eAAeL,UAAUhB,KAAV,IAAmB,EAAxC,CArDmC,CAuDnC;AACA;;AACA,UAAMsB,oBAAoB1C,OAAO2C,OAAP,MAAoB,EAA9C;AACA,UAAMC,gBAAgBF,kBAAkBtB,KAAxC,CA1DmC,CA4DnC;;AACA,UAAI,CAACnB,MAAM;AACTuB,gBAAQkB,kBAAkBlB,MADjB;AAETc,eAAOI,kBAAkBJ,KAFhB;AAGTlB,eAAOsB,kBAAkBtB;AAHhB,OAAN,EAIF;AACDI,gBAAQY,UAAUZ,MADjB;AAEDc,eAAOF,UAAUE,KAFhB;AAGDlB,eAAOgB,UAAUhB;AAHhB,OAJE,CAAL,EAQI;AACF;AACA,YAAIwB,aAAJ,EAAmB;AACjB5C,iBAAO6C,KAAP,CAAaC,GAAb,CAAiB,QAAjB,EAA2B,QAA3B,EAAqCJ,iBAArC;AACA1C,iBAAO6C,KAAP,CAAaC,GAAb,CAAiB,QAAjB,EAA2BF,cAAcZ,IAAzC,EAA+CU,iBAA/C;AACD,SALC,CAOF;;;AACA1C,eAAO+C,eAAP,CAAuBX,SAAvB,EARE,CASF;;AACApC,eAAO6C,KAAP,CAAaC,GAAb,CAAiB,SAAjB,EAA4B,QAA5B,EAAsCV,SAAtC;AACApC,eAAO6C,KAAP,CAAaC,GAAb,CAAiB,SAAjB,EAA4BL,aAAaT,IAAzC,EAA+CI,SAA/C;AACD;;AACD3B,eAASuC,IAAT,CAAcZ,SAAd;AACD,K;;;;;SA5FDa,kB;kCAAqB;AACnB,WAAKC,sBAAL,GAA8BxC,QAAQyC,MAAR,CAAe,KAAKvC,oBAApB,CAA9B;AACA,WAAKA,oBAAL,CAA0BF,QAAQG,QAAlC;AACD;;;;;SAEDuC,oB;oCAAuB;AACrB,UAAI,KAAKF,sBAAT,EAAiC,KAAKA,sBAAL;AAClC;;;;;SAuFDG,M;sBAAS;AACP,aACE,oBAAC,WAAD,EAAiB,KAAKC,KAAtB,CADF;AAGD;;;;;;EA7GyB9D,S;;AAAtBmB,a,CACG4C,S,GAAY;AACjBC,YAAU5D,UAAU6D,IADH;AAEjB/C,WAASd,UAAU8D,MAFF;AAGjBC,SAAO/D,UAAU8D;AAHA,C;AADf/C,a,CAOGiD,Y,GAAe;AACpBD,SAAO/D,UAAU8D;AADG,C;;AAyGjB,SAASrE,WAAT,GAAuB;AAC5B,MAAIwE,WAAWC,SAASC,cAAT,CAAwB,YAAxB,CAAf;;AAEA,MAAIF,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD;;AACD,MAAMG,eAAe,6BAArB;AACA,MAAMC,OAAOH,SAASI,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AAEAD,OAAKE,kBAAL,CAAwB,WAAxB,EAAqCH,YAArC;AACAH,aAAWC,SAASC,cAAT,CAAwB,YAAxB,CAAX;AAEA,SAAOF,QAAP;AACD;;AAEM,SAASvE,iBAAT,GAA6B;AAClCU,SAAOoE,iBAAP,CAAyB;AACvBC,qBAAiB9D,QADM;AAEvB+D,gBAAYlE,QAAQmE,GAAR,CAAY,eAAZ,KAAgC;AAFrB,GAAzB;AAKAvE,SAAO6C,KAAP,CAAa2B,OAAb,CAAqB/D,SAASuC,IAA9B;AAEA3C,UAAQoE,OAAR,CAAgB,UAACC,WAAD,EAAiB;AAC/B,QAAI1E,OAAO2E,KAAP,EAAJ,EAAoB;AAClB9E,eAASwD,MAAT,CACE,oBAAC,aAAD;AAAe,iBAAS3C;AAAxB,SACE,oBAAC,mBAAD,QACE,oBAAC,UAAD,CAAY,GAAZ;AAAgB,kBAAUV,OAAO4E;AAAjC,QADF,CADF,CADF,EAKqBvF,aALrB;AAOAqF,kBAAYG,IAAZ;AACD;AACF,GAXD;AAYD;;AArKD1F,OAAO2F,aAAP,CAuKenE,aAvKf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport { matchPath } from \"react-router\";\nimport { Router as ReactRouter } from \"react-router-dom\";\nimport equal from \"deep-equal\";\nimport pathToRegexp from \"path-to-regexp\";\nimport queryParse from \"query-parse\";\nimport { Session } from \"meteor/session\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Components } from \"@reactioncommerce/reaction-components\";\nimport { Reaction } from \"/client/api\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport { MetaData } from \"/lib/api/router/metadata\";\nimport { Router } from \"../lib\";\n\nconst { history } = Router;\n\nclass BrowserRouter extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object,\n    store: PropTypes.object\n  }\n\n  static contextTypes = {\n    store: PropTypes.object\n  }\n\n  componentWillMount() {\n    this.unsubscribeFromHistory = history.listen(this.handleLocationChange);\n    this.handleLocationChange(history.location);\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribeFromHistory) this.unsubscribeFromHistory();\n  }\n\n  handleLocationChange = (location) => {\n    // Find all matching paths\n    let foundPaths = Router.routes.filter((pathObject) => matchPath(location.pathname, {\n      path: pathObject.route,\n      exact: true\n    }));\n\n    // If no matching path is found, fetch the not-found route definition\n    if (foundPaths.length === 0 && location.pathname !== \"not-found\") {\n      foundPaths = Router.routes.filter((pathObject) => matchPath(\"/not-found\", {\n        path: pathObject.route,\n        exact: true\n      }));\n    }\n\n    // If we have a found path, take the first match\n    const foundPath = foundPaths.length && foundPaths[0];\n    const params = {};\n\n    // Process the params from the found path definiton\n    if (foundPath) {\n      const keys = [];\n      const re = pathToRegexp(foundPath.route, keys); // Create parser with route regex\n      const values = re.exec(location.pathname); // Process values\n\n      // Create params object\n      keys.forEach((key, index) => {\n        params[key.name] = values[index + 1];\n      });\n    }\n\n    // Get serach (query) string from current location\n    let { search } = location;\n\n    // Remove the ? if it exists at the beginning\n    if (typeof search === \"string\" && search.startsWith(\"?\")) {\n      search = search.substr(1);\n    }\n\n    // Create object of all necessary data for the current route\n    const routeData = {\n      route: {\n        ...foundPath,\n        name: foundPath.name,\n        path: location.pathname,\n        fullPath: `${location.pathname}${location.search}`\n      },\n      params,\n      query: queryParse.toObject(search), // Parse query string into object\n      payload: location\n    };\n\n    // The currentRoute is equal to the routeData.route that we just setup\n    const currentRoute = routeData.route || {};\n\n    // Get the previousRouteData, which is the Router.current() just before it changes.\n    // Default to empty objects to guard against error\n    const previousRouteData = Router.current() || {};\n    const previousRoute = previousRouteData.route;\n\n    // If routes are not identical, run onExit and onEnter\n    if (!equal({\n      params: previousRouteData.params,\n      query: previousRouteData.query,\n      route: previousRouteData.route\n    }, {\n      params: routeData.params,\n      query: routeData.query,\n      route: routeData.route\n    })) {\n      // Run onExit hooks if the previousRoute exists\n      if (previousRoute) {\n        Router.Hooks.run(\"onExit\", \"GLOBAL\", previousRouteData);\n        Router.Hooks.run(\"onExit\", previousRoute.name, previousRouteData);\n      }\n\n      // Set current route reactive-var\n      Router.setCurrentRoute(routeData);\n      // Run on enter hooks for the new route\n      Router.Hooks.run(\"onEnter\", \"GLOBAL\", routeData);\n      Router.Hooks.run(\"onEnter\", currentRoute.name, routeData);\n    }\n    MetaData.init(routeData);\n  }\n\n  render() {\n    return (\n      <ReactRouter {...this.props} />\n    );\n  }\n}\n\nexport function getRootNode() {\n  let rootNode = document.getElementById(\"react-root\");\n\n  if (rootNode) {\n    return rootNode;\n  }\n  const rootNodeHtml = \"<div id='react-root'></div>\";\n  const body = document.getElementsByTagName(\"body\")[0];\n\n  body.insertAdjacentHTML(\"beforeend\", rootNodeHtml);\n  rootNode = document.getElementById(\"react-root\");\n\n  return rootNode;\n}\n\nexport function initBrowserRouter() {\n  Router.initPackageRoutes({\n    reactionContext: Reaction,\n    indexRoute: Session.get(\"INDEX_OPTIONS\") || {}\n  });\n\n  Router.Hooks.onEnter(MetaData.init);\n\n  Tracker.autorun((computation) => {\n    if (Router.ready()) {\n      ReactDOM.render((\n        <BrowserRouter history={history}>\n          <TranslationProvider>\n            <Components.App children={Router.reactComponents} />\n          </TranslationProvider>\n        </BrowserRouter>), getRootNode());\n\n      computation.stop();\n    }\n  });\n}\n\nexport default BrowserRouter;\n"]},"sourceType":"script","hash":"644926080fa613f34f15113c96ea3a0e5c14bf8c"}
