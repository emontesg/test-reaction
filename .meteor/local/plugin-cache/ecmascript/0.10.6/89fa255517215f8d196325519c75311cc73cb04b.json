{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/product-variant/components/customer/productGridItem.js","filename":"imports/plugins/included/product-variant/components/customer/productGridItem.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/product-variant/components/customer/productGridItem.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/product-variant/components/customer/productGridItem.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/product-variant/components/customer/productGridItem.js"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.watch(require(\"classnames\"), {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet formatPriceString, Router;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  formatPriceString(v) {\n    formatPriceString = v;\n  },\n\n  Router(v) {\n    Router = v;\n  }\n\n}, 3);\nlet registerComponent, Components;\nmodule.watch(require(\"../../../../core/components/lib\"), {\n  registerComponent(v) {\n    registerComponent = v;\n  },\n\n  Components(v) {\n    Components = v;\n  }\n\n}, 4);\n\nclass ProductGridItem extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.handleClick = event => {\n      event.preventDefault();\n      Router.go(this.productURL);\n    }, _temp;\n  }\n\n  get productURL() {\n    const {\n      product: {\n        handle\n      }\n    } = this.props;\n    return Router.pathFor(\"product\", {\n      hash: {\n        handle\n      }\n    });\n  } // get weight class name\n\n\n  get weightClass() {\n    const {\n      weight\n    } = this.props.position || {\n      weight: 0\n    };\n\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n\n      case 2:\n        return \"product-large\";\n\n      default:\n        return \"product-small\";\n    }\n  } // get notice class names\n\n\n  get noticeClassNames() {\n    const {\n      product: {\n        isSoldOut,\n        isLowQuantity,\n        isBackorder\n      }\n    } = this.props;\n    return classnames({\n      \"badge\": isSoldOut || isLowQuantity,\n      \"variant-qty-sold-out\": isSoldOut || isSoldOut && isBackorder,\n      \"badge-danger\": isSoldOut && !isBackorder,\n      \"badge-low-inv-warning\": isLowQuantity && !isSoldOut\n    });\n  } // get product item class names\n\n\n  get productClassNames() {\n    const {\n      position\n    } = this.props;\n    return classnames({\n      \"product-grid-item\": true,\n      [this.weightClass]: true,\n      \"pinned\": position.pinned\n    });\n  } // handle click event\n\n\n  // notice\n  renderNotices() {\n    const {\n      product: {\n        isSoldOut,\n        isLowQuantity,\n        isBackorder\n      }\n    } = this.props;\n    const noticeContent = {\n      classNames: this.noticeClassNames\n    };\n\n    if (isSoldOut) {\n      if (isBackorder) {\n        noticeContent.defaultValue = \"Backorder\";\n        noticeContent.i18nKey = \"productDetail.backOrder\";\n      } else {\n        noticeContent.defaultValue = \"Sold Out!\";\n        noticeContent.i18nKey = \"productDetail.soldOut\";\n      }\n    } else if (isLowQuantity) {\n      noticeContent.defaultValue = \"Limited Supply\";\n      noticeContent.i18nKey = \"productDetail.limitedSupply\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"grid-alerts\"\n    }, React.createElement(\"div\", {\n      className: \"product-grid-badges\"\n    }, React.createElement(\"span\", {\n      className: noticeContent.classNames\n    }, React.createElement(Components.Translation, {\n      defaultValue: noticeContent.defaultValue,\n      i18nKey: noticeContent.i18nKey\n    }))));\n  } // render product image\n\n\n  renderMedia() {\n    const {\n      product\n    } = this.props;\n    const MEDIA_PLACEHOLDER = \"/resources/placeholder.gif\";\n    const {\n      large\n    } = Array.isArray(product.media) && product.media[0] || {\n      large: MEDIA_PLACEHOLDER\n    };\n    return React.createElement(\"span\", {\n      className: \"product-image\",\n      style: {\n        backgroundImage: `url(\"${large}\")`\n      }\n    });\n  }\n\n  renderAdditionalMedia() {\n    const {\n      product: {\n        media\n      },\n      position: {\n        weight\n      }\n    } = this.props; // if product is not medium weight\n    // or the media array is empty exit\n\n    if (weight !== 1 || !media || media.length === 0) return; // creating an additional madia array with\n    // the 2nd, 3rd and 4th images returned\n    // in the media array\n\n    const additionalMedia = [...media.slice(1, 4)];\n    return React.createElement(\"div\", {\n      className: \"product-additional-images\"\n    }, additionalMedia.map(img => React.createElement(\"span\", {\n      key: img.small,\n      className: \"product-image\",\n      style: {\n        backgroundImage: `url(\"${img.medium}\")`\n      }\n    })));\n  }\n\n  renderGridContent() {\n    const {\n      product\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"grid-content\"\n    }, React.createElement(\"a\", {\n      href: this.productURL,\n      \"data-event-category\": \"grid\",\n      \"data-event-action\": \"product-click\",\n      \"data-event-label\": \"grid product click\",\n      \"data-event-value\": product._id,\n      onClick: this.handleClick\n    }, React.createElement(\"div\", {\n      className: \"overlay\"\n    }, React.createElement(\"div\", {\n      className: \"overlay-title\"\n    }, product.title), React.createElement(\"div\", {\n      className: \"currency-symbol\"\n    }, formatPriceString(product.price && product.price.range || \"\")), this.props.isSearch && React.createElement(\"div\", {\n      className: \"overlay-description\"\n    }, product.description))));\n  }\n\n  render() {\n    const {\n      product,\n      isSearch\n    } = this.props;\n    return React.createElement(\"li\", {\n      className: this.productClassNames,\n      \"data-id\": product._id,\n      id: product._id\n    }, React.createElement(\"div\", {\n      className: isSearch ? \"item-content\" : \"\"\n    }, React.createElement(\"span\", {\n      className: \"product-grid-item-alerts\"\n    }), React.createElement(\"a\", {\n      className: \"product-grid-item-images\",\n      href: this.productURL,\n      \"data-event-category\": \"grid\",\n      \"data-event-label\": \"grid product click\",\n      \"data-event-value\": product._id,\n      onClick: this.handleClick\n    }, React.createElement(\"div\", {\n      className: \"product-primary-images\"\n    }, this.renderMedia()), this.renderAdditionalMedia()), !isSearch && this.renderNotices(), this.renderGridContent()));\n  }\n\n}\n\nProductGridItem.propTypes = {\n  isSearch: PropTypes.bool,\n  position: PropTypes.object,\n  product: PropTypes.object // get product detail page URL\n\n};\nregisterComponent(\"ProductGridItemCustomer\", ProductGridItem);\nmodule.exportDefault(ProductGridItem);","map":{"version":3,"sources":["imports/plugins/included/product-variant/components/customer/productGridItem.js"],"names":["React","Component","module","watch","require","default","v","PropTypes","classnames","formatPriceString","Router","registerComponent","Components","ProductGridItem","handleClick","event","preventDefault","go","productURL","product","handle","props","pathFor","hash","weightClass","weight","position","noticeClassNames","isSoldOut","isLowQuantity","isBackorder","productClassNames","pinned","renderNotices","noticeContent","classNames","defaultValue","i18nKey","renderMedia","MEDIA_PLACEHOLDER","large","Array","isArray","media","backgroundImage","renderAdditionalMedia","length","additionalMedia","slice","map","img","small","medium","renderGridContent","_id","title","price","range","isSearch","description","render","propTypes","bool","object","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { formatPriceString, Router } from \"/client/api\";\nimport { registerComponent, Components } from \"@reactioncommerce/reaction-components\";\n\nclass ProductGridItem extends Component {\n  static propTypes = {\n    isSearch: PropTypes.bool,\n    position: PropTypes.object,\n    product: PropTypes.object\n  }\n\n  // get product detail page URL\n  get productURL() {\n    const { product: { handle } } = this.props;\n    return Router.pathFor(\"product\", {\n      hash: {\n        handle\n      }\n    });\n  }\n\n  // get weight class name\n  get weightClass() {\n    const { weight } = this.props.position || { weight: 0 };\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n      case 2:\n        return \"product-large\";\n      default:\n        return \"product-small\";\n    }\n  }\n\n  // get notice class names\n  get noticeClassNames() {\n    const { product: { isSoldOut, isLowQuantity, isBackorder } } = this.props;\n    return classnames({\n      \"badge\": (isSoldOut || isLowQuantity),\n      \"variant-qty-sold-out\": (isSoldOut || (isSoldOut && isBackorder)),\n      \"badge-danger\": (isSoldOut && !isBackorder),\n      \"badge-low-inv-warning\": (isLowQuantity && !isSoldOut)\n    });\n  }\n\n  // get product item class names\n  get productClassNames() {\n    const { position } = this.props;\n    return classnames({\n      \"product-grid-item\": true,\n      [this.weightClass]: true,\n      \"pinned\": position.pinned\n    });\n  }\n\n  // handle click event\n  handleClick = (event) => {\n    event.preventDefault();\n    Router.go(this.productURL);\n  }\n\n  // notice\n  renderNotices() {\n    const { product: { isSoldOut, isLowQuantity, isBackorder } } = this.props;\n    const noticeContent = { classNames: this.noticeClassNames };\n\n    if (isSoldOut) {\n      if (isBackorder) {\n        noticeContent.defaultValue = \"Backorder\";\n        noticeContent.i18nKey = \"productDetail.backOrder\";\n      } else {\n        noticeContent.defaultValue = \"Sold Out!\";\n        noticeContent.i18nKey = \"productDetail.soldOut\";\n      }\n    } else if (isLowQuantity) {\n      noticeContent.defaultValue = \"Limited Supply\";\n      noticeContent.i18nKey = \"productDetail.limitedSupply\";\n    }\n\n    return (\n      <div className=\"grid-alerts\">\n        <div className=\"product-grid-badges\">\n          <span className={noticeContent.classNames}>\n            <Components.Translation defaultValue={noticeContent.defaultValue} i18nKey={noticeContent.i18nKey} />\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  // render product image\n  renderMedia() {\n    const { product } = this.props;\n    const MEDIA_PLACEHOLDER = \"/resources/placeholder.gif\";\n    const { large } = (Array.isArray(product.media) && product.media[0]) || { large: MEDIA_PLACEHOLDER };\n\n    return (\n      <span\n        className=\"product-image\"\n        style={{ backgroundImage: `url(\"${large}\")` }}\n      />\n    );\n  }\n\n\n  renderAdditionalMedia() {\n    const { product: { media }, position: { weight } } = this.props;\n\n    // if product is not medium weight\n    // or the media array is empty exit\n    if (weight !== 1 || (!media || media.length === 0)) return;\n\n    // creating an additional madia array with\n    // the 2nd, 3rd and 4th images returned\n    // in the media array\n    const additionalMedia = [...media.slice(1, 4)];\n\n    return (\n      <div className=\"product-additional-images\">\n        {additionalMedia.map((img) => (\n          <span\n            key={img.small}\n            className=\"product-image\"\n            style={{ backgroundImage: `url(\"${img.medium}\")` }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  renderGridContent() {\n    const { product } = this.props;\n\n    return (\n      <div className=\"grid-content\">\n        <a\n          href={this.productURL}\n          data-event-category=\"grid\"\n          data-event-action=\"product-click\"\n          data-event-label=\"grid product click\"\n          data-event-value={product._id}\n          onClick={this.handleClick}\n        >\n          <div className=\"overlay\">\n            <div className=\"overlay-title\">{product.title}</div>\n            <div className=\"currency-symbol\">{formatPriceString((product.price && product.price.range) || \"\")}</div>\n            {this.props.isSearch &&\n                <div className=\"overlay-description\">{product.description}</div>\n            }\n          </div>\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    const { product, isSearch } = this.props;\n    return (\n      <li\n        className={this.productClassNames}\n        data-id={product._id}\n        id={product._id}\n      >\n        <div className={(isSearch) ? \"item-content\" : \"\"}>\n          <span className=\"product-grid-item-alerts\" />\n\n          <a className=\"product-grid-item-images\"\n            href={this.productURL}\n            data-event-category=\"grid\"\n            data-event-label=\"grid product click\"\n            data-event-value={product._id}\n            onClick={this.handleClick}\n          >\n            <div className=\"product-primary-images\">\n              {this.renderMedia()}\n            </div>\n\n            {this.renderAdditionalMedia()}\n          </a>\n\n          {!isSearch && this.renderNotices()}\n          {this.renderGridContent()}\n        </div>\n      </li>\n    );\n  }\n}\n\n\nregisterComponent(\"ProductGridItemCustomer\", ProductGridItem);\n\nexport default ProductGridItem;\n"]},"sourceType":"script","hash":"89fa255517215f8d196325519c75311cc73cb04b"}
