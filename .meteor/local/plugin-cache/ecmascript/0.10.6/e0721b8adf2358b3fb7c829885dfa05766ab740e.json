{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/orders/client/components/orderTable.js","filename":"imports/plugins/core/orders/client/components/orderTable.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/orders/client/components/orderTable.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/orders/client/components/orderTable.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/orders/client/components/orderTable.js"}},"code":"var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Avatar;\nmodule.watch(require(\"react-avatar\"), {\n  \"default\": function (v) {\n    Avatar = v;\n  }\n}, 2);\nvar classnames;\nmodule.watch(require(\"classnames/dedupe\"), {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 3);\nvar formatPriceString, i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  formatPriceString: function (v) {\n    formatPriceString = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 4);\nvar Orders;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Orders: function (v) {\n    Orders = v;\n  }\n}, 5);\nvar Components, withMoment;\nmodule.watch(require(\"../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  },\n  withMoment: function (v) {\n    withMoment = v;\n  }\n}, 6);\nvar Badge, ClickToCopy, Icon, Translation, Checkbox, Loading, SortableTable;\nmodule.watch(require(\"../../../ui/client/components\"), {\n  Badge: function (v) {\n    Badge = v;\n  },\n  ClickToCopy: function (v) {\n    ClickToCopy = v;\n  },\n  Icon: function (v) {\n    Icon = v;\n  },\n  Translation: function (v) {\n    Translation = v;\n  },\n  Checkbox: function (v) {\n    Checkbox = v;\n  },\n  Loading: function (v) {\n    Loading = v;\n  },\n  SortableTable: function (v) {\n    SortableTable = v;\n  }\n}, 7);\nvar getOrderRiskBadge, getOrderRiskStatus, getBillingInfo, getShippingInfo;\nmodule.watch(require(\"../helpers\"), {\n  getOrderRiskBadge: function (v) {\n    getOrderRiskBadge = v;\n  },\n  getOrderRiskStatus: function (v) {\n    getOrderRiskStatus = v;\n  },\n  getBillingInfo: function (v) {\n    getBillingInfo = v;\n  },\n  getShippingInfo: function (v) {\n    getShippingInfo = v;\n  }\n}, 8);\nvar OrderTableColumn;\nmodule.watch(require(\"./orderTableColumn\"), {\n  \"default\": function (v) {\n    OrderTableColumn = v;\n  }\n}, 9);\nvar OrderBulkActionsBar;\nmodule.watch(require(\"./orderBulkActionsBar\"), {\n  \"default\": function (v) {\n    OrderBulkActionsBar = v;\n  }\n}, 10);\nvar classNames = {\n  colClassNames: {\n    name: \"order-table-column-name\",\n    email: \"order-table-column-email\",\n    date: \"order-table-column-date hidden-xs hidden-sm\",\n    id: \"order-table-column-id hidden-xs hidden-sm\",\n    total: \"order-table-column-total\",\n    shipping: \"order-table-column-shipping hidden-xs hidden-sm\",\n    status: \"order-table-column-status\",\n    control: \"order-table-column-control\"\n  },\n  headerClassNames: {\n    name: \"order-table-header-name\",\n    email: \"order-table-header-email\",\n    date: \"order-table-header-date hidden-xs hidden-sm\",\n    id: \"order-table-header-id hidden-xs hidden-sm\",\n    total: \"order-table-header-total\",\n    shipping: \"order-table-header-shipping hidden-xs hidden-sm\",\n    status: \"order-table-header-status\",\n    control: \"order-table-header-control\"\n  }\n};\n\nvar OrderTable =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(OrderTable, _Component);\n\n  function OrderTable() {\n    var _temp, _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.onPageChange = function (index) {\n      _this.props.onPageChange(index);\n    }, _this.onPageSizeChange = function (pageSize, pageIndex) {\n      _this.props.onPageSizeChange(pageSize, pageIndex);\n    }, _temp) || (0, _assertThisInitialized2.default)(_this);\n  }\n\n  var _proto = OrderTable.prototype;\n\n  _proto.fulfillmentBadgeStatus = function () {\n    function fulfillmentBadgeStatus(order) {\n      var orderStatus = order.workflow.status;\n\n      if (orderStatus === \"new\") {\n        return \"info\";\n      } else if (orderStatus === \"coreOrderWorkflow/processing\") {\n        return \"success\";\n      } else if (orderStatus === \"coreOrderWorkflow/canceled\") {\n        return \"danger\";\n      } else if (orderStatus === \"coreOrderWorkflow/completed\") {\n        return \"primary\";\n      }\n\n      return \"default\";\n    }\n\n    return fulfillmentBadgeStatus;\n  }();\n\n  _proto.renderOrderButton = function () {\n    function renderOrderButton(order) {\n      var _this2 = this;\n\n      var startWorkflow = order.workflow.status === \"new\";\n      var classes = classnames({\n        \"rui\": true,\n        \"btn\": true,\n        \"btn-success\": startWorkflow\n      });\n      var chevronDirection = i18next.dir() === \"rtl\" ? \"left\" : \"right\";\n      return React.createElement(\"button\", {\n        className: classes,\n        onClick: function () {\n          return _this2.props.handleClick(order, startWorkflow);\n        }\n      }, React.createElement(Icon, {\n        icon: \"fa fa-chevron-\" + chevronDirection\n      }));\n    }\n\n    return renderOrderButton;\n  }();\n\n  _proto.renderOrderInfo = function () {\n    function renderOrderInfo(order) {\n      var _props = this.props,\n          displayMedia = _props.displayMedia,\n          moment = _props.moment;\n      var invoice = getBillingInfo(order).invoice || {};\n      return React.createElement(\"div\", {\n        className: \"order-info\"\n      }, React.createElement(\"div\", {\n        className: \"order-totals\"\n      }, React.createElement(\"span\", {\n        className: \"order-data order-data-date\"\n      }, React.createElement(\"strong\", null, \"Date: \"), moment && moment(order.createdAt).fromNow() || order.createdAt.toLocaleString(), \"\\xA0|\\xA0\", moment && moment(order.createdAt).format(\"MM/D/YYYY\") || order.createdAt.toLocaleString()), React.createElement(\"span\", {\n        className: \"order-data order-data-id\"\n      }, React.createElement(\"strong\", null, \"Order ID: \"), React.createElement(ClickToCopy, {\n        copyToClipboard: order._id,\n        displayText: order._id,\n        i18nKeyTooltip: \"admin.orderWorkflow.summary.copyOrderLink\",\n        tooltip: \"Copy Order Link\"\n      })), React.createElement(\"span\", {\n        className: \"order-data order-data-total\"\n      }, React.createElement(\"strong\", null, \"Total: \", formatPriceString(invoice.total)))), React.createElement(\"div\", {\n        className: \"order-items\"\n      }, order.items.map(function (item, i) {\n        return React.createElement(\"div\", {\n          className: \"order-item\",\n          key: i\n        }, React.createElement(\"div\", {\n          className: \"order-item-media\"\n        }, React.createElement(Components.ProductImage, {\n          item: item,\n          displayMedia: displayMedia,\n          size: \"thumbnail\",\n          badge: true\n        })));\n      })));\n    }\n\n    return renderOrderInfo;\n  }();\n\n  _proto.renderShipmentInfo = function () {\n    function renderShipmentInfo(order) {\n      var emailAddress = order.email || React.createElement(Translation, {\n        defaultValue: \"Email not available\",\n        i18nKey: \"admin.orderWorkflow.ordersList.emailNotFound\"\n      });\n      var shipping = getShippingInfo(order);\n      var orderRisk = getOrderRiskStatus(order);\n      return React.createElement(\"div\", {\n        className: \"shipment-info\"\n      }, React.createElement(\"div\", {\n        className: \"customer-info\"\n      }, React.createElement(Avatar, {\n        email: order.email,\n        round: true,\n        name: shipping.address && shipping.address.fullName,\n        size: 30,\n        className: \"rui-order-avatar\"\n      }), React.createElement(\"strong\", null, shipping.address && shipping.address.fullName), \" | \", emailAddress, orderRisk && React.createElement(Badge, {\n        className: \"risk-info\",\n        i18nKeyLabel: \"admin.orderRisk.\" + orderRisk,\n        status: getOrderRiskBadge(orderRisk)\n      })), React.createElement(\"div\", {\n        className: \"workflow-info\"\n      }, React.createElement(Badge, {\n        badgeSize: \"large\",\n        i18nKeyLabel: \"cartDrawer.\" + (shipping.workflow && shipping.workflow.status),\n        label: shipping.workflow && shipping.workflow.status,\n        status: \"basic\"\n      }), React.createElement(Badge, {\n        badgeSize: \"large\",\n        i18nKeyLabel: \"cartDrawer.\" + order.workflow.status,\n        label: order.workflow.status,\n        status: this.fulfillmentBadgeStatus(order)\n      })));\n    }\n\n    return renderShipmentInfo;\n  }();\n  /**\n   * Render Sortable Table for the list view for orders\n   * @param {Object} orders object containing info for order\n   * @return {Component} SortableTable list of orders\n   */\n\n\n  _proto.renderOrderCard = function () {\n    function renderOrderCard(order) {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"rui card order\"\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        onClick: function () {\n          return _this3.props.handleClick(order, false);\n        },\n        role: \"presentation\"\n      }, this.renderShipmentInfo(order), this.renderOrderInfo(order)), React.createElement(\"div\", {\n        className: \"controls\",\n        onClick: function () {\n          return _this3.props.handleClick(order);\n        },\n        role: \"presentation\"\n      }, this.renderOrderButton(order)));\n    }\n\n    return renderOrderCard;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this4 = this;\n\n      var getTrProps;\n      var getTheadProps;\n      var getTrGroupProps;\n      var getTableProps;\n      var customColumnMetadata = [];\n\n      if (this.props.isOpen) {\n        // Render order list column/row data\n        var filteredFields = {\n          name: {\n            accessor: function (row) {\n              return getShippingInfo(row).address && getShippingInfo(row).address.fullName;\n            },\n            id: \"shippingFullName\"\n          },\n          email: {\n            accessor: \"email\",\n            id: \"email\"\n          },\n          date: {\n            accessor: \"createdAt\",\n            id: \"createdAt\"\n          },\n          id: {\n            accessor: \"_id\",\n            id: \"_id\"\n          },\n          total: {\n            accessor: function (row) {\n              return getBillingInfo(row).invoice && getBillingInfo(row).invoice.total;\n            },\n            id: \"billingTotal\"\n          },\n          shipping: {\n            accessor: function (row) {\n              return getShippingInfo(row).workflow && getShippingInfo(row).workflow.status;\n            },\n            id: \"shippingStatus\"\n          },\n          status: {\n            accessor: \"workflow.status\",\n            id: \"workflow.status\"\n          },\n          control: {\n            accessor: \"\",\n            id: \"\"\n          }\n        };\n        var columnNames = Object.keys(filteredFields);\n\n        getTheadProps = function () {\n          return {\n            className: \"order-table-thead\"\n          };\n        };\n\n        getTrGroupProps = function () {\n          return {\n            className: \"order-table-tr-group\"\n          };\n        };\n\n        getTableProps = function () {\n          return {\n            className: \"order-table-list\"\n          };\n        }; // https://react-table.js.org/#/story/cell-renderers-custom-components\n\n\n        columnNames.forEach(function (columnName) {\n          var colHeader;\n          var resizable = true;\n          var sortable = true;\n          var columnNameLabel; // Add custom styles for the column name `name`\n\n          if (columnName === \"name\") {\n            colHeader = function () {\n              return React.createElement(\"div\", {\n                className: \"order-table-name-cell\"\n              }, React.createElement(Checkbox, {\n                className: \"order-header-checkbox checkbox-large\",\n                checked: _this4.props.multipleSelect,\n                name: \"orders-checkbox\",\n                onChange: function () {\n                  return _this4.props.selectAllOrders(_this4.props.orders, _this4.props.multipleSelect);\n                }\n              }), React.createElement(\"span\", {\n                style: {\n                  marginTop: 10\n                }\n              }, React.createElement(Translation, {\n                defaultValue: \"Name\",\n                i18nKey: \"admin.table.headers.name\"\n              })));\n            };\n          } else if (columnName === \"control\") {\n            colHeader = \" \";\n            resizable = false;\n            sortable = false;\n          } else {\n            columnNameLabel = i18next.t(\"admin.table.headers.\" + columnName);\n          }\n\n          var columnMeta = {\n            accessor: filteredFields[columnName].accessor,\n            id: filteredFields[columnName].id,\n            Header: colHeader || columnNameLabel,\n            headerClassName: classNames.headerClassNames[columnName],\n            className: classNames.colClassNames[columnName],\n            resizable: resizable,\n            sortable: sortable,\n            Cell: function (row) {\n              return React.createElement(OrderTableColumn, {\n                row: row,\n                handleClick: _this4.props.handleClick,\n                handleSelect: _this4.props.handleSelect,\n                selectedItems: _this4.props.selectedItems,\n                fulfillmentBadgeStatus: _this4.fulfillmentBadgeStatus\n              });\n            }\n          };\n          customColumnMetadata.push(columnMeta);\n        });\n      } else {\n        // Render order detail column/row data\n        var columnMeta = {\n          Cell: function (row) {\n            return React.createElement(\"div\", null, _this4.renderOrderCard(row.original));\n          }\n        };\n        customColumnMetadata.push(columnMeta);\n\n        getTheadProps = function () {\n          return {\n            className: \"hidden\"\n          };\n        };\n\n        getTrGroupProps = function () {\n          return {\n            className: \"order-table-details-tr-group\"\n          };\n        };\n\n        getTableProps = function () {\n          return {\n            className: \"order-table-detail\"\n          };\n        };\n\n        getTrProps = function () {\n          return {\n            className: \"order-table-detail-tr\"\n          };\n        };\n      }\n\n      return React.createElement(\"div\", {\n        className: \"order-details-table\"\n      }, this.props.isOpen && React.createElement(OrderBulkActionsBar, {\n        shipping: this.props.shipping,\n        multipleSelect: this.props.multipleSelect,\n        orders: this.props.orders,\n        selectAllOrders: this.props.selectAllOrders,\n        selectedItems: this.props.selectedItems,\n        setShippingStatus: this.props.setShippingStatus,\n        isLoading: this.props.isLoading,\n        renderFlowList: this.props.renderFlowList,\n        toggleShippingFlowList: this.props.toggleShippingFlowList,\n        handleBulkPaymentCapture: this.props.handleBulkPaymentCapture\n      }), React.createElement(SortableTable, {\n        tableClassName: \"rui order table -highlight \" + (this.props.selectedItems.length > 0 ? \"table-header-hidden\" : \"table-header-visible\"),\n        collection: Orders,\n        data: this.props.orders,\n        query: this.props.query,\n        columnMetadata: customColumnMetadata,\n        externalLoadingComponent: Loading,\n        filterType: \"none\",\n        selectedRows: this.props.selectedItems,\n        getTheadProps: getTheadProps,\n        getTrProps: getTrProps,\n        getTrGroupProps: getTrGroupProps,\n        getPaginationProps: function () {\n          return {\n            className: \"order-table-pagination-visible\"\n          };\n        },\n        getTableProps: getTableProps,\n        showPaginationTop: !this.props.selectedItems.length,\n        onPageChange: this.onPageChange,\n        onPageSizeChange: this.onPageSizeChange,\n        pages: this.props.pages,\n        page: this.props.page,\n        manual: true\n      }));\n    }\n\n    return render;\n  }();\n\n  return OrderTable;\n}(Component);\n\nOrderTable.propTypes = {\n  displayMedia: PropTypes.func,\n  handleBulkPaymentCapture: PropTypes.func,\n  handleClick: PropTypes.func,\n  handleSelect: PropTypes.func,\n  isLoading: PropTypes.object,\n  isOpen: PropTypes.bool,\n  moment: PropTypes.func,\n  multipleSelect: PropTypes.bool,\n  onPageChange: PropTypes.func,\n  onPageSizeChange: PropTypes.func,\n  orders: PropTypes.array,\n  page: PropTypes.number,\n  pages: PropTypes.number,\n  query: PropTypes.object,\n  renderFlowList: PropTypes.bool,\n  selectAllOrders: PropTypes.func,\n  selectedItems: PropTypes.array,\n  setShippingStatus: PropTypes.func,\n  shipping: PropTypes.object,\n  toggleShippingFlowList: PropTypes.func\n  /**\n   * Fullfilment Badge\n   * @param  {Object} order object containing info for order and coreOrderWorkflow\n   * @return {string} A string containing the type of Badge\n   */\n\n};\nmodule.exportDefault(withMoment(OrderTable));","map":{"version":3,"sources":["imports/plugins/core/orders/client/components/orderTable.js"],"names":["React","Component","module","watch","require","v","PropTypes","Avatar","classnames","formatPriceString","i18next","Orders","Components","withMoment","Badge","ClickToCopy","Icon","Translation","Checkbox","Loading","SortableTable","getOrderRiskBadge","getOrderRiskStatus","getBillingInfo","getShippingInfo","OrderTableColumn","OrderBulkActionsBar","classNames","colClassNames","name","email","date","id","total","shipping","status","control","headerClassNames","OrderTable","onPageChange","index","props","onPageSizeChange","pageSize","pageIndex","fulfillmentBadgeStatus","order","orderStatus","workflow","renderOrderButton","startWorkflow","classes","chevronDirection","dir","handleClick","renderOrderInfo","displayMedia","moment","invoice","createdAt","fromNow","toLocaleString","format","_id","items","map","item","i","renderShipmentInfo","emailAddress","orderRisk","address","fullName","renderOrderCard","render","getTrProps","getTheadProps","getTrGroupProps","getTableProps","customColumnMetadata","isOpen","filteredFields","accessor","row","columnNames","Object","keys","className","forEach","columnName","colHeader","resizable","sortable","columnNameLabel","multipleSelect","selectAllOrders","orders","marginTop","t","columnMeta","Header","headerClassName","Cell","handleSelect","selectedItems","push","original","setShippingStatus","isLoading","renderFlowList","toggleShippingFlowList","handleBulkPaymentCapture","length","query","pages","page","propTypes","func","object","bool","array","number","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"react-avatar\";\nimport classnames from \"classnames/dedupe\";\nimport { formatPriceString, i18next } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\nimport { Components, withMoment } from \"@reactioncommerce/reaction-components\";\nimport { Badge, ClickToCopy, Icon, Translation, Checkbox, Loading, SortableTable } from \"@reactioncommerce/reaction-ui\";\nimport { getOrderRiskBadge, getOrderRiskStatus, getBillingInfo, getShippingInfo } from \"../helpers\";\nimport OrderTableColumn from \"./orderTableColumn\";\nimport OrderBulkActionsBar from \"./orderBulkActionsBar\";\n\n\nconst classNames = {\n  colClassNames: {\n    name: \"order-table-column-name\",\n    email: \"order-table-column-email\",\n    date: \"order-table-column-date hidden-xs hidden-sm\",\n    id: \"order-table-column-id hidden-xs hidden-sm\",\n    total: \"order-table-column-total\",\n    shipping: \"order-table-column-shipping hidden-xs hidden-sm\",\n    status: \"order-table-column-status\",\n    control: \"order-table-column-control\"\n  },\n  headerClassNames: {\n    name: \"order-table-header-name\",\n    email: \"order-table-header-email\",\n    date: \"order-table-header-date hidden-xs hidden-sm\",\n    id: \"order-table-header-id hidden-xs hidden-sm\",\n    total: \"order-table-header-total\",\n    shipping: \"order-table-header-shipping hidden-xs hidden-sm\",\n    status: \"order-table-header-status\",\n    control: \"order-table-header-control\"\n  }\n};\n\nclass OrderTable extends Component {\n  static propTypes = {\n    displayMedia: PropTypes.func,\n    handleBulkPaymentCapture: PropTypes.func,\n    handleClick: PropTypes.func,\n    handleSelect: PropTypes.func,\n    isLoading: PropTypes.object,\n    isOpen: PropTypes.bool,\n    moment: PropTypes.func,\n    multipleSelect: PropTypes.bool,\n    onPageChange: PropTypes.func,\n    onPageSizeChange: PropTypes.func,\n    orders: PropTypes.array,\n    page: PropTypes.number,\n    pages: PropTypes.number,\n    query: PropTypes.object,\n    renderFlowList: PropTypes.bool,\n    selectAllOrders: PropTypes.func,\n    selectedItems: PropTypes.array,\n    setShippingStatus: PropTypes.func,\n    shipping: PropTypes.object,\n    toggleShippingFlowList: PropTypes.func\n  }\n\n  /**\n   * Fullfilment Badge\n   * @param  {Object} order object containing info for order and coreOrderWorkflow\n   * @return {string} A string containing the type of Badge\n   */\n  fulfillmentBadgeStatus(order) {\n    const orderStatus = order.workflow.status;\n\n    if (orderStatus === \"new\") {\n      return \"info\";\n    } else if (orderStatus === \"coreOrderWorkflow/processing\") {\n      return \"success\";\n    } else if (orderStatus === \"coreOrderWorkflow/canceled\") {\n      return \"danger\";\n    } else if (orderStatus === \"coreOrderWorkflow/completed\") {\n      return \"primary\";\n    }\n\n    return \"default\";\n  }\n\n  renderOrderButton(order) {\n    const startWorkflow = order.workflow.status === \"new\";\n    const classes = classnames({\n      \"rui\": true,\n      \"btn\": true,\n      \"btn-success\": startWorkflow\n    });\n    const chevronDirection = i18next.dir() === \"rtl\" ? \"left\" : \"right\";\n\n    return (\n      <button className={classes} onClick={() => this.props.handleClick(order, startWorkflow)}>\n        <Icon icon={`fa fa-chevron-${chevronDirection}`} />\n      </button>\n    );\n  }\n\n  renderOrderInfo(order) {\n    const { displayMedia, moment } = this.props;\n    const invoice = getBillingInfo(order).invoice || {};\n\n    return (\n      <div className=\"order-info\">\n        <div className=\"order-totals\">\n          <span className=\"order-data order-data-date\">\n            <strong>Date: </strong>\n            {(moment && moment(order.createdAt).fromNow()) || order.createdAt.toLocaleString()}\n            &nbsp;|&nbsp;\n            {(moment && moment(order.createdAt).format(\"MM/D/YYYY\")) || order.createdAt.toLocaleString()}\n          </span>\n\n          <span className=\"order-data order-data-id\">\n            <strong>Order ID: </strong>\n            <ClickToCopy\n              copyToClipboard={order._id}\n              displayText={order._id}\n              i18nKeyTooltip=\"admin.orderWorkflow.summary.copyOrderLink\"\n              tooltip=\"Copy Order Link\"\n            />\n          </span>\n\n          <span className=\"order-data order-data-total\">\n            <strong>Total: {formatPriceString(invoice.total)}</strong>\n          </span>\n        </div>\n\n        <div className=\"order-items\">\n          {order.items.map((item, i) => (\n            <div className=\"order-item\" key={i}>\n              <div className=\"order-item-media\">\n                <Components.ProductImage\n                  item={item}\n                  displayMedia={displayMedia}\n                  size=\"thumbnail\"\n                  badge={true}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  renderShipmentInfo(order) {\n    const emailAddress = order.email ||\n    <Translation defaultValue={\"Email not available\"} i18nKey={\"admin.orderWorkflow.ordersList.emailNotFound\"} />;\n    const shipping = getShippingInfo(order);\n    const orderRisk = getOrderRiskStatus(order);\n\n    return (\n      <div className=\"shipment-info\">\n        <div className=\"customer-info\">\n          <Avatar\n            email={order.email}\n            round={true}\n            name={shipping.address && shipping.address.fullName}\n            size={30}\n            className=\"rui-order-avatar\"\n          />\n          <strong>{shipping.address && shipping.address.fullName}</strong> | {emailAddress}\n          {orderRisk &&\n            <Badge\n              className=\"risk-info\"\n              i18nKeyLabel={`admin.orderRisk.${orderRisk}`}\n              status={getOrderRiskBadge(orderRisk)}\n            />\n          }\n        </div>\n        <div className=\"workflow-info\">\n          <Badge\n            badgeSize=\"large\"\n            i18nKeyLabel={`cartDrawer.${shipping.workflow && shipping.workflow.status}`}\n            label={shipping.workflow && shipping.workflow.status}\n            status=\"basic\"\n          />\n          <Badge\n            badgeSize=\"large\"\n            i18nKeyLabel={`cartDrawer.${order.workflow.status}`}\n            label={order.workflow.status}\n            status={this.fulfillmentBadgeStatus(order)}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render Sortable Table for the list view for orders\n   * @param {Object} orders object containing info for order\n   * @return {Component} SortableTable list of orders\n   */\n\n  renderOrderCard(order) {\n    return (\n      <div className=\"rui card order\">\n        <div className=\"content\" onClick={() => this.props.handleClick(order, false)} role=\"presentation\">\n          {this.renderShipmentInfo(order)}\n          {this.renderOrderInfo(order)}\n        </div>\n        <div className=\"controls\" onClick={() => this.props.handleClick(order)} role=\"presentation\">\n          {this.renderOrderButton(order)}\n        </div>\n      </div>\n    );\n  }\n\n  onPageChange = (index) => {\n    this.props.onPageChange(index);\n  }\n\n  onPageSizeChange = (pageSize, pageIndex) => {\n    this.props.onPageSizeChange(pageSize, pageIndex);\n  }\n\n  render() {\n    let getTrProps;\n    let getTheadProps;\n    let getTrGroupProps;\n    let getTableProps;\n\n    const customColumnMetadata = [];\n\n    if (this.props.isOpen) {\n      // Render order list column/row data\n      const filteredFields = {\n        name: {\n          accessor: (row) => getShippingInfo(row).address && getShippingInfo(row).address.fullName,\n          id: \"shippingFullName\"\n        },\n        email: {\n          accessor: \"email\",\n          id: \"email\"\n        },\n        date: {\n          accessor: \"createdAt\",\n          id: \"createdAt\"\n        },\n        id: {\n          accessor: \"_id\",\n          id: \"_id\"\n        },\n        total: {\n          accessor: (row) => getBillingInfo(row).invoice && getBillingInfo(row).invoice.total,\n          id: \"billingTotal\"\n        },\n        shipping: {\n          accessor: (row) => getShippingInfo(row).workflow && getShippingInfo(row).workflow.status,\n          id: \"shippingStatus\"\n        },\n        status: {\n          accessor: \"workflow.status\",\n          id: \"workflow.status\"\n        },\n        control: {\n          accessor: \"\",\n          id: \"\"\n        }\n      };\n\n      const columnNames = Object.keys(filteredFields);\n\n      getTheadProps = () => ({\n        className: \"order-table-thead\"\n      });\n\n      getTrGroupProps = () => ({\n        className: \"order-table-tr-group\"\n      });\n\n      getTableProps = () => ({\n        className: \"order-table-list\"\n      });\n\n      // https://react-table.js.org/#/story/cell-renderers-custom-components\n      columnNames.forEach((columnName) => {\n        let colHeader;\n        let resizable = true;\n        let sortable = true;\n        let columnNameLabel;\n\n        // Add custom styles for the column name `name`\n        if (columnName === \"name\") {\n          colHeader = () => (\n            <div className=\"order-table-name-cell\">\n              <Checkbox\n                className=\"order-header-checkbox checkbox-large\"\n                checked={this.props.multipleSelect}\n                name=\"orders-checkbox\"\n                onChange={() => this.props.selectAllOrders(this.props.orders, this.props.multipleSelect)}\n              />\n              <span style={{ marginTop: 10 }}>\n                <Translation\n                  defaultValue=\"Name\"\n                  i18nKey=\"admin.table.headers.name\"\n                />\n              </span>\n            </div>\n          );\n        } else if (columnName === \"control\") {\n          colHeader = \" \";\n          resizable = false;\n          sortable = false;\n        } else {\n          columnNameLabel = i18next.t(`admin.table.headers.${columnName}`);\n        }\n\n\n        const columnMeta = {\n          accessor: filteredFields[columnName].accessor,\n          id: filteredFields[columnName].id,\n          Header: colHeader || columnNameLabel,\n          headerClassName: classNames.headerClassNames[columnName],\n          className: classNames.colClassNames[columnName],\n          resizable,\n          sortable,\n          Cell: (row) => (\n            <OrderTableColumn\n              row={row}\n              handleClick={this.props.handleClick}\n              handleSelect={this.props.handleSelect}\n              selectedItems={this.props.selectedItems}\n              fulfillmentBadgeStatus={this.fulfillmentBadgeStatus}\n            />\n          )\n        };\n        customColumnMetadata.push(columnMeta);\n      });\n    } else {\n      // Render order detail column/row data\n\n      const columnMeta = {\n        Cell: (row) => (<div>{this.renderOrderCard(row.original)}</div>)\n      };\n\n      customColumnMetadata.push(columnMeta);\n\n      getTheadProps = () => ({\n        className: \"hidden\"\n      });\n\n      getTrGroupProps = () => ({\n        className: \"order-table-details-tr-group\"\n      });\n\n      getTableProps = () => ({\n        className: \"order-table-detail\"\n      });\n\n      getTrProps = () => ({\n        className: \"order-table-detail-tr\"\n      });\n    }\n\n    return (\n      <div className=\"order-details-table\">\n        {this.props.isOpen &&\n          <OrderBulkActionsBar\n            shipping={this.props.shipping}\n            multipleSelect={this.props.multipleSelect}\n            orders={this.props.orders}\n            selectAllOrders={this.props.selectAllOrders}\n            selectedItems={this.props.selectedItems}\n            setShippingStatus={this.props.setShippingStatus}\n            isLoading={this.props.isLoading}\n            renderFlowList={this.props.renderFlowList}\n            toggleShippingFlowList={this.props.toggleShippingFlowList}\n            handleBulkPaymentCapture={this.props.handleBulkPaymentCapture}\n          />\n        }\n        <SortableTable\n          tableClassName={`rui order table -highlight ${this.props.selectedItems.length > 0 ?\n            \"table-header-hidden\" :\n            \"table-header-visible\"}`\n          }\n          collection={Orders}\n          data={this.props.orders}\n          query={this.props.query}\n          columnMetadata={customColumnMetadata}\n          externalLoadingComponent={Loading}\n          filterType=\"none\"\n          selectedRows={this.props.selectedItems}\n          getTheadProps={getTheadProps}\n          getTrProps={getTrProps}\n          getTrGroupProps={getTrGroupProps}\n          getPaginationProps={() => ({\n            className: \"order-table-pagination-visible\"\n          })}\n          getTableProps={getTableProps}\n          showPaginationTop={!this.props.selectedItems.length}\n          onPageChange={this.onPageChange}\n          onPageSizeChange={this.onPageSizeChange}\n          pages={this.props.pages}\n          page={this.props.page}\n          manual={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withMoment(OrderTable);\n"]},"sourceType":"script","hash":"e0721b8adf2358b3fb7c829885dfa05766ab740e"}
