{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/logging/server/methods.js","filename":"imports/plugins/core/logging/server/methods.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/logging/server/methods.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/logging/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/logging/server/methods.js"}},"code":"module.export({\n  writeToLog: () => writeToLog\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet Logs;\nmodule.watch(require(\"../../../../../lib/collections\"), {\n  Logs(v) {\n    Logs = v;\n  }\n\n}, 3);\nlet Reaction;\nmodule.watch(require(\"../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 4);\n\nfunction writeToLog(logType, logLevel, logData, source = \"client\") {\n  check(logType, String);\n  check(logLevel, String);\n  check(logData, Object);\n  const logEntry = {\n    logType,\n    shopId: Reaction.getShopId(),\n    data: logData,\n    level: logLevel,\n    source\n  };\n  Logs.insert(logEntry);\n}\n\n/**\n * @name logging/logError\n * @method\n * @memberof Methods/Logging\n * @param  {String} logType Type\n * @param  {Object} logData Data\n * @return {null}\n */\nfunction logError(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"error\", logData);\n  }\n}\n/**\n * @name logging/logWarning\n * @method\n * @memberof Methods/Logging\n * @param  {String} logType Type\n * @param  {Object} logData Data\n * @return {null}\n */\n\n\nfunction logWarning(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"warn\", logData);\n  }\n}\n\nMeteor.methods({\n  \"logging/logError\": logError,\n  \"logging/logWarning\": logWarning\n});","map":{"version":3,"sources":["imports/plugins/core/logging/server/methods.js"],"names":["module","export","writeToLog","Meteor","watch","require","v","Roles","check","Logs","Reaction","logType","logLevel","logData","source","String","Object","logEntry","shopId","getShopId","data","level","insert","logError","userIsInRole","userId","logWarning","methods"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW,MAAIA;AAAhB,CAAd;AAA2C,IAAIC,MAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAA9C,EAAkE,CAAlE;AAAqE,IAAIE,KAAJ;AAAUR,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIG,IAAJ;AAAST,OAAOI,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAACI,OAAKH,CAAL,EAAO;AAACG,WAAKH,CAAL;AAAO;;AAAhB,CAAvD,EAAyE,CAAzE;AAA4E,IAAII,QAAJ;AAAaV,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACK,WAASJ,CAAT,EAAW;AAACI,eAASJ,CAAT;AAAW;;AAAxB,CAAlD,EAA4E,CAA5E;;AAsBrW,SAASJ,UAAT,CAAoBS,OAApB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,SAAS,QAAzD,EAAmE;AACxEN,QAAMG,OAAN,EAAeI,MAAf;AACAP,QAAMI,QAAN,EAAgBG,MAAhB;AACAP,QAAMK,OAAN,EAAeG,MAAf;AAEA,QAAMC,WAAW;AACfN,WADe;AAEfO,YAAQR,SAASS,SAAT,EAFO;AAGfC,UAAMP,OAHS;AAIfQ,WAAOT,QAJQ;AAKfE;AALe,GAAjB;AAOAL,OAAKa,MAAL,CAAYL,QAAZ;AACD;;AAED;;;;;;;;AAQA,SAASM,QAAT,CAAkBZ,OAAlB,EAA2BE,OAA3B,EAAoC;AAClCL,QAAMG,OAAN,EAAeI,MAAf;AACAP,QAAMK,OAAN,EAAeG,MAAf;;AACA,MAAIT,MAAMiB,YAAN,CAAmB,KAAKC,MAAxB,EAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,CAAJ,EAAyD;AACvDvB,eAAWS,OAAX,EAAoB,OAApB,EAA6BE,OAA7B;AACD;AACF;AAED;;;;;;;;;;AAQA,SAASa,UAAT,CAAoBf,OAApB,EAA6BE,OAA7B,EAAsC;AACpCL,QAAMG,OAAN,EAAeI,MAAf;AACAP,QAAMK,OAAN,EAAeG,MAAf;;AACA,MAAIT,MAAMiB,YAAN,CAAmB,KAAKC,MAAxB,EAAgC,CAAC,OAAD,EAAU,OAAV,CAAhC,CAAJ,EAAyD;AACvDvB,eAAWS,OAAX,EAAoB,MAApB,EAA4BE,OAA5B;AACD;AACF;;AAEDV,OAAOwB,OAAP,CAAe;AACb,sBAAoBJ,QADP;AAEb,wBAAsBG;AAFT,CAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { check } from \"meteor/check\";\nimport { Logs } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n/**\n *\n * @namespace Methods/Logging\n */\n\n/**\n * @name writeToLog\n * @method\n * @memberof Methods/Logging\n * @summary Writes a log entry into log\n * @param  {String} logType Type\n * @param  {String} logLevel Level\n * @param  {Object} logData Data\n * @param  {String} [source=\"client\"]\n * @return {null}\n */\nexport function writeToLog(logType, logLevel, logData, source = \"client\") {\n  check(logType, String);\n  check(logLevel, String);\n  check(logData, Object);\n\n  const logEntry = {\n    logType,\n    shopId: Reaction.getShopId(),\n    data: logData,\n    level: logLevel,\n    source\n  };\n  Logs.insert(logEntry);\n}\n\n/**\n * @name logging/logError\n * @method\n * @memberof Methods/Logging\n * @param  {String} logType Type\n * @param  {Object} logData Data\n * @return {null}\n */\nfunction logError(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"error\", logData);\n  }\n}\n\n/**\n * @name logging/logWarning\n * @method\n * @memberof Methods/Logging\n * @param  {String} logType Type\n * @param  {Object} logData Data\n * @return {null}\n */\nfunction logWarning(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"warn\", logData);\n  }\n}\n\nMeteor.methods({\n  \"logging/logError\": logError,\n  \"logging/logWarning\": logWarning\n});\n"]},"sourceType":"script","hash":"7d73af90b12a5453f9907e46e0972706577dfb2c"}
