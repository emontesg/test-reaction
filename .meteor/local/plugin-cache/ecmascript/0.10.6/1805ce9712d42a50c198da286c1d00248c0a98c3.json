{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/checkout/client/methods/cart.js","filename":"imports/plugins/core/checkout/client/methods/cart.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/checkout/client/methods/cart.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/checkout/client/methods/cart.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/checkout/client/methods/cart.js"}},"code":"var _clone;\n\nmodule.watch(require(\"lodash/clone\"), {\n  \"default\": function (v) {\n    _clone = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar check;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Logger, Reaction, i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Logger: function (v) {\n    Logger = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 3);\nvar Cart;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Cart: function (v) {\n    Cart = v;\n  }\n}, 4);\n// Client Cart Methods\n// Stubs with matching server methods.\nMeteor.methods({\n  // Not used for stripe connect integration\n  // Under consideration for deprecation and migrating other payment Packages\n  // to payments-stripe style methods\n  \"cart/submitPayment\": function (paymentMethod) {\n    check(paymentMethod, Object);\n    var checkoutCart = Cart.findOne({\n      userId: Meteor.userId()\n    });\n\n    var cart = _clone(checkoutCart);\n\n    var cartId = cart._id;\n    var invoice = {\n      shipping: cart.getShippingTotal(),\n      subtotal: cart.getSubTotal(),\n      taxes: cart.getTaxTotal(),\n      discounts: cart.getDiscounts(),\n      total: cart.getTotal()\n    }; // we won't actually close the order at this stage.\n    // we'll just update the workflow and billing data where\n    // method-hooks can process the workflow update.\n\n    var selector;\n    var update; // temp hack until we build out multiple billing handlers\n    // if we have an existing item update it, otherwise add to set.\n\n    if (cart.billing) {\n      selector = {\n        \"_id\": cartId,\n        \"billing._id\": cart.billing[0]._id\n      };\n      update = {\n        $set: {\n          \"billing.$.paymentMethod\": paymentMethod,\n          \"billing.$.invoice\": invoice\n        }\n      };\n    } else {\n      selector = {\n        _id: cartId\n      };\n      update = {\n        $addToSet: {\n          \"billing.paymentMethod\": paymentMethod,\n          \"billing.invoice\": invoice\n        }\n      };\n    }\n\n    Cart.update(selector, update, function (error, result) {\n      if (error) {\n        Logger.debug(error, \"An error occurred saving the order\");\n        throw new Meteor.Error(\"An error occurred saving the order\", error);\n      } else {\n        // it's ok and a safety check for this to be called multiple times\n        Meteor.call(\"workflow/pushCartWorkflow\", \"coreCartWorkflow\", \"paymentSubmitted\"); // Client Stub Actions\n\n        if (result === 1) {\n          Reaction.Router.go(\"cart/completed\", {}, {\n            _id: cartId\n          });\n        } else {\n          Alerts.inline(i18next.t(\"checkoutPayment.failedToPlaceOrder\"), \"danger\", {\n            autoHide: true,\n            placement: \"paymentMethod\"\n          });\n          Logger.debug(error, \"An error occurred saving the order\", cartId, error);\n          throw new Meteor.Error(\"An error occurred saving the order\", cartId, error);\n        }\n      }\n    });\n  }\n});","map":{"version":3,"sources":["imports/plugins/core/checkout/client/methods/cart.js"],"names":["_clone","module","watch","require","v","Meteor","check","Logger","Reaction","i18next","Cart","methods","paymentMethod","Object","checkoutCart","findOne","userId","cart","cartId","_id","invoice","shipping","getShippingTotal","subtotal","getSubTotal","taxes","getTaxTotal","discounts","getDiscounts","total","getTotal","selector","update","billing","$set","$addToSet","error","result","debug","Error","call","Router","go","Alerts","inline","t","autoHide","placement"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Logger, Reaction, i18next } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\n\n// Client Cart Methods\n// Stubs with matching server methods.\nMeteor.methods({\n  // Not used for stripe connect integration\n  // Under consideration for deprecation and migrating other payment Packages\n  // to payments-stripe style methods\n  \"cart/submitPayment\"(paymentMethod) {\n    check(paymentMethod, Object);\n    const checkoutCart = Cart.findOne({\n      userId: Meteor.userId()\n    });\n\n    const cart = _.clone(checkoutCart);\n    const cartId = cart._id;\n    const invoice = {\n      shipping: cart.getShippingTotal(),\n      subtotal: cart.getSubTotal(),\n      taxes: cart.getTaxTotal(),\n      discounts: cart.getDiscounts(),\n      total: cart.getTotal()\n    };\n    // we won't actually close the order at this stage.\n    // we'll just update the workflow and billing data where\n    // method-hooks can process the workflow update.\n\n    let selector;\n    let update;\n    // temp hack until we build out multiple billing handlers\n    // if we have an existing item update it, otherwise add to set.\n    if (cart.billing) {\n      selector = {\n        \"_id\": cartId,\n        \"billing._id\": cart.billing[0]._id\n      };\n      update = {\n        $set: {\n          \"billing.$.paymentMethod\": paymentMethod,\n          \"billing.$.invoice\": invoice\n        }\n      };\n    } else {\n      selector = {\n        _id: cartId\n      };\n      update = {\n        $addToSet: {\n          \"billing.paymentMethod\": paymentMethod,\n          \"billing.invoice\": invoice\n        }\n      };\n    }\n\n    Cart.update(selector, update, (error, result) => {\n      if (error) {\n        Logger.debug(error, \"An error occurred saving the order\");\n        throw new Meteor.Error(\"An error occurred saving the order\", error);\n      } else {\n        // it's ok and a safety check for this to be called multiple times\n        Meteor.call(\"workflow/pushCartWorkflow\", \"coreCartWorkflow\", \"paymentSubmitted\");\n        // Client Stub Actions\n        if (result === 1) {\n          Reaction.Router.go(\"cart/completed\", {}, {\n            _id: cartId\n          });\n        } else {\n          Alerts.inline(i18next.t(\"checkoutPayment.failedToPlaceOrder\"), \"danger\", {\n            autoHide: true,\n            placement: \"paymentMethod\"\n          });\n          Logger.debug(error, \"An error occurred saving the order\", cartId, error);\n          throw new Meteor.Error(\"An error occurred saving the order\", cartId, error);\n        }\n      }\n    });\n  }\n});\n"]},"sourceType":"script","hash":"1805ce9712d42a50c198da286c1d00248c0a98c3"}
