{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/api/helpers.js","filename":"lib/api/helpers.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"lib/api/helpers.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"lib/api/helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/api/helpers.js"}},"code":"var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nmodule.export({\n  latinLangs: function () {\n    return latinLangs;\n  },\n  getShopId: function () {\n    return getShopId;\n  },\n  getPrimaryShopId: function () {\n    return getPrimaryShopId;\n  },\n  getShopSettings: function () {\n    return getShopSettings;\n  },\n  getShopName: function () {\n    return getShopName;\n  },\n  getShopLang: function () {\n    return getShopLang;\n  },\n  getPrimaryShopLang: function () {\n    return getPrimaryShopLang;\n  },\n  getShopPrefix: function () {\n    return getShopPrefix;\n  },\n  getAbsoluteUrl: function () {\n    return getAbsoluteUrl;\n  },\n  getCurrentTag: function () {\n    return getCurrentTag;\n  },\n  getSlug: function () {\n    return getSlug;\n  },\n  formatPhoneNumber: function () {\n    return formatPhoneNumber;\n  },\n  toCamelCase: function () {\n    return toCamelCase;\n  },\n  translateRegistry: function () {\n    return translateRegistry;\n  },\n  isObject: function () {\n    return isObject;\n  },\n  mergeDeep: function () {\n    return mergeDeep;\n  },\n  convertWeight: function () {\n    return convertWeight;\n  },\n  getPrimaryMediaForItem: function () {\n    return getPrimaryMediaForItem;\n  },\n  getPrimaryMediaForOrderItem: function () {\n    return getPrimaryMediaForOrderItem;\n  },\n  ValidCardNumber: function () {\n    return ValidCardNumber;\n  },\n  ValidExpireMonth: function () {\n    return ValidExpireMonth;\n  },\n  ValidExpireYear: function () {\n    return ValidExpireYear;\n  },\n  ValidCVV: function () {\n    return ValidCVV;\n  },\n  ValidEmail: function () {\n    return ValidEmail;\n  }\n});\nvar url;\nmodule.watch(require(\"url\"), {\n  \"default\": function (v) {\n    url = v;\n  }\n}, 0);\nvar parse, isValidNumber, getPhoneCode;\nmodule.watch(require(\"libphonenumber-js\"), {\n  parse: function (v) {\n    parse = v;\n  },\n  isValidNumber: function (v) {\n    isValidNumber = v;\n  },\n  getPhoneCode: function (v) {\n    getPhoneCode = v;\n  }\n}, 1);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 3);\nvar Router;\nmodule.watch(require(\"../../imports/plugins/core/router/lib\"), {\n  Router: function (v) {\n    Router = v;\n  }\n}, 4);\nvar Shops;\nmodule.watch(require(\"../collections\"), {\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 5);\nvar latinLangs = [\"az\", \"da\", \"de\", \"en\", \"es\", \"ff\", \"fr\", \"ha\", \"hr\", \"hu\", \"ig\", \"is\", \"it\", \"jv\", \"ku\", \"ms\", \"nl\", \"no\", \"om\", \"pl\", \"pt\", \"ro\", \"sv\", \"sw\", \"tl\", \"tr\", \"uz\", \"vi\", \"yo\"];\n// eslint-disable-line max-len\n// dynamic import of slugiy/transliteration.slugify\nvar slugify;\n\nfunction lazyLoadSlugify() {\n  var mod, lang;\n  return _regenerator.default.async(function () {\n    function lazyLoadSlugify$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // getting the shops base language\n            if (Meteor.isServer) {\n              lang = getPrimaryShopLang();\n            } else {\n              lang = getShopLang();\n            } // if slugify has been loaded but the language has changed\n            // to be a non latin based language then load transliteration\n\n\n            if (!(slugify && slugify.name === \"replace\" && latinLangs.indexOf(lang) === -1)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return _regenerator.default.awrap(Promise.resolve().then(function () {\n              return require(\"transliteration\");\n            }));\n\n          case 4:\n            mod = _context.sent;\n            _context.next = 20;\n            break;\n\n          case 7:\n            if (!slugify) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            if (!(latinLangs.indexOf(lang) >= 0)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 14;\n            return _regenerator.default.awrap(Promise.resolve().then(function () {\n              return require(\"slugify\");\n            }));\n\n          case 14:\n            mod = _context.sent;\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.next = 19;\n            return _regenerator.default.awrap(Promise.resolve().then(function () {\n              return require(\"transliteration\");\n            }));\n\n          case 19:\n            mod = _context.sent;\n\n          case 20:\n            // slugify is exported to modules.default while transliteration is exported to modules.slugify\n            slugify = mod.default || mod.slugify;\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }\n\n    return lazyLoadSlugify$;\n  }(), null, this);\n}\n\nvar Media;\n\nif (Meteor.isClient) {\n  var _require = require(\"../../imports/plugins/core/files/client\");\n\n  Media = _require.Media;\n} else {\n  var _require2 = require(\"../../imports/plugins/core/files/server\");\n\n  Media = _require2.Media;\n}\n/**\n * @file Various helper methods\n *\n * @namespace Helpers\n */\n\n\nvar Core;\n\nif (Meteor.isClient) {\n  Core = require(\"../../client/api\");\n} else {\n  Core = require(\"../../server/api\");\n}\n/**\n * @name getShopId\n * @method\n * @memberof Helpers\n * @return {String} returns current shopId\n */\n\n\nfunction getShopId() {\n  return Core.Reaction.getShopId();\n}\n\nfunction getPrimaryShopId() {\n  return Core.Reaction.getPrimaryShopId();\n}\n\nfunction getShopSettings() {\n  return Core.Reaction.getShopSettings();\n}\n\nfunction getShopName() {\n  var shopId = getShopId();\n  var shop;\n\n  if (shopId) {\n    shop = Shops.findOne({\n      _id: shopId\n    });\n    return shop && shop.name || \"\";\n  }\n\n  var domain = url.parse(Meteor.absoluteUrl()).hostname;\n  shop = Shops.findOne({\n    domains: {\n      $in: [domain]\n    }\n  });\n  return shop ? shop.name : \"\";\n}\n\nfunction getShopLang() {\n  var shopId = getShopId();\n  var shop = Shops.findOne({\n    _id: shopId\n  });\n  return shop ? shop.language : \"\";\n}\n\nfunction getPrimaryShopLang() {\n  var shopId = getPrimaryShopId();\n  var shop = Shops.findOne({\n    _id: shopId\n  });\n  return shop ? shop.language : \"\";\n}\n\nfunction getShopPrefix() {\n  var leading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var shopId = getShopId();\n\n  if (shopId) {\n    var shop = Shops.findOne({\n      _id: shopId\n    }, {\n      fields: {\n        _id: 1,\n        name: 1,\n        shopType: 1\n      }\n    });\n    var settings = Core.Reaction.getMarketplaceSettings();\n    var slug = leading + getSlug(shop.slug || getShopName().toLowerCase());\n\n    if (shop.shopType === \"primary\") {\n      // If naked routes is turned off, use the shop slug for our primary shop routes\n      if (settings && settings.marketplaceNakedRoutes === false) {\n        return slug;\n      }\n\n      return \"\";\n    } // If this is not the primary shop, use the shop slug in routes for this shop\n    // TODO: \"/shop\" should be configurable in marketplace settings\n\n\n    return \"/shop\" + slug;\n  }\n\n  return \"\";\n}\n\nfunction getAbsoluteUrl(path) {\n  var prefix = getShopPrefix(\"\");\n\n  if (prefix) {\n    var _absUrl = Meteor.absoluteUrl(prefix + \"/\" + path);\n\n    return _absUrl;\n  }\n\n  var absUrl = Meteor.absoluteUrl(\"\" + path);\n  return absUrl;\n}\n\nfunction getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n\n  return null;\n}\n\nfunction getSlug(slugString) {\n  var slug;\n  Promise.await(lazyLoadSlugify());\n\n  if (slugString) {\n    slug = slugify(slugString.toLowerCase());\n  } else {\n    slug = \"\";\n  }\n\n  return slug;\n}\n\nfunction formatPhoneNumber(phone, countryCode) {\n  try {\n    // phone no. already has the country code attached\n    if (isValidNumber(phone)) {\n      return phone;\n    }\n\n    var phoneNumber = parse(phone, countryCode).phone;\n    var countryExtension = getPhoneCode(countryCode);\n\n    if (phoneNumber && countryExtension) {\n      // try attaching the country code to phone number\n      return \"\" + countryExtension + phoneNumber;\n    }\n\n    throw new Meteor.Error(\"invalid-parameter\", \"Incorrect format for phone number \" + phone + \" with country \" + countryCode);\n  } catch (error) {\n    throw new Meteor.Error(\"invalid-parameter\", error);\n  }\n}\n\nfunction toCamelCase(needscamels) {\n  var s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function (a, b, c) {\n    return c.toUpperCase();\n  });\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b + c.toUpperCase();\n  });\n  return s;\n}\n\nfunction translateRegistry(registry, app) {\n  var registryLabel = \"\";\n  var i18nKey = \"\"; // first we check the default place for a label\n\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = \"admin.\" + registry.provides + \".\" + registryLabel; // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length && app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = \"admin.\" + app.registry[0].provides + \".\" + registryLabel;\n  }\n\n  registry.i18nKeyLabel = i18nKey + \"Label\";\n  registry.i18nKeyDescription = i18nKey + \"Description\";\n  registry.i18nKeyPlaceholder = i18nKey + \"Placeholder\";\n  registry.i18nKeyTooltip = i18nKey + \"Tooltip\";\n  registry.i18nKeyTitle = i18nKey + \"Title\"; // return registry object with added i18n keys\n\n  return registry;\n}\n\nfunction isObject(item) {\n  return item && (0, _typeof2.default)(item) === \"object\" && !Array.isArray(item) && item !== null;\n}\n\nfunction mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      if (isObject(source[key])) {\n        var _Object$assign;\n\n        if (!target[key]) Object.assign(target, (_Object$assign = {}, _Object$assign[key] = {}, _Object$assign));\n        mergeDeep(target[key], source[key]);\n      } else {\n        var _Object$assign2;\n\n        Object.assign(target, (_Object$assign2 = {}, _Object$assign2[key] = source[key], _Object$assign2));\n      }\n    });\n  }\n\n  return target;\n}\n\nfunction convertWeight(from, to, weight) {\n  check(from, String); // we need to check for specific values\n\n  check(to, String);\n  check(weight, Number);\n\n  if (from === to) {\n    return weight;\n  } // grams\n\n\n  if (from === \"lb\" && to === \"g\") {\n    var convertedWeight = weight * 453.592;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"g\") {\n    var _convertedWeight = weight * 1000;\n\n    return _convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"g\") {\n    var _convertedWeight2 = weight * 28.3495;\n\n    return _convertedWeight2;\n  } // lbs\n\n\n  if (from === \"kg\" && to === \"lb\") {\n    var _convertedWeight3 = weight * 2.20462;\n\n    return _convertedWeight3;\n  }\n\n  if (from === \"g\" && to === \"lb\") {\n    var _convertedWeight4 = weight * 0.00220462;\n\n    return _convertedWeight4;\n  }\n\n  if (from === \"oz\" && to === \"lb\") {\n    var _convertedWeight5 = weight * 0.0625;\n\n    return _convertedWeight5;\n  } // oz\n\n\n  if (from === \"lb\" && to === \"oz\") {\n    var _convertedWeight6 = weight * 16;\n\n    return _convertedWeight6;\n  }\n\n  if (from === \"g\" && to === \"oz\") {\n    var _convertedWeight7 = weight * 0.035274;\n\n    return _convertedWeight7;\n  }\n\n  if (from === \"kg\" && to === \"oz\") {\n    var _convertedWeight8 = weight * 35.274;\n\n    return _convertedWeight8;\n  } // kilograms\n\n\n  if (from === \"g\" && to === \"kg\") {\n    var _convertedWeight9 = weight * 0.001;\n\n    return _convertedWeight9;\n  }\n\n  if (from === \"oz\" && to === \"kg\") {\n    var _convertedWeight10 = weight * 0.0283495;\n\n    return _convertedWeight10;\n  }\n\n  if (from === \"lb\" && to === \"kg\") {\n    var _convertedWeight11 = weight * 0.453592;\n\n    return _convertedWeight11;\n  } // if we made it here, something has gone wrong\n\n\n  throw new Meteor.Error(\"invalid-parameter\", \"Invalid from or to value specified\");\n}\n\nfunction getPrimaryMediaForItem() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      productId = _ref.productId,\n      variantId = _ref.variantId;\n\n  var result;\n\n  if (variantId) {\n    result = Media.findOneLocal({\n      \"metadata.variantId\": variantId\n    }, {\n      sort: {\n        \"metadata.priority\": 1,\n        \"uploadedAt\": 1\n      }\n    });\n  }\n\n  if (!result && productId) {\n    result = Media.findOneLocal({\n      \"metadata.productId\": productId\n    }, {\n      sort: {\n        \"metadata.priority\": 1,\n        \"uploadedAt\": 1\n      }\n    });\n  }\n\n  return result || null;\n}\n\nfunction getPrimaryMediaForOrderItem() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      productId = _ref2.productId,\n      variants = _ref2.variants;\n\n  var _ref3 = variants || {},\n      variantId = _ref3._id; // Order item format\n\n\n  return getPrimaryMediaForItem({\n    productId: productId,\n    variantId: variantId\n  });\n}\n\n/*\n * @name luhnValid\n * @method\n * @memberOf Helpers\n * @summary Checks if a number passes Luhn's test\n * @param {String} cardNumber The card number to check\n * @returns {Boolean} The result of the test\n */\nfunction luhnValid(cardNumber) {\n  return _toConsumableArray(cardNumber).reverse().reduce(function (sum, c, i) {\n    var d = parseInt(c, 10);\n\n    if (i % 2 !== 0) {\n      d *= 2;\n    }\n\n    if (d > 9) {\n      d -= 9;\n    }\n\n    return sum + d;\n  }, 0) % 10 === 0;\n} // Regex to do card validations\n\n\nvar ValidCardNumber = Match.Where(function (x) {\n  return /^[0-9]{12,19}$/.test(x) && luhnValid(x);\n});\nvar ValidExpireMonth = Match.Where(function (x) {\n  return /^[0-9]{1,2}$/.test(x);\n});\nvar ValidExpireYear = Match.Where(function (x) {\n  return /^[0-9]{4}$/.test(x);\n});\nvar ValidCVV = Match.Where(function (x) {\n  return /^[0-9]{3,4}$/.test(x);\n});\n\nvar ValidEmail = function (x) {\n  return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(x);\n};","map":{"version":3,"sources":["lib/api/helpers.js"],"names":["module","export","latinLangs","getShopId","getPrimaryShopId","getShopSettings","getShopName","getShopLang","getPrimaryShopLang","getShopPrefix","getAbsoluteUrl","getCurrentTag","getSlug","formatPhoneNumber","toCamelCase","translateRegistry","isObject","mergeDeep","convertWeight","getPrimaryMediaForItem","getPrimaryMediaForOrderItem","ValidCardNumber","ValidExpireMonth","ValidExpireYear","ValidCVV","ValidEmail","url","watch","require","v","parse","isValidNumber","getPhoneCode","Meteor","check","Match","Router","Shops","slugify","lazyLoadSlugify","isServer","lang","name","indexOf","mod","default","Media","isClient","Core","Reaction","shopId","shop","findOne","_id","domain","absoluteUrl","hostname","domains","$in","language","leading","fields","shopType","settings","getMarketplaceSettings","slug","toLowerCase","marketplaceNakedRoutes","path","prefix","absUrl","getRouteName","current","params","slugString","Promise","await","phone","countryCode","phoneNumber","countryExtension","Error","error","needscamels","s","replace","trim","a","b","c","toUpperCase","registry","app","registryLabel","i18nKey","label","provides","length","i18nKeyLabel","i18nKeyDescription","i18nKeyPlaceholder","i18nKeyTooltip","i18nKeyTitle","item","Array","isArray","target","source","Object","keys","forEach","key","assign","from","to","weight","String","Number","convertedWeight","productId","variantId","result","findOneLocal","sort","variants","luhnValid","cardNumber","reverse","reduce","sum","i","d","parseInt","Where","x","test"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW;AAAA,WAAIA,UAAJ;AAAA,GAAZ;AAA2BC,aAAU;AAAA,WAAIA,SAAJ;AAAA,GAArC;AAAmDC,oBAAiB;AAAA,WAAIA,gBAAJ;AAAA,GAApE;AAAyFC,mBAAgB;AAAA,WAAIA,eAAJ;AAAA,GAAzG;AAA6HC,eAAY;AAAA,WAAIA,WAAJ;AAAA,GAAzI;AAAyJC,eAAY;AAAA,WAAIA,WAAJ;AAAA,GAArK;AAAqLC,sBAAmB;AAAA,WAAIA,kBAAJ;AAAA,GAAxM;AAA+NC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAA7O;AAA+PC,kBAAe;AAAA,WAAIA,cAAJ;AAAA,GAA9Q;AAAiSC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAA/S;AAAiUC,WAAQ;AAAA,WAAIA,OAAJ;AAAA,GAAzU;AAAqVC,qBAAkB;AAAA,WAAIA,iBAAJ;AAAA,GAAvW;AAA6XC,eAAY;AAAA,WAAIA,WAAJ;AAAA,GAAzY;AAAyZC,qBAAkB;AAAA,WAAIA,iBAAJ;AAAA,GAA3a;AAAicC,YAAS;AAAA,WAAIA,QAAJ;AAAA,GAA1c;AAAudC,aAAU;AAAA,WAAIA,SAAJ;AAAA,GAAje;AAA+eC,iBAAc;AAAA,WAAIA,aAAJ;AAAA,GAA7f;AAA+gBC,0BAAuB;AAAA,WAAIA,sBAAJ;AAAA,GAAtiB;AAAikBC,+BAA4B;AAAA,WAAIA,2BAAJ;AAAA,GAA7lB;AAA6nBC,mBAAgB;AAAA,WAAIA,eAAJ;AAAA,GAA7oB;AAAiqBC,oBAAiB;AAAA,WAAIA,gBAAJ;AAAA,GAAlrB;AAAusBC,mBAAgB;AAAA,WAAIA,eAAJ;AAAA,GAAvtB;AAA2uBC,YAAS;AAAA,WAAIA,QAAJ;AAAA,GAApvB;AAAiwBC,cAAW;AAAA,WAAIA,UAAJ;AAAA;AAA5wB,CAAd;AAA2yB,IAAIC,GAAJ;AAAQ1B,OAAO2B,KAAP,CAAaC,QAAQ,KAAR,CAAb,EAA4B;AAAA,uBAASC,CAAT,EAAW;AAACH,UAAIG,CAAJ;AAAM;AAAlB,CAA5B,EAAgD,CAAhD;AAAmD,IAAIC,KAAJ,EAAUC,aAAV,EAAwBC,YAAxB;AAAqChC,OAAO2B,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACE,OAAD,YAAOD,CAAP,EAAS;AAACC,YAAMD,CAAN;AAAQ,GAAlB;AAAmBE,eAAnB,YAAiCF,CAAjC,EAAmC;AAACE,oBAAcF,CAAd;AAAgB,GAApD;AAAqDG,cAArD,YAAkEH,CAAlE,EAAoE;AAACG,mBAAaH,CAAb;AAAe;AAApF,CAA1C,EAAgI,CAAhI;AAAmI,IAAII,MAAJ;AAAWjC,OAAO2B,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACK,QAAD,YAAQJ,CAAR,EAAU;AAACI,aAAOJ,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIK,KAAJ,EAAUC,KAAV;AAAgBnC,OAAO2B,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACM,OAAD,YAAOL,CAAP,EAAS;AAACK,YAAML,CAAN;AAAQ,GAAlB;AAAmBM,OAAnB,YAAyBN,CAAzB,EAA2B;AAACM,YAAMN,CAAN;AAAQ;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIO,MAAJ;AAAWpC,OAAO2B,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAACQ,QAAD,YAAQP,CAAR,EAAU;AAACO,aAAOP,CAAP;AAAS;AAApB,CAA9D,EAAoF,CAApF;AAAuF,IAAIQ,KAAJ;AAAUrC,OAAO2B,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACS,OAAD,YAAOR,CAAP,EAAS;AAACQ,YAAMR,CAAN;AAAQ;AAAlB,CAAvC,EAA2D,CAA3D;AAU3xC,IAAM3B,aAAa,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,EAAuG,IAAvG,EAA6G,IAA7G,EAAmH,IAAnH,EAAyH,IAAzH,EAA+H,IAA/H,EAAqI,IAArI,EAA2I,IAA3I,EAAiJ,IAAjJ,EAAuJ,IAAvJ,EAA6J,IAA7J,EAAmK,IAAnK,EAAyK,IAAzK,CAAnB;AAAmM;AAE1M;AACA,IAAIoC,OAAJ;;AACA,SAAeC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AAEA,gBAAIN,OAAOO,QAAX,EAAqB;AACnBC,qBAAOjC,oBAAP;AACD,aAFD,MAEO;AACLiC,qBAAOlC,aAAP;AACD,aARH,CAUE;AACA;;;AAXF,kBAYM+B,WAAWA,QAAQI,IAAR,KAAiB,SAA5B,IAAyCxC,WAAWyC,OAAX,CAAmBF,IAAnB,MAA6B,CAAC,CAZ7E;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAauB,iBAbvB;AAAA;;AAAA;AAaIG,eAbJ;AAAA;AAAA;;AAAA;AAAA,iBAcaN,OAdb;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAiBapC,WAAWyC,OAAX,CAAmBF,IAAnB,KAA4B,CAjBzC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAmBuB,SAnBvB;AAAA;;AAAA;AAmBIG,eAnBJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAqBuB,iBArBvB;AAAA;;AAAA;AAqBIA,eArBJ;;AAAA;AAuBE;AACAN,sBAAUM,IAAIC,OAAJ,IAAeD,IAAIN,OAA7B;;AAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA4BA,IAAIQ,KAAJ;;AACA,IAAIb,OAAOc,QAAX,EAAqB;AAAA,iBACNnB,kDADM;;AAChBkB,OADgB,YAChBA,KADgB;AAEpB,CAFD,MAEO;AAAA,kBACQlB,kDADR;;AACFkB,OADE,aACFA,KADE;AAEN;AAED;;;;;;;AAMA,IAAIE,IAAJ;;AACA,IAAIf,OAAOc,QAAX,EAAqB;AACnBC,SAAOpB,2BAAP;AACD,CAFD,MAEO;AACLoB,SAAOpB,2BAAP;AACD;AAED;;;;;;;;AAMO,SAASzB,SAAT,GAAqB;AAC1B,SAAO6C,KAAKC,QAAL,CAAc9C,SAAd,EAAP;AACD;;AAQM,SAASC,gBAAT,GAA4B;AACjC,SAAO4C,KAAKC,QAAL,CAAc7C,gBAAd,EAAP;AACD;;AAMM,SAASC,eAAT,GAA2B;AAChC,SAAO2C,KAAKC,QAAL,CAAc5C,eAAd,EAAP;AACD;;AAQM,SAASC,WAAT,GAAuB;AAC5B,MAAM4C,SAAS/C,WAAf;AACA,MAAIgD,IAAJ;;AACA,MAAID,MAAJ,EAAY;AACVC,WAAOd,MAAMe,OAAN,CAAc;AACnBC,WAAKH;AADc,KAAd,CAAP;AAGA,WAAQC,QAAQA,KAAKT,IAAd,IAAuB,EAA9B;AACD;;AAED,MAAMY,SAAS5B,IAAII,KAAJ,CAAUG,OAAOsB,WAAP,EAAV,EAAgCC,QAA/C;AAEAL,SAAOd,MAAMe,OAAN,CAAc;AAAEK,aAAS;AAAEC,WAAK,CAACJ,MAAD;AAAP;AAAX,GAAd,CAAP;AAEA,SAAOH,OAAOA,KAAKT,IAAZ,GAAmB,EAA1B;AACD;;AAQM,SAASnC,WAAT,GAAuB;AAC5B,MAAM2C,SAAS/C,WAAf;AACA,MAAMgD,OAAOd,MAAMe,OAAN,CAAc;AAAEC,SAAKH;AAAP,GAAd,CAAb;AACA,SAAOC,OAAOA,KAAKQ,QAAZ,GAAuB,EAA9B;AACD;;AAQM,SAASnD,kBAAT,GAA8B;AACnC,MAAM0C,SAAS9C,kBAAf;AACA,MAAM+C,OAAOd,MAAMe,OAAN,CAAc;AAAEC,SAAKH;AAAP,GAAd,CAAb;AACA,SAAOC,OAAOA,KAAKQ,QAAZ,GAAuB,EAA9B;AACD;;AAUM,SAASlD,aAAT,GAAsC;AAAA,MAAfmD,OAAe,uEAAL,GAAK;AAC3C,MAAMV,SAAS/C,WAAf;;AAEA,MAAI+C,MAAJ,EAAY;AACV,QAAMC,OAAOd,MAAMe,OAAN,CAAc;AACzBC,WAAKH;AADoB,KAAd,EAEV;AACDW,cAAQ;AACNR,aAAK,CADC;AAENX,cAAM,CAFA;AAGNoB,kBAAU;AAHJ;AADP,KAFU,CAAb;AAUA,QAAMC,WAAWf,KAAKC,QAAL,CAAce,sBAAd,EAAjB;AACA,QAAMC,OAAOL,UAAUhD,QAAQuC,KAAKc,IAAL,IAAa3D,cAAc4D,WAAd,EAArB,CAAvB;;AAEA,QAAIf,KAAKW,QAAL,KAAkB,SAAtB,EAAiC;AAC/B;AACA,UAAIC,YAAYA,SAASI,sBAAT,KAAoC,KAApD,EAA2D;AACzD,eAAOF,IAAP;AACD;;AAED,aAAO,EAAP;AACD,KArBS,CAuBV;AACA;;;AACA,qBAAeA,IAAf;AACD;;AAED,SAAO,EAAP;AACD;;AASM,SAASvD,cAAT,CAAwB0D,IAAxB,EAA8B;AACnC,MAAMC,SAAS5D,cAAc,EAAd,CAAf;;AACA,MAAI4D,MAAJ,EAAY;AACV,QAAMC,UAASrC,OAAOsB,WAAP,CAAsBc,MAAtB,SAAgCD,IAAhC,CAAf;;AACA,WAAOE,OAAP;AACD;;AACD,MAAMA,SAASrC,OAAOsB,WAAP,MAAsBa,IAAtB,CAAf;AACA,SAAOE,MAAP;AACD;;AAQM,SAAS3D,aAAT,GAAyB;AAC9B,MAAIyB,OAAOmC,YAAP,OAA0B,KAA9B,EAAqC;AACnC,WAAOnC,OAAOoC,OAAP,GAAiBC,MAAjB,CAAwBR,IAA/B;AACD;;AACD,SAAO,IAAP;AACD;;AAWM,SAASrD,OAAT,CAAiB8D,UAAjB,EAA6B;AAClC,MAAIT,IAAJ;AACAU,UAAQC,KAAR,CAAcrC,iBAAd;;AACA,MAAImC,UAAJ,EAAgB;AACdT,WAAO3B,QAAQoC,WAAWR,WAAX,EAAR,CAAP;AACD,GAFD,MAEO;AACLD,WAAO,EAAP;AACD;;AACD,SAAOA,IAAP;AACD;;AAWM,SAASpD,iBAAT,CAA2BgE,KAA3B,EAAkCC,WAAlC,EAA+C;AACpD,MAAI;AACF;AACA,QAAI/C,cAAc8C,KAAd,CAAJ,EAA0B;AACxB,aAAOA,KAAP;AACD;;AACD,QAAME,cAAcjD,MAAM+C,KAAN,EAAaC,WAAb,EAA0BD,KAA9C;AACA,QAAMG,mBAAmBhD,aAAa8C,WAAb,CAAzB;;AACA,QAAIC,eAAeC,gBAAnB,EAAqC;AACnC;AACA,kBAAUA,gBAAV,GAA6BD,WAA7B;AACD;;AACD,UAAM,IAAI9C,OAAOgD,KAAX,CAAiB,mBAAjB,yCAA2EJ,KAA3E,sBAAiGC,WAAjG,CAAN;AACD,GAZD,CAYE,OAAOI,KAAP,EAAc;AACd,UAAM,IAAIjD,OAAOgD,KAAX,CAAiB,mBAAjB,EAAsCC,KAAtC,CAAN;AACD;AACF;;AAUM,SAASpE,WAAT,CAAqBqE,WAArB,EAAkC;AACvC,MAAIC,CAAJ;AACAA,MAAID,YAAYE,OAAZ,CAAoB,8BAApB,EAAoD,EAApD,EAAwDC,IAAxD,GAA+DpB,WAA/D,EAAJ;AACAkB,MAAIA,EAAEC,OAAF,CAAU,uBAAV,EAAmC,UAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,WAAaA,EAAEC,WAAF,EAAb;AAAA,GAAnC,CAAJ;AACAN,MAAIA,EAAEC,OAAF,CAAU,qBAAV,EAAiC,UAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,WAAaD,IAAIC,EAAEC,WAAF,EAAjB;AAAA,GAAjC,CAAJ;AACA,SAAON,CAAP;AACD;;AAWM,SAASrE,iBAAT,CAA2B4E,QAA3B,EAAqCC,GAArC,EAA0C;AAC/C,MAAIC,gBAAgB,EAApB;AACA,MAAIC,UAAU,EAAd,CAF+C,CAG/C;;AACA,MAAIH,SAASI,KAAb,EAAoB;AAClBF,oBAAgB/E,YAAY6E,SAASI,KAArB,CAAhB;AACAD,yBAAmBH,SAASK,QAA5B,SAAwCH,aAAxC,CAFkB,CAGlB;AACA;AACD,GALD,MAKO,IAAID,OAAOA,IAAID,QAAX,IAAuBC,IAAID,QAAJ,CAAaM,MAApC,IACTL,IAAID,QAAJ,CAAa,CAAb,EAAgBI,KADX,EACkB;AACvBF,oBAAgB/E,YAAY8E,IAAID,QAAJ,CAAa,CAAb,EAAgBI,KAA5B,CAAhB;AACAD,yBAAmBF,IAAID,QAAJ,CAAa,CAAb,EAAgBK,QAAnC,SAA+CH,aAA/C;AACD;;AACDF,WAASO,YAAT,GAA2BJ,OAA3B;AACAH,WAASQ,kBAAT,GAAiCL,OAAjC;AACAH,WAASS,kBAAT,GAAiCN,OAAjC;AACAH,WAASU,cAAT,GAA6BP,OAA7B;AACAH,WAASW,YAAT,GAA2BR,OAA3B,WAlB+C,CAmB/C;;AACA,SAAOH,QAAP;AACD;;AAUM,SAAS3E,QAAT,CAAkBuF,IAAlB,EAAwB;AAC7B,SAAQA,QAAQ,sBAAOA,IAAP,MAAgB,QAAxB,IAAoC,CAACC,MAAMC,OAAN,CAAcF,IAAd,CAArC,IAA4DA,SAAS,IAA7E;AACD;;AAWM,SAAStF,SAAT,CAAmByF,MAAnB,EAA2BC,MAA3B,EAAmC;AACxC,MAAI3F,SAAS0F,MAAT,KAAoB1F,SAAS2F,MAAT,CAAxB,EAA0C;AACxCC,WAAOC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnC,UAAI/F,SAAS2F,OAAOI,GAAP,CAAT,CAAJ,EAA2B;AAAA;;AACzB,YAAI,CAACL,OAAOK,GAAP,CAAL,EAAkBH,OAAOI,MAAP,CAAcN,MAAd,uCAAyBK,GAAzB,IAA+B,EAA/B;AAClB9F,kBAAUyF,OAAOK,GAAP,CAAV,EAAuBJ,OAAOI,GAAP,CAAvB;AACD,OAHD,MAGO;AAAA;;AACLH,eAAOI,MAAP,CAAcN,MAAd,yCAAyBK,GAAzB,IAA+BJ,OAAOI,GAAP,CAA/B;AACD;AACF,KAPD;AAQD;;AACD,SAAOL,MAAP;AACD;;AAYM,SAASxF,aAAT,CAAuB+F,IAAvB,EAA6BC,EAA7B,EAAiCC,MAAjC,EAAyC;AAC9CjF,QAAM+E,IAAN,EAAYG,MAAZ,EAD8C,CACzB;;AACrBlF,QAAMgF,EAAN,EAAUE,MAAV;AACAlF,QAAMiF,MAAN,EAAcE,MAAd;;AAEA,MAAIJ,SAASC,EAAb,EAAiB;AACf,WAAOC,MAAP;AACD,GAP6C,CAQ9C;;;AACA,MAAIF,SAAS,IAAT,IAAiBC,OAAO,GAA5B,EAAiC;AAC/B,QAAMI,kBAAkBH,SAAS,OAAjC;AACA,WAAOG,eAAP;AACD;;AAED,MAAIL,SAAS,IAAT,IAAiBC,OAAO,GAA5B,EAAiC;AAC/B,QAAMI,mBAAkBH,SAAS,IAAjC;;AACA,WAAOG,gBAAP;AACD;;AAED,MAAIL,SAAS,IAAT,IAAiBC,OAAO,GAA5B,EAAiC;AAC/B,QAAMI,oBAAkBH,SAAS,OAAjC;;AACA,WAAOG,iBAAP;AACD,GAtB6C,CAwB9C;;;AACA,MAAIL,SAAS,IAAT,IAAiBC,OAAO,IAA5B,EAAkC;AAChC,QAAMI,oBAAkBH,SAAS,OAAjC;;AACA,WAAOG,iBAAP;AACD;;AAED,MAAIL,SAAS,GAAT,IAAgBC,OAAO,IAA3B,EAAiC;AAC/B,QAAMI,oBAAkBH,SAAS,UAAjC;;AACA,WAAOG,iBAAP;AACD;;AAED,MAAIL,SAAS,IAAT,IAAiBC,OAAO,IAA5B,EAAkC;AAChC,QAAMI,oBAAkBH,SAAS,MAAjC;;AACA,WAAOG,iBAAP;AACD,GAtC6C,CAwC9C;;;AACA,MAAIL,SAAS,IAAT,IAAiBC,OAAO,IAA5B,EAAkC;AAChC,QAAMI,oBAAkBH,SAAS,EAAjC;;AACA,WAAOG,iBAAP;AACD;;AAED,MAAIL,SAAS,GAAT,IAAgBC,OAAO,IAA3B,EAAiC;AAC/B,QAAMI,oBAAkBH,SAAS,QAAjC;;AACA,WAAOG,iBAAP;AACD;;AAED,MAAIL,SAAS,IAAT,IAAiBC,OAAO,IAA5B,EAAkC;AAChC,QAAMI,oBAAkBH,SAAS,MAAjC;;AACA,WAAOG,iBAAP;AACD,GAtD6C,CAwD9C;;;AACA,MAAIL,SAAS,GAAT,IAAgBC,OAAO,IAA3B,EAAiC;AAC/B,QAAMI,oBAAkBH,SAAS,KAAjC;;AACA,WAAOG,iBAAP;AACD;;AAED,MAAIL,SAAS,IAAT,IAAiBC,OAAO,IAA5B,EAAkC;AAChC,QAAMI,qBAAkBH,SAAS,SAAjC;;AACA,WAAOG,kBAAP;AACD;;AAED,MAAIL,SAAS,IAAT,IAAiBC,OAAO,IAA5B,EAAkC;AAChC,QAAMI,qBAAkBH,SAAS,QAAjC;;AACA,WAAOG,kBAAP;AACD,GAtE6C,CAuE9C;;;AACA,QAAM,IAAIrF,OAAOgD,KAAX,CAAiB,mBAAjB,EAAsC,oCAAtC,CAAN;AACD;;AASM,SAAS9D,sBAAT,GAA+D;AAAA,iFAAJ,EAAI;AAAA,MAA7BoG,SAA6B,QAA7BA,SAA6B;AAAA,MAAlBC,SAAkB,QAAlBA,SAAkB;;AACpE,MAAIC,MAAJ;;AAEA,MAAID,SAAJ,EAAe;AACbC,aAAS3E,MAAM4E,YAAN,CAAmB;AAC1B,4BAAsBF;AADI,KAAnB,EAEN;AAAEG,YAAM;AAAE,6BAAqB,CAAvB;AAA0B,sBAAc;AAAxC;AAAR,KAFM,CAAT;AAGD;;AAED,MAAI,CAACF,MAAD,IAAWF,SAAf,EAA0B;AACxBE,aAAS3E,MAAM4E,YAAN,CAAmB;AAC1B,4BAAsBH;AADI,KAAnB,EAEN;AAAEI,YAAM;AAAE,6BAAqB,CAAvB;AAA0B,sBAAc;AAAxC;AAAR,KAFM,CAAT;AAGD;;AAED,SAAOF,UAAU,IAAjB;AACD;;AASM,SAASrG,2BAAT,GAAmE;AAAA,kFAAJ,EAAI;AAAA,MAA5BmG,SAA4B,SAA5BA,SAA4B;AAAA,MAAjBK,QAAiB,SAAjBA,QAAiB;;AAAA,cAC7CA,YAAY,EADiC;AAAA,MAC3DJ,SAD2D,SAChEnE,GADgE,EAC7B;;;AAC3C,SAAOlC,uBAAuB;AAAEoG,wBAAF;AAAaC;AAAb,GAAvB,CAAP;AACD;;AAED;;;;;;;;AAQA,SAASK,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAO,mBAAIA,UAAJ,EAAgBC,OAAhB,GAA0BC,MAA1B,CAAiC,UAACC,GAAD,EAAMxC,CAAN,EAASyC,CAAT,EAAe;AACrD,QAAIC,IAAIC,SAAS3C,CAAT,EAAY,EAAZ,CAAR;;AACA,QAAIyC,IAAI,CAAJ,KAAU,CAAd,EAAiB;AAAEC,WAAK,CAAL;AAAS;;AAC5B,QAAIA,IAAI,CAAR,EAAW;AAAEA,WAAK,CAAL;AAAS;;AACtB,WAAOF,MAAME,CAAb;AACD,GALM,EAKJ,CALI,IAKC,EALD,KAKQ,CALf;AAMD,C,CAED;;;AACO,IAAM9G,kBAAkBc,MAAMkG,KAAN,CAAY,UAACC,CAAD;AAAA,SAAO,iBAAiBC,IAAjB,CAAsBD,CAAtB,KAA4BT,UAAUS,CAAV,CAAnC;AAAA,CAAZ,CAAxB;AAEA,IAAMhH,mBAAmBa,MAAMkG,KAAN,CAAY,UAACC,CAAD;AAAA,SAAO,eAAeC,IAAf,CAAoBD,CAApB,CAAP;AAAA,CAAZ,CAAzB;AAEA,IAAM/G,kBAAkBY,MAAMkG,KAAN,CAAY,UAACC,CAAD;AAAA,SAAO,aAAaC,IAAb,CAAkBD,CAAlB,CAAP;AAAA,CAAZ,CAAxB;AAEA,IAAM9G,WAAWW,MAAMkG,KAAN,CAAY,UAACC,CAAD;AAAA,SAAO,eAAeC,IAAf,CAAoBD,CAApB,CAAP;AAAA,CAAZ,CAAjB;;AAGA,IAAM7G,aAAa,UAAC6G,CAAD;AAAA,SAAO,6aAA6aC,IAA7a,CAAkbD,CAAlb,CAAP;AAAA,CAAnB","sourcesContent":["import url from \"url\";\nimport { parse, isValidNumber, getPhoneCode } from \"libphonenumber-js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { Shops } from \"/lib/collections\";\n\n// Array of ISO Language codes for all languages that use latin based char sets\n// list is based on this matrix http://w3c.github.io/typography/gap-analysis/language-matrix.html\n// list of lang codes https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\nexport const latinLangs = [\"az\", \"da\", \"de\", \"en\", \"es\", \"ff\", \"fr\", \"ha\", \"hr\", \"hu\", \"ig\", \"is\", \"it\", \"jv\", \"ku\", \"ms\", \"nl\", \"no\", \"om\", \"pl\", \"pt\", \"ro\", \"sv\", \"sw\", \"tl\", \"tr\", \"uz\", \"vi\", \"yo\"]; // eslint-disable-line max-len\n\n// dynamic import of slugiy/transliteration.slugify\nlet slugify;\nasync function lazyLoadSlugify() {\n  let mod;\n  // getting the shops base language\n  let lang;\n  if (Meteor.isServer) {\n    lang = getPrimaryShopLang();\n  } else {\n    lang = getShopLang();\n  }\n\n  // if slugify has been loaded but the language has changed\n  // to be a non latin based language then load transliteration\n  if (slugify && slugify.name === \"replace\" && latinLangs.indexOf(lang) === -1) {\n    mod = await import(\"transliteration\");\n  } else if (slugify) {\n    // if slugify/transliteration is loaded and no lang change\n    return;\n  } else if (latinLangs.indexOf(lang) >= 0) {\n    // if the shops language use latin based chars load slugify else load transliterations's slugify\n    mod = await import(\"slugify\");\n  } else {\n    mod = await import(\"transliteration\");\n  }\n  // slugify is exported to modules.default while transliteration is exported to modules.slugify\n  slugify = mod.default || mod.slugify;\n}\n\n\nlet Media;\nif (Meteor.isClient) {\n  ({ Media } = require(\"/imports/plugins/core/files/client\"));\n} else {\n  ({ Media } = require(\"/imports/plugins/core/files/server\"));\n}\n\n/**\n * @file Various helper methods\n *\n * @namespace Helpers\n */\n\nlet Core;\nif (Meteor.isClient) {\n  Core = require(\"/client/api\");\n} else {\n  Core = require(\"/server/api\");\n}\n\n/**\n * @name getShopId\n * @method\n * @memberof Helpers\n * @return {String} returns current shopId\n */\nexport function getShopId() {\n  return Core.Reaction.getShopId();\n}\n\n/**\n * @name getPrimaryShopId\n * @method\n * @memberof Helpers\n * @return {String} returns primary shopId\n */\nexport function getPrimaryShopId() {\n  return Core.Reaction.getPrimaryShopId();\n}\n\n/**\n * getShopSettings\n * @return {Object} returns current shop settings\n */\nexport function getShopSettings() {\n  return Core.Reaction.getShopSettings();\n}\n\n/**\n * @name getShopName\n * @method\n * @memberof Helpers\n * @return {String} returns current shop name\n */\nexport function getShopName() {\n  const shopId = getShopId();\n  let shop;\n  if (shopId) {\n    shop = Shops.findOne({\n      _id: shopId\n    });\n    return (shop && shop.name) || \"\";\n  }\n\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  shop = Shops.findOne({ domains: { $in: [domain] } });\n\n  return shop ? shop.name : \"\";\n}\n\n/**\n * @name getShopLang\n * @method\n * @memberof Helpers\n * @return {String} returns current shop language\n */\nexport function getShopLang() {\n  const shopId = getShopId();\n  const shop = Shops.findOne({ _id: shopId });\n  return shop ? shop.language : \"\";\n}\n\n/**\n * @name getPrimaryShopLang\n * @method\n * @memberof Helpers\n * @return {String} returns primary shop language\n */\nexport function getPrimaryShopLang() {\n  const shopId = getPrimaryShopId();\n  const shop = Shops.findOne({ _id: shopId });\n  return shop ? shop.language : \"\";\n}\n\n\n/**\n * @name getShopPrefix\n * @method\n * @memberof Helpers\n * @param {String} leading - Default \"/\", prefix, the prefix with a leading shash\n * @return {String} returns shop url prefix\n */\nexport function getShopPrefix(leading = \"/\") {\n  const shopId = getShopId();\n\n  if (shopId) {\n    const shop = Shops.findOne({\n      _id: shopId\n    }, {\n      fields: {\n        _id: 1,\n        name: 1,\n        shopType: 1\n      }\n    });\n\n    const settings = Core.Reaction.getMarketplaceSettings();\n    const slug = leading + getSlug(shop.slug || getShopName().toLowerCase());\n\n    if (shop.shopType === \"primary\") {\n      // If naked routes is turned off, use the shop slug for our primary shop routes\n      if (settings && settings.marketplaceNakedRoutes === false) {\n        return slug;\n      }\n\n      return \"\";\n    }\n\n    // If this is not the primary shop, use the shop slug in routes for this shop\n    // TODO: \"/shop\" should be configurable in marketplace settings\n    return `/shop${slug}`;\n  }\n\n  return \"\";\n}\n\n/**\n * @name getAbsoluteUrl\n * @method\n * @memberof Helpers\n * @param {String} path - path to append to absolute Url, path should be prefixed with / if necessary\n * @return {String} returns absolute url (shop prefix + path)\n */\nexport function getAbsoluteUrl(path) {\n  const prefix = getShopPrefix(\"\");\n  if (prefix) {\n    const absUrl = Meteor.absoluteUrl(`${prefix}/${path}`);\n    return absUrl;\n  }\n  const absUrl = Meteor.absoluteUrl(`${path}`);\n  return absUrl;\n}\n\n/**\n * @name getCurrentTag\n * @method\n * @memberof Helpers\n * @return {String} returns current tag\n */\nexport function getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n  return null;\n}\n\n/**\n * @name getSlug\n * @method\n * @memberof Helpers\n * @summary return a slugified string using \"slugify\" from transliteration\n * https://www.npmjs.com/package/transliteration\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  let slug;\n  Promise.await(lazyLoadSlugify());\n  if (slugString) {\n    slug = slugify(slugString.toLowerCase());\n  } else {\n    slug = \"\";\n  }\n  return slug;\n}\n\n/**\n * @name formatPhoneNumber\n * @method\n * @memberof Helpers\n * @summary prepends country code to phone no. if required\n * @param  {String} phone the original phone no.\n * @param  {String} countryCode the country's code to which the phone no. belongs to\n * @return {String} the phone no. with country extension.\n */\nexport function formatPhoneNumber(phone, countryCode) {\n  try {\n    // phone no. already has the country code attached\n    if (isValidNumber(phone)) {\n      return phone;\n    }\n    const phoneNumber = parse(phone, countryCode).phone;\n    const countryExtension = getPhoneCode(countryCode);\n    if (phoneNumber && countryExtension) {\n      // try attaching the country code to phone number\n      return `${countryExtension}${phoneNumber}`;\n    }\n    throw new Meteor.Error(\"invalid-parameter\", `Incorrect format for phone number ${phone} with country ${countryCode}`);\n  } catch (error) {\n    throw new Meteor.Error(\"invalid-parameter\", error);\n  }\n}\n\n/**\n * @name toCamelCase\n * @method\n * @memberof Helpers\n * @summary helper for i18n - special toCamelCase for converting a string to camelCase for use with i18n keys\n * @param {String} needscamels String to be camel cased.\n * @return {String} camelCased string\n */\nexport function toCamelCase(needscamels) {\n  let s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, (a, b, c) => c.toUpperCase());\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, (a, b, c) => b + c.toUpperCase());\n  return s;\n}\n\n/**\n * @name translateRegistry\n * @method\n * @memberof Helpers\n * @summary adds i18n strings to registry object\n * @param {Object} registry registry object\n * @param {Object} [app] complete package object\n * @return {Object} with updated registry\n */\nexport function translateRegistry(registry, app) {\n  let registryLabel = \"\";\n  let i18nKey = \"\";\n  // first we check the default place for a label\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = `admin.${registry.provides}.${registryLabel}`;\n    // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length &&\n    app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = `admin.${app.registry[0].provides}.${registryLabel}`;\n  }\n  registry.i18nKeyLabel = `${i18nKey}Label`;\n  registry.i18nKeyDescription = `${i18nKey}Description`;\n  registry.i18nKeyPlaceholder = `${i18nKey}Placeholder`;\n  registry.i18nKeyTooltip = `${i18nKey}Tooltip`;\n  registry.i18nKeyTitle = `${i18nKey}Title`;\n  // return registry object with added i18n keys\n  return registry;\n}\n\n/**\n * @name isObject\n * @method\n * @memberof Helpers\n * @summary Simple is object check.\n * @param {Object} item item to check if is an object\n * @returns {boolean} return true if object\n */\nexport function isObject(item) {\n  return (item && typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n/**\n * @name mergeDeep\n * @method\n * @memberof Helpers\n * @summary Helper for Deep merge two objects.\n * @param {Object} target deep merge into this object\n * @param {Object} source merge this object\n * @returns {Object} return deep merged object\n */\nexport function mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    });\n  }\n  return target;\n}\n\n/**\n * @name convertWeight\n * @method\n * @memberOf Helpers\n * @summary Convert weight from/to different Units of Measure\n * @param {String} from The UOM to convert from\n * @param {String} to The UOM to convert to\n * @param {Number} weight The value to convert\n * @returns {Number} The converted value\n */\nexport function convertWeight(from, to, weight) {\n  check(from, String); // we need to check for specific values\n  check(to, String);\n  check(weight, Number);\n\n  if (from === to) {\n    return weight;\n  }\n  // grams\n  if (from === \"lb\" && to === \"g\") {\n    const convertedWeight = weight * 453.592;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"g\") {\n    const convertedWeight = weight * 1000;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"g\") {\n    const convertedWeight = weight * 28.3495;\n    return convertedWeight;\n  }\n\n  // lbs\n  if (from === \"kg\" && to === \"lb\") {\n    const convertedWeight = weight * 2.20462;\n    return convertedWeight;\n  }\n\n  if (from === \"g\" && to === \"lb\") {\n    const convertedWeight = weight * 0.00220462;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"lb\") {\n    const convertedWeight = weight * 0.0625;\n    return convertedWeight;\n  }\n\n  // oz\n  if (from === \"lb\" && to === \"oz\") {\n    const convertedWeight = weight * 16;\n    return convertedWeight;\n  }\n\n  if (from === \"g\" && to === \"oz\") {\n    const convertedWeight = weight * 0.035274;\n    return convertedWeight;\n  }\n\n  if (from === \"kg\" && to === \"oz\") {\n    const convertedWeight = weight * 35.274;\n    return convertedWeight;\n  }\n\n  // kilograms\n  if (from === \"g\" && to === \"kg\") {\n    const convertedWeight = weight * 0.001;\n    return convertedWeight;\n  }\n\n  if (from === \"oz\" && to === \"kg\") {\n    const convertedWeight = weight * 0.0283495;\n    return convertedWeight;\n  }\n\n  if (from === \"lb\" && to === \"kg\") {\n    const convertedWeight = weight * 0.453592;\n    return convertedWeight;\n  }\n  // if we made it here, something has gone wrong\n  throw new Meteor.Error(\"invalid-parameter\", \"Invalid from or to value specified\");\n}\n\n/**\n * @name getPrimaryMediaForItem\n * @summary Gets the FileRecord for the primary media item associated with the variant or product\n *   for the given item\n * @param {Object} item Must have `productId` and/or `variantId` set to get back a result.\n * @return {FileRecord|null}\n */\nexport function getPrimaryMediaForItem({ productId, variantId } = {}) {\n  let result;\n\n  if (variantId) {\n    result = Media.findOneLocal({\n      \"metadata.variantId\": variantId\n    }, { sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 } });\n  }\n\n  if (!result && productId) {\n    result = Media.findOneLocal({\n      \"metadata.productId\": productId\n    }, { sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 } });\n  }\n\n  return result || null;\n}\n\n/**\n * @name getPrimaryMediaForOrderItem\n * @summary Gets the FileRecord for the primary media item associated with the variant or product\n *   for the given item\n * @param {Object} item Must have `productId` and/or `variants._id` set to get back a result.\n * @return {FileRecord|null}\n */\nexport function getPrimaryMediaForOrderItem({ productId, variants } = {}) {\n  const { _id: variantId } = variants || {}; // Order item format\n  return getPrimaryMediaForItem({ productId, variantId });\n}\n\n/*\n * @name luhnValid\n * @method\n * @memberOf Helpers\n * @summary Checks if a number passes Luhn's test\n * @param {String} cardNumber The card number to check\n * @returns {Boolean} The result of the test\n */\nfunction luhnValid(cardNumber) {\n  return [...cardNumber].reverse().reduce((sum, c, i) => {\n    let d = parseInt(c, 10);\n    if (i % 2 !== 0) { d *= 2; }\n    if (d > 9) { d -= 9; }\n    return sum + d;\n  }, 0) % 10 === 0;\n}\n\n// Regex to do card validations\nexport const ValidCardNumber = Match.Where((x) => /^[0-9]{12,19}$/.test(x) && luhnValid(x));\n\nexport const ValidExpireMonth = Match.Where((x) => /^[0-9]{1,2}$/.test(x));\n\nexport const ValidExpireYear = Match.Where((x) => /^[0-9]{4}$/.test(x));\n\nexport const ValidCVV = Match.Where((x) => /^[0-9]{3,4}$/.test(x));\n\n// Email regex\nexport const ValidEmail = (x) => /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/.test(x); // eslint-disable-line max-len\n"]},"sourceType":"script","hash":"98e12516fad9575b914af3653f4e094d4e908845"}
