{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/collections/sessions.js","filename":"server/publications/collections/sessions.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/collections/sessions.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/collections/sessions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/collections/sessions.js"}},"code":"module.export({\n  ServerSessions: () => ServerSessions\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\nlet Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 3);\nconst ServerSessions = new Mongo.Collection(\"Sessions\");\nMeteor.publish(\"Sessions\", sessionId => {\n  check(sessionId, Match.OneOf(String, null));\n  const created = new Date().getTime();\n  let newSessionId; // if we don\"t have a sessionId create a new session\n  // REALLY - we should always have a client sessionId\n\n  if (!sessionId) {\n    newSessionId = ServerSessions.insert({\n      created\n    });\n  } else {\n    newSessionId = sessionId;\n  } // get the session from existing sessionId\n\n\n  const serverSession = ServerSessions.find(newSessionId); // if not found, also create a new server session\n\n  if (serverSession.count() === 0) {\n    ServerSessions.insert({\n      _id: newSessionId,\n      created\n    });\n  } // set global sessionId\n\n\n  Reaction.sessionId = newSessionId; // return cursor\n\n  return ServerSessions.find(newSessionId);\n});","map":{"version":3,"sources":["server/publications/collections/sessions.js"],"names":["module","export","ServerSessions","Mongo","watch","require","v","Meteor","check","Match","Reaction","Collection","publish","sessionId","OneOf","String","created","Date","getTime","newSessionId","insert","serverSession","find","count","_id"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,kBAAe,MAAIA;AAApB,CAAd;AAAmD,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,QAAMG,CAAN,EAAQ;AAACH,YAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,KAAJ,EAAUC,KAAV;AAAgBT,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ,GAAlB;;AAAmBG,QAAMH,CAAN,EAAQ;AAACG,YAAMH,CAAN;AAAQ;;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAII,QAAJ;AAAaV,OAAOI,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACK,WAASJ,CAAT,EAAW;AAACI,eAASJ,CAAT;AAAW;;AAAxB,CAAlC,EAA4D,CAA5D;AAYvS,MAAMJ,iBAAiB,IAAIC,MAAMQ,UAAV,CAAqB,UAArB,CAAvB;AAEPJ,OAAOK,OAAP,CAAe,UAAf,EAA4BC,SAAD,IAAe;AACxCL,QAAMK,SAAN,EAAiBJ,MAAMK,KAAN,CAAYC,MAAZ,EAAoB,IAApB,CAAjB;AACA,QAAMC,UAAU,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AACA,MAAIC,YAAJ,CAHwC,CAIxC;AACA;;AACA,MAAI,CAACN,SAAL,EAAgB;AACdM,mBAAejB,eAAekB,MAAf,CAAsB;AAAEJ;AAAF,KAAtB,CAAf;AACD,GAFD,MAEO;AACLG,mBAAeN,SAAf;AACD,GAVuC,CAWxC;;;AACA,QAAMQ,gBAAgBnB,eAAeoB,IAAf,CAAoBH,YAApB,CAAtB,CAZwC,CAcxC;;AACA,MAAIE,cAAcE,KAAd,OAA0B,CAA9B,EAAiC;AAC/BrB,mBAAekB,MAAf,CAAsB;AAAEI,WAAKL,YAAP;AAAqBH;AAArB,KAAtB;AACD,GAjBuC,CAmBxC;;;AACAN,WAASG,SAAT,GAAqBM,YAArB,CApBwC,CAsBxC;;AACA,SAAOjB,eAAeoB,IAAf,CAAoBH,YAApB,CAAP;AACD,CAxBD","sourcesContent":["import { Mongo } from \"meteor/mongo\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * Reaction Server / amplify permanent sessions\n * If no id is passed we create a new session\n * Load the session\n * If no session is loaded, creates a new one\n */\n\nexport const ServerSessions = new Mongo.Collection(\"Sessions\");\n\nMeteor.publish(\"Sessions\", (sessionId) => {\n  check(sessionId, Match.OneOf(String, null));\n  const created = new Date().getTime();\n  let newSessionId;\n  // if we don\"t have a sessionId create a new session\n  // REALLY - we should always have a client sessionId\n  if (!sessionId) {\n    newSessionId = ServerSessions.insert({ created });\n  } else {\n    newSessionId = sessionId;\n  }\n  // get the session from existing sessionId\n  const serverSession = ServerSessions.find(newSessionId);\n\n  // if not found, also create a new server session\n  if (serverSession.count() === 0) {\n    ServerSessions.insert({ _id: newSessionId, created });\n  }\n\n  // set global sessionId\n  Reaction.sessionId = newSessionId;\n\n  // return cursor\n  return ServerSessions.find(newSessionId);\n});\n"]},"sourceType":"script","hash":"388a89d24bf8a570ab50fe79a3a1b47aa0f69756"}
