{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/api/core/email/email.js","filename":"server/api/core/email/email.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/api/core/email/email.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/api/core/email/email.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/api/core/email/email.js"}},"code":"module.export({\n  send: () => send,\n  getSubject: () => getSubject,\n  getTemplate: () => getTemplate,\n  getTemplateFile: () => getTemplateFile,\n  getShopLogo: () => getShopLogo\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Job;\nmodule.watch(require(\"../../../../imports/plugins/core/job-collection/lib\"), {\n  Job(v) {\n    Job = v;\n  }\n\n}, 1);\nlet Jobs, Templates;\nmodule.watch(require(\"../../../../lib/collections\"), {\n  Jobs(v) {\n    Jobs = v;\n  },\n\n  Templates(v) {\n    Templates = v;\n  }\n\n}, 2);\nlet Reaction, Logger;\nmodule.watch(require(\"../..\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 3);\nlet Media;\nmodule.watch(require(\"../../../../imports/plugins/core/files/server\"), {\n  Media(v) {\n    Media = v;\n  }\n\n}, 4);\n\nfunction send(options) {\n  return new Job(Jobs, \"sendEmail\", options).retry({\n    retries: 5,\n    wait: 3 * 60000\n  }).save();\n}\n\nfunction getSubject(template) {\n  if (typeof template !== \"string\") {\n    const msg = \"Reaction.Email.getSubject() requires a template name\";\n    Logger.error(msg);\n    throw new Meteor.Error(\"invalid-parameter\", msg);\n  } // set default\n\n\n  const language = Reaction.getShopLanguage(); // check database for a matching template\n\n  const tmpl = Templates.findOne({\n    name: template,\n    language\n  }); // use that template if found\n\n  if (tmpl && tmpl.template) {\n    return tmpl.subject;\n  }\n\n  return \"A message from {{shop.name}}\";\n}\n\nfunction getTemplate(template) {\n  if (typeof template !== \"string\") {\n    const msg = \"Reaction.Email.getTemplate() requires a template name\";\n    Logger.error(msg);\n    throw new Meteor.Error(\"invalid-parameter\", msg);\n  } // set default\n\n\n  const language = Reaction.getShopLanguage(); // check database for a matching template\n\n  const tmpl = Templates.findOne({\n    name: template,\n    language\n  }); // use that template if found\n\n  if (tmpl && tmpl.template) {\n    return tmpl.template;\n  } // otherwise, use the default template from the filesystem\n\n\n  return getTemplateFile(template);\n}\n\nfunction getTemplateFile(file) {\n  if (typeof file !== \"string\") {\n    const msg = \"Reaction.Email.getTemplateFile() requires a template name\";\n    Logger.error(msg);\n    throw new Meteor.Error(\"invalid-parameter\", msg);\n  }\n\n  try {\n    return Assets.getText(`email/templates/${file}.html`);\n  } catch (e) {\n    Logger.warn(`Template not found: ${file}. Falling back to coreDefault.html`);\n    return Assets.getText(\"email/templates/coreDefault.html\");\n  }\n}\n\nfunction getShopLogo(shop) {\n  let emailLogo;\n\n  if (Array.isArray(shop.brandAssets)) {\n    const brandAsset = shop.brandAssets.find(asset => asset.type === \"navbarBrandImage\");\n    const fileRecord = brandAsset && Promise.await(Media.findOne(brandAsset.mediaId));\n    emailLogo = fileRecord && fileRecord.url({\n      absolute: true,\n      store: \"medium\"\n    });\n  }\n\n  return emailLogo || `${Meteor.absoluteUrl()}resources/email-templates/shop-logo.png`;\n}","map":{"version":3,"sources":["server/api/core/email/email.js"],"names":["module","export","send","getSubject","getTemplate","getTemplateFile","getShopLogo","Meteor","watch","require","v","Job","Jobs","Templates","Reaction","Logger","Media","options","retry","retries","wait","save","template","msg","error","Error","language","getShopLanguage","tmpl","findOne","name","subject","file","Assets","getText","e","warn","shop","emailLogo","Array","isArray","brandAssets","brandAsset","find","asset","type","fileRecord","Promise","await","mediaId","url","absolute","store","absoluteUrl"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Job } from \"/imports/plugins/core/job-collection/lib\";\nimport { Jobs, Templates } from \"/lib/collections\";\nimport { Reaction, Logger } from \"/server/api\";\nimport { Media } from \"/imports/plugins/core/files/server\";\n\n/**\n * @file `Reaction.Email` methods for creating e-mail jobs, fetching e-mail templates and e-mail subject lines\n *\n * @see https://github.com/reactioncommerce/reaction/pull/1282\n * @namespace Email\n */\n\n/**\n * @method send\n * @memberof Email\n * @summary Add send e-mail job to job queue.\n * The worker will then process it immediately (in batches of up to 10) and will retry failures up to 5 times\n * (waiting 3 mins between each try) before failing completely.\n * All email sending attempts are logged in the job collection.\n * @see (Job API doc) https://github.com/vsivsi/meteor-job-collection/#user-content-job-api\n * @example Reaction.Email.send({\n    from: 'me@example.com',\n    to: 'you@example.com',\n    subject: 'RE: new email API',\n    html: SSR.render('some-name', { shopUrl: Meteor.absoluteUrl() })\n  });\n * @param  {Object} options - object containing to/from/subject/html String keys\n * @return {Boolean} returns job object\n */\nexport function send(options) {\n  return new Job(Jobs, \"sendEmail\", options)\n    .retry({\n      retries: 5,\n      wait: 3 * 60000\n    }).save();\n}\n\n/**\n * @method getSubject\n * @memberof Email\n * @summary Returns a subject source for SSR consumption\n * layout must be defined + template\n * @example SSR.compileTemplate(subject, Reaction.Email.getSubject(tpl));\n * @param {String} template name of the template in either Layouts or fs\n * @returns {Object} returns source\n */\nexport function getSubject(template) {\n  if (typeof template !== \"string\") {\n    const msg = \"Reaction.Email.getSubject() requires a template name\";\n    Logger.error(msg);\n    throw new Meteor.Error(\"invalid-parameter\", msg);\n  }\n\n  // set default\n  const language = Reaction.getShopLanguage();\n\n  // check database for a matching template\n  const tmpl = Templates.findOne({\n    name: template,\n    language\n  });\n\n  // use that template if found\n  if (tmpl && tmpl.template) {\n    return tmpl.subject;\n  }\n  return \"A message from {{shop.name}}\";\n}\n\n/**\n * @method getTemplate\n * @memberof Email\n * @summary Returns a template source for SSR consumption. layout must be defined + template\n * @example Reaction.Email.getTemplate('path/of/template');\n * @param {String} template name of the template in either Layouts or fs\n * @returns {Object} returns source\n */\nexport function getTemplate(template) {\n  if (typeof template !== \"string\") {\n    const msg = \"Reaction.Email.getTemplate() requires a template name\";\n    Logger.error(msg);\n    throw new Meteor.Error(\"invalid-parameter\", msg);\n  }\n\n  // set default\n  const language = Reaction.getShopLanguage();\n\n  // check database for a matching template\n  const tmpl = Templates.findOne({\n    name: template,\n    language\n  });\n\n  // use that template if found\n  if (tmpl && tmpl.template) {\n    return tmpl.template;\n  }\n\n  // otherwise, use the default template from the filesystem\n  return getTemplateFile(template);\n}\n\n/**\n * @method getTemplateFile\n * @memberof Email\n * @param  {String} file name of the template on file system\n * @return {String} returns source\n */\nexport function getTemplateFile(file) {\n  if (typeof file !== \"string\") {\n    const msg = \"Reaction.Email.getTemplateFile() requires a template name\";\n    Logger.error(msg);\n    throw new Meteor.Error(\"invalid-parameter\", msg);\n  }\n\n  try {\n    return Assets.getText(`email/templates/${file}.html`);\n  } catch (e) {\n    Logger.warn(`Template not found: ${file}. Falling back to coreDefault.html`);\n    return Assets.getText(\"email/templates/coreDefault.html\");\n  }\n}\n\n\n/**\n * @method getShopLogo\n * @summary Get absolute URL for shop logo, if available. If not, use default logo URL.\n * @memberof Email\n * @param  {Object} shop - shop\n * @return {String} Absolute image URL\n */\nexport function getShopLogo(shop) {\n  let emailLogo;\n  if (Array.isArray(shop.brandAssets)) {\n    const brandAsset = shop.brandAssets.find((asset) => asset.type === \"navbarBrandImage\");\n    const fileRecord = brandAsset && Promise.await(Media.findOne(brandAsset.mediaId));\n    emailLogo = fileRecord && fileRecord.url({ absolute: true, store: \"medium\" });\n  }\n  return emailLogo || `${Meteor.absoluteUrl()}resources/email-templates/shop-logo.png`;\n}\n"]},"sourceType":"script","hash":"b3c4df7ac72c2566e44630f5b36cf4234f67a273"}
