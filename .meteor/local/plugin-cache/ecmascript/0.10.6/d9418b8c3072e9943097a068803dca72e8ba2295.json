{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/methods/accounts/accounts-password.js","filename":"server/methods/accounts/accounts-password.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/methods/accounts/accounts-password.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/methods/accounts/accounts-password.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/accounts/accounts-password.js"}},"code":"let _find;\n\nmodule.watch(require(\"lodash/find\"), {\n  default(v) {\n    _find = v;\n  }\n\n}, 0);\n\nlet _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  default(v) {\n    _map = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 3);\nlet Accounts;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 4);\nlet Reaction, Logger;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 5);\n\n/**\n * @name accounts/sendResetPasswordEmail\n * @memberof Methods/Accounts\n * @method\n * @example Meteor.call(\"accounts/sendResetPasswordEmail\", options)\n * @summary Send reset password email\n * @param {Object} options\n * @param {String} options.email - email of user\n * @returns {false}\n */\nMeteor.methods({\n  \"accounts/sendResetPasswordEmail\"(options) {\n    check(options, {\n      email: String\n    });\n    const user = Accounts.findUserByEmail(options.email);\n\n    if (!user) {\n      Logger.error(\"accounts/sendResetPasswordEmail - User not found\");\n      throw new Meteor.Error(\"not-found\", \"User not found\");\n    }\n\n    const emails = _map(user.emails || [], \"address\");\n\n    const caseInsensitiveEmail = _find(emails, email => email.toLowerCase() === options.email.toLowerCase());\n\n    Reaction.Accounts.sendResetPasswordEmail(user._id, caseInsensitiveEmail);\n  }\n\n});","map":{"version":3,"sources":["server/methods/accounts/accounts-password.js"],"names":["_find","module","watch","require","default","v","_map","Meteor","check","Accounts","Reaction","Logger","methods","options","email","String","user","findUserByEmail","error","Error","emails","caseInsensitiveEmail","toLowerCase","sendResetPasswordEmail","_id"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAApC,EAA0D,CAA1D;;AAA6D,IAAIC,IAAJ;;AAASL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACC,WAAKD,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;AAA2D,IAAIE,MAAJ;AAAWN,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACI,SAAOF,CAAP,EAAS;AAACE,aAAOF,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIG,KAAJ;AAAUP,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACK,QAAMH,CAAN,EAAQ;AAACG,YAAMH,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAII,QAAJ;AAAaR,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACM,WAASJ,CAAT,EAAW;AAACI,eAASJ,CAAT;AAAW;;AAAxB,CAA7C,EAAuE,CAAvE;AAA0E,IAAIK,QAAJ,EAAaC,MAAb;AAAoBV,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACO,WAASL,CAAT,EAAW;AAACK,eAASL,CAAT;AAAW,GAAxB;;AAAyBM,SAAON,CAAP,EAAS;AAACM,aAAON,CAAP;AAAS;;AAA5C,CAAlC,EAAgF,CAAhF;;AAMtY;;;;;;;;;;AAUAE,OAAOK,OAAP,CAAe;AACb,oCAAkCC,OAAlC,EAA2C;AACzCL,UAAMK,OAAN,EAAe;AACbC,aAAOC;AADM,KAAf;AAIA,UAAMC,OAAOP,SAASQ,eAAT,CAAyBJ,QAAQC,KAAjC,CAAb;;AAEA,QAAI,CAACE,IAAL,EAAW;AACTL,aAAOO,KAAP,CAAa,kDAAb;AACA,YAAM,IAAIX,OAAOY,KAAX,CAAiB,WAAjB,EAA8B,gBAA9B,CAAN;AACD;;AAED,UAAMC,SAAS,KAAMJ,KAAKI,MAAL,IAAe,EAArB,EAAyB,SAAzB,CAAf;;AAEA,UAAMC,uBAAuB,MAAOD,MAAP,EAAgBN,KAAD,IAAWA,MAAMQ,WAAN,OAAwBT,QAAQC,KAAR,CAAcQ,WAAd,EAAlD,CAA7B;;AAEAZ,aAASD,QAAT,CAAkBc,sBAAlB,CAAyCP,KAAKQ,GAA9C,EAAmDH,oBAAnD;AACD;;AAlBY,CAAf","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Accounts } from \"meteor/accounts-base\";\nimport { Reaction, Logger } from \"/server/api\";\n\n/**\n * @name accounts/sendResetPasswordEmail\n * @memberof Methods/Accounts\n * @method\n * @example Meteor.call(\"accounts/sendResetPasswordEmail\", options)\n * @summary Send reset password email\n * @param {Object} options\n * @param {String} options.email - email of user\n * @returns {false}\n */\nMeteor.methods({\n  \"accounts/sendResetPasswordEmail\"(options) {\n    check(options, {\n      email: String\n    });\n\n    const user = Accounts.findUserByEmail(options.email);\n\n    if (!user) {\n      Logger.error(\"accounts/sendResetPasswordEmail - User not found\");\n      throw new Meteor.Error(\"not-found\", \"User not found\");\n    }\n\n    const emails = _.map(user.emails || [], \"address\");\n\n    const caseInsensitiveEmail = _.find(emails, (email) => email.toLowerCase() === options.email.toLowerCase());\n\n    Reaction.Accounts.sendResetPasswordEmail(user._id, caseInsensitiveEmail);\n  }\n});\n"]},"sourceType":"script","hash":"d9418b8c3072e9943097a068803dca72e8ba2295"}
