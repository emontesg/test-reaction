{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js","filename":"imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js"}},"code":"var _withProps;\n\nmodule.watch(require(\"recompose/withProps\"), {\n  \"default\": function (v) {\n    _withProps = v;\n  }\n}, 0);\n\nvar _compose;\n\nmodule.watch(require(\"recompose/compose\"), {\n  \"default\": function (v) {\n    _compose = v;\n  }\n}, 1);\nvar Alert;\nmodule.watch(require(\"sweetalert2\"), {\n  \"default\": function (v) {\n    Alert = v;\n  }\n}, 2);\nvar registerComponent, composeWithTracker, withIsAdmin;\nmodule.watch(require(\"../../../components/lib\"), {\n  registerComponent: function (v) {\n    registerComponent = v;\n  },\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  },\n  withIsAdmin: function (v) {\n    withIsAdmin = v;\n  }\n}, 3);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 4);\nvar Accounts, Groups;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  },\n  Groups: function (v) {\n    Groups = v;\n  }\n}, 5);\nvar Reaction, i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 6);\nvar AccountsDashboard;\nmodule.watch(require(\"../components/accountsDashboard\"), {\n  \"default\": function (v) {\n    AccountsDashboard = v;\n  }\n}, 7);\nvar handlers = {\n  handleUserGroupChange: function (_ref) {\n    var account = _ref.account,\n        ownerGrpId = _ref.ownerGrpId,\n        onMethodLoad = _ref.onMethodLoad,\n        onMethodDone = _ref.onMethodDone;\n    return function (event, groupId) {\n      if (onMethodLoad) {\n        onMethodLoad();\n      }\n\n      if (groupId === ownerGrpId) {\n        return alertConfirm().then(function (_ref2) {\n          var value = _ref2.value;\n\n          if (value) {\n            return updateMethodCall(groupId);\n          }\n        }).finally(function () {\n          if (onMethodDone) {\n            onMethodDone();\n          }\n        });\n      }\n\n      return updateMethodCall(groupId);\n    };\n\n    function updateMethodCall(groupId) {\n      Meteor.call(\"group/addUser\", account._id, groupId, function (err) {\n        if (err) {\n          Alerts.toast(i18next.t(\"admin.groups.addUserError\", {\n            err: err.message\n          }), \"error\");\n        }\n\n        if (!err) {\n          Alerts.toast(i18next.t(\"admin.groups.addUserSuccess\"), \"success\");\n        }\n\n        if (onMethodDone) {\n          onMethodDone();\n        }\n      });\n    }\n\n    function alertConfirm() {\n      var changeOwnerWarn = \"changeShopOwnerWarn\";\n\n      if (Reaction.getShopId() === Reaction.getPrimaryShopId()) {\n        changeOwnerWarn = \"changeMktOwnerWarn\";\n      }\n\n      return Alert({\n        title: i18next.t(\"admin.settings.changeOwner\"),\n        text: i18next.t(\"admin.settings.\" + changeOwnerWarn),\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: i18next.t(\"admin.settings.cancel\"),\n        confirmButtonText: i18next.t(\"admin.settings.continue\")\n      });\n    }\n  },\n  handleRemoveUserFromGroup: function (account, groupId) {\n    return function () {\n      alertConfirm().then(function (_ref3) {\n        var value = _ref3.value;\n\n        if (value) {\n          return removeMethodCall();\n        }\n\n        return false;\n      }).catch(function () {\n        return false;\n      });\n\n      function removeMethodCall() {\n        Meteor.call(\"group/removeUser\", account._id, groupId, function (err) {\n          if (err) {\n            return Alerts.toast(i18next.t(\"admin.groups.removeUserError\", {\n              err: err.message\n            }), \"error\");\n          }\n\n          return Alerts.toast(i18next.t(\"admin.groups.removeUserSuccess\"), \"success\");\n        });\n      }\n    };\n\n    function alertConfirm() {\n      return Alert({\n        title: i18next.t(\"admin.settings.removeUser\"),\n        text: i18next.t(\"admin.settings.removeUserWarn\"),\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: i18next.t(\"admin.settings.cancel\"),\n        confirmButtonText: i18next.t(\"admin.settings.continue\")\n      });\n    }\n  }\n};\n\nvar composer = function (props, onData) {\n  var shopId = Reaction.getShopId();\n  var adminUserSub = Meteor.subscribe(\"Accounts\", null);\n  var grpSub = Meteor.subscribe(\"Groups\", {\n    shopId: shopId\n  });\n\n  if (adminUserSub.ready() && grpSub.ready()) {\n    var _adminQuery;\n\n    var groups = Groups.find({\n      shopId: Reaction.getShopId()\n    }).fetch();\n    var adminQuery = (_adminQuery = {}, _adminQuery[\"roles.\" + shopId] = {\n      $in: [\"dashboard\"]\n    }, _adminQuery);\n    var adminUsers = Meteor.users.find(adminQuery, {\n      fields: {\n        _id: 1\n      }\n    }).fetch();\n    var ids = adminUsers.map(function (user) {\n      return user._id;\n    });\n    var accounts = Accounts.find({\n      _id: {\n        $in: ids\n      }\n    }).fetch();\n    var adminGroups = groups.reduce(function (admGrps, group) {\n      if (group.slug !== \"customer\" && group.slug !== \"guest\") {\n        admGrps.push(group);\n      }\n\n      return admGrps;\n    }, []);\n    onData(null, {\n      accounts: accounts,\n      groups: groups,\n      adminGroups: adminGroups\n    });\n  }\n};\n\nregisterComponent(\"AccountsDashboard\", AccountsDashboard, [withIsAdmin, composeWithTracker(composer), _withProps(handlers)]);\nmodule.exportDefault(_compose(withIsAdmin, composeWithTracker(composer), _withProps(handlers))(AccountsDashboard));","map":{"version":3,"sources":["imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js"],"names":["_withProps","module","watch","require","v","_compose","Alert","registerComponent","composeWithTracker","withIsAdmin","Meteor","Accounts","Groups","Reaction","i18next","AccountsDashboard","handlers","handleUserGroupChange","account","ownerGrpId","onMethodLoad","onMethodDone","event","groupId","alertConfirm","then","value","updateMethodCall","finally","call","_id","err","Alerts","toast","t","message","changeOwnerWarn","getShopId","getPrimaryShopId","title","text","type","showCancelButton","cancelButtonText","confirmButtonText","handleRemoveUserFromGroup","removeMethodCall","catch","composer","props","onData","shopId","adminUserSub","subscribe","grpSub","ready","groups","find","fetch","adminQuery","$in","adminUsers","users","fields","ids","map","user","accounts","adminGroups","reduce","admGrps","group","slug","push","exportDefault"],"mappings":"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","sourcesContent":["import { compose, withProps } from \"recompose\";\nimport Alert from \"sweetalert2\";\nimport { registerComponent, composeWithTracker, withIsAdmin } from \"@reactioncommerce/reaction-components\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Accounts, Groups } from \"/lib/collections\";\nimport { Reaction, i18next } from \"/client/api\";\nimport AccountsDashboard from \"../components/accountsDashboard\";\n\nconst handlers = {\n  handleUserGroupChange({ account, ownerGrpId, onMethodLoad, onMethodDone }) {\n    return (event, groupId) => {\n      if (onMethodLoad) { onMethodLoad(); }\n\n      if (groupId === ownerGrpId) {\n        return alertConfirm()\n          .then(({ value }) => {\n            if (value) {\n              return updateMethodCall(groupId);\n            }\n          })\n          .finally(() => {\n            if (onMethodDone) { onMethodDone(); }\n          });\n      }\n\n      return updateMethodCall(groupId);\n    };\n\n    function updateMethodCall(groupId) {\n      Meteor.call(\"group/addUser\", account._id, groupId, (err) => {\n        if (err) {\n          Alerts.toast(i18next.t(\"admin.groups.addUserError\", { err: err.message }), \"error\");\n        }\n        if (!err) {\n          Alerts.toast(i18next.t(\"admin.groups.addUserSuccess\"), \"success\");\n        }\n        if (onMethodDone) { onMethodDone(); }\n      });\n    }\n\n    function alertConfirm() {\n      let changeOwnerWarn = \"changeShopOwnerWarn\";\n      if (Reaction.getShopId() === Reaction.getPrimaryShopId()) {\n        changeOwnerWarn = \"changeMktOwnerWarn\";\n      }\n      return Alert({\n        title: i18next.t(\"admin.settings.changeOwner\"),\n        text: i18next.t(`admin.settings.${changeOwnerWarn}`),\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: i18next.t(\"admin.settings.cancel\"),\n        confirmButtonText: i18next.t(\"admin.settings.continue\")\n      });\n    }\n  },\n\n  handleRemoveUserFromGroup(account, groupId) {\n    return () => {\n      alertConfirm()\n        .then(({ value }) => {\n          if (value) {\n            return removeMethodCall();\n          }\n          return false;\n        })\n        .catch(() => false);\n\n      function removeMethodCall() {\n        Meteor.call(\"group/removeUser\", account._id, groupId, (err) => {\n          if (err) {\n            return Alerts.toast(i18next.t(\"admin.groups.removeUserError\", { err: err.message }), \"error\");\n          }\n          return Alerts.toast(i18next.t(\"admin.groups.removeUserSuccess\"), \"success\");\n        });\n      }\n    };\n\n    function alertConfirm() {\n      return Alert({\n        title: i18next.t(\"admin.settings.removeUser\"),\n        text: i18next.t(\"admin.settings.removeUserWarn\"),\n        type: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: i18next.t(\"admin.settings.cancel\"),\n        confirmButtonText: i18next.t(\"admin.settings.continue\")\n      });\n    }\n  }\n};\n\nconst composer = (props, onData) => {\n  const shopId = Reaction.getShopId();\n  const adminUserSub = Meteor.subscribe(\"Accounts\", null);\n  const grpSub = Meteor.subscribe(\"Groups\", { shopId });\n\n  if (adminUserSub.ready() && grpSub.ready()) {\n    const groups = Groups.find({\n      shopId: Reaction.getShopId()\n    }).fetch();\n\n    const adminQuery = {\n      [`roles.${shopId}`]: {\n        $in: [\"dashboard\"]\n      }\n    };\n\n    const adminUsers = Meteor.users.find(adminQuery, { fields: { _id: 1 } }).fetch();\n    const ids = adminUsers.map((user) => user._id);\n    const accounts = Accounts.find({ _id: { $in: ids } }).fetch();\n    const adminGroups = groups.reduce((admGrps, group) => {\n      if (group.slug !== \"customer\" && group.slug !== \"guest\") {\n        admGrps.push(group);\n      }\n      return admGrps;\n    }, []);\n\n    onData(null, { accounts, groups, adminGroups });\n  }\n};\n\nregisterComponent(\"AccountsDashboard\", AccountsDashboard, [\n  withIsAdmin,\n  composeWithTracker(composer),\n  withProps(handlers)\n]);\n\nexport default compose(\n  withIsAdmin,\n  composeWithTracker(composer),\n  withProps(handlers)\n)(AccountsDashboard);\n"]},"sourceType":"script","hash":"509208f02bf1eac1a897b80faac05ce30266e74a"}
