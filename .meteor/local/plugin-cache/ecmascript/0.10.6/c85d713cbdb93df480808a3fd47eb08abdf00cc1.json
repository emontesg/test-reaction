{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/graphql/server/getUserFromToken.js","filename":"imports/plugins/core/graphql/server/getUserFromToken.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/graphql/server/getUserFromToken.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/graphql/server/getUserFromToken.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/graphql/server/getUserFromToken.js"}},"code":"let crypto;\nmodule.watch(require(\"crypto\"), {\n  default(v) {\n    crypto = v;\n  }\n\n}, 0);\nlet ReactionError;\nmodule.watch(require(\"./ReactionError\"), {\n  default(v) {\n    ReactionError = v;\n  }\n\n}, 1);\nlet tokenExpiration;\nmodule.watch(require(\"./tokenExpiration\"), {\n  default(v) {\n    tokenExpiration = v;\n  }\n\n}, 2);\n\n// This is Meteor's Accounts._hashLoginToken\nfunction hashLoginToken(loginToken) {\n  const hash = crypto.createHash(\"sha256\");\n  hash.update(loginToken);\n  return hash.digest(\"base64\");\n}\n\nfunction getUserFromToken(loginToken, context) {\n  return Promise.asyncApply(() => {\n    const {\n      collections\n    } = context;\n    const {\n      users\n    } = collections;\n    const hashedToken = hashLoginToken(loginToken); // search for user from the database with hashedToken\n    // note: no need for a fiber aware findOne\n\n    const currentUser = Promise.await(users.findOne({\n      \"services.resume.loginTokens.hashedToken\": hashedToken\n    }));\n    if (!currentUser) throw new ReactionError(\"access-denied\", \"Token invalid\"); // find the right login token because the user may have\n    // several sessions logged in on different browsers/computers\n\n    const tokenInformation = currentUser.services.resume.loginTokens.find(tokenInfo => tokenInfo.hashedToken === hashedToken); // get token expiration date\n\n    const expiresAt = tokenExpiration(tokenInformation.when);\n    const isExpired = expiresAt < new Date();\n    if (isExpired) throw new ReactionError(\"access-denied\", \"Token expired\");\n    return currentUser;\n  });\n}\n\nmodule.exportDefault(getUserFromToken);","map":{"version":3,"sources":["imports/plugins/core/graphql/server/getUserFromToken.js"],"names":["crypto","module","watch","require","default","v","ReactionError","tokenExpiration","hashLoginToken","loginToken","hash","createHash","update","digest","getUserFromToken","context","collections","users","hashedToken","currentUser","findOne","tokenInformation","services","resume","loginTokens","find","tokenInfo","expiresAt","when","isExpired","Date","exportDefault"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACC,UAAQC,CAAR,EAAU;AAACL,aAAOK,CAAP;AAAS;;AAArB,CAA/B,EAAsD,CAAtD;AAAyD,IAAIC,aAAJ;AAAkBL,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACC,oBAAcD,CAAd;AAAgB;;AAA5B,CAAxC,EAAsE,CAAtE;AAAyE,IAAIE,eAAJ;AAAoBN,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,UAAQC,CAAR,EAAU;AAACE,sBAAgBF,CAAhB;AAAkB;;AAA9B,CAA1C,EAA0E,CAA1E;;AAInL;AACA,SAASG,cAAT,CAAwBC,UAAxB,EAAoC;AAClC,QAAMC,OAAOV,OAAOW,UAAP,CAAkB,QAAlB,CAAb;AACAD,OAAKE,MAAL,CAAYH,UAAZ;AACA,SAAOC,KAAKG,MAAL,CAAY,QAAZ,CAAP;AACD;;AAED,SAAeC,gBAAf,CAAgCL,UAAhC,EAA4CM,OAA5C;AAAA,kCAAqD;AACnD,UAAM;AAAEC;AAAF,QAAkBD,OAAxB;AACA,UAAM;AAAEE;AAAF,QAAYD,WAAlB;AAEA,UAAME,cAAcV,eAAeC,UAAf,CAApB,CAJmD,CAMnD;AACA;;AACA,UAAMU,4BAAoBF,MAAMG,OAAN,CAAc;AACtC,iDAA2CF;AADL,KAAd,CAApB,CAAN;AAIA,QAAI,CAACC,WAAL,EAAkB,MAAM,IAAIb,aAAJ,CAAkB,eAAlB,EAAmC,eAAnC,CAAN,CAZiC,CAcnD;AACA;;AACA,UAAMe,mBAAmBF,YAAYG,QAAZ,CAAqBC,MAArB,CAA4BC,WAA5B,CAAwCC,IAAxC,CAA8CC,SAAD,IAAeA,UAAUR,WAAV,KAA0BA,WAAtF,CAAzB,CAhBmD,CAkBnD;;AACA,UAAMS,YAAYpB,gBAAgBc,iBAAiBO,IAAjC,CAAlB;AAEA,UAAMC,YAAYF,YAAY,IAAIG,IAAJ,EAA9B;AACA,QAAID,SAAJ,EAAe,MAAM,IAAIvB,aAAJ,CAAkB,eAAlB,EAAmC,eAAnC,CAAN;AAEf,WAAOa,WAAP;AACD,GAzBD;AAAA;;AAXAlB,OAAO8B,aAAP,CAsCejB,gBAtCf","sourcesContent":["import crypto from \"crypto\";\nimport ReactionError from \"./ReactionError\";\nimport tokenExpiration from \"./tokenExpiration\";\n\n// This is Meteor's Accounts._hashLoginToken\nfunction hashLoginToken(loginToken) {\n  const hash = crypto.createHash(\"sha256\");\n  hash.update(loginToken);\n  return hash.digest(\"base64\");\n}\n\nasync function getUserFromToken(loginToken, context) {\n  const { collections } = context;\n  const { users } = collections;\n\n  const hashedToken = hashLoginToken(loginToken);\n\n  // search for user from the database with hashedToken\n  // note: no need for a fiber aware findOne\n  const currentUser = await users.findOne({\n    \"services.resume.loginTokens.hashedToken\": hashedToken\n  });\n\n  if (!currentUser) throw new ReactionError(\"access-denied\", \"Token invalid\");\n\n  // find the right login token because the user may have\n  // several sessions logged in on different browsers/computers\n  const tokenInformation = currentUser.services.resume.loginTokens.find((tokenInfo) => tokenInfo.hashedToken === hashedToken);\n\n  // get token expiration date\n  const expiresAt = tokenExpiration(tokenInformation.when);\n\n  const isExpired = expiresAt < new Date();\n  if (isExpired) throw new ReactionError(\"access-denied\", \"Token expired\");\n\n  return currentUser;\n}\n\nexport default getUserFromToken;\n"]},"sourceType":"script","hash":"c85d713cbdb93df480808a3fd47eb08abdf00cc1"}
