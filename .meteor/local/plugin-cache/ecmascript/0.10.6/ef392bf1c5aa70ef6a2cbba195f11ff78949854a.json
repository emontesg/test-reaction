{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/catalog/server/methods/catalog.js","filename":"imports/plugins/core/catalog/server/methods/catalog.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/catalog/server/methods/catalog.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/catalog/server/methods/catalog.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/catalog/server/methods/catalog.js"}},"code":"var _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectWithoutProperties\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  isSoldOut: () => isSoldOut,\n  isLowQuantity: () => isLowQuantity,\n  isBackorder: () => isBackorder,\n  publishProductToCatalog: () => publishProductToCatalog,\n  publishProductsToCatalog: () => publishProductsToCatalog,\n  publishProductInventoryAdjustments: () => publishProductInventoryAdjustments\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Products, CatalogCollection;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Products(v) {\n    Products = v;\n  },\n\n  Catalog(v) {\n    CatalogCollection = v;\n  }\n\n}, 2);\nlet Logger, Reaction;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Logger(v) {\n    Logger = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 3);\nlet Media;\nmodule.watch(require(\"../../../files/server\"), {\n  Media(v) {\n    Media = v;\n  }\n\n}, 4);\nlet Catalog;\nmodule.watch(require(\"../../../revisions/server/hooks\"), {\n  ProductRevision(v) {\n    Catalog = v;\n  }\n\n}, 5);\n\nfunction isSoldOut(variants) {\n  return variants.every(variant => {\n    if (variant.inventoryManagement) {\n      return Catalog.getVariantQuantity(variant) <= 0;\n    }\n\n    return false;\n  });\n}\n\nfunction isLowQuantity(variants) {\n  return variants.some(variant => {\n    const quantity = Catalog.getVariantQuantity(variant); // we need to keep an eye on `inventoryPolicy` too and qty > 0\n\n    if (variant.inventoryManagement && variant.inventoryPolicy && quantity) {\n      return quantity <= variant.lowInventoryWarningThreshold;\n    }\n\n    return false;\n  });\n}\n\nfunction isBackorder(variants) {\n  return variants.every(variant => !variant.inventoryPolicy && variant.inventoryManagement && variant.inventoryQuantity === 0);\n}\n\nfunction publishProductToCatalog(productId) {\n  return Promise.asyncApply(() => {\n    check(productId, String); // Find the product by id\n\n    let product = Products.findOne({\n      $or: [{\n        _id: productId\n      }, {\n        ancestors: productId\n      }]\n    }); // Stop if a product could not be found\n\n    if (!product) {\n      Logger.info(\"Cannot publish product to catalog\");\n      return false;\n    } // If the product has ancestors, then find the top product document\n\n\n    if (Array.isArray(product.ancestors) && product.ancestors.length) {\n      product = Products.findOne({\n        _id: product.ancestors[0]\n      });\n    } // Get variants of the product\n\n\n    const variants = Products.find({\n      ancestors: productId\n    }).fetch(); // Get Media for the product\n\n    const mediaArray = Promise.await(Media.find({\n      \"metadata.productId\": productId,\n      \"metadata.toGrid\": 1,\n      \"metadata.workflow\": {\n        $nin: [\"archived\", \"unpublished\"]\n      }\n    }, {\n      sort: {\n        \"metadata.priority\": 1,\n        \"uploadedAt\": 1\n      }\n    })); // Denormalize media\n\n    const productMedia = mediaArray.map(media => ({\n      metadata: media.metadata,\n      thumbnail: `${media.url({\n        store: \"thumbnail\"\n      })}`,\n      small: `${media.url({\n        store: \"small\"\n      })}`,\n      medium: `${media.url({\n        store: \"medium\"\n      })}`,\n      large: `${media.url({\n        store: \"large\"\n      })}`,\n      image: `${media.url({\n        store: \"image\"\n      })}`\n    })); // Denormalize product fields\n\n    product.media = productMedia;\n    product.type = \"product-simple\";\n    product.isSoldOut = isSoldOut(variants);\n    product.isBackorder = isBackorder(variants);\n    product.isLowQuantity = isLowQuantity(variants);\n    product.variants = variants.map(variant => {\n      const {\n        inventoryQuantity\n      } = variant,\n            v = (0, _objectWithoutProperties2.default)(variant, [\"inventoryQuantity\"]);\n      return v;\n    }); // Insert/update catalog document\n\n    const result = CatalogCollection.upsert({\n      _id: productId\n    }, {\n      $set: product\n    });\n    return result && result.numberAffected === 1;\n  });\n}\n\nfunction publishProductsToCatalog(productIds) {\n  check(productIds, Match.OneOf(String, Array));\n  let ids = productIds;\n\n  if (typeof ids === \"string\") {\n    ids = [productIds];\n  }\n\n  return ids.every(productId => Promise.asyncApply(() => Promise.await(publishProductToCatalog(productId))));\n}\n\nfunction publishProductInventoryAdjustments(productId) {\n  check(productId, Match.OneOf(String, Array));\n  const catalogProduct = CatalogCollection.findOne({\n    _id: productId\n  });\n\n  if (!catalogProduct) {\n    Logger.info(\"Cannot publish inventory changes to catalog product\");\n    return false;\n  }\n\n  const variants = Products.find({\n    ancestors: {\n      $in: [productId]\n    }\n  }).fetch();\n  const update = {\n    isSoldOut: isSoldOut(variants),\n    isBackorder: isBackorder(variants),\n    isLowQuantity: isLowQuantity(variants)\n  }; // Only apply changes of one these fields have changed\n\n  if (update.isSoldOut !== catalogProduct.isSoldOut || update.isBackorder !== catalogProduct.isBackorder || update.isLowQuantity !== catalogProduct.isLowQuantity) {\n    const result = CatalogCollection.update({\n      _id: productId\n    }, {\n      $set: update\n    });\n    return result;\n  }\n\n  return false;\n}\n\nMeteor.methods({\n  \"catalog/publish/products\": productIds => {\n    check(productIds, Match.OneOf(String, Array)); // Ensure user has createProduct permission for active shop\n\n    if (!Reaction.hasPermission(\"createProduct\")) {\n      Logger.error(\"Access Denied\");\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    } // Convert productIds if it's a string\n\n\n    let ids = productIds;\n\n    if (typeof ids === \"string\") {\n      ids = [productIds];\n    } // Find all products\n\n\n    const productsToPublish = Products.find({\n      _id: {\n        $in: ids\n      }\n    }).fetch();\n    const canUpdatePrimaryShopProducts = Reaction.hasPermission(\"createProduct\", this.userId, Reaction.getPrimaryShopId());\n    const publisableProductIds = productsToPublish // Only allow users to publish products for shops they permissions to createProductsFor\n    // If the user can createProducts on the main shop, they can publish products for all shops to the catalog.\n    .filter(product => Reaction.hasPermission(\"createProduct\", this.userId, product.shopId) || canUpdatePrimaryShopProducts).map(product => product._id);\n    const success = publishProductsToCatalog(publisableProductIds);\n\n    if (!success) {\n      Logger.error(\"Some Products could not be published to the Catalog.\");\n      throw new Meteor.Error(\"server-error\", \"Some Products could not be published to the Catalog.\");\n    }\n\n    return true;\n  }\n});","map":{"version":3,"sources":["imports/plugins/core/catalog/server/methods/catalog.js"],"names":["module","export","isSoldOut","isLowQuantity","isBackorder","publishProductToCatalog","publishProductsToCatalog","publishProductInventoryAdjustments","Meteor","watch","require","v","check","Match","Products","CatalogCollection","Catalog","Logger","Reaction","Media","ProductRevision","variants","every","variant","inventoryManagement","getVariantQuantity","some","quantity","inventoryPolicy","lowInventoryWarningThreshold","inventoryQuantity","productId","String","product","findOne","$or","_id","ancestors","info","Array","isArray","length","find","fetch","mediaArray","$nin","sort","productMedia","map","media","metadata","thumbnail","url","store","small","medium","large","image","type","result","upsert","$set","numberAffected","productIds","OneOf","ids","catalogProduct","$in","update","methods","hasPermission","error","Error","productsToPublish","canUpdatePrimaryShopProducts","userId","getPrimaryShopId","publisableProductIds","filter","shopId","success"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Products, Catalog as CatalogCollection } from \"/lib/collections\";\nimport { Logger, Reaction } from \"/server/api\";\nimport { Media } from \"/imports/plugins/core/files/server\";\nimport { ProductRevision as Catalog } from \"/imports/plugins/core/revisions/server/hooks\";\n\n/**\n * @method isSoldOut\n * @summary We are to stop accepting new orders if product is marked as `isSoldOut`.\n * @memberof Catalog\n * @param {Array} variants - Array with top-level variants\n * @return {Boolean} true if summary product quantity is zero.\n */\nexport function isSoldOut(variants) {\n  return variants.every((variant) => {\n    if (variant.inventoryManagement) {\n      return Catalog.getVariantQuantity(variant) <= 0;\n    }\n    return false;\n  });\n}\n\n/**\n * @method isLowQuantity\n * @summary If at least one of the variants is less than the threshold, then function returns `true`\n * @memberof Catalog\n * @param {Array} variants - array of child variants\n * @return {boolean} low quantity or not\n */\nexport function isLowQuantity(variants) {\n  return variants.some((variant) => {\n    const quantity = Catalog.getVariantQuantity(variant);\n    // we need to keep an eye on `inventoryPolicy` too and qty > 0\n    if (variant.inventoryManagement && variant.inventoryPolicy && quantity) {\n      return quantity <= variant.lowInventoryWarningThreshold;\n    }\n    return false;\n  });\n}\n\n/**\n * @method isBackorder\n * @summary Is products variants is still available to be ordered after summary variants quantity is zero\n * @memberof Catalog\n * @param {Array} variants - array with variant objects\n * @return {boolean} is backorder allowed or not for a product\n */\nexport function isBackorder(variants) {\n  return variants.every((variant) => !variant.inventoryPolicy && variant.inventoryManagement &&\n    variant.inventoryQuantity === 0);\n}\n\n/**\n * @method publishProductToCatalog\n * @summary Publish a product to the Catalog\n * @memberof Catalog\n * @param {string} productId - A string product id\n * @return {boolean} true on successful publish, false if publish was unsuccessful\n */\nexport async function publishProductToCatalog(productId) {\n  check(productId, String);\n\n  // Find the product by id\n  let product = Products.findOne({\n    $or: [\n      { _id: productId },\n      { ancestors: productId }\n    ]\n  });\n\n  // Stop if a product could not be found\n  if (!product) {\n    Logger.info(\"Cannot publish product to catalog\");\n    return false;\n  }\n\n  // If the product has ancestors, then find the top product document\n  if (Array.isArray(product.ancestors) && product.ancestors.length) {\n    product = Products.findOne({\n      _id: product.ancestors[0]\n    });\n  }\n\n  // Get variants of the product\n  const variants = Products.find({\n    ancestors: productId\n  }).fetch();\n\n  // Get Media for the product\n  const mediaArray = await Media.find({\n    \"metadata.productId\": productId,\n    \"metadata.toGrid\": 1,\n    \"metadata.workflow\": { $nin: [\"archived\", \"unpublished\"] }\n  }, {\n    sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 }\n  });\n\n  // Denormalize media\n  const productMedia = mediaArray.map((media) => ({\n    metadata: media.metadata,\n    thumbnail: `${media.url({ store: \"thumbnail\" })}`,\n    small: `${media.url({ store: \"small\" })}`,\n    medium: `${media.url({ store: \"medium\" })}`,\n    large: `${media.url({ store: \"large\" })}`,\n    image: `${media.url({ store: \"image\" })}`\n  }));\n\n  // Denormalize product fields\n  product.media = productMedia;\n  product.type = \"product-simple\";\n  product.isSoldOut = isSoldOut(variants);\n  product.isBackorder = isBackorder(variants);\n  product.isLowQuantity = isLowQuantity(variants);\n  product.variants = variants.map((variant) => {\n    const { inventoryQuantity, ...v } = variant;\n    return v;\n  });\n\n  // Insert/update catalog document\n  const result = CatalogCollection.upsert({\n    _id: productId\n  }, {\n    $set: product\n  });\n\n  return result && result.numberAffected === 1;\n}\n\n/**\n * @method publishProductsToCatalog\n * @summary Publish one or more products to the Catalog\n * @memberof Catalog\n * @param {string|array} productIds - A string product id or an array of product ids\n * @return {boolean} true on successful publish for all documents, false if one ore more fail to publish\n */\nexport function publishProductsToCatalog(productIds) {\n  check(productIds, Match.OneOf(String, Array));\n\n  let ids = productIds;\n  if (typeof ids === \"string\") {\n    ids = [productIds];\n  }\n\n  return ids.every(async (productId) => await publishProductToCatalog(productId));\n}\n\n/**\n * @method publishProductInventoryAdjustments\n * @summary Publish inventory updates for a single product to the Catalog\n * @memberof Catalog\n * @param {string} productId - A string product id\n * @return {boolean} true on success, false on failure\n */\nexport function publishProductInventoryAdjustments(productId) {\n  check(productId, Match.OneOf(String, Array));\n\n  const catalogProduct = CatalogCollection.findOne({\n    _id: productId\n  });\n\n  if (!catalogProduct) {\n    Logger.info(\"Cannot publish inventory changes to catalog product\");\n    return false;\n  }\n\n  const variants = Products.find({\n    ancestors: {\n      $in: [productId]\n    }\n  }).fetch();\n\n  const update = {\n    isSoldOut: isSoldOut(variants),\n    isBackorder: isBackorder(variants),\n    isLowQuantity: isLowQuantity(variants)\n  };\n\n  // Only apply changes of one these fields have changed\n  if (\n    update.isSoldOut !== catalogProduct.isSoldOut ||\n    update.isBackorder !== catalogProduct.isBackorder ||\n    update.isLowQuantity !== catalogProduct.isLowQuantity\n  ) {\n    const result = CatalogCollection.update({\n      _id: productId\n    }, {\n      $set: update\n    });\n\n    return result;\n  }\n\n  return false;\n}\n\nMeteor.methods({\n  \"catalog/publish/products\": (productIds) => {\n    check(productIds, Match.OneOf(String, Array));\n\n    // Ensure user has createProduct permission for active shop\n    if (!Reaction.hasPermission(\"createProduct\")) {\n      Logger.error(\"Access Denied\");\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    // Convert productIds if it's a string\n    let ids = productIds;\n    if (typeof ids === \"string\") {\n      ids = [productIds];\n    }\n\n    // Find all products\n    const productsToPublish = Products.find({\n      _id: { $in: ids }\n    }).fetch();\n\n    const canUpdatePrimaryShopProducts = Reaction.hasPermission(\"createProduct\", this.userId, Reaction.getPrimaryShopId());\n\n    const publisableProductIds = productsToPublish\n      // Only allow users to publish products for shops they permissions to createProductsFor\n      // If the user can createProducts on the main shop, they can publish products for all shops to the catalog.\n      .filter((product) => Reaction.hasPermission(\"createProduct\", this.userId, product.shopId) || canUpdatePrimaryShopProducts)\n      .map((product) => product._id);\n\n    const success = publishProductsToCatalog(publisableProductIds);\n\n    if (!success) {\n      Logger.error(\"Some Products could not be published to the Catalog.\");\n      throw new Meteor.Error(\"server-error\", \"Some Products could not be published to the Catalog.\");\n    }\n\n    return true;\n  }\n});\n"]},"sourceType":"script","hash":"ef392bf1c5aa70ef6a2cbba195f11ff78949854a"}
