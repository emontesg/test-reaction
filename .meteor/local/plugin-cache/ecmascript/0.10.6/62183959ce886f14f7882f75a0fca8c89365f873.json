{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/collections/members.js","filename":"server/publications/collections/members.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/collections/members.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/collections/members.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/collections/members.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet Logger, Reaction;\nmodule.watch(require(\"../../api\"), {\n  Logger(v) {\n    Logger = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 3);\n\n/* eslint quote-props: 0 */\n\n/**\n * ShopMembers\n * This publication is only exposed to owner/admin in\n * Accounts page, and should not be used anywhere else.\n *\n * @return {Array} users\n */\nMeteor.publish(\"ShopMembers\", function () {\n  // here we are comparing with the string to make it compatible with tests\n  if (typeof this.userId !== \"string\") {\n    return this.ready();\n  }\n\n  const readPermissions = [\"reaction-orders\", \"owner\", \"admin\", \"reaction-accounts\"];\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  if (Roles.userIsInRole(this.userId, readPermissions, shopId)) {\n    // seems like we can't use \"`\" inside db.call directly\n    // do not add comments or otherwise format this query\n    const selector = `{\"roles.${shopId}\": {\"$nin\": [\"anonymous\"]}}`;\n    const publish = {\n      fields: {\n        _id: 1,\n        emails: 1,\n        username: 1,\n        roles: 1,\n        \"profile.lang\": 1,\n        \"services.google.name\": 1,\n        \"services.google.email\": 1,\n        \"services.google.picture\": 1,\n        \"services.twitter.name\": 1,\n        \"services.twitter.email\": 1,\n        \"services.twitter.profile_image_url_https\": 1,\n        \"services.facebook.name\": 1,\n        \"services.facebook.email\": 1,\n        \"services.facebook.id\": 1,\n        \"services.weibo.name\": 1,\n        \"services.weibo.email\": 1,\n        \"services.weibo.picture\": 1,\n        \"services.github.name\": 1,\n        \"services.github.email\": 1,\n        \"services.github.username\": 1\n      }\n    };\n    return Meteor.users.find(EJSON.parse(selector), publish);\n  }\n\n  Logger.debug(\"ShopMembers access denied\");\n  return this.ready();\n});","map":{"version":3,"sources":["server/publications/collections/members.js"],"names":["Meteor","module","watch","require","v","EJSON","Roles","Logger","Reaction","publish","userId","ready","readPermissions","shopId","getShopId","userIsInRole","selector","fields","_id","emails","username","roles","users","find","parse","debug"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,KAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACG,QAAMF,CAAN,EAAQ;AAACE,YAAMF,CAAN;AAAQ;;AAAlB,CAA9C,EAAkE,CAAlE;AAAqE,IAAIG,MAAJ,EAAWC,QAAX;AAAoBP,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACI,SAAOH,CAAP,EAAS;AAACG,aAAOH,CAAP;AAAS,GAApB;;AAAqBI,WAASJ,CAAT,EAAW;AAACI,eAASJ,CAAT;AAAW;;AAA5C,CAAlC,EAAgF,CAAhF;;AAOnP;;AACA;;;;;;;AAOAJ,OAAOS,OAAP,CAAe,aAAf,EAA8B,YAAY;AACxC;AACA,MAAI,OAAO,KAAKC,MAAZ,KAAuB,QAA3B,EAAqC;AACnC,WAAO,KAAKC,KAAL,EAAP;AACD;;AACD,QAAMC,kBAAkB,CAAC,iBAAD,EAAoB,OAApB,EAA6B,OAA7B,EAAsC,mBAAtC,CAAxB;AACA,QAAMC,SAASL,SAASM,SAAT,EAAf;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,KAAKF,KAAL,EAAP;AACD;;AAED,MAAIL,MAAMS,YAAN,CAAmB,KAAKL,MAAxB,EAAgCE,eAAhC,EAAiDC,MAAjD,CAAJ,EAA8D;AAC5D;AACA;AACA,UAAMG,WAAY,WAAUH,MAAO,6BAAnC;AACA,UAAMJ,UAAU;AACdQ,cAAQ;AACNC,aAAK,CADC;AAENC,gBAAQ,CAFF;AAGNC,kBAAU,CAHJ;AAINC,eAAO,CAJD;AAKN,wBAAgB,CALV;AAMN,gCAAwB,CANlB;AAON,iCAAyB,CAPnB;AAQN,mCAA2B,CARrB;AASN,iCAAyB,CATnB;AAUN,kCAA0B,CAVpB;AAWN,oDAA4C,CAXtC;AAYN,kCAA0B,CAZpB;AAaN,mCAA2B,CAbrB;AAcN,gCAAwB,CAdlB;AAeN,+BAAuB,CAfjB;AAgBN,gCAAwB,CAhBlB;AAiBN,kCAA0B,CAjBpB;AAkBN,gCAAwB,CAlBlB;AAmBN,iCAAyB,CAnBnB;AAoBN,oCAA4B;AApBtB;AADM,KAAhB;AAyBA,WAAOrB,OAAOsB,KAAP,CAAaC,IAAb,CAAkBlB,MAAMmB,KAAN,CAAYR,QAAZ,CAAlB,EAAyCP,OAAzC,CAAP;AACD;;AAEDF,SAAOkB,KAAP,CAAa,2BAAb;AACA,SAAO,KAAKd,KAAL,EAAP;AACD,CA7CD","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { EJSON } from \"meteor/ejson\";\n\nimport { Roles } from \"meteor/alanning:roles\";\n\nimport { Logger, Reaction } from \"/server/api\";\n\n/* eslint quote-props: 0 */\n/**\n * ShopMembers\n * This publication is only exposed to owner/admin in\n * Accounts page, and should not be used anywhere else.\n *\n * @return {Array} users\n */\nMeteor.publish(\"ShopMembers\", function () {\n  // here we are comparing with the string to make it compatible with tests\n  if (typeof this.userId !== \"string\") {\n    return this.ready();\n  }\n  const readPermissions = [\"reaction-orders\", \"owner\", \"admin\", \"reaction-accounts\"];\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  if (Roles.userIsInRole(this.userId, readPermissions, shopId)) {\n    // seems like we can't use \"`\" inside db.call directly\n    // do not add comments or otherwise format this query\n    const selector = `{\"roles.${shopId}\": {\"$nin\": [\"anonymous\"]}}`;\n    const publish = {\n      fields: {\n        _id: 1,\n        emails: 1,\n        username: 1,\n        roles: 1,\n        \"profile.lang\": 1,\n        \"services.google.name\": 1,\n        \"services.google.email\": 1,\n        \"services.google.picture\": 1,\n        \"services.twitter.name\": 1,\n        \"services.twitter.email\": 1,\n        \"services.twitter.profile_image_url_https\": 1,\n        \"services.facebook.name\": 1,\n        \"services.facebook.email\": 1,\n        \"services.facebook.id\": 1,\n        \"services.weibo.name\": 1,\n        \"services.weibo.email\": 1,\n        \"services.weibo.picture\": 1,\n        \"services.github.name\": 1,\n        \"services.github.email\": 1,\n        \"services.github.username\": 1\n      }\n    };\n\n    return Meteor.users.find(EJSON.parse(selector), publish);\n  }\n\n  Logger.debug(\"ShopMembers access denied\");\n  return this.ready();\n});\n"]},"sourceType":"script","hash":"62183959ce886f14f7882f75a0fca8c89365f873"}
