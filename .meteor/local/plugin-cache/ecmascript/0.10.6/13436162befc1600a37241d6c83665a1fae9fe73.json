{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/publications/collections/packages.js","filename":"server/publications/collections/packages.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"server/publications/collections/packages.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"server/publications/collections/packages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/collections/packages.js"}},"code":"let _uniq;\n\nmodule.watch(require(\"lodash/uniq\"), {\n  default(v) {\n    _uniq = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 3);\nlet Packages;\nmodule.watch(require(\"../../../lib/collections\"), {\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 4);\nlet Reaction;\nmodule.watch(require(\"../../api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 5);\nlet translateRegistry;\nmodule.watch(require(\"../../../lib/api\"), {\n  translateRegistry(v) {\n    translateRegistry = v;\n  }\n\n}, 6);\n\n/**\n * Packages contains user specific configuration\n * @summary  package publication settings, filtered by permissions\n * @param {Object} shopCursor - current shop object\n * @returns {Object} packagesCursor - current packages for shop\n */\n// for transforming packages before publication sets some defaults for the client and adds i18n while checking\n// privileged settings for enabled status.\nfunction transform(doc, userId) {\n  const registrySettings = {};\n  const packageSettings = {};\n  let permissions = [\"admin\", \"owner\", doc.name]; // Get all permissions, add them to an array\n\n  if (doc.registry && doc.registry.permissions) {\n    for (const item of doc.registry.permissions) {\n      permissions.push(item.permission);\n    }\n  }\n\n  permissions = _uniq(permissions); // check for admin,owner or package permissions to view settings\n\n  const hasAdmin = Roles.userIsInRole(userId, permissions, doc.shopId);\n\n  if (doc.registry) {\n    for (let registry of doc.registry) {\n      // add some normalized defaults\n      registry.packageId = doc._id;\n      registry.shopId = doc.shopId;\n      registry.packageName = registry.packageName || doc.name;\n      [registry.settingsKey] = (registry.name || doc.name).split(\"/\").splice(-1); // check and set package enabled state\n\n      registry.permissions = [...permissions];\n\n      if (registry.route) {\n        registry.permissions.push(registry.name || `${doc.name}/${registry.template}`);\n      }\n\n      if (doc.settings && doc.settings[registry.settingsKey]) {\n        registry.enabled = !!doc.settings[registry.settingsKey].enabled;\n      } else {\n        registry.enabled = !!doc.enabled;\n      } // define export settings\n\n\n      registrySettings[registry.settingsKey] = {\n        enabled: registry.enabled\n      }; // add i18n keys\n\n      registry = translateRegistry(registry, doc);\n    }\n  } // admin users get all settings the intent of this it so block publication of settings without limiting the use settings\n  // in this transform. non admin users should get public setting\n\n\n  if (hasAdmin === false && doc.settings) {\n    registrySettings.public = doc.settings.public;\n    delete doc.settings;\n    Object.assign(packageSettings, registrySettings);\n    doc.settings = packageSettings;\n  }\n\n  return doc;\n} //\n//  Packages Publication\n//\n\n\nMeteor.publish(\"Packages\", function (shopId) {\n  check(shopId, Match.Maybe(String));\n  const self = this;\n  let myShopId = shopId; // user is required.\n\n  if (self.userId) {\n    // default options, we're limiting fields here that we don't want to publish unless admin user. in particular, settings\n    // should not be published but we need to use settings in the transform everything except settings.public and\n    // settings.*.enabled are removed in transform\n    let options = {\n      fields: {\n        shopId: 1,\n        name: 1,\n        enabled: 1,\n        registry: 1,\n        layout: 1,\n        icon: 1,\n        settings: 1,\n        audience: 1\n      }\n    };\n\n    if (!shopId) {\n      myShopId = Reaction.getPrimaryShopId();\n    } // we should always have a shop\n\n\n    if (myShopId) {\n      // if admin user, return all shop properties\n      if (Roles.userIsInRole(self.userId, [\"dashboard\", \"owner\", \"admin\"], Reaction.getShopId() || Roles.userIsInRole(self.userId, [\"owner\", \"admin\"], Roles.GLOBAL_GROUP))) {\n        options = {};\n      } // observe and transform Package registry adds i18n and other meta data\n\n\n      const observer = Packages.find({\n        shopId: myShopId\n      }, options).observe({\n        added(doc) {\n          self.added(\"Packages\", doc._id, transform(doc, self.userId));\n        },\n\n        changed(newDoc, origDoc) {\n          self.changed(\"Packages\", origDoc._id, transform(newDoc, self.userId));\n        },\n\n        removed(origDoc) {\n          self.removed(\"Packages\", origDoc._id);\n        }\n\n      });\n      self.onStop(() => {\n        observer.stop();\n      });\n    }\n\n    return self.ready();\n  }\n});","map":{"version":3,"sources":["server/publications/collections/packages.js"],"names":["_uniq","module","watch","require","default","v","Meteor","check","Match","Roles","Packages","Reaction","translateRegistry","transform","doc","userId","registrySettings","packageSettings","permissions","name","registry","item","push","permission","hasAdmin","userIsInRole","shopId","packageId","_id","packageName","settingsKey","split","splice","route","template","settings","enabled","public","Object","assign","publish","Maybe","String","self","myShopId","options","fields","layout","icon","audience","getPrimaryShopId","getShopId","GLOBAL_GROUP","observer","find","observe","added","changed","newDoc","origDoc","removed","onStop","stop","ready"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check, Match } from \"meteor/check\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { Packages } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\nimport { translateRegistry } from \"/lib/api\";\n\n/**\n * Packages contains user specific configuration\n * @summary  package publication settings, filtered by permissions\n * @param {Object} shopCursor - current shop object\n * @returns {Object} packagesCursor - current packages for shop\n */\n\n// for transforming packages before publication sets some defaults for the client and adds i18n while checking\n// privileged settings for enabled status.\nfunction transform(doc, userId) {\n  const registrySettings = {};\n  const packageSettings = {};\n  let permissions = [\"admin\", \"owner\", doc.name];\n\n  // Get all permissions, add them to an array\n  if (doc.registry && doc.registry.permissions) {\n    for (const item of doc.registry.permissions) {\n      permissions.push(item.permission);\n    }\n  }\n  permissions = _.uniq(permissions);\n\n  // check for admin,owner or package permissions to view settings\n  const hasAdmin = Roles.userIsInRole(userId, permissions, doc.shopId);\n\n  if (doc.registry) {\n    for (let registry of doc.registry) {\n      // add some normalized defaults\n      registry.packageId = doc._id;\n      registry.shopId = doc.shopId;\n      registry.packageName = registry.packageName || doc.name;\n      [registry.settingsKey] = (registry.name || doc.name).split(\"/\").splice(-1);\n      // check and set package enabled state\n      registry.permissions = [...permissions];\n      if (registry.route) {\n        registry.permissions.push(registry.name || `${doc.name}/${registry.template}`);\n      }\n      if (doc.settings && doc.settings[registry.settingsKey]) {\n        registry.enabled = !!doc.settings[registry.settingsKey].enabled;\n      } else {\n        registry.enabled = !!doc.enabled;\n      }\n      // define export settings\n      registrySettings[registry.settingsKey] = {\n        enabled: registry.enabled\n      };\n\n      // add i18n keys\n      registry = translateRegistry(registry, doc);\n    }\n  }\n  // admin users get all settings the intent of this it so block publication of settings without limiting the use settings\n  // in this transform. non admin users should get public setting\n  if (hasAdmin === false && doc.settings) {\n    registrySettings.public = doc.settings.public;\n    delete doc.settings;\n    Object.assign(packageSettings, registrySettings);\n    doc.settings = packageSettings;\n  }\n\n  return doc;\n}\n\n//\n//  Packages Publication\n//\nMeteor.publish(\"Packages\", function (shopId) {\n  check(shopId, Match.Maybe(String));\n\n  const self = this;\n  let myShopId = shopId;\n\n  // user is required.\n  if (self.userId) {\n    // default options, we're limiting fields here that we don't want to publish unless admin user. in particular, settings\n    // should not be published but we need to use settings in the transform everything except settings.public and\n    // settings.*.enabled are removed in transform\n    let options = {\n      fields: {\n        shopId: 1,\n        name: 1,\n        enabled: 1,\n        registry: 1,\n        layout: 1,\n        icon: 1,\n        settings: 1,\n        audience: 1\n      }\n    };\n\n    if (!shopId) {\n      myShopId = Reaction.getPrimaryShopId();\n    }\n\n    // we should always have a shop\n    if (myShopId) {\n      // if admin user, return all shop properties\n      if (Roles.userIsInRole(self.userId, [\n        \"dashboard\", \"owner\", \"admin\"\n      ], Reaction.getShopId() || Roles.userIsInRole(self.userId, [\n        \"owner\", \"admin\"\n      ], Roles.GLOBAL_GROUP))) {\n        options = {};\n      }\n      // observe and transform Package registry adds i18n and other meta data\n      const observer = Packages.find({\n        shopId: myShopId\n      }, options).observe({\n        added(doc) {\n          self.added(\"Packages\", doc._id, transform(doc, self.userId));\n        },\n        changed(newDoc, origDoc) {\n          self.changed(\"Packages\", origDoc._id, transform(newDoc, self.userId));\n        },\n        removed(origDoc) {\n          self.removed(\"Packages\", origDoc._id);\n        }\n      });\n\n      self.onStop(() => {\n        observer.stop();\n      });\n    }\n    return self.ready();\n  }\n});\n"]},"sourceType":"script","hash":"13436162befc1600a37241d6c83665a1fae9fe73"}
