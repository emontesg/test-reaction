{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/connectors-shopify/server/hooks/orders.js","filename":"imports/plugins/included/connectors-shopify/server/hooks/orders.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/connectors-shopify/server/hooks/orders.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/connectors-shopify/server/hooks/orders.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/connectors-shopify/server/hooks/orders.js"}},"code":"let Job;\nmodule.watch(require(\"/imports/plugins/core/job-collection/lib\"), {\n  Job(v) {\n    Job = v;\n  }\n\n}, 0);\nlet Hooks, Reaction;\nmodule.watch(require(\"/server/api\"), {\n  Hooks(v) {\n    Hooks = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 1);\nlet Jobs;\nmodule.watch(require(\"/lib/collections\"), {\n  Jobs(v) {\n    Jobs = v;\n  }\n\n}, 2);\n\nfunction addExportJob(orderId) {\n  new Job(Jobs, \"connectors/shopify/export/order\", {\n    orderId\n  }).priority(\"normal\").retry({\n    retries: 5,\n    wait: 5000,\n    backoff: \"exponential\"\n  }).save();\n}\n\nHooks.Events.add(\"afterOrderInsert\", doc => {\n  // Ensure we have items\n  if (doc && doc.items && Array.isArray(doc.items)) {\n    // Get all shopIds represented in this cart\n    const shopIdsInCart = doc.items.map(item => item.shopId); // get the unique set of shopIds in this cart\n\n    const uniqueShopIds = [...new Set(shopIdsInCart)]; // For each shopid check to see if there are synchooks are respond appropriately\n\n    uniqueShopIds.forEach(shopId => {\n      const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n        shopId,\n        name: \"reaction-connectors-shopify\"\n      });\n\n      if (shopifyPkg) {\n        const {\n          settings\n        } = shopifyPkg;\n        const {\n          synchooks\n        } = settings;\n\n        if (synchooks) {\n          synchooks.forEach(hook => {\n            if (hook.topic === \"orders\" && hook.event === \"orders/create\" && hook.syncType === \"exportToShopify\") {\n              addExportJob(doc._id);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  return doc;\n});","map":{"version":3,"sources":["imports/plugins/included/connectors-shopify/server/hooks/orders.js"],"names":["Job","module","watch","require","v","Hooks","Reaction","Jobs","addExportJob","orderId","priority","retry","retries","wait","backoff","save","Events","add","doc","items","Array","isArray","shopIdsInCart","map","item","shopId","uniqueShopIds","Set","forEach","shopifyPkg","getPackageSettingsWithOptions","name","settings","synchooks","hook","topic","event","syncType","_id"],"mappings":"AAAA,IAAIA,GAAJ;AAAQC,OAAOC,KAAP,CAAaC,QAAQ,0CAAR,CAAb,EAAiE;AAACH,MAAII,CAAJ,EAAM;AAACJ,UAAII,CAAJ;AAAM;;AAAd,CAAjE,EAAiF,CAAjF;AAAoF,IAAIC,KAAJ,EAAUC,QAAV;AAAmBL,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ,GAAlB;;AAAmBE,WAASF,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW;;AAA1C,CAApC,EAAgF,CAAhF;AAAmF,IAAIG,IAAJ;AAASN,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACI,OAAKH,CAAL,EAAO;AAACG,WAAKH,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;;AAK3M,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,MAAIT,GAAJ,CAAQO,IAAR,EAAc,iCAAd,EAAiD;AAAEE;AAAF,GAAjD,EACGC,QADH,CACY,QADZ,EAEGC,KAFH,CAES;AACLC,aAAS,CADJ;AAELC,UAAM,IAFD;AAGLC,aAAS;AAHJ,GAFT,EAMKC,IANL;AAOD;;AAGDV,MAAMW,MAAN,CAAaC,GAAb,CAAiB,kBAAjB,EAAsCC,GAAD,IAAS;AAC5C;AACA,MAAIA,OAAOA,IAAIC,KAAX,IAAoBC,MAAMC,OAAN,CAAcH,IAAIC,KAAlB,CAAxB,EAAkD;AAChD;AACA,UAAMG,gBAAgBJ,IAAIC,KAAJ,CAAUI,GAAV,CAAeC,IAAD,IAAUA,KAAKC,MAA7B,CAAtB,CAFgD,CAIhD;;AACA,UAAMC,gBAAgB,CAAC,GAAG,IAAIC,GAAJ,CAAQL,aAAR,CAAJ,CAAtB,CALgD,CAOhD;;AACAI,kBAAcE,OAAd,CAAuBH,MAAD,IAAY;AAChC,YAAMI,aAAavB,SAASwB,6BAAT,CAAuC;AACxDL,cADwD;AAExDM,cAAM;AAFkD,OAAvC,CAAnB;;AAIA,UAAIF,UAAJ,EAAgB;AACd,cAAM;AAAEG;AAAF,YAAeH,UAArB;AACA,cAAM;AAAEI;AAAF,YAAgBD,QAAtB;;AACA,YAAIC,SAAJ,EAAe;AACbA,oBAAUL,OAAV,CAAmBM,IAAD,IAAU;AAC1B,gBAAIA,KAAKC,KAAL,KAAe,QAAf,IAA2BD,KAAKE,KAAL,KAAe,eAA1C,IAA6DF,KAAKG,QAAL,KAAkB,iBAAnF,EAAsG;AACpG7B,2BAAaU,IAAIoB,GAAjB;AACD;AACF,WAJD;AAKD;AACF;AACF,KAhBD;AAiBD;;AAED,SAAOpB,GAAP;AACD,CA9BD","sourcesContent":["import { Job } from \"/imports/plugins/core/job-collection/lib\";\nimport { Hooks, Reaction } from \"/server/api\";\nimport { Jobs } from \"/lib/collections\";\n\n\nfunction addExportJob(orderId) {\n  new Job(Jobs, \"connectors/shopify/export/order\", { orderId })\n    .priority(\"normal\")\n    .retry({\n      retries: 5,\n      wait: 5000,\n      backoff: \"exponential\"\n    }).save();\n}\n\n\nHooks.Events.add(\"afterOrderInsert\", (doc) => {\n  // Ensure we have items\n  if (doc && doc.items && Array.isArray(doc.items)) {\n    // Get all shopIds represented in this cart\n    const shopIdsInCart = doc.items.map((item) => item.shopId);\n\n    // get the unique set of shopIds in this cart\n    const uniqueShopIds = [...new Set(shopIdsInCart)];\n\n    // For each shopid check to see if there are synchooks are respond appropriately\n    uniqueShopIds.forEach((shopId) => {\n      const shopifyPkg = Reaction.getPackageSettingsWithOptions({\n        shopId,\n        name: \"reaction-connectors-shopify\"\n      });\n      if (shopifyPkg) {\n        const { settings } = shopifyPkg;\n        const { synchooks } = settings;\n        if (synchooks) {\n          synchooks.forEach((hook) => {\n            if (hook.topic === \"orders\" && hook.event === \"orders/create\" && hook.syncType === \"exportToShopify\") {\n              addExportJob(doc._id);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  return doc;\n});\n"]},"sourceType":"script","hash":"84efed5e36ed0076f4a5574881773fff127e5190"}
