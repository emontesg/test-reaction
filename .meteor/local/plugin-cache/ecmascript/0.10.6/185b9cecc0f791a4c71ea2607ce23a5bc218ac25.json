{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/ui-tagnav/client/components/tagGroup.js","filename":"imports/plugins/core/ui-tagnav/client/components/tagGroup.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/ui-tagnav/client/components/tagGroup.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/ui-tagnav/client/components/tagGroup.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/ui-tagnav/client/components/tagGroup.js"}},"code":"var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _compact;\n\nmodule.watch(require(\"lodash/compact\"), {\n  \"default\": function (v) {\n    _compact = v;\n  }\n}, 0);\nvar React, Component;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 1);\nvar PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 2);\nvar Components, registerComponent;\nmodule.watch(require(\"../../../components/lib\"), {\n  Components: function (v) {\n    Components = v;\n  },\n  registerComponent: function (v) {\n    registerComponent = v;\n  }\n}, 3);\nvar update;\nmodule.watch(require(\"immutability-helper\"), {\n  \"default\": function (v) {\n    update = v;\n  }\n}, 4);\nvar TagHelpers;\nmodule.watch(require(\"../helpers\"), {\n  TagHelpers: function (v) {\n    TagHelpers = v;\n  }\n}, 5);\nvar getTagIds;\nmodule.watch(require(\"../../../../../../lib/selectors/tags\"), {\n  getTagIds: function (v) {\n    getTagIds = v;\n  }\n}, 6);\nvar Router;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Router: function (v) {\n    Router = v;\n  }\n}, 7);\n\nvar TagGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(TagGroup, _Component);\n\n  function TagGroup(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _initialiseProps.call((0, _assertThisInitialized2.default)(_this));\n\n    var _props$tagGroupProps = props.tagGroupProps,\n        parentTag = _props$tagGroupProps.parentTag,\n        tagsByKey = _props$tagGroupProps.tagsByKey,\n        tagIds = _props$tagGroupProps.tagIds;\n    _this.state = {\n      suggestions: [],\n      newTag: {\n        name: \"\"\n      },\n      tagIds: tagIds,\n      parentTag: parentTag,\n      tagsByKey: tagsByKey\n    };\n    return _this;\n  }\n\n  var _proto = TagGroup.prototype;\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      var _nextProps$tagGroupPr = nextProps.tagGroupProps,\n          parentTag = _nextProps$tagGroupPr.parentTag,\n          tagsByKey = _nextProps$tagGroupPr.tagsByKey,\n          tagIds = _nextProps$tagGroupPr.tagIds;\n      this.setState({\n        tagIds: tagIds,\n        parentTag: parentTag,\n        tagsByKey: tagsByKey\n      });\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.renderTree = function () {\n    function renderTree(tags) {\n      var _this2 = this;\n\n      if (Array.isArray(tags)) {\n        return tags.map(function (tag) {\n          return React.createElement(\"div\", {\n            className: \"rui grouptag \" + _this2.className,\n            \"data-id\": tag._id,\n            key: tag._id\n          }, React.createElement(Components.TagGroupHeader, (0, _extends2.default)({}, _this2.props, {\n            tag: tag,\n            parentTag: _this2.state.parentTag,\n            onTagRemove: _this2.props.onTagRemove\n          })), React.createElement(Components.TagGroupBody, (0, _extends2.default)({}, _this2.props, {\n            tagGroupBodyProps: _this2.tagGroupBodyProps(tag)\n          })));\n        });\n      }\n    }\n\n    return renderTree;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var slug = this.state.parentTag.slug;\n      var url = Router.pathFor(\"tag\", {\n        hash: {\n          slug: slug\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"rui tagtree\"\n      }, React.createElement(\"div\", {\n        className: \"header\"\n      }, React.createElement(\"span\", {\n        className: \"title\"\n      }, this.state.parentTag.name), React.createElement(\"a\", {\n        href: url\n      }, \"View All \", React.createElement(\"i\", {\n        className: \"fa fa-angle-right\"\n      }))), React.createElement(\"div\", {\n        className: \"content\"\n      }, this.renderTree(this.tags), this.props.editable && React.createElement(\"div\", {\n        className: \"rui grouptag create\"\n      }, React.createElement(\"div\", {\n        className: \"header\"\n      }, React.createElement(Components.TagItem, {\n        blank: true,\n        tag: this.state.newTag,\n        key: \"newTagForm\",\n        inputPlaceholder: \"Add Tag\",\n        i18nKeyInputPlaceholder: \"tags.addTag\",\n        suggestions: this.state.suggestions,\n        onClearSuggestions: this.handleClearSuggestions,\n        onGetSuggestions: this.handleGetSuggestions,\n        onTagInputBlur: this.handleNewTagSave,\n        onTagSave: this.handleNewTagSave,\n        onTagUpdate: this.handleNewTagUpdate\n      })))));\n    }\n\n    return render;\n  }();\n\n  (0, _createClass2.default)(TagGroup, [{\n    key: \"tags\",\n    get: function () {\n      var _this3 = this;\n\n      if (this.props.editable) {\n        return this.state.tagIds.map(function (tagId) {\n          return _this3.state.tagsByKey[tagId];\n        });\n      }\n\n      return this.props.tagGroupProps.subTagGroups;\n    }\n  }, {\n    key: \"className\",\n    get: function () {\n      if (this.props.blank) {\n        return \"create\";\n      }\n\n      return \"\";\n    }\n  }]);\n  return TagGroup;\n}(Component);\n\nvar _initialiseProps = function () {\n  var _this4 = this;\n\n  this.handleGetSuggestions = function (suggestionUpdateRequest) {\n    var suggestions = TagHelpers.updateSuggestions(suggestionUpdateRequest.value, {\n      excludeTags: _this4.state.tagIds\n    });\n\n    _this4.setState({\n      suggestions: suggestions\n    });\n  };\n\n  this.handleClearSuggestions = function () {\n    _this4.setState({\n      suggestions: []\n    });\n  };\n\n  this.handleNewTagSave = function (event, tag) {\n    if (_this4.props.onNewTagSave) {\n      _this4.props.onNewTagSave(tag, _this4.props.tagGroupProps.parentTag);\n\n      _this4.setState({\n        newTag: {\n          name: \"\"\n        }\n      });\n    }\n  };\n\n  this.handleTagUpdate = function (event, tag) {\n    var _tagsByKey;\n\n    var newState = update(_this4.state, {\n      tagsByKey: (_tagsByKey = {}, _tagsByKey[tag._id] = {\n        $set: tag\n      }, _tagsByKey)\n    });\n\n    _this4.setState(newState);\n  };\n\n  this.handleNewTagUpdate = function (event, tag) {\n    // updates blank tag state being edited\n    _this4.setState({\n      newTag: tag\n    });\n  };\n\n  this.tagGroupBodyProps = function (tag) {\n    var subTagGroups = _compact(TagHelpers.subTags(tag));\n\n    var tagsByKey = {};\n\n    if (Array.isArray(subTagGroups)) {\n      for (var _iterator = subTagGroups, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _tagItem = _ref;\n        tagsByKey[_tagItem._id] = _tagItem;\n      }\n    }\n\n    return {\n      parentTag: tag,\n      tagsByKey: tagsByKey || {},\n      tagIds: getTagIds({\n        tags: subTagGroups\n      }) || [],\n      subTagGroups: subTagGroups\n    };\n  };\n};\n\nTagGroup.propTypes = {\n  blank: PropTypes.bool,\n  editable: PropTypes.bool,\n  onNewTagSave: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  tagGroupProps: PropTypes.object\n};\nregisterComponent(\"TagGroup\", TagGroup);\nmodule.exportDefault(TagGroup);","map":{"version":3,"sources":["imports/plugins/core/ui-tagnav/client/components/tagGroup.js"],"names":["_compact","module","watch","require","v","React","Component","PropTypes","Components","registerComponent","update","TagHelpers","getTagIds","Router","TagGroup","props","tagGroupProps","parentTag","tagsByKey","tagIds","state","suggestions","newTag","name","componentWillReceiveProps","nextProps","setState","renderTree","tags","Array","isArray","map","tag","className","_id","onTagRemove","tagGroupBodyProps","render","slug","url","pathFor","hash","editable","handleClearSuggestions","handleGetSuggestions","handleNewTagSave","handleNewTagUpdate","tagId","subTagGroups","blank","suggestionUpdateRequest","updateSuggestions","value","excludeTags","event","onNewTagSave","handleTagUpdate","newState","$set","subTags","tagItem","propTypes","bool","func","object","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Components, registerComponent } from \"@reactioncommerce/reaction-components\";\nimport update from \"immutability-helper\";\nimport { TagHelpers } from \"/imports/plugins/core/ui-tagnav/client/helpers\";\nimport { getTagIds } from \"/lib/selectors/tags\";\nimport { Router } from \"/client/api\";\n\nclass TagGroup extends Component {\n  constructor(props) {\n    super(props);\n\n    const { parentTag, tagsByKey, tagIds } = props.tagGroupProps;\n    this.state = {\n      suggestions: [],\n      newTag: {\n        name: \"\"\n      },\n      tagIds,\n      parentTag,\n      tagsByKey\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { parentTag, tagsByKey, tagIds } = nextProps.tagGroupProps;\n    this.setState({ tagIds, parentTag, tagsByKey });\n  }\n\n  get tags() {\n    if (this.props.editable) {\n      return this.state.tagIds.map((tagId) => this.state.tagsByKey[tagId]);\n    }\n\n    return this.props.tagGroupProps.subTagGroups;\n  }\n\n  get className() {\n    if (this.props.blank) {\n      return \"create\";\n    }\n    return \"\";\n  }\n\n  handleGetSuggestions = (suggestionUpdateRequest) => {\n    const suggestions = TagHelpers.updateSuggestions(\n      suggestionUpdateRequest.value,\n      { excludeTags: this.state.tagIds }\n    );\n\n    this.setState({ suggestions });\n  }\n\n  handleClearSuggestions = () => {\n    this.setState({ suggestions: [] });\n  }\n\n  handleNewTagSave = (event, tag) => {\n    if (this.props.onNewTagSave) {\n      this.props.onNewTagSave(tag, this.props.tagGroupProps.parentTag);\n      this.setState({\n        newTag: { name: \"\" }\n      });\n    }\n  }\n\n  handleTagUpdate = (event, tag) => {\n    const newState = update(this.state, {\n      tagsByKey: {\n        [tag._id]: {\n          $set: tag\n        }\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  handleNewTagUpdate = (event, tag) => { // updates blank tag state being edited\n    this.setState({ newTag: tag });\n  }\n\n  tagGroupBodyProps = (tag) => {\n    const subTagGroups = _.compact(TagHelpers.subTags(tag));\n    const tagsByKey = {};\n\n    if (Array.isArray(subTagGroups)) {\n      for (const tagItem of subTagGroups) {\n        tagsByKey[tagItem._id] = tagItem;\n      }\n    }\n\n    return {\n      parentTag: tag,\n      tagsByKey: tagsByKey || {},\n      tagIds: getTagIds({ tags: subTagGroups }) || [],\n      subTagGroups\n    };\n  }\n\n  renderTree(tags) {\n    if (Array.isArray(tags)) {\n      return tags.map((tag) => (\n        <div className={`rui grouptag ${this.className}`} data-id={tag._id} key={tag._id}>\n          <Components.TagGroupHeader\n            {...this.props}\n            tag={tag}\n            parentTag={this.state.parentTag}\n            onTagRemove={this.props.onTagRemove}\n          />\n          <Components.TagGroupBody\n            {...this.props}\n            tagGroupBodyProps={this.tagGroupBodyProps(tag)}\n          />\n        </div>\n      ));\n    }\n  }\n\n  render() {\n    const { slug } = this.state.parentTag;\n    const url = Router.pathFor(\"tag\", {\n      hash: {\n        slug\n      }\n    });\n    return (\n      <div className=\"rui tagtree\">\n        <div className=\"header\">\n          <span className=\"title\">{this.state.parentTag.name}</span>\n          <a href={url}>View All <i className=\"fa fa-angle-right\" /></a>\n        </div>\n        <div className=\"content\">\n          {this.renderTree(this.tags)}\n          {this.props.editable &&\n            <div className=\"rui grouptag create\">\n              <div className=\"header\">\n                <Components.TagItem\n                  blank={true}\n                  tag={this.state.newTag}\n                  key=\"newTagForm\"\n                  inputPlaceholder=\"Add Tag\"\n                  i18nKeyInputPlaceholder=\"tags.addTag\"\n                  suggestions={this.state.suggestions}\n                  onClearSuggestions={this.handleClearSuggestions}\n                  onGetSuggestions={this.handleGetSuggestions}\n                  onTagInputBlur={this.handleNewTagSave}\n                  onTagSave={this.handleNewTagSave}\n                  onTagUpdate={this.handleNewTagUpdate}\n                />\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nTagGroup.propTypes = {\n  blank: PropTypes.bool,\n  editable: PropTypes.bool,\n  onNewTagSave: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  tagGroupProps: PropTypes.object\n};\n\nregisterComponent(\"TagGroup\", TagGroup);\n\nexport default TagGroup;\n"]},"sourceType":"script","hash":"185b9cecc0f791a4c71ea2607ce23a5bc218ac25"}
