{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/taxes-taxcloud/server/methods/methods.js","filename":"imports/plugins/included/taxes-taxcloud/server/methods/methods.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/taxes-taxcloud/server/methods/methods.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/taxes-taxcloud/server/methods/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/taxes-taxcloud/server/methods/methods.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP;\nmodule.watch(require(\"meteor/http\"), {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 1);\nMeteor.methods({\n  /**\n   * We're using https://taxcloud.net\n   * just to get an intial import data set\n   * this service doesn't require taxcloud id\n   * but other services need authorization\n   * use TAXCODE_SRC  to override source url\n   * @returns {Array} An array of Tax code objects\n   */\n  \"taxcloud/getTaxCodes\"() {\n    const taxCodeArray = [];\n    const TAXCODE_SRC = \"https://taxcloud.net/tic/?format=json\";\n    const taxCodes = HTTP.get(TAXCODE_SRC);\n\n    if (taxCodes) {\n      taxCodes.data.tic_list.forEach(code => {\n        if (code.tic.children) {\n          code.tic.children.forEach(child => {\n            taxCodeArray.push(child.tic);\n          });\n        }\n\n        taxCodeArray.push(code.tic);\n      });\n      return taxCodeArray;\n    }\n\n    throw new Meteor.Error(\"retrieval-failed\", \"Error getting tax codes\");\n  }\n\n});","map":{"version":3,"sources":["imports/plugins/included/taxes-taxcloud/server/methods/methods.js"],"names":["Meteor","module","watch","require","v","HTTP","methods","taxCodeArray","TAXCODE_SRC","taxCodes","get","data","tic_list","forEach","code","tic","children","child","push","Error"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,IAAJ;AAASJ,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACE,OAAKD,CAAL,EAAO;AAACC,WAAKD,CAAL;AAAO;;AAAhB,CAApC,EAAsD,CAAtD;AAGnFJ,OAAOM,OAAP,CAAe;AACb;;;;;;;;AAQA,2BAAyB;AACvB,UAAMC,eAAe,EAArB;AACA,UAAMC,cAAc,uCAApB;AACA,UAAMC,WAAWJ,KAAKK,GAAL,CAASF,WAAT,CAAjB;;AAEA,QAAIC,QAAJ,EAAc;AACZA,eAASE,IAAT,CAAcC,QAAd,CAAuBC,OAAvB,CAAgCC,IAAD,IAAU;AACvC,YAAIA,KAAKC,GAAL,CAASC,QAAb,EAAuB;AACrBF,eAAKC,GAAL,CAASC,QAAT,CAAkBH,OAAlB,CAA2BI,KAAD,IAAW;AACnCV,yBAAaW,IAAb,CAAkBD,MAAMF,GAAxB;AACD,WAFD;AAGD;;AACDR,qBAAaW,IAAb,CAAkBJ,KAAKC,GAAvB;AACD,OAPD;AAQA,aAAOR,YAAP;AACD;;AACD,UAAM,IAAIP,OAAOmB,KAAX,CAAiB,kBAAjB,EAAqC,yBAArC,CAAN;AACD;;AA1BY,CAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { HTTP } from \"meteor/http\";\n\nMeteor.methods({\n  /**\n   * We're using https://taxcloud.net\n   * just to get an intial import data set\n   * this service doesn't require taxcloud id\n   * but other services need authorization\n   * use TAXCODE_SRC  to override source url\n   * @returns {Array} An array of Tax code objects\n   */\n  \"taxcloud/getTaxCodes\"() {\n    const taxCodeArray = [];\n    const TAXCODE_SRC = \"https://taxcloud.net/tic/?format=json\";\n    const taxCodes = HTTP.get(TAXCODE_SRC);\n\n    if (taxCodes) {\n      taxCodes.data.tic_list.forEach((code) => {\n        if (code.tic.children) {\n          code.tic.children.forEach((child) => {\n            taxCodeArray.push(child.tic);\n          });\n        }\n        taxCodeArray.push(code.tic);\n      });\n      return taxCodeArray;\n    }\n    throw new Meteor.Error(\"retrieval-failed\", \"Error getting tax codes\");\n  }\n});\n"]},"sourceType":"script","hash":"68575d749ee7819909dfede94c119540dabfe737"}
