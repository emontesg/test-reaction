{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/templates/server/methods.js","filename":"imports/plugins/core/templates/server/methods.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/templates/server/methods.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/templates/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/templates/server/methods.js"}},"code":"module.export({\n  methods: () => methods\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Reaction;\nmodule.watch(require(\"../../../../../server/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 2);\nlet Templates;\nmodule.watch(require(\"../../../../../lib/collections\"), {\n  Templates(v) {\n    Templates = v;\n  }\n\n}, 3);\nconst methods = {\n  /**\n   * @name templates/email/update\n   * @method\n   * @memberof Methods/Templates\n   * @todo Add permissions\n   * @summary Updates email template in Templates collection\n   * @param {String} templateId - id of template to remove\n   * @param {Object} doc - data to update\n   * @return {Number} remove template\n   */\n  \"templates/email/update\"(templateId, doc) {\n    check(templateId, String);\n    check(doc, Object);\n    const shopId = Reaction.getShopId();\n    const userId = Meteor.userId(); // Check that this user has permission to update templates for the active shop\n\n    if (!Reaction.hasPermission(\"reaction-templates\", userId, shopId)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    return Templates.update({\n      _id: templateId,\n      type: \"email\",\n      shopId // Ensure that the template we're attempting to update is owned by the active shop.\n\n    }, {\n      $set: {\n        title: doc.title,\n        name: doc.name,\n        language: doc.language,\n        template: doc.template,\n        subject: doc.subject,\n        enabled: doc.enabled\n      }\n    });\n  }\n\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["imports/plugins/core/templates/server/methods.js"],"names":["module","export","methods","Meteor","watch","require","v","check","Reaction","Templates","templateId","doc","String","Object","shopId","getShopId","userId","hasPermission","Error","update","_id","type","$set","title","name","language","template","subject","enabled"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,MAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,SAAOG,CAAP,EAAS;AAACH,aAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,QAAJ;AAAaR,OAAOI,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACG,WAASF,CAAT,EAAW;AAACE,eAASF,CAAT;AAAW;;AAAxB,CAAlD,EAA4E,CAA5E;AAA+E,IAAIG,SAAJ;AAAcT,OAAOI,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAACI,YAAUH,CAAV,EAAY;AAACG,gBAAUH,CAAV;AAAY;;AAA1B,CAAvD,EAAmF,CAAnF;AAYxR,MAAMJ,UAAU;AACrB;;;;;;;;;;AAUA,2BAAyBQ,UAAzB,EAAqCC,GAArC,EAA0C;AACxCJ,UAAMG,UAAN,EAAkBE,MAAlB;AACAL,UAAMI,GAAN,EAAWE,MAAX;AAEA,UAAMC,SAASN,SAASO,SAAT,EAAf;AACA,UAAMC,SAASb,OAAOa,MAAP,EAAf,CALwC,CAOxC;;AACA,QAAI,CAACR,SAASS,aAAT,CAAuB,oBAAvB,EAA6CD,MAA7C,EAAqDF,MAArD,CAAL,EAAmE;AACjE,YAAM,IAAIX,OAAOe,KAAX,CAAiB,eAAjB,EAAkC,eAAlC,CAAN;AACD;;AAED,WAAOT,UAAUU,MAAV,CAAiB;AACtBC,WAAKV,UADiB;AAEtBW,YAAM,OAFgB;AAGtBP,YAHsB,CAGf;;AAHe,KAAjB,EAIJ;AACDQ,YAAM;AACJC,eAAOZ,IAAIY,KADP;AAEJC,cAAMb,IAAIa,IAFN;AAGJC,kBAAUd,IAAIc,QAHV;AAIJC,kBAAUf,IAAIe,QAJV;AAKJC,iBAAShB,IAAIgB,OALT;AAMJC,iBAASjB,IAAIiB;AANT;AADL,KAJI,CAAP;AAcD;;AArCoB,CAAhB;AAwCPzB,OAAOD,OAAP,CAAeA,OAAf","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Reaction } from \"/server/api\";\nimport { Templates } from \"/lib/collections\";\n\n/**\n * @file Methods for Templates. Run these methods using `Meteor.call()`.\n *\n *\n * @namespace Methods/Templates\n*/\n\nexport const methods = {\n  /**\n   * @name templates/email/update\n   * @method\n   * @memberof Methods/Templates\n   * @todo Add permissions\n   * @summary Updates email template in Templates collection\n   * @param {String} templateId - id of template to remove\n   * @param {Object} doc - data to update\n   * @return {Number} remove template\n   */\n  \"templates/email/update\"(templateId, doc) {\n    check(templateId, String);\n    check(doc, Object);\n\n    const shopId = Reaction.getShopId();\n    const userId = Meteor.userId();\n\n    // Check that this user has permission to update templates for the active shop\n    if (!Reaction.hasPermission(\"reaction-templates\", userId, shopId)) {\n      throw new Meteor.Error(\"access-denied\", \"Access Denied\");\n    }\n\n    return Templates.update({\n      _id: templateId,\n      type: \"email\",\n      shopId // Ensure that the template we're attempting to update is owned by the active shop.\n    }, {\n      $set: {\n        title: doc.title,\n        name: doc.name,\n        language: doc.language,\n        template: doc.template,\n        subject: doc.subject,\n        enabled: doc.enabled\n      }\n    });\n  }\n};\n\nMeteor.methods(methods);\n"]},"sourceType":"script","hash":"27bdf242099fe433b8f8f70b8ccb47b3ff30b1c5"}
