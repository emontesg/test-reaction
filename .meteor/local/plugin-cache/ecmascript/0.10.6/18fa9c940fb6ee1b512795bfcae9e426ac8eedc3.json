{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/components/lib/components.js","filename":"imports/plugins/core/components/lib/components.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/components/lib/components.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/components/lib/components.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/components/lib/components.js"}},"code":"module.export({\n  Components: () => Components,\n  ComponentsTable: () => ComponentsTable,\n  registerComponent: () => registerComponent,\n  registerHOC: () => registerHOC,\n  getComponent: () => getComponent,\n  replaceComponent: () => replaceComponent,\n  getRawComponent: () => getRawComponent,\n  getHOCs: () => getHOCs,\n  copyHOCs: () => copyHOCs,\n  loadRegisteredComponents: () => loadRegisteredComponents\n});\n\nlet _setDisplayName;\n\nmodule.watch(require(\"recompose/setDisplayName\"), {\n  default(v) {\n    _setDisplayName = v;\n  }\n\n}, 0);\n\nlet _compose;\n\nmodule.watch(require(\"recompose/compose\"), {\n  default(v) {\n    _compose = v;\n  }\n\n}, 1);\nconst Components = {};\nconst ComponentsTable = {};\n\nfunction registerComponent(name, rawComponent, hocs = []) {\n  if (!name || !rawComponent) {\n    throw new Error(\"A name and component are required for registerComponent\");\n  } // store the component in the table\n\n\n  ComponentsTable[name] = {\n    name,\n    rawComponent,\n    hocs: Array.isArray(hocs) ? hocs : [hocs]\n  };\n}\n\nfunction registerHOC(name, hocs = []) {\n  if (!name || !hocs) {\n    throw new Error(\"A name and HOC(s) are required for registerHOC\");\n  }\n\n  const newHOCs = Array.isArray(hocs) ? hocs : [hocs];\n  const existingComponent = ComponentsTable[name]; // Check to see if this component has already been registered and whether it has\n  // HOC's to merge with our new ones. If not, just register it like a new component.\n  // This allows us to register HOCs _before_ registering the UI component.\n  // Just keep in mind that the resulting component will definitely throw an error\n  // if a UI component doesn't eventually get registered.\n\n  if (!!existingComponent && !!existingComponent.hocs) {\n    const existingHOCs = existingComponent.hocs;\n    ComponentsTable[name] = {\n      name,\n      hocs: [...newHOCs, ...existingHOCs]\n    };\n  } else {\n    ComponentsTable[name] = {\n      name,\n      hocs: newHOCs\n    };\n  }\n}\n\nfunction getComponent(name) {\n  const component = ComponentsTable[name];\n\n  if (!component) {\n    throw new Error(`Component ${name} not registered.`);\n  }\n\n  const hocs = component.hocs.map(hoc => Array.isArray(hoc) ? hoc[0](hoc[1]) : hoc);\n  return _compose(...hocs, _setDisplayName(`Reaction(${name})`))(component.rawComponent);\n}\n\nfunction replaceComponent(name, newComponent, hocs = []) {\n  const previousComponent = ComponentsTable[name];\n\n  if (!previousComponent) {\n    throw new Error(`Component '${name}' not found. Use registerComponent to create it.`);\n  }\n\n  const newHocs = Array.isArray(hocs) ? hocs : [hocs];\n  return registerComponent(name, newComponent, [...newHocs, ...previousComponent.hocs]);\n}\n\nconst getRawComponent = name => ComponentsTable[name].rawComponent;\n\nconst getHOCs = name => ComponentsTable[name].hocs;\n\nfunction copyHOCs(sourceComponentName, targetComponent) {\n  const sourceComponent = ComponentsTable[sourceComponentName];\n  return _compose(...sourceComponent.hocs)(targetComponent);\n}\n\nfunction loadRegisteredComponents() {\n  Object.keys(ComponentsTable).forEach(name => {\n    Components[name] = getComponent(name);\n  });\n  return Components;\n}","map":{"version":3,"sources":["imports/plugins/core/components/lib/components.js"],"names":["module","export","Components","ComponentsTable","registerComponent","registerHOC","getComponent","replaceComponent","getRawComponent","getHOCs","copyHOCs","loadRegisteredComponents","_setDisplayName","watch","require","default","v","_compose","name","rawComponent","hocs","Error","Array","isArray","newHOCs","existingComponent","existingHOCs","component","map","hoc","newComponent","previousComponent","newHocs","sourceComponentName","targetComponent","sourceComponent","Object","keys","forEach"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,cAAW,MAAIA,UAAhB;AAA2BC,mBAAgB,MAAIA,eAA/C;AAA+DC,qBAAkB,MAAIA,iBAArF;AAAuGC,eAAY,MAAIA,WAAvH;AAAmIC,gBAAa,MAAIA,YAApJ;AAAiKC,oBAAiB,MAAIA,gBAAtL;AAAuMC,mBAAgB,MAAIA,eAA3N;AAA2OC,WAAQ,MAAIA,OAAvP;AAA+PC,YAAS,MAAIA,QAA5Q;AAAqRC,4BAAyB,MAAIA;AAAlT,CAAd;;AAA2V,IAAIC,eAAJ;;AAAoBZ,OAAOa,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACC,UAAQC,CAAR,EAAU;AAACJ,sBAAgBI,CAAhB;AAAkB;;AAA9B,CAAjD,EAAiF,CAAjF;;AAAoF,IAAIC,QAAJ;;AAAajB,OAAOa,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,UAAQC,CAAR,EAAU;AAACC,eAASD,CAAT;AAAW;;AAAvB,CAA1C,EAAmE,CAAnE;AAEzc,MAAMd,aAAa,EAAnB;AACA,MAAMC,kBAAkB,EAAxB;;AAsBA,SAASC,iBAAT,CAA2Bc,IAA3B,EAAiCC,YAAjC,EAA+CC,OAAO,EAAtD,EAA0D;AAC/D,MAAI,CAACF,IAAD,IAAS,CAACC,YAAd,EAA4B;AAC1B,UAAM,IAAIE,KAAJ,CAAU,yDAAV,CAAN;AACD,GAH8D,CAK/D;;;AACAlB,kBAAgBe,IAAhB,IAAwB;AACtBA,QADsB;AAEtBC,gBAFsB;AAGtBC,UAAME,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD;AAHb,GAAxB;AAKD;;AAaM,SAASf,WAAT,CAAqBa,IAArB,EAA2BE,OAAO,EAAlC,EAAsC;AAC3C,MAAI,CAACF,IAAD,IAAS,CAACE,IAAd,EAAoB;AAClB,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,QAAMG,UAAUF,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA7C;AAEA,QAAMK,oBAAoBtB,gBAAgBe,IAAhB,CAA1B,CAP2C,CAS3C;AACA;AACA;AACA;AACA;;AACA,MAAI,CAAC,CAACO,iBAAF,IAAuB,CAAC,CAACA,kBAAkBL,IAA/C,EAAqD;AACnD,UAAMM,eAAeD,kBAAkBL,IAAvC;AAEAjB,oBAAgBe,IAAhB,IAAwB;AACtBA,UADsB;AAEtBE,YAAM,CAAC,GAAGI,OAAJ,EAAa,GAAGE,YAAhB;AAFgB,KAAxB;AAID,GAPD,MAOO;AACLvB,oBAAgBe,IAAhB,IAAwB;AACtBA,UADsB;AAEtBE,YAAMI;AAFgB,KAAxB;AAID;AACF;;AAWM,SAASlB,YAAT,CAAsBY,IAAtB,EAA4B;AACjC,QAAMS,YAAYxB,gBAAgBe,IAAhB,CAAlB;;AAEA,MAAI,CAACS,SAAL,EAAgB;AACd,UAAM,IAAIN,KAAJ,CAAW,aAAYH,IAAK,kBAA5B,CAAN;AACD;;AAED,QAAME,OAAOO,UAAUP,IAAV,CAAeQ,GAAf,CAAoBC,GAAD,IAAUP,MAAMC,OAAN,CAAcM,GAAd,IAAqBA,IAAI,CAAJ,EAAOA,IAAI,CAAJ,CAAP,CAArB,GAAsCA,GAAnE,CAAb;AAEA,SAAO,SAAQ,GAAGT,IAAX,EAAiB,gBAAgB,YAAWF,IAAK,GAAhC,CAAjB,EAAsDS,UAAUR,YAAhE,CAAP;AACD;;AAcM,SAASZ,gBAAT,CAA0BW,IAA1B,EAAgCY,YAAhC,EAA8CV,OAAO,EAArD,EAAyD;AAC9D,QAAMW,oBAAoB5B,gBAAgBe,IAAhB,CAA1B;;AAEA,MAAI,CAACa,iBAAL,EAAwB;AACtB,UAAM,IAAIV,KAAJ,CAAW,cAAaH,IAAK,kDAA7B,CAAN;AACD;;AAED,QAAMc,UAAUV,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA7C;AAEA,SAAOhB,kBAAkBc,IAAlB,EAAwBY,YAAxB,EAAsC,CAAC,GAAGE,OAAJ,EAAa,GAAGD,kBAAkBX,IAAlC,CAAtC,CAAP;AACD;;AAWM,MAAMZ,kBAAmBU,IAAD,IAAUf,gBAAgBe,IAAhB,EAAsBC,YAAxD;;AAWA,MAAMV,UAAWS,IAAD,IAAUf,gBAAgBe,IAAhB,EAAsBE,IAAhD;;AAYA,SAASV,QAAT,CAAkBuB,mBAAlB,EAAuCC,eAAvC,EAAwD;AAC7D,QAAMC,kBAAkBhC,gBAAgB8B,mBAAhB,CAAxB;AACA,SAAO,SAAQ,GAAGE,gBAAgBf,IAA3B,EAAiCc,eAAjC,CAAP;AACD;;AAWM,SAASvB,wBAAT,GAAoC;AACzCyB,SAAOC,IAAP,CAAYlC,eAAZ,EAA6BmC,OAA7B,CAAsCpB,IAAD,IAAU;AAC7ChB,eAAWgB,IAAX,IAAmBZ,aAAaY,IAAb,CAAnB;AACD,GAFD;AAIA,SAAOhB,UAAP;AACD","sourcesContent":["import { compose, setDisplayName } from \"recompose\";\n\nexport const Components = {}; // populated with final wrapped components\nexport const ComponentsTable = {}; // storage for separate elements of each component\n\n/**\n * @example // Register a component and container(s) with a name.\n * // The raw component can then be extended or replaced.\n *\n * // Structure of a component in the list:\n *\n * ComponentsTable.MyComponent = {\n *    name: 'MyComponent',\n *    hocs: [fn1, fn2],\n *    rawComponent: React.Component\n * }\n * @name registerComponent\n * @method\n * @memberof Components\n * @param {String} name The name of the component to register.\n * @param {React.Component} rawComponent Interchangeable/extendable component.\n * @param {Function|Array} hocs The HOCs to wrap around the raw component.\n *\n * @returns {React.Component} returns the final wrapped component\n */\nexport function registerComponent(name, rawComponent, hocs = []) {\n  if (!name || !rawComponent) {\n    throw new Error(\"A name and component are required for registerComponent\");\n  }\n\n  // store the component in the table\n  ComponentsTable[name] = {\n    name,\n    rawComponent,\n    hocs: Array.isArray(hocs) ? hocs : [hocs]\n  };\n}\n\n\n/**\n * @name registerHOC\n * @method\n * @summary Register containers (HOC) with a name.\n * If some containers already exist for the component, they will be extended.\n * @param {String} name The name of the component to register.\n * @param {Function|Array} hocs The HOCs to wrap around the raw component.\n * @memberof Components\n * @returns {undefined}\n */\nexport function registerHOC(name, hocs = []) {\n  if (!name || !hocs) {\n    throw new Error(\"A name and HOC(s) are required for registerHOC\");\n  }\n\n  const newHOCs = Array.isArray(hocs) ? hocs : [hocs];\n\n  const existingComponent = ComponentsTable[name];\n\n  // Check to see if this component has already been registered and whether it has\n  // HOC's to merge with our new ones. If not, just register it like a new component.\n  // This allows us to register HOCs _before_ registering the UI component.\n  // Just keep in mind that the resulting component will definitely throw an error\n  // if a UI component doesn't eventually get registered.\n  if (!!existingComponent && !!existingComponent.hocs) {\n    const existingHOCs = existingComponent.hocs;\n\n    ComponentsTable[name] = {\n      name,\n      hocs: [...newHOCs, ...existingHOCs]\n    };\n  } else {\n    ComponentsTable[name] = {\n      name,\n      hocs: newHOCs\n    };\n  }\n}\n\n\n/**\n * @name getComponent\n * @method\n * @summary Get a component registered with registerComponent(name, component, ...hocs).\n * @param {String} name The name of the component to get.\n * @return {Function|React.Component} A (wrapped) React component\n * @memberof Components\n */\nexport function getComponent(name) {\n  const component = ComponentsTable[name];\n\n  if (!component) {\n    throw new Error(`Component ${name} not registered.`);\n  }\n\n  const hocs = component.hocs.map((hoc) => (Array.isArray(hoc) ? hoc[0](hoc[1]) : hoc));\n\n  return compose(...hocs, setDisplayName(`Reaction(${name})`))(component.rawComponent);\n}\n\n\n/**\n * @name replaceComponent\n * @method\n * @summary Replace a Reaction component with a new component and optionally add one or more higher order components.\n * This function keeps track of the previous HOCs and wraps the new HOCs around previous ones\n * @param {String} name The name of the component to register.\n * @param {React.Component} newComponent Interchangeable/extendable component.\n * @param {Function|Array} hocs The HOCs to compose with the raw component.\n * @returns {Function|React.Component} A component callable with Components[name]\n * @memberof Components\n */\nexport function replaceComponent(name, newComponent, hocs = []) {\n  const previousComponent = ComponentsTable[name];\n\n  if (!previousComponent) {\n    throw new Error(`Component '${name}' not found. Use registerComponent to create it.`);\n  }\n\n  const newHocs = Array.isArray(hocs) ? hocs : [hocs];\n\n  return registerComponent(name, newComponent, [...newHocs, ...previousComponent.hocs]);\n}\n\n\n/**\n * @name getRawComponent\n * @method\n * @summary Get the raw UI component without any possible HOCs wrapping it.\n * @param {String} name The name of the component to get.\n * @returns {Function|React.Component} A React component\n * @memberof Components\n */\nexport const getRawComponent = (name) => ComponentsTable[name].rawComponent;\n\n\n/**\n * @name getHOCs\n * @method\n * @summary Get the raw UI component without any possible HOCs wrapping it.\n * @param {String} name The name of the component to get.\n * @returns {Function|React.Component} Array of HOCs\n * @memberof Components\n */\nexport const getHOCs = (name) => ComponentsTable[name].hocs;\n\n\n/**\n * @name copyHOCs\n * @method\n * @summary Wrap a new component with the HOCs from a different component\n * @param {String} sourceComponentName The name of the component to get the HOCs from\n * @param {Function|React.Component} targetComponent Component to wrap\n * @returns {Function|React.Component} A new component wrapped with the HOCs of the source component\n * @memberof Components\n */\nexport function copyHOCs(sourceComponentName, targetComponent) {\n  const sourceComponent = ComponentsTable[sourceComponentName];\n  return compose(...sourceComponent.hocs)(targetComponent);\n}\n\n\n/**\n * @name loadRegisteredComponents\n * @method\n * @summary Populate the final Components object with the contents of the lookup table.\n * This should only be called once on app startup.\n * @returns {Object} An object containing all of the registered components\n * @memberof Components\n **/\nexport function loadRegisteredComponents() {\n  Object.keys(ComponentsTable).forEach((name) => {\n    Components[name] = getComponent(name);\n  });\n\n  return Components;\n}\n"]},"sourceType":"script","hash":"18fa9c940fb6ee1b512795bfcae9e426ac8eedc3"}
