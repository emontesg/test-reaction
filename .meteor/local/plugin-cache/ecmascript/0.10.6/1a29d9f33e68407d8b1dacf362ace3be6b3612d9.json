{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/collections/collections.js","filename":"lib/collections/collections.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"lib/collections/collections.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"lib/collections/collections.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/collections/collections.js"}},"code":"module.export({\n  Accounts: () => Accounts,\n  Assets: () => Assets,\n  Cart: () => Cart,\n  Emails: () => Emails,\n  Inventory: () => Inventory,\n  Orders: () => Orders,\n  Packages: () => Packages,\n  Catalog: () => Catalog,\n  Products: () => Products,\n  Revisions: () => Revisions,\n  Shipping: () => Shipping,\n  Shops: () => Shops,\n  Groups: () => Groups,\n  SellerShops: () => SellerShops,\n  Tags: () => Tags,\n  Templates: () => Templates,\n  Translations: () => Translations,\n  Notifications: () => Notifications,\n  Sms: () => Sms,\n  Logs: () => Logs,\n  MediaRecords: () => MediaRecords\n});\n\nlet _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  default(v) {\n    _extend = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Schemas;\nmodule.watch(require(\"./schemas\"), {\n  \"*\"(v) {\n    Schemas = v;\n  }\n\n}, 3);\nlet cartOrderTransform;\nmodule.watch(require(\"./transform/cartOrder\"), {\n  cartOrderTransform(v) {\n    cartOrderTransform = v;\n  }\n\n}, 4);\n\n/**\n * @name mediaRecordsIndex\n * @private\n * @param {RawMongoCollection} rawMedia\n *\n * Sets up necessary indexes on the Media FileCollection\n */\nfunction mediaRecordsIndex(rawMedia) {\n  return Promise.asyncApply(() => {\n    try {\n      Promise.await(rawMedia.createIndex({\n        \"metadata.productId\": 1\n      }, {\n        background: true\n      }));\n      Promise.await(rawMedia.createIndex({\n        \"metadata.variantId\": 1\n      }, {\n        background: true\n      }));\n      Promise.await(rawMedia.createIndex({\n        \"metadata.priority\": 1\n      }, {\n        background: true\n      })); // These queries are used by the workers in file-collections package\n\n      Promise.await(rawMedia.createIndex({\n        \"original.remoteURL\": 1\n      }, {\n        background: true\n      }));\n      Promise.await(rawMedia.createIndex({\n        \"original.tempStoreId\": 1\n      }, {\n        background: true\n      }));\n    } catch (error) {\n      console.error(error); // eslint-disable-line no-console\n    }\n  });\n}\n/**\n *\n * Reaction Core Collections\n * @ignore\n */\n\n/**\n * Accounts Collection\n * @ignore\n */\n\n\nconst Accounts = new Mongo.Collection(\"Accounts\");\nAccounts.attachSchema(Schemas.Accounts);\n/**\n * Assets Collection\n * Store file asset paths or contents in a Collection\n * @ignore\n */\n\nconst Assets = new Mongo.Collection(\"Assets\");\nAssets.attachSchema(Schemas.Assets);\n/**\n * Cart Collection\n * @ignore\n */\n\nconst Cart = new Mongo.Collection(\"Cart\", {\n  transform(cart) {\n    const newInstance = Object.create(cartOrderTransform);\n    return _extend(newInstance, cart);\n  }\n\n});\nCart.attachSchema(Schemas.Cart);\n/**\n * Emails Collection\n * @ignore\n */\n\nconst Emails = new Mongo.Collection(\"Emails\");\nEmails.attachSchema(Schemas.Emails);\n/**\n * Inventory Collection\n * @ignore\n */\n\nconst Inventory = new Mongo.Collection(\"Inventory\");\nInventory.attachSchema(Schemas.Inventory);\n/**\n * Orders Collection\n * @ignore\n */\n\nconst Orders = new Mongo.Collection(\"Orders\", {\n  transform(order) {\n    const newInstance = Object.create(cartOrderTransform);\n    return _extend(newInstance, order);\n  }\n\n});\nOrders.attachSchema(Schemas.OrderDocument);\n/**\n * Packages Collection\n * @ignore\n */\n\nconst Packages = new Mongo.Collection(\"Packages\");\nPackages.attachSchema(Schemas.PackageConfig);\n/**\n * Catalog Collection\n * @todo: Attach a schema to the Catalog collection\n * @ignore\n */\n\nconst Catalog = new Mongo.Collection(\"Catalog\");\nconst Products = new Mongo.Collection(\"Products\");\nProducts.attachSchema(Schemas.Product, {\n  selector: {\n    type: \"simple\"\n  }\n});\nProducts.attachSchema(Schemas.ProductVariant, {\n  selector: {\n    type: \"variant\"\n  }\n});\n/**\n * Revisions Collection\n * @ignore\n */\n\nconst Revisions = new Mongo.Collection(\"Revisions\");\nRevisions.attachSchema(Schemas.Revisions);\n/**\n * Shipping Collection\n * @ignore\n */\n\nconst Shipping = new Mongo.Collection(\"Shipping\");\nShipping.attachSchema(Schemas.Shipping);\n/**\n* Shops Collection\n* @ignore\n*/\n\nconst Shops = new Mongo.Collection(\"Shops\");\nShops.attachSchema(Schemas.Shop);\n/**\n * Groups Collection\n * @ignore\n */\n\nconst Groups = new Mongo.Collection(\"Groups\");\nGroups.attachSchema(Schemas.Groups);\n/**\n * SellerShops Collection (client-only)\n * @ignore\n */\n\nlet sellerShops;\n\nif (Meteor.isClient) {\n  sellerShops = new Mongo.Collection(\"SellerShops\");\n  sellerShops.attachSchema(Schemas.Shop);\n}\n\nconst SellerShops = sellerShops;\nconst Tags = new Mongo.Collection(\"Tags\");\nTags.attachSchema(Schemas.Tag);\n/**\n * Templates Collection\n * @ignore\n */\n\nconst Templates = new Mongo.Collection(\"Templates\");\nTemplates.attachSchema(Schemas.Templates, {\n  selector: {\n    type: \"template\"\n  }\n});\nTemplates.attachSchema(Schemas.ReactLayout, {\n  selector: {\n    type: \"react\"\n  }\n});\n/**\n * Translations Collection\n * @ignore\n */\n\nconst Translations = new Mongo.Collection(\"Translations\");\nTranslations.attachSchema(Schemas.Translation);\n/**\n * Notifications Collection\n * @ignore\n */\n\nconst Notifications = new Mongo.Collection(\"Notifications\");\nNotifications.attachSchema(Schemas.Notification);\n/**\n * Sms Collection\n * @ignore\n */\n\nconst Sms = new Mongo.Collection(\"Sms\");\nSms.attachSchema(Schemas.Sms);\n/**\n * Logs Collection\n * @ignore\n */\n\nconst Logs = new Mongo.Collection(\"Logs\");\nLogs.attachSchema(Schemas.Logs);\n/**\n * MediaRecords Collection\n * @ignore\n */\n\nconst MediaRecords = new Mongo.Collection(\"cfs.Media.filerecord\");\n\n// Index on the props we search on\nif (Meteor.isServer) {\n  mediaRecordsIndex(MediaRecords.rawCollection());\n} // Might want to do this at some point.\n// MediaRecords.attachSchema();","map":{"version":3,"sources":["lib/collections/collections.js"],"names":["module","export","Accounts","Assets","Cart","Emails","Inventory","Orders","Packages","Catalog","Products","Revisions","Shipping","Shops","Groups","SellerShops","Tags","Templates","Translations","Notifications","Sms","Logs","MediaRecords","_extend","watch","require","default","v","Mongo","Meteor","Schemas","cartOrderTransform","mediaRecordsIndex","rawMedia","createIndex","background","error","console","Collection","attachSchema","transform","cart","newInstance","Object","create","order","OrderDocument","PackageConfig","Product","selector","type","ProductVariant","Shop","sellerShops","isClient","Tag","ReactLayout","Translation","Notification","isServer","rawCollection"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Mongo } from \"meteor/mongo\";\nimport { Meteor } from \"meteor/meteor\";\nimport * as Schemas from \"./schemas\";\nimport { cartOrderTransform } from \"./transform/cartOrder\";\n\n/**\n * @name mediaRecordsIndex\n * @private\n * @param {RawMongoCollection} rawMedia\n *\n * Sets up necessary indexes on the Media FileCollection\n */\nasync function mediaRecordsIndex(rawMedia) {\n  try {\n    await rawMedia.createIndex({ \"metadata.productId\": 1 }, { background: true });\n    await rawMedia.createIndex({ \"metadata.variantId\": 1 }, { background: true });\n    await rawMedia.createIndex({ \"metadata.priority\": 1 }, { background: true });\n\n    // These queries are used by the workers in file-collections package\n    await rawMedia.createIndex({ \"original.remoteURL\": 1 }, { background: true });\n    await rawMedia.createIndex({ \"original.tempStoreId\": 1 }, { background: true });\n  } catch (error) {\n    console.error(error); // eslint-disable-line no-console\n  }\n}\n\n/**\n *\n * Reaction Core Collections\n * @ignore\n */\n\n/**\n * Accounts Collection\n * @ignore\n */\nexport const Accounts = new Mongo.Collection(\"Accounts\");\n\nAccounts.attachSchema(Schemas.Accounts);\n\n\n/**\n * Assets Collection\n * Store file asset paths or contents in a Collection\n * @ignore\n */\nexport const Assets = new Mongo.Collection(\"Assets\");\n\nAssets.attachSchema(Schemas.Assets);\n\n\n/**\n * Cart Collection\n * @ignore\n */\nexport const Cart = new Mongo.Collection(\"Cart\", {\n  transform(cart) {\n    const newInstance = Object.create(cartOrderTransform);\n    return _.extend(newInstance, cart);\n  }\n});\n\nCart.attachSchema(Schemas.Cart);\n\n\n/**\n * Emails Collection\n * @ignore\n */\nexport const Emails = new Mongo.Collection(\"Emails\");\n\nEmails.attachSchema(Schemas.Emails);\n\n\n/**\n * Inventory Collection\n * @ignore\n */\nexport const Inventory = new Mongo.Collection(\"Inventory\");\n\nInventory.attachSchema(Schemas.Inventory);\n\n\n/**\n * Orders Collection\n * @ignore\n */\nexport const Orders = new Mongo.Collection(\"Orders\", {\n  transform(order) {\n    const newInstance = Object.create(cartOrderTransform);\n    return _.extend(newInstance, order);\n  }\n});\n\nOrders.attachSchema(Schemas.OrderDocument);\n\n/**\n * Packages Collection\n * @ignore\n */\nexport const Packages = new Mongo.Collection(\"Packages\");\n\nPackages.attachSchema(Schemas.PackageConfig);\n\n/**\n * Catalog Collection\n * @todo: Attach a schema to the Catalog collection\n * @ignore\n */\nexport const Catalog = new Mongo.Collection(\"Catalog\");\n\n/**\n * Products Collection\n * @ignore\n */\nexport const Products = new Mongo.Collection(\"Products\");\n\nProducts.attachSchema(Schemas.Product, { selector: { type: \"simple\" } });\nProducts.attachSchema(Schemas.ProductVariant, { selector: { type: \"variant\" } });\n\n/**\n * Revisions Collection\n * @ignore\n */\nexport const Revisions = new Mongo.Collection(\"Revisions\");\n\nRevisions.attachSchema(Schemas.Revisions);\n\n/**\n * Shipping Collection\n * @ignore\n */\nexport const Shipping = new Mongo.Collection(\"Shipping\");\n\nShipping.attachSchema(Schemas.Shipping);\n\n/**\n* Shops Collection\n* @ignore\n*/\nexport const Shops = new Mongo.Collection(\"Shops\");\n\nShops.attachSchema(Schemas.Shop);\n\n/**\n * Groups Collection\n * @ignore\n */\nexport const Groups = new Mongo.Collection(\"Groups\");\n\nGroups.attachSchema(Schemas.Groups);\n\n/**\n * SellerShops Collection (client-only)\n * @ignore\n */\nlet sellerShops;\nif (Meteor.isClient) {\n  sellerShops = new Mongo.Collection(\"SellerShops\");\n\n  sellerShops.attachSchema(Schemas.Shop);\n}\nexport const SellerShops = sellerShops;\n\n/**\n * Tags Collection\n * @ignore\n */\nexport const Tags = new Mongo.Collection(\"Tags\");\n\nTags.attachSchema(Schemas.Tag);\n\n/**\n * Templates Collection\n * @ignore\n */\nexport const Templates = new Mongo.Collection(\"Templates\");\n\nTemplates.attachSchema(Schemas.Templates, { selector: { type: \"template\" } });\nTemplates.attachSchema(Schemas.ReactLayout, { selector: { type: \"react\" } });\n\n\n/**\n * Translations Collection\n * @ignore\n */\nexport const Translations = new Mongo.Collection(\"Translations\");\n\nTranslations.attachSchema(Schemas.Translation);\n\n/**\n * Notifications Collection\n * @ignore\n */\nexport const Notifications = new Mongo.Collection(\"Notifications\");\n\nNotifications.attachSchema(Schemas.Notification);\n\n\n/**\n * Sms Collection\n * @ignore\n */\nexport const Sms = new Mongo.Collection(\"Sms\");\n\nSms.attachSchema(Schemas.Sms);\n\n\n/**\n * Logs Collection\n * @ignore\n */\nexport const Logs = new Mongo.Collection(\"Logs\");\n\nLogs.attachSchema(Schemas.Logs);\n\n/**\n * MediaRecords Collection\n * @ignore\n */\nexport const MediaRecords = new Mongo.Collection(\"cfs.Media.filerecord\");\n\n// Index on the props we search on\nif (Meteor.isServer) {\n  mediaRecordsIndex(MediaRecords.rawCollection());\n}\n\n// Might want to do this at some point.\n// MediaRecords.attachSchema();\n"]},"sourceType":"script","hash":"1a29d9f33e68407d8b1dacf362ace3be6b3612d9"}
