{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/product-variant/containers/gridItemControlsContainer.js","filename":"imports/plugins/included/product-variant/containers/gridItemControlsContainer.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/product-variant/containers/gridItemControlsContainer.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/product-variant/containers/gridItemControlsContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/product-variant/containers/gridItemControlsContainer.js"}},"code":"let _compose;\n\nmodule.watch(require(\"recompose/compose\"), {\n  default(v) {\n    _compose = v;\n  }\n\n}, 0);\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet registerComponent, composeWithTracker;\nmodule.watch(require(\"../../../core/components/lib\"), {\n  registerComponent(v) {\n    registerComponent = v;\n  },\n\n  composeWithTracker(v) {\n    composeWithTracker = v;\n  }\n\n}, 3);\nlet Session;\nmodule.watch(require(\"meteor/session\"), {\n  Session(v) {\n    Session = v;\n  }\n\n}, 4);\nlet Validation;\nmodule.watch(require(\"@reactioncommerce/schemas\"), {\n  Validation(v) {\n    Validation = v;\n  }\n\n}, 5);\nlet Reaction;\nmodule.watch(require(\"../../../../../client/api\"), {\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 6);\nlet GridItemControls;\nmodule.watch(require(\"../components/gridItemControls\"), {\n  default(v) {\n    GridItemControls = v;\n  }\n\n}, 7);\nlet ReactionProduct;\nmodule.watch(require(\"../../../../../lib/api\"), {\n  ReactionProduct(v) {\n    ReactionProduct = v;\n  }\n\n}, 8);\nlet ProductVariant;\nmodule.watch(require(\"../../../../../lib/collections/schemas/products\"), {\n  ProductVariant(v) {\n    ProductVariant = v;\n  }\n\n}, 9);\n\nconst wrapComponent = Comp => {\n  var _class, _temp;\n\n  return _temp = _class = class GridItemControlsContainer extends Component {\n    constructor(props) {\n      super(props);\n\n      this.hasCreateProductPermission = () => Reaction.hasPermission(\"createProduct\");\n\n      this.hasChanges = () => !!this.props.product.__draft;\n\n      this.checkValidation = () => {\n        // this returns an array with a single object\n        const variants = ReactionProduct.getVariants(this.props.product._id); // should validate variants if they exist to determine if product is Valid\n\n        if (variants.length !== 0) {\n          const validatedVariants = variants.map(variant => this.validation.validate(variant));\n          this.setState({\n            validProduct: Object.assign({}, this.props.product, {\n              __isValid: validatedVariants[0].isValid\n            })\n          });\n        } else {\n          // if variants do not exist then validation should pass\n          this.setState({\n            validProduct: Object.assign({}, this.props.product, {\n              __isValid: true\n            })\n          });\n        }\n      };\n\n      this.checked = () => this.props.isSelected === true;\n\n      this.validation = new Validation(ProductVariant);\n      this.validProduct = props.product;\n      this.hasCreateProductPermission = this.hasCreateProductPermission.bind(this);\n      this.hasChanges = this.hasChanges.bind(this);\n      this.checked = this.checked.bind(this);\n      this.checkValidation = this.checkValidation.bind(this);\n    }\n\n    componentWillMount() {\n      this.checkValidation();\n    }\n\n    render() {\n      return React.createElement(Comp, {\n        product: this.state.validProduct,\n        hasCreateProductPermission: this.hasCreateProductPermission,\n        hasChanges: this.hasChanges,\n        checked: this.checked\n      });\n    }\n\n  }, _class.propTypes = {\n    isSelected: PropTypes.bool,\n    product: PropTypes.object\n  }, _temp;\n};\n\nfunction composer(props, onData) {\n  const {\n    product\n  } = props;\n  let isSelected;\n\n  if (product) {\n    const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n    isSelected = Array.isArray(selectedProducts) ? selectedProducts.indexOf(product._id) >= 0 : false;\n  }\n\n  onData(null, {\n    product,\n    isSelected\n  });\n}\n\nregisterComponent(\"GridItemControls\", GridItemControls, [composeWithTracker(composer), wrapComponent]);\nmodule.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(GridItemControls));","map":{"version":3,"sources":["imports/plugins/included/product-variant/containers/gridItemControlsContainer.js"],"names":["_compose","module","watch","require","default","v","React","Component","PropTypes","registerComponent","composeWithTracker","Session","Validation","Reaction","GridItemControls","ReactionProduct","ProductVariant","wrapComponent","Comp","GridItemControlsContainer","constructor","props","hasCreateProductPermission","hasPermission","hasChanges","product","__draft","checkValidation","variants","getVariants","_id","length","validatedVariants","map","variant","validation","validate","setState","validProduct","Object","assign","__isValid","isValid","checked","isSelected","bind","componentWillMount","render","state","propTypes","bool","object","composer","onData","selectedProducts","get","Array","isArray","indexOf","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"recompose\";\nimport { registerComponent, composeWithTracker } from \"@reactioncommerce/reaction-components\";\nimport { Session } from \"meteor/session\";\nimport { Validation } from \"@reactioncommerce/schemas\";\nimport { Reaction } from \"/client/api\";\nimport GridItemControls from \"../components/gridItemControls\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { ProductVariant } from \"/lib/collections/schemas/products\";\n\nconst wrapComponent = (Comp) => (\n  class GridItemControlsContainer extends Component {\n    static propTypes = {\n      isSelected: PropTypes.bool,\n      product: PropTypes.object\n    }\n\n    constructor(props) {\n      super(props);\n\n      this.validation = new Validation(ProductVariant);\n      this.validProduct = props.product;\n\n      this.hasCreateProductPermission = this.hasCreateProductPermission.bind(this);\n      this.hasChanges = this.hasChanges.bind(this);\n      this.checked = this.checked.bind(this);\n      this.checkValidation = this.checkValidation.bind(this);\n    }\n\n    componentWillMount() {\n      this.checkValidation();\n    }\n\n    hasCreateProductPermission = () => Reaction.hasPermission(\"createProduct\")\n\n    hasChanges = () => !!this.props.product.__draft\n\n    // This method checks validation of the variants of the all the products on the Products grid to\n    // check whether all required fields have been submitted before publishing\n    checkValidation = () => {\n      // this returns an array with a single object\n      const variants = ReactionProduct.getVariants(this.props.product._id);\n\n      // should validate variants if they exist to determine if product is Valid\n      if (variants.length !== 0) {\n        const validatedVariants = variants.map((variant) => this.validation.validate(variant));\n        this.setState({\n          validProduct: Object.assign({}, this.props.product, { __isValid: validatedVariants[0].isValid })\n        });\n      } else {\n        // if variants do not exist then validation should pass\n        this.setState({\n          validProduct: Object.assign({}, this.props.product, { __isValid: true })\n        });\n      }\n    }\n\n    checked = () => this.props.isSelected === true\n\n    render() {\n      return (\n        <Comp\n          product={this.state.validProduct}\n          hasCreateProductPermission={this.hasCreateProductPermission}\n          hasChanges={this.hasChanges}\n          checked={this.checked}\n        />\n      );\n    }\n  }\n);\n\nfunction composer(props, onData) {\n  const { product } = props;\n  let isSelected;\n\n  if (product) {\n    const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n    isSelected = Array.isArray(selectedProducts) ? selectedProducts.indexOf(product._id) >= 0 : false;\n  }\n\n  onData(null, {\n    product,\n    isSelected\n  });\n}\n\nregisterComponent(\"GridItemControls\", GridItemControls, [\n  composeWithTracker(composer),\n  wrapComponent\n]);\n\nexport default compose(\n  composeWithTracker(composer),\n  wrapComponent\n)(GridItemControls);\n"]},"sourceType":"script","hash":"a78dfb8223be4983c95e19ec5cab0324b5bfceca"}
