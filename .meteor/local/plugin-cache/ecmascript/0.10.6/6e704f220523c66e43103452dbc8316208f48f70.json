{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/templates/client/templates/settings.js","filename":"imports/plugins/core/templates/client/templates/settings.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/templates/client/templates/settings.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/templates/client/templates/settings.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/templates/client/templates/settings.js"}},"code":"var $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar AutoForm;\nmodule.watch(require(\"meteor/aldeed:autoform\"), {\n  AutoForm: function (v) {\n    AutoForm = v;\n  }\n}, 2);\nvar Blaze;\nmodule.watch(require(\"meteor/blaze\"), {\n  Blaze: function (v) {\n    Blaze = v;\n  }\n}, 3);\nvar ReactiveDict;\nmodule.watch(require(\"meteor/reactive-dict\"), {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 4);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 5);\nvar Loading, SortableTable;\nmodule.watch(require(\"../../../ui/client/components\"), {\n  Loading: function (v) {\n    Loading = v;\n  },\n  SortableTable: function (v) {\n    SortableTable = v;\n  }\n}, 6);\nvar EmailTemplates;\nmodule.watch(require(\"../../lib/collections/schemas\"), {\n  EmailTemplates: function (v) {\n    EmailTemplates = v;\n  }\n}, 7);\nvar i18next;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 8);\nvar Templates;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Templates: function (v) {\n    Templates = v;\n  }\n}, 9);\n\n/*\n * template templateSettings onCreated\n */\nTemplate.templateSettings.onCreated(function () {\n  var _this = this;\n\n  // Subscribe to Templates collections\n  this.autorun(function () {\n    _this.subscribe(\"Templates\");\n  }); // Initiate State\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n/*\n * template templateSettings helpers\n */\n\nTemplate.templateSettings.helpers({\n  templateGrid: function () {\n    var filteredFields = [\"title\", \"type\", \"language\"];\n    var noDataMessage = i18next.t(\"templateGrid.noTemplatesFound\");\n    var instance = Template.instance(); //\n    // helper to get and select row from griddle\n    // into blaze to get correct template to edit\n    //\n\n    function editRow(options) {\n      var currentId = instance.state.get(\"editingId\"); // isEditing is current template\n\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id); // toggle edit mode clicking on same row\n\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    } // helper adds a class to every grid row\n\n\n    var customRowMetaData = {\n      bodyCssClassName: function () {\n        return \"template-grid-row\";\n      }\n    }; // add i18n handling to headers\n\n    var customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      var columnMeta = {\n        accessor: field,\n        // name of field\n        Header: i18next.t(\"templateGrid.columns.\" + field) // name to display\n\n      };\n      customColumnMetadata.push(columnMeta);\n    }); // return template Grid\n\n    return {\n      component: SortableTable,\n      publication: \"Templates\",\n      collection: Templates,\n      matchingResultsCount: \"templates-count\",\n      showFilter: true,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n  instance: function () {\n    var instance = Template.instance();\n    return instance;\n  },\n  template: function () {\n    var instance = Template.instance();\n    var id = instance.state.get(\"editingId\");\n    var template = Templates.findOne(id) || {};\n    return template;\n  },\n  typeEmail: function () {\n    var instance = Template.instance();\n    var id = instance.state.get(\"editingId\");\n    var template = Templates.findOne(id) || {};\n\n    if (template.type === \"email\") {\n      return true;\n    }\n\n    return false;\n  },\n  emailTemplateSchema: function () {\n    return EmailTemplates;\n  }\n});\n/*\n * template templateSettings events\n */\n\nTemplate.templateSettings.events({\n  \"click .template-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".template-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  },\n  \"submit #email-template-edit-form\": function () {\n    var instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"click .cancel, .template-grid-row .active\": function () {\n    var instance = Template.instance(); // remove active rows from grid\n\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    $(\".template-grid-row\").removeClass(\"active\");\n  }\n});\nAutoForm.hooks({\n  \"email-template-edit-form\": {\n    onSubmit: function (insertDoc) {\n      var _this2 = this;\n\n      this.event.preventDefault();\n      var templateId = this.docId;\n      Meteor.call(\"templates/email/update\", templateId, insertDoc, function (error, result) {\n        if (error) {\n          Alerts.toast(i18next.t(\"templateUpdateForm.alerts.failedToUpdate\", {\n            err: error.message\n          }), \"error\");\n\n          _this2.done(new Error(\"Failed to update template: \", error));\n\n          return false;\n        }\n\n        if (result) {\n          Alerts.toast(i18next.t(\"templateUpdateForm.alerts.templateUpdated\", \"Template successfully updated\"), \"success\");\n\n          _this2.done();\n        }\n      });\n    }\n  }\n});\n\nBlaze.TemplateInstance.prototype.parentTemplate = function () {\n  var levels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var view = Blaze.currentView;\n  var numLevel = levels;\n\n  while (view) {\n    if (view.name.substring(0, 9) === \"Template.\" && !numLevel) {\n      return view.templateInstance();\n    }\n\n    numLevel -= 1;\n    view = view.parentView;\n  }\n};","map":{"version":3,"sources":["imports/plugins/core/templates/client/templates/settings.js"],"names":["$","module","watch","require","v","Meteor","AutoForm","Blaze","ReactiveDict","Template","Loading","SortableTable","EmailTemplates","i18next","Templates","templateSettings","onCreated","autorun","subscribe","state","setDefault","isEditing","editingId","helpers","templateGrid","filteredFields","noDataMessage","t","instance","editRow","options","currentId","get","set","props","data","_id","customRowMetaData","bodyCssClassName","customColumnMetadata","forEach","field","columnMeta","accessor","Header","push","component","publication","collection","matchingResultsCount","showFilter","rowMetadata","columns","onRowClick","columnMetadata","externalLoadingComponent","template","id","findOne","typeEmail","type","emailTemplateSchema","events","event","removeClass","currentTarget","addClass","hooks","onSubmit","insertDoc","preventDefault","templateId","docId","call","error","result","Alerts","toast","err","message","done","Error","TemplateInstance","prototype","parentTemplate","levels","view","currentView","numLevel","name","substring","templateInstance","parentView"],"mappings":"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","sourcesContent":["import { $ } from \"meteor/jquery\";\nimport { Meteor } from \"meteor/meteor\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Blaze } from \"meteor/blaze\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Template } from \"meteor/templating\";\nimport { Loading, SortableTable } from \"/imports/plugins/core/ui/client/components\";\nimport { EmailTemplates } from \"../../lib/collections/schemas\";\nimport { i18next } from \"/client/api\";\nimport { Templates } from \"/lib/collections\";\n\n\n/*\n * template templateSettings onCreated\n */\nTemplate.templateSettings.onCreated(function () {\n  // Subscribe to Templates collections\n  this.autorun(() => {\n    this.subscribe(\"Templates\");\n  });\n\n  // Initiate State\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\n\n/*\n * template templateSettings helpers\n */\nTemplate.templateSettings.helpers({\n  templateGrid() {\n    const filteredFields = [\"title\", \"type\", \"language\"];\n    const noDataMessage = i18next.t(\"templateGrid.noTemplatesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze to get correct template to edit\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n\n      // isEditing is current template\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    // helper adds a class to every grid row\n    const customRowMetaData = {\n      bodyCssClassName: () => \"template-grid-row\"\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach((field) => {\n      const columnMeta = {\n        accessor: field, // name of field\n        Header: i18next.t(`templateGrid.columns.${field}`) // name to display\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return template Grid\n    return {\n      component: SortableTable,\n      publication: \"Templates\",\n      collection: Templates,\n      matchingResultsCount: \"templates-count\",\n      showFilter: true,\n      rowMetadata: customRowMetaData,\n      filteredFields,\n      columns: filteredFields,\n      noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n\n  template() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const template = Templates.findOne(id) || {};\n    return template;\n  },\n\n  typeEmail() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const template = Templates.findOne(id) || {};\n    if (template.type === \"email\") {\n      return true;\n    }\n    return false;\n  },\n\n  emailTemplateSchema() {\n    return EmailTemplates;\n  }\n});\n\n\n/*\n * template templateSettings events\n */\nTemplate.templateSettings.events({\n  \"click .template-grid-row\"(event) {\n    // toggle all rows off, then add our active row\n    $(\".template-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  },\n  \"submit #email-template-edit-form\"() {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"click .cancel, .template-grid-row .active\"() {\n    const instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    $(\".template-grid-row\").removeClass(\"active\");\n  }\n});\n\n\nAutoForm.hooks({\n  \"email-template-edit-form\": {\n    onSubmit(insertDoc) {\n      this.event.preventDefault();\n\n      const templateId = this.docId;\n\n      Meteor.call(\"templates/email/update\", templateId, insertDoc, (error, result) => {\n        if (error) {\n          Alerts.toast(i18next.t(\"templateUpdateForm.alerts.failedToUpdate\", { err: error.message }), \"error\");\n          this.done(new Error(\"Failed to update template: \", error));\n          return false;\n        }\n        if (result) {\n          Alerts.toast(i18next.t(\"templateUpdateForm.alerts.templateUpdated\", \"Template successfully updated\"), \"success\");\n          this.done();\n        }\n      });\n    }\n  }\n});\n\n\nBlaze.TemplateInstance.prototype.parentTemplate = function (levels = 1) {\n  let view = Blaze.currentView;\n  let numLevel = levels;\n  while (view) {\n    if (view.name.substring(0, 9) === \"Template.\" && !numLevel) {\n      return view.templateInstance();\n    }\n    numLevel -= 1;\n    view = view.parentView;\n  }\n};\n"]},"sourceType":"script","hash":"6e704f220523c66e43103452dbc8316208f48f70"}
