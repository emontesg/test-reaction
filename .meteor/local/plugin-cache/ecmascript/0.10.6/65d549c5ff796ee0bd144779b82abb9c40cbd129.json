{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/test-utils/helpers/getFakeMongoCursor.js","filename":"imports/test-utils/helpers/getFakeMongoCursor.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/test-utils/helpers/getFakeMongoCursor.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/test-utils/helpers/getFakeMongoCursor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/test-utils/helpers/getFakeMongoCursor.js"}},"code":"module.export({\n  default: () => getFakeMongoCursor\n});\n\nfunction getFakeMongoCursor(collectionName, results, options) {\n  const cursor = {\n    cmd: {\n      query: options && options.query || {}\n    },\n    ns: `meteor.${collectionName}`,\n    options: {\n      db: {\n        databaseName: \"meteor\"\n      }\n    }\n  };\n  const isTesting = typeof jest !== \"undefined\";\n\n  if (isTesting) {\n    cursor.clone = jest.fn().mockName(\"cursor.clone\").mockImplementation(() => cursor);\n    cursor.count = jest.fn().mockName(\"cursor.count\").mockReturnValue(results.length);\n    cursor.filter = jest.fn().mockName(\"cursor.filter\").mockReturnValue(cursor);\n    cursor.limit = jest.fn().mockName(\"cursor.limit\").mockReturnValue(cursor);\n    cursor.options.db.collection = jest.fn().mockName(\"cursor.options.db.collection\").mockReturnValue({\n      findOne: jest.fn().mockName(\"cursor.options.db.collection.findOne\").mockResolvedValue(null)\n    });\n    cursor.skip = jest.fn().mockName(\"cursor.skip\").mockReturnValue(cursor);\n    cursor.sort = jest.fn().mockName(\"cursor.sort\").mockReturnValue(cursor);\n    cursor.toArray = jest.fn().mockName(\"cursor.toArray\").mockResolvedValue(results);\n  } else {\n    cursor.clone = () => cursor;\n\n    cursor.count = () => results.length;\n\n    cursor.filter = () => cursor;\n\n    cursor.limit = () => cursor;\n\n    cursor.options.db.collection = () => ({\n      findOne: () => Promise.resolve(null)\n    });\n\n    cursor.skip = () => cursor;\n\n    cursor.sort = () => cursor;\n\n    cursor.toArray = () => Promise.resolve(results);\n  }\n\n  return cursor;\n}","map":{"version":3,"sources":["imports/test-utils/helpers/getFakeMongoCursor.js"],"names":["module","export","default","getFakeMongoCursor","collectionName","results","options","cursor","cmd","query","ns","db","databaseName","isTesting","jest","clone","fn","mockName","mockImplementation","count","mockReturnValue","length","filter","limit","collection","findOne","mockResolvedValue","skip","sort","toArray","Promise","resolve"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIC;AAAb,CAAd;;AAMe,SAASA,kBAAT,CAA4BC,cAA5B,EAA4CC,OAA5C,EAAqDC,OAArD,EAA8D;AAC3E,QAAMC,SAAS;AACbC,SAAK;AACHC,aAAQH,WAAWA,QAAQG,KAApB,IAA8B;AADlC,KADQ;AAIbC,QAAK,UAASN,cAAe,EAJhB;AAKbE,aAAS;AACPK,UAAI;AACFC,sBAAc;AADZ;AADG;AALI,GAAf;AAYA,QAAMC,YAAY,OAAOC,IAAP,KAAgB,WAAlC;;AAEA,MAAID,SAAJ,EAAe;AACbN,WAAOQ,KAAP,GAAeD,KAAKE,EAAL,GAAUC,QAAV,CAAmB,cAAnB,EAAmCC,kBAAnC,CAAsD,MAAMX,MAA5D,CAAf;AACAA,WAAOY,KAAP,GAAeL,KAAKE,EAAL,GAAUC,QAAV,CAAmB,cAAnB,EAAmCG,eAAnC,CAAmDf,QAAQgB,MAA3D,CAAf;AACAd,WAAOe,MAAP,GAAgBR,KAAKE,EAAL,GAAUC,QAAV,CAAmB,eAAnB,EAAoCG,eAApC,CAAoDb,MAApD,CAAhB;AACAA,WAAOgB,KAAP,GAAeT,KAAKE,EAAL,GAAUC,QAAV,CAAmB,cAAnB,EAAmCG,eAAnC,CAAmDb,MAAnD,CAAf;AACAA,WAAOD,OAAP,CAAeK,EAAf,CAAkBa,UAAlB,GAA+BV,KAAKE,EAAL,GAAUC,QAAV,CAAmB,8BAAnB,EAAmDG,eAAnD,CAAmE;AAChGK,eAASX,KAAKE,EAAL,GAAUC,QAAV,CAAmB,sCAAnB,EAA2DS,iBAA3D,CAA6E,IAA7E;AADuF,KAAnE,CAA/B;AAGAnB,WAAOoB,IAAP,GAAcb,KAAKE,EAAL,GAAUC,QAAV,CAAmB,aAAnB,EAAkCG,eAAlC,CAAkDb,MAAlD,CAAd;AACAA,WAAOqB,IAAP,GAAcd,KAAKE,EAAL,GAAUC,QAAV,CAAmB,aAAnB,EAAkCG,eAAlC,CAAkDb,MAAlD,CAAd;AACAA,WAAOsB,OAAP,GAAiBf,KAAKE,EAAL,GAAUC,QAAV,CAAmB,gBAAnB,EAAqCS,iBAArC,CAAuDrB,OAAvD,CAAjB;AACD,GAXD,MAWO;AACLE,WAAOQ,KAAP,GAAe,MAAMR,MAArB;;AACAA,WAAOY,KAAP,GAAe,MAAMd,QAAQgB,MAA7B;;AACAd,WAAOe,MAAP,GAAgB,MAAMf,MAAtB;;AACAA,WAAOgB,KAAP,GAAe,MAAMhB,MAArB;;AACAA,WAAOD,OAAP,CAAeK,EAAf,CAAkBa,UAAlB,GAA+B,OAAO;AACpCC,eAAS,MAAMK,QAAQC,OAAR,CAAgB,IAAhB;AADqB,KAAP,CAA/B;;AAGAxB,WAAOoB,IAAP,GAAc,MAAMpB,MAApB;;AACAA,WAAOqB,IAAP,GAAc,MAAMrB,MAApB;;AACAA,WAAOsB,OAAP,GAAiB,MAAMC,QAAQC,OAAR,CAAgB1B,OAAhB,CAAvB;AACD;;AAED,SAAOE,MAAP;AACD","sourcesContent":["/**\n * @name getFakeMongoCursor\n * @param {String} collectionName - name of the collection\n * @param {Any} results - results to be returned as part of the cursor\n * @return {Object} fake cursor\n */\nexport default function getFakeMongoCursor(collectionName, results, options) {\n  const cursor = {\n    cmd: {\n      query: (options && options.query) || {}\n    },\n    ns: `meteor.${collectionName}`,\n    options: {\n      db: {\n        databaseName: \"meteor\"\n      }\n    }\n  };\n\n  const isTesting = typeof jest !== \"undefined\";\n\n  if (isTesting) {\n    cursor.clone = jest.fn().mockName(\"cursor.clone\").mockImplementation(() => cursor);\n    cursor.count = jest.fn().mockName(\"cursor.count\").mockReturnValue(results.length);\n    cursor.filter = jest.fn().mockName(\"cursor.filter\").mockReturnValue(cursor);\n    cursor.limit = jest.fn().mockName(\"cursor.limit\").mockReturnValue(cursor);\n    cursor.options.db.collection = jest.fn().mockName(\"cursor.options.db.collection\").mockReturnValue({\n      findOne: jest.fn().mockName(\"cursor.options.db.collection.findOne\").mockResolvedValue(null)\n    });\n    cursor.skip = jest.fn().mockName(\"cursor.skip\").mockReturnValue(cursor);\n    cursor.sort = jest.fn().mockName(\"cursor.sort\").mockReturnValue(cursor);\n    cursor.toArray = jest.fn().mockName(\"cursor.toArray\").mockResolvedValue(results);\n  } else {\n    cursor.clone = () => cursor;\n    cursor.count = () => results.length;\n    cursor.filter = () => cursor;\n    cursor.limit = () => cursor;\n    cursor.options.db.collection = () => ({\n      findOne: () => Promise.resolve(null)\n    });\n    cursor.skip = () => cursor;\n    cursor.sort = () => cursor;\n    cursor.toArray = () => Promise.resolve(results);\n  }\n\n  return cursor;\n}\n"]},"sourceType":"script","hash":"65d549c5ff796ee0bd144779b82abb9c40cbd129"}
