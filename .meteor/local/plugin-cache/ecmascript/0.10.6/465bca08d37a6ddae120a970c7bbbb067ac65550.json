{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-stripe/client/checkout/stripe.js","filename":"imports/plugins/included/payments-stripe/client/checkout/stripe.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-stripe/client/checkout/stripe.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/included/payments-stripe/client/checkout/stripe.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-stripe/client/checkout/stripe.js"}},"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar AutoForm;\nmodule.watch(require(\"meteor/aldeed:autoform\"), {\n  AutoForm: function (v) {\n    AutoForm = v;\n  }\n}, 2);\nvar $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 3);\nvar getCardType;\nmodule.watch(require(\"../../../../../../client/modules/core/helpers/globals\"), {\n  getCardType: function (v) {\n    getCardType = v;\n  }\n}, 4);\nvar Router;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Router: function (v) {\n    Router = v;\n  }\n}, 5);\nvar Cart, Orders;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Cart: function (v) {\n    Cart = v;\n  },\n  Orders: function (v) {\n    Orders = v;\n  }\n}, 6);\nvar StripePayment;\nmodule.watch(require(\"../../lib/collections/schemas\"), {\n  StripePayment: function (v) {\n    StripePayment = v;\n  }\n}, 7);\nvar submitting = false; //\n// local helpers\n//\n\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleStripeSubmitError(error) {\n  // Match error on card number. Not submitted to stripe\n  if (error && error.reason && error.reason === \"Match failed\") {\n    var message = \"Your card number is invalid. Please check the number and try again\";\n    return paymentAlert(message);\n  } // this is a server message with a client-sanitized message\n\n\n  if (error && error.message) {\n    return paymentAlert(error.message);\n  }\n} // Validation helpers\n\n\nfunction luhnValid(x) {\n  return _toConsumableArray(x).reverse().reduce(function (sum, c, i) {\n    var d = parseInt(c, 10);\n\n    if (i % 2 !== 0) {\n      d *= 2;\n    }\n\n    if (d > 9) {\n      d -= 9;\n    }\n\n    return sum + d;\n  }, 0) % 10 === 0;\n}\n\nfunction validCardNumber(x) {\n  return /^[0-9]{13,16}$/.test(x) && luhnValid(x);\n}\n\nfunction validExpireMonth(x) {\n  return /^[0-9]{1,2}$/.test(x);\n}\n\nfunction validExpireYear(x) {\n  return /^[0-9]{4}$/.test(x);\n}\n\nfunction validCVV(x) {\n  return /^[0-9]{3,4}$/.test(x);\n} //\n// Template helpers\n//\n\n\nTemplate.stripePaymentForm.helpers({\n  StripePayment: function () {\n    return StripePayment;\n  }\n}); // This creates an autorun block that monitors the CompletedCartOrder subscription\n// and once an order for the cart we're checking out with is available,\n// We trigger a Router.go to the cart/completed page.\n\nTemplate.stripePaymentForm.onCreated(function () {\n  // we need to cache the current \"checkoutCart\" because a new cart is created during copyCartToOrder\n  var checkoutCart = Cart.findOne({\n    userId: Meteor.userId()\n  });\n  var orderSub = Meteor.subscribe(\"CompletedCartOrder\", Meteor.userId(), checkoutCart._id); // Watch the orders subscription, once the order is created redirect to cart/completed\n\n  this.autorun(function () {\n    if (orderSub.ready()) {\n      var order = Orders.findOne({\n        cartId: checkoutCart._id\n      });\n\n      if (order) {\n        Router.go(\"cart/completed\", {}, {\n          _id: checkoutCart._id\n        });\n      }\n    }\n  });\n}); //\n// autoform handling\n//\n\nAutoForm.addHooks(\"stripe-payment-form\", {\n  onSubmit: function (doc) {\n    submitting = true;\n    hidePaymentAlert();\n    var template = this.template;\n    var cart = Cart.findOne({\n      userId: Meteor.userId()\n    }); // validate card data\n    // also validated on server\n\n    if (!validCardNumber(doc.cardNumber)) {\n      submitting = false;\n      var error = {\n        message: \"Your card number is incorrect\"\n      };\n      handleStripeSubmitError(error);\n      uiEnd(template, \"Resubmit payment\");\n      return false;\n    }\n\n    if (!validExpireMonth(doc.expireMonth) || !validExpireYear(doc.expireYear)) {\n      submitting = false;\n      var _error = {\n        message: \"Your expiration date is incorrect\"\n      };\n      handleStripeSubmitError(_error);\n      uiEnd(template, \"Resubmit payment\");\n      return false;\n    }\n\n    if (!validCVV(doc.cvv)) {\n      submitting = false;\n      var _error2 = {\n        message: \"Your cvv is incorrect\"\n      };\n      handleStripeSubmitError(_error2);\n      uiEnd(template, \"Resubmit payment\");\n      return false;\n    }\n\n    var cardData = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expire_month: doc.expireMonth,\n      expire_year: doc.expireYear,\n      cvv2: doc.cvv,\n      type: getCardType(doc.cardNumber)\n    }; // Use apply instead of call here to prevent the flash of \"your cart is empty\"\n    // that happens when we wait for the cart subscription to update before forwarding\n\n    Meteor.apply(\"stripe/payment/createCharges\", [\"authorize\", cardData, cart._id], {\n      onResultReceived: function (error, result) {\n        submitting = false;\n\n        if (error) {\n          handleStripeSubmitError(error);\n          uiEnd(template, \"Resubmit payment\");\n        } else if (result.success) {\n          Router.go(\"cart/completed\", {}, {\n            _id: cart._id\n          });\n        } else {\n          handleStripeSubmitError(result.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});","map":{"version":3,"sources":["imports/plugins/included/payments-stripe/client/checkout/stripe.js"],"names":["Meteor","module","watch","require","v","Template","AutoForm","$","getCardType","Router","Cart","Orders","StripePayment","submitting","uiEnd","template","buttonText","removeAttr","text","addClass","paymentAlert","errorMessage","removeClass","hidePaymentAlert","handleStripeSubmitError","error","reason","message","luhnValid","x","reverse","reduce","sum","c","i","d","parseInt","validCardNumber","test","validExpireMonth","validExpireYear","validCVV","stripePaymentForm","helpers","onCreated","checkoutCart","findOne","userId","orderSub","subscribe","_id","autorun","ready","order","cartId","go","addHooks","onSubmit","doc","cart","cardNumber","expireMonth","expireYear","cvv","cardData","name","payerName","number","expire_month","expire_year","cvv2","type","apply","onResultReceived","result","success","beginSubmit","attr","endSubmit"],"mappings":"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","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { $ } from \"meteor/jquery\";\nimport { getCardType } from \"/client/modules/core/helpers/globals\";\nimport { Router } from \"/client/api\";\nimport { Cart, Orders } from \"/lib/collections\";\nimport { StripePayment } from \"../../lib/collections/schemas\";\n\nlet submitting = false;\n\n//\n// local helpers\n//\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleStripeSubmitError(error) {\n  // Match error on card number. Not submitted to stripe\n  if (error && error.reason && error.reason === \"Match failed\") {\n    const message = \"Your card number is invalid. Please check the number and try again\";\n    return paymentAlert(message);\n  }\n\n  // this is a server message with a client-sanitized message\n  if (error && error.message) {\n    return paymentAlert(error.message);\n  }\n}\n\n// Validation helpers\nfunction luhnValid(x) {\n  return [...x].reverse().reduce((sum, c, i) => {\n    let d = parseInt(c, 10);\n    if (i % 2 !== 0) { d *= 2; }\n    if (d > 9) { d -= 9; }\n    return sum + d;\n  }, 0) % 10 === 0;\n}\n\nfunction validCardNumber(x) {\n  return /^[0-9]{13,16}$/.test(x) && luhnValid(x);\n}\n\nfunction validExpireMonth(x) {\n  return /^[0-9]{1,2}$/.test(x);\n}\n\nfunction validExpireYear(x) {\n  return /^[0-9]{4}$/.test(x);\n}\n\nfunction validCVV(x) {\n  return /^[0-9]{3,4}$/.test(x);\n}\n\n//\n// Template helpers\n//\nTemplate.stripePaymentForm.helpers({\n  StripePayment() {\n    return StripePayment;\n  }\n});\n\n// This creates an autorun block that monitors the CompletedCartOrder subscription\n// and once an order for the cart we're checking out with is available,\n// We trigger a Router.go to the cart/completed page.\nTemplate.stripePaymentForm.onCreated(function () {\n  // we need to cache the current \"checkoutCart\" because a new cart is created during copyCartToOrder\n  const checkoutCart = Cart.findOne({ userId: Meteor.userId() });\n  const orderSub = Meteor.subscribe(\"CompletedCartOrder\", Meteor.userId(), checkoutCart._id);\n  // Watch the orders subscription, once the order is created redirect to cart/completed\n  this.autorun(() => {\n    if (orderSub.ready()) {\n      const order = Orders.findOne({ cartId: checkoutCart._id });\n      if (order) {\n        Router.go(\"cart/completed\", {}, { _id: checkoutCart._id });\n      }\n    }\n  });\n});\n\n//\n// autoform handling\n//\nAutoForm.addHooks(\"stripe-payment-form\", {\n  onSubmit(doc) {\n    submitting = true;\n    hidePaymentAlert();\n    const { template } = this;\n    const cart = Cart.findOne({ userId: Meteor.userId() });\n\n    // validate card data\n    // also validated on server\n    if (!validCardNumber(doc.cardNumber)) {\n      submitting = false;\n      const error = { message: \"Your card number is incorrect\" };\n      handleStripeSubmitError(error);\n      uiEnd(template, \"Resubmit payment\");\n      return false;\n    }\n\n    if (!validExpireMonth(doc.expireMonth) || !validExpireYear(doc.expireYear)) {\n      submitting = false;\n      const error = { message: \"Your expiration date is incorrect\" };\n      handleStripeSubmitError(error);\n      uiEnd(template, \"Resubmit payment\");\n      return false;\n    }\n\n    if (!validCVV(doc.cvv)) {\n      submitting = false;\n      const error = { message: \"Your cvv is incorrect\" };\n      handleStripeSubmitError(error);\n      uiEnd(template, \"Resubmit payment\");\n      return false;\n    }\n\n\n    const cardData = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expire_month: doc.expireMonth,\n      expire_year: doc.expireYear,\n      cvv2: doc.cvv,\n      type: getCardType(doc.cardNumber)\n    };\n\n    // Use apply instead of call here to prevent the flash of \"your cart is empty\"\n    // that happens when we wait for the cart subscription to update before forwarding\n    Meteor.apply(\"stripe/payment/createCharges\", [\"authorize\", cardData, cart._id], {\n      onResultReceived: (error, result) => {\n        submitting = false;\n        if (error) {\n          handleStripeSubmitError(error);\n          uiEnd(template, \"Resubmit payment\");\n        } else if (result.success) {\n          Router.go(\"cart/completed\", {}, {\n            _id: cart._id\n          });\n        } else {\n          handleStripeSubmitError(result.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit() {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit() {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n"]},"sourceType":"script","hash":"465bca08d37a6ddae120a970c7bbbb067ac65550"}
