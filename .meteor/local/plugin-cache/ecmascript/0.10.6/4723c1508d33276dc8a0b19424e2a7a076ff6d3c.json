{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/payments-authnet/client/checkout/authnet.js","filename":"imports/plugins/included/payments-authnet/client/checkout/authnet.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/payments-authnet/client/checkout/authnet.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/included/payments-authnet/client/checkout/authnet.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/payments-authnet/client/checkout/authnet.js"}},"code":"var Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar $;\nmodule.watch(require(\"meteor/jquery\"), {\n  $: function (v) {\n    $ = v;\n  }\n}, 1);\nvar Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar Reaction, Logger;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  Logger: function (v) {\n    Logger = v;\n  }\n}, 3);\nvar getCardType;\nmodule.watch(require(\"../../../../../../client/modules/core/helpers/globals\"), {\n  getCardType: function (v) {\n    getCardType = v;\n  }\n}, 4);\nvar Cart, Shops, Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Cart: function (v) {\n    Cart = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  },\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 5);\nvar AutoForm;\nmodule.watch(require(\"meteor/aldeed:autoform\"), {\n  AutoForm: function (v) {\n    AutoForm = v;\n  }\n}, 6);\nvar AuthNetPayment;\nmodule.watch(require(\"../../lib/collections/schemas\"), {\n  AuthNetPayment: function (v) {\n    AuthNetPayment = v;\n  }\n}, 7);\nvar AuthNet;\nmodule.watch(require(\"../api\"), {\n  AuthNet: function (v) {\n    AuthNet = v;\n  }\n}, 8);\nmodule.watch(require(\"./authnet.html\"));\n// used to track asynchronous submitting for UI changes\nvar submitting = false;\n\nfunction uiEnd(tpl, buttonText) {\n  tpl.$(\":input\").removeAttr(\"disabled\");\n  tpl.$(\"#btn-complete-order\").text(buttonText);\n  tpl.$(\"#btn-processing\").addClass(\"hidden\");\n  submitting = false;\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleAuthNetSubmitError(error) {\n  // TODO - this error handling needs to be reworked for the Authorize.net API\n  paymentAlert(error);\n  Logger.fatal(error);\n}\n\nTemplate.authnetPaymentForm.helpers({\n  AuthNetPayment: function () {\n    return AuthNetPayment;\n  }\n});\nAutoForm.addHooks(\"authnet-payment-form\", {\n  onSubmit: function (doc) {\n    // Process form (pre-validated by autoform)\n    submitting = true;\n    var tpl = this.template; // regEx in the schema ensures that there will be exactly two names with one space between\n\n    var payerNamePieces = doc.payerName.split(\" \");\n    var form = {\n      first_name: payerNamePieces[0],\n      last_name: payerNamePieces[1],\n      number: doc.cardNumber,\n      expire_date: doc.expireMonth.toString() + doc.expireYear.slice(-2),\n      cvv2: doc.cvv,\n      type: getCardType(doc.cardNumber)\n    }; // Reaction only stores type and 4 digits\n\n    var storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    hidePaymentAlert();\n    var cardInfo = {\n      cardNumber: doc.cardNumber,\n      expirationYear: doc.expireYear,\n      expirationMonth: doc.expireMonth,\n      cvv2: doc.cvv\n    };\n    var paymentInfo = {\n      total: Cart.findOne().getTotal(),\n      currency: Shops.findOne().currency\n    }; // Submit for processing\n\n    AuthNet.authorize(cardInfo, paymentInfo, function (error, transaction) {\n      if (error || !transaction) {\n        handleAuthNetSubmitError(error);\n        uiEnd(tpl, \"Resubmit payment\");\n      } else {\n        var normalizedMode = \"authorize\";\n        var normalizedStatus = \"failed\";\n        var transId = transaction.transactionId[0].toString();\n        Meteor.subscribe(\"Packages\", Reaction.getShopId());\n        var packageData = Packages.findOne({\n          name: \"reaction-auth-net\",\n          shopId: Reaction.getShopId()\n        });\n\n        if (transaction._original.responseCode[0] === \"1\") {\n          normalizedStatus = \"created\";\n        }\n\n        var paymentMethod = {\n          processor: \"AuthNet\",\n          paymentPackageId: packageData._id,\n          paymentSettingsKey: packageData.registry[0].settingsKey,\n          storedCard: storedCard,\n          method: \"credit\",\n          transactionId: transId,\n          amount: +paymentInfo.total,\n          status: normalizedStatus,\n          mode: normalizedMode,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          transactions: [transaction._original]\n        };\n        Meteor.call(\"cart/submitPayment\", paymentMethod);\n        uiEnd(tpl, \"Resubmit payment\");\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    // Hide processing UI here if form was not valid\n    if (!submitting) {\n      uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});","map":{"version":3,"sources":["imports/plugins/included/payments-authnet/client/checkout/authnet.js"],"names":["Meteor","module","watch","require","v","$","Template","Reaction","Logger","getCardType","Cart","Shops","Packages","AutoForm","AuthNetPayment","AuthNet","submitting","uiEnd","tpl","buttonText","removeAttr","text","addClass","paymentAlert","errorMessage","removeClass","hidePaymentAlert","handleAuthNetSubmitError","error","fatal","authnetPaymentForm","helpers","addHooks","onSubmit","doc","template","payerNamePieces","payerName","split","form","first_name","last_name","number","cardNumber","expire_date","expireMonth","toString","expireYear","slice","cvv2","cvv","type","storedCard","charAt","toUpperCase","cardInfo","expirationYear","expirationMonth","paymentInfo","total","findOne","getTotal","currency","authorize","transaction","normalizedMode","normalizedStatus","transId","transactionId","subscribe","getShopId","packageData","name","shopId","_original","responseCode","paymentMethod","processor","paymentPackageId","_id","paymentSettingsKey","registry","settingsKey","method","amount","status","mode","createdAt","Date","updatedAt","transactions","call","beginSubmit","attr","endSubmit"],"mappings":"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","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { $ } from \"meteor/jquery\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, Logger } from \"/client/api\";\nimport { getCardType } from \"/client/modules/core/helpers/globals\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { AuthNetPayment } from \"../../lib/collections/schemas\";\nimport { AuthNet } from \"../api\";\n\nimport \"./authnet.html\";\n\n// used to track asynchronous submitting for UI changes\nlet submitting = false;\n\nfunction uiEnd(tpl, buttonText) {\n  tpl.$(\":input\").removeAttr(\"disabled\");\n  tpl.$(\"#btn-complete-order\").text(buttonText);\n  tpl.$(\"#btn-processing\").addClass(\"hidden\");\n  submitting = false;\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleAuthNetSubmitError(error) {\n  // TODO - this error handling needs to be reworked for the Authorize.net API\n  paymentAlert(error);\n  Logger.fatal(error);\n}\n\nTemplate.authnetPaymentForm.helpers({\n  AuthNetPayment() {\n    return AuthNetPayment;\n  }\n});\n\nAutoForm.addHooks(\"authnet-payment-form\", {\n  onSubmit(doc) {\n    // Process form (pre-validated by autoform)\n    submitting = true;\n    const tpl = this.template;\n    // regEx in the schema ensures that there will be exactly two names with one space between\n    const payerNamePieces = doc.payerName.split(\" \");\n    const form = {\n      first_name: payerNamePieces[0],\n      last_name: payerNamePieces[1],\n      number: doc.cardNumber,\n      expire_date: doc.expireMonth.toString() + doc.expireYear.slice(-2),\n      cvv2: doc.cvv,\n      type: getCardType(doc.cardNumber)\n    };\n\n    // Reaction only stores type and 4 digits\n    const storedCard = `${form.type.charAt(0).toUpperCase() + form.type.slice(1)} ${doc.cardNumber.slice(-4)}`;\n\n    hidePaymentAlert();\n\n    const cardInfo = {\n      cardNumber: doc.cardNumber,\n      expirationYear: doc.expireYear,\n      expirationMonth: doc.expireMonth,\n      cvv2: doc.cvv\n    };\n    const paymentInfo = {\n      total: Cart.findOne().getTotal(),\n      currency: Shops.findOne().currency\n    };\n\n    // Submit for processing\n    AuthNet.authorize(cardInfo, paymentInfo, (error, transaction) => {\n      if (error || !transaction) {\n        handleAuthNetSubmitError(error);\n        uiEnd(tpl, \"Resubmit payment\");\n      } else {\n        const normalizedMode = \"authorize\";\n        let normalizedStatus = \"failed\";\n\n        const transId = transaction.transactionId[0].toString();\n        Meteor.subscribe(\"Packages\", Reaction.getShopId());\n        const packageData = Packages.findOne({\n          name: \"reaction-auth-net\",\n          shopId: Reaction.getShopId()\n        });\n\n        if (transaction._original.responseCode[0] === \"1\") {\n          normalizedStatus = \"created\";\n        }\n\n        const paymentMethod = {\n          processor: \"AuthNet\",\n          paymentPackageId: packageData._id,\n          paymentSettingsKey: packageData.registry[0].settingsKey,\n          storedCard,\n          method: \"credit\",\n          transactionId: transId,\n          amount: +paymentInfo.total,\n          status: normalizedStatus,\n          mode: normalizedMode,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          transactions: [\n            transaction._original\n          ]\n        };\n        Meteor.call(\"cart/submitPayment\", paymentMethod);\n        uiEnd(tpl, \"Resubmit payment\");\n      }\n    });\n\n    return false;\n  },\n\n  beginSubmit() {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n\n  endSubmit() {\n    // Hide processing UI here if form was not valid\n    if (!submitting) {\n      uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n"]},"sourceType":"script","hash":"4723c1508d33276dc8a0b19424e2a7a076ff6d3c"}
