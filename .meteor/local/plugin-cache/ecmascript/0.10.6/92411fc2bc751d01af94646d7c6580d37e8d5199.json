{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/accounts/client/helpers/accountsHelper.js","filename":"imports/plugins/core/accounts/client/helpers/accountsHelper.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/accounts/client/helpers/accountsHelper.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/plugins/core/accounts/client/helpers/accountsHelper.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/accounts/client/helpers/accountsHelper.js"}},"code":"var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    return sortUsersIntoGroups;\n  },\n  sortGroups: function () {\n    return sortGroups;\n  },\n  getInvitableGroups: function () {\n    return getInvitableGroups;\n  },\n  getDefaultUserInviteGroup: function () {\n    return getDefaultUserInviteGroup;\n  },\n  groupPermissions: function () {\n    return groupPermissions;\n  }\n});\n\nvar _uniq;\n\nmodule.watch(require(\"lodash/uniq\"), {\n  \"default\": function (v) {\n    _uniq = v;\n  }\n}, 0);\n\nvar _compact;\n\nmodule.watch(require(\"lodash/compact\"), {\n  \"default\": function (v) {\n    _compact = v;\n  }\n}, 1);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Reaction;\nmodule.watch(require(\"../../../../../../client/api\"), {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 3);\nvar Collections;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  \"*\": function (v) {\n    Collections = v;\n  }\n}, 4);\n\nfunction sortUsersIntoGroups(_ref) {\n  var accounts = _ref.accounts,\n      groups = _ref.groups;\n  var newGroups = groups.map(function (group) {\n    var matchingAccounts = accounts.filter(function (acc) {\n      return acc.groups && acc.groups.indexOf(group._id) > -1;\n    });\n    group.users = _compact(matchingAccounts);\n    return group;\n  });\n  return newGroups;\n}\n\nfunction sortGroups(groups) {\n  return groups.sort(function (prev, next) {\n    if (next.slug === \"owner\") {\n      return 1;\n    } // owner tops\n\n\n    return next.permissions.length - prev.permissions.length;\n  });\n}\n\nfunction getInvitableGroups(groups) {\n  return groups.filter(function (grp) {\n    return grp.slug !== \"owner\";\n  }).filter(function (grp) {\n    return Reaction.canInviteToGroup({\n      group: grp\n    });\n  });\n}\n\nfunction getDefaultUserInviteGroup(groups) {\n  var result;\n  var user = Collections.Accounts.findOne({\n    userId: Meteor.userId()\n  });\n  result = groups.find(function (grp) {\n    return user && user.groups.indexOf(grp._id) > -1;\n  });\n\n  if (result && result.slug === \"owner\") {\n    result = groups.find(function (grp) {\n      return grp.slug === \"shop manager\";\n    });\n  }\n\n  if (!result) {\n    result = groups.find(function (firstGroup) {\n      return firstGroup;\n    });\n  }\n\n  return result;\n}\n\nfunction groupPermissions(packages) {\n  return packages.reduce(function (registeredPackages, pkg) {\n    var permissions = [];\n\n    if (pkg.registry && pkg.enabled) {\n      for (var _iterator = pkg.registry, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var _registryItem = _ref2;\n\n        if (!_registryItem.route) {\n          continue;\n        } // Get all permissions, add them to an array\n\n\n        if (_registryItem.permissions) {\n          for (var _iterator2 = _registryItem.permissions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref3;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref3 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref3 = _i2.value;\n            }\n\n            var _permission = _ref3;\n\n            // check needed because of non-object perms in the permissions array (e.g \"admin\", \"owner\")\n            if ((0, _typeof2.default)(_permission) === \"object\") {\n              _permission.shopId = Reaction.getShopId();\n              permissions.push(_permission);\n            }\n          }\n        } // Also create an object map of those same permissions as above\n\n\n        var permissionMap = getPermissionMap(permissions);\n\n        if (!permissionMap[_registryItem.route]) {\n          permissions.push({\n            shopId: pkg.shopId,\n            permission: _registryItem.name || pkg.name + \"/\" + _registryItem.template,\n            icon: _registryItem.icon,\n            // TODO: Rethink naming convention for permissions list\n            label: _registryItem.label || _registryItem.route\n          });\n        }\n      } // TODO review this, hardcoded WIP \"reaction\"\n\n\n      var label = pkg.name.replace(\"reaction\", \"\").replace(/(-.)/g, function (x) {\n        return \" \" + x[1].toUpperCase();\n      });\n      var newObj = {\n        shopId: pkg.shopId,\n        icon: pkg.icon,\n        name: pkg.name,\n        label: label,\n        permissions: _uniq(permissions)\n      };\n      registeredPackages.push(newObj);\n    }\n\n    return registeredPackages;\n  }, []);\n}\n\nfunction getPermissionMap(permissions) {\n  var permissionMap = {};\n  permissions.forEach(function (_ref4) {\n    var label = _ref4.label,\n        permission = _ref4.permission;\n    permissionMap[permission] = label;\n  });\n  return permissionMap;\n}","map":{"version":3,"sources":["imports/plugins/core/accounts/client/helpers/accountsHelper.js"],"names":["module","export","sortUsersIntoGroups","sortGroups","getInvitableGroups","getDefaultUserInviteGroup","groupPermissions","_uniq","watch","require","v","_compact","Meteor","Reaction","Collections","accounts","groups","newGroups","map","group","matchingAccounts","filter","acc","indexOf","_id","users","sort","prev","next","slug","permissions","length","grp","canInviteToGroup","result","user","Accounts","findOne","userId","find","firstGroup","packages","reduce","registeredPackages","pkg","registry","enabled","registryItem","route","permission","shopId","getShopId","push","permissionMap","getPermissionMap","name","template","icon","label","replace","x","toUpperCase","newObj","forEach"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\n\n/**\n * @method sortUsersIntoGroups\n * @memberof Accounts\n * @summary helper - client puts each full user object into an array on the group they belong\n * @param {Array} accounts - list of user account objects\n * @param {Array} groups - list of permission groups\n * @return {Array} - array of groups, each having a `users` field\n */\nexport default function sortUsersIntoGroups({ accounts, groups }) {\n  const newGroups = groups.map((group) => {\n    const matchingAccounts = accounts.filter((acc) => acc.groups && acc.groups.indexOf(group._id) > -1);\n    group.users = _.compact(matchingAccounts);\n    return group;\n  });\n  return newGroups;\n}\n\n/**\n * @method sortGroups\n * @memberof Accounts\n * @summary Sort to display higher permission groups and \"owner\" at the top\n * @param  {Array} groups [description]\n * @return {Array}        [description]\n */\nexport function sortGroups(groups) {\n  return groups.sort((prev, next) => {\n    if (next.slug === \"owner\") { return 1; } // owner tops\n    return next.permissions.length - prev.permissions.length;\n  });\n}\n\n/**\n * @method getInvitableGroups\n * @memberof Accounts\n * @summary helper - client This generates a list of groups the user can invite to.\n * It filters out the owner group (because you cannot invite directly to an existing shop as owner)\n * It also filters out groups that the user does not have needed permissions to invite to.\n * All these are also checked by the Meteor method, so this is done to prevent trying to invite and getting error\n * @param {Array} groups - list of user account objects\n * @return {Array} - array of groups or empty object\n */\nexport function getInvitableGroups(groups) {\n  return groups\n    .filter((grp) => grp.slug !== \"owner\")\n    .filter((grp) => Reaction.canInviteToGroup({ group: grp }));\n}\n\n/**\n * @method getDefaultUserInviteGroup\n * @memberof Accounts\n * @summary user's default invite groups is the group they belong\n * if the user belongs to owner group, it defaults to shop manager (because you cannot invite directly\n * to an existing shop as owner). If no match still, use the first of the groups passed\n * (e.g in case of Marketplace owner accessing a merchant shop)\n * @param  {Array} groups [description]\n * @return {Object}        [description]\n */\nexport function getDefaultUserInviteGroup(groups) {\n  let result;\n  const user = Collections.Accounts.findOne({ userId: Meteor.userId() });\n  result = groups.find((grp) => user && user.groups.indexOf(grp._id) > -1);\n\n  if (result && result.slug === \"owner\") {\n    result = groups.find((grp) => grp.slug === \"shop manager\");\n  }\n\n  if (!result) {\n    result = groups.find((firstGroup) => firstGroup);\n  }\n\n  return result;\n}\n\n/**\n * @method groupPermissions\n * @memberof Accounts\n * @summary Return all permissions for packages\n * @todo Review hardcoded `reaction` in package names\n * @param  {Array} packages [description]\n * @return {Object}          [description]\n */\nexport function groupPermissions(packages) {\n  return packages.reduce((registeredPackages, pkg) => {\n    const permissions = [];\n    if (pkg.registry && pkg.enabled) {\n      for (const registryItem of pkg.registry) {\n        if (!registryItem.route) {\n          continue;\n        }\n\n        // Get all permissions, add them to an array\n        if (registryItem.permissions) {\n          for (const permission of registryItem.permissions) {\n            // check needed because of non-object perms in the permissions array (e.g \"admin\", \"owner\")\n            if (typeof permission === \"object\") {\n              permission.shopId = Reaction.getShopId();\n              permissions.push(permission);\n            }\n          }\n        }\n\n        // Also create an object map of those same permissions as above\n        const permissionMap = getPermissionMap(permissions);\n        if (!permissionMap[registryItem.route]) {\n          permissions.push({\n            shopId: pkg.shopId,\n            permission: registryItem.name || `${pkg.name}/${registryItem.template}`,\n            icon: registryItem.icon,\n            // TODO: Rethink naming convention for permissions list\n            label: registryItem.label || registryItem.route\n          });\n        }\n      }\n      // TODO review this, hardcoded WIP \"reaction\"\n      const label = pkg.name.replace(\"reaction\", \"\").replace(/(-.)/g, (x) => ` ${x[1].toUpperCase()}`);\n\n      const newObj = {\n        shopId: pkg.shopId,\n        icon: pkg.icon,\n        name: pkg.name,\n        label,\n        permissions: _.uniq(permissions)\n      };\n\n      registeredPackages.push(newObj);\n    }\n\n    return registeredPackages;\n  }, []);\n}\n\nfunction getPermissionMap(permissions) {\n  const permissionMap = {};\n  permissions.forEach(({ label, permission }) => {\n    permissionMap[permission] = label;\n  });\n  return permissionMap;\n}\n"]},"sourceType":"script","hash":"92411fc2bc751d01af94646d7c6580d37e8d5199"}
