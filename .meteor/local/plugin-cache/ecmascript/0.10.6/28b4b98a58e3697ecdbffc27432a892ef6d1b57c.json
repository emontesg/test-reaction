{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/api/router/metadata.js","filename":"lib/api/router/metadata.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"lib/api/router/metadata.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"lib/api/router/metadata.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/api/router/metadata.js"}},"code":"module.export({\n  MetaData: () => MetaData\n});\nlet ReactionProduct, getShopId, Reaction;\nmodule.watch(require(\"./..\"), {\n  ReactionProduct(v) {\n    ReactionProduct = v;\n  },\n\n  getShopId(v) {\n    getShopId = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 0);\nlet Shops, SellerShops;\nmodule.watch(require(\"../../collections\"), {\n  Shops(v) {\n    Shops = v;\n  },\n\n  SellerShops(v) {\n    SellerShops = v;\n  }\n\n}, 1);\nconst MetaData = {\n  init(context) {\n    const {\n      params\n    } = context;\n    const product = ReactionProduct.selectedProduct();\n    const shop = Shops.findOne(getShopId());\n    const meta = [];\n    let title = \"\";\n    let description = \"\";\n    let keywords = []; // case helper\n\n    const titleCase = param => param.charAt(0).toUpperCase() + param.substring(1); // populate meta from shop\n\n\n    if (shop) {\n      // shop defaults\n      if (shop.description) {\n        description = shop.description.substring(0, 160);\n      }\n\n      if (shop.keywords) {\n        keywords.push(shop.keywords.toString());\n      } // set title defaults\n\n\n      MetaData.name = shop.name; // product title default\n\n      if (params && params.handle) {\n        if (product && product.title) {\n          title = titleCase(product.title);\n        } else {\n          title = titleCase(params.handle);\n        } // tag slugs\n\n      } else if (params && params.slug) {\n        title = titleCase(params.slug); // fallback to route name\n      } else if (context.route && context.route.name) {\n        const {\n          route\n        } = context;\n        const routeName = route.name; // default index to Shop Name\n\n        if (routeName === \"index\") {\n          title = titleCase(shop.name); // seller shop homepage\n        } else if (routeName === \"shop\") {\n          const currentShop = SellerShops.findOne(params.shopId);\n\n          if (currentShop) {\n            title = titleCase(currentShop.name);\n          } else {\n            title = titleCase(routeName);\n          } // check for meta in package route\n\n        } else if (route.options.meta && route.options.meta.title) {\n          title = titleCase(route.options.meta.title);\n        } else {\n          // default routes to route's name\n          title = titleCase(routeName);\n        }\n      } //  product details\n\n\n      if (params && params.handle && product) {\n        // discard defaults\n        Reaction.DOM.removeDocHeadAddedTags();\n\n        if (product.description) {\n          description = product.description.substring(0, 160);\n        }\n\n        if (product && product.metafields) {\n          // Clear shop keywords, to make keywords specific to this product page.\n          keywords = [];\n\n          for (const key of product.metafields) {\n            keywords.push(key.value);\n          }\n        }\n      }\n    } // end shop\n\n\n    Reaction.DOM.setMetaTag({\n      name: \"description\",\n      content: description\n    });\n    Reaction.DOM.setMetaTag({\n      name: \"keywords\",\n      content: keywords ? keywords.toString() : \"\"\n    }); // set site defaults\n\n    document.title = title;\n    MetaData.title = title;\n    MetaData.meta = meta;\n    return meta;\n  } // end update\n\n\n};","map":{"version":3,"sources":["lib/api/router/metadata.js"],"names":["module","export","MetaData","ReactionProduct","getShopId","Reaction","watch","require","v","Shops","SellerShops","init","context","params","product","selectedProduct","shop","findOne","meta","title","description","keywords","titleCase","param","charAt","toUpperCase","substring","push","toString","name","handle","slug","route","routeName","currentShop","shopId","options","DOM","removeDocHeadAddedTags","metafields","key","value","setMetaTag","content","document"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,YAAS,MAAIA;AAAd,CAAd;AAAuC,IAAIC,eAAJ,EAAoBC,SAApB,EAA8BC,QAA9B;AAAuCL,OAAOM,KAAP,CAAaC,QAAQ,MAAR,CAAb,EAA6B;AAACJ,kBAAgBK,CAAhB,EAAkB;AAACL,sBAAgBK,CAAhB;AAAkB,GAAtC;;AAAuCJ,YAAUI,CAAV,EAAY;AAACJ,gBAAUI,CAAV;AAAY,GAAhE;;AAAiEH,WAASG,CAAT,EAAW;AAACH,eAASG,CAAT;AAAW;;AAAxF,CAA7B,EAAuH,CAAvH;AAA0H,IAAIC,KAAJ,EAAUC,WAAV;AAAsBV,OAAOM,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ,GAAlB;;AAAmBE,cAAYF,CAAZ,EAAc;AAACE,kBAAYF,CAAZ;AAAc;;AAAhD,CAA1C,EAA4F,CAA5F;AAWvN,MAAMN,WAAW;AACtBS,OAAKC,OAAL,EAAc;AACZ,UAAM;AAAEC;AAAF,QAAaD,OAAnB;AACA,UAAME,UAAUX,gBAAgBY,eAAhB,EAAhB;AACA,UAAMC,OAAOP,MAAMQ,OAAN,CAAcb,WAAd,CAAb;AACA,UAAMc,OAAO,EAAb;AACA,QAAIC,QAAQ,EAAZ;AACA,QAAIC,cAAc,EAAlB;AACA,QAAIC,WAAW,EAAf,CAPY,CASZ;;AACA,UAAMC,YAAaC,KAAD,IAAWA,MAAMC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCF,MAAMG,SAAN,CAAgB,CAAhB,CAA7D,CAVY,CAYZ;;;AACA,QAAIV,IAAJ,EAAU;AACR;AACA,UAAIA,KAAKI,WAAT,EAAsB;AACpBA,sBAAcJ,KAAKI,WAAL,CAAiBM,SAAjB,CAA2B,CAA3B,EAA8B,GAA9B,CAAd;AACD;;AAED,UAAIV,KAAKK,QAAT,EAAmB;AACjBA,iBAASM,IAAT,CAAcX,KAAKK,QAAL,CAAcO,QAAd,EAAd;AACD,OARO,CAUR;;;AACA1B,eAAS2B,IAAT,GAAgBb,KAAKa,IAArB,CAXQ,CAaR;;AACA,UAAIhB,UAAUA,OAAOiB,MAArB,EAA6B;AAC3B,YAAIhB,WAAWA,QAAQK,KAAvB,EAA8B;AAC5BA,kBAAQG,UAAUR,QAAQK,KAAlB,CAAR;AACD,SAFD,MAEO;AACLA,kBAAQG,UAAUT,OAAOiB,MAAjB,CAAR;AACD,SAL0B,CAO7B;;AACC,OARD,MAQO,IAAIjB,UAAUA,OAAOkB,IAArB,EAA2B;AAChCZ,gBAAQG,UAAUT,OAAOkB,IAAjB,CAAR,CADgC,CAGlC;AACC,OAJM,MAIA,IAAInB,QAAQoB,KAAR,IAAiBpB,QAAQoB,KAAR,CAAcH,IAAnC,EAAyC;AAC9C,cAAM;AAAEG;AAAF,YAAYpB,OAAlB;AACA,cAAMqB,YAAYD,MAAMH,IAAxB,CAF8C,CAI9C;;AACA,YAAII,cAAc,OAAlB,EAA2B;AACzBd,kBAAQG,UAAUN,KAAKa,IAAf,CAAR,CADyB,CAG3B;AACC,SAJD,MAIO,IAAII,cAAc,MAAlB,EAA0B;AAC/B,gBAAMC,cAAcxB,YAAYO,OAAZ,CAAoBJ,OAAOsB,MAA3B,CAApB;;AACA,cAAID,WAAJ,EAAiB;AACff,oBAAQG,UAAUY,YAAYL,IAAtB,CAAR;AACD,WAFD,MAEO;AACLV,oBAAQG,UAAUW,SAAV,CAAR;AACD,WAN8B,CAOjC;;AACC,SARM,MAQA,IAAID,MAAMI,OAAN,CAAclB,IAAd,IAAsBc,MAAMI,OAAN,CAAclB,IAAd,CAAmBC,KAA7C,EAAoD;AACzDA,kBAAQG,UAAUU,MAAMI,OAAN,CAAclB,IAAd,CAAmBC,KAA7B,CAAR;AACD,SAFM,MAEA;AACL;AACAA,kBAAQG,UAAUW,SAAV,CAAR;AACD;AACF,OAjDO,CAmDR;;;AACA,UAAIpB,UAAUA,OAAOiB,MAAjB,IAA2BhB,OAA/B,EAAwC;AACtC;AACAT,iBAASgC,GAAT,CAAaC,sBAAb;;AAEA,YAAIxB,QAAQM,WAAZ,EAAyB;AACvBA,wBAAcN,QAAQM,WAAR,CAAoBM,SAApB,CAA8B,CAA9B,EAAiC,GAAjC,CAAd;AACD;;AAED,YAAIZ,WAAWA,QAAQyB,UAAvB,EAAmC;AACjC;AACAlB,qBAAW,EAAX;;AACA,eAAK,MAAMmB,GAAX,IAAkB1B,QAAQyB,UAA1B,EAAsC;AACpClB,qBAASM,IAAT,CAAca,IAAIC,KAAlB;AACD;AACF;AACF;AACF,KAjFW,CAiFV;;;AAEFpC,aAASgC,GAAT,CAAaK,UAAb,CAAwB;AACtBb,YAAM,aADgB;AAEtBc,eAASvB;AAFa,KAAxB;AAKAf,aAASgC,GAAT,CAAaK,UAAb,CAAwB;AACtBb,YAAM,UADgB;AAEtBc,eAAStB,WAAWA,SAASO,QAAT,EAAX,GAAiC;AAFpB,KAAxB,EAxFY,CA6FZ;;AACAgB,aAASzB,KAAT,GAAiBA,KAAjB;AACAjB,aAASiB,KAAT,GAAiBA,KAAjB;AACAjB,aAASgB,IAAT,GAAgBA,IAAhB;AAEA,WAAOA,IAAP;AACD,GApGqB,CAoGpB;;;AApGoB,CAAjB","sourcesContent":["import { ReactionProduct, getShopId, Reaction } from \"/lib/api\";\nimport { Shops, SellerShops } from \"/lib/collections\";\n\n/**\n * @method MetaData\n * @memberof Router\n * @summary Populates title and meta tags for routes\n * accepts Router.current() as context\n * @param context\n * @example MetaData.init(Router.current());\n */\nexport const MetaData = {\n  init(context) {\n    const { params } = context;\n    const product = ReactionProduct.selectedProduct();\n    const shop = Shops.findOne(getShopId());\n    const meta = [];\n    let title = \"\";\n    let description = \"\";\n    let keywords = [];\n\n    // case helper\n    const titleCase = (param) => param.charAt(0).toUpperCase() + param.substring(1);\n\n    // populate meta from shop\n    if (shop) {\n      // shop defaults\n      if (shop.description) {\n        description = shop.description.substring(0, 160);\n      }\n\n      if (shop.keywords) {\n        keywords.push(shop.keywords.toString());\n      }\n\n      // set title defaults\n      MetaData.name = shop.name;\n\n      // product title default\n      if (params && params.handle) {\n        if (product && product.title) {\n          title = titleCase(product.title);\n        } else {\n          title = titleCase(params.handle);\n        }\n\n      // tag slugs\n      } else if (params && params.slug) {\n        title = titleCase(params.slug);\n\n      // fallback to route name\n      } else if (context.route && context.route.name) {\n        const { route } = context;\n        const routeName = route.name;\n\n        // default index to Shop Name\n        if (routeName === \"index\") {\n          title = titleCase(shop.name);\n\n        // seller shop homepage\n        } else if (routeName === \"shop\") {\n          const currentShop = SellerShops.findOne(params.shopId);\n          if (currentShop) {\n            title = titleCase(currentShop.name);\n          } else {\n            title = titleCase(routeName);\n          }\n        // check for meta in package route\n        } else if (route.options.meta && route.options.meta.title) {\n          title = titleCase(route.options.meta.title);\n        } else {\n          // default routes to route's name\n          title = titleCase(routeName);\n        }\n      }\n\n      //  product details\n      if (params && params.handle && product) {\n        // discard defaults\n        Reaction.DOM.removeDocHeadAddedTags();\n\n        if (product.description) {\n          description = product.description.substring(0, 160);\n        }\n\n        if (product && product.metafields) {\n          // Clear shop keywords, to make keywords specific to this product page.\n          keywords = [];\n          for (const key of product.metafields) {\n            keywords.push(key.value);\n          }\n        }\n      }\n    } // end shop\n\n    Reaction.DOM.setMetaTag({\n      name: \"description\",\n      content: description\n    });\n\n    Reaction.DOM.setMetaTag({\n      name: \"keywords\",\n      content: keywords ? keywords.toString() : \"\"\n    });\n\n    // set site defaults\n    document.title = title;\n    MetaData.title = title;\n    MetaData.meta = meta;\n\n    return meta;\n  } // end update\n};\n"]},"sourceType":"script","hash":"28b4b98a58e3697ecdbffc27432a892ef6d1b57c"}
