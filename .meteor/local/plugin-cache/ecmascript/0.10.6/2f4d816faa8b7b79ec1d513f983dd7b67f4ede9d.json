{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"lib/api/products.js","filename":"lib/api/products.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"parserOpts":{"sourceType":"module","sourceFileName":"lib/api/products.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"lib/api/products.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/api/products.js"}},"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nmodule.export({\n  applyProductRevision: function () {\n    return applyProductRevision;\n  },\n  variantIsSelected: function () {\n    return variantIsSelected;\n  },\n  resubscribeAfterCloning: function () {\n    return resubscribeAfterCloning;\n  }\n});\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 0);\nvar i18next;\nmodule.watch(require(\"i18next\"), {\n  \"default\": function (v) {\n    i18next = v;\n  }\n}, 1);\nvar orderBy;\nmodule.watch(require(\"lodash/orderBy\"), {\n  \"default\": function (v) {\n    orderBy = v;\n  }\n}, 2);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 3);\nvar ReactiveDict;\nmodule.watch(require(\"meteor/reactive-dict\"), {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 4);\nvar ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 5);\nvar Router;\nmodule.watch(require(\"../../imports/plugins/core/router/lib\"), {\n  Router: function (v) {\n    Router = v;\n  }\n}, 6);\nvar getCurrentTag, getShopName;\nmodule.watch(require(\"./index\"), {\n  getCurrentTag: function (v) {\n    getCurrentTag = v;\n  },\n  getShopName: function (v) {\n    getShopName = v;\n  }\n}, 7);\nvar Products, Revisions;\nmodule.watch(require(\"../collections\"), {\n  Products: function (v) {\n    Products = v;\n  },\n  Revisions: function (v) {\n    Revisions = v;\n  }\n}, 8);\nvar Catalog;\nmodule.watch(require(\"./catalog\"), {\n  \"default\": function (v) {\n    Catalog = v;\n  }\n}, 9);\nvar MetaData;\nmodule.watch(require(\"./router/metadata\"), {\n  MetaData: function (v) {\n    MetaData = v;\n  }\n}, 10);\n\n/**\n * @file ReactionProduct is only intended to be used on the client, but it's placed\n * in common code because it is imported by the Products schema.\n * ReactionProduct is a\n * {@link https://github.com/meteor/meteor/blob/master/packages/reactive-dict/README.md| ReactiveDict},\n * a general-purpose reactive datatype to use with\n * {@link https://github.com/meteor/meteor/tree/master/packages/tracker|Meteor Tracker}.\n * ReactionProduct allows the current product to be reactive, without Session.\n * @namespace ReactionProduct\n */\n\n/**\n * @name ReactionProduct\n * @method\n * @memberof ReactionProduct\n * @summary Reactive current product dependency, ensuring reactive products, without session\n * ReactionProduct is a `ReactiveDict`, a general-purpose reactive datatype to use with Meteor Tracker.\n * @see {@link https://github.com/meteor/meteor/blob/master/packages/reactive-dict/README.md|Meteor ReactiveDict}\n * @see {@link https://github.com/meteor/meteor/tree/master/packages/tracker|Meteor Tracker}\n * @todo this is a messy class implementation, normalize it.\n */\nvar ReactionProduct = new ReactiveDict(\"currentProduct\");\n/**\n * @name applyProductRevision\n * @method\n * @memberof ReactionProduct\n * @summary Apply revision to product\n * @example applyProductRevision(product)\n * @param  {Object} product product\n * @return {Object|null} product or null, if no product found\n */\n\nfunction applyProductRevision(product) {\n  if (product) {\n    if (product.__revisions && product.__revisions.length) {\n      var cleanProduct = Object.assign({}, product);\n      delete cleanProduct.__revisions;\n      var revisedProduct; // check for product revisions and set that as the current product\n\n      for (var _iterator = product.__revisions, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray2) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _revision = _ref;\n\n        if (!_revision.parentDocument) {\n          revisedProduct = product.__revisions[0].documentData;\n        }\n      } // if there are no revision to product (image and/or tag only) just set the original product as the product\n\n\n      if (!revisedProduct) {\n        revisedProduct = cleanProduct;\n      }\n\n      return Object.assign({}, revisedProduct, {\n        __published: cleanProduct,\n        __draft: product.__revisions[0]\n      });\n    }\n\n    return product;\n  }\n\n  return null;\n}\n\nfunction variantIsSelected(variantId) {\n  var current = Object.assign({}, ReactionProduct.selectedVariant());\n\n  if (current.ancestors && (variantId === current._id || current.ancestors.indexOf(variantId) >= 0)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @name sortProducts\n * @method\n * @memberof ReactionProduct\n * @summary Sort products by tag, creation date by tag and creation date\n * @param  {Array} products Array of products\n * @param  {String} tag     Tag\n * @return {Array}         Array of products\n */\nReactionProduct.sortProducts = function (products, tag) {\n  var sorted = [];\n  sorted = orderBy(products, // Sort by postion for tag\n  function (product) {\n    return product.positions && product.positions[tag] && product.positions[tag].position;\n  }, // Then by creation date for tag\n  function (product) {\n    return product.positions && product.positions[tag] && product.positions[tag].createdAt;\n  }, // Finally sort by creation date\n  \"createdAt\");\n  return sorted;\n};\n/**\n * @name setCurrentVariant\n * @method\n * @memberof ReactionProduct\n * @param {String} variantId - set current variantId\n * @return {undefined}\n */\n\n\nReactionProduct.setCurrentVariant = function (variantId) {\n  if (variantId === null) {\n    ReactionProduct.set(\"variantId\", null);\n    ReactionProduct.set(\"variantId\", ReactionProduct.selectedVariantId());\n  }\n\n  if (!variantId) {\n    return;\n  }\n\n  var currentId = ReactionProduct.selectedVariantId();\n\n  if (currentId === variantId) {\n    return;\n  }\n\n  ReactionProduct.set(\"variantId\", variantId);\n};\n/**\n * @name setProduct\n * @todo this will be deprecated in favor of template.instance data.\n * @method\n * @memberof ReactionProduct\n * @summary method to set default/parameterized product variant\n * @param {String} currentProductId - set current productId\n * @param {String} currentVariantId - set current variantId\n * @return {Object} product object\n */\n\n\nReactionProduct.setProduct = function (currentProductId, currentVariantId) {\n  var productId = currentProductId || Router.getParam(\"handle\");\n  var variantId = currentVariantId || Router.getParam(\"variantId\"); // Find the current product\n\n  var product = Products.findOne({\n    $or: [{\n      handle: productId.toLowerCase()\n    }, // Try the handle (slug) lowercased\n    {\n      handle: productId\n    }, // Otherwise try the handle (slug) untouched\n    {\n      _id: productId\n    }, // try the product id\n    {\n      changedHandleWas: productId // Last attempt: the permalink may have changed.\n\n    }]\n  });\n  productId = product && product._id;\n\n  if (product) {\n    if (Router.getParam(\"handle\") !== product.handle && product.changedHandleWas && product.changedHandleWas !== product.handle) {\n      var newUrl = Router.pathFor(\"product\", {\n        hash: {\n          handle: product.handle\n        }\n      });\n      Router.go(newUrl);\n    } // Check if selected variant id really belongs to the product.\n    // This has been working previously rather accidentally, because variantIsSelected(variantId) below returned always false,\n    // because the Product subscription ensured, that the correct Product is in Mini-Mongo. This is not guaranteed, though.\n    // If Products collection would have other products, it would fail.\n\n\n    var isVariantValidChild = true;\n    var variants = Products.find({\n      ancestors: {\n        $in: [productId]\n      }\n    }).map(function (variant) {\n      return variant._id;\n    });\n\n    if (variantId && !variants.includes(variantId)) {\n      isVariantValidChild = false;\n    } // set the default variant\n    // as the default.\n\n\n    if (!isVariantValidChild || !variantId || !variantIsSelected(variantId)) {\n      var topVariants = ReactionProduct.getTopVariants(productId);\n      variantId = Array.isArray(topVariants) && topVariants.length && topVariants[0]._id || null;\n    } // set in our reactive dictionary\n\n\n    ReactionProduct.set(\"productId\", productId);\n    ReactionProduct.set(\"variantId\", variantId);\n  } // Update the meta data when a product is selected\n\n\n  MetaData.init(Router.current());\n  return applyProductRevision(product);\n};\n/**\n * @name selectedProductId\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested product\n * @return {String} currently selected product id\n */\n\n\nReactionProduct.selectedProductId = function () {\n  return ReactionProduct.get(\"productId\");\n};\n/**\n * @name selectedVariantId\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested variant\n * @return {String} currently selected variant id\n */\n\n\nReactionProduct.selectedVariantId = function () {\n  var id = ReactionProduct.get(\"variantId\");\n\n  if (id !== null) {\n    return id;\n  }\n\n  var variants = ReactionProduct.getVariants();\n\n  if (!(variants.length > 0)) {\n    return [];\n  }\n\n  id = variants[0]._id; // ReactionProduct.set(\"variantId\", id);\n\n  return id;\n};\n/**\n * @name selectedVariant\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested variant object\n * @return {Object} currently selected variant object\n */\n\n\nReactionProduct.selectedVariant = function () {\n  var id = ReactionProduct.selectedVariantId();\n\n  if (typeof id === \"string\") {\n    return applyProductRevision(Products.findOne(id));\n  }\n\n  return [];\n};\n/**\n * @name selectedTopVariant\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active TOP variant object\n * @return {Object} currently selected TOP variant object\n */\n\n\nReactionProduct.selectedTopVariant = function () {\n  var topVariants = ReactionProduct.getTopVariants();\n  var topVariant = topVariants.find(function (variant) {\n    return variantIsSelected(variant._id);\n  });\n  return topVariant;\n};\n/**\n * @name selectedProduct\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested product object\n * @return {Object|undefined} currently selected product cursor\n */\n\n\nReactionProduct.selectedProduct = function () {\n  var id = ReactionProduct.selectedProductId();\n\n  if (typeof id === \"string\") {\n    return applyProductRevision(Products.findOne(id));\n  }\n\n  return undefined;\n};\n/**\n * @name checkChildVariants\n * @method\n * @memberof ReactionProduct\n * @summary return number of child variants for a parent\n * @param {String} parentVariantId - parentVariantId\n * @return {Number} count of childVariants for this parentVariantId\n */\n\n\nReactionProduct.checkChildVariants = function (parentVariantId) {\n  var childVariants = ReactionProduct.getVariants(parentVariantId);\n  return childVariants.length ? childVariants.length : 0;\n};\n/**\n * @name checkInventoryVariants\n * @method\n * @memberof ReactionProduct\n * @summary return number of inventory variants for a parent\n * @param {String} parentVariantId - parentVariantId\n * @todo could be combined with checkChildVariants in one method\n * @todo inventoryVariants are deprecated. remove this.\n * @return {Number} count of inventory variants for this parentVariantId\n */\n\n\nReactionProduct.checkInventoryVariants = function (parentVariantId) {\n  var inventoryVariants = ReactionProduct.getVariants(parentVariantId, \"inventory\");\n  return inventoryVariants.length ? inventoryVariants.length : 0;\n};\n/**\n * @name getVariantPriceRange\n * @method\n * @memberof ReactionProduct\n * @summary get price range of a variant if it has child options.\n * if no child options, return main price value\n * @todo remove string return and replace with object\n * @param {String} [id] - current variant _Id\n * @return {String} formatted price or price range\n */\n\n\nReactionProduct.getVariantPriceRange = function (id) {\n  return Catalog.getVariantPriceRange(id || ReactionProduct.selectedVariant()._id);\n};\n/**\n * @name getProductPriceRange\n * @method\n * @memberof ReactionProduct\n * @summary get price range of a product\n * if no only one price available, return it\n * otherwise return a string range\n * @todo remove string return and replace with object\n * @param {String} [id] - current product _id\n * @return {String} formatted price or price range\n */\n\n\nReactionProduct.getProductPriceRange = function (id) {\n  return Catalog.getProductPriceRange(id || ReactionProduct.selectedProductId());\n};\n/**\n * @name getVariantQuantity\n * @method\n * @memberof ReactionProduct\n * @summary middleware method which calls the same named common method.\n * @todo maybe we could remove this after 1.3. But for now I like how it looks.\n * @param {Object} doc - variant object\n * @return {Number} summary of options quantity or top-level variant\n * inventoryQuantity\n */\n\n\nReactionProduct.getVariantQuantity = function (doc) {\n  return Catalog.getVariantQuantity(doc);\n};\n/**\n * @method getProduct\n * @method\n * @memberof ReactionProduct\n * @summary Get product object. Could be useful for products and for top level variants\n * @param {String} [id] - product _id\n * @return {Object} Product data\n */\n\n\nReactionProduct.getProduct = function (id) {\n  return Catalog.getProduct(id);\n};\n/**\n * @method getVariants\n * @method\n * @memberof ReactionProduct\n * @summary Get all parent variants. Could be useful for products and for top level variants\n * @param {String} [id] - product _id\n * @param {String} [type] - type of variant\n * @return {Array} Parent variants or empty array\n */\n\n\nReactionProduct.getVariants = function (id, type) {\n  return Catalog.getVariants(id || ReactionProduct.selectedProductId(), type);\n};\n/**\n * @method getSiblings\n * @method\n * @memberof ReactionProduct\n * @summary Get all sibling variants - variants with the same ancestor tree\n * could be useful for child variants relationships with top-level variants\n * @param {Object} [variant] - product / variant object\n * @param {String} [type] - type of variant\n * @param {Boolean} [includeSelf] - include current variant in results\n * @return {Array} Sibling variants or empty array\n */\n\n\nReactionProduct.getSiblings = function (variant, type) {\n  return Catalog.getSiblings(variant, type);\n};\n/**\n * @method getVariantParent\n * @method\n * @memberof ReactionProduct\n * @summary Get direct parent variant - could be useful for lower level variants to get direct parents\n * @param {Object} [variant] - product / variant object\n * @return {Array} Parent variant or empty\n */\n\n\nReactionProduct.getVariantParent = function (variant) {\n  return Catalog.getVariantParent(variant);\n};\n/**\n * @method getTopVariants\n * @summary Get only product top level variants\n * @param {String} [id] - product _id\n * @return {Array} Product top level variants or empty array\n */\n\n\nReactionProduct.getTopVariants = function (id) {\n  return Catalog.getTopVariants(id || ReactionProduct.selectedProductId());\n};\n/**\n * @name getTag\n * @method\n * @memberof ReactionProduct\n * @summary This needed for naming `positions` object. Method could return `tag`\n * route name or shop name as default name.\n * @return {String} tag name or shop name\n */\n\n\nReactionProduct.getTag = function () {\n  return getCurrentTag() || getShopName().toLowerCase();\n};\n/**\n * @name getProductsByTag\n * @method\n * @memberof ReactionProduct\n * @summary method to return tag specific product\n * @param {String} tag - tag string\n * @return {Object} - return products collection cursor filtered by tag\n */\n\n\nReactionProduct.getProductsByTag = function (tag) {\n  var hashtags;\n  var newRelatedTags;\n  var relatedTag;\n  var relatedTags;\n  var selector = {};\n\n  if (tag) {\n    hashtags = [];\n    relatedTags = [tag];\n\n    while (relatedTags.length) {\n      newRelatedTags = [];\n\n      for (var _iterator2 = relatedTags, _isArray3 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray3 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        if (_isArray3) {\n          if (_i2 >= _iterator2.length) break;\n          relatedTag = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          relatedTag = _i2.value;\n        }\n\n        if (hashtags.indexOf(relatedTag._id) === -1) {\n          hashtags.push(relatedTag._id);\n        }\n      }\n\n      relatedTags = newRelatedTags;\n    }\n\n    selector.hashtags = {\n      $in: hashtags\n    };\n  }\n\n  var cursor = Products.find(selector);\n  return cursor;\n};\n/**\n * @name publishProduct\n * @method\n * @memberof ReactionProduct\n * @summary product publishing and alert\n * @todo review process for publishing arrays of product\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\n\n\nReactionProduct.publishProduct = function (productOrArray) {\n  var products = !_isArray(productOrArray) ? [productOrArray] : productOrArray;\n  /* eslint no-loop-func: 1 */\n\n  var _loop = function (product) {\n    Meteor.call(\"products/publishProduct\", product._id, function (error, result) {\n      // eslint-disable-line no-loop-func\n      if (error) {\n        Alerts.add(error, \"danger\", {\n          placement: \"productGridItem\",\n          id: product._id\n        });\n        throw new Meteor.Error(\"error-occurred\", error);\n      }\n\n      var alertSettings = {\n        placement: \"productGridItem\",\n        id: product._id,\n        autoHide: true,\n        dismissable: false\n      };\n\n      if (result) {\n        Alerts.add(i18next.t(\"productDetail.publishProductVisible\", {\n          product: product.title\n        }), \"success\", alertSettings);\n      } else {\n        Alerts.add(i18next.t(\"productDetail.publishProductHidden\", {\n          product: product.title\n        }), \"warning\", alertSettings);\n      }\n    });\n  };\n\n  for (var _iterator3 = products, _isArray4 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray4 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray4) {\n      if (_i3 >= _iterator3.length) break;\n      _ref2 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref2 = _i3.value;\n    }\n\n    var product = _ref2;\n\n    _loop(product);\n  }\n};\n/**\n * @name toggleVisibility\n * @method\n * @memberof ReactionProduct\n * @summary product publishing and alert\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\n\n\nReactionProduct.toggleVisibility = function (productOrArray) {\n  var products = !_isArray(productOrArray) ? [productOrArray] : productOrArray;\n\n  var _loop2 = function (product) {\n    Meteor.call(\"products/toggleVisibility\", product._id, function (error, result) {\n      // eslint-disable-line no-loop-func\n      if (error) {\n        Alerts.add(error, \"danger\", {\n          placement: \"productGridItem\",\n          id: product._id\n        });\n        throw new Meteor.Error(\"error-occurred\", error);\n      }\n\n      var alertSettings = {\n        placement: \"productGridItem\",\n        id: product._id,\n        autoHide: true,\n        dismissable: false\n      };\n\n      if (result) {\n        Alerts.add(i18next.t(\"productDetail.publishProductVisible\", {\n          product: product.title\n        }), \"success\", alertSettings);\n      } else {\n        Alerts.add(i18next.t(\"productDetail.publishProductHidden\", {\n          product: product.title\n        }), \"warning\", alertSettings);\n      }\n    });\n  };\n\n  for (var _iterator4 = products, _isArray5 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray5 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray5) {\n      if (_i4 >= _iterator4.length) break;\n      _ref3 = _iterator4[_i4++];\n    } else {\n      _i4 = _iterator4.next();\n      if (_i4.done) break;\n      _ref3 = _i4.value;\n    }\n\n    var product = _ref3;\n\n    _loop2(product);\n  }\n};\n/**\n * A reactive data source that tells any dependents that they should resubscribe their\n * active publication.\n * @type {ReactiveVar}\n */\n\n\nvar resubscribeAfterCloning = new ReactiveVar(false);\n\n/**\n * @name cloneProduct\n * @method\n * @memberof ReactionProduct\n * @summary product cloning and alert\n * @param {Object|Array} productOrArray - if this method calls from productGrid\n * it receives and array with product _id or _ids, but if it calls from PDP, when\n * it receive a `Object` with _id. It needed to determine the source of call.\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.cloneProduct = function (productOrArray) {\n  var products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  return Meteor.call(\"products/cloneProduct\", products, function (error, result) {\n    if (error) {\n      Alerts.add(error, \"danger\", {\n        placement: \"productGridItem\"\n      });\n      throw new Meteor.Error(\"error-occurred\", error);\n    }\n\n    if (result) {\n      if (products.length === 1) {\n        Alerts.add(i18next.t(\"productDetail.clonedAlert\", {\n          product: products[0].title\n        }), \"success\", {\n          placement: \"productGridItem\",\n          id: products[0]._id,\n          autoHide: true,\n          dismissable: false\n        });\n      } else {\n        Alerts.add(i18next.t(\"productDetail.clonedAlert_plural\", {\n          product: i18next.t(\"productDetail.theSelectedProducts\"),\n          count: 0\n        }), \"success\", {\n          placement: \"productGridItem\",\n          id: products[0]._id,\n          autoHide: true,\n          dismissable: false\n        });\n      }\n    } // this statement allow us to redirect to a new clone PDP if clone action\n    // was fired within PDP, not within productGrid.\n\n\n    if (!Array.isArray(productOrArray)) {\n      Router.go(\"product\", {\n        handle: result[0]\n      });\n    } else {\n      resubscribeAfterCloning.set(true);\n    }\n  });\n};\n/**\n * @name archiveProduct\n * @method\n * @memberof ReactionProduct\n * @summary confirm to archive product\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\n\n\nReactionProduct.archiveProduct = function (productOrArray) {\n  var products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  var productIds = products.map(function (product) {\n    return typeof product === \"string\" ? product : product._id;\n  });\n  var confirmTitle; // we have to use so difficult logic with `length` check because of some\n  // languages, which have different phrase forms for each of cases.\n  // we are using i18next `plural` functionality here.\n  // @see: http://i18next.com/translate/pluralSimple\n\n  if (products.length === 1) {\n    confirmTitle = i18next.t(\"productDetailEdit.archiveThisProduct\");\n  } else {\n    confirmTitle = i18next.t(\"productDetailEdit.archiveSelectedProducts\");\n  }\n\n  Alerts.alert({\n    title: confirmTitle,\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonText: \"Archive\"\n  }, function (isConfirm) {\n    if (isConfirm) {\n      Meteor.call(\"products/archiveProduct\", productIds, function (error, result) {\n        var title;\n\n        if (error) {\n          title = products.length === 1 ? products[0].title || i18next.t(\"productDetail.archiveErrorTheProduct\") : i18next.t(\"productDetail.theSelectedProducts\");\n          Alerts.toast(i18next.t(\"productDetail.productArchiveError\", {\n            product: title\n          }), \"error\");\n          throw new Meteor.Error(\"error-occurred\" + title, error);\n        }\n\n        if (result) {\n          Router.go(\"/\");\n\n          if (products.length === 1) {\n            title = products[0].title || i18next.t(\"productDetail.theProduct\");\n            Alerts.toast(i18next.t(\"productDetail.archivedAlert\", {\n              product: title\n            }), \"info\");\n          } else {\n            title = i18next.t(\"productDetail.theSelectedProducts\");\n            Alerts.toast(i18next.t(\"productDetail.archivedAlert_plural\", {\n              product: title,\n              count: 0\n            }), \"info\");\n          }\n        }\n      });\n    }\n  });\n};\n/**\n * @name isAncestorDeleted\n * @method\n * @memberof ReactionProduct\n * @summary Verify there are no deleted ancestors\n * Variants cannot be restored if their parent product / variant is deleted\n * @param  {Object} product     product Object\n * @param  {Boolean} includeSelf include product\n * @return {Boolean}             True or false\n */\n\n\nReactionProduct.isAncestorDeleted = function (product, includeSelf) {\n  var productIds = _toConsumableArray(product.ancestors);\n\n  if (includeSelf) {\n    productIds.push(product._id);\n  } // Verify there are no deleted ancestors,\n  // Variants cannot be restored if their parent product / variant is deleted\n\n\n  var archivedCount = Revisions.find({\n    \"documentId\": {\n      $in: productIds\n    },\n    \"documentData.isDeleted\": true,\n    \"workflow.status\": {\n      $nin: [\"revision/published\"]\n    }\n  }).count();\n\n  if (archivedCount > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nmodule.exportDefault(ReactionProduct);","map":{"version":3,"sources":["lib/api/products.js"],"names":["module","export","applyProductRevision","variantIsSelected","resubscribeAfterCloning","_isArray","watch","require","v","i18next","orderBy","Meteor","ReactiveDict","ReactiveVar","Router","getCurrentTag","getShopName","Products","Revisions","Catalog","MetaData","ReactionProduct","product","__revisions","length","cleanProduct","Object","assign","revisedProduct","revision","parentDocument","documentData","__published","__draft","variantId","current","selectedVariant","ancestors","_id","indexOf","sortProducts","products","tag","sorted","positions","position","createdAt","setCurrentVariant","set","selectedVariantId","currentId","setProduct","currentProductId","currentVariantId","productId","getParam","findOne","$or","handle","toLowerCase","changedHandleWas","newUrl","pathFor","hash","go","isVariantValidChild","variants","find","$in","map","variant","includes","topVariants","getTopVariants","Array","isArray","init","selectedProductId","get","id","getVariants","selectedTopVariant","topVariant","selectedProduct","undefined","checkChildVariants","parentVariantId","childVariants","checkInventoryVariants","inventoryVariants","getVariantPriceRange","getProductPriceRange","getVariantQuantity","doc","getProduct","type","getSiblings","getVariantParent","getTag","getProductsByTag","hashtags","newRelatedTags","relatedTag","relatedTags","selector","push","cursor","publishProduct","productOrArray","call","error","result","Alerts","add","placement","Error","alertSettings","autoHide","dismissable","t","title","toggleVisibility","cloneProduct","count","archiveProduct","productIds","confirmTitle","alert","showCancelButton","confirmButtonText","isConfirm","toast","isAncestorDeleted","includeSelf","archivedCount","$nin","exportDefault"],"mappings":"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","sourcesContent":["import i18next from \"i18next\";\nimport orderBy from \"lodash/orderBy\";\nimport _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { getCurrentTag, getShopName } from \"/lib/api\";\nimport { Products, Revisions } from \"/lib/collections\";\nimport Catalog from \"./catalog\";\nimport { MetaData } from \"/lib/api/router/metadata\";\n\n/**\n * @file ReactionProduct is only intended to be used on the client, but it's placed\n * in common code because it is imported by the Products schema.\n * ReactionProduct is a\n * {@link https://github.com/meteor/meteor/blob/master/packages/reactive-dict/README.md| ReactiveDict},\n * a general-purpose reactive datatype to use with\n * {@link https://github.com/meteor/meteor/tree/master/packages/tracker|Meteor Tracker}.\n * ReactionProduct allows the current product to be reactive, without Session.\n * @namespace ReactionProduct\n */\n\n/**\n * @name ReactionProduct\n * @method\n * @memberof ReactionProduct\n * @summary Reactive current product dependency, ensuring reactive products, without session\n * ReactionProduct is a `ReactiveDict`, a general-purpose reactive datatype to use with Meteor Tracker.\n * @see {@link https://github.com/meteor/meteor/blob/master/packages/reactive-dict/README.md|Meteor ReactiveDict}\n * @see {@link https://github.com/meteor/meteor/tree/master/packages/tracker|Meteor Tracker}\n * @todo this is a messy class implementation, normalize it.\n */\nconst ReactionProduct = new ReactiveDict(\"currentProduct\");\n\n/**\n * @name applyProductRevision\n * @method\n * @memberof ReactionProduct\n * @summary Apply revision to product\n * @example applyProductRevision(product)\n * @param  {Object} product product\n * @return {Object|null} product or null, if no product found\n */\nexport function applyProductRevision(product) {\n  if (product) {\n    if (product.__revisions && product.__revisions.length) {\n      const cleanProduct = Object.assign({}, product);\n      delete cleanProduct.__revisions;\n      let revisedProduct;\n      // check for product revisions and set that as the current product\n      for (const revision of product.__revisions) {\n        if (!revision.parentDocument) {\n          revisedProduct = product.__revisions[0].documentData;\n        }\n      }\n\n      // if there are no revision to product (image and/or tag only) just set the original product as the product\n      if (!revisedProduct) {\n        revisedProduct = cleanProduct;\n      }\n\n      return Object.assign(\n        {},\n        revisedProduct,\n        {\n          __published: cleanProduct,\n          __draft: product.__revisions[0]\n        }\n      );\n    }\n    return product;\n  }\n\n  return null;\n}\n\n/**\n * @name variantIsSelected\n * @method\n * @memberof ReactionProduct\n * @param  {String} variantId ID of variant to check\n * @return {Boolean}          True if variant is selected\n */\nexport function variantIsSelected(variantId) {\n  const current = Object.assign({}, ReactionProduct.selectedVariant());\n  if (current.ancestors && (variantId === current._id || current.ancestors.indexOf(variantId) >= 0)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @name sortProducts\n * @method\n * @memberof ReactionProduct\n * @summary Sort products by tag, creation date by tag and creation date\n * @param  {Array} products Array of products\n * @param  {String} tag     Tag\n * @return {Array}         Array of products\n */\nReactionProduct.sortProducts = (products, tag) => {\n  let sorted = [];\n\n  sorted = orderBy(\n    products,\n    // Sort by postion for tag\n    (product) => product.positions && product.positions[tag] && product.positions[tag].position,\n    // Then by creation date for tag\n    (product) => product.positions && product.positions[tag] && product.positions[tag].createdAt,\n    // Finally sort by creation date\n    \"createdAt\"\n  );\n\n  return sorted;\n};\n\n/**\n * @name setCurrentVariant\n * @method\n * @memberof ReactionProduct\n * @param {String} variantId - set current variantId\n * @return {undefined}\n */\nReactionProduct.setCurrentVariant = (variantId) => {\n  if (variantId === null) {\n    ReactionProduct.set(\"variantId\", null);\n    ReactionProduct.set(\"variantId\", ReactionProduct.selectedVariantId());\n  }\n  if (!variantId) {\n    return;\n  }\n  const currentId = ReactionProduct.selectedVariantId();\n  if (currentId === variantId) {\n    return;\n  }\n  ReactionProduct.set(\"variantId\", variantId);\n};\n\n/**\n * @name setProduct\n * @todo this will be deprecated in favor of template.instance data.\n * @method\n * @memberof ReactionProduct\n * @summary method to set default/parameterized product variant\n * @param {String} currentProductId - set current productId\n * @param {String} currentVariantId - set current variantId\n * @return {Object} product object\n */\nReactionProduct.setProduct = (currentProductId, currentVariantId) => {\n  let productId = currentProductId || Router.getParam(\"handle\");\n  let variantId = currentVariantId || Router.getParam(\"variantId\");\n\n  // Find the current product\n  const product = Products.findOne({\n    $or: [\n      { handle: productId.toLowerCase() }, // Try the handle (slug) lowercased\n      { handle: productId }, // Otherwise try the handle (slug) untouched\n      { _id: productId }, // try the product id\n      { changedHandleWas: productId } // Last attempt: the permalink may have changed.\n    ]\n  });\n\n  productId = product && product._id;\n\n  if (product) {\n    if (Router.getParam(\"handle\") !== product.handle && product.changedHandleWas && product.changedHandleWas !== product.handle) {\n      const newUrl = Router.pathFor(\"product\", {\n        hash: {\n          handle: product.handle\n        }\n      });\n      Router.go(newUrl);\n    }\n\n    // Check if selected variant id really belongs to the product.\n    // This has been working previously rather accidentally, because variantIsSelected(variantId) below returned always false,\n    // because the Product subscription ensured, that the correct Product is in Mini-Mongo. This is not guaranteed, though.\n    // If Products collection would have other products, it would fail.\n    let isVariantValidChild = true;\n    const variants = Products.find({\n      ancestors: { $in: [productId] }\n    }).map((variant) => variant._id);\n    if (variantId && !variants.includes(variantId)) {\n      isVariantValidChild = false;\n    }\n\n    // set the default variant\n    // as the default.\n    if (!isVariantValidChild || !variantId || !variantIsSelected(variantId)) {\n      const topVariants = ReactionProduct.getTopVariants(productId);\n      variantId = (Array.isArray(topVariants) && topVariants.length && topVariants[0]._id) || null;\n    }\n    // set in our reactive dictionary\n    ReactionProduct.set(\"productId\", productId);\n    ReactionProduct.set(\"variantId\", variantId);\n  }\n\n  // Update the meta data when a product is selected\n  MetaData.init(Router.current());\n\n  return applyProductRevision(product);\n};\n\n/**\n * @name selectedProductId\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested product\n * @return {String} currently selected product id\n */\nReactionProduct.selectedProductId = () => ReactionProduct.get(\"productId\");\n\n/**\n * @name selectedVariantId\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested variant\n * @return {String} currently selected variant id\n */\nReactionProduct.selectedVariantId = () => {\n  let id = ReactionProduct.get(\"variantId\");\n  if (id !== null) {\n    return id;\n  }\n  const variants = ReactionProduct.getVariants();\n\n  if (!(variants.length > 0)) {\n    return [];\n  }\n\n  id = variants[0]._id;\n  // ReactionProduct.set(\"variantId\", id);\n  return id;\n};\n\n/**\n * @name selectedVariant\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested variant object\n * @return {Object} currently selected variant object\n */\nReactionProduct.selectedVariant = function () {\n  const id = ReactionProduct.selectedVariantId();\n  if (typeof id === \"string\") {\n    return applyProductRevision(Products.findOne(id));\n  }\n  return [];\n};\n\n/**\n * @name selectedTopVariant\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active TOP variant object\n * @return {Object} currently selected TOP variant object\n */\nReactionProduct.selectedTopVariant = function () {\n  const topVariants = ReactionProduct.getTopVariants();\n  const topVariant = topVariants.find((variant) => variantIsSelected(variant._id));\n\n  return topVariant;\n};\n\n/**\n * @name selectedProduct\n * @method\n * @memberof ReactionProduct\n * @summary get the currently active/requested product object\n * @return {Object|undefined} currently selected product cursor\n */\nReactionProduct.selectedProduct = function () {\n  const id = ReactionProduct.selectedProductId();\n  if (typeof id === \"string\") {\n    return applyProductRevision(Products.findOne(id));\n  }\n  return undefined;\n};\n\n/**\n * @name checkChildVariants\n * @method\n * @memberof ReactionProduct\n * @summary return number of child variants for a parent\n * @param {String} parentVariantId - parentVariantId\n * @return {Number} count of childVariants for this parentVariantId\n */\nReactionProduct.checkChildVariants = function (parentVariantId) {\n  const childVariants = ReactionProduct.getVariants(parentVariantId);\n  return childVariants.length ? childVariants.length : 0;\n};\n\n/**\n * @name checkInventoryVariants\n * @method\n * @memberof ReactionProduct\n * @summary return number of inventory variants for a parent\n * @param {String} parentVariantId - parentVariantId\n * @todo could be combined with checkChildVariants in one method\n * @todo inventoryVariants are deprecated. remove this.\n * @return {Number} count of inventory variants for this parentVariantId\n */\nReactionProduct.checkInventoryVariants = function (parentVariantId) {\n  const inventoryVariants = ReactionProduct.getVariants(parentVariantId, \"inventory\");\n  return inventoryVariants.length ? inventoryVariants.length : 0;\n};\n\n/**\n * @name getVariantPriceRange\n * @method\n * @memberof ReactionProduct\n * @summary get price range of a variant if it has child options.\n * if no child options, return main price value\n * @todo remove string return and replace with object\n * @param {String} [id] - current variant _Id\n * @return {String} formatted price or price range\n */\n\nReactionProduct.getVariantPriceRange = (id) => Catalog\n  .getVariantPriceRange(id || ReactionProduct.selectedVariant()._id);\n\n/**\n * @name getProductPriceRange\n * @method\n * @memberof ReactionProduct\n * @summary get price range of a product\n * if no only one price available, return it\n * otherwise return a string range\n * @todo remove string return and replace with object\n * @param {String} [id] - current product _id\n * @return {String} formatted price or price range\n */\n\nReactionProduct.getProductPriceRange = (id) => Catalog\n  .getProductPriceRange(id || ReactionProduct.selectedProductId());\n\n/**\n * @name getVariantQuantity\n * @method\n * @memberof ReactionProduct\n * @summary middleware method which calls the same named common method.\n * @todo maybe we could remove this after 1.3. But for now I like how it looks.\n * @param {Object} doc - variant object\n * @return {Number} summary of options quantity or top-level variant\n * inventoryQuantity\n */\nReactionProduct.getVariantQuantity = (doc) => Catalog.getVariantQuantity(doc);\n\n/**\n * @method getProduct\n * @method\n * @memberof ReactionProduct\n * @summary Get product object. Could be useful for products and for top level variants\n * @param {String} [id] - product _id\n * @return {Object} Product data\n */\nReactionProduct.getProduct = (id) => Catalog.getProduct(id);\n\n/**\n * @method getVariants\n * @method\n * @memberof ReactionProduct\n * @summary Get all parent variants. Could be useful for products and for top level variants\n * @param {String} [id] - product _id\n * @param {String} [type] - type of variant\n * @return {Array} Parent variants or empty array\n */\nReactionProduct.getVariants = (id, type) => Catalog.getVariants(id || ReactionProduct.selectedProductId(), type);\n\n/**\n * @method getSiblings\n * @method\n * @memberof ReactionProduct\n * @summary Get all sibling variants - variants with the same ancestor tree\n * could be useful for child variants relationships with top-level variants\n * @param {Object} [variant] - product / variant object\n * @param {String} [type] - type of variant\n * @param {Boolean} [includeSelf] - include current variant in results\n * @return {Array} Sibling variants or empty array\n */\nReactionProduct.getSiblings = (variant, type) => Catalog.getSiblings(variant, type);\n\n/**\n * @method getVariantParent\n * @method\n * @memberof ReactionProduct\n * @summary Get direct parent variant - could be useful for lower level variants to get direct parents\n * @param {Object} [variant] - product / variant object\n * @return {Array} Parent variant or empty\n */\nReactionProduct.getVariantParent = (variant) => Catalog.getVariantParent(variant);\n\n/**\n * @method getTopVariants\n * @summary Get only product top level variants\n * @param {String} [id] - product _id\n * @return {Array} Product top level variants or empty array\n */\nReactionProduct.getTopVariants = (id) => Catalog.getTopVariants(id || ReactionProduct.selectedProductId());\n\n/**\n * @name getTag\n * @method\n * @memberof ReactionProduct\n * @summary This needed for naming `positions` object. Method could return `tag`\n * route name or shop name as default name.\n * @return {String} tag name or shop name\n */\nReactionProduct.getTag = () => getCurrentTag() || getShopName().toLowerCase();\n\n/**\n * @name getProductsByTag\n * @method\n * @memberof ReactionProduct\n * @summary method to return tag specific product\n * @param {String} tag - tag string\n * @return {Object} - return products collection cursor filtered by tag\n */\nReactionProduct.getProductsByTag = function (tag) {\n  let hashtags;\n  let newRelatedTags;\n  let relatedTag;\n  let relatedTags;\n  const selector = {};\n\n  if (tag) {\n    hashtags = [];\n    relatedTags = [tag];\n    while (relatedTags.length) {\n      newRelatedTags = [];\n      for (relatedTag of relatedTags) {\n        if (hashtags.indexOf(relatedTag._id) === -1) {\n          hashtags.push(relatedTag._id);\n        }\n      }\n      relatedTags = newRelatedTags;\n    }\n    selector.hashtags = {\n      $in: hashtags\n    };\n  }\n  const cursor = Products.find(selector);\n  return cursor;\n};\n\n/**\n * @name publishProduct\n * @method\n * @memberof ReactionProduct\n * @summary product publishing and alert\n * @todo review process for publishing arrays of product\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.publishProduct = function (productOrArray) {\n  const products = !_.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  /* eslint no-loop-func: 1 */\n  for (const product of products) {\n    Meteor.call(\"products/publishProduct\", product._id, (error, result) => { // eslint-disable-line no-loop-func\n      if (error) {\n        Alerts.add(error, \"danger\", {\n          placement: \"productGridItem\",\n          id: product._id\n        });\n        throw new Meteor.Error(\"error-occurred\", error);\n      }\n      const alertSettings = {\n        placement: \"productGridItem\",\n        id: product._id,\n        autoHide: true,\n        dismissable: false\n      };\n      if (result) {\n        Alerts.add(i18next.t(\"productDetail.publishProductVisible\", { product: product.title }), \"success\", alertSettings);\n      } else {\n        Alerts.add(i18next.t(\"productDetail.publishProductHidden\", { product: product.title }), \"warning\", alertSettings);\n      }\n    });\n  }\n};\n\n/**\n * @name toggleVisibility\n * @method\n * @memberof ReactionProduct\n * @summary product publishing and alert\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.toggleVisibility = function (productOrArray) {\n  const products = !_.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  for (const product of products) {\n    Meteor.call(\"products/toggleVisibility\", product._id, (error, result) => { // eslint-disable-line no-loop-func\n      if (error) {\n        Alerts.add(error, \"danger\", {\n          placement: \"productGridItem\",\n          id: product._id\n        });\n        throw new Meteor.Error(\"error-occurred\", error);\n      }\n      const alertSettings = {\n        placement: \"productGridItem\",\n        id: product._id,\n        autoHide: true,\n        dismissable: false\n      };\n      if (result) {\n        Alerts.add(i18next.t(\"productDetail.publishProductVisible\", { product: product.title }), \"success\", alertSettings);\n      } else {\n        Alerts.add(i18next.t(\"productDetail.publishProductHidden\", { product: product.title }), \"warning\", alertSettings);\n      }\n    });\n  }\n};\n\n/**\n * A reactive data source that tells any dependents that they should resubscribe their\n * active publication.\n * @type {ReactiveVar}\n */\nexport const resubscribeAfterCloning = new ReactiveVar(false);\n\n\n/**\n * @name cloneProduct\n * @method\n * @memberof ReactionProduct\n * @summary product cloning and alert\n * @param {Object|Array} productOrArray - if this method calls from productGrid\n * it receives and array with product _id or _ids, but if it calls from PDP, when\n * it receive a `Object` with _id. It needed to determine the source of call.\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.cloneProduct = function (productOrArray) {\n  const products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;\n\n  return Meteor.call(\"products/cloneProduct\", products, (error, result) => {\n    if (error) {\n      Alerts.add(error, \"danger\", { placement: \"productGridItem\" });\n      throw new Meteor.Error(\"error-occurred\", error);\n    }\n    if (result) {\n      if (products.length === 1) {\n        Alerts.add(i18next.t(\"productDetail.clonedAlert\", { product: products[0].title }), \"success\", {\n          placement: \"productGridItem\",\n          id: products[0]._id,\n          autoHide: true,\n          dismissable: false\n        });\n      } else {\n        Alerts.add(\n          i18next.t(\"productDetail.clonedAlert_plural\", { product: i18next.t(\"productDetail.theSelectedProducts\"), count: 0 }),\n          \"success\", {\n            placement: \"productGridItem\",\n            id: products[0]._id,\n            autoHide: true,\n            dismissable: false\n          }\n        );\n      }\n    }\n    // this statement allow us to redirect to a new clone PDP if clone action\n    // was fired within PDP, not within productGrid.\n    if (!Array.isArray(productOrArray)) {\n      Router.go(\"product\", {\n        handle: result[0]\n      });\n    } else {\n      resubscribeAfterCloning.set(true);\n    }\n  });\n};\n\n/**\n * @name archiveProduct\n * @method\n * @memberof ReactionProduct\n * @summary confirm to archive product\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.archiveProduct = function (productOrArray) {\n  const products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  const productIds = products.map((product) => (typeof product === \"string\" ? product : product._id));\n  let confirmTitle;\n  // we have to use so difficult logic with `length` check because of some\n  // languages, which have different phrase forms for each of cases.\n  // we are using i18next `plural` functionality here.\n  // @see: http://i18next.com/translate/pluralSimple\n  if (products.length === 1) {\n    confirmTitle = i18next.t(\"productDetailEdit.archiveThisProduct\");\n  } else {\n    confirmTitle = i18next.t(\"productDetailEdit.archiveSelectedProducts\");\n  }\n\n  Alerts.alert({\n    title: confirmTitle,\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonText: \"Archive\"\n  }, (isConfirm) => {\n    if (isConfirm) {\n      Meteor.call(\"products/archiveProduct\", productIds, (error, result) => {\n        let title;\n        if (error) {\n          title = products.length === 1 ?\n            products[0].title || i18next.t(\"productDetail.archiveErrorTheProduct\") :\n            i18next.t(\"productDetail.theSelectedProducts\");\n          Alerts.toast(i18next.t(\"productDetail.productArchiveError\", { product: title }), \"error\");\n          throw new Meteor.Error(`error-occurred${title}`, error);\n        }\n        if (result) {\n          Router.go(\"/\");\n          if (products.length === 1) {\n            title = products[0].title || i18next.t(\"productDetail.theProduct\");\n            Alerts.toast(i18next.t(\"productDetail.archivedAlert\", { product: title }), \"info\");\n          } else {\n            title = i18next.t(\"productDetail.theSelectedProducts\");\n            Alerts.toast(i18next.t(\"productDetail.archivedAlert_plural\", { product: title, count: 0 }), \"info\");\n          }\n        }\n      });\n    }\n  });\n};\n\n/**\n * @name isAncestorDeleted\n * @method\n * @memberof ReactionProduct\n * @summary Verify there are no deleted ancestors\n * Variants cannot be restored if their parent product / variant is deleted\n * @param  {Object} product     product Object\n * @param  {Boolean} includeSelf include product\n * @return {Boolean}             True or false\n */\nReactionProduct.isAncestorDeleted = function (product, includeSelf) {\n  const productIds = [\n    ...product.ancestors // Avoid mutations\n  ];\n\n  if (includeSelf) {\n    productIds.push(product._id);\n  }\n\n  // Verify there are no deleted ancestors,\n  // Variants cannot be restored if their parent product / variant is deleted\n  const archivedCount = Revisions.find({\n    \"documentId\": { $in: productIds },\n    \"documentData.isDeleted\": true,\n    \"workflow.status\": {\n      $nin: [\n        \"revision/published\"\n      ]\n    }\n  }).count();\n\n  if (archivedCount > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default ReactionProduct;\n"]},"sourceType":"script","hash":"2f4d816faa8b7b79ec1d513f983dd7b67f4ede9d"}
