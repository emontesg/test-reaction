{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js","filename":"imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js"}},"code":"let React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet registerComponent;\nmodule.watch(require(\"../../../core/components/lib\"), {\n  registerComponent(v) {\n    registerComponent = v;\n  }\n\n}, 2);\nlet ReactionProduct;\nmodule.watch(require(\"../../../../../lib/api\"), {\n  ReactionProduct(v) {\n    ReactionProduct = v;\n  }\n\n}, 3);\nlet GridItemNotice;\nmodule.watch(require(\"../components/gridItemNotice\"), {\n  default(v) {\n    GridItemNotice = v;\n  }\n\n}, 4);\n\nconst wrapComponent = Comp => {\n  var _class, _temp;\n\n  return _temp = _class = class GridItemNoticeContainer extends Component {\n    constructor() {\n      super();\n\n      this.isLowQuantity = () => {\n        const topVariants = ReactionProduct.getTopVariants(this.props.product._id);\n\n        for (const topVariant of topVariants) {\n          const inventoryThreshold = topVariant.lowInventoryWarningThreshold;\n          const inventoryQuantity = ReactionProduct.getVariantQuantity(topVariant);\n\n          if (inventoryQuantity !== 0 && inventoryThreshold >= inventoryQuantity) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      this.isSoldOut = () => {\n        const topVariants = ReactionProduct.getTopVariants(this.props.product._id);\n\n        for (const topVariant of topVariants) {\n          const inventoryQuantity = ReactionProduct.getVariantQuantity(topVariant);\n\n          if (inventoryQuantity > 0) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n\n      this.isBackorder = () => this.props.product.isBackorder;\n\n      this.isLowQuantity = this.isLowQuantity.bind(this);\n      this.isSoldOut = this.isSoldOut.bind(this);\n      this.isBackorder = this.isBackorder.bind(this);\n    }\n\n    render() {\n      return React.createElement(Comp, {\n        isLowQuantity: this.isLowQuantity,\n        isSoldOut: this.isSoldOut,\n        isBackorder: this.isBackorder\n      });\n    }\n\n  }, _class.propTypes = {\n    product: PropTypes.object\n  }, _temp;\n};\n\nregisterComponent(\"GridItemNotice\", GridItemNotice, wrapComponent);\nmodule.exportDefault(wrapComponent(GridItemNotice));","map":{"version":3,"sources":["imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js"],"names":["React","Component","module","watch","require","default","v","PropTypes","registerComponent","ReactionProduct","GridItemNotice","wrapComponent","Comp","GridItemNoticeContainer","constructor","isLowQuantity","topVariants","getTopVariants","props","product","_id","topVariant","inventoryThreshold","lowInventoryWarningThreshold","inventoryQuantity","getVariantQuantity","isSoldOut","isBackorder","bind","render","propTypes","object","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { registerComponent } from \"@reactioncommerce/reaction-components\";\nimport { ReactionProduct } from \"/lib/api\";\nimport GridItemNotice from \"../components/gridItemNotice\";\n\nconst wrapComponent = (Comp) => (\n  class GridItemNoticeContainer extends Component {\n    static propTypes = {\n      product: PropTypes.object\n    }\n\n    constructor() {\n      super();\n\n      this.isLowQuantity = this.isLowQuantity.bind(this);\n      this.isSoldOut = this.isSoldOut.bind(this);\n      this.isBackorder = this.isBackorder.bind(this);\n    }\n\n    isLowQuantity = () => {\n      const topVariants = ReactionProduct.getTopVariants(this.props.product._id);\n\n      for (const topVariant of topVariants) {\n        const inventoryThreshold = topVariant.lowInventoryWarningThreshold;\n        const inventoryQuantity = ReactionProduct.getVariantQuantity(topVariant);\n\n        if (inventoryQuantity !== 0 && inventoryThreshold >= inventoryQuantity) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    isSoldOut = () => {\n      const topVariants = ReactionProduct.getTopVariants(this.props.product._id);\n\n      for (const topVariant of topVariants) {\n        const inventoryQuantity = ReactionProduct.getVariantQuantity(topVariant);\n\n        if (inventoryQuantity > 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    isBackorder = () => this.props.product.isBackorder\n\n    render() {\n      return (\n        <Comp\n          isLowQuantity={this.isLowQuantity}\n          isSoldOut={this.isSoldOut}\n          isBackorder={this.isBackorder}\n        />\n      );\n    }\n  }\n);\n\nregisterComponent(\"GridItemNotice\", GridItemNotice, wrapComponent);\n\nexport default wrapComponent(GridItemNotice);\n"]},"sourceType":"script","hash":"3df94f331cd1612f0da7c509f5a26b5c642085f1"}
