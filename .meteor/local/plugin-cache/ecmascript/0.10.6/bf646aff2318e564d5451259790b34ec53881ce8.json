{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/components/lib/hoc.js","filename":"imports/plugins/core/components/lib/hoc.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/components/lib/hoc.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/components/lib/hoc.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/components/lib/hoc.js"}},"code":"module.export({\n  withCurrentUser: () => withCurrentUser,\n  withMoment: () => withMoment,\n  withMomentTimezone: () => withMomentTimezone,\n  withCurrentAccount: () => withCurrentAccount,\n  withIsAdmin: () => withIsAdmin,\n  withPermissions: () => withPermissions,\n  withIsOwner: () => withIsOwner\n});\n\nlet _lifecycle;\n\nmodule.watch(require(\"recompose/lifecycle\"), {\n  default(v) {\n    _lifecycle = v;\n  }\n\n}, 0);\n\nlet _difference;\n\nmodule.watch(require(\"lodash/difference\"), {\n  default(v) {\n    _difference = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Roles;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 3);\nlet Accounts, Groups;\nmodule.watch(require(\"../../../../../lib/collections\"), {\n  Accounts(v) {\n    Accounts = v;\n  },\n\n  Groups(v) {\n    Groups = v;\n  }\n\n}, 4);\nlet composeWithTracker;\nmodule.watch(require(\"./composer\"), {\n  composeWithTracker(v) {\n    composeWithTracker = v;\n  }\n\n}, 5);\nlet Logger;\nlet Reaction;\n\nif (Meteor.isClient) {\n  ({\n    Logger\n  } = require(\"../../../../../client/api\"));\n  ({\n    Reaction\n  } = require(\"../../../../../client/api\"));\n} else {\n  ({\n    Logger\n  } = require(\"../../../../../server/api\"));\n  ({\n    Reaction\n  } = require(\"../../../../../server/api\"));\n}\n/**\n * @name withCurrentUser\n * @method\n * @summary A wrapper to reactively inject the current user into a component\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with a \"currentUser\" prop\n * @memberof Components\n */\n\n\nfunction withCurrentUser(component) {\n  return composeWithTracker((props, onData) => {\n    onData(null, {\n      currentUser: Meteor.user()\n    });\n  })(component);\n}\n\nfunction withMoment(component) {\n  return _lifecycle({\n    componentDidMount() {\n      Promise.resolve().then(() => require(\"moment\")).then(moment => {\n        moment.locale(Reaction.Locale.get().language);\n        this.setState({\n          moment\n        });\n      }).catch(error => {\n        Logger.debug(error, \"moment.js async import error\");\n      });\n    }\n\n  })(component);\n}\n\nfunction withMomentTimezone(component) {\n  return _lifecycle({\n    componentDidMount() {\n      Promise.resolve().then(() => require(\"moment-timezone\")).then(moment => {\n        this.setState({\n          momentTimezone: moment.tz\n        });\n      }).catch(error => {\n        Logger.debug(error, \"moment.js async import error\");\n      });\n    }\n\n  })(component);\n}\n\nfunction withCurrentAccount(component) {\n  return composeWithTracker((props, onData) => {\n    const shopId = Reaction.getShopId();\n    const user = Meteor.user();\n\n    if (!shopId || !user) {\n      return null;\n    }\n\n    const accSub = Meteor.subscribe(\"Accounts\", user._id);\n\n    if (accSub.ready()) {\n      // shoppers should always be guests\n      const isGuest = Reaction.hasPermission(\"guest\"); // but if a user has never logged in then they are anonymous\n\n      const isAnonymous = Roles.userIsInRole(user, \"anonymous\", shopId); // this check for \"anonymous\" uses userIsInRole instead of hasPermission because hasPermission\n      // always return `true` when logged in as the owner.\n      // But in this case, the anonymous check should be false when a user is logged in\n\n      const account = Accounts.findOne(user._id);\n      onData(null, {\n        currentAccount: isGuest && !isAnonymous && account\n      });\n    }\n  }, false)(component);\n}\n\nfunction withIsAdmin(component) {\n  return composeWithTracker((props, onData) => {\n    onData(null, {\n      isAdmin: Reaction.hasAdminAccess()\n    });\n  })(component);\n}\n\nfunction withPermissions({\n  roles = [\"guest\", \"anonymous\"],\n  group\n}) {\n  return composeWithTracker((props, onData) => {\n    let hasPermissions = Reaction.hasPermission(roles);\n\n    if (!group) {\n      return onData(null, {\n        hasPermissions\n      });\n    } // if group is passed, use group access instead\n\n\n    const grpSub = Meteor.subscribe(\"Groups\");\n\n    if (grpSub.ready()) {\n      const grp = Groups.findOne({\n        slug: group\n      });\n\n      if (grp && grp.permissions) {\n        const user = Meteor.user();\n        const permissions = user.roles[Reaction.getShopId()] || []; // checks that userPermissions includes all elements from groupPermissions\n\n        hasPermissions = _difference(grp.permissions, permissions).length === 0;\n      }\n\n      onData(null, {\n        hasPermissions\n      });\n    }\n  });\n}\n\nfunction withIsOwner(component) {\n  return composeWithTracker((props, onData) => {\n    onData(null, {\n      isOwner: Reaction.hasOwnerAccess()\n    });\n  })(component);\n}","map":{"version":3,"sources":["imports/plugins/core/components/lib/hoc.js"],"names":["module","export","withCurrentUser","withMoment","withMomentTimezone","withCurrentAccount","withIsAdmin","withPermissions","withIsOwner","_lifecycle","watch","require","default","v","_difference","Meteor","Roles","Accounts","Groups","composeWithTracker","Logger","Reaction","isClient","component","props","onData","currentUser","user","componentDidMount","then","moment","locale","Locale","get","language","setState","catch","error","debug","momentTimezone","tz","shopId","getShopId","accSub","subscribe","_id","ready","isGuest","hasPermission","isAnonymous","userIsInRole","account","findOne","currentAccount","isAdmin","hasAdminAccess","roles","group","hasPermissions","grpSub","grp","slug","permissions","length","isOwner","hasOwnerAccess"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { Accounts, Groups } from \"/lib/collections\";\nimport { lifecycle } from \"recompose\";\nimport { composeWithTracker } from \"./composer\";\n\nlet Logger;\nlet Reaction;\n\nif (Meteor.isClient) {\n  ({ Logger } = require(\"/client/api\"));\n  ({ Reaction } = require(\"/client/api\"));\n} else {\n  ({ Logger } = require(\"/server/api\"));\n  ({ Reaction } = require(\"/server/api\"));\n}\n\n\n/**\n * @name withCurrentUser\n * @method\n * @summary A wrapper to reactively inject the current user into a component\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with a \"currentUser\" prop\n * @memberof Components\n */\nexport function withCurrentUser(component) {\n  return composeWithTracker((props, onData) => {\n    onData(null, { currentUser: Meteor.user() });\n  })(component);\n}\n\n\n/**\n * @name withMoment\n * @method\n * @summary A wrapper to reactively inject the moment package into a component\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with a \"moment\" prop\n * @memberof Components\n */\nexport function withMoment(component) {\n  return lifecycle({\n    componentDidMount() {\n      import(\"moment\")\n        .then((moment) => {\n          moment.locale(Reaction.Locale.get().language);\n          this.setState({\n            moment\n          });\n        })\n        .catch((error) => {\n          Logger.debug(error, \"moment.js async import error\");\n        });\n    }\n  })(component);\n}\n\n\n/**\n * @name withMomentTimezone\n * @method\n * @summary A wrapper to reactively inject the moment package into a component\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with a \"moment\" prop\n * @memberof Components\n */\nexport function withMomentTimezone(component) {\n  return lifecycle({\n    componentDidMount() {\n      import(\"moment-timezone\")\n        .then((moment) => {\n          this.setState({\n            momentTimezone: moment.tz\n          });\n        })\n        .catch((error) => {\n          Logger.debug(error, \"moment.js async import error\");\n        });\n    }\n  })(component);\n}\n\n\n/**\n * @name withCurrentAccount\n * @method\n * @summary A wrapper to reactively inject the current account into a component.\n * This assumes you have signed up and are not an anonymous user.\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with a \"currentAccount\" prop\n * @memberof Components\n */\nexport function withCurrentAccount(component) {\n  return composeWithTracker((props, onData) => {\n    const shopId = Reaction.getShopId();\n    const user = Meteor.user();\n\n    if (!shopId || !user) {\n      return null;\n    }\n\n    const accSub = Meteor.subscribe(\"Accounts\", user._id);\n    if (accSub.ready()) {\n      // shoppers should always be guests\n      const isGuest = Reaction.hasPermission(\"guest\");\n      // but if a user has never logged in then they are anonymous\n      const isAnonymous = Roles.userIsInRole(user, \"anonymous\", shopId);\n      // this check for \"anonymous\" uses userIsInRole instead of hasPermission because hasPermission\n      // always return `true` when logged in as the owner.\n      // But in this case, the anonymous check should be false when a user is logged in\n      const account = Accounts.findOne(user._id);\n\n      onData(null, { currentAccount: isGuest && !isAnonymous && account });\n    }\n  }, false)(component);\n}\n\n\n/**\n * @name withIsAdmin\n * @method\n * @summary A wrapper to reactively inject the current user's admin status.\n * Sets a boolean 'isAdmin' prop on the wrapped component.\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with an \"isAdmin\" prop\n * @memberof Components\n */\nexport function withIsAdmin(component) {\n  return composeWithTracker((props, onData) => {\n    onData(null, { isAdmin: Reaction.hasAdminAccess() });\n  })(component);\n}\n\n/**\n * @name withPermissions\n * @method\n * @summary A wrapper to reactively inject a user's permission based on group or roles\n * Group access is given to users at that group level and above\n * @param  {Array|String} roles String or array of strings of permissions to check. default: roles=[\"guest\", \"anonymous\"]\n * @param  {String} group Slug title of a group to check against. Group option supercedes roles option. default: group=\"customer\".\n * @return {Function} the new wrapped component with a \"hasPermissions\" prop\n * @memberof Components\n */\nexport function withPermissions({ roles = [\"guest\", \"anonymous\"], group }) {\n  return composeWithTracker((props, onData) => {\n    let hasPermissions = Reaction.hasPermission(roles);\n\n    if (!group) {\n      return onData(null, { hasPermissions });\n    }\n\n    // if group is passed, use group access instead\n    const grpSub = Meteor.subscribe(\"Groups\");\n\n    if (grpSub.ready()) {\n      const grp = Groups.findOne({ slug: group });\n\n      if (grp && grp.permissions) {\n        const user = Meteor.user();\n        const permissions = user.roles[Reaction.getShopId()] || [];\n        // checks that userPermissions includes all elements from groupPermissions\n        hasPermissions = _.difference(grp.permissions, permissions).length === 0;\n      }\n\n      onData(null, { hasPermissions });\n    }\n  });\n}\n\n\n/**\n * @name withIsOwner\n * @method\n * @summary A wrapper to reactively inject the current user's owner status.\n * Sets a boolean 'isOwner' prop on the wrapped component.\n * @param {Function|React.Component} component - the component to wrap\n * @return {Function} the new wrapped component with an \"isOwner\" prop\n * @memberof Components\n */\nexport function withIsOwner(component) {\n  return composeWithTracker((props, onData) => {\n    onData(null, { isOwner: Reaction.hasOwnerAccess() });\n  })(component);\n}\n"]},"sourceType":"script","hash":"bf646aff2318e564d5451259790b34ec53881ce8"}
