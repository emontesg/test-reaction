{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/included/shipping-shippo/server/jobs/shippo.js","filename":"imports/plugins/included/shipping-shippo/server/jobs/shippo.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/included/shipping-shippo/server/jobs/shippo.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/included/shipping-shippo/server/jobs/shippo.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/included/shipping-shippo/server/jobs/shippo.js"}},"code":"module.export({\n  setupShippoTrackingStatusHook: () => setupShippoTrackingStatusHook,\n  fetchTrackingStatusForOrdersJob: () => fetchTrackingStatusForOrdersJob\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Job;\nmodule.watch(require(\"../../../../core/job-collection/lib\"), {\n  Job(v) {\n    Job = v;\n  }\n\n}, 1);\nlet Hooks, Logger, Reaction;\nmodule.watch(require(\"../../../../../../server/api\"), {\n  Hooks(v) {\n    Hooks = v;\n  },\n\n  Logger(v) {\n    Logger = v;\n  },\n\n  Reaction(v) {\n    Reaction = v;\n  }\n\n}, 2);\nlet Jobs, Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Jobs(v) {\n    Jobs = v;\n  },\n\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 3);\n\n// helper to fetch shippo config\nfunction getJobConfig() {\n  return Packages.findOne({\n    name: \"reaction-shippo\",\n    shopId: Reaction.getShopId()\n  }).settings;\n} // helper to get owner's UserId\n\n\nfunction getOwnerUserId() {\n  const owner = Meteor.users.findOne({\n    \"roles.__global_roles__\": \"owner\"\n  });\n\n  if (owner && typeof owner === \"object\") {\n    return owner._id;\n  }\n\n  return false;\n}\n\nfunction setupShippoTrackingStatusHook() {\n  Hooks.Events.add(\"afterCoreInit\", () => {\n    const config = getJobConfig();\n    const {\n      refreshPeriod\n    } = config;\n\n    if (!config.shippo.enabled || !refreshPeriod) {\n      return;\n    } // there might be some validity to this being Logger.info.\n\n\n    Logger.debug(`Adding shippo/fetchTrackingStatusForOrders to JobControl. Refresh ${refreshPeriod}`);\n    new Job(Jobs, \"shippo/fetchTrackingStatusForOrdersJob\", {}).priority(\"normal\").retry({\n      retries: 5,\n      wait: 60000,\n      backoff: \"exponential\" // delay by twice as long for each subsequent retry\n\n    }).repeat({\n      schedule: Jobs.later.parse.text(refreshPeriod)\n    }).save({\n      // Cancel any jobs of the same type,\n      // but only if this job repeats forever.\n      cancelRepeats: true\n    });\n  });\n}\n\nfunction fetchTrackingStatusForOrdersJob() {\n  const ownerId = getOwnerUserId();\n\n  if (ownerId) {\n    Jobs.processJobs(\"shippo/fetchTrackingStatusForOrdersJob\", {\n      pollInterval: 30 * 1000,\n      workTimeout: 180 * 1000\n    }, (job, callback) => {\n      // TODO review meteor runAsUser and add to project documentation\n      // As this is run by the Server and we don't have userId()/this.userId\n      // which \"shippo/fetchTrackingStatusForOrders\" need, we use dispatch:run-as-user\n      // An alternative way is https://forums.meteor.com/t/cant-set-logged-in-user-for-rest-calls/18656/3\n      Meteor.runAsUser(ownerId, () => {\n        Meteor.call(\"shippo/fetchTrackingStatusForOrders\", error => {\n          if (error) {\n            job.done(error.toString(), {\n              repeatId: true\n            });\n          } else {\n            const success = \"Shippo tracking status updated.\";\n            Logger.debug(success);\n            job.done(success, {\n              repeatId: true\n            });\n          }\n        });\n      });\n      callback();\n    });\n  }\n\n  return false;\n}","map":{"version":3,"sources":["imports/plugins/included/shipping-shippo/server/jobs/shippo.js"],"names":["module","export","setupShippoTrackingStatusHook","fetchTrackingStatusForOrdersJob","Meteor","watch","require","v","Job","Hooks","Logger","Reaction","Jobs","Packages","getJobConfig","findOne","name","shopId","getShopId","settings","getOwnerUserId","owner","users","_id","Events","add","config","refreshPeriod","shippo","enabled","debug","priority","retry","retries","wait","backoff","repeat","schedule","later","parse","text","save","cancelRepeats","ownerId","processJobs","pollInterval","workTimeout","job","callback","runAsUser","call","error","done","toString","repeatId","success"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Job } from \"/imports/plugins/core/job-collection/lib\";\nimport { Hooks, Logger, Reaction } from \"/server/api\";\nimport { Jobs, Packages } from \"/lib/collections\";\n\n// helper to fetch shippo config\nfunction getJobConfig() {\n  return Packages.findOne({\n    name: \"reaction-shippo\",\n    shopId: Reaction.getShopId()\n  }).settings;\n}\n\n// helper to get owner's UserId\nfunction getOwnerUserId() {\n  const owner = Meteor.users.findOne({\n    \"roles.__global_roles__\": \"owner\"\n  });\n  if (owner && typeof owner === \"object\") {\n    return owner._id;\n  }\n  return false;\n}\n\nexport function setupShippoTrackingStatusHook() {\n  Hooks.Events.add(\"afterCoreInit\", () => {\n    const config = getJobConfig();\n    const { refreshPeriod } = config;\n\n    if (!config.shippo.enabled || !refreshPeriod) {\n      return;\n    }\n    // there might be some validity to this being Logger.info.\n    Logger.debug(`Adding shippo/fetchTrackingStatusForOrders to JobControl. Refresh ${refreshPeriod}`);\n    new Job(Jobs, \"shippo/fetchTrackingStatusForOrdersJob\", {})\n      .priority(\"normal\")\n      .retry({\n        retries: 5,\n        wait: 60000,\n        backoff: \"exponential\" // delay by twice as long for each subsequent retry\n      })\n      .repeat({\n        schedule: Jobs.later.parse.text(refreshPeriod)\n      })\n      .save({\n        // Cancel any jobs of the same type,\n        // but only if this job repeats forever.\n        cancelRepeats: true\n      });\n  });\n}\n\nexport function fetchTrackingStatusForOrdersJob() {\n  const ownerId = getOwnerUserId();\n  if (ownerId) {\n    Jobs.processJobs(\n      \"shippo/fetchTrackingStatusForOrdersJob\",\n      {\n        pollInterval: 30 * 1000,\n        workTimeout: 180 * 1000\n      },\n      (job, callback) => {\n        // TODO review meteor runAsUser and add to project documentation\n        // As this is run by the Server and we don't have userId()/this.userId\n        // which \"shippo/fetchTrackingStatusForOrders\" need, we use dispatch:run-as-user\n        // An alternative way is https://forums.meteor.com/t/cant-set-logged-in-user-for-rest-calls/18656/3\n        Meteor.runAsUser(ownerId, () => {\n          Meteor.call(\"shippo/fetchTrackingStatusForOrders\", (error) => {\n            if (error) {\n              job.done(error.toString(), { repeatId: true });\n            } else {\n              const success = \"Shippo tracking status updated.\";\n              Logger.debug(success);\n              job.done(success, { repeatId: true });\n            }\n          });\n        });\n        callback();\n      }\n    );\n  }\n  return false;\n}\n"]},"sourceType":"script","hash":"3cb1497660832cb2f18be9fe956640d456103759"}
