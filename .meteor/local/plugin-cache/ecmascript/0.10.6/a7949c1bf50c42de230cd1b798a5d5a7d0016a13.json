{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/versions/server/migrations/16_update_billing_paymentMethod.js","filename":"imports/plugins/core/versions/server/migrations/16_update_billing_paymentMethod.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/versions/server/migrations/16_update_billing_paymentMethod.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/versions/server/migrations/16_update_billing_paymentMethod.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/versions/server/migrations/16_update_billing_paymentMethod.js"}},"code":"let Migrations;\nmodule.watch(require(\"meteor/percolate:migrations\"), {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Orders, Packages;\nmodule.watch(require(\"../../../../../../lib/collections\"), {\n  Orders(v) {\n    Orders = v;\n  },\n\n  Packages(v) {\n    Packages = v;\n  }\n\n}, 1);\nconst paymentNameDict = {\n  Example: \"example-paymentmethod\",\n  Braintree: \"reaction-braintree\",\n  AuthNet: \"reaction-auth-net\",\n  PaypalExpress: \"reaction-paypal\",\n  PayflowPro: \"reaction-paypal\",\n  Stripe: \"reaction-stripe\"\n};\nMigrations.add({\n  version: 16,\n\n  up() {\n    Orders.find().forEach(order => {\n      const newBilling = order.billing.map(billing => {\n        const packageData = Packages.findOne({\n          name: paymentNameDict[billing.paymentMethod.processor],\n          shopId: billing.shopId\n        });\n        const registry = packageData && Array.isArray(packageData.registry) && packageData.registry[0] && packageData.registry[0]; // create key in similar pattern created in Packages pub transform\n\n        const settingsKey = (registry.name || packageData.name).split(\"/\").splice(-1)[0];\n        const cartItems = order.items.map(item => ({\n          _id: item._id,\n          productId: item.productId,\n          variantId: item.variants._id,\n          shopId: item.shopId,\n          quantity: item.quantity\n        }));\n        billing.paymentMethod.paymentPackageId = packageData && packageData._id;\n        billing.paymentMethod.paymentSettingsKey = settingsKey;\n        billing.paymentMethod.shopId = billing.shopId;\n        billing.paymentMethod.items = cartItems;\n        return billing;\n      });\n      Orders.update({\n        _id: order._id\n      }, {\n        $set: {\n          billing: newBilling\n        }\n      }, {\n        bypassCollection2: true\n      });\n    });\n  },\n\n  down() {\n    Orders.find().forEach(order => {\n      order.billing.forEach(billing => {\n        delete billing.paymentMethod.paymentPackageId;\n        delete billing.paymentMethod.paymentSettingsKey;\n        delete billing.paymentMethod.shopId;\n        delete billing.paymentMethod.items;\n      });\n      Orders.update({\n        _id: order._id\n      }, {\n        $set: {\n          items: order.billing\n        }\n      }, {\n        bypassCollection2: true\n      });\n    });\n  }\n\n});","map":{"version":3,"sources":["imports/plugins/core/versions/server/migrations/16_update_billing_paymentMethod.js"],"names":["Migrations","module","watch","require","v","Orders","Packages","paymentNameDict","Example","Braintree","AuthNet","PaypalExpress","PayflowPro","Stripe","add","version","up","find","forEach","order","newBilling","billing","map","packageData","findOne","name","paymentMethod","processor","shopId","registry","Array","isArray","settingsKey","split","splice","cartItems","items","item","_id","productId","variantId","variants","quantity","paymentPackageId","paymentSettingsKey","update","$set","bypassCollection2","down"],"mappings":"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","sourcesContent":["import { Migrations } from \"meteor/percolate:migrations\";\nimport { Orders, Packages } from \"/lib/collections\";\n\nconst paymentNameDict = {\n  Example: \"example-paymentmethod\",\n  Braintree: \"reaction-braintree\",\n  AuthNet: \"reaction-auth-net\",\n  PaypalExpress: \"reaction-paypal\",\n  PayflowPro: \"reaction-paypal\",\n  Stripe: \"reaction-stripe\"\n};\n\nMigrations.add({\n  version: 16,\n  up() {\n    Orders.find().forEach((order) => {\n      const newBilling = order.billing.map((billing) => {\n        const packageData = Packages.findOne({\n          name: paymentNameDict[billing.paymentMethod.processor],\n          shopId: billing.shopId\n        });\n        const registry = packageData && Array.isArray(packageData.registry)\n          && packageData.registry[0] && packageData.registry[0];\n        // create key in similar pattern created in Packages pub transform\n        const settingsKey = (registry.name || packageData.name).split(\"/\").splice(-1)[0];\n        const cartItems = order.items.map((item) => ({\n          _id: item._id,\n          productId: item.productId,\n          variantId: item.variants._id,\n          shopId: item.shopId,\n          quantity: item.quantity\n        }));\n\n        billing.paymentMethod.paymentPackageId = packageData && packageData._id;\n        billing.paymentMethod.paymentSettingsKey = settingsKey;\n        billing.paymentMethod.shopId = billing.shopId;\n        billing.paymentMethod.items = cartItems;\n        return billing;\n      });\n\n      Orders.update({ _id: order._id }, {\n        $set: { billing: newBilling }\n      }, { bypassCollection2: true });\n    });\n  },\n  down() {\n    Orders.find().forEach((order) => {\n      order.billing.forEach((billing) => {\n        delete billing.paymentMethod.paymentPackageId;\n        delete billing.paymentMethod.paymentSettingsKey;\n        delete billing.paymentMethod.shopId;\n        delete billing.paymentMethod.items;\n      });\n      Orders.update({ _id: order._id }, {\n        $set: { items: order.billing }\n      }, { bypassCollection2: true });\n    });\n  }\n});\n"]},"sourceType":"script","hash":"a7949c1bf50c42de230cd1b798a5d5a7d0016a13"}
