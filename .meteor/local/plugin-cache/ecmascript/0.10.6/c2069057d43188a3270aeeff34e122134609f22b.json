{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/plugins/core/graphql/server/createApolloServer.js","filename":"imports/plugins/core/graphql/server/createApolloServer.js","sourceMaps":true,"envName":"development","cwd":"/Users/estebandev/test-knowledge","passPerPreset":false,"presets":[],"parserOpts":{"sourceType":"module","sourceFileName":"imports/plugins/core/graphql/server/createApolloServer.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties"]},"generatorOpts":{"filename":"imports/plugins/core/graphql/server/createApolloServer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/plugins/core/graphql/server/createApolloServer.js"}},"code":"var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/objectSpread\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  default: () => createApolloServer\n});\nlet cors;\nmodule.watch(require(\"cors\"), {\n  default(v) {\n    cors = v;\n  }\n\n}, 0);\nlet bodyParser;\nmodule.watch(require(\"body-parser\"), {\n  default(v) {\n    bodyParser = v;\n  }\n\n}, 1);\nlet express;\nmodule.watch(require(\"express\"), {\n  default(v) {\n    express = v;\n  }\n\n}, 2);\nlet graphqlExpress, graphiqlExpress;\nmodule.watch(require(\"apollo-server-express\"), {\n  graphqlExpress(v) {\n    graphqlExpress = v;\n  },\n\n  graphiqlExpress(v) {\n    graphiqlExpress = v;\n  }\n\n}, 3);\nlet buildContext;\nmodule.watch(require(\"./buildContext\"), {\n  default(v) {\n    buildContext = v;\n  }\n\n}, 4);\nlet getErrorFormatter;\nmodule.watch(require(\"./getErrorFormatter\"), {\n  default(v) {\n    getErrorFormatter = v;\n  }\n\n}, 5);\nlet meteorTokenMiddleware;\nmodule.watch(require(\"./meteorTokenMiddleware\"), {\n  default(v) {\n    meteorTokenMiddleware = v;\n  }\n\n}, 6);\nlet schema;\nmodule.watch(require(\"./schema\"), {\n  default(v) {\n    schema = v;\n  }\n\n}, 7);\nconst defaultServerConfig = {\n  // graphql endpoint\n  path: \"/graphql-alpha\",\n  // GraphiQL endpoint\n  graphiqlPath: \"/graphiql\",\n  // GraphiQL options (default: log the current user in your request)\n  graphiqlOptions: {\n    passHeader: \"'meteor-login-token': localStorage['Meteor.loginToken']\"\n  }\n};\n\nfunction createApolloServer(options = {}) {\n  // the Meteor GraphQL server is an Express server\n  const expressServer = express();\n  const {\n    context: contextFromOptions\n  } = options;\n  const graphQLPath = options.path || defaultServerConfig.path; // GraphQL endpoint, enhanced with JSON body parser\n\n  expressServer.use(graphQLPath, cors(), bodyParser.json(), meteorTokenMiddleware(\"meteor-login-token\", contextFromOptions), graphqlExpress(req => Promise.asyncApply(() => {\n    const context = (0, _objectSpread2.default)({}, contextFromOptions); // meteorTokenMiddleware will have set req.user if there is one\n\n    Promise.await(buildContext(context, req.user));\n    return {\n      context,\n      debug: options.debug,\n      formatError: getErrorFormatter(context),\n\n      formatResponse(res) {\n        // Apollo includes `errors` in the response when empty, but the spec forbids this.\n        // http://facebook.github.io/graphql/draft/#sec-Errors\n        if (Object.prototype.hasOwnProperty.call(res, \"errors\") && (!res.errors || res.errors.filter(v => !!v).length === 0)) {\n          delete res.errors;\n        }\n\n        return res;\n      },\n\n      schema\n    };\n  }))); // Start GraphiQL if enabled\n\n  if (options.graphiql) {\n    // GraphiQL endpoint\n    expressServer.use(options.graphiqlPath || defaultServerConfig.graphiqlPath, graphiqlExpress((0, _objectSpread2.default)({}, defaultServerConfig.graphiqlOptions, {\n      // endpoint of the graphql server where to send requests\n      endpointURL: graphQLPath\n    })));\n  }\n\n  return expressServer;\n}","map":{"version":3,"sources":["imports/plugins/core/graphql/server/createApolloServer.js"],"names":["module","export","default","createApolloServer","cors","watch","require","v","bodyParser","express","graphqlExpress","graphiqlExpress","buildContext","getErrorFormatter","meteorTokenMiddleware","schema","defaultServerConfig","path","graphiqlPath","graphiqlOptions","passHeader","options","expressServer","context","contextFromOptions","graphQLPath","use","json","req","user","debug","formatError","formatResponse","res","Object","prototype","hasOwnProperty","call","errors","filter","length","graphiql","endpointURL"],"mappings":"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","sourcesContent":["import cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport express from \"express\";\nimport { graphqlExpress, graphiqlExpress } from \"apollo-server-express\";\nimport buildContext from \"./buildContext\";\nimport getErrorFormatter from \"./getErrorFormatter\";\nimport meteorTokenMiddleware from \"./meteorTokenMiddleware\";\nimport schema from \"./schema\";\n\nconst defaultServerConfig = {\n  // graphql endpoint\n  path: \"/graphql-alpha\",\n  // GraphiQL endpoint\n  graphiqlPath: \"/graphiql\",\n  // GraphiQL options (default: log the current user in your request)\n  graphiqlOptions: {\n    passHeader: \"'meteor-login-token': localStorage['Meteor.loginToken']\"\n  }\n};\n\nexport default function createApolloServer(options = {}) {\n  // the Meteor GraphQL server is an Express server\n  const expressServer = express();\n\n  const { context: contextFromOptions } = options;\n  const graphQLPath = options.path || defaultServerConfig.path;\n\n  // GraphQL endpoint, enhanced with JSON body parser\n  expressServer.use(\n    graphQLPath,\n    cors(),\n    bodyParser.json(),\n    meteorTokenMiddleware(\"meteor-login-token\", contextFromOptions),\n    graphqlExpress(async (req) => {\n      const context = { ...contextFromOptions };\n\n      // meteorTokenMiddleware will have set req.user if there is one\n      await buildContext(context, req.user);\n\n      return {\n        context,\n        debug: options.debug,\n        formatError: getErrorFormatter(context),\n        formatResponse(res) {\n          // Apollo includes `errors` in the response when empty, but the spec forbids this.\n          // http://facebook.github.io/graphql/draft/#sec-Errors\n          if (Object.prototype.hasOwnProperty.call(res, \"errors\") && (!res.errors || res.errors.filter((v) => !!v).length === 0)) {\n            delete res.errors;\n          }\n\n          return res;\n        },\n        schema\n      };\n    })\n  );\n\n  // Start GraphiQL if enabled\n  if (options.graphiql) {\n    // GraphiQL endpoint\n    expressServer.use(\n      options.graphiqlPath || defaultServerConfig.graphiqlPath,\n      graphiqlExpress({\n        // GraphiQL options\n        ...defaultServerConfig.graphiqlOptions,\n        // endpoint of the graphql server where to send requests\n        endpointURL: graphQLPath\n      })\n    );\n  }\n\n  return expressServer;\n}\n"]},"sourceType":"script","hash":"c2069057d43188a3270aeeff34e122134609f22b"}
