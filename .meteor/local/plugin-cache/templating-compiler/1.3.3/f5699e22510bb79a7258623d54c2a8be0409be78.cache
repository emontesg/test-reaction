{"head":"","body":"","js":"\nTemplate.__checkName(\"customTaxRates\");\nTemplate[\"customTaxRates\"] = new Template(\"Template.customTaxRates\", (function() {\n  var view = this;\n  return [ HTML.DIV(\"\\n    \", Blaze._TemplateWith(function() {\n    return Spacebars.call(view.lookup(\"taxGrid\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"React\"));\n  }), \"\\n  \"), \"\\n\\n  \", HTML.DIV({\n    class: \"pull-right\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return Spacebars.call(view.lookup(\"editButton\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"React\"));\n  }), \"\\n  \"), \"\\n\\n  \", Blaze.If(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"instance\"), \"state\", \"get\"), \"isEditing\");\n  }, function() {\n    return [ \"\\n    \", HTML.DIV(\"\\n    \", Blaze.If(function() {\n      return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"instance\"), \"state\", \"get\"), \"editingId\");\n    }, function() {\n      return [ \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          schema: Spacebars.call(view.lookup(\"taxSchema\")),\n          type: Spacebars.call(\"method-update\"),\n          meteormethod: Spacebars.call(\"taxes/editRate\"),\n          doc: Spacebars.call(view.lookup(\"taxRate\")),\n          id: Spacebars.call(\"customTaxRates-update-form\"),\n          resetOnSuccess: Spacebars.call(true)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n          return [ \"\\n        \", HTML.DIV(\"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"country\"),\n              options: Spacebars.call(view.lookup(\"countryOptions\")),\n              class: Spacebars.call(\"form-control\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\\n          \", HTML.LABEL({\n            class: \"control-label\"\n          }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n            return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n              name: \"region\"\n            }));\n          })), \"\\n          \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"statesForCountry\"));\n          }, function() {\n            return [ \"\\n            \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(\"region\"),\n                value: Spacebars.call(view.lookup(\"region\")),\n                options: Spacebars.call(view.lookup(\"statesForCountry\")),\n                class: Spacebars.call(\"form-control\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n            }), \"\\n          \" ];\n          }, function() {\n            return [ \"\\n            \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(\"region\"),\n                value: Spacebars.call(view.lookup(\"region\")),\n                class: Spacebars.call(\"form-control\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n            }), \"\\n          \" ];\n          }), \"\\n          \", Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n              name: \"region\"\n            }));\n          }, function() {\n            return [ \"\\n            \", HTML.SPAN({\n              class: \"help-block\"\n            }, Blaze.View(\"lookup:afFieldMessage\", function() {\n              return Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n                name: \"region\"\n              }));\n            })), \"\\n          \" ];\n          }), \"\\n\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"postal\"),\n              class: Spacebars.call(\"form-control\"),\n              placeholder: Spacebars.call(\"Postal Code\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"rate\"),\n              class: Spacebars.call(\"form-control\"),\n              placeholder: Spacebars.call(\"Rate as a percentage\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n        \"), \"\\n        \", Blaze._TemplateWith(function() {\n            return {\n              instance: Spacebars.call(view.lookup(\"instance\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"taxSettingsSubmitButton\"));\n          }), \"\\n      \" ];\n        });\n      }), \"\\n\\n    \" ];\n    }, function() {\n      return [ \"\\n\\n      \", Blaze._TemplateWith(function() {\n        return {\n          schema: Spacebars.call(view.lookup(\"taxSchema\")),\n          type: Spacebars.call(\"method\"),\n          meteormethod: Spacebars.call(\"taxes/addRate\"),\n          id: Spacebars.call(\"customTaxRates-insert-form\"),\n          doc: Spacebars.call(view.lookup(\"taxRate\")),\n          resetOnSuccess: Spacebars.call(true)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n          return [ \"\\n        \", HTML.DIV(\"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"country\"),\n              options: Spacebars.call(view.lookup(\"countryOptions\")),\n              class: Spacebars.call(\"form-control\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\\n          \", HTML.LABEL({\n            class: \"control-label\"\n          }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n            return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n              name: \"region\"\n            }));\n          })), \"\\n          \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"statesForCountry\"));\n          }, function() {\n            return [ \"\\n            \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(\"region\"),\n                value: Spacebars.call(view.lookup(\"region\")),\n                options: Spacebars.call(view.lookup(\"statesForCountry\")),\n                class: Spacebars.call(\"form-control\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n            }), \"\\n          \" ];\n          }, function() {\n            return [ \"\\n            \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(\"region\"),\n                value: Spacebars.call(view.lookup(\"region\")),\n                class: Spacebars.call(\"form-control\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n            }), \"\\n          \" ];\n          }), \"\\n          \", Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n              name: \"region\"\n            }));\n          }, function() {\n            return [ \"\\n            \", HTML.SPAN({\n              class: \"help-block\"\n            }, Blaze.View(\"lookup:afFieldMessage\", function() {\n              return Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n                name: \"region\",\n                placeholder: \"State/Region/Province\"\n              }));\n            })), \"\\n          \" ];\n          }), \"\\n\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"postal\"),\n              class: Spacebars.call(\"form-control\"),\n              placeholder: Spacebars.call(\"Postal Code\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"rate\"),\n              class: Spacebars.call(\"form-control\"),\n              placeholder: Spacebars.call(\"Rate as a percentage\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n        \"), \"\\n        \", Blaze._TemplateWith(function() {\n            return {\n              instance: Spacebars.call(view.lookup(\"instance\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"taxSettingsSubmitButton\"));\n          }), \"\\n      \" ];\n        });\n      }), \"\\n    \" ];\n    }), \"\\n    \"), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"taxSettingsSubmitButton\");\nTemplate[\"taxSettingsSubmitButton\"] = new Template(\"Template.taxSettingsSubmitButton\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"clearfix\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"pull-right\"\n  }, \"\\n      \", HTML.Raw('<button type=\"button\" class=\"btn btn-primary cancel\" data-i18n=\"app.cancel\">Cancel</button>'), \"\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"instance\"), \"state\", \"get\"), \"editingId\");\n  }, function() {\n    return [ \"\\n      \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-primary delete\",\n      \"data-i18n\": \"app.delete\"\n    }, \"Delete\"), \"\\n      \" ];\n  }), \"\\n      \", HTML.Raw('<button type=\"submit\" class=\"btn btn-primary\" data-i18n=\"app.saveChanges\">Save Changes</button>'), \"\\n    \"), \"\\n  \");\n}));\n","bodyAttrs":{}}