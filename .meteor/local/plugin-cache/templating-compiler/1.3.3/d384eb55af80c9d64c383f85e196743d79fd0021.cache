{"head":"","body":"","js":"\nTemplate.__checkName(\"button\");\nTemplate[\"button\"] = new Template(\"Template.button\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"element\")),\n      data: Spacebars.call(view.lookup(\"elementProps\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    }, function() {\n      return [ \"\\n    \", Blaze.If(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"toggle\"));\n      }, function() {\n        return [ \"\\n      \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"toggleOn\"));\n        }, function() {\n          return [ \"\\n      \", HTML.SPAN({\n            class: \"rui icon on\"\n          }, \"\\n        \", Blaze._TemplateWith(function() {\n            return {\n              component: Spacebars.call(view.lookup(\"iconComponent\")),\n              icon: Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"onIcon\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"React\"));\n          }), \"\\n      \"), \"\\n      \" ];\n        }, function() {\n          return [ \"\\n        \", HTML.SPAN({\n            class: \"rui icon\"\n          }, \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              component: Spacebars.call(view.lookup(\"iconComponent\")),\n              icon: Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"icon\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"React\"));\n          }), \"\\n        \"), \"\\n      \" ];\n        }), \"\\n    \" ];\n      }, function() {\n        return [ \"\\n      \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"icon\"));\n        }, function() {\n          return [ \"\\n        \", HTML.SPAN({\n            class: \"icon\"\n          }, \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              component: Spacebars.call(view.lookup(\"iconComponent\")),\n              icon: Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"icon\"))\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"React\"));\n          }), \"\\n        \"), \"\\n      \" ];\n        }), \"\\n    \" ];\n      }), \"\\n    \", HTML.SPAN({\n        class: \"title\"\n      }, \"\\n      \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"i18nKeyTitle\"));\n      }, function() {\n        return [ \"\\n        \", Blaze.View(\"lookup:i18n\", function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), view.lookup(\"i18nKeyTitle\"), view.lookup(\"title\"));\n        }), \"\\n      \" ];\n      }, function() {\n        return [ \"\\n        \", Blaze.View(\"lookup:title\", function() {\n          return Spacebars.mustache(view.lookup(\"title\"));\n        }), \"\\n      \" ];\n      }), \"\\n    \"), \"\\n  \" ];\n    });\n  });\n}));\n\nTemplate.__checkName(\"uiButtonElement\");\nTemplate[\"uiButtonElement\"] = new Template(\"Template.uiButtonElement\", (function() {\n  var view = this;\n  return HTML.BUTTON(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"buttonAttributes\"));\n  }), \"\\n    \", HTML.DIV({\n    class: \"contents\"\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"uiLinkElement\");\nTemplate[\"uiLinkElement\"] = new Template(\"Template.uiLinkElement\", (function() {\n  var view = this;\n  return HTML.A(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"buttonAttributes\"));\n  }), \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","bodyAttrs":{}}