{"head":"","body":"","js":"\nTemplate.__checkName(\"accountsDashboard\");\nTemplate[\"accountsDashboard\"] = new Template(\"Template.accountsDashboard\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasPermission\"), \"accounts\");\n  }, function() {\n    return [ \"\\n    \", HTML.DIV(\"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        component: Spacebars.call(view.lookup(\"accountsDashboard\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"React\"));\n    }), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"accountsSettings\");\nTemplate[\"accountsSettings\"] = new Template(\"Template.accountsSettings\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"services\")),\n      _variable: \"service\"\n    };\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"panel panel-default\"\n    }, \"\\n      \", HTML.DIV({\n      class: \"panel-heading panel-heading-flex\"\n    }, \"\\n        \", HTML.DIV({\n      class: \"panel-title\"\n    }, \"\\n          \", HTML.I({\n      class: function() {\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"service\"), \"name\")) ];\n      }\n    }), \"\\n          \", Blaze.View(\"lookup:service.label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"service\"), \"label\"));\n    }), \"\\n          \", HTML.SPAN({\n      \"data-i18n\": \"accountsUI.signIn\"\n    }, \"Sign In\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n      class: \"panel-controls\"\n    }, \"\\n          \", HTML.INPUT(HTML.Attrs({\n      class: \"checkbox-switch\",\n      type: \"checkbox\",\n      name: \"enabled\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"service\"), \"name\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"checked\"), Spacebars.dot(view.lookup(\"service\"), \"enabled\"));\n    })), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.DIV({\n      class: function() {\n        return [ \"panel-body \", Spacebars.mustache(view.lookup(\"shown\"), Spacebars.dot(view.lookup(\"service\"), \"enabled\")) ];\n      }\n    }, \"\\n        \", HTML.FORM({\n      name: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"service\"), \"name\")), \"Settings\" ];\n      }\n    }, \"\\n          \", HTML.INPUT({\n      type: \"hidden\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"service\"), \"name\"));\n      },\n      name: \"service\"\n    }), \"\\n          \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(Spacebars.dot(view.lookup(\"service\"), \"fields\")),\n        _variable: \"field\"\n      };\n    }, function() {\n      return [ \"\\n            \", HTML.DIV({\n        class: \"form-group \"\n      }, \"\\n              \", HTML.LABEL({\n        for: function() {\n          return [ Spacebars.mustache(view.lookup(\"name\")), \"SettingsClientId\" ];\n        }\n      }, HTML.SPAN({\n        \"data-i18n\": function() {\n          return [ \"loginServices.\", Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"property\")) ];\n        }\n      }, Blaze.View(\"lookup:field.label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"label\"));\n      }))), \"\\n\\n              \", HTML.DIV({\n        class: function() {\n          return Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"condition\"), Spacebars.dot(view.lookup(\"field\"), \"property\"), \"eq\", \"secret\");\n          }, function() {\n            return \"form-inline\";\n          });\n        }\n      }, \"\\n                \", HTML.INPUT({\n        class: \"form-control\",\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"service\"), \"name\")), \"SettingsClientId\" ];\n        },\n        type: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"type\"));\n        },\n        name: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"property\"));\n        },\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"valueForField\"), Spacebars.dot(view.lookup(\"field\"), \"property\"), view.lookup(\"service\"));\n        }\n      }), \"\\n\\n                \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"condition\"), Spacebars.dot(view.lookup(\"field\"), \"property\"), \"eq\", \"secret\");\n      }, function() {\n        return [ \"\\n                  \", HTML.BUTTON({\n          class: \"btn btn-default\",\n          type: \"button\",\n          \"data-event-action\": \"showSecret\"\n        }, \"Show\"), \"\\n                \" ];\n      }), \"\\n              \"), \"\\n\\n            \"), \"\\n          \" ];\n    }), \"\\n          \", HTML.DIV({\n      class: \"form-group\"\n    }, \"\\n            \", HTML.BUTTON({\n      class: \"btn btn-primary\",\n      type: \"submit\",\n      \"data-i18n\": \"app.updateSettings\"\n    }, \"Update Settings\"), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"panel panel-default\"\n    }, \"\\n      \", HTML.DIV({\n      class: \"panel-heading\"\n    }, \"\\n        \", HTML.DIV({\n      class: \"panel-title\",\n      \"data-i18n\": \"accountsDashboardControls.noAdditionalServices\"\n    }, \"No Additional login services available\"), \"\\n      \"), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","bodyAttrs":{}}