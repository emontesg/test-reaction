var require = meteorInstall({"imports":{"plugins":{"core":{"checkout":{"client":{"templates":{"checkout":{"addressBook":{"addressBook.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/addressBook/addressBook.html                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.addressBook.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.addressBook.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/addressBook/template.addressBook.js                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("checkoutAddressBook");
Template["checkoutAddressBook"] = new Template("Template.checkoutAddressBook", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("AddressBook"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addressBook.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/addressBook/addressBook.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Components;
module.watch(require("../../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 1);

/**
 * Helpers: Checkout Address Book
 */
Template.checkoutAddressBook.helpers({
  /**
   * @method AddressBook
   * @summary returns a component for updating a user's address.
   * @since 2.0.0
   * @return {Object} - contains the component for updating a user's address.
   */
  AddressBook: function () {
    var _Template$currentData = Template.currentData(),
        status = _Template$currentData.status,
        position = _Template$currentData.position;

    return {
      component: Components.AddressBook,
      heading: {
        defaultValue: "Choose shipping & billing address",
        i18nKey: "addressBookGrid.chooseAddress",
        checkout: {
          icon: status === true || status === this.template ? "active" : "",
          position: position
        }
      }
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"completed":{"completed.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/completed/completed.html                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.completed.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.completed.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/completed/template.completed.js                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("cartCompleted");
Template["cartCompleted"] = new Template("Template.cartCompleted", (function() {
  var view = this;
  return HTML.DIV({
    class: "completed-order-container"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("completedOrder"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completed.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/completed/completed.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var CompletedOrderContainer;
module.watch(require("../../../containers/completedOrderContainer"), {
  "default": function (v) {
    CompletedOrderContainer = v;
  }
}, 1);

/**
 * cartCompleted helpers
 *
 * if order status = new translate submitted message
 */
Template.cartCompleted.helpers({
  completedOrder: function () {
    return {
      component: CompletedOrderContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"login":{"login.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/login/login.html                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.login.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.login.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/login/template.login.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("checkoutLogin");
Template["checkoutLogin"] = new Template("Template.checkoutLogin", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("checkoutLoginCompleted"));
  }, function() {
    return [ "\n\n    ", Spacebars.include(view.lookupTemplate("checkoutLoggedIn")), "\n\n  " ];
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n\n      ", HTML.DIV({
      class: "panel-heading"
    }, "\n        ", Spacebars.include(view.lookupTemplate("checkoutStepBadge")), "\n\n        ", Blaze.If(function() {
      return Spacebars.call(view.lookup("allowGuestCheckout"));
    }, function() {
      return [ "\n          ", HTML.H3({
        class: "panel-title"
      }, "\n            ", HTML.SPAN({
        "data-i18n": "checkoutLogin.guestOrLogin"
      }, "Sign in, or checkout as a guest"), "\n          "), "\n        " ];
    }, function() {
      return [ "\n          ", HTML.H3({
        class: "panel-title"
      }, "\n            ", HTML.SPAN({
        "data-i18n": "checkoutLogin.createOrLogin"
      }, "Create an acccount, or sign in"), "\n          "), "\n        " ];
    }), "\n      "), "\n      ", HTML.DIV({
      class: "panel-body"
    }, "\n        ", Spacebars.include(view.lookupTemplate("loginInline")), "\n      "), "\n    "), "\n\n  " ];
  });
}));

Template.__checkName("checkoutLoggedIn");
Template["checkoutLoggedIn"] = new Template("Template.checkoutLoggedIn", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, "\n    ", HTML.DIV({
    class: "panel-heading"
  }, "\n      ", Spacebars.include(view.lookupTemplate("checkoutStepBadge")), "\n\n      ", HTML.Raw('<h3 class="panel-title">\n        <span data-i18n="checkoutLogin.loginCompleted">Account completed</span>\n      </h3>'), "\n    "), HTML.Raw('\n    <div class="panel-body">\n        <h3><span data-i18n="checkoutLogin.welcome">Welcome, it\'s so good to see you.</span></h3>\n    </div>\n  '));
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"login.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/login/login.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Cart;
module.watch(require("../../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 3);

/**
 * checkoutLoginCompleted
 * returns true if we've already past this stage,
 * or if the user is a guest but not anonymous
 */
Template.checkoutLogin.helpers({
  checkoutLoginCompleted: function () {
    var self = this;
    var cart = Cart.findOne();

    if (cart && cart.workflow) {
      var currentStatus = cart.workflow.status;
      var guestUser = Reaction.hasPermission("guest", Meteor.user()); // when you click as "continue as guest" you ARE still anonymous.
      // you are only NOT anonymous if you sign up or have supply an email. Hence
      // we check only that the user is at least guest before moving to next step.
      // since sign up users can still have guest permission.

      if (currentStatus !== self.template && guestUser === true) {
        return true;
      }
    }

    return false;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"progressBar":{"progressBar.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/progressBar/progressBar.html                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.progressBar.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.progressBar.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/progressBar/template.progressBar.js                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("checkoutProgressBar");
Template["checkoutProgressBar"] = new Template("Template.checkoutProgressBar", (function() {
  var view = this;
  return HTML.DIV({
    class: "checkout-progress-container"
  }, "\n    ", HTML.UL({
    class: "checkout-progress-bar"
  }, "\n\n      ", Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionTemplate"), Spacebars.kw({
      workflow: "coreCartWorkflow"
    }));
  }, function() {
    return [ "\n        ", Blaze.If(function() {
      return Spacebars.call(view.lookup("label"));
    }, function() {
      return [ "\n          ", HTML.LI({
        class: function() {
          return Spacebars.mustache(view.lookup("progressbarStatusClass"));
        }
      }, "\n            ", HTML.SPAN({
        class: "progress-step-badge"
      }, Blaze.View("lookup:position", function() {
        return Spacebars.mustache(view.lookup("position"));
      })), "\n            ", HTML.SPAN({
        class: "progress-step-label",
        "data-i18n": function() {
          return [ "checkoutProgressBar.", Spacebars.mustache(view.lookup("toCamelCase"), view.lookup("label")) ];
        }
      }, Blaze.View("lookup:label", function() {
        return Spacebars.mustache(view.lookup("label"));
      })), "\n          "), "\n        " ];
    }), "\n      " ];
  }), "\n\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"progressBar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/progressBar/progressBar.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 0);
var Cart;
module.watch(require("../../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);

/**
 * checkoutProgressBar helpers
 * progressbar status: "visited first","previous visited","active","next"
 */
Template.checkoutProgressBar.helpers({
  progressbarStatusClass: function () {
    var cartWorkflow = Cart.findOne().workflow;
    var thisStep = cartWorkflow.status === this.template; // active

    var previouslyVisited = _includes(cartWorkflow.workflow, this.template);

    if (previouslyVisited === true && thisStep === false) {
      return "visited";
    } else if (thisStep === true) {
      return "visited active";
    }

    return "";
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"review":{"review.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/review/review.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.review.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.review.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/review/template.review.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("checkoutReview");
Template["checkoutReview"] = new Template("Template.checkoutReview", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, "\n    ", HTML.DIV({
    class: "panel-heading"
  }, "\n      ", Spacebars.include(view.lookupTemplate("checkoutStepBadge")), "\n      ", HTML.Raw('<h3 class="panel-title" data-i18n="checkoutReview.review">Review</h3>'), "\n    "), "\n    ", HTML.DIV({
    class: "panel-body"
  }, "\n      ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("CartSubTotals"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"review.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/review/review.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./review.html"));
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var CartSubTotals;
module.watch(require("../../../containers/cartSubTotalContainer"), {
  "default": function (v) {
    CartSubTotals = v;
  }
}, 2);

/**
* review status
* trigger checkoutPayment step on template checkoutReview render
*/
Template.checkoutReview.onRendered(function () {
  Meteor.call("workflow/pushCartWorkflow", "coreCartWorkflow", "checkoutReview");
});
Template.checkoutReview.helpers({
  CartSubTotals: function () {
    return CartSubTotals;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"checkout.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/checkout.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.checkout.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.checkout.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/template.checkout.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("cartCheckout");
Template["cartCheckout"] = new Template("Template.cartCheckout", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("cartCount"));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "checkout-progress"
    }, "\n      ", HTML.DIV({
      class: "container"
    }, "\n        ", Spacebars.include(view.lookupTemplate("checkoutProgressBar")), "\n      "), "\n    "), "\n\n    ", HTML.DIV({
      class: "checkout"
    }, "\n      ", HTML.DIV({
      class: "container container-lg"
    }, "\n        ", HTML.DIV({
      class: "checkout-steps"
    }, "\n          ", HTML.DIV({
      class: "checkout-steps-main"
    }, "\n            ", Blaze.Each(function() {
      return Spacebars.dataMustache(view.lookup("reactionTemplate"), Spacebars.kw({
        workflow: "coreCartWorkflow",
        container: "checkout-steps-main"
      }));
    }, function() {
      return [ "\n              ", Spacebars.include(view.lookupTemplate("checkoutSteps")), "\n            " ];
    }), "\n          "), "\n\n          ", HTML.DIV({
      class: "checkout-steps-side"
    }, "\n            ", Blaze.Each(function() {
      return Spacebars.dataMustache(view.lookup("reactionTemplate"), Spacebars.kw({
        workflow: "coreCartWorkflow",
        container: "checkout-steps-side"
      }));
    }, function() {
      return [ "\n              ", Spacebars.include(view.lookupTemplate("checkoutSteps")), "\n            " ];
    }), "\n          "), "\n        "), "\n      "), "\n    "), "\n  " ];
  }, function() {
    return [ "\n    ", Spacebars.include(view.lookupTemplate("emptyCheckoutCart")), "\n  " ];
  });
}));

Template.__checkName("checkoutSteps");
Template["checkoutSteps"] = new Template("Template.checkoutSteps", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("isPending"));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "checkout-step"
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template"))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n      "), "\n\n    " ];
  }, function() {
    return [ "\n\n      ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isCompleted"));
    }, function() {
      return [ "\n        ", HTML.DIV({
        class: "checkout-step-completed"
      }, "\n          ", Blaze._TemplateWith(function() {
        return {
          template: Spacebars.call(view.lookup("template"))
        };
      }, function() {
        return Spacebars.include(function() {
          return Spacebars.call(Template.__dynamic);
        });
      }), "\n        "), "\n      " ];
    }, function() {
      return [ "\n        ", HTML.DIV({
        class: "checkout-step-pending"
      }, "\n          ", Spacebars.include(view.lookupTemplate("checkoutStepPending")), "\n        "), "\n      " ];
    }), "\n\n    " ];
  });
}));

Template.__checkName("checkoutStepPending");
Template["checkoutStepPending"] = new Template("Template.checkoutStepPending", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, "\n    ", HTML.DIV({
    class: "panel-heading"
  }, "\n      ", Spacebars.include(view.lookupTemplate("checkoutStepBadge")), "\n    "), "\n  ");
}));

Template.__checkName("emptyCheckoutCart");
Template["emptyCheckoutCart"] = new Template("Template.emptyCheckoutCart", (function() {
  var view = this;
  return HTML.Raw('<div class="container-fluid-sm">\n    <div class="empty-view-message">\n      <i class="fa fa-barcode"></i>\n      <p data-i18n="cartCheckout.surprise">Woah!</p>\n      <p data-i18n="cartCheckout.emptyCheckoutCart">Your cart is empty.</p>\n    </div>\n  </div>');
}));

Template.__checkName("checkoutStepBadge");
Template["checkoutStepBadge"] = new Template("Template.checkoutStepBadge", (function() {
  var view = this;
  return HTML.I({
    class: function() {
      return [ "checkout-step-badge ", Spacebars.mustache(view.lookup("checkoutStepBadgeClass")) ];
    }
  }, Blaze.View("lookup:position", function() {
    return Spacebars.mustache(view.lookup("position"));
  }));
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"checkout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/checkout/checkout.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 0);
var Cart;
module.watch(require("../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 3);
module.watch(require("./checkout.html"));
//
// cartCheckout is a wrapper template
// controlling the load order of checkout step templates
//
Template.cartCheckout.helpers({
  cart: function () {
    if (Reaction.Subscriptions.Cart.ready()) {
      return Cart.findOne();
    }

    return {};
  },
  cartCount: function () {
    var cart = Cart.findOne();

    if (cart.items && cart.items.length > 0) {
      return true;
    }

    return false;
  }
});
Template.cartCheckout.onCreated(function () {
  if (Reaction.Subscriptions.Cart.ready()) {
    var cart = Cart.findOne();

    if (cart && cart.workflow && cart.workflow.status === "new") {
      // if user logged in as normal user, we must pass it through the first stage
      Meteor.call("workflow/pushCartWorkflow", "coreCartWorkflow", "checkoutLogin", cart._id);
    }
  }
});
/**
 * checkoutSteps Helpers
 * helper isPending evaluates that this is
 * the current step, or has been processed already
 */

Template.checkoutSteps.helpers({
  isCompleted: function () {
    if (this.status === true) {
      return this.status;
    }

    return false;
  },
  isPending: function () {
    if (this.status === this.template) {
      return this.status;
    }

    return false;
  }
});
/**
 * checkoutStepBadge Helpers
 */

Template.checkoutStepBadge.helpers({
  checkoutStepBadgeClass: function () {
    var workflowStep = Template.instance().data; // let currentStatus = Cart.findOne().workflow.status;

    if (workflowStep.status === true || workflowStep.status === this.template) {
      return "active";
    }

    return "";
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"cartDrawer":{"cartDrawer.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.html                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.cartDrawer.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.cartDrawer.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/cartDrawer/template.cartDrawer.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("cartDrawer");
Template["cartDrawer"] = new Template("Template.cartDrawer", (function() {
  var view = this;
  return HTML.DIV({
    id: "cart-drawer-container"
  }, "\n    ", Spacebars.include(view.lookupTemplate("displayCartDrawer")), "\n  ");
}));

Template.__checkName("emptyCartDrawer");
Template["emptyCartDrawer"] = new Template("Template.emptyCartDrawer", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("EmptyCartDrawer"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

Template.__checkName("openCartDrawer");
Template["openCartDrawer"] = new Template("Template.openCartDrawer", (function() {
  var view = this;
  return HTML.DIV({
    class: "cart-drawer",
    id: "cart-drawer"
  }, "\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("CartDrawerContainer"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartDrawer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Swiper;
module.watch(require("swiper"), {
  "default": function (v) {
    Swiper = v;
  }
}, 0);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var Cart;
module.watch(require("../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 3);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 4);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 5);

/**
 * cartDrawer helpers
 *
 * @provides displayCartDrawer
 * @returns  open or closed cart drawer template
 */
Template.cartDrawer.helpers({
  displayCartDrawer: function () {
    if (!Session.equals("displayCart", true)) {
      return null;
    }

    var storedCart = Cart.findOne();
    var count = 0;

    if ((0, _typeof2.default)(storedCart) === "object" && storedCart.items) {
      for (var _iterator = storedCart.items, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _items = _ref;
        count += _items.quantity;
      }
    }

    if (count === 0) {
      return Template.emptyCartDrawer;
    }

    return Template.openCartDrawer;
  }
});
/**
 * openCartDrawer helpers
 *
 */

Template.openCartDrawer.onRendered(function () {
  /**
   * Add swiper to openCartDrawer
   *
   */
  var swiper;
  $("#cart-drawer-container").fadeIn(function () {
    if (!swiper) {
      swiper = new Swiper(".cart-drawer-swiper-container", {
        direction: "horizontal",
        setWrapperSize: true,
        loop: false,
        grabCursor: true,
        slidesPerView: "auto",
        wrapperClass: "cart-drawer-swiper-wrapper",
        slideClass: "cart-drawer-swiper-slide",
        slideActiveClass: "cart-drawer-swiper-slide-active",
        pagination: ".cart-drawer-pagination",
        paginationClickable: true
      });
    }
  });
});
Template.openCartDrawer.helpers({
  CartDrawerContainer: function () {
    return Components.CartDrawer;
  }
});
Template.emptyCartDrawer.onRendered(function () {
  return $("#cart-drawer-container").fadeIn();
});
Template.emptyCartDrawer.helpers({
  EmptyCartDrawer: function () {
    return Components.EmptyCartDrawer;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"cartIcon":{"cartIcon.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/cartIcon/cartIcon.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.cartIcon.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.cartIcon.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/cartIcon/template.cartIcon.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("cartIcon");
Template["cartIcon"] = new Template("Template.cartIcon", (function() {
  var view = this;
  return Spacebars.With(function() {
    return Spacebars.call(view.lookup("cart"));
  }, function() {
    return [ "\n  ", HTML.DIV({
      class: "cart-icon"
    }, "\n    ", HTML.SPAN({
      "data-event-category": "cart",
      "data-event-action": "cart-click",
      "data-event-label": "cart toggle click",
      "data-event-value": function() {
        return Spacebars.mustache(view.lookup("_id"));
      }
    }, "\n      ", HTML.I({
      class: "fa fa-shopping-cart fa-2x"
    }), "\n    "), "\n    ", Blaze.If(function() {
      return Spacebars.call(view.lookup("showCartIconWarning"));
    }, function() {
      return [ "\n    ", HTML.DIV({
        class: "badge badge-warning"
      }, "!"), "\n    " ];
    }), "\n    ", HTML.DIV({
      class: "badge"
    }, Blaze.View("lookup:orElse", function() {
      return Spacebars.mustache(view.lookup("orElse"), view.lookup("cartCount"), 0);
    })), "\n  "), "\n" ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartIcon.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/templates/cartIcon/cartIcon.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);
var Cart;
module.watch(require("../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 2);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 3);

/**
 * cartIcon helpers
 *
 */
Template.cartIcon.helpers({
  cart: function () {
    return Cart.findOne();
  }
});
Template.cartIcon.events({
  "click .cart-icon": function () {
    return $("#cart-drawer-container").fadeOut(300, function () {
      return Reaction.toggleSession("displayCart");
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"components":{"addEmail.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/addEmail.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Orders;
module1.watch(require("../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 3);
var Reaction, i18next;
module1.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Components;
module1.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 5);

/**
 * @file AddEmail React Component allows user to add an email after completing an order
 *
 * @module AddEmail
 * @extends Component
 */
var AddEmail =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AddEmail, _Component);

  function AddEmail(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.state = {
      hasEmail: !!_this.props.orderEmail,
      order: _this.props.order
    };
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleFieldChange = _this.handleFieldChange.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  /**
   * @name handleFieldChange()
   * @method
   * @summary handle setting state whenever the field on the form change
   * @param {Event} event - the event that fired
   * @param {String} value - the new value for the field
   * @param {String} field - which field to modify it's value
   * @return {null} null
   */


  var _proto = AddEmail.prototype;

  /**
   * @name handleSubmit()
   * @method
   * @summary Handle submitting the email form
   * @param {Event} event - the event that fired
   * @returns {null} null
   */
  _proto.handleSubmit = function () {
    function handleSubmit(event) {
      var _this2 = this;

      event.preventDefault();
      var cartId = Reaction.Router.getQueryParam("_id");
      Meteor.call("orders/addOrderEmail", cartId, this.state.email, function (err, results) {
        if (err) {
          Alerts.toast(i18next.t("mail.alerts.cantSendEmail"), "error");
        } else {
          // we need to re-grab order here so it has the email
          var order = Orders.findOne({
            userId: Meteor.userId(),
            cartId: cartId
          });
          Meteor.call("orders/sendNotification", order, function (error) {
            if (!error) {
              Alerts.toast(i18next.t("mail.alerts.emailSent"), "success");

              _this2.setState({
                hasEmail: true
              });
            } else {
              Alerts.toast(i18next.t("mail.alerts.addOrderEmailFailed"), "error");
            }
          });
        }

        return results;
      });
    }

    return handleSubmit;
  }();

  _proto.render = function () {
    function render() {
      if (this.state.hasEmail) {
        return React.createElement("p", null, React.createElement(Components.Translation, {
          defaultValue: "Order updates will be sent to",
          i18nKey: "cartCompleted.trackYourDelivery"
        }), "\xA0", React.createElement("strong", null, this.props.orderEmail));
      }

      return React.createElement("div", {
        className: "order-details-email-box-container"
      }, React.createElement("div", {
        className: "order-details-email-box"
      }, React.createElement("form", {
        onSubmit: this.handleSubmit,
        className: "add-email-input"
      }, React.createElement(Components.Translation, {
        defaultValue: "Hello! Add an email and receive order updates",
        i18nKey: "{cartCompleted.registerGuest}"
      }), React.createElement("div", null, React.createElement(Components.TextField, {
        name: "email",
        type: "email",
        value: this.state.email,
        onChange: this.handleFieldChange
      }), React.createElement(Components.Button, {
        type: "submit",
        label: "Add Email",
        bezelStyle: "solid",
        onClick: this.handleSubmit
      })))), React.createElement("div", {
        className: "order-details-email-box-side"
      }));
    }

    return render;
  }();

  return AddEmail;
}(Component);
/**
 * @name AddEmail propTypes
 * @type {propTypes}
 * @param {Object} props - React PropTypes
 * @property {Object} order - An object representing the order
 * @property {String} orderEmail - a string containing the email attached to the order if it exists
 * @return {Node} React node containing input box when no email has been attached to the order
 */


AddEmail.propTypes = {
  order: PropTypes.object,
  orderEmail: PropTypes.string
};
module1.exportDefault(AddEmail);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartDrawer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/cartDrawer.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var CartDrawer = function (_ref) {
  var productItems = _ref.productItems,
      pdpPath = _ref.pdpPath,
      handleRemoveItem = _ref.handleRemoveItem,
      handleCheckout = _ref.handleCheckout,
      handleImage = _ref.handleImage,
      handleLowInventory = _ref.handleLowInventory,
      handleShowProduct = _ref.handleShowProduct;
  return React.createElement("div", null, React.createElement("div", {
    className: "cart-drawer-swiper-container"
  }, React.createElement("div", {
    className: "cart-drawer-swiper-wrapper"
  }, React.createElement("div", {
    className: "cart-drawer-swiper-slide"
  }, React.createElement(Components.CartSubTotal, null)), productItems.map(function (item) {
    return React.createElement("div", {
      className: "cart-drawer-swiper-slide",
      key: item._id
    }, React.createElement(Components.CartItems, {
      item: item,
      pdpPath: pdpPath,
      handleLowInventory: handleLowInventory,
      handleImage: handleImage,
      handleRemoveItem: handleRemoveItem,
      handleShowProduct: handleShowProduct
    }));
  }))), React.createElement("div", {
    className: "cart-drawer-pagination"
  }), React.createElement("div", {
    className: "row"
  }, React.createElement(Components.Button, {
    bezelStyle: "solid",
    className: {
      "btn-lg": true,
      "btn-block": true
    },
    status: "cta",
    id: "btn-checkout",
    label: "Checkout now",
    i18nKeyLabel: "cartDrawer.checkout",
    onClick: handleCheckout
  })));
};

CartDrawer.propTypes = {
  handleCheckout: PropTypes.func,
  handleImage: PropTypes.func,
  handleLowInventory: PropTypes.func,
  handleRemoveItem: PropTypes.func,
  handleShowProduct: PropTypes.func,
  pdpPath: PropTypes.func,
  productItems: PropTypes.array
};
module.exportDefault(CartDrawer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartIcon.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/cartIcon.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var CartIcon = function (_ref) {
  var handleClick = _ref.handleClick,
      cart = _ref.cart;
  return React.createElement(Components.Button, {
    tagName: "div",
    className: {
      "btn": false,
      "btn-default": false,
      "cart-icon": true
    },
    onClick: handleClick
  }, React.createElement("span", {
    "data-event-category": "cart"
  }, React.createElement("i", {
    className: "fa fa-shopping-cart fa-2x"
  })), React.createElement("div", {
    className: "badge"
  }, cart ? cart.getCount() : 0));
};

CartIcon.propTypes = {
  cart: PropTypes.object,
  handleClick: PropTypes.func.isRequired
};
module.exportDefault(CartIcon);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartItems.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/cartItems.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var CartItems =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(CartItems, _Component);

  function CartItems() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (typeof _this.props.handleShowProduct === "function") {
        _this.props.handleShowProduct(_this.props.item);
      }
    }, _this.removalClick = function (event) {
      event.preventDefault();

      if (typeof _this.props.handleRemoveItem === "function") {
        _this.props.handleRemoveItem(event, _this.props.item);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = CartItems.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          handleLowInventory = _props.handleLowInventory,
          pdpPath = _props.pdpPath,
          handleImage = _props.handleImage,
          item = _props.item;
      var mediaUrl = handleImage(item);
      return React.createElement("div", {
        className: "cart-items",
        key: item._id,
        style: {
          display: "inline-block"
        }
      }, handleLowInventory(item) && React.createElement("div", {
        className: "badge badge-top badge-low-inv-warning"
      }, React.createElement(Components.Translation, {
        i18nKey: "cartDrawerItems.limitedSupply",
        defaultValue: "Limited supply"
      })), React.createElement(Components.IconButton, {
        icon: "fa fa-times fa-lg remove-cart-item",
        onClick: this.removalClick,
        kind: "removeItem"
      }), React.createElement("a", {
        href: pdpPath(item),
        "data-event-action": "product-click",
        "data-event-value": item.productId,
        onClick: this.handleClick
      }, mediaUrl ? React.createElement("div", {
        className: "center-cropped",
        style: {
          backgroundImage: "url('" + mediaUrl + "')"
        }
      }, React.createElement("img", {
        src: mediaUrl,
        className: "product-grid-item-images img-responsive",
        alt: ""
      })) : React.createElement("div", {
        className: "center-cropped",
        style: {
          backgroundImage: "url('/resources/placeholder.gif')"
        }
      }, React.createElement("img", {
        src: "/resources/placeholder.gif",
        className: "product-grid-item-images img-responsive",
        alt: ""
      }))), React.createElement("div", {
        className: "cart-labels"
      }, React.createElement("div", null, React.createElement("span", {
        className: "badge",
        style: {
          marginRight: "3px"
        }
      }, item.quantity), React.createElement("span", {
        className: "cart-item-title"
      }, item.title, React.createElement("br", null), React.createElement("small", null, item.variants.title)))));
    }

    return render;
  }();

  return CartItems;
}(Component);

CartItems.propTypes = {
  handleImage: PropTypes.func,
  handleLowInventory: PropTypes.func,
  handleRemoveItem: PropTypes.func,
  handleShowProduct: PropTypes.func,
  item: PropTypes.object,
  pdpPath: PropTypes.func
};
registerComponent("CartItems", CartItems);
module.exportDefault(CartItems);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartPanel.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/cartPanel.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var CartPanel = function (props) {
  return React.createElement("div", {
    style: {
      textAlign: "center"
    }
  }, React.createElement("span", {
    id: "spin"
  }, React.createElement("i", {
    className: "fa fa-circle-o-notch fa-spin fa-3x fa-fw",
    style: {
      marginBottom: "10px",
      marginTop: "10px",
      fontSize: "2.65em"
    }
  })), React.createElement("div", {
    className: "cart-alert-text"
  }), React.createElement("div", {
    className: "cart-alert-checkout"
  }, React.createElement(Components.Button, {
    id: "btn-checkout",
    bezelStyle: "solid",
    className: "btn-lg btn-block",
    i18nKeyLabel: "cartDrawer.checkout",
    label: "Checkout now",
    onClick: props.onClick || props.checkout,
    status: "success"
  })));
};

CartPanel.propTypes = {
  checkout: PropTypes.func,
  onClick: PropTypes.func
};
module.exportDefault(CartPanel);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartSubTotal.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/cartSubTotal.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);

var CartSubTotal =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(CartSubTotal, _Component);

  function CartSubTotal(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = (0, _objectSpread2.default)({}, props);
    return _this;
  }

  var _proto = CartSubTotal.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState((0, _objectSpread2.default)({}, nextProps));
    }

    return componentWillReceiveProps;
  }();

  _proto.validateDiscount = function () {
    function validateDiscount() {
      if (Number(this.source.cartDiscount) > 0) {
        return React.createElement("tr", null, React.createElement("td", null, React.createElement(Components.Translation, {
          defaultValue: "Discount",
          i18nKey: "cartSubTotals.discount"
        })), React.createElement("td", null, React.createElement(Components.Currency, {
          amount: this.source.cartDiscount
        })));
      }
    }

    return validateDiscount;
  }();

  _proto.validateShipping = function () {
    function validateShipping() {
      if (Number(this.source.cartShipping) > 0) {
        return React.createElement("tr", null, React.createElement("td", null, React.createElement(Components.Translation, {
          defaultValue: "Shipping",
          i18nKey: "cartSubTotals.shipping"
        })), React.createElement("td", null, React.createElement(Components.Currency, {
          amount: this.source.cartShipping
        })));
      }
    }

    return validateShipping;
  }();

  _proto.validateTaxes = function () {
    function validateTaxes() {
      if (Number(this.source.cartTaxes) > 0) {
        return React.createElement("tr", null, React.createElement("td", null, React.createElement(Components.Translation, {
          defaultValue: "Tax",
          i18nKey: "cartSubTotals.tax"
        })), React.createElement("td", null, React.createElement(Components.Currency, {
          amount: this.source.cartTaxes
        })));
      }
    }

    return validateTaxes;
  }();

  _proto.render = function () {
    function render() {
      var isLoading = this.props.isLoading;
      var tableClass = classnames({
        "table": true,
        "table-condensed": true,
        "loading": isLoading
      });
      return React.createElement("div", {
        className: "cart-items"
      }, React.createElement("div", {
        className: "cart-totals"
      }, isLoading && React.createElement(Components.Loading, null), React.createElement("table", {
        className: tableClass
      }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, React.createElement(Components.Translation, {
        defaultValue: "Your cart",
        i18nKey: "cartSubTotals.head"
      })))), React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, React.createElement(Components.Translation, {
        defaultValue: "Items in cart",
        i18nKey: "cartSubTotals.items"
      })), React.createElement("td", null, this.source.cartCount)), React.createElement("tr", null, React.createElement("td", null, React.createElement(Components.Translation, {
        defaultValue: "Sub total",
        i18nKey: "cartSubTotals.subtotal"
      })), React.createElement("td", null, React.createElement(Components.Currency, {
        amount: this.source.cartSubTotal
      }))), this.validateDiscount(), this.validateShipping(), this.validateTaxes(), React.createElement("tr", null, React.createElement("td", null, React.createElement(Components.Translation, {
        defaultValue: "Total",
        i18nKey: "cartSubTotals.total"
      })), React.createElement("td", null, React.createElement(Components.Currency, {
        amount: this.source.cartTotal
      })))))));
    }

    return render;
  }();

  (0, _createClass2.default)(CartSubTotal, [{
    key: "source",
    get: function () {
      return this.props.isLoading ? this.state : this.props;
    }
  }]);
  return CartSubTotal;
}(Component);

CartSubTotal.propTypes = {
  cartCount: PropTypes.number,
  cartDiscount: PropTypes.string,
  cartShipping: PropTypes.string,
  cartSubTotal: PropTypes.string,
  cartTaxes: PropTypes.string,
  cartTotal: PropTypes.string,
  isLoading: PropTypes.bool
};
module.exportDefault(CartSubTotal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completedOrder.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/completedOrder.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var CompletedShopOrders;
module.watch(require("./completedShopOrders"), {
  "default": function (v) {
    CompletedShopOrders = v;
  }
}, 3);
var CompletedOrderPaymentMethod;
module.watch(require("./completedOrderPaymentMethods"), {
  "default": function (v) {
    CompletedOrderPaymentMethod = v;
  }
}, 4);
var CompletedOrderSummary;
module.watch(require("./completedOrderSummary"), {
  "default": function (v) {
    CompletedOrderSummary = v;
  }
}, 5);
var AddEmail;
module.watch(require("./addEmail"), {
  "default": function (v) {
    AddEmail = v;
  }
}, 6);

/**
 * @summary Displays a summary/information about the order the user has just completed
 * @param {Object} props - React PropTypes
 * @property {Object} order - An object representing the order
 * @property {Array} shops - An Array contains information broken down by shop
 * @property {Object} orderSummary - An object containing the items making up the order summary
 * @property {Array} paymentMethod - An array of paymentMethod objects
 * @property {Booleam} isProfilePage - A boolean value that checks if current page is user profile page
 * @return {Node} React node containing the top-level component for displaying the completed order/receipt page
 */
var CompletedOrder = function (_ref) {
  var order = _ref.order,
      shops = _ref.shops,
      orderSummary = _ref.orderSummary,
      paymentMethods = _ref.paymentMethods,
      isProfilePage = _ref.isProfilePage;

  if (!order) {
    return React.createElement(Components.NotFound, {
      i18nKeyTitle: "order.notFound",
      icon: "fa fa-barcode",
      title: "Order Not Found"
    });
  }

  var headerText;

  if (isProfilePage) {
    headerText = React.createElement("p", {
      className: "order-id"
    }, React.createElement("strong", null, "Order ID "), order._id);
  } else {
    headerText = React.createElement("div", {
      className: "order-details-header"
    }, React.createElement("h3", null, React.createElement(Components.Translation, {
      defaultValue: "Thank You",
      i18nKey: "cartCompleted.thankYou"
    })), React.createElement("p", null, React.createElement("strong", null, "Order ID "), order._id), React.createElement(AddEmail, {
      order: order,
      orderEmail: order.email
    }));
  }

  return React.createElement("div", {
    className: "container order-completed"
  }, headerText, React.createElement("div", {
    className: "order-details-main"
  }, React.createElement("div", {
    className: "order-details-content-title"
  }, React.createElement("p", null, React.createElement(Components.Translation, {
    defaultValue: "Your Items",
    i18nKey: "cartCompleted.yourItems"
  }))), shops.map(function (shop) {
    var shopKey = Object.keys(shop);
    return React.createElement(CompletedShopOrders, {
      shopName: shop[shopKey].name,
      items: shop[shopKey].items,
      key: shopKey,
      shippingMethod: shop[shopKey].shippingMethod,
      isProfilePage: isProfilePage
    });
  })), React.createElement("div", {
    className: "order-details-side"
  }, React.createElement("div", {
    className: "shipping-payment-details"
  }, React.createElement("div", {
    className: "shipping-info"
  }, React.createElement("div", {
    className: "order-details-content-title"
  }, React.createElement("p", null, " ", React.createElement(Components.Translation, {
    defaultValue: "Shipping Address",
    i18nKey: "cartCompleted.shippingAddress"
  }))), orderSummary.shipping.map(function (shipment) {
    if (shipment.address.fullName || shipment.address.address1) {
      return React.createElement("div", {
        className: "order-details-info-box",
        key: shipment._id
      }, React.createElement("div", {
        className: "order-details-info-box-content"
      }, React.createElement("p", null, shipment.address.fullName, React.createElement("br", null), shipment.address.address1, " ", shipment.address.address2, React.createElement("br", null), shipment.address.city, ", ", shipment.address.region, " ", shipment.address.postal, " ", shipment.address.country)));
    }

    return null;
  })), React.createElement("div", {
    className: "payment-info"
  }, React.createElement("div", {
    className: "order-details-content-title"
  }, React.createElement("p", null, React.createElement(Components.Translation, {
    defaultValue: "Payment Method",
    i18nKey: "cartCompleted.paymentMethod"
  }))), paymentMethods.map(function (paymentMethod) {
    return React.createElement(CompletedOrderPaymentMethod, {
      key: paymentMethod.key,
      paymentMethod: paymentMethod
    });
  }))), React.createElement(CompletedOrderSummary, {
    shops: shops,
    orderSummary: orderSummary,
    isProfilePage: isProfilePage
  })));
};

CompletedOrder.propTypes = {
  isProfilePage: PropTypes.bool,
  order: PropTypes.object,
  orderSummary: PropTypes.object,
  paymentMethods: PropTypes.array,
  shops: PropTypes.array
};
module.exportDefault(CompletedOrder);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completedOrderItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/completedOrderItem.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var getPrimaryMediaForOrderItem;
module.watch(require("../../../../../../lib/api"), {
  getPrimaryMediaForOrderItem: function (v) {
    getPrimaryMediaForOrderItem = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

/**
 * @summary Shows the individual line items for a completed order
 * @param {Object} props - React PropTypes
 * @property {Object} item - An object representing each item on the order
 * @return {Node} React node containing each line item on an order
 */
var CompletedOrderItem = function (_ref) {
  var item = _ref.item;
  return React.createElement("div", {
    className: "row order-details-line"
  }, React.createElement("div", {
    className: "order-details-media"
  }, React.createElement(Components.ProductImage, {
    item: item,
    displayMedia: getPrimaryMediaForOrderItem,
    size: "small",
    badge: false
  })), React.createElement("div", {
    className: "order-details-title"
  }, item.product.title, React.createElement("p", null, item.variants.title)), React.createElement("div", {
    className: "order-details-quantity"
  }, React.createElement("span", null, item.quantity)), React.createElement("div", {
    className: "order-details-price"
  }, React.createElement(Components.Currency, {
    amount: item.variants.price
  })));
};

CompletedOrderItem.propTypes = {
  item: PropTypes.object
};
registerComponent("CompletedOrderItem", CompletedOrderItem);
module.exportDefault(CompletedOrderItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completedOrderPaymentMethods.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/completedOrderPaymentMethods.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var creditCardClasses = {
  VISA: "fa fa-cc-visa",
  MAST: "fa fa-cc-mastercard",
  DISC: "fa fa-cc-discover",
  AMEX: "fa fa-cc-amex"
};
/**
 * @summary Displays one of possibly many payment methods on an order
 * @param {Object} props - React PropTypes
 * @property {Object} paymentMethod - An object representing the payment method
 * @return {Node} React node containing each payment method
 */

var CompletedOrderPaymentMethod = function (_ref) {
  var paymentMethod = _ref.paymentMethod;
  // allow i18n override for "processor" label
  var i18nKey = "checkout.paymentMethod." + paymentMethod.processor; // display stored card methods

  if (paymentMethod.method === "credit" && paymentMethod.storedCard) {
    var creditCardType = paymentMethod.storedCard.substring(0, 4).toUpperCase();
    var creditCardClass = creditCardClasses[creditCardType];
    return React.createElement("div", {
      className: "order-details-info-box"
    }, React.createElement("div", {
      className: "order-details-info-box-content"
    }, React.createElement("p", {
      className: "order-details-payment-method"
    }, React.createElement("i", {
      className: creditCardClass
    }), " \xA0\xA0", paymentMethod.storedCard)));
  }

  return React.createElement("div", {
    className: "order-details-info-box"
  }, React.createElement("div", {
    className: "order-details-info-box-content"
  }, React.createElement("p", {
    className: "order-details-payment-method"
  }, React.createElement(Components.Translation, {
    defaultValue: paymentMethod.processor,
    i18nKey: i18nKey
  }))));
};

CompletedOrderPaymentMethod.propTypes = {
  paymentMethod: PropTypes.object
};
registerComponent("CompletedOrderPaymentMethod", CompletedOrderPaymentMethod);
module.exportDefault(CompletedOrderPaymentMethod);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completedOrderSummary.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/completedOrderSummary.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var ShopOrderSummary;
module.watch(require("./shopOrderSummary"), {
  "default": function (v) {
    ShopOrderSummary = v;
  }
}, 3);

/**
 * @summary Display the summary/total information for an order
 * @param {Object} props - React PropTypes
 * @property {Array} shops - An array of summary information broken down by shop
 * @property {Object} orderSummary - An object representing the "bottom line" summary for the order
 * @property {boolean} isProfilePage - Checks if current page is Profile Page
 * @return {Node} React node containing the order summary broken down by shop
 */
var CompletedOrderSummary = function (_ref) {
  var shops = _ref.shops,
      orderSummary = _ref.orderSummary,
      isProfilePage = _ref.isProfilePage;
  return React.createElement("div", null, React.createElement("div", {
    className: "order-details-content-title"
  }, React.createElement("p", null, React.createElement(Components.Translation, {
    defaultValue: "Order Summary",
    i18nKey: "cartCompleted.orderSummary"
  }))), React.createElement("div", {
    className: "order-details-info-box"
  }, shops.map(function (shop) {
    var shopKey = Object.keys(shop);
    return React.createElement(ShopOrderSummary, {
      shopSummary: shop[shopKey],
      key: shopKey,
      isProfilePage: isProfilePage
    });
  }), React.createElement("hr", null), orderSummary.discounts > 0 && React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-discount-title"
  }, React.createElement(Components.Translation, {
    defaultValue: "Discount Total",
    i18nKey: "cartCompleted.discountTotal"
  })), React.createElement("div", {
    className: "order-summary-discount-value"
  }, React.createElement(Components.Currency, {
    amount: orderSummary.discounts
  }))), React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-total-title"
  }, React.createElement(Components.Translation, {
    defaultValue: "Order Total",
    i18nKey: "cartCompleted.orderTotal"
  })), React.createElement("div", {
    className: "order-summary-total-value"
  }, React.createElement(Components.Currency, {
    amount: orderSummary.total
  })))));
};

CompletedOrderSummary.propTypes = {
  isProfilePage: PropTypes.bool,
  orderSummary: PropTypes.object,
  shops: PropTypes.array
};
registerComponent("CompletedOrderSummary", CompletedOrderSummary);
module.exportDefault(CompletedOrderSummary);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completedShopOrders.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/completedShopOrders.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var CompletedOrderItem;
module.watch(require("./completedOrderItem"), {
  "default": function (v) {
    CompletedOrderItem = v;
  }
}, 3);

/**
 * @summary Displays the order breakdown for each Shop
 * @param {Object} props - React PropTypes
 * @property {String} shopName - The name of the shop
 * @property {Array} items - an array of individual items for this shop
 * @property {boolean} isProfilePage - Checks if current page is profile page
 * @return {Node} React node containing the break down of the order by Shop
 */
var CompletedShopOrders = function (_ref) {
  var shopName = _ref.shopName,
      items = _ref.items,
      shippingMethod = _ref.shippingMethod,
      isProfilePage = _ref.isProfilePage;
  var shippingName = isProfilePage ? React.createElement("span", null, React.createElement("strong", null, shippingMethod.label), shippingMethod.deliveryDate && React.createElement("span", null, " - estimated delivery ", shippingMethod.deliveryDate)) : shippingMethod.carrier + " - " + shippingMethod.label;
  return React.createElement("div", {
    className: "order-details-shop-breakdown"
  }, React.createElement("div", {
    className: "order-details-info-box"
  }, React.createElement("div", {
    className: "store-detail-box"
  }, React.createElement("span", {
    className: "order-details-store-title"
  }, shopName), React.createElement("span", {
    className: "order-details-shipping-name"
  }, shippingName))), React.createElement("div", {
    className: "order-details-info-box-topless"
  }, items.map(function (item) {
    return React.createElement(CompletedOrderItem, {
      item: item,
      key: item._id
    });
  })));
};

CompletedShopOrders.propTypes = {
  isProfilePage: PropTypes.bool,
  items: PropTypes.array,
  order: PropTypes.object,
  shippingMethod: PropTypes.object,
  shopName: PropTypes.string
};
registerComponent("CompletedShopOrders", CompletedShopOrders);
module.exportDefault(CompletedShopOrders);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emptyCartDrawer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/emptyCartDrawer.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);

function handleKeepShopping(event) {
  event.stopPropagation();
  event.preventDefault();
  return $("#cart-drawer-container").fadeOut(300, function () {
    return Reaction.toggleSession("displayCart");
  });
}

var EmptyCartDrawer = function () {
  return React.createElement("div", {
    className: "cart-drawer",
    id: "cart-drawer"
  }, React.createElement("div", {
    className: "cart-drawer-empty"
  }, React.createElement("div", {
    className: "row cart-drawer-empty-msg"
  }, React.createElement("p", {
    className: "text-align"
  }, React.createElement("i", {
    className: "fa fa-frown-o fa-lg"
  })), React.createElement("p", {
    className: "text-align"
  }, React.createElement(Components.Translation, {
    defaultValue: "We're sad. Your cart is empty.",
    i18nKey: "cartDrawer.empty"
  }))), React.createElement("div", {
    className: "row"
  }, React.createElement(Components.Button, {
    id: "btn-keep-shopping",
    bezelStyle: "solid",
    className: "btn-lg btn-block",
    i18nKeyLabel: "cartDrawer.keepShopping",
    label: "Keep on shopping",
    onClick: handleKeepShopping,
    status: "warning"
  }))));
};

EmptyCartDrawer.propTypes = {
  keepShopping: PropTypes.func
};
registerComponent("EmptyCartDrawer", EmptyCartDrawer);
module.exportDefault(EmptyCartDrawer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopOrderSummary.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/components/shopOrderSummary.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

/**
 * @summary Displays the order summary for each shop
 * @param {Object} props - React PropTypes
 * @property {Object} shopSummary - An object representing the summary information for this Shop
 * @property {boolean} isProfilePage - Checks if current page is profile page (unused)
 * @return {Node} React node containing the summary information for each shop
 */
var ShopOrderSummary = function (_ref) {
  var shopSummary = _ref.shopSummary;
  return React.createElement("div", {
    className: "order-details-info-box-content"
  }, React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-header-line"
  }), React.createElement("div", {
    className: "order-summary-store-name"
  }, React.createElement(Components.Translation, {
    defaultValue: "Fulfilled by",
    i18nKey: "cartCompleted.fulfilledBy"
  }), " ", shopSummary.name)), React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-title"
  }, React.createElement(Components.Translation, {
    defaultValue: "Items in order",
    i18nKey: "cartCompleted.orderItems"
  })), React.createElement("div", {
    className: "order-summary-value"
  }, shopSummary.quantityTotal)), React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-title"
  }, React.createElement(Components.Translation, {
    defaultValue: "Subtotal",
    i18nKey: "cartCompleted.orderSubtotal"
  })), React.createElement("div", {
    className: "order-summary-value"
  }, React.createElement(Components.Currency, {
    amount: shopSummary.subTotal
  }))), shopSummary.shipping > 0 && React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-title"
  }, React.createElement(Components.Translation, {
    defaultValue: "Shipping",
    i18nKey: "cartCompleted.orderShipping"
  })), React.createElement("div", {
    className: "order-summary-value"
  }, React.createElement(Components.Currency, {
    amount: shopSummary.shipping
  }))), shopSummary.taxes > 0 && React.createElement("div", {
    className: "order-summary-line"
  }, React.createElement("div", {
    className: "order-summary-title"
  }, React.createElement(Components.Translation, {
    defaultValue: "Tax",
    i18nKey: "cartCompleted.orderTax"
  })), React.createElement("div", {
    className: "order-summary-value"
  }, React.createElement(Components.Currency, {
    amount: shopSummary.taxes
  }))));
};

ShopOrderSummary.propTypes = {
  isProfilePage: PropTypes.bool,
  shopSummary: PropTypes.object
};
registerComponent("ShopOrderSummary", ShopOrderSummary);
module.exportDefault(ShopOrderSummary);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"cartDrawerContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/containers/cartDrawerContainer.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 3);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 6);
var getPrimaryMediaForOrderItem, ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  getPrimaryMediaForOrderItem: function (v) {
    getPrimaryMediaForOrderItem = v;
  },
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 7);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 8);
var CartDrawer;
module.watch(require("../components/cartDrawer"), {
  "default": function (v) {
    CartDrawer = v;
  }
}, 9);
// event handlers to pass in as props
var handlers = {
  handleImage: function (item) {
    var media = getPrimaryMediaForOrderItem(item);
    return media && media.url({
      store: "small"
    });
  },

  /**
  * showLowInventoryWarning
  * @param {Object} productItem - product item object
  * @return {Boolean} return true if low inventory on variant
  */
  handleLowInventory: function (productItem) {
    var variants = productItem.variants;

    if (variants && variants.inventoryPolicy && variants.lowInventoryWarningThreshold) {
      return variants.inventoryQuantity <= variants.lowInventoryWarningThreshold;
    }

    return false;
  },
  handleShowProduct: function (productItem) {
    if (productItem) {
      Reaction.Router.go("product", {
        handle: productItem.productId,
        variantId: productItem.variants._id
      });
      ReactionProduct.setCurrentVariant(productItem.variants._id);
    }
  },
  pdpPath: function (productItem) {
    if (productItem) {
      var handle = productItem.productId;
      return Reaction.Router.pathFor("product", {
        hash: {
          handle: handle,
          variantId: productItem.variants._id
        }
      });
    }
  },
  handleRemoveItem: function (event, item) {
    event.stopPropagation();
    event.preventDefault();
    var cartItemElement = $(event.target).closest(".cart-drawer-swiper-slide");
    cartItemElement.fadeOut(500, function () {
      return Meteor.call("cart/removeFromCart", item._id);
    });
  },
  handleCheckout: function () {
    $("#cart-drawer-container").fadeOut();
    Session.set("displayCart", false);
    return Reaction.Router.go("cart/checkout");
  }
}; // reactive Tracker wrapped function

function composer(props, onData) {
  var userId = Meteor.userId();
  var shopId = Reaction.marketplace.merchantCarts ? Reaction.getShopId() : Reaction.getPrimaryShopId();
  var cart = Cart.findOne({
    userId: userId,
    shopId: shopId
  });
  if (!cart) return;
  Meteor.subscribe("CartImages", cart._id);
  var productItems = cart && cart.items;
  onData(null, {
    productItems: productItems
  });
} // register the containers


registerComponent("CartDrawer", CartDrawer, [_withProps(handlers), composeWithTracker(composer)]);
module.exportDefault(_compose(_withProps(handlers), composeWithTracker(composer))(CartDrawer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartIconContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/containers/cartIconContainer.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Velocity;
module.watch(require("velocity-animate"), {
  "default": function (v) {
    Velocity = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var CartIcon;
module.watch(require("../components/cartIcon"), {
  "default": function (v) {
    CartIcon = v;
  }
}, 6);
var handlers = {
  handleClick: function (e) {
    e.preventDefault();
    var cartDrawer = document.querySelector("#cart-drawer-container");
    Velocity(cartDrawer, {
      opacity: 1
    }, 300, function () {
      Reaction.toggleSession("displayCart");
    });
  }
};

var composer = function (props, onData) {
  var subscription = Reaction.Subscriptions.Cart;

  if (subscription.ready()) {
    var cart = Cart.findOne();
    onData(null, {
      cart: cart
    });
  }
};

registerComponent("CartIcon", CartIcon, [_withProps(handlers), composeWithTracker(composer)]);
module.exportDefault(_compose(_withProps(handlers), composeWithTracker(composer))(CartIcon));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartPanelContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/containers/cartPanelContainer.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var CartPanel;
module.watch(require("../components/cartPanel"), {
  "default": function (v) {
    CartPanel = v;
  }
}, 5);
var handlers = {
  checkout: function () {
    $("#cart-drawer-container").fadeOut();
    Session.set("displayCart", false);
    return Reaction.Router.go("cart/checkout");
  }
};
registerComponent("CartPanel", CartPanel, _withProps(handlers));
module.exportDefault(_withProps(handlers)(CartPanel));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cartSubTotalContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/containers/cartSubTotalContainer.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var setTimeout;
module.watch(require("timers"), {
  setTimeout: function (v) {
    setTimeout = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 3);
var CartSubTotal;
module.watch(require("../components/cartSubTotal"), {
  "default": function (v) {
    CartSubTotal = v;
  }
}, 4);

function composer(props, onData) {
  onData(null, {
    isLoading: true
  });
  var stopped = false;
  setTimeout(function () {
    if (stopped) return;
    var cart = Cart.findOne();

    if (cart) {
      onData(null, {
        cartSubTotal: cart.getSubTotal(),
        cartCount: cart.getCount(),
        cartShipping: cart.getShippingTotal(),
        cartDiscount: cart.getDiscounts(),
        cartTaxes: cart.getTaxTotal(),
        cartTotal: cart.getTotal(),
        isLoading: false
      });
    }
  }, 200);
  return function () {
    stopped = true;
  };
}

var hocs = [composeWithTracker(composer)];
registerComponent("CartSubTotal", CartSubTotal, hocs);
module.exportDefault(_compose.apply(void 0, hocs)(CartSubTotal));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"completedOrderContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/containers/completedOrderContainer.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var Orders;
module.watch(require("../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 5);
var CompletedOrder;
module.watch(require("../components/completedOrder"), {
  "default": function (v) {
    CompletedOrder = v;
  }
}, 6);

function composer(props, onData) {
  // The Cart subscription does not update when you delete the original record
  // but don't change parameters so we need to re-init that subscription here.
  // (possibly because the oplog is tied to the original id?)
  // I think this is a bug in SubscriptionManager but that should be revisited later
  var sessionId = Session.get("sessionId");
  Reaction.Subscriptions.Cart = Reaction.Subscriptions.Manager.subscribe("Cart", sessionId, Meteor.userId());
  var cartId = Reaction.Router.getQueryParam("_id");
  var orderSub = Meteor.subscribe("CompletedCartOrder", Meteor.userId(), cartId);

  if (orderSub.ready()) {
    var order = Orders.findOne({
      userId: Meteor.userId(),
      cartId: cartId
    });

    if (order) {
      var imageSub = Meteor.subscribe("OrderImages", order._id);
      var orderSummary = {
        quantityTotal: order.getCount(),
        subtotal: order.getSubTotal(),
        shippingTotal: order.getShippingTotal(),
        tax: order.getTaxTotal(),
        discounts: order.getDiscounts(),
        total: order.getTotal(),
        shipping: order.shipping
      };

      if (imageSub.ready()) {
        onData(null, {
          isProfilePage: false,
          shops: order.getShopSummary(),
          order: order,
          orderSummary: orderSummary,
          paymentMethods: order.getUniquePaymentMethods()
        });
      }
    } else {
      onData(null, {
        order: order
      });
    }
  }
}

registerComponent("CompletedOrder", CompletedOrder, [composeWithTracker(composer)]);
module.exportDefault(_compose(composeWithTracker(composer))(CompletedOrder));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"helpers":{"cart.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/helpers/cart.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);

/*
 * Template helpers for cart
 *
 */

/**
 * cart template helper
 * @description
 * methods to return cart calculated values
 * cartCount, cartSubTotal, cartShipping, cartTaxes, cartTotal
 * are calculated by a transformation on the collection
 * and are available to use in template as cart.xxx
 * in template: {{cart.getCount}}
 * in code: Cart.findOne().getTotal()
 * @return {Object} returns inventory helpers
 */
Template.registerHelper("cart", function () {
  var cartHelpers = {
    /**
     * showCartIconWarning
     * @return {Boolean} return true if low inventory on any item in cart
     */
    showCartIconWarning: function () {
      if (this.showLowInventoryWarning()) {
        return true;
      }

      return false;
    },

    /**
     * showLowInventoryWarning
     * @return {Boolean} return true if low inventory on any item in cart
     */
    showLowInventoryWarning: function () {
      var item;
      var storedCart = Cart.findOne(); // we're not being picky here - first thing in cart
      // that is low will trigger a inventory warning

      if (storedCart && storedCart.items) {
        for (var _iterator = storedCart.items, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          if (_isArray) {
            if (_i >= _iterator.length) break;
            item = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            item = _i.value;
          }

          if (item.variants && item.variants.inventoryPolicy && item.variants.lowInventoryWarningThreshold) {
            return item.variants.inventoryQuantity <= item.variants.lowInventoryWarningThreshold;
          }
        }
      }

      return false;
    },

    /**
     * showLowInventoryWarning
     * @param {Object} variant - variant object to check inventory levels on
     * @return {Boolean} return true if low inventory on variant
     */
    showItemLowInventoryWarning: function (variant) {
      if (variant && variant.inventoryPolicy && variant.lowInventoryWarningThreshold) {
        return variant.inventoryQuantity <= variant.lowInventoryWarningThreshold;
      }

      return false;
    }
  };
  return cartHelpers;
});
/**
 * cartPayerName
 * @summary gets current cart billing address / payment name
 * @return {String} returns cart.billing[0].fullName
 */

Template.registerHelper("cartPayerName", function () {
  var cart = Cart.findOne();

  if (cart && cart.billing && cart.billing[0] && cart.billing[0].address && cart.billing[0].address.fullName) {
    var name = cart.billing[0].address.fullName;
    if (name.replace(/[a-zA-Z ]*/, "").length === 0) return name;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"methods":{"cart.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/methods/cart.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _clone;

module.watch(require("lodash/clone"), {
  "default": function (v) {
    _clone = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 2);
var Logger, Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Logger: function (v) {
    Logger = v;
  },
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 4);
// Client Cart Methods
// Stubs with matching server methods.
Meteor.methods({
  // Not used for stripe connect integration
  // Under consideration for deprecation and migrating other payment Packages
  // to payments-stripe style methods
  "cart/submitPayment": function (paymentMethod) {
    check(paymentMethod, Object);
    var checkoutCart = Cart.findOne({
      userId: Meteor.userId()
    });

    var cart = _clone(checkoutCart);

    var cartId = cart._id;
    var invoice = {
      shipping: cart.getShippingTotal(),
      subtotal: cart.getSubTotal(),
      taxes: cart.getTaxTotal(),
      discounts: cart.getDiscounts(),
      total: cart.getTotal()
    }; // we won't actually close the order at this stage.
    // we'll just update the workflow and billing data where
    // method-hooks can process the workflow update.

    var selector;
    var update; // temp hack until we build out multiple billing handlers
    // if we have an existing item update it, otherwise add to set.

    if (cart.billing) {
      selector = {
        "_id": cartId,
        "billing._id": cart.billing[0]._id
      };
      update = {
        $set: {
          "billing.$.paymentMethod": paymentMethod,
          "billing.$.invoice": invoice
        }
      };
    } else {
      selector = {
        _id: cartId
      };
      update = {
        $addToSet: {
          "billing.paymentMethod": paymentMethod,
          "billing.invoice": invoice
        }
      };
    }

    Cart.update(selector, update, function (error, result) {
      if (error) {
        Logger.debug(error, "An error occurred saving the order");
        throw new Meteor.Error("An error occurred saving the order", error);
      } else {
        // it's ok and a safety check for this to be called multiple times
        Meteor.call("workflow/pushCartWorkflow", "coreCartWorkflow", "paymentSubmitted"); // Client Stub Actions

        if (result === 1) {
          Reaction.Router.go("cart/completed", {}, {
            _id: cartId
          });
        } else {
          Alerts.inline(i18next.t("checkoutPayment.failedToPlaceOrder"), "danger", {
            autoHide: true,
            placement: "paymentMethod"
          });
          Logger.debug(error, "An error occurred saving the order", cartId, error);
          throw new Meteor.Error("An error occurred saving the order", cartId, error);
        }
      }
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/checkout/client/index.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./helpers/cart"));
module.watch(require("./methods/cart"));
module.watch(require("./templates/cartDrawer/cartDrawer.html"));
module.watch(require("./templates/cartDrawer/cartDrawer.js"));
module.watch(require("./templates/cartIcon/cartIcon.html"));
module.watch(require("./templates/cartIcon/cartIcon.js"));
module.watch(require("./templates/checkout/addressBook/addressBook.html"));
module.watch(require("./templates/checkout/addressBook/addressBook.js"));
module.watch(require("./templates/checkout/completed/completed.html"));
module.watch(require("./templates/checkout/completed/completed.js"));
module.watch(require("./templates/checkout/login/login.html"));
module.watch(require("./templates/checkout/login/login.js"));
module.watch(require("./templates/checkout/progressBar/progressBar.html"));
module.watch(require("./templates/checkout/progressBar/progressBar.js"));
module.watch(require("./templates/checkout/review/review.html"));
module.watch(require("./templates/checkout/review/review.js"));
module.watch(require("./templates/checkout/checkout.html"));
module.watch(require("./templates/checkout/checkout.js"));
module.watch(require("./components/cartDrawer"), {
  "default": function (v) {
    exports.CartDrawer = v;
  }
}, 0);
module.watch(require("./components/cartIcon"), {
  "default": function (v) {
    exports.CartIcon = v;
  }
}, 1);
module.watch(require("./components/cartItems"), {
  "default": function (v) {
    exports.CartItems = v;
  }
}, 2);
module.watch(require("./components/cartPanel"), {
  "default": function (v) {
    exports.CartPanel = v;
  }
}, 3);
module.watch(require("./components/cartSubTotal"), {
  "default": function (v) {
    exports.CartSubTotal = v;
  }
}, 4);
module.watch(require("./components/emptyCartDrawer"), {
  "default": function (v) {
    exports.EmptyCartDrawer = v;
  }
}, 5);
module.watch(require("./containers/cartDrawerContainer"), {
  "default": function (v) {
    exports.CartDrawerContainer = v;
  }
}, 6);
module.watch(require("./containers/cartIconContainer"), {
  "default": function (v) {
    exports.CartIconContainer = v;
  }
}, 7);
module.watch(require("./containers/cartPanelContainer"), {
  "default": function (v) {
    exports.CartPanelContainer = v;
  }
}, 8);
module.watch(require("./containers/cartSubTotalContainer"), {
  "default": function (v) {
    exports.CartSubTotalContainer = v;
  }
}, 9);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"dashboard":{"client":{"templates":{"packages":{"grid":{"grid.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/grid/grid.html                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.grid.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.grid.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/grid/template.grid.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("packagesGrid");
Template["packagesGrid"] = new Template("Template.packagesGrid", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui items"
  }, "\n    ", Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(view.lookup("groups")),
      _variable: "group"
    };
  }, function() {
    return [ "\n      ", HTML.DIV({
      class: "rui item"
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        title: Spacebars.call(view.lookup("group"))
      };
    }, function() {
      return Spacebars.include(view.lookupTemplate("cardGroup"), function() {
        return [ "\n          ", Blaze._TemplateWith(function() {
          return {
            apps: Spacebars.call(Spacebars.dataMustache(view.lookup("appsInGroup"), view.lookup("group")))
          };
        }, function() {
          return Spacebars.include(view.lookupTemplate("packagesGridGroup"));
        }), "\n        " ];
      });
    }), "\n      "), "\n    " ];
  }), "\n  ");
}));

Template.__checkName("packagesGridGroup");
Template["packagesGridGroup"] = new Template("Template.packagesGridGroup", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui items flex third"
  }, "\n    ", Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(view.lookup("apps")),
      _variable: "app"
    };
  }, function() {
    return [ "\n      ", Blaze.If(function() {
      return Spacebars.dataMustache(view.lookup("pkgPermissions"), view.lookup("app"));
    }, function() {
      return [ "\n        ", HTML.DIV({
        class: "rui item flex vertical"
      }, "\n          ", Blaze._TemplateWith(function() {
        return Spacebars.dataMustache(view.lookup("packageProps"), view.lookup("app"));
      }, function() {
        return Spacebars.include(view.lookupTemplate("gridPackage"));
      }), "\n        "), "\n      " ];
    }), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"package.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/grid/package.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.package.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.package.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/grid/template.package.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("gridPackage");
Template["gridPackage"] = new Template("Template.gridPackage", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("cardProps"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("card"), function() {
      return [ "\n    ", HTML.DIV({
        class: "content",
        "data-event-action": function() {
          return Spacebars.mustache(view.lookup("showPackageManagementEvent"), view.lookup("package"));
        }
      }, "\n      ", HTML.H3({
        class: "title"
      }, "\n        ", HTML.I({
        class: function() {
          return Spacebars.mustache(Spacebars.dot(view.lookup("package"), "icon"));
        }
      }), " ", HTML.SPAN({
        "data-i18n": function() {
          return Spacebars.mustache(Spacebars.dot(view.lookup("package"), "i18nKeyLabel"));
        }
      }, Blaze.View("lookup:package.label", function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("package"), "label"));
      })), "\n      "), "\n      ", HTML.SMALL({
        "data-i18n": function() {
          return Spacebars.mustache(Spacebars.dot(view.lookup("package"), "i18nKeyDescription"));
        }
      }, Blaze.View("lookup:package.description", function() {
        return Spacebars.makeRaw(Spacebars.mustache(Spacebars.dot(view.lookup("package"), "description")));
      })), "\n    "), "\n  " ];
    });
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"grid.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/grid/grid.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _groupBy;

module.watch(require("lodash/groupBy"), {
  "default": function (v) {
    _groupBy = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Reaction, i18next;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);

function pkgPermissions(pkg) {
  // if (Reaction.hasPermission("dashboard")) {
  //   // route specific permissions
  //   if (pkg.name) {
  //     return Reaction.hasPermission(pkg.name);
  //   }
  //   // name is a global group role for packages
  //   if (pkg.template) {
  //     return Reaction.hasPermission(pkg.template);
  //   }
  // }
  return Reaction.hasPermission(pkg.name);
}

function enableReactionPackage(reactionPackage) {
  var self = reactionPackage;
  Meteor.call("shop/togglePackage", self.packageId, false, function (error, result) {
    if (result === 1) {
      Alerts.toast(i18next.t("gridPackage.pkgEnabled", {
        app: i18next.t(self.i18nKeyLabel)
      }), "error", {
        type: "pkg-enabled-" + self.name
      });

      if (self.name || self.route) {
        var route = self.name || self.route;
        return Reaction.Router.go(route);
      }
    } else if (error) {
      return Alerts.toast(i18next.t("gridPackage.pkgDisabled", {
        app: i18next.t(self.i18nKeyLabel)
      }), "warning");
    }
  });
}

function disableReactionPackage(reactionPackage) {
  var self = reactionPackage;

  if (self.name === "core") {
    return;
  }

  Alerts.alert("Disable Package", i18next.t("gridPackage.disableConfirm", {
    app: i18next.t(self.i18nKeyLabel)
  }), {
    type: "warning",
    showCancelButton: true
  }, function () {
    Meteor.call("shop/togglePackage", self.packageId, true, function (error, result) {
      if (result === 1) {
        return Alerts.toast(i18next.t("gridPackage.pkgDisabled", {
          app: i18next.t(self.i18nKeyLabel)
        }), "success");
      } else if (error) {
        throw new Meteor.Error("error-disabling-package", error);
      }
    });
  });
}

Template.packagesGrid.onCreated(function () {
  var _this = this;

  this.state = new ReactiveDict();
  this.state.setDefault({
    groups: [],
    appsByGroup: {},
    apps: []
  });
  this.autorun(function () {
    var apps = Reaction.Apps({
      provides: "dashboard",
      enabled: true
    });

    var groupedApps = _groupBy(apps, function (app) {
      return app.container || "misc";
    });

    _this.state.set("apps", apps);

    _this.state.set("appsByGroup", groupedApps);

    _this.state.set("groups", Object.keys(groupedApps));
  });
});
/**
 * packagesGrid helpers
 */

Template.packagesGrid.helpers({
  groups: function () {
    return Template.instance().state.get("groups");
  },
  appsInGroup: function (groupName) {
    var group = Template.instance().state.get("appsByGroup") || {};
    return group[groupName] || false;
  },
  shopId: function () {
    return Reaction.getShopId();
  },
  pkgPermissions: pkgPermissions
});
Template.packagesGridGroup.helpers({
  pkgPermissions: pkgPermissions,
  packageProps: function (app) {
    return {
      "package": app,
      enablePackage: function (reactionPackage, value) {
        if (value === true) {
          enableReactionPackage(reactionPackage);
        } else {
          disableReactionPackage(reactionPackage);
        }
      }
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"package.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/grid/package.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);

/* eslint no-loop-func: 0 */

/**
 * gridPackage helpers
 */
Template.gridPackage.helpers({
  /**
   * Properties for the card
   * @see packages/reaction-ui/client/components/cards/cards.js
   * @return {CardProps} Object of properties for the card component
   */
  cardProps: function () {
    var instance = Template.instance();
    var data = instance.data;
    var apps = Reaction.Apps({
      provides: "settings",
      name: data.package.packageName
    });
    var controls = [];

    if (data.package.priority > 1) {
      controls.push({
        icon: "fa fa-plus-square fa-fw",
        onIcon: "fa fa-check-square fa-fw",
        toggle: true,
        toggleOn: data.package.enabled,
        onClick: function () {
          if (instance.data.enablePackage) {
            instance.data.enablePackage(data.package, !data.package.enabled);
          }
        }
      });
    }

    var _loop = function (app) {
      controls.push({
        icon: app.icon || "fa fa-cog fa-fw",
        onClick: function () {
          Reaction.pushActionView(app);
        }
      });
    };

    for (var _iterator = apps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var app = _ref;

      _loop(app);
    }

    if (data.package.route) {
      controls.push({
        icon: "angle-right",
        onClick: function () {
          Reaction.pushActionView(data.package);
        }
      });
    }

    return {
      controls: controls,
      onContentClick: function () {
        Reaction.pushActionView(data.package);
      }
    };
  },
  showPackageManagementEvent: function (pkg) {
    if (pkg.name && pkg.route && pkg.template) {
      return "showPackageManagement";
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"packages.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/packages.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.packages.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.packages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/template.packages.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("dashboardPackages");
Template["dashboardPackages"] = new Template("Template.dashboardPackages", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui admin dashboard-list"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("PackageListComponent"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"packages.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/packages/packages.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var PackageList;
module.watch(require("../../components"), {
  PackageList: function (v) {
    PackageList = v;
  }
}, 1);
var PackageListContainer;
module.watch(require("../../containers"), {
  PackageListContainer: function (v) {
    PackageListContainer = v;
  }
}, 2);
Template.dashboardPackages.helpers({
  PackageListComponent: function () {
    return {
      component: PackageListContainer(PackageList)
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"shop":{"settings":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/settings.html                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/template.settings.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shopSettings");
Template["shopSettings"] = new Template("Template.shopSettings", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel-group",
    id: "shopSettingsAccordian",
    role: "tablist",
    "aria-multiselectable": "true"
  }, "\n    ", HTML.DIV({
    class: "panel panel-default"
  }, "\n      ", HTML.Raw('<div class="panel-heading">\n        <div class="panel-title">\n          <a href="#general" aria-controls="general" aria-expanded="true" role="button" data-toggle="collapse" data-parent="#shopSettingsAccordian" data-i18n="admin.settings.general.label">General</a>\n        </div>\n      </div>'), "\n      ", HTML.DIV({
    id: "general",
    class: "panel-collapse collapse in",
    role: "tabpanel",
    "aria-labelledby": "General"
  }, "\n        ", HTML.DIV({
    class: "panel-body"
  }, "\n          ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(Spacebars.dot(view.lookup("Schemas"), "CorePackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      id: Spacebars.call("shopEditOptionsForm"),
      type: Spacebars.call("update"),
      autosave: Spacebars.call(true)
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.public.allowGuestCheckout")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          " ];
    });
  }), "\n        "), "\n        ", HTML.DIV({
    class: "panel-body"
  }, "\n          ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("ShopBrandMediaManager"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n        "), "\n        ", HTML.DIV({
    class: "panel-body"
  }, "\n          ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Shops")),
      doc: Spacebars.call(view.lookup("shop")),
      id: Spacebars.call("shopEditForm"),
      type: Spacebars.call("update")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("name"),
          placeholder: Spacebars.call("Shop Name")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("slug"),
          placeholder: Spacebars.call("Shop Slug")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("emails.0.address"),
          label: Spacebars.call("Email"),
          placeholder: Spacebars.call("Primary Contact Email")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("description"),
          placeholder: Spacebars.call("Description")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("keywords"),
          placeholder: Spacebars.call("Keywords")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n          " ];
    });
  }), "\n        "), "\n      "), "\n    "), "\n\n    ", HTML.DIV({
    class: "panel panel-default"
  }, "\n      ", HTML.Raw('<div class="panel-heading">\n        <div class="panel-title">\n          <a href="#address" aria-controls="address" aria-expanded="true" role="button" data-toggle="collapse" data-parent="#shopSettingsAccordian" data-i18n="admin.settings.address.label">Address</a>\n        </div>\n      </div>'), "\n      ", HTML.DIV({
    id: "address",
    class: "panel-collapse collapse",
    role: "tabpanel",
    "aria-labelledby": "address"
  }, "\n        ", HTML.DIV({
    class: "panel-body"
  }, "\n          ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Shops")),
      doc: Spacebars.call(view.lookup("shop")),
      id: Spacebars.call("shopEditAddressForm"),
      type: Spacebars.call("update")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.company")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.fullName")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.address1")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.address2")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.city")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.region")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.postal")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.country"),
          options: Spacebars.call(view.lookup("countryOptions"))
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.phone")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.isCommercial")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.isShippingDefault"),
          defaultValue: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("addressBook.0.isBillingDefault"),
          defaultValue: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n            ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n          " ];
    });
  }), "\n        "), "\n      "), "\n    "), "\n\n    ", Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "shopSettings"
    }));
  }, function() {
    return [ "\n      ", HTML.DIV({
      class: "panel panel-default"
    }, "\n        ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n          ", HTML.DIV({
      class: "panel-title"
    }, "\n            ", HTML.A({
      href: function() {
        return [ "#collapsable-", Spacebars.mustache(view.lookup("template")) ];
      },
      "aria-controls": function() {
        return [ "collapsable-", Spacebars.mustache(view.lookup("template")) ];
      },
      role: "button",
      "data-toggle": "collapse",
      "data-parent": "#shopSettingsAccordian"
    }, "\n              ", HTML.I({
      class: function() {
        return Spacebars.mustache(view.lookup("icon"));
      }
    }), "\n              ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n            "), "\n          "), "\n          ", Blaze.If(function() {
      return Spacebars.dataMustache(view.lookup("showAppSwitch"), view.lookup("template"));
    }, function() {
      return [ "\n          ", HTML.DIV({
        class: "panel-controls"
      }, "\n            ", HTML.INPUT(HTML.Attrs({
        class: "checkbox-switch",
        type: "checkbox",
        name: "enabled",
        "data-id": function() {
          return Spacebars.mustache(view.lookup("packageId"));
        },
        "data-key": function() {
          return Spacebars.mustache(view.lookup("settingsKey"));
        }
      }, function() {
        return Spacebars.attrMustache(view.lookup("checked"), view.lookup("enabled"));
      })), "\n          "), "\n          " ];
    }), "\n        "), "\n        ", HTML.DIV({
      id: function() {
        return [ "collapsable-", Spacebars.mustache(view.lookup("template")) ];
      },
      class: "panel-collapse collapse",
      role: "tabpanel",
      "aria-labelledby": function() {
        return [ "collapsable-", Spacebars.mustache(view.lookup("template")) ];
      }
    }, "\n          ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), view.lookup("enabled")) ];
      }
    }, "\n            ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n          "), "\n        "), "\n      "), "\n    " ];
  }), "\n  ");
}));

Template.__checkName("optionsShopSettings");
Template["optionsShopSettings"] = new Template("Template.optionsShopSettings", (function() {
  var view = this;
  return HTML.DIV({
    class: "optionsShopSettings"
  }, "\n    ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(Spacebars.dot(view.lookup("Schemas"), "CorePackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      id: Spacebars.call("shopEditExternalServicesForm"),
      type: Spacebars.call("method-update"),
      meteormethod: Spacebars.call("shop/updateShopExternalServices")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.openexchangerates.appId")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.openexchangerates.refreshPeriod"),
          placeholder: Spacebars.call("every 1 hour")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.google.clientId")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.google.apiKey")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.cart.cleanupDurationDays"),
          placeholder: Spacebars.call("older than 3 days")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n    " ];
    });
  }), "\n  ");
}));

Template.__checkName("shopSettingsSubmitButton");
Template["shopSettingsSubmitButton"] = new Template("Template.shopSettingsSubmitButton", (function() {
  var view = this;
  return HTML.Raw('<div class="clearfix">\n    <button type="submit" class="btn btn-primary pull-right" data-i18n="app.saveChanges">Save Changes</button>\n  </div>');
}));

Template.__checkName("shopDashboard");
Template["shopDashboard"] = new Template("Template.shopDashboard", (function() {
  var view = this;
  return "";
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ShopBrandMediaManager.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/ShopBrandMediaManager.js                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var ShopBrandImageOption;
module.watch(require("./shopBrandImageOption"), {
  "default": function (v) {
    ShopBrandImageOption = v;
  }
}, 3);

var ShopBrandMediaManager =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ShopBrandMediaManager, _Component);

  function ShopBrandMediaManager() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ShopBrandMediaManager.prototype;

  _proto.renderBrandImages = function () {
    function renderBrandImages() {
      var _props = this.props,
          brandMediaList = _props.brandMediaList,
          selectedMediaId = _props.selectedMediaId;
      return (brandMediaList || []).map(function (media) {
        return React.createElement(ShopBrandImageOption, {
          key: media._id,
          isSelected: selectedMediaId === media._id,
          media: media
        });
      });
    }

    return renderBrandImages;
  }();

  _proto.render = function () {
    function render() {
      var metadata = this.props.metadata;
      return React.createElement("div", null, React.createElement(Components.DragDropProvider, null, React.createElement("div", {
        className: "rui gallery-thumbnails"
      }, this.renderBrandImages())), React.createElement(Components.MediaUploader, {
        metadata: metadata
      }));
    }

    return render;
  }();

  return ShopBrandMediaManager;
}(Component);

ShopBrandMediaManager.propTypes = {
  brandMediaList: PropTypes.arrayOf(PropTypes.object),
  metadata: PropTypes.object,
  selectedMediaId: PropTypes.string
};
module.exportDefault(ShopBrandMediaManager);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/settings.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 3);
var Reaction, i18next;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Packages, Shops;
module.watch(require("../../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 5);
var Media;
module.watch(require("../../../../../files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 6);
var ShopBrandMediaManager;
module.watch(require("./ShopBrandMediaManager"), {
  "default": function (v) {
    ShopBrandMediaManager = v;
  }
}, 7);

/**
 * shopSettings helpers
 *
 */
Template.shopSettings.helpers({
  checked: function (enabled) {
    if (enabled === true) {
      return "checked";
    }

    return "";
  },
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  },
  ShopBrandMediaManager: function () {
    var shopId = Reaction.getShopId();
    var shop = Shops.findOne({
      "_id": shopId,
      "brandAssets.type": "navbarBrandImage"
    });
    var selectedMediaId;

    if (shop && _isArray(shop.brandAssets)) {
      selectedMediaId = shop.brandAssets[0].mediaId;
    }

    var userId = Meteor.userId();
    var metadata = {
      type: "brandAsset",
      ownerId: userId,
      shopId: shopId
    };
    var brandMediaList = Media.findLocal({
      "metadata.shopId": Reaction.getShopId(),
      "metadata.type": "brandAsset"
    });
    return {
      component: ShopBrandMediaManager,
      brandMediaList: brandMediaList,
      metadata: metadata,
      selectedMediaId: selectedMediaId
    };
  },
  shop: function () {
    return Shops.findOne({
      _id: Reaction.getShopId()
    });
  },
  packageData: function () {
    return Packages.findOne({
      name: "core",
      shopId: Reaction.getShopId()
    });
  },
  addressBook: function () {
    var address = Shops.findOne({
      _id: Reaction.getShopId()
    }).addressBook;
    return address[0];
  },
  showAppSwitch: function (template) {
    if (template === "optionsShopSettings") {
      // do not have switch for options card/panel
      return false;
    }

    if (Reaction.getMarketplaceSettings()) {
      // if marketplace is enabled, only the primary shop can switch apps on and off.
      return Reaction.getShopId() === Reaction.getPrimaryShopId();
    } // If marketplace is disabled, every shop can switch apps


    return true;
  }
});
/**
 * shopSettings autoform alerts
 */

AutoForm.hooks({
  shopEditForm: {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.alerts.shopGeneralSettingsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.alerts.shopGeneralSettingsFailed") + " " + error, "error");
    }
  }
});
AutoForm.hooks({
  shopEditAddressForm: {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.alerts.shopAddressSettingsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.alerts.shopAddressSettingsFailed") + " " + error, "error");
    }
  }
});
AutoForm.hooks({
  shopEditExternalServicesForm: {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.alerts.shopExternalServicesSettingsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.alerts.shopExternalServicesSettingsFailed") + " " + error, "error");
    }
  }
});
AutoForm.hooks({
  shopEditOptionsForm: {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.alerts.shopOptionsSettingsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.alerts.shopOptionsSettingsFailed") + " " + error, "error");
    }
  }
});
Template.shopSettings.events({
  /**
   * settings update enabled status for services on change
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "change input[name=enabled]": function (event) {
    var settingsKey = event.target.getAttribute("data-key");
    var packageId = event.target.getAttribute("data-id");
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }];
    Meteor.call("registry/update", packageId, settingsKey, fields);
    Meteor.call("shop/togglePackage", packageId, !event.target.checked);
  }
});
Template.optionsShopSettings.helpers({
  packageData: function () {
    return Packages.findOne({
      name: "core",
      shopId: Reaction.getShopId()
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.less":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/settings.less                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings.less.css"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.less.css":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/settings.less.css                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("meteor/modules").addStyles(
  "#shopSettingsAccordian .panel-heading {\n  padding: 0px;\n}\n#shopSettingsAccordian div > a {\n  padding: 15px 20px 15px 20px;\n  display: inline-block;\n  width: 100%;\n}\n#shopSettingsAccordian .panel-controls {\n  padding-right: 15px;\n}\n"
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopBrandImageOption.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/shop/settings/shopBrandImageOption.js                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Media;
module.watch(require("../../../../../files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 4);
var i18next, Logger;
module.watch(require("../../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 5);

var ShopBrandImageOption =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ShopBrandImageOption, _Component);

  function ShopBrandImageOption() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function () {
      var _this$props = _this.props,
          isSelected = _this$props.isSelected,
          media = _this$props.media;
      if (isSelected) return;
      var asset = {
        mediaId: media._id,
        type: "navbarBrandImage"
      };
      Meteor.call("shop/updateBrandAssets", asset, function (error, result) {
        if (error || result !== 1) {
          return Alerts.toast(i18next.t("shopSettings.shopBrandAssetsFailed"), "error");
        }

        Alerts.toast(i18next.t("shopSettings.shopBrandAssetsSaved"), "success");
      });
    }, _this.handleRemoveClick = function () {
      var media = _this.props.media;
      Alerts.alert({
        title: "Remove this brand image?",
        type: "warning",
        showCancelButton: true,
        confirmButtonText: "Remove"
      }, function (shouldRemove) {
        if (shouldRemove) Media.remove(media._id).catch(function (error) {
          Logger.error(error);
        });
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ShopBrandImageOption.prototype;

  _proto.render = function () {
    function render() {
      var media = this.props.media;
      return React.createElement(Components.MediaItem, {
        editable: true,
        onClick: this.handleClick,
        onRemoveMedia: this.handleRemoveClick,
        size: "small",
        source: media
      });
    }

    return render;
  }();

  return ShopBrandImageOption;
}(Component);

ShopBrandImageOption.propTypes = {
  isSelected: PropTypes.bool,
  media: PropTypes.object.isRequired
};
registerComponent("ShopBrandImageOption", ShopBrandImageOption);
module.exportDefault(ShopBrandImageOption);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"import":{"import.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/import/import.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.import.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.import.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/import/template.import.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("importSettings");
Template["importSettings"] = new Template("Template.importSettings", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, HTML.Raw('\n      <div class="panel-heading">\n        <div class="panel-title">\n          <a href="#import" aria-controls="import" role="button" data-toggle="collapse" data-parent="#shopSettingsAccordian" data-i18n="admin.settings.import">Import</a>\n        </div>\n      </div>\n      '), HTML.DIV({
    id: "import",
    class: "panel-collapse collapse",
    role: "tabpanel",
    "aria-labelledby": "import"
  }, "\n        ", HTML.DIV({
    class: "panel-body"
  }, "\n          ", Spacebars.include(view.lookupTemplate("import")), "\n        "), "\n      "), "\n\n    ");
}));

Template.__checkName("import");
Template["import"] = new Template("Template.import", (function() {
  var view = this;
  return HTML.Raw('<div class="container-fluid-sm">\n    <div class="panel panel-default">\n      <form id="form-import-images" class="panel-body" role="form">\n        <div class="form-group">\n          <label>Files</label>\n          <input name="files" class="form-control" type="file" multiple="">\n        </div>\n        <button type="submit" class="btn btn-default">Import</button>\n      </form>\n    </div>\n  </div>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"import.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/import/import.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var FileRecord;
module.watch(require("@reactioncommerce/file-collections"), {
  FileRecord: function (v) {
    FileRecord = v;
  }
}, 2);
var Logger, Reaction;
module.watch(require("../../../../../../../client/api"), {
  Logger: function (v) {
    Logger = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var Products;
module.watch(require("../../../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  }
}, 4);
var Media;
module.watch(require("../../../../files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 5);

function uploadHandler(event) {
  var shopId = Reaction.getShopId();
  var userId = Meteor.userId();
  var files = event.target.files.files;

  for (var i = 0; i < files.length; i += 1) {
    var parts = files[i].name.split(".");
    var product = void 0;

    if (parts[0]) {
      product = Products.findOne({
        "variants.barcode": parts[0]
      }, {
        variants: {
          $elemMatch: {
            barcode: parts[0]
          }
        }
      });
    }

    if (product) {
      (function () {
        var fileRecord = FileRecord.fromFile(files[i]);
        fileRecord.metadata = {
          ownerId: userId,
          productId: product._id,
          variantId: product.variants[0]._id,
          shopId: shopId,
          priority: Number(parts[1]) || 0
        };
        fileRecord.upload().then(function () {
          return Media.insert(fileRecord);
        }).catch(function (error) {
          Logger.error(error);
        });
      })();
    }
  }
}

Template.import.events({
  "submit form#form-import-images": function (event) {
    event.preventDefault();
    uploadHandler(event);
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/settings/settings.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/settings/template.settings.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("settingsButton");
Template["settingsButton"] = new Template("Template.settingsButton", (function() {
  var view = this;
  return HTML.Raw('<button class="btn btn-default" data-event-action="showPackageSettings">\n    <i class="fa fa-gear"></i>\n    <span>Settings</span>\n  </button>');
}));

Template.__checkName("settingsHeader");
Template["settingsHeader"] = new Template("Template.settingsHeader", (function() {
  var view = this;
  return HTML.DIV({
    class: "nav nav-settings"
  }, "\n    ", HTML.DIV({
    class: "nav-settings-heading"
  }, "\n      ", Blaze.Unless(function() {
    return Spacebars.call(view.lookup("isActionViewAtRootView"));
  }, function() {
    return [ "\n        ", HTML.BUTTON({
      class: "js-back-button"
    }, "\n          ", HTML.I({
      class: "fa fa-arrow-left"
    }), "\n        "), "\n      " ];
  }), "\n      ", HTML.H3({
    class: "nav-settings-title"
  }, "\n        ", Spacebars.With(function() {
    return Spacebars.call(view.lookup("registry"));
  }, function() {
    return [ "\n         ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, "\n           ", HTML.SPAN(Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n         "), "\n        " ];
  }), "\n        ", Blaze._TemplateWith(function() {
    return {
      template: Spacebars.call(view.lookup("settingsHeaderControls"))
    };
  }, function() {
    return Spacebars.include(function() {
      return Spacebars.call(Template.__dynamic);
    });
  }), "\n      "), "\n    "), HTML.Raw('\n\n    <div class="nav-settings-controls">\n      <button class="btn btn-default" data-event-action="closeSettings">\n        <i class="fa fa-times"></i>\n      </button>\n    </div>\n\n  '));
}));

Template.__checkName("settingsSidebar");
Template["settingsSidebar"] = new Template("Template.settingsSidebar", (function() {
  var view = this;
  return HTML.DIV({
    class: "dashboard-nav"
  }, "\n    ", HTML.UL({
    class: "nav nav-pills nav-stacked nav-default"
  }, "\n    ", Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "dashboard"
    }));
  }, function() {
    return [ "\n      ", Blaze.If(function() {
      return Spacebars.call(view.lookup("pkgPermissions"));
    }, function() {
      return [ "\n          ", Spacebars.include(view.lookupTemplate("settingsSidebarItem")), "\n      " ];
    }), "\n    " ];
  }), "\n    "), "\n  ");
}));

Template.__checkName("settingsSidebarItem");
Template["settingsSidebarItem"] = new Template("Template.settingsSidebarItem", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("enabled"));
  }, function() {
    return [ "\n  ", Blaze.View("lookup:packageName", function() {
      return Spacebars.mustache(view.lookup("packageName"));
    }), "\n    ", Blaze.Each(function() {
      return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
        provides: "settings",
        name: view.lookup("packageName"),
        container: view.lookup("container")
      }));
    }, function() {
      return [ "\n      ", HTML.LI({
        class: function() {
          return Spacebars.mustache(view.lookup("active"), view.lookup("name"));
        }
      }, "\n        ", HTML.A({
        class: "pkg-settings",
        title: function() {
          return Spacebars.mustache(view.lookup("i18n"), "app.settings", "Settings");
        },
        href: function() {
          return Spacebars.mustache(view.lookup("name"));
        }
      }, "\n          ", HTML.I({
        class: function() {
          return Spacebars.mustache(Spacebars.dot(view.lookup(".."), "icon"));
        }
      }), " ", Blaze.View("lookup:label", function() {
        return Spacebars.mustache(view.lookup("label"));
      }), "\n        "), "\n      "), "\n    " ];
    }), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/settings/settings.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _find;

module.watch(require("lodash/find"), {
  "default": function (v) {
    _find = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);

/**
 * Helpers for Settings Header (actionView)
 */
Template.settingsHeader.helpers({
  /**
   * Data pased to action view
   * @return {Object} Registry entry for item
   */
  registry: function () {
    return Reaction.getActionView() || {};
  },
  isActionViewAtRootView: function () {
    return Reaction.isActionViewAtRootView();
  },

  /**
   * thisApp
   * @return {Object} Registry entry for item
   */
  thisApp: function () {
    var reactionApp = Packages.findOne({
      "registry.provides": "settings",
      "registry.route": Reaction.Router.getRouteName()
    }, {
      enabled: 1,
      registry: 1,
      name: 1,
      route: 1
    });

    if (reactionApp) {
      var settingsData = _find(reactionApp.registry, function (item) {
        return item.route === Reaction.Router.getRouteName() && item.provides && item.provides.includes("settings");
      }); // eslint-disable-line max-len


      return settingsData;
    }

    return reactionApp;
  }
});
/**
 * Events for Setting Header (actionView)
 */

Template.settingsHeader.events({
  "click [data-event-action=closeSettings]": function () {
    Reaction.hideActionView();
  },
  "click .js-back-button": function () {
    Reaction.popActionView();
  }
});
/**
 * Helpers for Settings Sidebar (actionView)
 */

Template.settingsSidebar.helpers({
  /**
   * pkgPermissions Check package permissions
   * @return {Boolean} user has permission to see settings for this package
   */
  pkgPermissions: function () {
    if (Reaction.hasPermission("dashboard")) {
      if (this.name) {
        return Reaction.hasPermission(this.name);
      }

      return Reaction.hasPermission(this.name);
    }

    return false;
  }
});
Template.settingsSidebarItem.helpers({
  /**
   * label
   * @return {String} Label for item
   */
  label: function () {
    return Template.parentData(1).label || this.label;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"dashboard.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/dashboard.html                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.dashboard.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.dashboard.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/template.dashboard.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("dashboardControls");
Template["dashboardControls"] = new Template("Template.dashboardControls", (function() {
  var view = this;
  return HTML.Raw("<!-- dashboardControls -->");
}));

Template.__checkName("blankControls");
Template["blankControls"] = new Template("Template.blankControls", (function() {
  var view = this;
  return HTML.Raw('<!-- setActionView blankControls  -->\n  <div class="panel panel-default">\n    <div class="panel-heading">\n      <h3 class="panel-title"><span data-i18n="blankControls.noControls">No controls for this view.</span></h3>\n    </div>\n  </div>');
}));

Template.__checkName("dashboardHeader");
Template["dashboardHeader"] = new Template("Template.dashboardHeader", (function() {
  var view = this;
  return HTML.DIV({
    class: "nav nav-dashboard"
  }, "\n      ", HTML.DIV({
    class: "nav-dashboard-heading"
  }, "\n        ", HTML.H3({
    class: "nav-dashboard-title"
  }, "\n          ", Spacebars.With(function() {
    return Spacebars.call(view.lookup("registry"));
  }, function() {
    return [ "\n           ", HTML.SPAN(Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), view.lookup("i18nKeyTitle"), view.lookup("label"));
    })), "\n          " ];
  }), "\n        "), "\n      "), "\n      ", HTML.DIV({
    class: "nav-dashboard-controls"
  }, "\n        ", HTML.Raw("<!-- dashboardHeaderControls -->"), "\n        ", Blaze._TemplateWith(function() {
    return {
      template: Spacebars.call(view.lookup("dashboardHeaderControls"))
    };
  }, function() {
    return Spacebars.include(function() {
      return Spacebars.call(Template.__dynamic);
    });
  }), "\n      "), "\n    ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dashboard.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/templates/dashboard.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);
var translateRegistry;
module.watch(require("../../../../../../lib/api"), {
  translateRegistry: function (v) {
    translateRegistry = v;
  }
}, 2);
//
// registry helper for the dashboard, assembles i18n labels
//
Template.dashboardHeader.helpers({
  registry: function () {
    // just some handle little helpers for default package i18nKey/i18nLabel
    var route = Reaction.Router.getRouteName();
    var registry = Reaction.getRegistryForCurrentRoute() || {};

    if (registry && route) {
      return translateRegistry(registry);
    }
  }
}); //
// dashboard events
//

Template.dashboardHeader.events({
  "click [data-event-action=showPackageSettings]": function () {
    Reaction.showActionView();
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"actionView.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/components/actionView.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Blaze;
module.watch(require("meteor/gadicc:blaze-react-component"), {
  "default": function (v) {
    Blaze = v;
  }
}, 3);
var Admin;
module.watch(require("../../../ui/client/providers"), {
  Admin: function (v) {
    Admin = v;
  }
}, 4);
var Radium;
module.watch(require("radium"), {
  "default": function (v) {
    Radium = v;
  }
}, 5);
module.watch(require("velocity-animate"));
module.watch(require("velocity-animate/velocity.ui"));
var VelocityTransitionGroup;
module.watch(require("velocity-react"), {
  VelocityTransitionGroup: function (v) {
    VelocityTransitionGroup = v;
  }
}, 6);
var debounce;
module.watch(require("lodash/debounce"), {
  "default": function (v) {
    debounce = v;
  }
}, 7);
var IconButton, Translation, Overlay;
module.watch(require("../../../ui/client/components"), {
  IconButton: function (v) {
    IconButton = v;
  },
  Translation: function (v) {
    Translation = v;
  },
  Overlay: function (v) {
    Overlay = v;
  }
}, 8);
var getComponent;
module.watch(require("../../../components/lib"), {
  getComponent: function (v) {
    getComponent = v;
  }
}, 9);

var getStyles = function (props) {
  var minWidth = Math.min(props.viewportWidth, 400);
  var viewSize = minWidth;
  var viewMaxSize = "400px";
  var actionView = props.actionView || {};
  var provides = actionView.provides || []; // legacy provides could be a string, is an array since 1.5.0, check for either.
  // prototype.includes has the fortunate side affect of checking string equality as well as array inclusion.

  var isBigView = provides.includes("dashboard") || provides.includes("shortcut") && actionView.container === "dashboard";

  if (isBigView) {
    viewSize = "90vw";
    viewMaxSize = "100%";
  }

  if (actionView.meta && actionView.meta.actionView) {
    var isSmView = actionView.meta.actionView.dashboardSize === "sm";
    var isMdView = actionView.meta.actionView.dashboardSize === "md";
    var isLgView = actionView.meta.actionView.dashboardSize === "lg";

    if (isSmView) {
      viewSize = minWidth + "px";
      viewMaxSize = minWidth + "px";
    }

    if (isMdView) {
      viewSize = "50vw";
      viewMaxSize = "50vw";
    }

    if (isLgView) {
      viewSize = "90vw";
      viewMaxSize = "90vw";
    }
  }

  if (props.actionViewIsOpen === false) {
    viewSize = 400;
  }

  return {
    base: {
      "display": "flex",
      "flexDirection": "row",
      "height": "100vh",
      "position": "relative",
      "width": viewSize,
      "maxWidth": viewMaxSize,
      "boxShadow": isBigView ? "0 0 40px rgba(0,0,0,.1)" : "",
      "flex": "0 0 auto",
      "backgroundColor": "white",
      "overflow": "hidden",
      "transition": "width 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955))",
      "zIndex": 1050,
      "@media only screen and (max-width: 949px)": {
        width: "auto",
        maxWidth: "100%"
      },
      "@media only screen and (max-width: 767px)": {
        maxWidth: "100%"
      }
    },
    header: {
      display: "flex",
      alignItems: "center",
      position: "relative",
      minHeight: "56px",
      height: "56px",
      padding: "0 20px"
    },
    heading: {
      display: "flex",
      alignItems: "center",
      flex: "1 1 auto",
      position: "relative",
      margin: "0 0 0 1rem",
      height: "100%"
    },
    body: {
      display: "flex",
      flex: "1 1 auto",
      overflow: "auto",
      WebkitOverflowScrolling: "touch"
    },
    masterViewPanel: {
      "display": "flex",
      "flexDirection": "column",
      "flex": "1 1 auto",
      "maxWidth": viewMaxSize,
      "@media only screen and (max-width: 949px)": {
        width: "100vw",
        maxWidth: "100%"
      }
    },
    masterView: {
      flex: "1 1 auto",
      // height: "100%",
      overflow: "auto" // WebkitOverflowScrolling: "touch"

    },
    detailViewPanel: {
      "display": "flex",
      "flexDirection": "column",
      "flex": "1 1 auto",
      "maxWidth": viewMaxSize,
      "height": "100vh",
      "backgroundColor": "white",
      "borderRight": "1px solid #ccc",
      "@media only screen and (max-width: 949px)": {
        position: "absolute",
        top: 0,
        right: 0,
        width: "96vw",
        zIndex: 1050
      }
    },
    detailView: {
      width: "100%"
    },
    backButton: {
      height: "100%"
    },
    backButtonContainers: {
      display: "flex",
      alignItems: "center",
      height: "100%"
    }
  };
};

var ActionView =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ActionView, _Component);

  function ActionView(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      isMobile: _this.isMobile,
      enterAnimation: {
        animation: {
          translateX: 0
        },
        duration: 200,
        easing: "easeInOutQuad"
      },
      leaveAnimation: {
        animation: {
          translateX: 400
        },
        duration: 200,
        easing: "easeInOutQuad"
      },
      rtlEnterAnimation: {
        animation: {
          translateX: ["0%", "-100%"]
        },
        duration: 200,
        easing: "easeInOutQuad"
      },
      rtlLeaveAnimation: {
        animation: {
          translateX: "-100%"
        },
        duration: 200,
        easing: "easeInOutQuad"
      },
      enterAnimationForDetailView: {
        animation: {
          width: 400
        },
        duration: 200,
        easing: "easeInOutQuad"
      },
      leaveAnimationForDetailView: {
        animation: {
          width: 0
        },
        duration: 200,
        easing: "easeInOutQuad"
      }
    };
    _this.handleResize = debounce(function () {
      if (window) {
        _this.setState({
          isMobile: _this.isMobile
        });
      }
    }, 66);
    return _this;
  }

  var _proto = ActionView.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      if (window) {
        window.addEventListener("resize", this.handleResize, false);
      }
    }

    return componentDidMount;
  }();

  _proto.componentWillUnmount = function () {
    function componentWillUnmount() {
      if (window) {
        window.removeEventListener("resize", this.handleResize);
      }
    }

    return componentWillUnmount;
  }();

  _proto.renderControlComponent = function () {
    function renderControlComponent() {
      if (this.props.actionView && typeof this.props.actionView.template === "string") {
        // Render a react component if one has been registered by name
        try {
          var component = getComponent(this.props.actionView.template);
          return React.createElement("div", {
            style: this.styles.masterView,
            className: "master"
          }, React.createElement(component, this.props.actionView.data));
        } catch (e) {
          return React.createElement("div", {
            style: this.styles.masterView,
            className: "master"
          }, React.createElement(Blaze, (0, _extends2.default)({}, this.props.actionView.data, {
            template: this.props.actionView.template
          })));
        }
      }

      return null;
    }

    return renderControlComponent;
  }();

  _proto.renderDetailComponent = function () {
    function renderDetailComponent() {
      if (this.props.detailView && typeof this.props.detailView.template === "string") {
        return React.createElement("div", {
          style: this.styles.detailView,
          className: "detail"
        }, React.createElement(Blaze, (0, _extends2.default)({}, this.props.detailView.data, {
          template: this.props.detailView.template
        })));
      }

      return null;
    }

    return renderDetailComponent;
  }();

  _proto.renderFooter = function () {
    function renderFooter() {// if (this.props.footerTemplate) {
      //   return (
      //     <Blaze template={this.props.footerTemplate} />
      //   );
      // }
    }

    return renderFooter;
  }();

  _proto.renderBackButton = function () {
    function renderBackButton() {
      var button;

      if (this.props.isActionViewAtRootView === false) {
        button = React.createElement(IconButton, {
          bezelStyle: "flat",
          icon: "fa fa-arrow-left",
          onClick: this.props.handleActionViewBack
        });
      } else {
        button = React.createElement(IconButton, {
          bezelStyle: "flat",
          icon: "fa fa-times",
          onClick: this.props.handleActionViewClose
        });
      }

      return React.createElement("div", {
        style: this.styles.backButton
      }, React.createElement("div", {
        style: this.styles.backButtonContainers
      }, button));
    }

    return renderBackButton;
  }();

  _proto.renderDetailViewBackButton = function () {
    function renderDetailViewBackButton() {
      if (this.props.isDetailViewAtRootView === false) {
        return React.createElement("div", {
          style: this.styles.backButton
        }, React.createElement("div", {
          style: this.styles.backButtonContainers
        }, React.createElement(IconButton, {
          bezelStyle: "flat",
          icon: "fa fa-arrow-left",
          onClick: this.props.handleActionViewDetailBack
        })));
      }

      return React.createElement(IconButton, {
        bezelStyle: "flat",
        icon: "fa fa-times",
        onClick: this.props.handleActionViewDetailClose
      });
    }

    return renderDetailViewBackButton;
  }();

  _proto.renderMasterView = function () {
    function renderMasterView() {
      var actionView = this.props.actionView;
      return React.createElement("div", {
        style: this.styles.masterViewPanel
      }, React.createElement("div", {
        style: this.styles.header,
        className: "header"
      }, this.renderBackButton(), React.createElement("div", {
        style: this.styles.heading,
        className: "heading"
      }, React.createElement("h3", {
        className: "title",
        style: this.styles.title
      }, React.createElement(Translation, {
        defaultValue: actionView.label || "Dashboard",
        i18nKey: actionView.i18nKeyLabel || "admin.dashboard.coreTitle"
      }))), React.createElement("div", {
        className: "controls\xBB"
      })), React.createElement("div", {
        style: this.styles.body,
        className: "admin-controls-content action-view-body"
      }, this.renderControlComponent()));
    }

    return renderMasterView;
  }();

  _proto.renderDetailView = function () {
    function renderDetailView() {
      var actionView = this.props.actionView;
      var baseClassName = classnames({
        "rui": true,
        "admin": true,
        "action-view-pane": true,
        "action-view-detail": true
      });

      if (this.props.detailViewIsOpen) {
        return React.createElement("div", {
          className: baseClassName,
          style: this.styles.detailViewPanel
        }, React.createElement("div", {
          style: this.styles.header,
          className: "header"
        }, React.createElement(VelocityTransitionGroup, {
          enter: this.backButtonEnterAnimation,
          leave: this.backButtonLeaveAnimaton
        }, this.renderDetailViewBackButton()), React.createElement("div", {
          style: this.styles.heading,
          className: "heading"
        }, React.createElement("h3", {
          className: "title",
          style: this.styles.title
        }, React.createElement(Translation, {
          defaultValue: actionView.label,
          i18nKey: actionView.i18nKeyLabel
        }))), React.createElement("div", {
          className: "controls"
        })), React.createElement("div", {
          style: this.styles.body,
          className: "admin-controls-content action-view-body"
        }, this.renderDetailComponent()));
      }
    }

    return renderDetailView;
  }();

  _proto.renderActionView = function () {
    function renderActionView() {
      var baseClassName = classnames({
        "rui": true,
        "admin": true,
        "action-view-pane": true,
        "action-view": true,
        "open": this.props.actionViewIsOpen
      });

      if (this.props.actionViewIsOpen) {
        return React.createElement("div", {
          style: this.styles.base,
          className: baseClassName,
          role: "complementary"
        }, this.renderMasterView(), React.createElement(Overlay, {
          isVisible: this.showDetailViewOverlay,
          onClick: this.props.handleActionViewDetailClose
        }), React.createElement(VelocityTransitionGroup, {
          enter: this.state.enterAnimationForDetailView,
          leave: this.state.leaveAnimationForDetailView
        }, this.renderDetailView()), React.createElement("div", {
          className: "admin-controls-footer"
        }, React.createElement("div", {
          className: "admin-controls-container"
        }, this.renderFooter())));
      }

      return null;
    }

    return renderActionView;
  }();

  _proto.render = function () {
    function render() {
      var isRtl = document.querySelector("html").className === "rtl";
      return React.createElement("div", null, React.createElement(VelocityTransitionGroup, {
        enter: isRtl ? this.state.rtlEnterAnimation : this.state.enterAnimation,
        leave: isRtl ? this.state.rtlLeaveAnimation : this.state.leaveAnimation
      }, this.renderActionView()), React.createElement(Overlay, {
        isVisible: this.showOverlay,
        onClick: this.props.handleActionViewClose
      }));
    }

    return render;
  }();

  (0, _createClass2.default)(ActionView, [{
    key: "isMobile",
    get: function () {
      return window.matchMedia("(max-width: 991px)").matches;
    }
  }, {
    key: "actionViewIsLargeSize",
    get: function () {
      var meta = this.props.actionView.meta;
      var dashboardSize = meta && meta.actionView && meta.actionView.dashboardSize || "sm";
      var includesDashboard = this.props.actionView.provides && this.props.actionView.provides.includes("dashboard");
      return includesDashboard || dashboardSize !== "sm";
    }
  }, {
    key: "showOverlay",
    get: function () {
      if (this.props.actionViewIsOpen === false) {
        return false;
      }

      return this.actionViewIsLargeSize || this.state.isMobile;
    }
  }, {
    key: "showDetailViewOverlay",
    get: function () {
      return this.props.detailViewIsOpen && this.state.isMobile;
    }
  }, {
    key: "styles",
    get: function () {
      return getStyles(this.props);
    }
  }, {
    key: "backButtonEnterAnimation",
    get: function () {
      return {
        animation: {
          display: "flex",
          position: "absolute",
          left: 20,
          opaticy: 1
        },
        duration: 200
      };
    }
  }, {
    key: "backButtonLeaveAnimaton",
    get: function () {
      return {
        animation: {
          display: "flex",
          position: "absolute",
          left: -30,
          opaticy: 0
        },
        duration: 200
      };
    }
  }]);
  return ActionView;
}(Component);

ActionView.propTypes = {
  actionView: PropTypes.object,
  actionViewIsOpen: PropTypes.bool,
  buttons: PropTypes.array,
  detailView: PropTypes.object,
  detailViewIsOpen: PropTypes.bool,
  handleActionViewBack: PropTypes.func,
  handleActionViewClose: PropTypes.func,
  handleActionViewDetailBack: PropTypes.func,
  handleActionViewDetailClose: PropTypes.func,
  isActionViewAtRootView: PropTypes.bool,
  isDetailViewAtRootView: PropTypes.bool,
  language: PropTypes.string,
  viewportWidth: PropTypes.number
};
module.exportDefault(Admin()(Radium(ActionView)));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/components/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./actionView"), {
  "default": function (v) {
    exports.ActionView = v;
  }
}, 0);
module.watch(require("./packageList"), {
  "default": function (v) {
    exports.PackageList = v;
  }
}, 1);
module.watch(require("./toolbar"), {
  "default": function (v) {
    exports.Toolbar = v;
  }
}, 2);
module.watch(require("./shortcutBar"), {
  "default": function (v) {
    exports.ShortcutBar = v;
  }
}, 3);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"packageList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/components/packageList.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Card, CardHeader, CardBody, CardGroup, ListItem;
module.watch(require("../../../ui/client/components"), {
  Card: function (v) {
    Card = v;
  },
  CardHeader: function (v) {
    CardHeader = v;
  },
  CardBody: function (v) {
    CardBody = v;
  },
  CardGroup: function (v) {
    CardGroup = v;
  },
  ListItem: function (v) {
    ListItem = v;
  }
}, 3);
var getComponent;
module.watch(require("../../../components/lib"), {
  getComponent: function (v) {
    getComponent = v;
  }
}, 4);

var PackageList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PackageList, _Component);

  function PackageList() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {}, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = PackageList.prototype;

  _proto.isExpanded = function () {
    function isExpanded(cardName) {
      if (this.state["card_" + cardName] && typeof this.state["card_" + cardName].isExpanded === "boolean") {
        return this.state["card_" + cardName].isExpanded;
      }

      return true;
    }

    return isExpanded;
  }();

  _proto.handleCardExpand = function () {
    function handleCardExpand(cardName) {
      var _setState;

      var isExpanded;

      if (typeof this.state["card_" + cardName] === "undefined") {
        isExpanded = false;
      } else {
        isExpanded = !this.state["card_" + cardName].isExpanded;
      }

      this.setState((_setState = {}, _setState["card_" + cardName] = {
        isExpanded: isExpanded
      }, _setState));

      if (this.props.onCardExpand) {
        this.props.onCardExpand(cardName);
      }
    }

    return handleCardExpand;
  }();

  _proto.renderSections = function () {
    function renderSections() {
      var _this2 = this;

      if (this.props.groupedPackages) {
        // Loop through the groups of packages
        return _map(this.props.groupedPackages, function (group, groupName) {
          // Loop through the individual cards of packages
          if (Array.isArray(group.packages)) {
            var items = group.packages.map(function (packageData, index) {
              var elements = []; // Standard list element

              elements.push(React.createElement(ListItem, {
                key: index,
                i18nKeyLabel: packageData.i18nKeyLabel,
                icon: packageData.icon,
                label: packageData.label,
                onClick: _this2.props.handleShowPackage,
                actionType: "arrow",
                value: packageData
              })); // Look for a registered component_ActionDashboard component

              var actionComponent;

              try {
                actionComponent = getComponent(packageData.template + "_ActionDashboard");
              } catch (e) {
                actionComponent = null;
              } finally {
                // If one exists, add it to the list of elements
                if (actionComponent) {
                  elements.push(React.createElement(Card, {
                    expandable: true,
                    key: "action-" + index
                  }, React.createElement(CardBody, null, React.createElement(actionComponent))));
                }
              }

              return elements;
            });
            return React.createElement(Card, {
              key: groupName,
              expanded: _this2.isExpanded(groupName),
              onExpand: _this2.handleCardExpand.bind(_this2, groupName)
            }, React.createElement(CardHeader, {
              actAsExpander: true,
              title: group.title,
              i18nKeyTitle: group.i18nKeyTitle
            }), React.createElement(CardBody, {
              expandable: true,
              padded: false
            }, items));
          }

          return null;
        });
      }

      return null;
    }

    return renderSections;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(CardGroup, null, this.renderSections());
    }

    return render;
  }();

  return PackageList;
}(Component);

PackageList.propTypes = {
  groupedPackages: PropTypes.object,
  handleShowPackage: PropTypes.func,
  onCardExpand: PropTypes.func
};
module.exportDefault(PackageList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopSelect.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/components/shopSelect.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module1.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

/**
 * @file ShopSelect - React component wrapper for shop select dropdown menu displayed on toolbar and tagnav
 * @module ShopSelect
 * @extends Component
 */
var ShopSelect =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ShopSelect, _Component);

  function ShopSelect() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ShopSelect.prototype;

  /**
   * renderDropDownMenu
   * @summary Handles dropdown menu display
   * @param {object} menuItems
   * @return {JSX} React node containing dropdown menu
   */
  _proto.renderDropDownMenu = function () {
    function renderDropDownMenu(menuItems) {
      if (this.props.isTagNav) {
        return React.createElement(Components.DropDownMenu, {
          onChange: this.props.onShopSelectChange,
          value: this.props.shopId,
          closeOnClick: true,
          buttonElement: React.createElement(Components.Button, {
            icon: "fa fa-caret-down",
            iconAfter: true,
            label: this.props.shopName
          })
        }, menuItems);
      }

      return React.createElement(Components.DropDownMenu, {
        onChange: this.props.onShopSelectChange,
        value: this.props.shopId,
        closeOnClick: true
      }, menuItems);
    }

    return renderDropDownMenu;
  }();

  _proto.render = function () {
    function render() {
      var menuItems;
      var shops = this.props.shops;

      if (Array.isArray(shops)) {
        menuItems = shops.map(function (shop, index) {
          return React.createElement(Components.MenuItem, {
            label: shop.name,
            selectLabel: shop.name,
            value: shop._id,
            key: index
          });
        });
      }

      return React.createElement("div", {
        className: this.props.className || "hidden-xs"
      }, this.renderDropDownMenu(menuItems));
    }

    return render;
  }();

  return ShopSelect;
}(Component);

ShopSelect.propTypes = {
  className: PropTypes.string,
  isTagNav: PropTypes.bool,
  onShopSelectChange: PropTypes.func,
  shopId: PropTypes.string,
  shopName: PropTypes.string,
  shops: PropTypes.array
};
registerComponent("ShopSelect", ShopSelect);
module1.exportDefault(ShopSelect);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shortcutBar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/components/shortcutBar.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 0);

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 3);
var FlatButton, Icon;
module.watch(require("../../../ui/client/components"), {
  FlatButton: function (v) {
    FlatButton = v;
  },
  Icon: function (v) {
    Icon = v;
  }
}, 4);

var ShortcutBar =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ShortcutBar, _Component);

  function ShortcutBar() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ShortcutBar.prototype;

  _proto.renderAdminButton = function () {
    function renderAdminButton() {
      return React.createElement(FlatButton, {
        onClick: this.props.handleShowDashboard
      }, React.createElement(Icon, {
        icon: "icon icon-reaction-logo"
      }));
    }

    return renderAdminButton;
  }();

  _proto.renderSections = function () {
    function renderSections() {
      var _this = this;

      if (this.props.groupedPackages) {
        // Loop through the groups of packages
        return _map(this.props.groupedPackages, function (group, groupName) {
          // Loop through the individual cards of packages
          if (Array.isArray(group.packages)) {
            var items = group.packages.map(function (packageData, index) {
              var isActive = _isEqual(_this.props.currentView, packageData); // Standard list element


              return React.createElement(FlatButton, {
                active: isActive,
                key: index,
                i18nKeyTooltip: packageData.i18nKeyLabel,
                icon: packageData.icon,
                onClick: _this.props.handleOpenShortcut,
                tooltip: packageData.label,
                value: packageData,
                tooltipAttachment: "middle left"
              });
            });
            return React.createElement("nav", {
              key: groupName,
              className: "rui toolbar-group admin-controls-quicklinks",
              style: {
                marginBottom: 20
              }
            }, items);
          }

          return null;
        });
      }

      return null;
    }

    return renderSections;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "rui toolbar toolbar-vertical admin-shortcut-bar"
      }, React.createElement("nav", {
        style: {
          height: 54,
          alignItems: "center",
          justifyContent: "center"
        }
      }, this.renderAdminButton()), this.renderSections());
    }

    return render;
  }();

  return ShortcutBar;
}(Component);

ShortcutBar.propTypes = {
  currentView: PropTypes.object,
  groupedPackages: PropTypes.object,
  handleOpenShortcut: PropTypes.func,
  handleShowDashboard: PropTypes.func,
  handleShowPackage: PropTypes.func
};
module.exportDefault(ShortcutBar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toolbar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/components/toolbar.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Blaze;
module.watch(require("meteor/gadicc:blaze-react-component"), {
  "default": function (v) {
    Blaze = v;
  }
}, 2);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 3);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 4);
var FlatButton, Switch, Icon, VerticalDivider;
module.watch(require("../../../ui/client/components"), {
  FlatButton: function (v) {
    FlatButton = v;
  },
  Switch: function (v) {
    Switch = v;
  },
  Icon: function (v) {
    Icon = v;
  },
  VerticalDivider: function (v) {
    VerticalDivider = v;
  }
}, 5);
var Translatable;
module.watch(require("../../../ui/client/providers"), {
  Translatable: function (v) {
    Translatable = v;
  }
}, 6);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var ShopSelect;
module.watch(require("../components/shopSelect"), {
  "default": function (v) {
    ShopSelect = v;
  }
}, 8);

var PublishControls =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PublishControls, _Component);

  function PublishControls() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.onViewContextChange = function (event, isChecked) {
      if (typeof _this.props.onViewContextChange === "function") {
        _this.props.onViewContextChange(event, isChecked ? "administrator" : "customer");
      }
    }, _this.onShopSelectChange = function (event, shopId) {
      if (typeof _this.props.onShopSelectChange === "function") {
        _this.props.onShopSelectChange(event, shopId);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = PublishControls.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      var _this2 = this;

      // Tracker is used to determine if a user has `hasShopSwitcherAccess` permission
      // If they do not, set the shop one time, and then not again
      // If the user does have hasShopSwitcherAccess` permission, shop is set by this.renderShopSelect()
      this.tracker = Tracker.autorun(function () {
        if (!Reaction.hasShopSwitcherAccess()) {
          _this2.onShopSelectChange(null, Reaction.getSellerShopId());
        }
      });
    }

    return componentDidMount;
  }();

  _proto.componentWillUnmount = function () {
    function componentWillUnmount() {
      // Unmount the tracker that is checking for `hasShopSwitcherAccess` permission
      this.tracker.stop();
    }

    return componentWillUnmount;
  }();

  _proto.renderViewControls = function () {
    function renderViewControls() {
      if (this.props.showViewAsControls) {
        return React.createElement(FlatButton, {
          label: "Private",
          i18nKeyLabel: "app.private",
          i18nKeyToggleOnLabel: "app.public",
          toggleOnLabel: "Public",
          icon: "fa fa-eye-slash",
          onIcon: "fa fa-eye",
          toggle: true,
          value: "public",
          onValue: "private",
          toggleOn: this.isVisible === "public",
          onToggle: this.handleVisibilityChange
        });
      }

      return null;
    }

    return renderViewControls;
  }();

  _proto.renderShopSelect = function () {
    function renderShopSelect() {
      // If a user has owner, admin, or marketplace permissions for more than one (1) shops
      // show the shop switcher to allow for easy switching between the shops
      if (Reaction.hasShopSwitcherAccess()) {
        return React.createElement(ShopSelect, {
          onShopSelectChange: this.onShopSelectChange,
          shopId: this.props.shopId,
          shops: this.props.shops
        });
      }

      return null;
    }

    return renderShopSelect;
  }();

  _proto.renderVisibilitySwitch = function () {
    function renderVisibilitySwitch() {
      if (this.props.hasCreateProductAccess) {
        return React.createElement(Switch, {
          i18nKeyLabel: "app.editMode",
          i18nKeyOnLabel: "app.editMode",
          label: "Edit Mode",
          onLabel: "Edit Mode",
          checked: !this.props.isPreview,
          onChange: this.onViewContextChange
        });
      }

      return null;
    }

    return renderVisibilitySwitch;
  }();

  _proto.renderAdminButton = function () {
    function renderAdminButton() {
      return React.createElement("div", {
        className: "hidden-xs"
      }, React.createElement(Components.ToolbarGroup, {
        visibleOnMobile: true
      }, React.createElement(VerticalDivider, {
        key: "divder-2"
      }), React.createElement(FlatButton, {
        key: "dashboard-button",
        onClick: function () {
          Reaction.showActionView({
            i18nKeyTitle: "dashboard.coreTitle",
            title: "Dashboard",
            template: "dashboardPackages"
          });
        }
      }, React.createElement(Icon, {
        icon: "icon icon-reaction-logo"
      }))));
    }

    return renderAdminButton;
  }();

  _proto.renderAddButton = function () {
    function renderAddButton() {
      if (this.props.hasCreateProductAccess) {
        return React.createElement(FlatButton, {
          i18nKeyTooltip: "app.shortcut.addProductLabel",
          icon: "fa fa-plus",
          tooltip: "Add Product",
          onClick: this.props.onAddProduct
        });
      }

      return null;
    }

    return renderAddButton;
  }();

  _proto.renderPackageButons = function () {
    function renderPackageButons() {
      if (Array.isArray(this.props.packageButtons)) {
        return this.props.packageButtons.map(function (packageButton, index) {
          return React.createElement(FlatButton, (0, _extends2.default)({}, packageButton, {
            key: index
          }));
        });
      }

      return null;
    }

    return renderPackageButons;
  }();

  _proto.renderCustomControls = function () {
    function renderCustomControls() {
      if (this.props.dashboardHeaderTemplate && this.props.hasCreateProductAccess) {
        if (this.props.isEnabled) {
          return [React.createElement("div", {
            className: "hidden-xs",
            key: "customControlsVerticaldivider"
          }, React.createElement(VerticalDivider, null)), React.createElement(Blaze, {
            key: "customControls",
            template: this.props.dashboardHeaderTemplate
          })];
        }

        return [React.createElement(Blaze, {
          key: "customControls",
          template: this.props.dashboardHeaderTemplate
        })];
      }

      return null;
    }

    return renderCustomControls;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.Toolbar, null, React.createElement(Components.ToolbarGroup, {
        firstChild: true
      }, this.renderVisibilitySwitch(), this.renderShopSelect()), React.createElement(Components.ToolbarGroup, {
        lastChild: true
      }, this.renderAddButton(), this.renderPackageButons(), this.renderCustomControls()), this.renderAdminButton());
    }

    return render;
  }();

  return PublishControls;
}(Component);

PublishControls.propTypes = {
  dashboardHeaderTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.string]),
  documentIds: PropTypes.arrayOf(PropTypes.string),
  documents: PropTypes.arrayOf(PropTypes.object),
  hasCreateProductAccess: PropTypes.bool,
  isEnabled: PropTypes.bool,
  isPreview: PropTypes.bool,
  onAddProduct: PropTypes.func,
  onShopSelectChange: PropTypes.func,
  onViewContextChange: PropTypes.func,
  onVisibilityChange: PropTypes.func,
  packageButtons: PropTypes.arrayOf(PropTypes.object),
  shopId: PropTypes.string,
  shops: PropTypes.arrayOf(PropTypes.object),
  showViewAsControls: PropTypes.bool,
  translation: PropTypes.shape({
    lang: PropTypes.string
  })
};
PublishControls.defaultProps = {
  showViewAsControls: true
};
module.exportDefault(Translatable()(PublishControls));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"actionViewContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/containers/actionViewContainer.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  "default": function () {
    return ActionViewContainer;
  }
});

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 0);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 1);
var StyleRoot;
module.watch(require("radium"), {
  StyleRoot: function (v) {
    StyleRoot = v;
  }
}, 2);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var AdminContextProvider;
module.watch(require("../../../ui/client/providers"), {
  AdminContextProvider: function (v) {
    AdminContextProvider = v;
  }
}, 5);

function handleActionViewBack() {
  Reaction.popActionView();
}

function handleActionViewDetailBack() {
  Reaction.popActionViewDetail();
}

function handleActionViewClose() {
  Reaction.hideActionView();
}

function handleActionViewDetailClose() {
  Reaction.hideActionViewDetail();
}

function composer(props, onData) {
  var shortcuts = Reaction.Apps({
    provides: "shortcut",
    enabled: true
  });
  var items = [];

  if (_isArray(shortcuts)) {
    for (var _iterator = shortcuts, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray2) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _shortcut = _ref;

      if (!_shortcut.container) {
        items.push({
          type: "link",
          href: Reaction.Router.pathFor(_shortcut.name),
          className: Reaction.Router.isActiveClassName(_shortcut.name),
          icon: _shortcut.icon,
          tooltip: _shortcut.label || "",
          i18nKeyTooltip: _shortcut.i18nKeyLabel,
          tooltipPosition: "left middle"
        });
      }
    }
  }

  items.push({
    type: "seperator"
  });
  items.push({
    icon: "plus",
    tooltip: "Create Content",
    i18nKeyTooltip: "app.createContent",
    tooltipPosition: "left middle"
  }); // calculated here and not in component, as environment dependent.

  var viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
  onData(null, {
    isAdminArea: true,
    actionView: Reaction.getActionView(),
    detailView: Reaction.getActionViewDetail(),
    data: props.data,
    buttons: items,
    isActionViewAtRootView: Reaction.isActionViewAtRootView(),
    isDetailViewAtRootView: Reaction.isActionViewDetailAtRootView(),
    actionViewIsOpen: Reaction.isActionViewOpen(),
    detailViewIsOpen: Reaction.isActionViewDetailOpen(),
    viewportWidth: viewportWidth,
    // Callbacks
    handleActionViewBack: handleActionViewBack,
    handleActionViewDetailBack: handleActionViewDetailBack,
    handleActionViewClose: handleActionViewClose,
    handleActionViewDetailClose: handleActionViewDetailClose
  });
}

function ActionViewContainer(Comp) {
  function CompositeComponent(props) {
    return React.createElement(AdminContextProvider, null, React.createElement(StyleRoot, null, React.createElement(Comp, props)));
  }

  return composeWithTracker(composer)(CompositeComponent);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/containers/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./packageListContainer"), {
  "default": function (v) {
    exports.PackageListContainer = v;
  }
}, 0);
module.watch(require("./actionViewContainer"), {
  "default": function (v) {
    exports.ActionViewContainer = v;
  }
}, 1);
module.watch(require("./toolbarContainer"), {
  "default": function (v) {
    exports.ToolbarContainer = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"packageListContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/containers/packageListContainer.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  "default": function () {
    return PackageListContainer;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 3);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);

/**
 * handleShowPackage - Push package into action view navigation stack
 * @param  {SyntheticEvent} event Original event
 * @param  {Object} app Package data
 * @return {undefined} No return value
 */
function handleShowPackage(event, app) {
  Reaction.pushActionView(app);
}
/**
 * handleShowDashboard - Open full dashbaord menu
 * @return {undefined} No return value
 */


function handleShowDashboard() {
  Reaction.hideActionViewDetail();
  Reaction.showActionView({
    i18nKeyTitle: "dashboard.coreTitle",
    title: "Dashboard",
    template: "dashboardPackages"
  });
}
/**
 * handleOpenShortcut - Push dashbaord & package into action view navigation stack
 * @param  {SyntheticEvent} event Original event
 * @param  {Object} app Package data
 * @return {undefined} No return value
 */


function handleOpenShortcut(event, app) {
  Reaction.hideActionViewDetail();
  Reaction.showActionView(app);
}

function composer(props, onData) {
  var audience = Roles.getRolesForUser(Meteor.userId(), Reaction.getShopId());
  var settings = Reaction.Apps({
    provides: "settings",
    enabled: true,
    audience: audience
  }) || [];
  var dashboard = Reaction.Apps({
    provides: "dashboard",
    enabled: true,
    audience: audience
  }).filter(function (d) {
    return typeof Template[d.template] !== "undefined";
  }) || [];
  onData(null, {
    currentView: Reaction.getActionView(),
    groupedPackages: {
      actions: {
        title: "Actions",
        i18nKeyTitle: "admin.dashboard.packageGroupActionsLabel",
        packages: dashboard
      },
      settings: {
        title: "Settings",
        i18nKeyTitle: "admin.dashboard.packageGroupSettingsLabel",
        packages: settings
      }
    },
    // Callbacks
    handleShowPackage: handleShowPackage,
    handleShowDashboard: handleShowDashboard,
    handleOpenShortcut: handleOpenShortcut
  });
}

function PackageListContainer(Comp) {
  function CompositeComponent(props) {
    return React.createElement(Comp, props);
  }

  return composeWithTracker(composer)(CompositeComponent);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toolbarContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/containers/toolbarContainer.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  "default": function () {
    return ToolbarContainer;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Tags, Shops;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 5);
var AdminContextProvider;
module.watch(require("../../../ui/client/providers"), {
  AdminContextProvider: function (v) {
    AdminContextProvider = v;
  }
}, 6);
var isRevisionControlEnabled;
module.watch(require("../../../revisions/lib/api"), {
  isRevisionControlEnabled: function (v) {
    isRevisionControlEnabled = v;
  }
}, 7);

var handleAddProduct = function () {
  Reaction.setUserPreferences("reaction-dashboard", "viewAs", "administrator");
  Meteor.call("products/createProduct", function (error, productId) {
    if (Meteor.isClient) {
      var currentTag;
      var currentTagId;

      if (error) {
        throw new Meteor.Error("create-product-error", error);
      } else if (productId) {
        currentTagId = Session.get("currentTag");
        currentTag = Tags.findOne(currentTagId);

        if (currentTag) {
          Meteor.call("products/updateProductTags", productId, currentTag.name, currentTagId);
        } // go to new product


        Reaction.Router.go("product", {
          handle: productId
        });
      }
    }
  });
};
/**
* Handler that fires when the shop selector is changed
* @param {Object} event - the `event` coming from the select change event
* @param {String} shopId - The `value` coming from the select change event
* @returns {undefined}
*/


var handleShopSelectChange = function (event, shopId) {
  if (/^[A-Za-z0-9]{17}$/.test(shopId)) {
    // Make sure shopId is a valid ID
    Reaction.setShopId(shopId);
  }
};

function composer(props, onData) {
  // Reactive data sources
  var routeName = Reaction.Router.getRouteName();
  var shopIds = Reaction.getShopsForUser(["owner", "admin", "dashboard"]);
  var shops = Shops.find({
    _id: {
      $in: shopIds
    }
  }).fetch(); // Standard variables

  var packageButtons = [];

  if (routeName !== "dashboard" && props.showPackageShortcuts) {
    var registryItems = Reaction.Apps({
      provides: "settings",
      container: "dashboard"
    });

    var _loop = function (item) {
      if (Reaction.hasPermission(item.route, Meteor.userId())) {
        var icon = item.icon;

        if (!item.icon && item.provides && item.provides.includes("settings")) {
          icon = "gear";
        }

        packageButtons.push({
          href: item.route,
          icon: icon,
          tooltip: i18next.t(item.i18nKeyLabel, item.i18n),
          tooltipPosition: "left middle",
          onClick: function () {
            Reaction.showActionView(item);
          }
        });
      }
    };

    for (var _iterator = registryItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var item = _ref;

      _loop(item);
    }
  }

  onData(null, {
    packageButtons: packageButtons,
    dashboardHeaderTemplate: props.data.dashboardHeader,
    isPreview: Reaction.isPreview(),
    isEnabled: isRevisionControlEnabled(),
    isActionViewAtRootView: Reaction.isActionViewAtRootView(),
    actionViewIsOpen: Reaction.isActionViewOpen(),
    hasCreateProductAccess: Reaction.hasPermission("createProduct", Meteor.userId(), Reaction.getShopId()),
    shopId: Reaction.getShopId(),
    shops: shops,
    // Callbacks
    onAddProduct: handleAddProduct,
    onShopSelectChange: handleShopSelectChange,
    onViewContextChange: props.handleViewContextChange
  });
}

function ToolbarContainer(Comp) {
  function CompositeComponent(props) {
    return React.createElement(AdminContextProvider, null, React.createElement(Comp, props));
  }

  return composeWithTracker(composer)(CompositeComponent);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dashboard/client/index.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/import/import.html"));
module.watch(require("./templates/import/import.js"));
module.watch(require("./templates/packages/grid/grid.html"));
module.watch(require("./templates/packages/grid/grid.js"));
module.watch(require("./templates/packages/grid/package.html"));
module.watch(require("./templates/packages/grid/package.js"));
module.watch(require("./templates/packages/packages.html"));
module.watch(require("./templates/packages/packages.js"));
module.watch(require("./templates/settings/settings.html"));
module.watch(require("./templates/settings/settings.js"));
module.watch(require("./templates/shop/settings/settings.html"));
module.watch(require("./templates/shop/settings/settings.less"));
module.watch(require("./templates/shop/settings/settings.js"));
module.watch(require("./templates/dashboard.html"));
module.watch(require("./templates/dashboard.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"layout":{"client":{"templates":{"layout":{"alerts":{"alerts.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/alerts/alerts.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.alerts.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.alerts.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/alerts/template.alerts.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("inlineAlerts");
Template["inlineAlerts"] = new Template("Template.inlineAlerts", (function() {
  var view = this;
  return Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("alerts"), view.lookup("placement"), view.lookup("id"));
  }, function() {
    return [ "\n    ", Spacebars.include(view.lookupTemplate("inlineAlert")), "\n  " ];
  });
}));

Template.__checkName("inlineAlert");
Template["inlineAlert"] = new Template("Template.inlineAlert", (function() {
  var view = this;
  return HTML.DIV({
    class: function() {
      return [ "alert alert-", Spacebars.mustache(view.lookup("mode")), " ", Blaze.If(function() {
        return Spacebars.call(Spacebars.dot(view.lookup("options"), "dismissable"));
      }, function() {
        return "alert-dismissable";
      }), " ", Blaze.If(function() {
        return Spacebars.call(view.lookup("isFirstRender"));
      }, function() {
        return "hide";
      }), " ", Spacebars.mustache(Spacebars.dot(view.lookup("options"), "classes")) ];
    }
  }, "\n    ", Blaze.If(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("options"), "dismissable"));
  }, function() {
    return [ "\n    ", HTML.Comment("suppress CheckDtdReferences "), "\n    ", HTML.BUTTON({
      type: "button",
      class: "close",
      "data-dismiss": "alert",
      "aria-hidden": "true"
    }, HTML.CharRef({
      html: "&times;",
      str: "×"
    })), "\n    " ];
  }), "\n    ", Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("options"), "html"));
  }, function() {
    return [ "\n      ", Blaze.View("lookup:message", function() {
      return Spacebars.mustache(view.lookup("message"));
    }), "\n    " ];
  }, function() {
    return [ "\n      ", Blaze.View("lookup:message", function() {
      return Spacebars.makeRaw(Spacebars.mustache(view.lookup("message")));
    }), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"alerts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/alerts/alerts.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var Alerts;
module.watch(require("./inlineAlerts"), {
  "default": function (v) {
    Alerts = v;
  }
}, 3);

/**
 * inlineAlert helpers
 */
Template.inlineAlert.onCreated(function () {
  this.isFirstRender = true;
  return this.isFirstRender;
});
Template.inlineAlert.onRendered(function () {
  var alert = this.data;
  var $node = $(this.firstNode);
  Meteor.defer(function () {
    Alerts.collection_.update(alert._id, {
      $set: {
        seen: true
      }
    });
  });
  $node.removeClass("hide").hide().fadeIn(alert.options.fadeIn, function () {
    if (alert.options.autoHide) {
      Meteor.setTimeout(function () {
        $node.fadeOut(alert.options.fadeOut, function () {
          return Alerts.collection_.remove(alert._id);
        });
      }, alert.options.autoHide);
    }
  });
});
Template.inlineAlerts.helpers({
  alerts: function (alertPlacement, alertId) {
    var id = alertId;
    var placement = alertPlacement;

    if (!placement) {
      placement = "";
    }

    if (!id) {
      id = "";
    }

    return Alerts.collection_.find({
      "options.placement": placement,
      "options.id": id
    });
  }
});
Template.inlineAlert.events({
  "click button.close": function () {
    return Alerts.collection_.remove(this._id);
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inlineAlerts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/alerts/inlineAlerts.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _defaults;

module.watch(require("lodash/defaults"), {
  "default": function (v) {
    _defaults = v;
  }
}, 0);
var i18next;
module.watch(require("../../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 1);
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 2);

/*
 * Forked and modifed from https://github.com/asktomsk/bootstrap-alerts/
 */
var Alerts = {
  /*
  Default options. Can be overridden for application
   */
  defaultOptions: {
    /*
    Button with cross icon to hide (close) alert
     */
    dismissable: true,

    /*
    CSS classes to be appended on each alert DIV (use space for separator)
     */
    classes: "",

    /*
    Hide alert after delay in ms or false to infinity
     */
    autoHide: false,

    /*
    Time in ms before alert fully appears
     */
    fadeIn: 200,

    /*
    If autoHide enabled then fadeOut is time in ms before alert disappears
     */
    fadeOut: 3000,

    /*
    Amount of alerts to be displayed
     */
    alertsLimit: 3,

    /*
    Allows use HTML in messages
     */
    html: false,

    /*
     * define placement to only show where matches
     * use: {{inlineAlerts placement="cart"}}
     * Alerts.add "message","danger", placement:"cart"
     */
    placement: "",

    /*
    Translation key for i18n (translations collection)
     */
    i18nKey: "",

    /*
    unique id (for multiple message placements)
     */
    id: ""
  },

  /*
  Add an alert
   @param message (String) Text to display.
  @param mode (String) One of bootstrap alerts types: success, info, warning, danger
  @param options (Object) Options if required to override some of default ones.
  See Alerts.defaultOptions for all values.
   */
  add: function (alertMessage, mode, alertOptions) {
    var a;
    var message = alertMessage;
    var options = alertOptions; // check options to see if we have translation

    if (options && options.i18nKey && options.i18nKey !== i18next.t(options.i18nKey)) {
      message = i18next.t(options.i18nKey);
    } // get default options


    options = _defaults(alertOptions || {}, Alerts.defaultOptions);

    if (options.type) {
      a = Alerts.collection_.findOne({
        "options.type": options.type
      });

      if (a) {
        Alerts.collection_.update(a._id, {
          $set: {
            message: message,
            mode: mode,
            options: options
          }
        });
        return;
      }
    }

    var count = Alerts.collection_.find({}).count();

    if (count >= options.alertsLimit) {
      Alerts.collection_.find({}, {
        sort: {
          created: -1
        },
        skip: options.alertsLimit - 1
      }).forEach(function (row) {
        Alerts.collection_.remove(row._id);
      });
    }

    Alerts.collection_.insert({
      message: message,
      mode: mode,
      options: options,
      seen: false,
      created: +new Date()
    });
  },

  /*
  Call this function before loading a new page to clear errors from previous page
  Best way is using Router filtering feature to call this function
   */
  removeSeen: function () {
    Alerts.collection_.remove({
      "seen": true,
      "options.sticky": {
        $ne: true
      }
    });
  },

  /*
  If you provide a `type` option when adding an alert, you can call this function
  to later remove that alert.
   */
  removeType: function (type) {
    Alerts.collection_.remove({
      "options.type": type
    });
  },
  collection_: new Mongo.Collection(null)
};
window.Alerts = Alerts;
module.exportDefault(Alerts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reactionAlerts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/alerts/reactionAlerts.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;

var _isObject;

module1.watch(require("lodash/isObject"), {
  "default": function (v) {
    _isObject = v;
  }
}, 0);
var React;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 1);
var ReactDOM;
module1.watch(require("react-dom"), {
  "default": function (v) {
    ReactDOM = v;
  }
}, 2);
var swal;
module1.watch(require("sweetalert2"), {
  "default": function (v) {
    swal = v;
  }
}, 3);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
module1.watch(require("sweetalert2/dist/sweetalert2.css"));
var Alerts;
module1.watch(require("./inlineAlerts"), {
  "default": function (v) {
    Alerts = v;
  }
}, 5);
var Alert;
module1.watch(require("react-s-alert"), {
  "default": function (v) {
    Alert = v;
  }
}, 6);
var getRootNode;
module1.watch(require("../../../../../router/client/browserRouter.js"), {
  getRootNode: function (v) {
    getRootNode = v;
  }
}, 7);

/**
 * @file ReactionAlerts - Shows a popup alert, extends Bootstrap Alerts and adds more alert types. See Bootstrap Alert documentation: https://getbootstrap.com/docs/3.3/components/#alerts
 *
 *
 * @module ReactionAlerts
 */
var getAlertWrapper = function () {
  getRootNode();
  var rootNode = document.getElementById("react-root");
  rootNode.insertAdjacentHTML("beforebegin", "<div id='s-alert-wrapper'></div>");
  return document.getElementById("s-alert-wrapper");
};

var initAlertWrapper = function () {
  ReactDOM.render(React.createElement(Alert, {
    effect: "stackslide",
    position: "bottom-left",
    timeout: 5000,
    html: false,
    onRouteClose: true,
    stack: true,
    offset: 0 // in px - will be added to first alert (bottom or top - depends of the position in config)
    ,
    beep: false
  }), getAlertWrapper());
};

Meteor.startup(function () {
  initAlertWrapper();
});
Object.assign(Alerts, {
  inline: function (alertMessage, type, alertOptions) {
    // Convert error to danger, for inlineAlerts
    var mode = type === "error" ? "danger" : type;
    return this.add(alertMessage, mode, alertOptions);
  },

  /**
   * Show a popup alert
   * @example
   * // Simple
   * Alerts.alert("title", "message", {}, callbackFunction);
   * // - OR, for more control -
   * Alerts.alert({
   *   title: "Title",
   *   text: "Message Text",
   *   type: "success|info|warning|error|"
   * }, callbackFunction);
   *
   * @param  {string|object} titleOrOptions Pass a string or an object containing options
   * @param  {string}   messageOrCallback [description]
   * @param  {string}   options           [description]
   * @param  {function} callback          [description]
   * @return {string}                     [description]
   */
  alert: function (titleOrOptions, messageOrCallback, options, callback) {
    if (_isObject(titleOrOptions)) {
      return swal((0, _objectSpread2.default)({
        useRejections: true,
        type: "info"
      }, titleOrOptions)).then(function (isConfirm) {
        if (isConfirm === true && typeof messageOrCallback === "function") {
          messageOrCallback(isConfirm, false);
        }
      }, function (dismiss) {
        if (dismiss === "cancel" || dismiss === "esc" || dismiss === "overlay") {
          messageOrCallback(false, dismiss);
        }
      }).catch(function (err) {
        if (err === "cancel" || err === "overlay" || err === "timer") {
          return undefined; // Silence error
        }

        throw err;
      });
    }

    var title = titleOrOptions;
    var message = messageOrCallback;
    return swal((0, _objectSpread2.default)({
      useRejections: true,
      title: title,
      text: message,
      type: "info"
    }, options)).then(function (isConfirm) {
      if (isConfirm === true && typeof callback === "function") {
        callback(isConfirm);
      }
    }).catch(function (err) {
      if (err === "cancel" || err === "overlay" || err === "timer") {
        return undefined; // Silence error
      }

      throw err;
    });
  },
  toast: function (message, type, options) {
    switch (type) {
      case "error":
      case "warning":
      case "success":
      case "info":
        return Alert[type](message, options);

      default:
        return Alert.success(message, options);
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"createContentMenu":{"createContentMenu.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/createContentMenu/createContentMenu.html                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.createContentMenu.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.createContentMenu.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/createContentMenu/template.createContentMenu.js                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("createContentMenu");
Template["createContentMenu"] = new Template("Template.createContentMenu", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui items flex quarter"
  }, "\n    ", Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(view.lookup("items")),
      _variable: "item"
    };
  }, function() {
    return [ "\n      ", Blaze._TemplateWith(function() {
      return Spacebars.dataMustache(view.lookup("buttonProps"), view.lookup("item"));
    }, function() {
      return Spacebars.include(view.lookupTemplate("button"));
    }), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"createContentMenu.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/createContentMenu/createContentMenu.js                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Reaction;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 0);
var Tags;
module.watch(require("../../../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 3);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 4);
Template.createContentMenu.helpers({
  buttonProps: function (item) {
    return {
      label: item.label,
      i18nKeyLabel: item.i18nKeyLabel,
      status: "default",
      onClick: function () {
        // TODO: Move this to somewhere better, like, core or product package
        if (item.route === "/products/createProduct") {
          Meteor.call("products/createProduct", function (error, productId) {
            if (Meteor.isClient) {
              var currentTag;
              var currentTagId;

              if (error) {
                throw new Meteor.Error("create-product-error", error);
              } else if (productId) {
                currentTagId = Session.get("currentTag");
                currentTag = Tags.findOne(currentTagId);

                if (currentTag) {
                  Meteor.call("products/updateProductTags", productId, currentTag.name, currentTagId);
                } // go to new product


                Reaction.Router.go("product", {
                  handle: productId
                });
              }
            }
          });
        }
      }
    };
  },
  items: function () {
    var apps = Reaction.Apps({
      provides: "shortcut",
      container: "addItem"
    }) || [];
    return apps;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"header":{"brand.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/header/brand.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.brand.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.brand.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/header/template.brand.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("headerBrand");
Template["headerBrand"] = new Template("Template.headerBrand", (function() {
  var view = this;
  return HTML.A({
    href: function() {
      return Spacebars.mustache(view.lookup("pathFor"), "index");
    }
  }, HTML.SPAN(Blaze.View("lookup:siteName", function() {
    return Spacebars.mustache(view.lookup("siteName"));
  })));
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"button.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/header/button.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.button.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.button.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/header/template.button.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("menuButton");
Template["menuButton"] = new Template("Template.menuButton", (function() {
  var view = this;
  return HTML.Raw('<button class="rui button">\n    <i class="fa fa-bars"></i>\n  </button>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tags.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/header/tags.html                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.tags.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.tags.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/header/template.tags.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("headerTags");
Template["headerTags"] = new Template("Template.headerTags", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      tags: Spacebars.call(view.lookup("tags"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("tagsComponent"));
  });
}));

Template.__checkName("headerLinks");
Template["headerLinks"] = new Template("Template.headerLinks", (function() {
  var view = this;
  return HTML.UL({
    class: "list-inline tag-link-list",
    id: "tag-link-list"
  }, "\n  ", Blaze.Each(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("."), "tags"));
  }, function() {
    return [ "\n   ", HTML.LI({
      class: function() {
        return Spacebars.mustache(view.lookup("activeTag"));
      }
    }, "\n    ", HTML.A({
      href: function() {
        return Spacebars.mustache(view.lookup("pathFor"), "tag", Spacebars.kw({
          slug: view.lookup("slug")
        }));
      },
      class: "header-tag",
      id: function() {
        return [ "tag-", Spacebars.mustache(view.lookup("_id")) ];
      },
      "data-tag-id": function() {
        return Spacebars.mustache(view.lookup("_id"));
      },
      "data-event-category": "tag",
      "data-event-action": "tag-click",
      "data-event-label": "navigation tag click",
      "data-event-value": function() {
        return Spacebars.mustache(view.lookup("name"));
      }
    }, Blaze.View("lookup:name", function() {
      return Spacebars.mustache(view.lookup("name"));
    })), "\n  "), "\n  " ];
  }), "\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(view.lookup("hasPermission"), "admin");
  }, function() {
    return [ "\n    ", HTML.LI("\n      ", HTML.BUTTON({
      id: "header-edit-tag",
      class: "btn btn-primary header-edit-tag",
      "data-current-id": function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("tag"), "_id"));
      }
    }, "\n        ", HTML.I({
      class: "fa fa-tags fa-lg"
    }), " ", HTML.SPAN({
      "data-i18n": "header.tagsAdd"
    }, "Add Tag"), "\n      "), "\n      "), "\n  " ];
  }), "\n   ");
}));

Template.__checkName("tagInputForm");
Template["tagInputForm"] = new Template("Template.tagInputForm", (function() {
  var view = this;
  return HTML.UL({
    class: "list-inline tag-edit-list",
    id: "tag-edit-list"
  }, "\n", Blaze.Each(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("."), "tags"));
  }, function() {
    return [ "\n  ", HTML.LI({
      "data-tag-id": function() {
        return Spacebars.mustache(view.lookup("_id"));
      }
    }, "\n    ", HTML.DIV({
      class: "tag-input-group"
    }, "\n      ", HTML.SPAN({
      class: "tag-input-group-handle"
    }, "\n        ", HTML.I({
      class: "fa fa-bars fa-lg"
    }), "\n      "), "\n      ", HTML.SPAN({
      class: "tag-input"
    }, "\n        ", HTML.INPUT({
      type: "text",
      class: "tags-input-select",
      value: function() {
        return Spacebars.mustache(view.lookup("name"));
      },
      placeholder: "Edit tags"
    }), "\n      "), "\n      ", HTML.SPAN({
      class: "tag-input-group-controls"
    }, "\n        ", HTML.I({
      class: "tag-input-group-hide fa fa-minus-circle fa-lg"
    }), "\n        ", HTML.I({
      class: "tag-input-group-remove fa fa-times-circle fa-lg"
    }), "\n      "), "\n    "), "\n  "), "\n" ];
  }), "\n  ", HTML.LI({
    "data-tag-id": function() {
      return Spacebars.mustache(view.lookup("_id"));
    }
  }, "\n    ", HTML.DIV({
    class: "tag-input-group"
  }, "\n      ", HTML.SPAN({
    class: "tag-input"
  }, "\n        ", HTML.INPUT({
    type: "text",
    class: "tags-input-select tags-submit-new",
    value: function() {
      return Spacebars.mustache(view.lookup("name"));
    },
    placeholder: function() {
      return Spacebars.mustache(view.lookup("i18n"), "header.tagsAdd", "Add tag");
    },
    autofocus: ""
  }), "\n      "), "\n    "), "\n  "), "\n");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"notFound":{"notFound.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/notFound/notFound.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.notFound.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.notFound.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/notFound/template.notFound.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("notFound");
Template["notFound"] = new Template("Template.notFound", (function() {
  var view = this;
  return HTML.Raw('<div class="container-fluid-sm">\n    <div class="rui not-found empty-view-message">\n      <i class="fa fa-exclamation-triangle"></i>\n      <p class="title"><span data-i18n="app.notFoundTitle">404</span></p>\n      <p class="message" data-i18n="app.notFound"><span data-i18n="app.notFoundError">This page was not found.</span></p>\n    </div>\n  </div>');
}));

Template.__checkName("productNotFound");
Template["productNotFound"] = new Template("Template.productNotFound", (function() {
  var view = this;
  return HTML.Raw('<div class="container-fluid-sm">\n    <div class="empty-view-message">\n      <i class="fa fa-barcode"></i>\n      <p data-i18n="productDetail.notFoundTitle">Oops</p>\n      <p data-i18n="productDetail.notFoundError">This product was not found.</p>\n    </div>\n  </div>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notFound.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/notFound/notFound.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
Template.notFound.onCreated(function () {
  document.getElementsByTagName("head")[0].insertAdjacentHTML("beforeend", "<meta name='prerender-status-code' content='404'>"); // todo report not found source
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"notice":{"unauthorized.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/notice/unauthorized.html                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.unauthorized.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.unauthorized.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/notice/template.unauthorized.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("unauthorized");
Template["unauthorized"] = new Template("Template.unauthorized", (function() {
  var view = this;
  return [ HTML.Raw('<div class="row">\n  <div class="text-center">\n    <h3>\n      <span data-i18n="app.warning">Oops!</span>\n      <span data-i18n="app.unauthorizedMessage">You don\'t have permission to view this content.</span>\n    </h3>\n  </div>\n</div>\n'), HTML.DIV({
    class: "row"
  }, "\n  ", HTML.DIV({
    class: "col-sm-4 col-sm-offset-4"
  }, "\n    ", HTML.DIV({
    class: "accounts-inline"
  }, "\n      ", HTML.DIV({
    class: "unauthorized-login"
  }, "\n        ", Spacebars.include(view.lookupTemplate("loginForm")), "\n      "), "\n    "), "\n  "), "\n") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"unauthorized.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/layout/notice/unauthorized.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
Template.unauthorized.onCreated(function () {
  document.getElementsByTagName("head")[0].insertAdjacentHTML("beforeend", "<meta name='prerender-status-code' content='403'>"); // todo report not found source
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"theme":{"theme.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/theme/theme.html                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.theme.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.theme.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/theme/template.theme.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("theme");
Template["theme"] = new Template("Template.theme", (function() {
  var view = this;
  return "";
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"theme.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/templates/theme/theme.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 3);
var Reaction, Router;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Router: function (v) {
    Router = v;
  }
}, 4);
var Shops;
module.watch(require("../../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 5);

/**
 * addBodyClasses
 * Adds body classes to help themes distinguish pages and components based on the current route name and layout theme
 * @param  {Object} context - route context
 * @returns {undefined}
 */
function addBodyClasses(context) {
  var classes;

  if (context.route.name === undefined) {
    classes = ["app-not-found"];
  } else {
    classes = [// push clean route-name
    "app-" + context.route.name.replace(/[/_]/i, "-")];
  } // add theme class for route layout


  if (context && context.route && context.route.options && context.route.options.theme) {
    classes.push(context.route.options.theme);
  }

  classes = classes.join(" ");
  $("body").removeClass(Session.get("BODY_CLASS")).addClass(classes); // save for removal on next enter

  Session.set("BODY_CLASS", classes);
}

Router.Hooks.onEnter(addBodyClasses);
Meteor.startup(function () {
  Tracker.autorun(function () {
    if (Reaction.Subscriptions.PrimaryShop.ready() && Reaction.Subscriptions.MerchantShops.ready()) {
      var shopId; // Choose shop to get theme from

      if (Reaction.marketplaceEnabled && Reaction.merchantTheme) {
        shopId = Reaction.getShopId();
      } else {
        shopId = Reaction.getPrimaryShopId();
      }

      var shop = Shops.findOne({
        _id: shopId
      });

      if (shop) {
        if (shop.theme) {
          $("#reactionLayoutStyles").text(shop.theme.styles || "");
        } else {
          $("#reactionLayoutStyles").text("");
        }
      }
    }
  });
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"components":{"coreLayout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/components/coreLayout.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var getComponent, registerComponent;
module.watch(require("../../../components/lib"), {
  getComponent: function (v) {
    getComponent = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Blaze;
module.watch(require("meteor/gadicc:blaze-react-component"), {
  "default": function (v) {
    Blaze = v;
  }
}, 4);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 5);

var CoreLayout =
/*#__PURE__*/
function (_React$Component) {
  (0, _inheritsLoose2.default)(CoreLayout, _React$Component);

  function CoreLayout(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    var structure = _this.props.structure;

    var _ref = structure || {},
        layoutHeader = _ref.layoutHeader,
        layoutFooter = _ref.layoutFooter;

    var headerComponent = layoutHeader && getComponent(layoutHeader);
    var footerComponent = layoutFooter && getComponent(layoutFooter);

    if (headerComponent) {
      _this.headerComponent = React.createElement(headerComponent, {});
    }

    if (footerComponent) {
      _this.footerComponent = React.createElement(footerComponent, {});
    }

    return _this;
  }

  var _proto = CoreLayout.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          actionViewIsOpen = _props.actionViewIsOpen,
          structure = _props.structure;

      var _ref2 = structure || {},
          template = _ref2.template;

      var pageClassName = classnames({
        "page": true,
        "show-settings": actionViewIsOpen
      });
      var mainNode = null;

      try {
        var mainComponent = getComponent(template);
        mainNode = React.createElement(mainComponent, {});
      } catch (error) {
        //  Probe for Blaze template (legacy)
        if (Template[template]) {
          mainNode = React.createElement(Blaze, {
            template: template
          });
        }
      }

      return React.createElement("div", {
        className: pageClassName,
        id: "reactionAppContainer"
      }, this.headerComponent, React.createElement(Blaze, {
        template: "cartDrawer",
        className: "reaction-cart-drawer"
      }), React.createElement("main", null, mainNode), this.footerComponent);
    }

    return render;
  }();

  return CoreLayout;
}(React.Component);

CoreLayout.propTypes = {
  actionViewIsOpen: PropTypes.bool,
  data: PropTypes.object,
  structure: PropTypes.object
};
registerComponent("coreLayout", CoreLayout);
module.exportDefault(CoreLayout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"footer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/components/footer.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);

var Footer = function () {
  return React.createElement("div", {
    className: "reaction-navigation-footer footer-default"
  }, React.createElement("nav", {
    className: "navbar-bottom"
  }, React.createElement("div", {
    className: "row"
  })));
};

registerComponent("Footer", Footer);
module.exportDefault(Footer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"printLayout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/components/printLayout.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Blaze;
module.watch(require("meteor/gadicc:blaze-react-component"), {
  "default": function (v) {
    Blaze = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var PrintLayout =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PrintLayout, _Component);

  function PrintLayout() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PrintLayout.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(Blaze, {
        template: this.props.structure.template,
        className: "reaction-print-layout"
      });
    }

    return render;
  }();

  return PrintLayout;
}(Component); // lowercased to match the legacy blaze "printLayout"


PrintLayout.propTypes = {
  structure: PropTypes.object
};
registerComponent("printLayout", PrintLayout);
module.exportDefault(PrintLayout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/client/index.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/layout/alerts/alerts.html"));
module.watch(require("./templates/layout/alerts/alerts.js"));
module.watch(require("./templates/layout/alerts/inlineAlerts.js"));
module.watch(require("./templates/layout/alerts/reactionAlerts.js"));
module.watch(require("./templates/layout/createContentMenu/createContentMenu.html"));
module.watch(require("./templates/layout/createContentMenu/createContentMenu.js"));
module.watch(require("./templates/layout/header/brand.html"));
module.watch(require("./templates/layout/header/button.html"));
module.watch(require("./templates/layout/header/tags.html"));
module.watch(require("./templates/layout/notFound/notFound.html"));
module.watch(require("./templates/layout/notFound/notFound.js"));
module.watch(require("./templates/layout/notice/unauthorized.html"));
module.watch(require("./templates/layout/notice/unauthorized.js"));
module.watch(require("./templates/theme/theme.html"));
module.watch(require("./templates/theme/theme.js"));
module.watch(require("./components/footer"));
module.watch(require("./components/coreLayout"), {
  "default": function (v) {
    exports.CoreLayout = v;
  }
}, 0);
module.watch(require("./components/printLayout"), {
  "default": function (v) {
    exports.PrintLayout = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/lib/index.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./reactionLayout"), {
  "default": function (v) {
    exports.ReactionLayout = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reactionLayout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/layout/lib/reactionLayout.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Radium;
module.watch(require("radium"), {
  "default": function (v) {
    Radium = v;
  }
}, 3);
var getComponent, registerComponent, composeWithTracker;
module.watch(require("../../components/lib"), {
  getComponent: function (v) {
    getComponent = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 7);
var Templates;
module.watch(require("../../../../../lib/collections"), {
  Templates: function (v) {
    Templates = v;
  }
}, 8);

var ReactionLayout =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ReactionLayout, _Component);

  function ReactionLayout() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ReactionLayout.prototype;

  _proto.checkElementPermissions = function () {
    function checkElementPermissions(block) {
      var permissions;
      var hasAdminAccess = Reaction.hasAdminAccess();

      if (hasAdminAccess === false) {
        permissions = block.audience || this.props.defaultAudience;
      } else {
        permissions = block.permissions || this.props.defaultPermissions;
      }

      return Reaction.hasPermission(permissions || []);
    }

    return checkElementPermissions;
  }();

  _proto.renderLayout = function () {
    function renderLayout(children) {
      var _this = this;

      if (!Array.isArray(children)) {
        return null;
      }

      var elements = children.map(function (block, index) {
        var childElements;

        if (Array.isArray(block.children)) {
          childElements = block.children.map(function (child, childIndex) {
            if (child.type === "block") {
              return _this.renderLayout([child]);
            }

            if (_this.checkElementPermissions(child)) {
              var component = child.component;

              try {
                if (typeof child.component === "string") {
                  component = getComponent(child.component);
                }

                return React.createElement(component, (0, _objectSpread2.default)({
                  key: childIndex
                }, child.props || {}, _this.props.layoutProps));
              } catch (e) {
                return null;
              }
            }

            return null;
          });
        }

        if (_this.checkElementPermissions(block)) {
          var _classnames;

          return React.createElement(block.element || "div", {
            key: index,
            // className: classnames(`rui col-xs-${block.columns || 12}`, block.className),
            className: classnames((_classnames = {
              rui: true,
              item: true
            }, _classnames[block.size || "full"] = true, _classnames.align = typeof block.align === "string", _classnames[block.align || "start"] = true, _classnames.justify = typeof block.align === "string", _classnames[block.justify || "start"] = true, _classnames.axis = true, _classnames.horizontal = block.axis === "horizontal", _classnames.vertical = block.axis !== "horizontal", _classnames), block.className),
            style: block.style,
            children: childElements
          });
        }

        return null;
      });
      return elements;
    }

    return renderLayout;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "rui layout-base items flex"
      }, this.renderLayout(this.layout));
    }

    return render;
  }();

  (0, _createClass2.default)(ReactionLayout, [{
    key: "layout",
    get: function () {
      return this.props.layout;
    }
  }]);
  return ReactionLayout;
}(Component);

ReactionLayout.propTypes = {
  defaultAudience: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  defaultPermissions: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  layout: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
  layoutProps: PropTypes.object
};

function composer(props, onData) {
  var sub = Meteor.subscribe("Templates");

  if (sub.ready()) {
    var templateInfo = Templates.findOne({
      name: props.layoutName
    });

    if (templateInfo) {
      var templateData = templateInfo.template;
      onData(null, {
        defaultPermissions: ["admin"],
        defaultAudience: ["guest", "anonymous"],
        layout: templateData
      });
    }
  }
}

registerComponent("ReactionLayout", ReactionLayout, [composeWithTracker(composer), Radium]);
module.exportDefault(_compose(composeWithTracker(composer), Radium)(ReactionLayout));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"accounts":{"client":{"templates":{"dashboard":{"dashboard.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/dashboard/dashboard.html                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.dashboard.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.dashboard.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/dashboard/template.dashboard.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("accountsDashboard");
Template["accountsDashboard"] = new Template("Template.accountsDashboard", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.dataMustache(view.lookup("hasPermission"), "accounts");
  }, function() {
    return [ "\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
      return {
        component: Spacebars.call(view.lookup("accountsDashboard"))
      };
    }, function() {
      return Spacebars.include(view.lookupTemplate("React"));
    }), "\n    "), "\n  " ];
  });
}));

Template.__checkName("accountsSettings");
Template["accountsSettings"] = new Template("Template.accountsSettings", (function() {
  var view = this;
  return Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(view.lookup("services")),
      _variable: "service"
    };
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n        ", HTML.DIV({
      class: "panel-title"
    }, "\n          ", HTML.I({
      class: function() {
        return [ "fa fa-", Spacebars.mustache(Spacebars.dot(view.lookup("service"), "name")) ];
      }
    }), "\n          ", Blaze.View("lookup:service.label", function() {
      return Spacebars.mustache(Spacebars.dot(view.lookup("service"), "label"));
    }), "\n          ", HTML.SPAN({
      "data-i18n": "accountsUI.signIn"
    }, "Sign In"), "\n        "), "\n        ", HTML.DIV({
      class: "panel-controls"
    }, "\n          ", HTML.INPUT(HTML.Attrs({
      class: "checkbox-switch",
      type: "checkbox",
      name: "enabled",
      value: function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("service"), "name"));
      }
    }, function() {
      return Spacebars.attrMustache(view.lookup("checked"), Spacebars.dot(view.lookup("service"), "enabled"));
    })), "\n        "), "\n      "), "\n      ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), Spacebars.dot(view.lookup("service"), "enabled")) ];
      }
    }, "\n        ", HTML.FORM({
      name: function() {
        return [ Spacebars.mustache(Spacebars.dot(view.lookup("service"), "name")), "Settings" ];
      }
    }, "\n          ", HTML.INPUT({
      type: "hidden",
      value: function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("service"), "name"));
      },
      name: "service"
    }), "\n          ", Blaze.Each(function() {
      return {
        _sequence: Spacebars.call(Spacebars.dot(view.lookup("service"), "fields")),
        _variable: "field"
      };
    }, function() {
      return [ "\n            ", HTML.DIV({
        class: "form-group "
      }, "\n              ", HTML.LABEL({
        for: function() {
          return [ Spacebars.mustache(view.lookup("name")), "SettingsClientId" ];
        }
      }, HTML.SPAN({
        "data-i18n": function() {
          return [ "loginServices.", Spacebars.mustache(Spacebars.dot(view.lookup("field"), "property")) ];
        }
      }, Blaze.View("lookup:field.label", function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("field"), "label"));
      }))), "\n\n              ", HTML.DIV({
        class: function() {
          return Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("condition"), Spacebars.dot(view.lookup("field"), "property"), "eq", "secret");
          }, function() {
            return "form-inline";
          });
        }
      }, "\n                ", HTML.INPUT({
        class: "form-control",
        id: function() {
          return [ Spacebars.mustache(Spacebars.dot(view.lookup("service"), "name")), "SettingsClientId" ];
        },
        type: function() {
          return Spacebars.mustache(Spacebars.dot(view.lookup("field"), "type"));
        },
        name: function() {
          return Spacebars.mustache(Spacebars.dot(view.lookup("field"), "property"));
        },
        value: function() {
          return Spacebars.mustache(view.lookup("valueForField"), Spacebars.dot(view.lookup("field"), "property"), view.lookup("service"));
        }
      }), "\n\n                ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("condition"), Spacebars.dot(view.lookup("field"), "property"), "eq", "secret");
      }, function() {
        return [ "\n                  ", HTML.BUTTON({
          class: "btn btn-default",
          type: "button",
          "data-event-action": "showSecret"
        }, "Show"), "\n                " ];
      }), "\n              "), "\n\n            "), "\n          " ];
    }), "\n          ", HTML.DIV({
      class: "form-group"
    }, "\n            ", HTML.BUTTON({
      class: "btn btn-primary",
      type: "submit",
      "data-i18n": "app.updateSettings"
    }, "Update Settings"), "\n          "), "\n        "), "\n      "), "\n    "), "\n    " ];
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading"
    }, "\n        ", HTML.DIV({
      class: "panel-title",
      "data-i18n": "accountsDashboardControls.noAdditionalServices"
    }, "No Additional login services available"), "\n      "), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dashboard.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/dashboard/dashboard.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _filter;

module.watch(require("lodash/filter"), {
  "default": function (v) {
    _filter = v;
  }
}, 0);

var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 4);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 5);
var ServiceConfiguration;
module.watch(require("meteor/service-configuration"), {
  ServiceConfiguration: function (v) {
    ServiceConfiguration = v;
  }
}, 6);
var Reaction, i18next;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 7);
var Collections;
module.watch(require("../../../../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 8);
var ServiceConfigHelper;
module.watch(require("../../helpers/util"), {
  ServiceConfigHelper: function (v) {
    ServiceConfigHelper = v;
  }
}, 9);

/**
 * Accounts helpers
 */
Template.accountsDashboard.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("ShopMembers");
  });
});
Template.accountsDashboard.helpers({
  /**
   * isShopMember
   * @return {Boolean} True if the memnber is an administrator
   */
  isShopMember: function () {
    return _includes(["dashboard", "admin", "owner"], this.role);
  },

  /**
   * isShopGuest
   * @return {Boolean} True if the member is a guest
   */
  isShopGuest: function () {
    return !_includes(["dashboard", "admin", "owner"], this.role);
  },

  /**
   * members
   * @return {Boolean} True array of adminsitrative members
   */
  members: function () {
    if (Reaction.hasPermission("reaction-accounts")) {
      var shopId = Reaction.getShopId();
      var instance = Template.instance();

      if (instance.subscriptionsReady()) {
        var shopUsers = Meteor.users.find();
        return shopUsers.map(function (user) {
          var member = {}; // Querying the Accounts collection to retrieve user's name because
          // Meteor filters out sensitive info from the Meteor.users schema

          var userSub = Meteor.subscribe("UserAccount", user._id);

          if (userSub.ready()) {
            member.name = Collections.Accounts.findOne(user._id).name;
          }

          member.userId = user._id;

          if (user.emails && user.emails.length) {
            // this is some kind of denormalization. It is helpful to have both
            // of this string and array. Array goes to avatar, string goes to
            // template
            member.emails = user.emails;
            member.email = user.emails[0].address;
          } // member.user = user;


          member.username = user.username;
          member.isAdmin = Roles.userIsInRole(user._id, "admin", shopId);
          member.roles = user.roles;
          member.services = user.services;

          if (Roles.userIsInRole(member.userId, "owner", shopId)) {
            member.role = "owner";
          } else if (Roles.userIsInRole(member.userId, "admin", shopId)) {
            member.role = "admin";
          } else if (Roles.userIsInRole(member.userId, "dashboard", shopId)) {
            member.role = "dashboard";
          } else if (Roles.userIsInRole(member.userId, "guest", shopId)) {
            member.role = "guest";
          }

          return member;
        });
      }
    }
  },
  accountsDashboard: function () {
    return Components.AccountsDashboard;
  }
});
/**
 * Account Settings Helpers
 */

Template.accountsSettings.onCreated(function () {
  this.subscribe("ServiceConfiguration", Meteor.userId());
});
/**
 * Account Settings Helpers
 */

Template.accountsSettings.helpers({
  /**
   * services
   * @return {Array} available services
   */
  services: function () {
    var serviceHelper = new ServiceConfigHelper();
    var configurations = ServiceConfiguration.configurations.find().fetch();
    var services = serviceHelper.services(function (item) {
      var matchingConfigurations = _filter(configurations, {
        service: item.name
      });

      if (matchingConfigurations.length) {
        return matchingConfigurations[0];
      }
    });
    return services;
  },

  /**
   * Template helper to add a hidden class if the condition is false
   * @param  {Boolean} enabled Service enabled
   * @return {String}          "hidden" or ""
   */
  shown: function (enabled) {
    return enabled !== true ? "hidden" : "";
  },

  /**
   * Return checked classname if true
   * @param  {Boolean} enabled Boolean value true/false
   * @return {String}          "checked" or ""
   */
  checked: function (enabled) {
    return enabled === true ? "checked" : "";
  },

  /**
   * Returns a value from the supplied service object with a field name
   * @param  {String} fieldName name of field to retrive the value for.
   * @param  {Object} service   Service object to find the value in.
   * @return {String}           A value or blank string if nothing is found.
   */
  valueForField: function (fieldName, service) {
    return service[fieldName] || "";
  }
});
Template.accountsSettings.events({
  /**
   * Account settings form submit
   * @param  {event} event    jQuery event
   * @return {void}
   */
  "submit form": function (event) {
    event.preventDefault();
    var service = event.target.service.value;
    var serviceHelper = new ServiceConfigHelper();
    var fields = serviceHelper.configFieldsForService(service); // todo remove this after i18next 2 will be installed
    // let niceName = serviceHelper.capitalizedServiceName(service);

    for (var _iterator = fields, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _field = _ref;
      _field.value = event.target[_field.property].value;
    }

    Meteor.call("accounts/updateServiceConfiguration", service, fields, function (error) {
      if (!error) {
        Alerts.toast(i18next.t("accountsUI.updatedServiceConfiguration", {
          service: i18next.t("social." + service)
        }));
      }
    });
  },

  /**
   * Account settings update enabled status for login service on change
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "change input[name=enabled]": function (event) {
    var service = event.target.value;
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }];
    Meteor.call("accounts/updateServiceConfiguration", service, fields);
  },

  /**
   * Account settings show/hide secret key for a service
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "click [data-event-action=showSecret]": function (event) {
    var button = Template.instance().$(event.currentTarget);
    var input = button.closest(".form-group").find("input[name=secret]");

    if (input.attr("type") === "password") {
      input.attr("type", "text");
      button.html("Hide");
    } else {
      input.attr("type", "password");
      button.html("Show");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"inline":{"inline.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/inline/inline.html                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.inline.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.inline.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/inline/template.inline.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("loginInline");
Template["loginInline"] = new Template("Template.loginInline", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("loginInlineComponent"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inline.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/inline/inline.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 1);

/**
 * Inline login form for instance where guest login is needed.
 */
Template.loginInline.helpers({
  loginInlineComponent: function () {
    return {
      component: Components.LoginInline
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"login":{"loginForm.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/login/loginForm.html                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.loginForm.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.loginForm.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/login/template.loginForm.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("loginForm");
Template["loginForm"] = new Template("Template.loginForm", (function() {
  var view = this;
  return HTML.DIV({
    class: "loginForm"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("component"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

Template.__checkName("loginFormMessages");
Template["loginFormMessages"] = new Template("Template.loginFormMessages", (function() {
  var view = this;
  return HTML.DIV({
    class: "loginFormMessages"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("component"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loginForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/login/loginForm.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
Template.loginForm.helpers({
  component: function () {
    var currentData = Template.currentData() || {};
    return (0, _objectSpread2.default)({}, currentData, {
      component: Components.Login
    });
  }
});
Template.loginFormMessages.helpers({
  component: function () {
    var currentData = Template.currentData() || {};
    return (0, _objectSpread2.default)({}, currentData, {
      component: Components.LoginFormMessages
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"members":{"member.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/members/member.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.member.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.member.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/members/template.member.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("member");
Template["member"] = new Template("Template.member", (function() {
  var view = this;
  return [ "\n      ", HTML.DIV({
    class: "member-list-item-image"
  }, "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("ReactionAvatar"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n        "), "\n      "), "\n      ", HTML.DIV({
    class: "member-list-item-profile"
  }, "\n        ", Blaze.View("lookup:displayName", function() {
    return Spacebars.mustache(view.lookup("displayName"), view.lookup("."));
  }), "\n        ", HTML.SPAN(HTML.Raw("&nbsp;"), "(", Blaze.View("lookup:..email", function() {
    return Spacebars.mustache(Spacebars.dot(view.lookup("."), "email"));
  }), ")"), "\n      "), "\n      ", HTML.DIV({
    class: "member-list-item-profile"
  }, "\n        ", HTML.SPAN("Customer Id: ", Blaze.View("lookup:userId", function() {
    return Spacebars.mustache(view.lookup("userId"));
  })), "\n      "), HTML.Raw('\n\n      <div class="member-list-item-controls">\n        <button class="btn btn-default" data-event-action="showMemberSettings" data-i18n="accountsUI.manage">Manage</button>\n      </div>') ];
}));

Template.__checkName("memberSettings");
Template["memberSettings"] = new Template("Template.memberSettings", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("accountsDetail"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"member.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/members/member.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _get;

module.watch(require("lodash/get"), {
  "default": function (v) {
    _get = v;
  }
}, 0);

var _uniq;

module.watch(require("lodash/uniq"), {
  "default": function (v) {
    _uniq = v;
  }
}, 1);

var _each;

module.watch(require("lodash/each"), {
  "default": function (v) {
    _each = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var Packages, Shops;
module.watch(require("../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 6);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 7);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 8);
var AccountsDashboard;
module.watch(require("../../containers/accountsDashboardContainer"), {
  "default": function (v) {
    AccountsDashboard = v;
  }
}, 9);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 10);

var getPermissionMap = function (permissions) {
  var permissionMap = {};

  _each(permissions, function (existing) {
    permissionMap[existing.permission] = existing.label;
  });

  return permissionMap;
};
/**
 * shopMember helpers
 * permissions / roles controls
 * we use userInRole instead of Reaction intentionally
 * to check each users permissions
 */


Template.member.events({
  "click [data-event-action=showMemberSettings]": function () {
    $(".customerUsageType input").val(""); // form reset

    $(".customerUsageType").addClass("hide"); // form reset

    Reaction.setActionViewDetail({
      label: "Permissions",
      i18nKeyLabel: "admin.settings.permissionsSettingsLabel",
      data: this,
      template: "memberSettings"
    });
  }
});
Template.memberSettings.helpers({
  isOwnerDisabled: function () {
    if (Meteor.userId() === this.userId) {
      if (Roles.userIsInRole(this.userId, "owner", this.shopId)) {
        return true;
      }
    }
  },
  userId: function () {
    return Meteor.userId();
  },
  hasPermissionChecked: function (permission, userId) {
    if (userId && Roles.userIsInRole(userId, permission, this.shopId || Roles.userIsInRole(userId, permission, Roles.GLOBAL_GROUP))) {
      return "checked";
    }
  },
  groupsForUser: function (groupUserId) {
    var userId = groupUserId || this.userId || Template.parentData(1).userId;
    return Roles.getGroupsForUser(userId);
  },
  shopLabel: function (thisShopId) {
    var shopId = thisShopId || Template.currentData();
    var shop = Shops.findOne({
      _id: shopId
    });

    if (shop && shop.name) {
      return shop.name || "Default Shop";
    }
  },
  permissionGroups: function (thisShopId) {
    var permissionGroups = [];
    var shopId = thisShopId || Template.currentData();
    var packages = Packages.find({
      shopId: shopId
    });
    packages.forEach(function (pkg) {
      var permissions = [];

      if (pkg.registry && pkg.enabled) {
        for (var _iterator = pkg.registry, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _registryItem = _ref;

          // Skip entires with missing routes
          if (!_registryItem.route) {
            continue;
          } // Get all permissions, add them to an array


          if (_registryItem.permissions) {
            for (var _iterator2 = _registryItem.permissions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
              var _ref2;

              if (_isArray2) {
                if (_i2 >= _iterator2.length) break;
                _ref2 = _iterator2[_i2++];
              } else {
                _i2 = _iterator2.next();
                if (_i2.done) break;
                _ref2 = _i2.value;
              }

              var _permission = _ref2;

              // check needed because of non-object perms in the permissions array (e.g "admin", "owner")
              if ((0, _typeof2.default)(_permission) === "object") {
                _permission.shopId = shopId;
                permissions.push(_permission);
              }
            }
          } // Also create an object map of those same permissions as above


          var permissionMap = getPermissionMap(permissions);

          if (!permissionMap[_registryItem.route]) {
            permissions.push({
              shopId: pkg.shopId,
              permission: _registryItem.name || pkg.name + "/" + _registryItem.template,
              // launchdock-connect/connectDashboard
              icon: _registryItem.icon,
              label: _registryItem.label || _registryItem.provides || _registryItem.route
            });
          }
        } // TODO review this, hardcoded WIP


        var label = pkg.name.replace("reaction", "").replace(/(-.)/g, function (x) {
          return " " + x[1].toUpperCase();
        });
        return permissionGroups.push({
          shopId: pkg.shopId,
          icon: pkg.icon,
          name: pkg.name,
          label: label,
          permissions: _uniq(permissions)
        });
      }
    });
    return permissionGroups;
  },
  hasManyPermissions: function (permissions) {
    return Boolean(permissions.length);
  },

  /**
   * showAvalaraTaxSettings
   * @return {Boolean} True if avalara is enabled. Defaults to false if not found
   */
  showAvalaraTaxSettings: function () {
    var avalara = Packages.findOne({
      name: "taxes-avalara",
      shopId: Reaction.getShopId()
    });
    return _get(avalara, "settings.avalara.enabled", false);
  },
  accountsDetail: function () {
    return {
      component: AccountsDashboard
    };
  },
  ReactionAvatar: function () {
    return {
      component: Components.ReactionAvatar
    };
  }
});
/**
 * shopMember events
 *
 */

Template.memberSettings.events({
  "change [data-event-action=toggleMemberPermission]": function (event, template) {
    var self = this;
    var permissions = [];
    var member = template.data;

    if (!this.shopId) {
      throw new Meteor.Error("invalid-parameter", "Shop is required");
    }

    if (self.name) {
      permissions.push(self.name);

      for (var _iterator3 = self.permissions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var _pkgPermissions = _ref3;
        permissions.push(_pkgPermissions.permission);
      }
    } else {
      permissions.push(self.permission);
    }

    if (Template.instance().$(event.currentTarget).is(":checked")) {
      Meteor.call("accounts/addUserPermissions", member.userId, permissions, this.shopId);
    } else {
      Meteor.call("accounts/removeUserPermissions", member.userId, permissions, this.shopId);
    }
  },
  "click [data-event-action=resetMemberPermission]": function (event, template) {
    var $icon = Template.instance().$(event.currentTarget);

    if (confirm($icon.data("confirm"))) {
      // eslint-disable-line no-alert
      var results = [];

      for (var _iterator4 = template.data.roles, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
        var _ref4;

        if (_isArray4) {
          if (_i4 >= _iterator4.length) break;
          _ref4 = _iterator4[_i4++];
        } else {
          _i4 = _iterator4.next();
          if (_i4.done) break;
          _ref4 = _i4.value;
        }

        var _role = _ref4;
        results.push(Meteor.call("accounts/setUserPermissions", this.userId, ["guest", "account/profile"], _role));
      }

      return results;
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"profile":{"profile.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/profile/profile.html                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.profile.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.profile.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/profile/template.profile.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("accountProfile");
Template["accountProfile"] = new Template("Template.accountProfile", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("doesUserExist"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "flex flex-column flex-align-center flex-2x container-lg"
    }, "\n      ", HTML.DIV({
      class: "flex-item"
    }, "\n        ", HTML.DIV({
      class: "panel panel-lg"
    }, "\n          ", HTML.DIV({
      class: "panel-heading panel-title-center"
    }, "\n            ", HTML.DIV({
      class: "profile-image"
    }, "\n              ", HTML.DIV("\n                ", Blaze._TemplateWith(function() {
      return Spacebars.call(view.lookup("ReactionAvatar"));
    }, function() {
      return Spacebars.include(view.lookupTemplate("React"));
    }), "\n              "), "\n              ", HTML.SPAN({
      class: "profile-image-display-name"
    }, Blaze.View("lookup:displayName", function() {
      return Spacebars.mustache(view.lookup("displayName"));
    })), "\n              ", HTML.SPAN({
      class: "profile-image-email"
    }, Blaze.View("lookup:displayEmail", function() {
      return Spacebars.mustache(view.lookup("displayEmail"));
    })), "\n            "), "\n          "), "\n          ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isOwnerOfProfile"));
    }, function() {
      return [ "\n            ", HTML.DIV({
        class: "panel-content"
      }, "\n              ", Blaze._TemplateWith(function() {
        return Spacebars.call(view.lookup("UpdateEmail"));
      }, function() {
        return Spacebars.include(view.lookupTemplate("React"));
      }), "\n            "), "\n            ", Blaze.If(function() {
        return Spacebars.call(view.lookup("userHasPassword"));
      }, function() {
        return [ "\n              ", HTML.DIV({
          class: "panel-content"
        }, "\n                ", Spacebars.include(view.lookupTemplate("loginFormChangePassword")), "\n              "), "\n            " ];
      }), "\n          " ];
    }), "\n        "), "\n      "), "\n\n      ", HTML.DIV({
      class: "flex-item"
    }, "\n        ", HTML.DIV({
      class: "panel panel-default user-orders-list"
    }, "\n          ", HTML.DIV({
      class: "panel-heading"
    }, "\n            ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isOwnerOfProfile"));
    }, function() {
      return [ "\n              ", HTML.H3({
        class: "panel-title",
        "data-i18n": "accountsUI.yourOrders"
      }, "Your orders"), "\n            " ];
    }, function() {
      return [ "\n              ", HTML.H3({
        class: "panel-title",
        "data-i18n": "accountsUI.usersOrders"
      }, "User's orders"), "\n            " ];
    }), "\n          "), "\n          ", HTML.DIV({
      class: "panel-content"
    }, "\n            ", Blaze._TemplateWith(function() {
      return {
        data: Spacebars.call(view.lookup("userOrders"))
      };
    }, function() {
      return Spacebars.include(view.lookupTemplate("userOrdersList"));
    }), "\n          "), "\n        "), "\n      "), "\n\n      ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isOwnerOfProfile"));
    }, function() {
      return [ "\n\n        ", HTML.DIV({
        class: "flex-item"
      }, "\n          ", Blaze._TemplateWith(function() {
        return Spacebars.call(view.lookup("AddressBook"));
      }, function() {
        return Spacebars.include(view.lookupTemplate("React"));
      }), "\n        "), "\n\n        ", Blaze.If(function() {
        return Spacebars.call(view.lookup("showMerchantSignup"));
      }, function() {
        return [ "\n          ", HTML.DIV({
          class: "flex-item"
        }, "\n            ", HTML.DIV({
          class: "panel panel-default"
        }, "\n              ", HTML.DIV({
          class: "panel-heading"
        }, "\n                ", HTML.H3({
          class: "panel-title",
          "data-i18n": "marketplace.becomeSeller"
        }, "Become a Seller"), "\n              "), "\n              ", HTML.DIV({
          class: "panel-content"
        }, "\n                ", Spacebars.include(view.lookupTemplate("becomeSellerButton")), "\n              "), "\n            "), "\n          "), "\n        " ];
      }), "\n      " ];
    }), "\n    "), "\n  " ];
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "empty-view-message"
    }, "\n      ", HTML.I({
      class: "fa fa-user-times"
    }), "\n      ", HTML.P({
      "data-i18n": "accountsUI.oops"
    }, "Oops!"), "\n      ", HTML.P({
      "data-i18n": "accountsUI.nonExistentAccount"
    }, "The user you're looking for does not exist."), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userOrdersList.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/profile/userOrdersList.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.userOrdersList.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.userOrdersList.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/profile/template.userOrdersList.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("userOrdersList");
Template["userOrdersList"] = new Template("Template.userOrdersList", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("completedOrders"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"profile.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/profile/profile.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 2);
var i18next, Reaction;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var Collections;
module.watch(require("../../../../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 4);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 5);

/**
 * @method isOwnerOfProfile
 * @summary checks whether or not the user viewing this profile is also
 * its owner.
 * @since 1.5.0
 * @return {Boolean} - whether or not the current user is also this
 * profile's owner.
 */
function isOwnerOfProfile() {
  var targetUserId = Reaction.Router.getQueryParam("userId");
  var loggedInUserId = Meteor.userId();
  return targetUserId === undefined || targetUserId === loggedInUserId;
}
/**
 * @method getTargetAccount
 * @summary gets the account of the userId in the route, or the current user.
 * @since 1.5.0
 * @return {Object} - the account of the identified user.
 */


function getTargetAccount() {
  var targetUserId = Reaction.Router.getQueryParam("userId") || Meteor.userId();
  var account = Collections.Accounts.findOne(targetUserId);
  return account;
}
/**
 * onCreated: Account Profile View
 */


Template.accountProfile.onCreated(function () {
  var template = Template.instance();
  template.userHasPassword = ReactiveVar(false);
  Meteor.call("accounts/currentUserHasPassword", function (error, result) {
    template.userHasPassword.set(result);
  }); // hide actionView if open, doesn't relate to profile page

  Reaction.hideActionView();
});
/**
 * Helpers: Account Profile View
 */

Template.accountProfile.helpers({
  /**
   * @method doesUserExist
   * @summary confirms that a given userId belongs to an existing user.
   * @since 1.5.0
   * @return {Boolean} - whether or not a user with a given ID exists.
   */
  doesUserExist: function () {
    var targetUserId = Reaction.Router.getQueryParam("userId");

    if (!targetUserId) {
      // If userId isn't in this route's query parameters, then a user
      // is viewing his/her own profile.
      return true;
    }

    var targetUser = Collections.Accounts.findOne(targetUserId);
    return targetUser !== undefined;
  },

  /**
   * @method isOwnerOfProfile
   * @summary checks whether or not the user viewing this profile is also
   * its owner.
   * @since 1.5.0
   * @return {Boolean} - whether or not the current user is also this
   * profile's owner.
   */
  isOwnerOfProfile: function () {
    return isOwnerOfProfile();
  },

  /**
   * @method UpdateEmail
   * @summary returns a component for updating a user's email.
   * @since 1.5.0
   * @return {Object} - contains the component for updating a user's email.
   */
  UpdateEmail: function () {
    return {
      component: Components.UpdateEmail
    };
  },

  /**
   * @method ReactionAvatar
   * @summary returns a component that displays a user's avatar.
   * @since 1.5.0
   * @return {Object} - contains the component that displays a user's avatar.
   */
  ReactionAvatar: function () {
    var account = Collections.Accounts.findOne({
      _id: Meteor.userId()
    });

    if (account && account.profile && account.profile.picture) {
      var picture = account.profile.picture;
      return {
        component: Components.ReactionAvatar,
        currentUser: true,
        src: picture
      };
    }

    return {
      component: Components.ReactionAvatar,
      currentUser: true
    };
  },

  /**
   * @method AddressBook
   * @summary returns a component for updating a user's address.
   * @since 2.0.0
   * @return {Object} - contains the component for updating a user's address.
   */
  AddressBook: function () {
    return {
      component: Components.AddressBook
    };
  },

  /**
   * @method userHasPassword
   * @summary checks whether a user has set a password for his/her account.
   * @since 1.5.0
   * @return {Boolean} - returns true if the current user has a password
   * and false if otherwise.
   */
  userHasPassword: function () {
    return Template.instance().userHasPassword.get();
  },

  /**
   * @method userOrders
   * @summary returns a user's order history, up to the 25 most recent ones.
   * @since 1.5.0
   * @return {Array|null} - an array of a user's orders.
   */
  userOrders: function () {
    var targetUserId = Reaction.Router.getQueryParam("userId") || Meteor.userId();
    var orderSub = Meteor.subscribe("AccountOrders", targetUserId);

    if (orderSub.ready()) {
      return Collections.Orders.find({
        userId: targetUserId
      }, {
        sort: {
          createdAt: -1
        },
        limit: 25
      });
    }
  },

  /**
   * @method displayName
   * @summary returns the name of a user.
   * @since 1.5.0
   * @return {String} - the name of a given user.
   */
  displayName: function () {
    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {
      var account = getTargetAccount();

      if (account) {
        if (account.name) {
          return account.name;
        } else if (account.username) {
          return account.username;
        } else if (account.profile && account.profile.name) {
          return account.profile.name;
        }
      }
    }

    if (Reaction.hasPermission("account/profile")) {
      return i18next.t("accountsUI.guest", {
        defaultValue: "Guest"
      });
    }
  },

  /**
   * @method displayEmail
   * @summary returns a user's email.
   * @since 1.5.0
   * @return {String} - the email of a given user.
   */
  displayEmail: function () {
    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {
      var account = getTargetAccount();

      if (account && Array.isArray(account.emails)) {
        var defaultEmail = account.emails.find(function (email) {
          return email.provides === "default";
        });
        return defaultEmail && defaultEmail.address || account.emails[0].address;
      }
    }
  },

  /**
   * @method showMerchantSignup
   * @summary determines whether or not to show the button for signing up
   * as a merchant/seller.
   * @since 1.5.0
   * @return {Boolean} - true if the merchant signup button is to be shown,
   * and false if otherwise.
   */
  showMerchantSignup: function () {
    if (Reaction.Subscriptions && Reaction.Subscriptions.Account && Reaction.Subscriptions.Account.ready()) {
      var account = Collections.Accounts.findOne({
        _id: Meteor.userId()
      });
      var marketplaceEnabled = Reaction.marketplace && Reaction.marketplace.enabled === true;
      var allowMerchantSignup = Reaction.marketplace && Reaction.marketplace.allowMerchantSignup === true; // A user has the primaryShopId until a shop is created for them.

      var userHasShop = account.shopId !== Reaction.getPrimaryShopId();
      return marketplaceEnabled && allowMerchantSignup && !userHasShop;
    }

    return false;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userOrdersList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/profile/userOrdersList.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 1);

/**
 * userOrdersList helpers
 *
 */
Template.userOrdersList.helpers({
  // Returns React Component
  completedOrders: function () {
    var orders;

    if (Template.currentData() && Template.currentData().data) {
      orders = Template.currentData().data.fetch();
    } else {
      orders = [];
    }

    return {
      component: Components.OrdersList,
      orders: orders
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"updatePassword":{"updatePassword.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/updatePassword/updatePassword.html                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.updatePassword.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.updatePassword.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/updatePassword/template.updatePassword.js                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("loginFormUpdatePasswordOverlay");
Template["loginFormUpdatePasswordOverlay"] = new Template("Template.loginFormUpdatePasswordOverlay", (function() {
  var view = this;
  return HTML.DIV({
    class: "loginFormUpdatePasswordOverlay"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("component"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

Template.__checkName("loginFormChangePassword");
Template["loginFormChangePassword"] = new Template("Template.loginFormChangePassword", (function() {
  var view = this;
  return HTML.FORM({
    class: "login-form"
  }, "\n\n    ", Blaze._TemplateWith(function() {
    return {
      messages: Spacebars.call(view.lookup("messages"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("loginFormMessages"));
  }), "\n\n    ", HTML.DIV({
    class: function() {
      return [ "form-group ", Spacebars.mustache(view.lookup("hasError"), Spacebars.dot(view.lookup("messages"), "errors", "oldPassword")) ];
    }
  }, "\n      ", HTML.LABEL({
    for: function() {
      return [ "currentPassword_", Spacebars.mustache(view.lookup("uniqueId")) ];
    },
    class: "control-label",
    "data-i18n": "accountsUI.currentPassword"
  }, "Current Password"), "\n      ", HTML.INPUT({
    id: function() {
      return [ "currentPassword_", Spacebars.mustache(view.lookup("uniqueId")) ];
    },
    class: "form-control login-input--oldPassword",
    type: "password",
    value: function() {
      return Spacebars.mustache(view.lookup("oldPassword"));
    }
  }), "\n      ", Blaze.If(function() {
    return Spacebars.dataMustache(view.lookup("hasError"), Spacebars.dot(view.lookup("messages"), "errors", "oldPassword"));
  }, function() {
    return [ "\n        ", HTML.SPAN({
      class: "help-block"
    }, "\n          ", Blaze.Each(function() {
      return Spacebars.call(Spacebars.dot(view.lookup("messages"), "errors", "oldPassword"));
    }, function() {
      return [ "\n            ", HTML.P(Blaze.View("lookup:i18n", function() {
        return Spacebars.mustache(view.lookup("i18n"), view.lookup("i18nKeyReason"), view.lookup("reason"));
      })), "\n          " ];
    }), "\n        "), "\n      " ];
  }), "\n    "), "\n\n    ", HTML.DIV({
    class: function() {
      return [ "form-group ", Spacebars.mustache(view.lookup("hasError"), Spacebars.dot(view.lookup("messages"), "errors", "password")) ];
    }
  }, "\n      ", HTML.LABEL({
    for: function() {
      return [ "password_", Spacebars.mustache(view.lookup("uniqueId")) ];
    },
    class: "control-label",
    "data-i18n": "accountsUI.password"
  }, "Password"), "\n      ", HTML.INPUT({
    id: function() {
      return [ "password_", Spacebars.mustache(view.lookup("uniqueId")) ];
    },
    class: "form-control login-input--password",
    type: "password",
    value: function() {
      return Spacebars.mustache(view.lookup("password"));
    }
  }), "\n      ", Blaze.If(function() {
    return Spacebars.dataMustache(view.lookup("hasError"), Spacebars.dot(view.lookup("messages"), "errors", "password"));
  }, function() {
    return [ "\n        ", HTML.SPAN({
      class: "help-block"
    }, "\n          ", Blaze.Each(function() {
      return Spacebars.call(Spacebars.dot(view.lookup("messages"), "errors", "password"));
    }, function() {
      return [ "\n            ", HTML.P(Blaze.View("lookup:i18n", function() {
        return Spacebars.mustache(view.lookup("i18n"), view.lookup("i18nKeyReason"), view.lookup("reason"));
      })), "\n          " ];
    }), "\n        "), "\n      " ];
  }), "\n    "), HTML.Raw('\n\n\n    <div class="form-group">\n      <button class="btn btn-primary action--submit" type="Submit" data-i18n="accountsUI.updatePasswordAndContinue" data-event-category="accounts" data-event-action="change-password">Update and continue</button>\n      <button class="btn" type="button" data-i18n="app.cancel" data-event-category="accounts" data-event-action="change-password-cancel">Cancel</button>\n    </div>\n\n  '));
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"updatePassword.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/updatePassword/updatePassword.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 3);
var Blaze;
module.watch(require("meteor/blaze"), {
  Blaze: function (v) {
    Blaze = v;
  }
}, 4);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 5);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var LoginFormSharedHelpers;
module.watch(require("../../helpers"), {
  LoginFormSharedHelpers: function (v) {
    LoginFormSharedHelpers = v;
  }
}, 7);
var getComponent;
module.watch(require("../../../../components/lib"), {
  getComponent: function (v) {
    getComponent = v;
  }
}, 8);
var LoginFormValidation;
module.watch(require("../../../../../../../lib/api"), {
  LoginFormValidation: function (v) {
    LoginFormValidation = v;
  }
}, 9);

/**
 * Accounts Event: onResetPasswordLink When a user uses a password reset link
 */
Accounts.onResetPasswordLink(function (token, done) {
  Blaze.renderWithData(Template.loginFormUpdatePasswordOverlay, {
    token: token,
    callback: done,
    isOpen: true,
    type: "updatePassword"
  }, $("body").get(0));
});
/**
 * Accounts Event: onEnrollmentLink When a user uses an enrollment link
 */

Accounts.onEnrollmentLink(function (token, done) {
  Blaze.renderWithData(Template.loginFormUpdatePasswordOverlay, {
    token: token,
    callback: done,
    isOpen: true,
    type: "setPassword"
  }, $("body").get(0));
}); // ----------------------------------------------------------------------------
// /**
//  * Helpers: Login Form Update Password Overlay
//  */

Template.loginFormUpdatePasswordOverlay.helpers({
  component: function () {
    var currentData = Template.currentData() || {};
    return (0, _objectSpread2.default)({}, currentData, {
      component: getComponent("UpdatePasswordOverlay")
    });
  }
}); // ----------------------------------------------------------------------------

/**
 * onCreated: Login Form Change Password
 */

Template.loginFormChangePassword.onCreated(function () {
  var template = Template.instance();
  template.uniqueId = Random.id();
  template.formMessages = new ReactiveVar({});
});
/**
 * Helpers: Login Form Change Password
 */

Template.loginFormChangePassword.helpers(LoginFormSharedHelpers);
/**
 * Events: Login Form Change Password
 */

Template.loginFormChangePassword.events({
  /**
   * Submit form for password update
   * @param  {Event} event - jQuery Event
   * @param  {Template} template - Blaze Template
   * @return {void}
   */
  "submit form": function (event, template) {
    event.preventDefault();
    event.stopPropagation();
    var oldPasswordInput = template.$(".login-input--oldPassword");
    var passwordInput = template.$(".login-input--password");
    var oldPassword = oldPasswordInput.val().trim();
    var password = passwordInput.val().trim(); // We only check if it exists, just incase we"ve change the password strength and want the
    // user to have an oppurtinity to update to a stronger password

    var validatedOldPassword = LoginFormValidation.password(password, {
      validationLevel: "exists"
    });
    var validatedPassword = LoginFormValidation.password(password);
    var templateInstance = Template.instance();
    var errors = {};
    templateInstance.formMessages.set({});

    if (validatedOldPassword !== true) {
      errors.oldPassword = validatedOldPassword;
    }

    if (validatedPassword !== true) {
      errors.password = validatedPassword;
    }

    if ($.isEmptyObject(errors) === false) {
      templateInstance.formMessages.set({
        errors: errors
      }); // prevent password update

      return;
    }

    Accounts.changePassword(oldPassword, password, function (error) {
      if (error) {
        // Show some error message
        templateInstance.formMessages.set({
          alerts: [error]
        });
      } else {
        // // Close dropdown or navigate to page
        templateInstance.formMessages.set({
          info: [{
            reason: i18next.t("accountsUI.info.passwordChanged")
          }]
        });
      }
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"accounts.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/accounts.html                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.accounts.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.accounts.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/template.accounts.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("accounts");
Template["accounts"] = new Template("Template.accounts", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      template: Spacebars.call(view.lookup("tpl"))
    };
  }, function() {
    return Spacebars.include(function() {
      return Spacebars.call(Template.__dynamic);
    });
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dropdown":{"helpers":{"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/dropdown/helpers/helpers.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  LoginFormSharedHelpers: function () {
    return LoginFormSharedHelpers;
  }
});
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var LoginFormSharedHelpers = {
  messages: function () {
    return Template.instance().formMessages.get();
  },
  hasError: function (error) {
    // True here means the field is valid
    // We're checking if theres some other message to display
    if (error !== true && typeof error !== "undefined") {
      return "has-error has-feedback";
    }
  },
  capitalize: function (str) {
    var finalString = str === null ? "" : String(str);
    return finalString.charAt(0).toUpperCase() + finalString.slice(1);
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/dropdown/helpers/index.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./helpers"), {
  LoginFormSharedHelpers: function (v) {
    exports.LoginFormSharedHelpers = v;
  }
}, 0);
module.watch(require("./util"), {
  ServiceConfigHelper: function (v) {
    exports.ServiceConfigHelper = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"util.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/templates/dropdown/helpers/util.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  ServiceConfigHelper: function () {
    return ServiceConfigHelper;
  }
});

var _isFunction;

module.watch(require("lodash/isFunction"), {
  "default": function (v) {
    _isFunction = v;
  }
}, 0);

var _filter;

module.watch(require("lodash/filter"), {
  "default": function (v) {
    _filter = v;
  }
}, 1);

var _extend;

module.watch(require("lodash/extend"), {
  "default": function (v) {
    _extend = v;
  }
}, 2);

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 3);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 4);
var ServiceConfiguration;
module.watch(require("meteor/service-configuration"), {
  ServiceConfiguration: function (v) {
    ServiceConfiguration = v;
  }
}, 5);

function capitalize(str) {
  var finalString = str === null ? "" : String(str);
  return finalString.charAt(0).toUpperCase() + str.slice(1);
}

var providers = {
  Facebook: {},
  Google: {},
  Twitter: {}
};

providers.Facebook.fields = function () {
  return [{
    property: "appId",
    label: "App ID"
  }, {
    property: "secret",
    label: "App Secret"
  }];
};

providers.Google.fields = function () {
  return [{
    property: "clientId",
    label: "Client ID"
  }, {
    property: "secret",
    label: "Client secret"
  }];
};

providers.Twitter.fields = function () {
  return [{
    property: "consumerKey",
    label: "API key"
  }, {
    property: "secret",
    label: "API secret"
  }];
};

var ServiceConfigHelper =
/*#__PURE__*/
function () {
  function ServiceConfigHelper() {}

  var _proto = ServiceConfigHelper.prototype;

  _proto.availableServices = function () {
    function availableServices() {
      var services = Package["accounts-oauth"] ? Accounts.oauth.serviceNames() : [];
      services.sort();
      return services;
    }

    return availableServices;
  }();

  _proto.capitalizedServiceName = function () {
    function capitalizedServiceName(name) {
      if (name === "meteor-developer") {
        return "MeteorDeveloperAccount";
      }

      return capitalize(name);
    }

    return capitalizedServiceName;
  }();

  _proto.configFieldsForService = function () {
    function configFieldsForService(name) {
      var capitalizedName = this.capitalizedServiceName(name);
      var template = providers[capitalizedName];

      if (template) {
        var fields = template.fields();
        return _map(fields, function (field) {
          if (!field.type) {
            field.type = field.property === "secret" ? "password" : "text";
          }

          return _extend(field, {
            type: field.type
          });
        });
      }

      return [];
    }

    return configFieldsForService;
  }();

  _proto.services = function () {
    function services(extendEach) {
      var _this = this;

      var availableServices = this.availableServices();
      var configurations = ServiceConfiguration.configurations.find().fetch();
      return _map(availableServices, function (name) {
        var matchingConfigurations = _filter(configurations, {
          service: name
        });

        var service = {
          name: name,
          label: _this.capitalizedServiceName(name),
          fields: _this.configFieldsForService(name)
        };

        if (matchingConfigurations.length) {
          service = _extend(service, matchingConfigurations[0]);
        }

        if (_isFunction(extendEach)) {
          service = _extend(service, extendEach(service) || {});
        }

        return service;
      });
    }

    return services;
  }();

  return ServiceConfigHelper;
}();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"components":{"accountsDashboard.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/accountsDashboard.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var sortUsersIntoGroups, sortGroups;
module.watch(require("../helpers/accountsHelper"), {
  "default": function (v) {
    sortUsersIntoGroups = v;
  },
  sortGroups: function (v) {
    sortGroups = v;
  }
}, 3);

var AccountsDashboard =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AccountsDashboard, _Component);

  function AccountsDashboard(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _initialiseProps.call((0, _assertThisInitialized2.default)(_this));

    var _this$props = _this.props,
        accounts = _this$props.accounts,
        adminGroups = _this$props.adminGroups,
        groups = _this$props.groups;
    var sortedGroups = sortUsersIntoGroups({
      groups: sortGroups(adminGroups),
      accounts: accounts
    }) || [];
    var defaultSelectedGroup = sortedGroups[0];
    _this.state = {
      accounts: accounts,
      groups: sortGroups(groups),
      adminGroups: sortedGroups,
      selectedGroup: defaultSelectedGroup
    };
    return _this;
  }

  var _proto = AccountsDashboard.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var adminGroups = nextProps.adminGroups,
          accounts = nextProps.accounts,
          groups = nextProps.groups;
      var sortedGroups = sortUsersIntoGroups({
        groups: sortGroups(adminGroups),
        accounts: accounts
      });
      var selectedGroup = adminGroups.find(function (grp) {
        return grp._id === (_this2.state.selectedGroup || {})._id;
      });
      this.setState({
        adminGroups: sortedGroups,
        groups: sortGroups(groups),
        accounts: accounts,
        selectedGroup: selectedGroup
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.renderGroupsTable = function () {
    function renderGroupsTable(groups) {
      var _this3 = this;

      if (Array.isArray(groups)) {
        return React.createElement("div", {
          className: "group-container"
        }, this.state.loading && React.createElement(Components.Loading, null), groups.map(function (group, index) {
          return React.createElement(Components.GroupsTable, (0, _extends2.default)({}, _this3.props, {
            key: index,
            group: group,
            onMethodLoad: _this3.handleMethodLoad,
            onMethodDone: _this3.handleMethodDone,
            onGroupSelect: _this3.handleGroupSelect
          }));
        }));
      }

      return null;
    }

    return renderGroupsTable;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "row list-group accounts-table"
      }, React.createElement("div", {
        className: "col-md-9"
      }, this.renderGroupsTable(this.state.adminGroups)), React.createElement("div", {
        className: "col-md-3"
      }, this.renderGroupDetail()));
    }

    return render;
  }();

  return AccountsDashboard;
}(Component);

AccountsDashboard.propTypes = {
  accounts: PropTypes.array,
  adminGroups: PropTypes.array,
  // only admin groups
  groups: PropTypes.array // all groups including non-admin default groups

};

var _initialiseProps = function () {
  var _this4 = this;

  this.handleGroupSelect = function (group) {
    _this4.setState({
      selectedGroup: group
    });
  };

  this.handleMethodLoad = function () {
    _this4.setState({
      loading: true
    });
  };

  this.handleMethodDone = function () {
    _this4.setState({
      loading: false
    });
  };

  this.renderGroupDetail = function () {
    var _this4$state = _this4.state,
        groups = _this4$state.groups,
        adminGroups = _this4$state.adminGroups,
        accounts = _this4$state.accounts;
    return React.createElement(Components.ManageGroups, (0, _extends2.default)({}, _this4.props, {
      group: _this4.state.selectedGroup,
      groups: groups,
      adminGroups: adminGroups,
      accounts: accounts,
      onChangeGroup: _this4.handleGroupSelect
    }));
  };
};

module.exportDefault(AccountsDashboard);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addressBook.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/addressBook.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var AddressBook =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AddressBook, _Component);

  function AddressBook(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.setEntryMode = function () {
      _this.mode = "entry";
    };

    _this.switchMode = function (newMode, editAddress) {
      _this.setState({
        mode: newMode,
        editAddress: editAddress
      });
    };

    _this.onSelect = function (_id, usage) {
      var _this$props = _this.props,
          onError = _this$props.onError,
          updateAddress = _this$props.updateAddress;

      var address = _this.findAddress(_id);

      switch (usage) {
        case "shipping":
          updateAddress(address, "isShippingDefault").catch(onError);
          break;

        case "billing":
          updateAddress(address, "isBillingDefault").catch(onError);
          break;

        default:
          return;
      }
    };

    _this.onRemove = function (_id) {
      var _this$props2 = _this.props,
          onError = _this$props2.onError,
          removeAddress = _this$props2.removeAddress;
      removeAddress(_id).catch(onError);
    };

    _this.onAdd = function (address) {
      var validateAddress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var _this$props3 = _this.props,
          addAddress = _this$props3.addAddress,
          onError = _this$props3.onError,
          updateAddress = _this$props3.updateAddress; // if edit address is in the address book form

      if (_this.hasEditAddress || address._id) {
        var editAddress = _this.state.editAddress; // new object with editAddress _id and the param addess data

        _this.clearForm();

        return updateAddress((0, _objectSpread2.default)({
          _id: editAddress._id
        }, address), null, validateAddress).then(function (result) {
          if (result && result.validated === false) {
            _this.setState({
              mode: "review",
              validationResults: result
            });
          } else {
            _this.setState({
              mode: "grid"
            });
          }
        }).catch(onError);
      }

      return addAddress(address, validateAddress).then(function (result) {
        if (result && result.validated === false) {
          _this.setState({
            mode: "review",
            validationResults: result
          });
        }
      }).catch(onError);
    };

    _this.onCancel = function () {
      _this.mode = "grid";

      _this.clearForm();
    };

    _this.onEdit = function (_id) {
      var editAddress = _this.findAddress(_id);

      _this.setState({
        editAddress: editAddress
      });

      _this.mode = "entry";
    };

    var mode = !props.addressBook || props.addressBook.length === 0 ? "entry" : "grid"; // initMode overrired everything

    if (props.initMode) {
      mode = props.initMode;
    }

    _this.state = {
      // No address, enable the form
      mode: mode,
      // Address to be edited
      editAddress: {},
      // Address returned after validation check
      validationResults: null
    };
    return _this;
  }

  var _proto = AddressBook.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var addressBook = nextProps.addressBook;
      var mode = this.state.mode;
      if (!Array.isArray(addressBook)) addressBook = [];

      if (mode === "review") {
        return;
      } // if the new addressBook array is empty and
      // the address book form is not active


      if (addressBook.length === 0 && mode !== "entry") {
        mode = "entry";
      } // if the new addressBook array is not empty but
      // the address book form is active


      if (addressBook.length !== 0 && mode !== "grid") {
        mode = "grid";
      }

      if (!this.props.initMode && nextProps.initMode) {
        mode = nextProps.initMode;
      }

      this.mode = mode;
    }

    return componentWillReceiveProps;
  }(); // State change helpers

  /**
   * @method mode
   * @summary setter for mode in state
   * @since 2.0.0
   * @param {String} mode - the mode to be set.
   */


  // Address Book helpers

  /**
   * @method findAddress
   * @summary using the provided _id finds an address object from the addressBook array.
   * @since 2.0.0
   * @param {String} _id - address object _id.
   * @return {Object} - address object.
   */
  _proto.findAddress = function () {
    function findAddress(_id) {
      var addressBook = this.addressBook;
      return addressBook.find(function (addy) {
        return addy._id === _id;
      });
    }

    return findAddress;
  }();
  /**
   * @method clearForm
   * @summary removes the editAddress from state this will clear the address book form.
   * @since 2.0.0
   */


  _proto.clearForm = function () {
    function clearForm() {
      if (this.hasEditAddress) this.setState({
        editAddress: {}
      });
    }

    return clearForm;
  }();
  /**
   * @method addressBook
   * @summary getter that returns the addressBook array if avalible on the props or an empty array.
   * @since 2.0.0
   * @return {Array} addressBook - array of address object or an empty array.
   */


  // Address Book JSX

  /**
   * @method renderCheckoutIcon
   * @summary renders address book heading checkout step icon when
   * the address book is being called from checkout
   * @since 2.0.0
   * @return {Object} - JSX
   */
  _proto.renderCheckoutIcon = function () {
    function renderCheckoutIcon() {
      var _props$heading$checko = this.props.heading.checkout,
          icon = _props$heading$checko.icon,
          position = _props$heading$checko.position;
      return React.createElement("i", {
        className: "checkout-step-badge " + icon
      }, position);
    }

    return renderCheckoutIcon;
  }();
  /**
   * @method renderHeading
   * @summary renders address book heading content, this content will change
   * based on where in the app this component is being used
   * @since 2.0.0
   * @return {Object} - JSX
   */


  _proto.renderHeading = function () {
    function renderHeading() {
      var heading = this.props.heading;
      return React.createElement("div", {
        className: "panel-heading"
      }, heading.checkout ? this.renderCheckoutIcon() : "", React.createElement("h2", {
        className: "panel-title"
      }, React.createElement(Components.Translation, heading)));
    }

    return renderHeading;
  }();
  /**
   * @method renderControlBar
   * @summary renders adding or editing address message if the form is showing
   * renders an add address button if the grid is showiing.
   * @since 2.0.0
   * @return {Object} - JSX
   */


  _proto.renderControlBar = function () {
    function renderControlBar() {
      var mode = this.state.mode;
      var controlBarContent;

      if (mode === "entry" && !this.hasEditAddress) {
        // active form with no edit address
        var translationContent;

        if (this.hasAddress) {
          // has address in addressBook array, adding a new entry
          translationContent = {
            defaultValue: "Add a new address entry",
            i18nKey: "addressBookAdd.addAddress"
          };
        } else {
          // first address to be created is default address
          translationContent = {
            defaultValue: "Create your default address",
            i18nKey: "addressBookAdd.createAddress"
          };
        }

        controlBarContent = React.createElement(Components.Translation, translationContent);
      } else if (mode === "entry" && this.hasEditAddress) {
        // active form with an edit address
        // show editing address message
        controlBarContent = React.createElement(Components.Translation, {
          defaultValue: "Editing this address entry",
          i18nKey: "addressBookEdit.editAddress"
        });
      } else if (mode === "grid") {
        controlBarContent = React.createElement("button", {
          className: "btn btn-default",
          onClick: this.setEntryMode
        }, React.createElement("i", {
          className: "fa fa-plus fa-lg address-icons"
        }), React.createElement(Components.Translation, {
          defaultValue: "Add Address",
          i18nKey: "addressBookGrid.addAddress"
        }));
      } else if (mode === "review") {
        controlBarContent = React.createElement(Components.Translation, {
          defaultValue: "Review address",
          i18nKey: "addressBookEdit.reviewAddress"
        });
      }

      return React.createElement("div", {
        className: "panel-control-bar"
      }, controlBarContent);
    }

    return renderControlBar;
  }();
  /**
   * @method renderContent
   * @summary renders the AddressBookForm, AddressBookGrid, AddressBookReview components
   * based on mode.
   * @since 2.0.0
   * @return {Object} - JSX and child component.
   */


  _proto.renderContent = function () {
    function renderContent() {
      var addressBook = this.addressBook;
      var _props = this.props,
          countries = _props.countries,
          regionsByCountry = _props.regionsByCountry,
          markCart = _props.markCart;
      var _state = this.state,
          editAddress = _state.editAddress,
          mode = _state.mode;
      var content;

      if (mode === "entry") {
        content = React.createElement(Components.AddressBookForm, {
          add: this.onAdd,
          cancel: this.onCancel,
          countries: countries,
          editAddress: editAddress,
          hasAddress: this.hasAddress,
          regionsByCountry: regionsByCountry
        });
      } else if (mode === "grid") {
        content = React.createElement(Components.AddressBookGrid, {
          addressBook: addressBook,
          edit: this.onEdit,
          remove: this.onRemove,
          select: this.onSelect
        });
      } else {
        content = React.createElement(Components.AddressBookReview, {
          addressBook: addressBook,
          add: this.onAdd,
          validationResults: this.state.validationResults,
          switchMode: this.switchMode,
          markCart: markCart
        });
      }

      return React.createElement("div", {
        className: "panel-body panel-content"
      }, content);
    }

    return renderContent;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "panel panel-default panel-address-book"
      }, this.renderHeading(), React.createElement("div", {
        className: "address-book"
      }, this.renderControlBar(), this.renderContent()));
    }

    return render;
  }();

  (0, _createClass2.default)(AddressBook, [{
    key: "mode",
    set: function (mode) {
      this.setState({
        mode: mode
      });
    }
    /**
     * @method setEntryMode
     * @summary changes the mode to "entry"
     * @since 2.0.0
     */

  }, {
    key: "addressBook",
    get: function () {
      var addressBook = this.props.addressBook;
      if (!Array.isArray(addressBook)) addressBook = [];
      return addressBook;
    }
    /**
     * @method hasEditaddress
     * @summary getter that returns true if there is an editAddress in state.
     * @since 2.0.0
     * @return {Boolean}
     */

  }, {
    key: "hasEditAddress",
    get: function () {
      var editAddress = this.state.editAddress;
      return Object.keys(editAddress).length !== 0;
    }
    /**
     * @method hasAddress
     * @summary getter that returns true if there is at least 1 address in the addressBook array.
     * @since 2.0.0
     * @return {Boolean}
     */

  }, {
    key: "hasAddress",
    get: function () {
      var addressBook = this.addressBook;
      return addressBook && addressBook.length !== 0;
    } // Address Actions

    /**
     * @method onSelect
     * @summary updating an address if it's been selected as the default shipping or billing address.
     * @since 2.0.0
     * @param {String} _id - address object _id.
     * @param {String} usage - the address usage "shipping" or "billing".
     */

  }]);
  return AddressBook;
}(Component);

AddressBook.propTypes = {
  // Add address reducer calls meteor method
  addAddress: PropTypes.func,
  // array of address objects
  addressBook: PropTypes.arrayOf(PropTypes.shape({
    _id: PropTypes.string,
    fullName: PropTypes.string,
    address1: PropTypes.string,
    address2: PropTypes.string,
    postal: PropTypes.string,
    city: PropTypes.string,
    region: PropTypes.string,
    country: PropTypes.string,
    phone: PropTypes.string,
    isBillingDefault: PropTypes.bool,
    isShippingDefault: PropTypes.bool,
    isCommercal: PropTypes.bool
  })),
  // country options for select
  countries: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.string,
    value: PropTypes.string
  })),
  //  Heading content for address book
  heading: PropTypes.shape({
    // Heading title
    defaultValue: PropTypes.string,
    // i18nKey for heading title
    i18nKey: PropTypes.string,
    // If in checkout view, addressbook checkout step position and icon className
    checkout: PropTypes.shape({
      icon: PropTypes.string,
      position: PropTypes.Number
    })
  }),
  // the initial mode of the AddressBook(used only in constructor)
  initMode: PropTypes.oneOf(["grid", "entry", "review"]),
  // function to mark tax calculation on cart.
  markCart: PropTypes.func,
  // handles error by calling Alerts.toast with the error meesage
  onError: PropTypes.func,
  // regions by county
  regionsByCountry: PropTypes.object,
  // Remove address reducer calls meteor method
  removeAddress: PropTypes.func,
  // Update address reducer calls meteor method
  updateAddress: PropTypes.func
};
AddressBook.defaultProps = {
  addAddress: function () {},
  removeAddress: function () {},
  updateAddress: function () {},
  onError: function () {}
};
registerComponent("AddressBook", AddressBook);
module.exportDefault(AddressBook);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addressBookForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/addressBookForm.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var HTTP;
module.watch(require("meteor/http"), {
  HTTP: function (v) {
    HTTP = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var AddressBookForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AddressBookForm, _Component);

  function AddressBookForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.fieldLabelMap = {
      region: {
        label: "Region",
        i18nKeyLabel: "address.region"
      },
      country: {
        label: "Country",
        i18nKeyLabel: "address.country"
      },
      fullName: {
        label: "Full Name",
        i18nKeyLabel: "address.fullName"
      },
      address1: {
        label: "Address",
        i18nKeyLabel: "address.address1"
      },
      address2: {
        label: "Address",
        i18nKeyLabel: "address.address2"
      },
      postal: {
        label: "Postal",
        i18nKeyLabel: "address.postal"
      },
      city: {
        label: "City",
        i18nKeyLabel: "address.city"
      },
      phone: {
        label: "Phone",
        i18nKeyLabel: "address.phone"
      }
      /**
       * @method setRegionOptions
       * @summary creates an array of region options for the regions select field.
       * @since 2.0.0
       * @param {String} country - country code "US" "CA" "JP"
       */

    };

    _this.clientValidation = function (enteredAddress) {
      var requiredFields = ["country", "fullName", "address1", "postal", "city", "region", "phone"];
      var validation = {
        messages: {}
      };
      var isValid = true;
      Object.keys(enteredAddress).forEach(function (key) {
        if (enteredAddress[key] && typeof enteredAddress[key] === "string" && requiredFields.indexOf(key) > -1) {
          enteredAddress[key] = enteredAddress[key].trim();
        }

        if (requiredFields.indexOf(key) > -1 && !enteredAddress[key]) {
          validation.messages[key] = {
            message: _this.fieldLabelMap[key].label + " is required"
          };
          isValid = false;
        }
      });

      if (!isValid) {
        _this.setState({
          validation: validation
        });
      } else {
        _this.setState({
          validation: undefined
        });
      }

      return isValid;
    };

    _this.onSubmit = function (event) {
      event.preventDefault();
      var add = _this.props.add;
      var enteredAddress = _this.state.fields; // fields object as enteredAddress
      // TODO: field validatiion

      if (_this.clientValidation(enteredAddress)) {
        add(enteredAddress);
      }
    };

    _this.onFieldChange = function (event, value, name) {
      var fields = _this.state.fields;
      fields[name] = value;

      _this.setState({
        fields: fields
      }); // if country changed set new region options


      if (name === "country") _this.setRegionOptions(value);
    };

    _this.onSelectChange = function (value, name) {
      // the reaction select component doesn't return
      // the same values as the other field components
      // this updates that return and calls the
      // typical on field change handler
      _this.onFieldChange(new Event("onSelect"), value, name);
    };

    _this.state = {
      regions: [],
      fields: {
        _id: _this.props.editAddress._id,
        country: _this.props.editAddress.country || "US",
        // defaults to United States
        fullName: _this.props.editAddress.fullName || "",
        address1: _this.props.editAddress.address1 || "",
        address2: _this.props.editAddress.address2 || "",
        postal: _this.props.editAddress.postal || "",
        city: _this.props.editAddress.city || "",
        region: _this.props.editAddress.region || "",
        phone: _this.props.editAddress.phone || "",
        isShippingDefault: _this.props.editAddress.isShippingDefault || !_this.props.hasAddress,
        // no address, default to true
        isBillingDefault: _this.props.editAddress.isBillingDefault || !_this.props.hasAddress,
        // no addres, default to true
        isCommercial: _this.props.editAddress.isCommercial || false
      }
    }; // Getting the user's countrt and setting it as default

    HTTP.get("https://geo.getreaction.io/json/", function (err, res) {
      if (!err) {
        var countryCode = res.data.country_code;

        if (countryCode && !_this.props.editAddress.country) {
          _this.setState(function (prevState) {
            return {
              fields: (0, _objectSpread2.default)({}, prevState.fields, {
                country: countryCode
              })
            };
          }, function () {
            _this.setRegionOptions(countryCode);
          });
        }
      }
    });
    return _this;
  }

  var _proto = AddressBookForm.prototype;

  _proto.componentWillMount = function () {
    function componentWillMount() {
      var country = this.state.fields.country; // if selected country has region options set those too

      this.setRegionOptions(country);
    }

    return componentWillMount;
  }(); // Address Book Form helpers


  _proto.setRegionOptions = function () {
    function setRegionOptions(country) {
      var _props = this.props,
          regionsByCountry = _props.regionsByCountry,
          editAddress = _props.editAddress;
      var fields = this.state.fields;
      var regions = regionsByCountry[country]; // if the region field is empty

      if (Object.keys(editAddress).length) {
        this.setState({
          regions: regions
        });
      } else {
        // setting the fields region to be the
        var _regions = _slicedToArray(regions, 1),
            firstRegion = _regions[0];

        if (firstRegion !== null && (0, _typeof2.default)(firstRegion) === "object") {
          fields.region = firstRegion.value;
        } else {
          fields.region = firstRegion;
        }

        this.setState({
          regions: regions,
          fields: fields
        });
      }
    }

    return setRegionOptions;
  }();

  // Address Book Form JSX

  /**
   * @method renderAddressOptiions
   * @summary renders address options at the bottom of the address book form
   * if no address in addressBook array only show the isCommercial option
   * since a first address will always be the default shipping/billing address.
   * @since 2.0.0
   * @return {Object} - JSX and Checkbox components.
   */
  _proto.renderAddressOptions = function () {
    function renderAddressOptions() {
      var hasAddress = this.props.hasAddress;
      var fields = this.state.fields;
      var defaultOptions;

      if (hasAddress) {
        defaultOptions = React.createElement("div", null, React.createElement("div", {
          className: "form-group"
        }, React.createElement("div", {
          className: "checkbox"
        }, React.createElement(Components.Checkbox, {
          i18nKeyLabel: "address.isShippingDefault",
          label: "Make this your default shipping address.",
          name: "isShippingDefault",
          onChange: this.onFieldChange,
          checked: fields.isShippingDefault
        }))), React.createElement("div", {
          className: "form-group"
        }, React.createElement("div", {
          className: "checkbox"
        }, React.createElement(Components.Checkbox, {
          i18nKeyLabel: "address.isBillingDefault",
          label: "Make this your default billing address.",
          name: "isBillingDefault",
          onChange: this.onFieldChange,
          checked: fields.isBillingDefault
        }))));
      }

      return React.createElement("div", {
        className: "row address-options",
        style: {
          paddingLeft: "5px"
        }
      }, React.createElement("div", {
        className: "col-md-12"
      }, defaultOptions, React.createElement("div", {
        className: "form-group"
      }, React.createElement("div", {
        className: "checkbox"
      }, React.createElement(Components.Checkbox, {
        i18nKeyLabel: "address.isCommercial",
        label: "This is a commercal address.",
        name: "isCommercial",
        onChange: this.onFieldChange,
        checked: fields.isCommercial
      })))));
    }

    return renderAddressOptions;
  }();
  /**
   * @method renderButtons
   * @summary renders submit and cancel buttons for address book form
   * if no address in addressBook array don't show the cancel button
   * since the user needs to add a default address.
   * @since 2.0.0
   * @return {Object} - JSX
   */


  _proto.renderButtons = function () {
    function renderButtons() {
      var _props2 = this.props,
          cancel = _props2.cancel,
          hasAddress = _props2.hasAddress;
      var cancelBtn = React.createElement(Components.Button, {
        buttonType: "reset",
        className: "btn btn-default",
        bezelStyle: "solid",
        onClick: cancel,
        i18nKeyLabel: "app.cancel",
        label: "Cancel"
      });
      return React.createElement("div", {
        className: "row text-right"
      }, React.createElement(Components.Button, {
        buttonType: "submit",
        className: "btn btn-primary",
        bezelStyle: "solid",
        i18nKeyLabel: "app.saveAndContinue",
        label: "Save and continue"
      }), hasAddress ? cancelBtn : "");
    }

    return renderButtons;
  }();

  _proto.render = function () {
    function render() {
      var countries = this.props.countries;
      var _state = this.state,
          regions = _state.regions,
          fields = _state.fields,
          validation = _state.validation;
      var regionField;

      if (regions.length === 0) {
        // if no region optioins
        // render a TextField
        regionField = React.createElement(Components.TextField, {
          i18nKeyLabel: this.fieldLabelMap.region.i18nKeyLabel,
          label: this.fieldLabelMap.region.label,
          name: "region",
          onChange: this.onFieldChange,
          value: fields.region,
          validation: validation
        });
      } else {
        // if region optioins
        // render a Select
        regionField = React.createElement(Components.Select, {
          i18nKeyLabel: this.fieldLabelMap.region.i18nKeyLabel,
          label: this.fieldLabelMap.region.label,
          name: "region",
          options: regions,
          onChange: this.onSelectChange,
          value: fields.region,
          validation: validation
        });
      }

      return React.createElement("form", {
        onSubmit: this.onSubmit
      }, React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-md-6"
      }, React.createElement(Components.Select, {
        i18nKeyLabel: this.fieldLabelMap.country.i18nKeyLabel,
        label: this.fieldLabelMap.country.label,
        name: "country",
        options: countries,
        onChange: this.onSelectChange,
        placeholder: "Country",
        value: fields.country,
        validation: validation
      }))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-md-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: this.fieldLabelMap.fullName.i18nKeyLabel,
        label: this.fieldLabelMap.fullName.label,
        name: "fullName",
        onChange: this.onFieldChange,
        value: fields.fullName,
        validation: validation
      }))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-md-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: this.fieldLabelMap.address1.i18nKeyLabel,
        label: this.fieldLabelMap.address1.label,
        name: "address1",
        onChange: this.onFieldChange,
        value: fields.address1,
        validation: validation
      })), React.createElement("div", {
        className: "col-md-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: this.fieldLabelMap.address2.i18nKeyLabel,
        label: this.fieldLabelMap.address2.label,
        name: "address2",
        onChange: this.onFieldChange,
        value: fields.address2,
        validation: validation
      }))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-md-4"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: this.fieldLabelMap.postal.i18nKeyLabel,
        label: this.fieldLabelMap.postal.label,
        name: "postal",
        onChange: this.onFieldChange,
        value: fields.postal,
        validation: validation
      })), React.createElement("div", {
        className: "col-md-4"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: this.fieldLabelMap.city.i18nKeyLabel,
        label: this.fieldLabelMap.city.label,
        name: "city",
        onChange: this.onFieldChange,
        value: fields.city,
        validation: validation
      })), React.createElement("div", {
        className: "col-md-4"
      }, regionField)), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-md-4"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: this.fieldLabelMap.phone.i18nKeyLabel,
        label: this.fieldLabelMap.phone.label,
        name: "phone",
        onChange: this.onFieldChange,
        value: fields.phone,
        validation: validation
      }))), this.renderAddressOptions(), this.renderButtons());
    }

    return render;
  }();

  return AddressBookForm;
}(Component);

AddressBookForm.propTypes = {
  /**
   * add addess callback
   */
  add: PropTypes.func,

  /**
   * cancel address entry and render AddressBookGrid
   */
  cancel: PropTypes.func,

  /**
   * country options for select
   */
  countries: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.string,
    value: PropTypes.string
  })),

  /**
   * address object
   */
  editAddress: PropTypes.object,

  /**
   * has address in addressBook
   */
  hasAddress: PropTypes.bool,

  /**
   * regions by county
   */
  regionsByCountry: PropTypes.object
};
registerComponent("AddressBookForm", AddressBookForm);
module.exportDefault(AddressBookForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addressBookGrid.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/addressBookGrid.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var AddressBookGrid =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AddressBookGrid, _Component);

  function AddressBookGrid() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      defaultShippingAddressId: _this.defaultShippingAddressId,
      defaultBillingAddressId: _this.defaultBillingAddressId
    }, _this.onSelect = function (_id, usage) {
      var select = _this.props.select;

      _this.setDefaultAddress(_id, usage);

      select(_id, usage);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = AddressBookGrid.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var addressBook = nextProps.addressBook;
      if (!Array.isArray(addressBook)) addressBook = []; // if a new address has been added to the addressBook
      // check to see if the new address is now the default shipping or billing address

      addressBook.forEach(function (addy) {
        if (addy.isShippingDefault && addy._id !== _this2.defaultShippingAddressId) {
          _this2.setDefaultAddress(addy._id, "shipping");
        }

        if (addy.isBillingDefault && addy._id !== _this2.defaultBillingAddressId) {
          _this2.setDefaultAddress(addy._id, "billing");
        }
      });
    }

    return componentWillReceiveProps;
  }(); // Address Book Grid helpers

  /**
   * @method setDefaultaddress
   * @summary updating the compoenet state with the new default shipping or billing address.
   * @since 2.0.0
   * @param {String} _id - address object _id.
   * @param {String} usage - the address usage "shipping" or "billing".
   */


  _proto.setDefaultAddress = function () {
    function setDefaultAddress(_id, usage) {
      if (usage === "shipping") {
        this.setState({
          defaultShippingAddressId: _id
        });
      }

      if (usage === "billing") {
        this.setState({
          defaultBillingAddressId: _id
        });
      }
    }

    return setDefaultAddress;
  }();
  /**
   * @method addressBook
   * @summary getter that returns the addressBook array if avalible on the props or an empty array.
   * @since 2.0.0
   * @return {Array} addressBook - array of address object or an empty array.
   */


  /**
   * @method renderHeading
   * @summary renders address book grid heading content
   * @since 2.0.0
   * @return {Object} - JSX
   */
  _proto.renderHeading = function () {
    function renderHeading() {
      return React.createElement("div", {
        className: "address-list-header"
      }, React.createElement("div", {
        className: "address-list-heading"
      }, React.createElement("h4", null, React.createElement(Components.Translation, {
        defaultValue: "Select a shipping address",
        i18nKey: "addressBookGrid.selectShippingAddress"
      }))), React.createElement("div", {
        className: "address-list-heading"
      }, React.createElement("h4", null, React.createElement(Components.Translation, {
        defaultValue: "Select a billing address",
        i18nKey: "addressBookGrid.selectBillingAddress"
      }))), React.createElement("div", {
        className: "address-list-heading-blank"
      }));
    }

    return renderHeading;
  }();
  /**
   * @method renderAddress
   * @summary renders an address
   * @since 2.0.0
   * @param {Object} address - address object that we destructor to get the needed property
   * @return {Object} - JSX
   */


  _proto.renderAddress = function () {
    function renderAddress(_ref) {
      var address1 = _ref.address1,
          address2 = _ref.address2,
          city = _ref.city,
          region = _ref.region,
          postal = _ref.postal,
          country = _ref.country,
          phone = _ref.phone;
      return React.createElement("address", null, ((address1 || "") + " " + (address2 || "")).trim(), React.createElement("br", null), city, ", ", region, " ", postal, " ", country, React.createElement("br", null), phone || "");
    }

    return renderAddress;
  }();
  /**
   * @method renderAddressGrid
   * @summary renders address grid by mapping over the addressBook array
   * @since 2.0.0
   * @return {Object} - JSX
   */


  _proto.renderAddressGrid = function () {
    function renderAddressGrid() {
      var _this3 = this;

      var addressBook = this.addressBook;
      var _props = this.props,
          edit = _props.edit,
          remove = _props.remove;
      return addressBook.map(function (address) {
        var _this3$state = _this3.state,
            defaultBillingAddressId = _this3$state.defaultBillingAddressId,
            defaultShippingAddressId = _this3$state.defaultShippingAddressId;
        var _id = address._id,
            fullName = address.fullName;
        var activeShipping = defaultShippingAddressId === _id ? "active" : "";
        var activeBilling = defaultBillingAddressId === _id ? "active" : "";
        return React.createElement("div", {
          className: "address-list-item",
          key: _id
        }, React.createElement("div", {
          className: "address " + activeShipping,
          role: "button",
          tabIndex: "0",
          onKeyUp: function (e) {
            if (e.keyCode === 13) _this3.onSelect(_id, "shipping");
          },
          onClick: function () {
            _this3.onSelect(_id, "shipping");
          }
        }, React.createElement("strong", null, fullName), _this3.renderAddress(address)), React.createElement("div", {
          className: "address " + activeBilling,
          role: "button",
          tabIndex: "0",
          onKeyUp: function (e) {
            if (e.keyCode === 13) _this3.onSelect(_id, "billing");
          },
          onClick: function () {
            _this3.onSelect(_id, "billing");
          }
        }, React.createElement("strong", null, fullName), _this3.renderAddress(address)), React.createElement("div", {
          className: "controls"
        }, React.createElement(Components.Button, {
          className: "btn btn-default",
          onClick: function () {
            edit(_id);
          },
          icon: "fa fa-pencil",
          tooltip: "Edit Address",
          i18nKeyTooltip: "addressBookGrid.edit"
        }), React.createElement(Components.Button, {
          className: "btn btn-default danger-action",
          onClick: function () {
            remove(_id);
          },
          icon: "fa fa-trash-o",
          tooltip: "Remove Address",
          i18nKeyTooltip: "addressBookGrid.removeAddress"
        })));
      });
    }

    return renderAddressGrid;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "address-list"
      }, this.renderHeading(), this.renderAddressGrid());
    }

    return render;
  }();

  (0, _createClass2.default)(AddressBookGrid, [{
    key: "addressBook",
    get: function () {
      var addressBook = this.props.addressBook;
      if (!Array.isArray(addressBook)) addressBook = [];
      return addressBook;
    }
    /**
     * @method defaultShippingAddressId
     * @summary getter that returns ether the default shipping address _id or and empty string.
     * @since 2.0.0
     * @return {String} - default shipping address _id or empty string.
     */

  }, {
    key: "defaultShippingAddressId",
    get: function () {
      var addressBook = this.addressBook;
      var defaultShippingAddress = addressBook.find(function (addy) {
        return addy.isShippingDefault;
      });
      return defaultShippingAddress ? defaultShippingAddress._id : "";
    }
    /**
     * @method defaultBillingAddressId
     * @summary getter that returns ether the default billing address _id or and empty string.
     * @since 2.0.0
     * @return {String} - default billing address _id or empty string.
     */

  }, {
    key: "defaultBillingAddressId",
    get: function () {
      var addressBook = this.addressBook;
      var defaultBillingAddress = addressBook.find(function (addy) {
        return addy.isBillingDefault;
      });
      return defaultBillingAddress ? defaultBillingAddress._id : "";
    } // Address Book Actions

    /**
     * @method onSelect
     * @summary handler when an address in the grid is selected as
     * a default shipping or billing address. This handler sets the default address
     * in component state as well as calling the parent reducer to set the default address in db.
     * @since 2.0.0
     * @param {String} _id - address object _id.
     * @param {String} usage - the address usage "shipping" or "billing".
     */

  }]);
  return AddressBookGrid;
}(Component);

AddressBookGrid.propTypes = {
  // array of address objects
  addressBook: PropTypes.arrayOf(PropTypes.shape({
    _id: PropTypes.string,
    fullName: PropTypes.string,
    address1: PropTypes.string,
    address2: PropTypes.string,
    postal: PropTypes.string,
    city: PropTypes.string,
    region: PropTypes.string,
    country: PropTypes.string,
    phone: PropTypes.string,
    isBillingDefault: PropTypes.bool,
    isShippingDefault: PropTypes.bool,
    isCommercal: PropTypes.bool
  })),
  // selects an address to be edited and renders the AddressBookForm
  edit: PropTypes.func,
  // removes the selected address
  remove: PropTypes.func,
  // selects a default shipping or billing address
  select: PropTypes.func
};
AddressBookGrid.defaultProps = {
  edit: function () {},
  remove: function () {},
  select: function () {}
};
registerComponent("AddressBookGrid", AddressBookGrid);
module.exportDefault(AddressBookGrid);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addressBookReview.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/addressBookReview.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var AddressBookReview =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AddressBookReview, _Component);

  function AddressBookReview() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      isEnteredSelected: false
      /**
       * @method handleSelection
       * @summary either saves the suggested or entered address
       * @since 2.0.0
       */

    }, _this.handleSelection = function (event) {
      event.preventDefault();
      var address = _this.props.validationResults.enteredAddress;

      if (!_this.state.isEnteredSelected) {
        address = _this.props.validationResults.suggestedAddress;
      }

      if (typeof _this.props.markCart === "function") {
        _this.props.markCart(address, _this.state.isEnteredSelected);
      }

      if (typeof _this.props.add === "function") {
        _this.props.add(address, false);
      }
    }, _this.handleEdit = function (event) {
      event.preventDefault();

      if (_this.props.switchMode) {
        _this.props.switchMode("entry", _this.props.validationResults.enteredAddress);
      }
    }, _this.selectEntered = function () {
      _this.setState({
        isEnteredSelected: true
      });
    }, _this.selectSuggested = function () {
      _this.setState({
        isEnteredSelected: false
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = AddressBookReview.prototype;

  /**
   * @method renderField
   * @summary renders a field in the address
   * with error if present
   * @since 2.0.0
   * @return {Object} - JSX and child component.
   */
  _proto.renderField = function () {
    function renderField(field, value, showError) {
      var fieldErrors = this.props.validationResults.fieldErrors;

      if (showError && fieldErrors && fieldErrors[field] && fieldErrors[field].length > 0) {
        return React.createElement("div", null, React.createElement("div", {
          className: "error"
        }, value));
      }

      return React.createElement("div", null, value);
    }

    return renderField;
  }();

  _proto.render = function () {
    function render() {
      var _props$validationResu = this.props.validationResults,
          enteredAddress = _props$validationResu.enteredAddress,
          suggestedAddress = _props$validationResu.suggestedAddress;
      var isEnteredSelected = this.state.isEnteredSelected;
      return React.createElement("div", {
        className: "address-review"
      }, React.createElement("div", {
        className: "alert alert-warning"
      }, React.createElement(Components.Translation, {
        defaultValue: "The address you entered may be incorrect or incomplete.\n              Please review our suggestions below, and choose which version you'd like to use. Errors are shown in red.",
        i18nKey: "addressBookReview.warning"
      })), React.createElement("form", null, React.createElement("div", {
        className: "entered-address"
      }, React.createElement("div", {
        className: "radio-heading"
      }, React.createElement("input", {
        type: "radio",
        value: "entered",
        name: "chooseAddress",
        checked: isEnteredSelected,
        onChange: this.selectEntered
      }), React.createElement(Components.Translation, {
        defaultValue: "Entered Address",
        i18nKey: "addressBookReview.enteredAddress"
      })), this.renderField("address1", enteredAddress.address1, true), this.renderField("address2", enteredAddress.address2, true), this.renderField("city", enteredAddress.city, true), this.renderField("country", enteredAddress.country, true), this.renderField("postal", enteredAddress.postal, true), this.renderField("region", enteredAddress.region, true)), React.createElement("div", {
        className: "suggested-address"
      }, React.createElement("div", {
        className: "radio-heading"
      }, React.createElement("input", {
        type: "radio",
        value: "suggested",
        name: "chooseAddress",
        checked: !isEnteredSelected,
        onChange: this.selectSuggested
      }), React.createElement(Components.Translation, {
        defaultValue: "Suggested Address",
        i18nKey: "addressBookReview.suggestedAddress"
      })), this.renderField("address1", suggestedAddress.address1, false), this.renderField("address2", suggestedAddress.address2, false), this.renderField("city", suggestedAddress.city, false), this.renderField("country", suggestedAddress.country, false), this.renderField("postal", suggestedAddress.postal, false), this.renderField("region", suggestedAddress.region, false)), React.createElement("div", {
        className: "panel-buttons"
      }, React.createElement(Components.Button, {
        status: "primary",
        buttonType: "submit",
        onClick: this.handleSelection,
        bezelStyle: "solid",
        i18nKeyLabel: "addressBookReview.useSelectedAddress",
        label: "Use selected address",
        id: "reviewAddressSelectButton"
      }), React.createElement("div", {
        id: "reviewAddressEditButton",
        role: "button",
        onClick: this.handleEdit,
        onKeyDown: this.handleEdit,
        tabIndex: 0
      }, React.createElement(Components.Translation, {
        defaultValue: "Edit entered address",
        i18nKey: "addressBookReview.editAddress"
      })))));
    }

    return render;
  }();

  return AddressBookReview;
}(Component);

AddressBookReview.propTypes = {
  // Add the address to database
  add: PropTypes.func,
  // Marks the address as bypassed.
  markCart: PropTypes.func,
  // Add address reducer calls meteor method
  switchMode: PropTypes.func,
  // array of address objects
  validationResults: PropTypes.shape({
    enteredAddress: PropTypes.shape({
      _id: PropTypes.string,
      fullName: PropTypes.string,
      address1: PropTypes.string,
      address2: PropTypes.string,
      postal: PropTypes.string,
      city: PropTypes.string,
      region: PropTypes.string,
      country: PropTypes.string,
      phone: PropTypes.string,
      isBillingDefault: PropTypes.bool,
      isShippingDefault: PropTypes.bool,
      isCommercal: PropTypes.bool
    }),
    suggestedAddress: PropTypes.shape({
      _id: PropTypes.string,
      fullName: PropTypes.string,
      address1: PropTypes.string,
      address2: PropTypes.string,
      postal: PropTypes.string,
      city: PropTypes.string,
      region: PropTypes.string,
      country: PropTypes.string,
      phone: PropTypes.string,
      isBillingDefault: PropTypes.bool,
      isShippingDefault: PropTypes.bool,
      isCommercal: PropTypes.bool
    }),

    /**
     * map of all fields and
     * errors in them.
     */
    fieldErrors: PropTypes.object
  }) // Select the entered address by default.

};
registerComponent("AddressBookReview", AddressBookReview);
module.exportDefault(AddressBookReview);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"adminInviteForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/adminInviteForm.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _startCase;

module.watch(require("lodash/startCase"), {
  "default": function (v) {
    _startCase = v;
  }
}, 0);

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 3);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 4);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 5);
var ReactionAlerts;
module.watch(require("../../../layout/client/templates/layout/alerts/inlineAlerts"), {
  "default": function (v) {
    ReactionAlerts = v;
  }
}, 6);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 7);
var getDefaultUserInviteGroup;
module.watch(require("../helpers/accountsHelper"), {
  getDefaultUserInviteGroup: function (v) {
    getDefaultUserInviteGroup = v;
  }
}, 8);

/**
 * @summary React component to display admin invite form
 * @memberof Accounts
 * @extends {Component}
 * @property {Function} canInviteToGroup
 * @property {Array} groups
 */
var AdminInviteForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AdminInviteForm, _Component);

  function AdminInviteForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleGroupSelect = function (event, group) {
      _this.setState({
        group: group
      });
    };

    _this.removeAlert = function (oldAlert) {
      return _this.setState({
        alertArray: _this.state.alertArray.filter(function (alert) {
          return !_isEqual(alert, oldAlert);
        })
      });
    };

    var groups = props.groups;
    _this.state = {
      alertId: "admin-invite-form",
      groups: groups,
      name: "",
      email: "",
      group: getDefaultUserInviteGroup(groups)
    };
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = AdminInviteForm.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var groups = nextProps.groups;
      this.setState({
        groups: groups,
        group: getDefaultUserInviteGroup(groups)
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.onChange = function () {
    function onChange(event) {
      var _setState;

      this.setState((_setState = {}, _setState[event.target.name] = event.target.value, _setState));
    }

    return onChange;
  }();

  _proto.handleSubmit = function () {
    function handleSubmit(event) {
      var _this2 = this;

      event.preventDefault();
      var _state = this.state,
          name = _state.name,
          email = _state.email,
          group = _state.group,
          alertId = _state.alertId;
      var alertOptions = {
        placement: alertId,
        id: alertId,
        autoHide: 4000
      }; // if no group is selected, show alert that group is required to send invitation

      if (!group._id) {
        return ReactionAlerts.add("A group is required to invite an admin", "danger", Object.assign({}, alertOptions, {
          i18nKey: "admin.groupsInvite.groupRequired"
        }));
      }

      var options = {
        email: email,
        name: name,
        shopId: Reaction.getShopId(),
        groupId: group._id
      };
      return Meteor.call("accounts/inviteShopMember", options, function (error, result) {
        if (error) {
          var messageKey; // switching to use of package i18n keys (groupsInvite. namespace)

          if (error.reason === "Unable to send invitation email.") {
            messageKey = "admin.groupsInvite.unableToSendInvitationEmail";
          } else if (error.reason === "cannot directly invite owner") {
            messageKey = "admin.groupsInvite.inviteOwnerError";
          } else if (error.reason === "cannot invite to group") {
            messageKey = "admin.groupsInvite.cannotInvite";
          } else if (error.reason === "Need to set a username or email") {
            messageKey = "admin.groupsInvite.NeedToSetUsernameOrEmail";
          } else {
            messageKey = "admin.groupsInvite.errorSendingInvite";
          }

          ReactionAlerts.add(error.reason, "danger", Object.assign({}, alertOptions, {
            i18nKey: messageKey
          }));
        }

        if (result) {
          _this2.setState({
            name: "",
            email: ""
          });

          Alerts.toast(i18next.t("accountsUI.info.invitationSent"), "success");
        }
      });
    }

    return handleSubmit;
  }();

  _proto.renderDropDownButton = function () {
    function renderDropDownButton() {
      var group = this.state.group;

      if (!group._id) {
        return null;
      }

      var buttonElement = function (opt) {
        return React.createElement(Components.Button, {
          bezelStyle: "solid",
          label: group.name && _startCase(group.name)
        }, "\xA0", opt && opt.length && // add icon only if there's a list of options
        React.createElement("i", {
          className: "fa fa-chevron-down"
        }));
      }; // current selected option and "owner" should not show in list options


      var dropOptions = this.state.groups.filter(function (grp) {
        return grp._id !== group._id;
      });

      if (!dropOptions.length) {
        return buttonElement();
      } // do not use dropdown if only one option


      return React.createElement(Components.DropDownMenu, {
        buttonElement: buttonElement(dropOptions),
        onChange: this.handleGroupSelect,
        attachment: "top right",
        targetAttachment: "bottom right"
      }, dropOptions.map(function (grp, index) {
        return React.createElement(Components.MenuItem, {
          key: index,
          label: _startCase(grp.name),
          selectLabel: _startCase(grp.name),
          value: grp
        });
      }));
    }

    return renderDropDownButton;
  }();

  _proto.renderForm = function () {
    function renderForm() {
      return React.createElement("div", {
        className: "admin-invite-form"
      }, React.createElement(Components.Alerts, {
        placement: this.state.alertId,
        id: this.state.alertId,
        onAlertRemove: this.removeAlert
      }), React.createElement("div", {
        className: "panel-body"
      }, React.createElement("form", {
        className: ""
      }, React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.name",
        label: "Name",
        name: "name",
        id: "member-form-name",
        type: "text",
        i18nKeyPlaceholder: "admin.groupsInvite.name",
        value: this.state.name,
        onChange: this.onChange
      })), React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.email",
        label: "Email",
        name: "email",
        id: "member-form-email",
        type: "text",
        i18nKeyPlaceholder: "admin.groupsInvite.email",
        value: this.state.email,
        onChange: this.onChange
      })), React.createElement("div", {
        className: "form-group action-select"
      }, this.renderDropDownButton(), React.createElement("div", {
        className: "form-btns add-admin justify"
      }, React.createElement(Components.Button, {
        status: "primary",
        buttonType: "submit",
        onClick: this.handleSubmit,
        bezelStyle: "solid",
        i18nKeyLabel: "accountsUI.info.sendInvitation",
        label: "Send Invitation"
      }))))));
    }

    return renderForm;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        "data-i18n": "accountsUI.info.addAdminUser",
        title: "Add Admin User",
        id: "accounts"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, this.renderForm()));
    }

    return render;
  }();

  return AdminInviteForm;
}(Component);

AdminInviteForm.propTypes = {
  canInviteToGroup: PropTypes.func,
  groups: PropTypes.array
};
registerComponent("AdminInviteForm", AdminInviteForm);
module.exportDefault(AdminInviteForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editGroup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/editGroup.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 0);

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 3);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 4);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 5);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 6);
var ReactionAlerts;
module.watch(require("../../../layout/client/templates/layout/alerts/inlineAlerts"), {
  "default": function (v) {
    ReactionAlerts = v;
  }
}, 7);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 8);
var groupPermissions;
module.watch(require("../helpers/accountsHelper"), {
  groupPermissions: function (v) {
    groupPermissions = v;
  }
}, 9);

/**
 * @summary React component to display edit group panel
 * @memberof Accounts
 * @extends {Component}
 * @property {Array} accounts
 * @property {Array} groups
 * @property {Function} onChangeGroup
 * @property {Array} packages
 * @property {Object} selectedGroup
 */
var EditGroup =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(EditGroup, _Component);

  function EditGroup(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.selectGroup = function (grp) {
      return function (event) {
        event.preventDefault();

        if (_this.props.onChangeGroup) {
          _this.props.onChangeGroup(grp);
        }

        _this.setState({
          isEditing: false
        });
      };
    };

    _this.groupListClass = function (grp) {
      return classnames({
        "groups-item-selected": grp._id === _this.state.selectedGroup._id,
        "groups-list": true
      });
    };

    _this.removeAlert = function (oldAlert) {
      return _this.setState({
        alertArray: _this.state.alertArray.filter(function (alert) {
          return !_isEqual(alert, oldAlert);
        })
      });
    };

    _this.createGroup = function (groupData) {
      Meteor.call("group/createGroup", groupData, Reaction.getShopId(), function (err, res) {
        if (err) {
          return ReactionAlerts.add(err.reason, "danger", Object.assign({}, _this.state.alertOptions, {
            i18nKey: "admin.settings.createGroupError"
          }));
        }

        if (_this.props.onChangeGroup) {
          _this.props.onChangeGroup(res.group);
        }

        ReactionAlerts.add("Created successfully", "success", Object.assign({}, _this.state.alertOptions, {
          i18nKey: "admin.settings.createGroupSuccess"
        }));

        _this.setState({
          isEditing: false
        });
      });
    };

    _this.updateGroup = function (groupId, groupData) {
      Meteor.call("group/updateGroup", groupId, groupData, Reaction.getShopId(), function (err, res) {
        if (err) {
          return ReactionAlerts.add(err.reason, "danger", Object.assign({}, _this.state.alertOptions, {
            i18nKey: "admin.settings.updateGroupError"
          }));
        }

        if (_this.props.onChangeGroup) {
          _this.props.onChangeGroup(res.group);
        }

        ReactionAlerts.add("Created successfully", "success", Object.assign({}, _this.state.alertOptions, {
          i18nKey: "admin.settings.updateGroupSuccess"
        }));

        _this.setState({
          isEditing: false
        });
      });
    };

    _this.showForm = function () {
      var grp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return function (e) {
        e.preventDefault();
        e.stopPropagation();

        _this.setState({
          isEditing: true,
          selectedGroup: grp
        });
      };
    };

    _this.renderGroupForm = function () {
      if (!_this.state.isEditing) {
        return null;
      }

      if (_isEmpty(_this.state.selectedGroup)) {
        return React.createElement(Components.GroupForm, {
          submitLabel: "Create Group",
          i18nKeyLabel: "admin.groups.create",
          group: _this.state.selectedGroup,
          createGroup: _this.createGroup
        });
      }

      return React.createElement(Components.GroupForm, {
        className: "update-form",
        submitLabel: "Update Group",
        i18nKeyLabel: "admin.groups.update",
        group: _this.state.selectedGroup,
        updateGroup: _this.updateGroup
      });
    };

    _this.renderPermissionsList = function () {
      if (_this.state.isEditing) {
        return null;
      }

      return React.createElement(Components.PermissionsList, {
        permissions: groupPermissions(_this.props.packages),
        group: _this.state.selectedGroup,
        updateGroup: _this.updateGroup
      });
    };

    var accounts = props.accounts,
        selectedGroup = props.selectedGroup,
        groups = props.groups;
    var alertId = "edit-group-comp";
    _this.state = {
      alertOptions: {
        placement: alertId,
        id: alertId,
        autoHide: 4000
      },
      selectedGroup: selectedGroup || {},
      isEditing: false,
      groups: groups,
      accounts: accounts
    };
    return _this;
  }

  var _proto = EditGroup.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var groups = nextProps.groups,
          selectedGroup = nextProps.selectedGroup;
      this.setState({
        groups: groups,
        selectedGroup: selectedGroup
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.renderGroups = function () {
    function renderGroups() {
      var _this2 = this;

      return React.createElement(Components.List, null, this.state.groups.map(function (grp, index) {
        return React.createElement("div", {
          key: index,
          className: _this2.groupListClass(grp)
        }, React.createElement(Components.ListItem, {
          label: grp.name,
          onClick: _this2.selectGroup(grp),
          listItemClassName: "flex flex-justify-spaceBetween"
        }, React.createElement(Components.IconButton, {
          icon: "fa fa-pencil",
          onClick: _this2.showForm(grp)
        })));
      }), React.createElement(Components.ListItem, {
        label: "New Group",
        i18nKeyLabel: "admin.groups.newGroup",
        onClick: this.showForm()
      }, React.createElement("i", {
        className: "fa fa-plus"
      })));
    }

    return renderGroups;
  }();

  _proto.render = function () {
    function render() {
      var alertId = this.state.alertOptions.id;
      return React.createElement("div", {
        className: "edit-group-container"
      }, React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "admin.groups.editGroups",
        title: "Edit Groups"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement("div", {
        className: "settings"
      }, React.createElement(Components.Alerts, {
        placement: alertId,
        id: alertId,
        onAlertRemove: this.removeAlert
      }), this.renderGroups(), this.renderGroupForm(), this.renderPermissionsList()))));
    }

    return render;
  }();

  return EditGroup;
}(Component);

EditGroup.propTypes = {
  accounts: PropTypes.array,
  groups: PropTypes.array,
  onChangeGroup: PropTypes.func,
  packages: PropTypes.array,
  selectedGroup: PropTypes.object
};
module.exportDefault(EditGroup);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"forgotPassword.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/forgotPassword.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);
var Button, TextField, Translation;
module.watch(require("../../../ui/client/components"), {
  Button: function (v) {
    Button = v;
  },
  TextField: function (v) {
    TextField = v;
  },
  Translation: function (v) {
    Translation = v;
  }
}, 4);

var Forgot =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Forgot, _Component);

  function Forgot(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.handleSubmit = function (event) {
      if (_this.props.onFormSubmit) {
        _this.props.onFormSubmit(event, _this.state.email);
      }
    };

    _this.state = {
      email: props.credentials.email
    };
    _this.handleFieldChange = _this.handleFieldChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = Forgot.prototype;

  _proto.renderFormMessages = function () {
    function renderFormMessages() {
      if (this.props.loginFormMessages) {
        return React.createElement("div", null, this.props.loginFormMessages());
      }
    }

    return renderFormMessages;
  }();

  _proto.renderEmailErrors = function () {
    function renderEmailErrors() {
      if (this.props.onError(this.props.messages.errors && this.props.messages.errors.email)) {
        return React.createElement("span", {
          className: "help-block"
        }, React.createElement(Translation, {
          defaultValue: this.props.messages.errors.email.reason,
          i18nKey: this.props.messages.errors.email.i18nKeyReason
        }));
      }
    }

    return renderEmailErrors;
  }();

  _proto.renderSpinnerOnWait = function () {
    function renderSpinnerOnWait() {
      if (this.props.isLoading === true) {
        return React.createElement("div", {
          style: {
            textAlign: "center"
          }
        }, React.createElement("i", {
          className: "fa fa-spinner fa-spin"
        }));
      }

      return React.createElement(Button, {
        className: "btn-block",
        primary: true,
        bezelStyle: "solid",
        i18nKeyLabel: "accountsUI.resetYourPassword",
        label: "Reset Your Password",
        type: "submit",
        eventAction: "reset-password",
        disabled: this.props.isDisabled
      });
    }

    return renderSpinnerOnWait;
  }();

  _proto.render = function () {
    function render() {
      var emailClasses = classnames({
        "form-group": true,
        "form-group-email": true,
        "has-error has-feedback": this.props.onError(this.props.messages.errors && this.props.messages.errors.email)
      });
      return React.createElement("div", null, React.createElement("div", {
        className: "loginForm-title"
      }, React.createElement("h2", null, React.createElement(Translation, {
        defaultValue: "Reset your password",
        i18nKey: "accountsUI.resetYourPassword"
      }))), React.createElement("form", {
        name: "loginForm",
        onSubmit: this.handleSubmit,
        noValidate: true
      }, this.renderFormMessages(), React.createElement("div", {
        className: emailClasses
      }, React.createElement(TextField, {
        i18nKeyLabel: "accountsUI.emailAddress",
        label: "Email",
        name: "email",
        type: "email",
        id: "email-" + this.props.uniqueId,
        value: this.state.email,
        onChange: this.handleFieldChange
      }), this.renderEmailErrors()), React.createElement("div", {
        className: "form-group"
      }, this.renderSpinnerOnWait()), React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.Button, {
        tagName: "span",
        className: {
          "btn": false,
          "btn-default": false
        },
        label: "Sign In",
        i18nKeyLabel: "accountsUI.signIn",
        "data-event-category": "accounts",
        onClick: this.props.onSignInClick
      }))));
    }

    return render;
  }();

  return Forgot;
}(Component);

Forgot.propTypes = {
  credentials: PropTypes.object,
  isDisabled: PropTypes.bool,
  isLoading: PropTypes.bool,
  loginFormMessages: PropTypes.func,
  messages: PropTypes.object,
  onError: PropTypes.func,
  onFormSubmit: PropTypes.func,
  onSignInClick: PropTypes.func,
  uniqueId: PropTypes.string
};
module.exportDefault(Forgot);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groupForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/groupForm.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var GroupForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(GroupForm, _Component);

  function GroupForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.onChange = function (event) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[event.target.name] = event.target.value, _this$setState));
    };

    _this.handleSubmit = function (event) {
      event.preventDefault();

      if (_this.props.createGroup) {
        return _this.props.createGroup(_this.state);
      }

      if (_this.props.updateGroup) {
        return _this.props.updateGroup(_this.props.group._id, _this.state);
      }
    };

    var _props$group = props.group,
        name = _props$group.name,
        description = _props$group.description;
    _this.state = {
      name: name || "",
      description: description || ""
    };
    return _this;
  }

  var _proto = GroupForm.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var _nextProps$group = nextProps.group,
          name = _nextProps$group.name,
          description = _nextProps$group.description;
      this.setState({
        name: name,
        description: description
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "panel panel-default"
      }, React.createElement("div", {
        className: "panel-body"
      }, React.createElement("form", {
        className: "add-group"
      }, React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "admin.groups.name",
        label: "Name",
        name: "name",
        id: "add-group-name",
        type: "text",
        value: this.state.name,
        onChange: this.onChange
      })), React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "admin.groups.description",
        label: "Description",
        name: "description",
        id: "add-group-description",
        type: "text",
        value: this.state.description,
        onChange: this.onChange
      })), React.createElement("div", {
        className: "justify"
      }, React.createElement(Components.Button, {
        status: "primary",
        buttonType: "submit",
        onClick: this.handleSubmit,
        bezelStyle: "solid",
        i18nKeyLabel: this.props.i18nKeyLabel,
        label: this.props.submitLabel
      })))));
    }

    return render;
  }();

  return GroupForm;
}(Component);

GroupForm.propTypes = {
  createGroup: PropTypes.func,
  group: PropTypes.object,
  i18nKeyLabel: PropTypes.string,
  submitLabel: PropTypes.string,
  updateGroup: PropTypes.func
};
registerComponent("GroupForm", GroupForm);
module.exportDefault(GroupForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groupHeader.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/groupHeader.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var GroupHeader = function (_ref) {
  var columnName = _ref.columnName;
  var showSortItems = false; // to be used to show sort icons. When filters fields are available, we'll show icons

  if (columnName === "name") {
    return React.createElement("div", {
      className: "group-header-name"
    }, showSortItems && React.createElement("span", {
      className: "name-cell"
    }, React.createElement(Components.Checkbox, null)), React.createElement(Components.Translation, {
      className: "name-cell",
      defaultValue: "Name",
      i18nKey: "admin.groups.name"
    }), showSortItems && React.createElement(Components.Icon, {
      icon: "chevron-down"
    }));
  }

  if (columnName === "email") {
    return React.createElement("div", {
      className: "group-header-email"
    }, React.createElement(Components.Translation, {
      className: "content-cell",
      defaultValue: "Email",
      i18nKey: "admin.groups.email"
    }), showSortItems && React.createElement(Components.Icon, {
      icon: "chevron-down"
    }));
  }

  if (columnName === "createdAt") {
    return React.createElement("div", {
      className: "group-header created-at"
    }, React.createElement(Components.Translation, {
      className: "content-cell",
      defaultValue: "Last Active",
      i18nKey: "admin.groups.lastActive"
    }), showSortItems && React.createElement(Components.Icon, {
      icon: "chevron-down"
    }));
  }

  return null;
};

GroupHeader.propTypes = {
  columnName: PropTypes.string,
  numberOfRows: PropTypes.number
};
registerComponent("GroupHeader", GroupHeader);
module.exportDefault(GroupHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groupsTable.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/groupsTable.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var SortableTable;
module.watch(require("../../../ui/client/components"), {
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 4);

var GroupsTable = function (props) {
  var group = props.group;
  var fields = ["name", "email", "createdAt", "dropdown", "button"];

  var tableClass = function (length) {
    return classnames({
      "accounts-group-table": true,
      "empty-table": !length
    });
  };

  var columnMetadata = fields.map(function (columnName) {
    return {
      Header: React.createElement(Components.GroupHeader, {
        columnName: columnName,
        numberOfRows: group.users && group.users.length
      }),
      accessor: "",
      // TODO: Review this line - copied disable line from shippo carriers.js
      Cell: function (data) {
        // eslint-disable-line
        return React.createElement(Components.GroupsTableCell, (0, _extends2.default)({
          account: data.value,
          columnName: columnName
        }, props));
      }
    };
  });
  return React.createElement(Components.List, null, React.createElement(Components.ListItem, {
    label: group.name
  }), React.createElement("div", {
    className: tableClass(group.users.length)
  }, React.createElement(SortableTable, {
    data: group.users,
    columnMetadata: columnMetadata,
    filteredFields: fields,
    filterType: "none",
    showFilter: true,
    isSortable: false
  })));
};

GroupsTable.propTypes = {
  accounts: PropTypes.array,
  group: PropTypes.object,
  groups: PropTypes.array,
  onGroupSelect: PropTypes.func
};
registerComponent("GroupsTable", GroupsTable);
module.exportDefault(GroupsTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groupsTableButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/groupsTableButton.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent, withPermissions;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  withPermissions: function (v) {
    withPermissions = v;
  }
}, 2);

/**
 * @summary React stateless component for "remove from group" button for groupTable
 * @memberof Accounts
 * @example <Components.GroupsTableButton {...{ account, group, handleRemoveUserFromGroup }} />
 * @param {Object} props - React PropTypes
 * @property {Object} account - User account object
 * @property {Object} group - Group data
 * @property {Function} handleRemoveUserFromGroup - function to call on button click
 * @property {Boolean} hasPermissions - true or false depending on if user is granted access
 * @return {Node} React node containing wrapped button
 */
var GroupsTableButton = function (_ref) {
  var account = _ref.account,
      group = _ref.group,
      handleRemoveUserFromGroup = _ref.handleRemoveUserFromGroup,
      hasPermissions = _ref.hasPermissions;

  if (group.slug === "owner") {
    return null;
  }

  if (!hasPermissions) {
    return null;
  }

  return React.createElement("div", {
    className: "group-table-button"
  }, React.createElement(Components.Button, {
    status: "danger",
    onClick: handleRemoveUserFromGroup(account, group._id),
    bezelStyle: "solid",
    i18nKeyLabel: "admin.groups.remove",
    label: "Remove"
  }));
};

GroupsTableButton.propTypes = {
  account: PropTypes.object,
  group: PropTypes.object,
  // current group in interation
  handleRemoveUserFromGroup: PropTypes.func,
  hasPermissions: PropTypes.bool
};
registerComponent("GroupsTableButton", GroupsTableButton, withPermissions({
  roles: ["accounts"]
}));
module.exportDefault(GroupsTableButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groupsTableCell.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/groupsTableCell.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _startCase;

module.watch(require("lodash/startCase"), {
  "default": function (v) {
    _startCase = v;
  }
}, 0);

var _get;

module.watch(require("lodash/get"), {
  "default": function (v) {
    _get = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 3);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 4);
var Components, registerComponent, withMoment;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  withMoment: function (v) {
    withMoment = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);
var getUserAvatar;
module.watch(require("../helpers/helpers"), {
  getUserAvatar: function (v) {
    getUserAvatar = v;
  }
}, 7);

var GroupsTableCell = function (props) {
  var account = props.account,
      columnName = props.columnName,
      group = props.group,
      adminGroups = props.adminGroups,
      handleRemoveUserFromGroup = props.handleRemoveUserFromGroup,
      handleUserGroupChange = props.handleUserGroupChange,
      moment = props.moment;

  var email = _get(account, "emails[0].address");

  var groups = adminGroups;
  var userAvatar = getUserAvatar(account);
  var createdAt = moment && moment(account.createdAt).format("MMM Do") || account.createdAt.toLocaleString();

  if (columnName === "name") {
    // use first part of email, if account has no name
    var name = account.name || email.split("@")[0];
    return React.createElement("div", {
      className: "table-cell body-first"
    }, userAvatar, React.createElement("span", null, React.createElement("b", null, name)));
  }

  if (columnName === "email") {
    return React.createElement("div", {
      className: "table-cell body"
    }, React.createElement("span", null, email));
  }

  if (columnName === "createdAt") {
    return React.createElement("div", {
      className: "table-cell body created-at"
    }, React.createElement("span", null, createdAt));
  }

  if (columnName === "dropdown") {
    var groupName = React.createElement("span", {
      className: "group-dropdown"
    }, _startCase(groups[0].name));
    var ownerGroup = groups.find(function (grp) {
      return grp.slug === "owner";
    }) || {};
    var hasOwnerAccess = Reaction.hasPermission("owner", Meteor.userId(), Reaction.getShopId());

    if (groups.length === 1) {
      return groupName;
    }

    if (group.slug === "owner") {
      return groupName;
    }

    var onMethodDone = props.onMethodDone,
        onMethodLoad = props.onMethodLoad;

    var dropDownButton = function (opt) {
      return (// eslint-disable-line
        React.createElement("div", {
          className: "group-dropdown"
        }, React.createElement(Components.Button, {
          bezelStyle: "solid",
          label: group.name && _startCase(group.name)
        }, "\xA0", opt && opt.length > 1 && // add icon only if there's more than the current group
        React.createElement("i", {
          className: "fa fa-chevron-down"
        })))
      );
    }; // Permission check. Remove owner option, if user is not current owner.
    // Also remove groups user does not have roles to manage. This is also checked on the server


    var dropOptions = groups.filter(function (grp) {
      return !(grp.slug === "owner" && !hasOwnerAccess);
    }).filter(function (grp) {
      return Reaction.canInviteToGroup({
        group: grp
      });
    }) || [];

    if (dropOptions.length < 2) {
      return dropDownButton();
    } // do not use dropdown if only one option


    return React.createElement("div", {
      className: "group-dropdown"
    }, React.createElement(Components.DropDownMenu, {
      buttonElement: dropDownButton(groups),
      attachment: "bottom right",
      targetAttachment: "top right",
      onChange: handleUserGroupChange({
        account: account,
        ownerGrpId: ownerGroup._id,
        onMethodDone: onMethodDone,
        onMethodLoad: onMethodLoad
      })
    }, dropOptions.filter(function (grp) {
      return grp._id !== group._id;
    }).map(function (grp, index) {
      return React.createElement(Components.MenuItem, {
        key: index,
        label: _startCase(grp.name),
        selectLabel: _startCase(grp.name),
        value: grp._id
      });
    })));
  }

  if (columnName === "button") {
    return React.createElement(Components.GroupsTableButton, {
      account: account,
      group: group,
      handleRemoveUserFromGroup: handleRemoveUserFromGroup
    });
  }

  return null;
};

GroupsTableCell.propTypes = {
  account: PropTypes.object,
  adminGroups: PropTypes.array,
  // all admin groups
  columnName: PropTypes.string,
  group: PropTypes.object,
  // current group in interation
  handleRemoveUserFromGroup: PropTypes.func,
  handleUserGroupChange: PropTypes.func,
  moment: PropTypes.func,
  onMethodDone: PropTypes.func,
  onMethodLoad: PropTypes.func
};
registerComponent("GroupsTableCell", GroupsTableCell, withMoment);
module.exportDefault(withMoment(GroupsTableCell));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"login.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/login.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Login =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Login, _Component);

  function Login(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      currentView: props.loginFormCurrentView
    };
    _this.showForgotPasswordView = _this.showForgotPasswordView.bind((0, _assertThisInitialized2.default)(_this));
    _this.showSignUpView = _this.showSignUpView.bind((0, _assertThisInitialized2.default)(_this));
    _this.showSignInView = _this.showSignInView.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = Login.prototype;

  _proto.showForgotPasswordView = function () {
    function showForgotPasswordView(event) {
      event.preventDefault();
      this.setState({
        currentView: "loginFormResetPasswordView"
      });
    }

    return showForgotPasswordView;
  }();

  _proto.showSignUpView = function () {
    function showSignUpView(event) {
      event.preventDefault();
      this.setState({
        currentView: "loginFormSignUpView"
      });
    }

    return showSignUpView;
  }();

  _proto.showSignInView = function () {
    function showSignInView(event) {
      event.preventDefault();
      this.setState({
        currentView: "loginFormSignInView"
      });
    }

    return showSignInView;
  }();

  _proto.render = function () {
    function render() {
      if (this.state.currentView === "loginFormSignInView" || this.state.currentView === "loginFormSignUpView") {
        return React.createElement(Components.AuthContainer, {
          credentials: this.props.credentials,
          uniqueId: this.props.uniqueId,
          currentView: this.state.currentView,
          onForgotPasswordClick: this.showForgotPasswordView,
          onSignUpClick: this.showSignUpView,
          onSignInClick: this.showSignInView
        });
      } else if (this.state.currentView === "loginFormResetPasswordView") {
        return React.createElement(Components.ForgotPassword, {
          credentials: this.props.credentials,
          uniqueId: this.props.uniqueId,
          currentView: this.state.currentView,
          onSignInClick: this.showSignInView
        });
      }
    }

    return render;
  }();

  return Login;
}(Component);

Login.propTypes = {
  credentials: PropTypes.object,
  loginFormCurrentView: PropTypes.string,
  uniqueId: PropTypes.string
};
Login.defaultProps = {
  credentials: {},
  loginFormCurrentView: "loginFormSignInView",

  get uniqueId() {
    return Random.id();
  }

};
registerComponent("Login", Login);
module.exportDefault(Login);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loginButtons.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/loginButtons.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var LoginButtons =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(LoginButtons, _Component);

  function LoginButtons() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = LoginButtons.prototype;

  _proto.renderLoginButtons = function () {
    function renderLoginButtons() {
      var _this = this;

      var enabledServices = this.props.loginServices().filter(function (service) {
        return service.enabled;
      });
      return React.createElement("div", null, this.props.loginServices && enabledServices.map(function (service) {
        return React.createElement(Components.Button, {
          key: service._id,
          className: "btn-block provider-" + service.name,
          primary: true,
          bezelStyle: "solid",
          type: "button",
          "data-provider": "" + service.name,
          onClick: function () {
            return _this.props.onSocialClick(service.name);
          }
        }, React.createElement("i", {
          className: "fa fa-" + service.name
        }), _this.props.currentView === "loginFormSignInView" && React.createElement("span", null, "\xA0", React.createElement(Components.Translation, {
          defaultValue: "Sign in with",
          i18nKey: "accountsUI.signInWith"
        })), _this.props.currentView === "loginFormSignUpView" && React.createElement("span", null, React.createElement(Components.Translation, {
          defaultValue: "Sign up with",
          i18nKey: "accountsUI.signUpWith"
        })), React.createElement("span", null, "\xA0", React.createElement(Components.Translation, {
          defaultValue: _this.props.capitalizeName(service.name),
          i18nKey: "social." + service.name
        })));
      }));
    }

    return renderLoginButtons;
  }();

  _proto.renderSeparator = function () {
    function renderSeparator() {
      if (this.props.onSeparator()) {
        return React.createElement("div", {
          className: "loginForm-seperator"
        }, React.createElement(Components.Divider, {
          id: "auth-divider",
          label: "or",
          i18nKeyLabel: "accountsUI.or"
        }));
      }
    }

    return renderSeparator;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", null, this.renderLoginButtons(), this.renderSeparator());
    }

    return render;
  }();

  return LoginButtons;
}(Component);

LoginButtons.propTypes = {
  capitalizeName: PropTypes.func,
  currentView: PropTypes.string,
  loginServices: PropTypes.func,
  onSeparator: PropTypes.func,
  onSocialClick: PropTypes.func
};
registerComponent("LoginButtons", LoginButtons);
module.exportDefault(LoginButtons);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loginFormMessages.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/loginFormMessages.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);

var LoginFormMessages = function (props) {
  if (props.loginFormMessages) {
    if (props.formMessages.info) {
      return React.createElement("div", {
        className: "alert alert-info"
      }, React.createElement("p", null, props.loginFormMessages()));
    } else if (props.formMessages.alerts) {
      return React.createElement("div", {
        className: "alert alert-danger"
      }, React.createElement("p", null, props.loginFormMessages()));
    }
  }

  return null;
};

LoginFormMessages.propTypes = {
  formMessages: PropTypes.object,
  loginFormMessages: PropTypes.func
};
module.exportDefault(LoginFormMessages);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loginInline.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/loginInline.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);
var ValidEmail;
module.watch(require("../../../../../../lib/api"), {
  ValidEmail: function (v) {
    ValidEmail = v;
  }
}, 4);

/**
 * @summary React component to log in form in line
 * @memberof Accounts
 * @extends {Component}
 * @example <LoginInline
         continueAsGuest={this.continueAsGuest}
         renderEmailForm={this.state.renderEmailForm}
         handleEmailSubmit={this.handleEmailSubmit}
       />
 * @property {Function} continueAsGuest - On-click handler function
 * @property {Function} handleEmailSubmit - Required: E-mail submit function
 * @property {Boolean} renderEmailForm - Render e-mail form or not
 */
var LoginInline =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(LoginInline, _Component);

  function LoginInline(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState.isValid = true, _this$setState));
    };

    _this.handleSubmit = function (event) {
      event.preventDefault();

      if (!ValidEmail(_this.state.email)) {
        _this.setState({
          isValid: false
        });
      } else {
        _this.setState({
          isValid: true
        });

        _this.props.handleEmailSubmit(event, _this.state.email);
      }
    };

    _this.state = {
      email: "",
      isValid: true
    };
    return _this;
  }
  /**
   * @method handleFieldChange
   * @summary Handle setting state whenever the field on the form change
   * @param {Event} event - the event that fired
   * @param {String} value - the new value for the field
   * @param {String} field - which field to modify it's value
   * @return {undefined} undefined
   */


  var _proto = LoginInline.prototype;

  _proto.render = function () {
    function render() {
      if (this.props.renderEmailForm) {
        var validation = {
          messages: {
            email: {
              message: "Email is not valid",
              i18nKeyMessage: "checkoutLogin.invalidEmail"
            }
          }
        };
        return React.createElement("div", {
          className: "accounts-dialog accounts-inline"
        }, React.createElement("form", {
          onSubmit: this.handleSubmit,
          className: "add-email-input"
        }, React.createElement(Components.Translation, {
          defaultValue: "Add your email address to receive order updates",
          i18nKey: "{cartCompleted.registerGuest}"
        }), React.createElement("div", null, React.createElement(Components.TextField, {
          name: "email",
          type: "email",
          value: this.state.email,
          onChange: this.handleFieldChange,
          isValid: this.state.isValid,
          validation: validation
        }), React.createElement(Components.Button, {
          type: "submit",
          label: "Add email",
          i18nKeyLabel: "checkoutLogin.addEmail",
          bezelStyle: "solid"
        }))));
      }

      return React.createElement("div", {
        className: "accounts-dialog accounts-inline"
      }, Reaction.allowGuestCheckout() && React.createElement("div", {
        className: "checkout-guest"
      }, React.createElement("div", {
        className: "guest-checkout"
      }, React.createElement("p", {
        className: "text-justify"
      }, React.createElement(Components.Translation, {
        defaultValue: "Continue as a guest, and you can create an account later.",
        i18nKey: "checkoutLogin.guestMessage"
      })), React.createElement(Components.Button, {
        status: "primary",
        buttonType: "submit",
        bezelStyle: "solid",
        className: "btn-block login-button single-login-button continue-guest",
        i18nKeyLabel: "checkoutLogin.continueAsGuest",
        label: "Continue as guest",
        onClick: this.props.continueAsGuest
      }))), React.createElement("div", {
        className: "checkout-login"
      }, React.createElement(Components.Login, {
        loginFormCurrentView: "loginFormSignUpView"
      })));
    }

    return render;
  }();

  return LoginInline;
}(Component);

LoginInline.propTypes = {
  continueAsGuest: PropTypes.func,
  handleEmailSubmit: PropTypes.func.isRequired,
  renderEmailForm: PropTypes.bool
};
module.exportDefault(LoginInline);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mainDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/mainDropdown.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var Login;
module.watch(require("./login"), {
  "default": function (v) {
    Login = v;
  }
}, 4);
var iconStyle = {
  margin: "10px 10px 10px 6px",
  width: "20px",
  fontSize: "inherit",
  textAlign: "center"
};
var menuStyle = {
  padding: "0px 10px 10px 10px",
  minWidth: 220,
  minHeight: 50
};

var MainDropdown =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MainDropdown, _Component);

  function MainDropdown() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = MainDropdown.prototype;

  _proto.buttonElement = function () {
    function buttonElement() {
      var _props = this.props,
          userImage = _props.userImage,
          userName = _props.userName;
      return React.createElement(Components.Button, {
        containerStyle: {
          color: "#000",
          fontWeight: "normal",
          letterSpacing: 0.8
        }
      }, React.createElement("span", {
        className: "main-dropdown-userImage"
      }, userImage), React.createElement("span", {
        className: "main-dropdown-userName"
      }, userName), "\xA0", React.createElement(Components.Icon, {
        icon: "fa fa-caret-down"
      }));
    }

    return buttonElement;
  }();

  _proto.renderAdminIcons = function () {
    function renderAdminIcons() {
      return Reaction.Apps(this.props.adminShortcuts).map(function (shortcut) {
        return React.createElement(Components.MenuItem, {
          key: shortcut.packageId,
          className: "accounts-a-tag",
          label: shortcut.label,
          i18nKeyLabel: shortcut.i18nKeyLabel,
          icon: shortcut.icon,
          iconStyle: iconStyle,
          value: shortcut
        });
      });
    }

    return renderAdminIcons;
  }();

  _proto.renderUserIcons = function () {
    function renderUserIcons() {
      return Reaction.Apps(this.props.userShortcuts).map(function (option) {
        return React.createElement(Components.MenuItem, {
          key: option.packageId,
          className: "accounts-a-tag",
          label: option.label,
          i18nKeyLabel: option.i18nKeyLabel,
          icon: option.icon && option.icon,
          iconStyle: iconStyle,
          value: option
        });
      });
    }

    return renderUserIcons;
  }();

  _proto.renderSignOutButton = function () {
    function renderSignOutButton() {
      return React.createElement(Components.MenuItem, {
        className: "btn btn-primary btn-block accounts-btn-tag",
        label: "Sign out",
        value: "logout"
      });
    }

    return renderSignOutButton;
  }();

  _proto.renderSignInComponent = function () {
    function renderSignInComponent() {
      return React.createElement("div", {
        className: "accounts-dropdown"
      }, React.createElement("div", {
        className: "dropdown-toggle",
        "data-toggle": "dropdown",
        "data-hover": "dropdown",
        "data-delay": "1000"
      }, React.createElement("span", null, React.createElement(Components.Icon, {
        icon: "fa fa-user"
      })), React.createElement("b", {
        className: "caret"
      })), React.createElement("div", {
        className: "accounts-dialog accounts-layout dropdown-menu pull-right",
        style: {
          padding: "10px 20px"
        }
      }, React.createElement(Login, null)));
    }

    return renderSignInComponent;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "accounts"
      }, this.props.currentAccount ? React.createElement("div", {
        style: {
          paddingRight: 5
        }
      }, React.createElement(Components.DropDownMenu, {
        buttonElement: this.buttonElement(),
        attachment: "bottom right",
        targetAttachment: "top right",
        menuStyle: menuStyle,
        className: "accounts-li-tag",
        onChange: this.props.handleChange,
        constraints: [{
          to: "window",
          attachment: "together"
        }]
      }, this.renderUserIcons(), this.renderAdminIcons(), this.renderSignOutButton())) : React.createElement("div", {
        className: "accounts dropdown",
        role: "menu"
      }, this.renderSignInComponent()));
    }

    return render;
  }();

  return MainDropdown;
}(Component);

MainDropdown.propTypes = {
  adminShortcuts: PropTypes.object,
  currentAccount: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
  handleChange: PropTypes.func,
  userImage: PropTypes.object,
  userName: PropTypes.string,
  userShortcuts: PropTypes.object
};
module.exportDefault(MainDropdown);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"manageGroups.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/manageGroups.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var getInvitableGroups;
module.watch(require("../helpers/accountsHelper"), {
  getInvitableGroups: function (v) {
    getInvitableGroups = v;
  }
}, 3);

var ManageGroups =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ManageGroups, _Component);

  function ManageGroups(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      accounts: props.accounts,
      adminGroups: props.adminGroups,
      group: props.group,
      groups: props.groups
    };
    return _this;
  }

  var _proto = ManageGroups.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var group = nextProps.group,
          groups = nextProps.groups,
          adminGroups = nextProps.adminGroups,
          accounts = nextProps.accounts;
      this.setState({
        group: group,
        groups: groups,
        accounts: accounts,
        adminGroups: adminGroups
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.render = function () {
    function render() {
      // this gets a list of groups the user can invite to, we show only those in the dropdown
      // see doc for getInvitableGroups in helpers/accountsHelper.js
      var groupsInvitable = getInvitableGroups(this.state.adminGroups);
      return React.createElement("div", {
        className: "groups-form"
      }, groupsInvitable && groupsInvitable.length && React.createElement(Components.AdminInviteForm, (0, _extends2.default)({}, this.props, {
        groups: groupsInvitable
      })), this.props.isAdmin && React.createElement(Components.EditGroup, {
        // filter out owner group from editable groups.
        // The edit group meteor method also prevents editing owner group
        groups: this.state.groups.filter(function (grp) {
          return grp.slug !== "owner";
        }),
        selectedGroup: this.state.group,
        onChangeGroup: this.props.onChangeGroup
      }));
    }

    return render;
  }();

  return ManageGroups;
}(Component);

ManageGroups.propTypes = {
  accounts: PropTypes.array,
  adminGroups: PropTypes.array,
  group: PropTypes.object,
  groups: PropTypes.array,
  isAdmin: PropTypes.bool,
  onChangeGroup: PropTypes.func
};
registerComponent("ManageGroups", ManageGroups);
module.exportDefault(ManageGroups);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"ordersList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/ordersList.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var CompletedOrder;
module.watch(require("../../../checkout/client/components/completedOrder"), {
  "default": function (v) {
    CompletedOrder = v;
  }
}, 2);

/**
 * @summary React component to display an array of completed orders
 * @memberof Accounts
 * @extends {Component}
 * @property {Array} allOrdersInfo - array of orders
 * @property {Function} handeleDisplayMedia - function to display order image
 * @property {Boolean} isProfilePage - Profile or non-profile page
 */
var OrdersList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrdersList, _Component);

  function OrdersList() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = OrdersList.prototype;

  _proto.render = function () {
    function render() {
      var _this = this;

      var allOrdersInfo = this.props.allOrdersInfo;

      if (allOrdersInfo) {
        return React.createElement("div", null, allOrdersInfo.map(function (order) {
          var orderKey = order.orderId;
          return React.createElement(CompletedOrder, {
            key: orderKey,
            shops: order.shops,
            order: order.order,
            orderSummary: order.orderSummary,
            paymentMethods: order.paymentMethods,
            isProfilePage: _this.props.isProfilePage
          });
        }));
      }

      return React.createElement("div", {
        className: "alert alert-info"
      }, React.createElement("span", {
        "data-i18n": "cartCompleted.noOrdersFound"
      }, "No orders found."));
    }

    return render;
  }();

  return OrdersList;
}(Component);

OrdersList.propTypes = {
  allOrdersInfo: PropTypes.array,
  isProfilePage: PropTypes.bool
};
module.exportDefault(OrdersList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"permissionsList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/permissionsList.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 0);

var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 1);

var _uniq;

module.watch(require("lodash/uniq"), {
  "default": function (v) {
    _uniq = v;
  }
}, 2);

var _remove;

module.watch(require("lodash/remove"), {
  "default": function (v) {
    _remove = v;
  }
}, 3);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 4);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 5);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 6);

// resolvePermissions - helper to resolve toggled permission(s).
// It returns a list of all parent and child permissions when a parent permission is toggled.
function resolvePermissions(permission) {
  var result = [];

  if (permission.name) {
    result.push(permission.name);

    for (var _iterator = permission.permissions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _pkgPermissions = _ref;
      result.push(_pkgPermissions.permission);
    }
  } else {
    result.push(permission.permission);
  }

  return result;
} // helper to remove all array items in "old" from "current"


function removePermissions(current, old) {
  var currentArray = _toConsumableArray(current);

  old.forEach(function (val) {
    _remove(currentArray, function (item) {
      return item === val;
    });
  });
  return currentArray;
}

var PermissionsList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PermissionsList, _Component);

  function PermissionsList(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.togglePermission = function (toggledPermission) {
      return function (event, checked) {
        var groupData = Object.assign({}, _this.state.group);
        var permissions = resolvePermissions(toggledPermission);

        if (!groupData.permissions) {
          groupData.permissions = [];
        }

        if (checked) {
          groupData.permissions = _uniq(_toConsumableArray(groupData.permissions).concat(_toConsumableArray(permissions)));
        } else {
          groupData.permissions = removePermissions(groupData.permissions, permissions);
        }

        if (_this.props.updateGroup) {
          return _this.props.updateGroup(_this.state.group._id, groupData);
        }
      };
    };

    _this.checked = function (permission) {
      if (_includes(_this.state.group.permissions, permission)) {
        return true;
      }

      return false;
    };

    _this.state = {
      group: props.group
    };
    return _this;
  }

  var _proto = PermissionsList.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState({
        group: nextProps.group
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.renderSubPermissions = function () {
    function renderSubPermissions(permission) {
      var _this2 = this;

      if (permission.permissions.length) {
        return React.createElement("div", {
          className: "child-item"
        }, permission.permissions.map(function (childPermission, index) {
          return React.createElement(Components.ListItem, {
            key: childPermission.name + "-" + index,
            actionType: "switch",
            label: childPermission.label,
            switchOn: _this2.checked(childPermission.permission),
            switchName: childPermission.permission,
            onSwitchChange: _this2.togglePermission(childPermission)
          });
        }));
      }

      return null;
    }

    return renderSubPermissions;
  }();

  _proto.renderPermissions = function () {
    function renderPermissions(permissions) {
      var _this3 = this;

      var jsx = [];
      permissions.forEach(function (permission, key) {
        jsx.push(React.createElement("div", {
          className: "permission-item",
          key: permission.name + "-" + key
        }, React.createElement(Components.ListItem, {
          label: permission.label,
          actionType: "switch",
          switchOn: _this3.checked(permission.name),
          switchName: permission.name,
          onSwitchChange: _this3.togglePermission(permission)
        }), _this3.renderSubPermissions(permission)));
      });
      return jsx;
    }

    return renderPermissions;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "permissions-list"
      }, this.renderPermissions(_compact(this.props.permissions)));
    }

    return render;
  }();

  return PermissionsList;
}(Component);

PermissionsList.propTypes = {
  createGroup: PropTypes.func,
  group: PropTypes.object,
  permissions: PropTypes.array,
  updateGroup: PropTypes.func
};
registerComponent("PermissionsList", PermissionsList);
module.exportDefault(PermissionsList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"signIn.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/signIn.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

/**
 * @summary React component to display sign in form
 * @memberof Accounts
 * @extends {Component}
 * @property {Object} credentials
 * @property {Boolean} isLoading
 * @property {Function} loginFormMessages
 * @property {Object} messages
 * @property {Function} onError
 * @property {Function} onForgotPasswordClick
 * @property {Function} onFormSubmit
 * @property {Function} onSignUpClick
 * @property {String} uniqueId
 */
var SignIn =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SignIn, _Component);

  function SignIn(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.handleSubmit = function (event) {
      if (_this.props.onFormSubmit) {
        _this.props.onFormSubmit(event, _this.state.email, _this.state.password);
      }
    };

    _this.handleClick = function (e) {
      e.preventDefault();
      window.location.href = 'https://account.play.knowledge.io/sign-up/basic-information';
    };

    _this.state = {
      email: props.credentials.email,
      password: props.credentials.password
    };
    _this.handleFieldChange = _this.handleFieldChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = SignIn.prototype;

  _proto.renderEmailErrors = function () {
    function renderEmailErrors() {
      if (this.props.onError(this.props.messages.errors && this.props.messages.errors.email)) {
        return React.createElement("span", {
          className: "help-block"
        }, React.createElement(Components.Translation, {
          defaultValue: this.props.messages.errors.email.reason,
          i18nKey: this.props.messages.errors.email.i18nKeyReason
        }));
      }
    }

    return renderEmailErrors;
  }();

  _proto.renderPasswordErrors = function () {
    function renderPasswordErrors() {
      return React.createElement("span", {
        className: "help-block"
      }, this.props.onError(this.props.messages.errors && this.props.messages.errors.password) && this.props.messages.errors.password.map(function (error, i) {
        return React.createElement(Components.Translation, {
          key: i,
          defaultValue: error.reason,
          i18nKey: error.i18nKeyReason
        });
      }));
    }

    return renderPasswordErrors;
  }();

  _proto.renderFormMessages = function () {
    function renderFormMessages() {
      if (this.props.loginFormMessages) {
        return React.createElement("div", null, this.props.loginFormMessages());
      }
    }

    return renderFormMessages;
  }();

  _proto.renderSpinnerOnWait = function () {
    function renderSpinnerOnWait() {
      if (this.props.isLoading === true) {
        return React.createElement("div", {
          style: {
            textAlign: "center"
          }
        }, React.createElement("i", {
          className: "fa fa-spinner fa-spin"
        }));
      }

      return React.createElement(Components.Button, {
        className: "btn-block not-show",
        primary: true,
        bezelStyle: "solid",
        i18nKeyLabel: "accountsUI.signIn",
        label: "Sign In",
        type: "submit",
        eventAction: "submitSignInForm"
      });
    }

    return renderSpinnerOnWait;
  }();

  _proto.render = function () {
    function render() {
      var emailClasses = classnames({
        "form-group": true,
        "form-group-email": true,
        "has-error has-feedback": this.props.onError(this.props.messages.errors && this.props.messages.errors.email)
      });
      var passwordClasses = classnames({
        "form-group": true,
        "form-group-password": true,
        "has-error has-feedback": this.props.onError(this.props.messages.errors && this.props.messages.errors.password)
      });
      return React.createElement("div", null, React.createElement("div", {
        className: "loginForm-title"
      }, React.createElement("h2", null, React.createElement(Components.Translation, {
        defaultValue: "Sign In",
        i18nKey: "accountsUI.signIn"
      }))), React.createElement("form", {
        className: "login-form",
        onSubmit: this.handleSubmit,
        noValidate: true
      }, this.renderFormMessages(), React.createElement("div", {
        className: emailClasses
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.emailAddress",
        label: "Email",
        name: "email",
        type: "email",
        id: "email-" + this.props.uniqueId,
        value: this.state.email,
        onChange: this.handleFieldChange
      }), this.renderEmailErrors()), React.createElement("div", {
        className: passwordClasses
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.password",
        label: "Password",
        name: "password",
        type: "password",
        id: "password-" + this.props.uniqueId,
        value: this.state.password,
        onChange: this.handleFieldChange
      }), this.renderPasswordErrors()), React.createElement("div", {
        className: "form-group"
      }, this.renderSpinnerOnWait()), React.createElement("div", {
        className: "form-group flex flex-justify-spaceBetween"
      }, React.createElement(Components.Button, {
        tagName: "span",
        className: {
          "btn": false,
          "btn-default": false,
          "forgot-pass": true
        },
        label: "Reset Password",
        i18nKeyLabel: "accountsUI.forgotPassword",
        "data-event-category": "accounts",
        onClick: this.props.onForgotPasswordClick
      }), React.createElement(Components.Button, {
        tagName: "span",
        className: {
          "btn": false,
          "btn-default": false
        },
        label: "Register",
        i18nKeyLabel: "accountsUI.signUp",
        "data-event-category": "accounts",
        onClick: this.handleClick
      }))));
    }

    return render;
  }();

  return SignIn;
}(Component);

SignIn.propTypes = {
  credentials: PropTypes.object,
  isLoading: PropTypes.bool,
  loginFormMessages: PropTypes.func,
  messages: PropTypes.object,
  onError: PropTypes.func,
  onForgotPasswordClick: PropTypes.func,
  onFormSubmit: PropTypes.func,
  onSignUpClick: PropTypes.func,
  uniqueId: PropTypes.string
};
registerComponent("SignIn", SignIn);
module.exportDefault(SignIn);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"signUp.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/signUp.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var SignUp =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SignUp, _Component);

  function SignUp(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.handleSubmit = function (event) {
      if (_this.props.onFormSubmit) {
        _this.props.onFormSubmit(event, _this.state.email, _this.state.password);
      }
    };

    _this.handleClick = function (e) {
      e.preventDefault();
      window.location.href = 'https://account.play.knowledge.io/sign-up/basic-information';
    };

    _this.state = {
      email: props.credentials.email,
      password: props.credentials.password
    };
    _this.handleFieldChange = _this.handleFieldChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = SignUp.prototype;

  _proto.renderEmailErrors = function () {
    function renderEmailErrors() {
      if (this.props.onError(this.props.messages.errors && this.props.messages.errors.email)) {
        return React.createElement("span", {
          className: "help-block"
        }, React.createElement(Components.Translation, {
          defaultValue: this.props.messages.errors.email.reason,
          i18nKey: this.props.messages.errors.email.i18nKeyReason
        }));
      }
    }

    return renderEmailErrors;
  }();

  _proto.renderPasswordErrors = function () {
    function renderPasswordErrors() {
      return React.createElement("span", {
        className: "help-block"
      }, this.props.onError(this.props.messages.errors && this.props.messages.errors.password) && this.props.messages.errors.password.map(function (error, i) {
        return React.createElement(Components.Translation, {
          key: i,
          defaultValue: error.reason,
          i18nKey: error.i18nKeyReason
        });
      }));
    }

    return renderPasswordErrors;
  }();

  _proto.renderFormMessages = function () {
    function renderFormMessages() {
      if (this.props.loginFormMessages) {
        return React.createElement("div", null, this.props.loginFormMessages());
      }
    }

    return renderFormMessages;
  }();

  _proto.renderSpinnerOnWait = function () {
    function renderSpinnerOnWait() {
      if (this.props.isLoading === true) {
        return React.createElement("div", {
          style: {
            textAlign: "center"
          }
        }, React.createElement("i", {
          className: "fa fa-spinner fa-spin"
        }));
      }

      return React.createElement(Components.Button, {
        className: "btn-block",
        primary: true,
        bezelStyle: "solid",
        i18nKeyLabel: "accountsUI.signUpButton",
        label: "Register",
        type: "submit",
        onClick: this.handleClick
      });
    }

    return renderSpinnerOnWait;
  }();

  _proto.renderForm = function () {
    function renderForm(emailClasses, passwordClasses) {
      if (this.props.hasPasswordService()) {
        return React.createElement("form", {
          className: "login-form",
          onSubmit: this.handleSubmit,
          noValidate: true
        }, this.renderFormMessages(), React.createElement("div", {
          className: emailClasses
        }, React.createElement(Components.TextField, {
          i18nKeyLabel: "accountsUI.emailAddress",
          label: "Email",
          name: "email",
          type: "email",
          id: "email-" + this.props.uniqueId,
          value: this.state.email,
          onChange: this.handleFieldChange
        }), this.renderEmailErrors()), React.createElement("div", {
          className: passwordClasses
        }, React.createElement(Components.TextField, {
          i18nKeyLabel: "accountsUI.password",
          label: "Password",
          name: "password",
          type: "password",
          id: "password-" + this.props.uniqueId,
          value: this.state.password,
          onChange: this.handleFieldChange
        }), this.renderPasswordErrors()), React.createElement("div", {
          className: "form-group"
        }, this.renderSpinnerOnWait()), React.createElement("div", {
          className: "form-group"
        }, React.createElement(Components.Button, {
          tagName: "span",
          className: {
            "btn": false,
            "btn-default": false,
            "not-show": true
          },
          label: "Sign In",
          i18nKeyLabel: "accountsUI.signIn",
          "data-event-category": "accounts",
          onClick: this.props.onSignInClick
        })));
      }
    }

    return renderForm;
  }();

  _proto.render = function () {
    function render() {
      var emailClasses = classnames({
        "form-group": true,
        "form-group-email": true,
        "has-error has-feedback": this.props.onError(this.props.messages.errors && this.props.messages.errors.email)
      });
      var passwordClasses = classnames({
        "form-group": true,
        "form-group-password": true,
        "has-error has-feedback": this.props.onError(this.props.messages.errors && this.props.messages.errors.password)
      });
      return React.createElement("div", null, React.createElement("div", {
        className: "loginForm-title"
      }, React.createElement("h2", null, React.createElement(Components.Translation, {
        defaultValue: "Create an Account",
        i18nKey: "accountsUI.createAccount"
      }))), this.renderForm(emailClasses, passwordClasses));
    }

    return render;
  }();

  return SignUp;
}(Component);

SignUp.propTypes = {
  credentials: PropTypes.object,
  hasPasswordService: PropTypes.func,
  isLoading: PropTypes.bool,
  loginFormMessages: PropTypes.func,
  messages: PropTypes.object,
  onError: PropTypes.func,
  onFormSubmit: PropTypes.func,
  onSignInClick: PropTypes.func,
  uniqueId: PropTypes.string
};
registerComponent("SignUp", SignUp);
module.exportDefault(SignUp);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"updateEmail.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/updateEmail.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var UpdateEmail =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(UpdateEmail, _Component);

  function UpdateEmail(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.handleSubmit = function (event) {
      event.preventDefault;

      _this.setState({
        showSpinner: true
      });

      var options = {
        newEmail: _this.state.email,
        oldEmail: _this.props.email
      };

      _this.props.handleUpdateEmail(options, function () {
        return _this.setState({
          showSpinner: false
        });
      });
    };

    _this.state = {
      email: props.email,
      showSpinner: false
    };
    return _this;
  }

  var _proto = UpdateEmail.prototype;

  _proto.render = function () {
    function render() {
      var showSpinner = this.state.showSpinner;
      return React.createElement("div", null, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.emailAddress",
        label: "Email Address",
        name: "email",
        type: "email",
        id: "email-" + this.props.uniqueId,
        value: this.state.email,
        onChange: this.handleFieldChange
      }), React.createElement(Components.Button, {
        bezelStyle: "solid",
        icon: showSpinner ? "fa fa-spin fa-circle-o-notch" : "",
        i18nKeyLabel: showSpinner ? "accountsUI.updatingEmailAddress" : "accountsUI.updateEmailAddress",
        label: showSpinner ? "Updating Email Address" : "Update Email Address",
        status: "primary",
        onClick: this.handleSubmit,
        disabled: this.state.email === this.props.email
      }));
    }

    return render;
  }();

  return UpdateEmail;
}(Component);

UpdateEmail.propTypes = {
  email: PropTypes.string,
  handleUpdateEmail: PropTypes.func.isRequired,
  uniqueId: PropTypes.string
};
module.exportDefault(UpdateEmail);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"updatePasswordOverlay.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/updatePasswordOverlay.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);

var UpdatePasswordOverlay =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(UpdatePasswordOverlay, _Component);

  function UpdatePasswordOverlay() {
    var _this;

    _this = _Component.call(this) || this;

    _this.handleFieldChange = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.handleSubmit = function (event) {
      if (_this.props.onFormSubmit) {
        _this.props.onFormSubmit(event, _this.state.password);
      }
    };

    _this.handleCancel = function (event) {
      if (_this.props.onCancel) {
        _this.props.onCancel(event);
      }
    };

    _this.state = {
      password: "",
      showSpinner: true
    };
    _this.handleFieldChange = _this.handleFieldChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleCancel = _this.handleCancel.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = UpdatePasswordOverlay.prototype;

  _proto.componentWillMount = function () {
    function componentWillMount() {
      return _regenerator.default.async(function () {
        function componentWillMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _regenerator.default.awrap(this.setState({
                  showSpinner: false
                }));

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }

        return componentWillMount$;
      }(), null, this);
    }

    return componentWillMount;
  }();

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps() {
      this.setState({
        showSpinner: false
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.renderFormMessages = function () {
    function renderFormMessages() {
      if (this.props.loginFormMessages) {
        return React.createElement("div", null, this.props.loginFormMessages());
      }
    }

    return renderFormMessages;
  }();

  _proto.renderPasswordErrors = function () {
    function renderPasswordErrors() {
      return React.createElement("span", {
        className: "help-block"
      }, this.props.onError(this.props.messages.errors && this.props.messages.errors.password) && this.props.messages.errors.password.map(function (error, i) {
        return React.createElement(Components.Translation, {
          key: i,
          defaultValue: error.reason,
          i18nKey: error.i18nKeyReason
        });
      }));
    }

    return renderPasswordErrors;
  }();

  _proto.renderSpinnerOnWait = function () {
    function renderSpinnerOnWait() {
      var type = this.props.type;

      if (this.props.isDisabled === true) {
        return React.createElement("div", {
          className: "col-sm-6",
          style: {
            textAlign: "center"
          }
        }, React.createElement("i", {
          className: "fa fa-spinner fa-spin"
        }));
      }

      if (type === "setPassword") {
        return React.createElement("div", {
          className: "col-sm-6"
        }, React.createElement(Components.Button, {
          className: "btn-block",
          primary: true,
          bezelStyle: "solid",
          i18nKeyLabel: "accountsUI.setPassword",
          label: "Set your password",
          type: "submit"
        }));
      }

      return React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.Button, {
        className: "btn-block",
        primary: true,
        bezelStyle: "solid",
        i18nKeyLabel: "accountsUI.updatePasswordAndContinue",
        label: "Update and continue",
        type: "submit"
      }));
    }

    return renderSpinnerOnWait;
  }();

  _proto.renderSpinnerOnLoad = function () {
    function renderSpinnerOnLoad() {
      return React.createElement("div", {
        className: "spinner-container"
      }, React.createElement("div", {
        className: "spinner"
      }));
    }

    return renderSpinnerOnLoad;
  }();

  _proto.renderPasswordResetText = function () {
    function renderPasswordResetText() {
      var type = this.props.type;

      if (type === "setPassword") {
        return React.createElement(Components.Translation, {
          defaultValue: "Set Your Password",
          i18nKey: "accountsUI.setPassword"
        });
      }

      return React.createElement(Components.Translation, {
        defaultValue: "Update Your Password",
        i18nKey: "accountsUI.updateYourPassword"
      });
    }

    return renderPasswordResetText;
  }();

  _proto.render = function () {
    function render() {
      var passwordClasses = classnames({
        "form-group": true,
        "has-error has-feedback": this.props.onError(this.props.messages.errors && this.props.messages.errors.password)
      });
      var showSpinner = this.state.showSpinner;
      return React.createElement("div", null, this.props.isOpen === true && React.createElement("div", null, React.createElement("div", {
        className: "modal-backdrop fade in",
        id: "modal-backdrop-" + this.props.uniqueId
      }), React.createElement("div", {
        className: "modal fade in",
        id: "modal-" + this.props.uniqueId,
        style: {
          display: "block"
        }
      }, React.createElement("div", {
        className: "modal-dialog"
      }, showSpinner ? this.renderSpinnerOnLoad() : React.createElement("form", {
        className: "modal-content",
        onSubmit: this.handleSubmit
      }, React.createElement("div", {
        className: "modal-header"
      }, React.createElement("h4", {
        className: "modal-title"
      }, this.renderPasswordResetText())), React.createElement("div", {
        className: "modal-body"
      }, React.createElement("div", {
        className: "login-form"
      }, this.renderFormMessages(), React.createElement("div", {
        className: passwordClasses
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.password",
        label: "Password",
        name: "password",
        type: "password",
        id: "password-" + this.props.uniqueId,
        value: this.state.password,
        onChange: this.handleFieldChange
      }), this.renderPasswordErrors()))), React.createElement("div", {
        className: "modal-footer"
      }, this.renderSpinnerOnWait(), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.Button, {
        className: "btn-block",
        status: "danger",
        bezelStyle: "solid",
        i18nKeyLabel: "app.cancel",
        label: "Cancel",
        type: "button",
        onClick: this.handleCancel,
        disabled: this.props.isDisabled
      }))))))));
    }

    return render;
  }();

  return UpdatePasswordOverlay;
}(Component);

UpdatePasswordOverlay.propTypes = {
  isDisabled: PropTypes.bool,
  isOpen: PropTypes.bool,
  loginFormMessages: PropTypes.func,
  messages: PropTypes.object,
  onCancel: PropTypes.func,
  onError: PropTypes.func,
  onFormSubmit: PropTypes.func,
  type: PropTypes.string,
  uniqueId: PropTypes.string
};
module.exportDefault(UpdatePasswordOverlay);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"verifyAccount.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/components/verifyAccount.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropType;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropType = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);

var VerifyAccount = function (_ref) {
  var error = _ref.error;
  var classNames = classnames({
    "fa": true,
    "fa-times-circle-o": !!error,
    "fa-check-circle-o": !error
  });
  var style = {
    color: error ? "#f33" : "#49da49",
    fontSize: "8rem"
  };
  return React.createElement("div", {
    className: "container-fluid-sm"
  }, React.createElement("div", {
    className: "rui empty-view-message"
  }, React.createElement("i", {
    className: classNames,
    style: style
  }), React.createElement("p", {
    className: "message"
  }, React.createElement(Components.Translation, {
    defaultValue: error ? error.reason : "Email verified",
    i18nKey: error ? error.i18nKey : "accountsUI.info.emailVerified"
  }))));
};

VerifyAccount.propTypes = {
  error: PropType.object
};
module.exportDefault(VerifyAccount);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"accountsDashboardContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/accountsDashboardContainer.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Alert;
module.watch(require("sweetalert2"), {
  "default": function (v) {
    Alert = v;
  }
}, 2);
var registerComponent, composeWithTracker, withIsAdmin;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  withIsAdmin: function (v) {
    withIsAdmin = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Accounts, Groups;
module.watch(require("../../../../../../lib/collections"), {
  Accounts: function (v) {
    Accounts = v;
  },
  Groups: function (v) {
    Groups = v;
  }
}, 5);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var AccountsDashboard;
module.watch(require("../components/accountsDashboard"), {
  "default": function (v) {
    AccountsDashboard = v;
  }
}, 7);
var handlers = {
  handleUserGroupChange: function (_ref) {
    var account = _ref.account,
        ownerGrpId = _ref.ownerGrpId,
        onMethodLoad = _ref.onMethodLoad,
        onMethodDone = _ref.onMethodDone;
    return function (event, groupId) {
      if (onMethodLoad) {
        onMethodLoad();
      }

      if (groupId === ownerGrpId) {
        return alertConfirm().then(function (_ref2) {
          var value = _ref2.value;

          if (value) {
            return updateMethodCall(groupId);
          }
        }).finally(function () {
          if (onMethodDone) {
            onMethodDone();
          }
        });
      }

      return updateMethodCall(groupId);
    };

    function updateMethodCall(groupId) {
      Meteor.call("group/addUser", account._id, groupId, function (err) {
        if (err) {
          Alerts.toast(i18next.t("admin.groups.addUserError", {
            err: err.message
          }), "error");
        }

        if (!err) {
          Alerts.toast(i18next.t("admin.groups.addUserSuccess"), "success");
        }

        if (onMethodDone) {
          onMethodDone();
        }
      });
    }

    function alertConfirm() {
      var changeOwnerWarn = "changeShopOwnerWarn";

      if (Reaction.getShopId() === Reaction.getPrimaryShopId()) {
        changeOwnerWarn = "changeMktOwnerWarn";
      }

      return Alert({
        title: i18next.t("admin.settings.changeOwner"),
        text: i18next.t("admin.settings." + changeOwnerWarn),
        type: "warning",
        showCancelButton: true,
        cancelButtonText: i18next.t("admin.settings.cancel"),
        confirmButtonText: i18next.t("admin.settings.continue")
      });
    }
  },
  handleRemoveUserFromGroup: function (account, groupId) {
    return function () {
      alertConfirm().then(function (_ref3) {
        var value = _ref3.value;

        if (value) {
          return removeMethodCall();
        }

        return false;
      }).catch(function () {
        return false;
      });

      function removeMethodCall() {
        Meteor.call("group/removeUser", account._id, groupId, function (err) {
          if (err) {
            return Alerts.toast(i18next.t("admin.groups.removeUserError", {
              err: err.message
            }), "error");
          }

          return Alerts.toast(i18next.t("admin.groups.removeUserSuccess"), "success");
        });
      }
    };

    function alertConfirm() {
      return Alert({
        title: i18next.t("admin.settings.removeUser"),
        text: i18next.t("admin.settings.removeUserWarn"),
        type: "warning",
        showCancelButton: true,
        cancelButtonText: i18next.t("admin.settings.cancel"),
        confirmButtonText: i18next.t("admin.settings.continue")
      });
    }
  }
};

var composer = function (props, onData) {
  var shopId = Reaction.getShopId();
  var adminUserSub = Meteor.subscribe("Accounts", null);
  var grpSub = Meteor.subscribe("Groups", {
    shopId: shopId
  });

  if (adminUserSub.ready() && grpSub.ready()) {
    var _adminQuery;

    var groups = Groups.find({
      shopId: Reaction.getShopId()
    }).fetch();
    var adminQuery = (_adminQuery = {}, _adminQuery["roles." + shopId] = {
      $in: ["dashboard"]
    }, _adminQuery);
    var adminUsers = Meteor.users.find(adminQuery, {
      fields: {
        _id: 1
      }
    }).fetch();
    var ids = adminUsers.map(function (user) {
      return user._id;
    });
    var accounts = Accounts.find({
      _id: {
        $in: ids
      }
    }).fetch();
    var adminGroups = groups.reduce(function (admGrps, group) {
      if (group.slug !== "customer" && group.slug !== "guest") {
        admGrps.push(group);
      }

      return admGrps;
    }, []);
    onData(null, {
      accounts: accounts,
      groups: groups,
      adminGroups: adminGroups
    });
  }
};

registerComponent("AccountsDashboard", AccountsDashboard, [withIsAdmin, composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(withIsAdmin, composeWithTracker(composer), _withProps(handlers))(AccountsDashboard));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addressBookContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/addressBookContainer.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 3);
var i18next, Logger;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 4);
var Countries;
module.watch(require("../../../../../../client/collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 5);
var Collections;
module.watch(require("../../../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 6);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 7);
var AddressBook;
module.watch(require("../components/addressBook"), {
  "default": function (v) {
    AddressBook = v;
  }
}, 8);
var handlers = {
  /**
   * @method updateAddress
   * @summary helper function that validates and updates an address in the account's addressBook via a meteor method.
   * @since 2.0.0
   * @param {Object} address - address to be updated.
   * @param{String} property - property to be updated.
   * @return {Promise}
   */
  updateAddress: function (address, property) {
    var validateAddress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    return new Promise(function (resolve, reject) {
      if (validateAddress) {
        Meteor.call("accounts/validateAddress", address, function (error, result) {
          if (error || !result) {
            var errorMessage = error && error.message || "Validation Failed";

            if (error && error.error === "validation-error" && Array.isArray(error.details) && error.details.length) {
              // Add details of first invalid field from SimpleSchema
              errorMessage = error.details[0].message;
            }

            reject(i18next.t("addressBookAdd.failedToUpdateAddress", {
              err: errorMessage
            }));
            return;
          } else if (result.validated === false && !result.suggestedAddress) {
            reject(i18next.t("addressBookAdd.failedToUpdateAddress", {
              err: "Unable to fetch corrected address"
            }));
            return;
          } else if (result.validated === false && result.suggestedAddress && result.formErrors && result.formErrors.length > 0) {
            reject(i18next.t("addressBookAdd.failedToUpdateAddress", {
              err: result.formErrors[0].summary
            }));
            return;
          } else if (result.validated === false && result.suggestedAddress) {
            resolve(result);
            return;
          }

          Meteor.call("accounts/addressBookUpdate", address, null, property, function (err, res) {
            if (err || !res) {
              reject(i18next.t("addressBookGrid.somethingWentWrong", {
                err: err.message
              }));
            } else {
              resolve(res);
            }
          });
          return;
        });
      }

      Meteor.call("accounts/addressBookUpdate", address, null, property, function (err, res) {
        if (err || !res) {
          reject(i18next.t("addressBookGrid.somethingWentWrong", {
            err: err.message
          }));
        } else {
          resolve(res);
        }
      });
    });
  },

  /**
  * @method removeAddress
  * @summary helper function that updates an address in the account's addressBook via a meteor method.
  * @since 2.0.0
  * @param {String} _id - _id of address to be removed.
  * @return {Promise}
  */
  removeAddress: function (_id) {
    return new Promise(function (resolve, reject) {
      Meteor.call("accounts/addressBookRemove", _id, function (error, result) {
        if (error || !result) {
          reject(i18next.t("addressBookGrid.cantRemoveThisAddress", {
            err: error.message
          }));
        } else {
          resolve(result);
        }
      });
    });
  },

  /**
  * @method addAddress
  * @summary helper function that validates and adds an address in the account's addressBook via a meteor method.
  * @since 2.0.0
  * @param {Object} address - address to be added.
  * @return {Promise}
  */
  addAddress: function (address) {
    var validateAddress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    return new Promise(function (resolve, reject) {
      // This address was tried for validation
      if (validateAddress) {
        Meteor.call("accounts/validateAddress", address, function (error, result) {
          if (error || !result) {
            var errorMessage = error && error.message || "Validation Failed";

            if (error && error.error === "validation-error" && Array.isArray(error.details) && error.details.length) {
              // Add details of first invalid field from SimpleSchema
              errorMessage = error.details[0].message;
            }

            reject(i18next.t("addressBookAdd.failedToAddAddress", {
              err: errorMessage
            }));
            return;
          } else if (result.validated === false && !result.suggestedAddress) {
            reject(i18next.t("addressBookAdd.failedToAddAddress", {
              err: "Unable to fetch corrected address"
            }));
            return;
          } else if (result.validated === false && result.suggestedAddress && result.formErrors && result.formErrors.length > 0) {
            reject(i18next.t("addressBookAdd.failedToAddAddress", {
              err: result.formErrors[0].summary
            }));
            return;
          } else if (result.validated === false && result.suggestedAddress) {
            resolve(result);
            return;
          }

          Meteor.call("accounts/addressBookAdd", address, function (err, res) {
            if (err || !res) {
              reject(i18next.t("addressBookAdd.failedToAddAddress", {
                err: err.message
              }));
            } else {
              resolve(res);
            }
          });
        });
      } else {
        Meteor.call("accounts/addressBookAdd", address, function (err, res) {
          if (err || !res) reject(i18next.t("addressBookAdd.failedToAddAddress", {
            err: err.message
          }));
          if (res) resolve(res);
        });
      }
    });
  },
  markCart: function (address, isEnteredSelected) {
    if (!isEnteredSelected) {
      Meteor.call("accounts/markAddressValidationBypassed", false, function (error) {
        if (error) {
          return Logger.error(error, "Unable to mark the cart");
        }

        Meteor.call("accounts/markTaxCalculationFailed", false, function (err) {
          if (err) {
            return Logger.error(err, "Unable to mark the cart");
          }
        });
      });
    } else {
      Meteor.call("accounts/markAddressValidationBypassed", true, function (error) {
        if (error) {
          return Logger.error(error, "Unable to mark the cart");
        }
      });
    }
  },

  /**
  * @method onError
  * @summary helper function that shows an error message in an alert toast.
  * @since 2.0.0
  * @param {Object} errorMessage - error message object.
  */
  onError: function (errorMessage) {
    Alerts.toast(errorMessage, "error");
  }
};

function composer(props, onData) {
  var handle = Meteor.subscribe("Accounts", Meteor.userId());

  if (!handle.ready()) {
    return;
  }

  var account = Collections.Accounts.findOne({
    _id: Meteor.userId()
  });
  var addressBook = account.profile.addressBook;
  var countries = Countries.find().fetch();
  var shop = Collections.Shops.findOne();
  var shopCountries = shop.locales.countries;
  var regionsByCountry = {};
  Object.keys(shopCountries).forEach(function (key) {
    var _ref = shopCountries[key] || {},
        states = _ref.states;

    var regions = [];

    if (states) {
      // states is an object that needs to be convered
      // to an array of region labels and values
      Object.keys(states).forEach(function (i) {
        regions.push({
          label: states[i].name,
          value: i
        });
      });
    }

    regionsByCountry[key] = regions;
  }); // The initial mode for addressBook

  var initMode;
  var cart = Collections.Cart.findOne(); // If we have passed the address step, show the grid

  if (cart.workflow.status !== "checkoutAddressBook") {
    initMode = "grid";
  } // AddressBook heading will be different in different views
  // If the view template that's using the AddressBook has a
  // heading object, set it as the AddressBook heading


  if (!this.heading) {
    var template = Template.instance();

    var _ref2 = template || {
      data: undefined
    },
        data = _ref2.data;

    var _ref3 = data || {
      heading: undefined
    },
        templateHeading = _ref3.heading;

    if (templateHeading) {
      this.heading = templateHeading;
    } else {
      this.heading = {
        defaultValue: "Address Book",
        i18nKey: "accountsUI.addressBook"
      };
    }
  }

  onData(null, {
    addressBook: addressBook,
    countries: countries,
    heading: this.heading,
    initMode: initMode,
    regionsByCountry: regionsByCountry
  });
}

registerComponent("AddressBook", AddressBook, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(AddressBook));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"auth.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/auth.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _filter;

module.watch(require("lodash/filter"), {
  "default": function (v) {
    _filter = v;
  }
}, 0);

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 3);
var Components, registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 6);
var Router;
module.watch(require("../../../../../../client/api"), {
  Router: function (v) {
    Router = v;
  }
}, 7);
var ServiceConfigHelper, LoginFormSharedHelpers;
module.watch(require("../helpers"), {
  ServiceConfigHelper: function (v) {
    ServiceConfigHelper = v;
  },
  LoginFormSharedHelpers: function (v) {
    LoginFormSharedHelpers = v;
  }
}, 8);
var LoginFormValidation;
module.watch(require("../../../../../../lib/api"), {
  LoginFormValidation: function (v) {
    LoginFormValidation = v;
  }
}, 9);

var AuthContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AuthContainer, _Component);

  function AuthContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFormSubmit = function (event, email, password) {
      event.preventDefault();

      _this.setState({
        isLoading: true
      });

      var errors = {};
      var username = email ? email.trim() : null;
      var pword = password ? password.trim() : null;
      var validatedEmail = LoginFormValidation.email(username);
      var validatedPassword = LoginFormValidation.password(pword, {
        validationLevel: "exists"
      });

      if (validatedEmail !== true) {
        errors.email = validatedEmail;
      }

      if (validatedPassword !== true) {
        errors.password = validatedPassword;
      }

      if (_isEmpty(errors) === false) {
        _this.setState({
          isLoading: false,
          formMessages: {
            errors: errors
          }
        });

        return;
      }

      if (_this.props.currentView === "loginFormSignInView") {
        Meteor.loginWithPassword(username, pword, function (error) {
          if (error) {
            _this.setState({
              isLoading: false,
              formMessages: {
                alerts: [error]
              }
            });
          } else {
            Router.go(_this.props.currentRoute.route.path);
          }
        });
      } else if (_this.props.currentView === "loginFormSignUpView") {
        var newUserData = {
          email: username,
          password: pword
        };
        Accounts.createUser(newUserData, function (error) {
          if (error) {
            _this.setState({
              isLoading: false,
              formMessages: {
                alerts: [error]
              }
            });
          } else {
            Router.go(_this.props.currentRoute.route.path);
          }
        });
      }
    };

    _this.hasError = function (error) {
      // True here means the field is valid
      // We're checking if theres some other message to display
      if (error !== true && typeof error !== "undefined") {
        return true;
      }

      return false;
    };

    _this.formMessages = function () {
      return React.createElement(Components.LoginFormMessages, {
        messages: _this.state.formMessages
      });
    };

    _this.services = function () {
      var serviceHelper = new ServiceConfigHelper();
      return serviceHelper.services();
    };

    _this.shouldShowSeperator = function () {
      var serviceHelper = new ServiceConfigHelper();
      var services = serviceHelper.services();

      var enabledServices = _filter(services, {
        enabled: true
      });

      return !!Package["accounts-password"] && enabledServices.length > 0;
    };

    _this.capitalizeName = function (str) {
      return LoginFormSharedHelpers.capitalize(str);
    };

    _this.handleSocialLogin = function (value) {
      var serviceName = value; // Get proper service name

      if (serviceName === "meteor-developer") {
        serviceName = "MeteorDeveloperAccount";
      } else {
        serviceName = _this.capitalizeName(serviceName);
      }

      var loginWithService = Meteor["loginWith" + serviceName];
      var options = {}; // use default scope unless specified

      loginWithService(options, function (error) {
        if (error) {
          _this.setState({
            formMessages: {
              alerts: [error]
            }
          });
        }
      });
    };

    _this.hasPasswordService = function () {
      return !!Package["accounts-password"];
    };

    _this.state = {
      formMessages: props.formMessages || {},
      isLoading: false
    };
    _this.handleFormSubmit = _this.handleFormSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.hasError = _this.hasError.bind((0, _assertThisInitialized2.default)(_this));
    _this.formMessages = _this.formMessages.bind((0, _assertThisInitialized2.default)(_this));
    _this.services = _this.services.bind((0, _assertThisInitialized2.default)(_this));
    _this.shouldShowSeperator = _this.shouldShowSeperator.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSocialLogin = _this.handleSocialLogin.bind((0, _assertThisInitialized2.default)(_this));
    _this.capitalizeName = _this.capitalizeName.bind((0, _assertThisInitialized2.default)(_this));
    _this.hasPasswordService = _this.hasPasswordService.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = AuthContainer.prototype;

  _proto.renderAuthView = function () {
    function renderAuthView() {
      if (this.props.currentView === "loginFormSignInView") {
        return React.createElement(Components.SignIn, (0, _extends2.default)({}, this.props, {
          onFormSubmit: this.handleFormSubmit,
          messages: this.state.formMessages,
          onError: this.hasError,
          loginFormMessages: this.formMessages,
          isLoading: this.state.isLoading
        }));
      } else if (this.props.currentView === "loginFormSignUpView") {
        return React.createElement(Components.SignUp, (0, _extends2.default)({}, this.props, {
          onFormSubmit: this.handleFormSubmit,
          messages: this.state.formMessages,
          onError: this.hasError,
          loginFormMessages: this.formMessages,
          hasPasswordService: this.hasPasswordService,
          isLoading: this.state.isLoading
        }));
      }
    }

    return renderAuthView;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", null, React.createElement(Components.LoginButtons, {
        loginServices: this.services,
        currentView: this.props.currentView,
        onSeparator: this.shouldShowSeperator,
        onSocialClick: this.handleSocialLogin,
        capitalizeName: this.capitalizeName
      }), this.renderAuthView());
    }

    return render;
  }();

  return AuthContainer;
}(Component);

AuthContainer.propTypes = {
  currentRoute: PropTypes.object,
  currentView: PropTypes.string,
  formMessages: PropTypes.object
};

function composer(props, onData) {
  onData(null, {
    currentRoute: Router.current()
  });
}

registerComponent("AuthContainer", AuthContainer, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(AuthContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editGroupContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/editGroupContainer.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var composeWithTracker, registerComponent;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var EditGroup;
module.watch(require("../components/editGroup"), {
  "default": function (v) {
    EditGroup = v;
  }
}, 4);

var composer = function (props, onData) {
  var shopId = Reaction.getShopId();
  var pkg = Meteor.subscribe("Packages", shopId);

  if (pkg.ready()) {
    var packages = Packages.find({
      shopId: shopId
    }).fetch();
    onData(null, (0, _objectSpread2.default)({
      packages: packages
    }, props));
  }
};

registerComponent("EditGroup", EditGroup, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(EditGroup));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"forgotPassword.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/forgotPassword.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 5);
var ForgotPassword;
module.watch(require("../components/forgotPassword"), {
  "default": function (v) {
    ForgotPassword = v;
  }
}, 6);
var LoginFormValidation;
module.watch(require("../../../../../../lib/api"), {
  LoginFormValidation: function (v) {
    LoginFormValidation = v;
  }
}, 7);

var ForgotPasswordContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ForgotPasswordContainer, _Component);

  function ForgotPasswordContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFormSubmit = function (event, email) {
      event.preventDefault();

      _this.setState({
        isLoading: true
      });

      var newEmail;
      email === undefined ? newEmail = "" : newEmail = email;
      var emailAddress = newEmail.trim();
      var validatedEmail = LoginFormValidation.email(emailAddress);
      var errors = {};

      if (validatedEmail !== true) {
        errors.email = validatedEmail;
      }

      if (_isEmpty(errors) === false) {
        _this.setState({
          isLoading: false,
          formMessages: {
            errors: errors
          }
        });

        return;
      }

      Meteor.call("accounts/sendResetPasswordEmail", {
        email: emailAddress
      }, function (error) {
        // Show some message confirming result
        if (error) {
          _this.setState({
            isLoading: false,
            formMessages: {
              alerts: [error]
            }
          });
        } else {
          _this.setState({
            isLoading: false,
            isDisabled: true,
            formMessages: {
              info: [{
                reason: i18next.t("accountsUI.info.passwordResetSend") || "Password reset mail sent."
              }]
            }
          });
        }
      });
    };

    _this.formMessages = function () {
      return React.createElement(Components.LoginFormMessages, {
        messages: _this.state.formMessages
      });
    };

    _this.hasError = function (error) {
      // True here means the field is valid
      // We're checking if theres some other message to display
      if (error !== true && typeof error !== "undefined") {
        return true;
      }

      return false;
    };

    _this.state = {
      formMessages: props.formMessages || {},
      isLoading: false,
      isDisabled: false
    };
    _this.handleFormSubmit = _this.handleFormSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.formMessages = _this.formMessages.bind((0, _assertThisInitialized2.default)(_this));
    _this.hasError = _this.hasError.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = ForgotPasswordContainer.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(ForgotPassword, (0, _extends2.default)({}, this.props, {
        onFormSubmit: this.handleFormSubmit,
        loginFormMessages: this.formMessages,
        messages: this.state.formMessages,
        onError: this.hasError,
        isLoading: this.state.isLoading,
        isDisabled: this.state.isDisabled
      }));
    }

    return render;
  }();

  return ForgotPasswordContainer;
}(Component);

ForgotPasswordContainer.propTypes = {
  formMessages: PropTypes.object
};
registerComponent("ForgotPassword", ForgotPasswordContainer);
module.exportDefault(ForgotPasswordContainer);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loginInline.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/loginInline.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 4);
var LoginInline;
module.watch(require("../components/loginInline"), {
  "default": function (v) {
    LoginInline = v;
  }
}, 5);
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 6);

var LoginInlineContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(LoginInlineContainer, _Component);

  function LoginInlineContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.pushCartWorkflow = function () {
      Meteor.call("workflow/pushCartWorkflow", "coreCartWorkflow", "checkoutLogin", function (error) {
        if (error) {
          // Do not bother to try to advance workflow if we can't go beyond login.
          return;
        }

        var cart = Cart.findOne({
          userId: Meteor.userId()
        }); // If there's already a billing and shipping address selected, push beyond address book

        if (cart && cart.billing[0] && cart.billing[0].address && cart.shipping[0] && cart.shipping[0].address) {
          Meteor.call("workflow/pushCartWorkflow", "coreCartWorkflow", "checkoutAddressBook");
        }
      });
    };

    _this.continueAsGuest = function (event) {
      event.preventDefault();

      if (_this.state.isStripeEnabled) {
        _this.setState({
          renderEmailForm: true
        });
      } else {
        _this.pushCartWorkflow();
      }
    };

    _this.handleEmailSubmit = function (event, email) {
      event.preventDefault();
      var userId = Meteor.userId();
      Meteor.call("cart/setAnonymousUserEmail", userId, email, function (error) {
        if (error) {
          Alerts.toast(i18next.t("mail.alerts.addCartEmailFailed"), "error");
        } else {
          _this.pushCartWorkflow();
        }
      });
    };

    _this.state = {
      isStripeEnabled: props.isStripeEnabled,
      renderEmailForm: false
    };
    return _this;
  }

  var _proto = LoginInlineContainer.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState({
        isStripeEnabled: nextProps.isStripeEnabled
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(LoginInline, {
        continueAsGuest: this.continueAsGuest,
        renderEmailForm: this.state.renderEmailForm,
        handleEmailSubmit: this.handleEmailSubmit
      });
    }

    return render;
  }();

  return LoginInlineContainer;
}(Component);

LoginInlineContainer.propTypes = {
  isStripeEnabled: PropTypes.bool
};

function composer(props, onData) {
  var isStripeEnabled = false;
  var subscription = Reaction.Subscriptions.Packages;
  var primaryShopId = Reaction.getPrimaryShopId();
  var stripePkg = Reaction.getPackageSettingsWithOptions({
    shopId: primaryShopId,
    name: "reaction-stripe",
    enabled: true
  });

  if (subscription.ready()) {
    if (stripePkg) {
      isStripeEnabled = true;
    }

    onData(null, {
      isStripeEnabled: isStripeEnabled
    });
  }
}

registerComponent("LoginInline", LoginInlineContainer, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(LoginInlineContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mainDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/mainDropdown.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 3);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 4);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 5);
var registerComponent, composeWithTracker, withCurrentAccount;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  withCurrentAccount: function (v) {
    withCurrentAccount = v;
  }
}, 6);
var i18nextDep, i18next, Reaction, Logger;
module.watch(require("../../../../../../client/api"), {
  i18nextDep: function (v) {
    i18nextDep = v;
  },
  i18next: function (v) {
    i18next = v;
  },
  Reaction: function (v) {
    Reaction = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 7);
var Tags;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  }
}, 8);
var getUserAvatar;
module.watch(require("../helpers/helpers"), {
  getUserAvatar: function (v) {
    getUserAvatar = v;
  }
}, 9);
var MainDropdown;
module.watch(require("../components/mainDropdown"), {
  "default": function (v) {
    MainDropdown = v;
  }
}, 10);

function displayName(displayUser) {
  i18nextDep.depend();
  var user = displayUser || Accounts.user();

  if (user) {
    if (user.name) {
      return user.name;
    } else if (user.username) {
      return user.username;
    } else if (user.profile && user.profile.name) {
      return user.profile.name;
    } // todo: previous check was user.services !== "anonymous", "resume". Is this
    // new check covers previous check?


    if (Roles.userIsInRole(user._id || user.userId, "account/profile", Reaction.getShopId())) {
      return i18next.t("accountsUI.guest", {
        defaultValue: "Guest"
      });
    }
  }
}

function getAdminShortcutIcons() {
  // get shortcuts with audience permissions based on user roles
  var roles = Roles.getRolesForUser(Meteor.userId(), Reaction.getShopId());
  return {
    provides: "shortcut",
    enabled: true,
    audience: roles
  };
}

function handleChange(event, value) {
  event.preventDefault();

  if (value === "logout") {
    return Meteor.logout(function (error) {
      if (error) {
        Logger.error(error, "Failed to logout.");
      } // Resets the app to show the primary shop as the active shop when a user logs out.
      // When an admin user is switching back and forth between shops, the app will keep the
      // activeShopId as the last shop visited. If an admin user logs out, the app will stay on that shop
      // for any new user who uses the same browser, temporarily, until the app is refreshed. This fixes that issue.


      Reaction.setShopId(Reaction.getPrimaryShopId());
    });
  }

  if (value.name === "createProduct") {
    Reaction.setUserPreferences("reaction-dashboard", "viewAs", "administrator");
    Meteor.call("products/createProduct", function (error, productId) {
      var currentTag;
      var currentTagId;

      if (error) {
        throw new Meteor.Error("create-product-error", error);
      } else if (productId) {
        currentTagId = Session.get("currentTag");
        currentTag = Tags.findOne(currentTagId);

        if (currentTag) {
          Meteor.call("products/updateProductTags", productId, currentTag.name, currentTagId);
        } // go to new product


        Reaction.Router.go("product", {
          handle: productId
        });
      }
    });
  } else if (value.name !== "account/profile") {
    return Reaction.showActionView(value);
  } else if (value.route || value.name) {
    var route = value.name || value.route;
    return Reaction.Router.go(route);
  }
}

var composer = function (_ref, onData) {
  var currentAccount = _ref.currentAccount;
  var userImage = getUserAvatar(currentAccount);
  var userName = displayName(currentAccount);
  var adminShortcuts = getAdminShortcutIcons();
  onData(null, {
    adminShortcuts: adminShortcuts,
    userImage: userImage,
    userName: userName
  });
};

var handlers = {
  handleChange: handleChange,
  userShortcuts: {
    provides: "userAccountDropdown",
    enabled: true
  }
};
registerComponent("MainDropdown", MainDropdown, [withCurrentAccount, _withProps(handlers), composeWithTracker(composer, false)]);
module.exportDefault(_compose(withCurrentAccount, _withProps(handlers), composeWithTracker(composer, false))(MainDropdown));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"messages.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/messages.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var LoginFormMessages;
module.watch(require("../components/loginFormMessages"), {
  "default": function (v) {
    LoginFormMessages = v;
  }
}, 3);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(LoginFormMessagesContainer, _Component);

    function LoginFormMessagesContainer() {
      var _this;

      _this = _Component.call(this) || this;

      _this.loginFormMessages = function () {
        var reasons = "";

        if (_this.props.messages.info) {
          _this.props.messages.info.forEach(function (info) {
            reasons = info.reason;
          });
        } else if (_this.props.messages.alerts) {
          _this.props.messages.alerts.forEach(function (alert) {
            reasons = alert.reason;
          });
        }

        return reasons;
      };

      _this.loginFormMessages = _this.loginFormMessages.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    var _proto = LoginFormMessagesContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, {
          loginFormMessages: this.loginFormMessages,
          formMessages: this.props.messages
        });
      }

      return render;
    }();

    return LoginFormMessagesContainer;
  }(Component), _class.propTypes = {
    messages: PropTypes.object
  }, _temp;
};

registerComponent("LoginFormMessages", LoginFormMessages, wrapComponent);
module.exportDefault(wrapComponent(LoginFormMessages));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"passwordOverlay.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/passwordOverlay.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 5);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 6);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var LoginFormValidation;
module.watch(require("../../../../../../lib/api"), {
  LoginFormValidation: function (v) {
    LoginFormValidation = v;
  }
}, 8);
var UpdatePasswordOverlay;
module.watch(require("../components/updatePasswordOverlay"), {
  "default": function (v) {
    UpdatePasswordOverlay = v;
  }
}, 9);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(UpdatePasswordOverlayContainer, _Component);

    function UpdatePasswordOverlayContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.handleFormSubmit = function (event, passwordValue) {
        event.preventDefault();

        _this.setState({
          isDisabled: true
        });

        var password = passwordValue.trim();
        var validatedPassword = LoginFormValidation.password(password);
        var errors = {};

        if (validatedPassword !== true) {
          errors.password = validatedPassword;
        }

        if (_isEmpty(errors) === false) {
          _this.setState({
            isDisabled: false,
            formMessages: {
              errors: errors
            }
          });

          return;
        }

        Accounts.resetPassword(_this.props.token, password, function (error) {
          if (error) {
            _this.setState({
              isDisabled: false,
              formMessages: {
                alerts: [error]
              }
            });
          } else {
            // Now that Meteor.users is verified, we should do the same with the Accounts collection
            Meteor.call("accounts/verifyAccount");

            _this.props.callback();

            _this.setState({
              isOpen: !_this.state.isOpen
            });

            var shopId = Reaction.getUserPreferences("reaction", "activeShopId");
            Reaction.setShopId(shopId);
          }
        });
      };

      _this.handleFormCancel = function (event) {
        event.preventDefault();

        _this.setState({
          isOpen: !_this.state.isOpen
        });
      };

      _this.formMessages = function () {
        return React.createElement(Components.LoginFormMessages, {
          messages: _this.state.formMessages
        });
      };

      _this.hasError = function (error) {
        // True here means the field is valid
        // We're checking if theres some other message to display
        if (error !== true && typeof error !== "undefined") {
          return true;
        }

        return false;
      };

      _this.state = {
        formMessages: props.formMessages,
        isOpen: props.isOpen,
        isDisabled: false
      };
      _this.handleFormSubmit = _this.handleFormSubmit.bind((0, _assertThisInitialized2.default)(_this));
      _this.handleFormCancel = _this.handleFormCancel.bind((0, _assertThisInitialized2.default)(_this));
      _this.formMessages = _this.formMessages.bind((0, _assertThisInitialized2.default)(_this));
      _this.hasError = _this.hasError.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    var _proto = UpdatePasswordOverlayContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, {
          uniqueId: this.props.uniqueId,
          loginFormMessages: this.formMessages,
          onError: this.hasError,
          messages: this.state.formMessages,
          onFormSubmit: this.handleFormSubmit,
          onCancel: this.handleFormCancel,
          isOpen: this.state.isOpen,
          isDisabled: this.state.isDisabled,
          type: this.props.type
        });
      }

      return render;
    }();

    return UpdatePasswordOverlayContainer;
  }(Component), _class.propTypes = {
    callback: PropTypes.func,
    formMessages: PropTypes.object,
    isOpen: PropTypes.bool,
    token: PropTypes.string,
    type: PropTypes.string,
    uniqueId: PropTypes.string
  }, _class.defaultProps = {
    formMessages: {},
    uniqueId: Random.id()
  }, _temp;
};

registerComponent("UpdatePasswordOverlay", UpdatePasswordOverlay, wrapComponent);
module.exportDefault(wrapComponent(UpdatePasswordOverlay));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"updateEmail.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/updateEmail.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Accounts;
module.watch(require("../../../../../../lib/collections"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 5);
var UpdateEmail;
module.watch(require("../components/updateEmail"), {
  "default": function (v) {
    UpdateEmail = v;
  }
}, 6);
var handlers = {
  handleUpdateEmail: function (_ref, callback) {
    var newEmail = _ref.newEmail,
        oldEmail = _ref.oldEmail;
    Meteor.call("accounts/validation/email", newEmail, false, function (result, error) {
      if (error.error) {
        Alerts.toast(i18next.t("accountsUI.error.invalidEmail", {
          err: error.reason
        }), "error");
        return callback();
      }

      Meteor.call("accounts/updateEmailAddress", newEmail, function (err) {
        if (err) {
          Alerts.toast(i18next.t("accountsUI.error.emailAlreadyExists", {
            err: err.message
          }), "error");
          return callback();
        } // Email changed, remove original email


        Meteor.call("accounts/removeEmailAddress", oldEmail, function () {
          Alerts.toast(i18next.t("accountsUI.info.emailUpdated"), "success");
          return callback();
        });
      });
    });
  }
};

var composer = function (props, onData) {
  var user = Accounts.findOne(Meteor.userId());
  var email = user.emails.length > 0 ? user.emails[0].address : "";
  onData(null, {
    email: email
  });
};

registerComponent("UpdateEmail", UpdateEmail, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(UpdateEmail));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userOrdersListContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/userOrdersListContainer.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Router;
module.watch(require("../../../../../../client/modules/router"), {
  Router: function (v) {
    Router = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var OrdersList;
module.watch(require("../components/ordersList"), {
  "default": function (v) {
    OrdersList = v;
  }
}, 4);

function composer(props, onData) {
  // Get user order from props
  var orders = props.orders;
  var allOrdersInfo = [];
  var isProfilePage = false;

  if (Router.getRouteName() === "account/profile") {
    isProfilePage = true;
  }

  if (orders.length > 0) {
    orders.map(function (order) {
      var imageSub = Meteor.subscribe("OrderImages", order._id);
      var orderSummary = {
        quantityTotal: order.getCount(),
        subtotal: order.getSubTotal(),
        shippingTotal: order.getShippingTotal(),
        tax: order.getTaxTotal(),
        discounts: order.getDiscounts(),
        total: order.getTotal(),
        shipping: order.shipping
      };

      if (imageSub.ready()) {
        var orderId = order._id;
        var orderInfo = {
          shops: order.getShopSummary(),
          order: order,
          orderId: orderId,
          orderSummary: orderSummary,
          paymentMethods: order.getUniquePaymentMethods()
        };
        allOrdersInfo.push(orderInfo);
      }

      return allOrdersInfo;
    });
    onData(null, {
      allOrdersInfo: allOrdersInfo,
      isProfilePage: isProfilePage
    });
  } else {
    onData(null, {
      orders: orders,
      isProfilePage: isProfilePage
    });
  }
}

registerComponent("OrdersList", OrdersList, [composeWithTracker(composer)]);
module.exportDefault(_compose(composeWithTracker(composer))(OrdersList));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"verifyAccount.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/containers/verifyAccount.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 0);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var VerifyAccount;
module.watch(require("../components/verifyAccount"), {
  "default": function (v) {
    VerifyAccount = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var verified = new ReactiveVar(null);
Accounts.onEmailVerificationLink(function (token, done) {
  Accounts.verifyEmail(token, function (error) {
    if (error) {
      verified.set({
        error: {
          reason: error.reason // no i18nKey for framework errors for now

        }
      });
    } else {
      verified.set(true);
    }

    Reaction.Router.go("account/verify");
    done();
  });
});

function wrapper(props, onData) {
  Meteor.setTimeout(function () {
    if (!verified.get()) {
      onData(null, {
        error: {
          defaultValue: "Verification timed out. Probably you've already been verified successfully.",
          i18nKey: "accountsUI.error.verifyTimeout"
        }
      });
      Meteor.setTimeout(function () {
        Reaction.Router.go("/");
      }, 2000);
    }
  }, 5000);
  var user = Meteor.user();

  if (user && verified.get() === true) {
    for (var _iterator = user.emails, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _email = _ref;

      if (_email.verified === true) {
        Meteor.call("accounts/verifyAccount", function (error, affectedDocs) {
          if (error) {
            onData(null, {
              error: {
                reason: error.reason // no i18nKey for framework errors for now

              }
            });
            return;
          }

          if (affectedDocs === 0) {
            onData(null, {
              error: {
                reason: "Couldn't verify email address.",
                i18nKey: "accountsUI.error.verifyEmailAddressNotFound"
              }
            });
            return;
          } // Success


          onData(null, {});
        });
      }
    }
  }

  onData(null, verified.get());
}

registerComponent("VerifyAccount", VerifyAccount, composeWithTracker(wrapper));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"helpers":{"accountsHelper.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/helpers/accountsHelper.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  "default": function () {
    return sortUsersIntoGroups;
  },
  sortGroups: function () {
    return sortGroups;
  },
  getInvitableGroups: function () {
    return getInvitableGroups;
  },
  getDefaultUserInviteGroup: function () {
    return getDefaultUserInviteGroup;
  },
  groupPermissions: function () {
    return groupPermissions;
  }
});

var _uniq;

module.watch(require("lodash/uniq"), {
  "default": function (v) {
    _uniq = v;
  }
}, 0);

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var Collections;
module.watch(require("../../../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 4);

function sortUsersIntoGroups(_ref) {
  var accounts = _ref.accounts,
      groups = _ref.groups;
  var newGroups = groups.map(function (group) {
    var matchingAccounts = accounts.filter(function (acc) {
      return acc.groups && acc.groups.indexOf(group._id) > -1;
    });
    group.users = _compact(matchingAccounts);
    return group;
  });
  return newGroups;
}

function sortGroups(groups) {
  return groups.sort(function (prev, next) {
    if (next.slug === "owner") {
      return 1;
    } // owner tops


    return next.permissions.length - prev.permissions.length;
  });
}

function getInvitableGroups(groups) {
  return groups.filter(function (grp) {
    return grp.slug !== "owner";
  }).filter(function (grp) {
    return Reaction.canInviteToGroup({
      group: grp
    });
  });
}

function getDefaultUserInviteGroup(groups) {
  var result;
  var user = Collections.Accounts.findOne({
    userId: Meteor.userId()
  });
  result = groups.find(function (grp) {
    return user && user.groups.indexOf(grp._id) > -1;
  });

  if (result && result.slug === "owner") {
    result = groups.find(function (grp) {
      return grp.slug === "shop manager";
    });
  }

  if (!result) {
    result = groups.find(function (firstGroup) {
      return firstGroup;
    });
  }

  return result;
}

function groupPermissions(packages) {
  return packages.reduce(function (registeredPackages, pkg) {
    var permissions = [];

    if (pkg.registry && pkg.enabled) {
      for (var _iterator = pkg.registry, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref2 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref2 = _i.value;
        }

        var _registryItem = _ref2;

        if (!_registryItem.route) {
          continue;
        } // Get all permissions, add them to an array


        if (_registryItem.permissions) {
          for (var _iterator2 = _registryItem.permissions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
            var _ref3;

            if (_isArray2) {
              if (_i2 >= _iterator2.length) break;
              _ref3 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done) break;
              _ref3 = _i2.value;
            }

            var _permission = _ref3;

            // check needed because of non-object perms in the permissions array (e.g "admin", "owner")
            if ((0, _typeof2.default)(_permission) === "object") {
              _permission.shopId = Reaction.getShopId();
              permissions.push(_permission);
            }
          }
        } // Also create an object map of those same permissions as above


        var permissionMap = getPermissionMap(permissions);

        if (!permissionMap[_registryItem.route]) {
          permissions.push({
            shopId: pkg.shopId,
            permission: _registryItem.name || pkg.name + "/" + _registryItem.template,
            icon: _registryItem.icon,
            // TODO: Rethink naming convention for permissions list
            label: _registryItem.label || _registryItem.route
          });
        }
      } // TODO review this, hardcoded WIP "reaction"


      var label = pkg.name.replace("reaction", "").replace(/(-.)/g, function (x) {
        return " " + x[1].toUpperCase();
      });
      var newObj = {
        shopId: pkg.shopId,
        icon: pkg.icon,
        name: pkg.name,
        label: label,
        permissions: _uniq(permissions)
      };
      registeredPackages.push(newObj);
    }

    return registeredPackages;
  }, []);
}

function getPermissionMap(permissions) {
  var permissionMap = {};
  permissions.forEach(function (_ref4) {
    var label = _ref4.label,
        permission = _ref4.permission;
    permissionMap[permission] = label;
  });
  return permissionMap;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/helpers/helpers.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  LoginFormSharedHelpers: function () {
    return LoginFormSharedHelpers;
  },
  getUserAvatar: function () {
    return getUserAvatar;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 2);
var Collections;
module.watch(require("../../../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 3);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 4);
var LoginFormSharedHelpers = {
  /**
   * @method messages
   * @memberof Accounts
   * @return {Object} Message object
   */
  messages: function () {
    return Template.instance().formMessages.get();
  },

  /**
   * @method hasError
   * @memberof Accounts
   * @summary Check to see if there are error or other messages to display
   * @param  {Object}  error Error
   * @return {String}       "has-error has-feedback" string
   */
  hasError: function (error) {
    // True here means the field is valid
    if (error !== true && typeof error !== "undefined") {
      return "has-error has-feedback";
    }
  },

  /**
   * @method capitalize
   * @memberof Accounts
   * @summary Client-side helper to capitalize word
   * @param  {String} str String to capitalize
   * @return {String}     First letter of first word capitalized
   */
  capitalize: function (str) {
    var finalString = str === null ? "" : String(str);
    return finalString.charAt(0).toUpperCase() + finalString.slice(1);
  }
};

function getUserAvatar(currentUser) {
  var user = currentUser || Accounts.user();
  var account = Collections.Accounts.findOne(user._id); // first we check picture exists. Picture has higher priority to display

  if (account && account.profile && account.profile.picture) {
    var picture = account.profile.picture;
    return React.createElement(Components.ReactionAvatar, {
      className: "accounts-avatar",
      size: 30,
      src: picture
    });
  }

  if (user.emails && user.emails.length === 1) {
    var email = user.emails[0].address;
    return React.createElement(Components.ReactionAvatar, {
      className: "accounts-avatar",
      email: email,
      size: 30
    });
  }

  return React.createElement(Components.ReactionAvatar, {
    className: "accounts-avatar",
    size: 30
  });
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/helpers/index.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./helpers"), {
  LoginFormSharedHelpers: function (v) {
    exports.LoginFormSharedHelpers = v;
  }
}, 0);
module.watch(require("./util"), {
  ServiceConfigHelper: function (v) {
    exports.ServiceConfigHelper = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"util.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/helpers/util.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  ServiceConfigHelper: function () {
    return ServiceConfigHelper;
  }
});

var _isFunction;

module.watch(require("lodash/isFunction"), {
  "default": function (v) {
    _isFunction = v;
  }
}, 0);

var _filter;

module.watch(require("lodash/filter"), {
  "default": function (v) {
    _filter = v;
  }
}, 1);

var _extend;

module.watch(require("lodash/extend"), {
  "default": function (v) {
    _extend = v;
  }
}, 2);

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 3);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 4);
var ServiceConfiguration;
module.watch(require("meteor/service-configuration"), {
  ServiceConfiguration: function (v) {
    ServiceConfiguration = v;
  }
}, 5);

function capitalize(str) {
  var finalString = str === null ? "" : String(str);
  return finalString.charAt(0).toUpperCase() + str.slice(1);
}

var providers = {
  Facebook: {},
  Google: {},
  Twitter: {},
  Instagram: {}
};

providers.Facebook.fields = function () {
  return [{
    property: "appId",
    label: "App ID"
  }, {
    property: "secret",
    label: "App Secret"
  }];
};

providers.Google.fields = function () {
  return [{
    property: "clientId",
    label: "Client ID"
  }, {
    property: "secret",
    label: "Client secret"
  }];
};

providers.Twitter.fields = function () {
  return [{
    property: "consumerKey",
    label: "API key"
  }, {
    property: "secret",
    label: "API secret"
  }];
};

providers.Instagram.fields = function () {
  return [{
    property: "clientId",
    label: "Client ID"
  }, {
    property: "secret",
    label: "Client secret"
  }];
};

var ServiceConfigHelper =
/*#__PURE__*/
function () {
  function ServiceConfigHelper() {}

  var _proto = ServiceConfigHelper.prototype;

  _proto.availableServices = function () {
    function availableServices() {
      var services = Package["accounts-oauth"] ? Accounts.oauth.serviceNames() : [];
      services.sort();
      return services;
    }

    return availableServices;
  }();

  _proto.capitalizedServiceName = function () {
    function capitalizedServiceName(name) {
      if (name === "meteor-developer") {
        return "MeteorDeveloperAccount";
      }

      return capitalize(name);
    }

    return capitalizedServiceName;
  }();

  _proto.configFieldsForService = function () {
    function configFieldsForService(name) {
      var capitalizedName = this.capitalizedServiceName(name);
      var template = providers[capitalizedName];

      if (template) {
        var fields = template.fields();
        return _map(fields, function (field) {
          if (!field.type) {
            field.type = field.property === "secret" ? "password" : "text";
          }

          return _extend(field, {
            type: field.type
          });
        });
      }

      return [];
    }

    return configFieldsForService;
  }();

  _proto.services = function () {
    function services(extendEach) {
      var _this = this;

      var availableServices = this.availableServices();
      var configurations = ServiceConfiguration.configurations.find().fetch();
      return _map(availableServices, function (name) {
        var matchingConfigurations = _filter(configurations, {
          service: name
        });

        var service = {
          name: name,
          label: _this.capitalizedServiceName(name),
          fields: _this.configFieldsForService(name)
        };

        if (matchingConfigurations.length) {
          service = _extend(service, matchingConfigurations[0]);
        }

        if (_isFunction(extendEach)) {
          service = _extend(service, extendEach(service) || {});
        }

        return service;
      });
    }

    return services;
  }();
  /**
   * @method addProvider
   * @memberof Accounts
   * @summary Add an OAuth provider, with field definitions required to render the form
   * which collects and stores configuation settings for the provider.
   * @example ServiceConfigHelper.addProvider("Untappd", [{ property: "clientId", label: "Client ID" }]), { property:
   *  "secret", label: "Client Secret" }]);
   * @see https://github.com/reactioncommerce/reaction/pull/3231
   * @param {string} provider Display Name of the provider
   * @param {object[]} fields Array of plain old JavaScript objects with the keys `property`
   * ("apiKey", for example. `apiKey` should correspond to your OAuth provider's
   * implementation) and `label` ("API Key", for example)
   */


  ServiceConfigHelper.addProvider = function () {
    function addProvider(provider, fields) {
      providers[provider] = {
        fields: function () {
          return fields;
        }
      };
    }

    return addProvider;
  }();

  return ServiceConfigHelper;
}();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/accounts/client/index.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./components/accountsDashboard"), {
  "default": function (v) {
    exports.AccountsDashboard = v;
  }
}, 0);
module.watch(require("./components/addressBookForm"), {
  "default": function (v) {
    exports.AddressBookForm = v;
  }
}, 1);
module.watch(require("./components/addressBookReview"), {
  "default": function (v) {
    exports.AddressBookReview = v;
  }
}, 2);
module.watch(require("./components/addressBookGrid"), {
  "default": function (v) {
    exports.AddressBookGrid = v;
  }
}, 3);
module.watch(require("./components/addressBook.js"), {
  "default": function (v) {
    exports.AddressBook = v;
  }
}, 4);
module.watch(require("./components/adminInviteForm"), {
  "default": function (v) {
    exports.AdminInviteForm = v;
  }
}, 5);
module.watch(require("./components/editGroup"), {
  "default": function (v) {
    exports.EditGroup = v;
  }
}, 6);
module.watch(require("./components/forgotPassword"), {
  "default": function (v) {
    exports.ForgotPassword = v;
  }
}, 7);
module.watch(require("./components/groupForm"), {
  "default": function (v) {
    exports.GroupForm = v;
  }
}, 8);
module.watch(require("./components/groupHeader"), {
  "default": function (v) {
    exports.GroupHeader = v;
  }
}, 9);
module.watch(require("./components/groupsTable"), {
  "default": function (v) {
    exports.GroupsTable = v;
  }
}, 10);
module.watch(require("./components/groupsTableButton"), {
  "default": function (v) {
    exports.GroupsTableButton = v;
  }
}, 11);
module.watch(require("./components/groupsTableCell"), {
  "default": function (v) {
    exports.GroupsTableCell = v;
  }
}, 12);
module.watch(require("./components/login"), {
  "default": function (v) {
    exports.Login = v;
  }
}, 13);
module.watch(require("./components/loginButtons"), {
  "default": function (v) {
    exports.LoginButtons = v;
  }
}, 14);
module.watch(require("./components/loginFormMessages"), {
  "default": function (v) {
    exports.LoginFormMessages = v;
  }
}, 15);
module.watch(require("./components/mainDropdown"), {
  "default": function (v) {
    exports.MainDropdown = v;
  }
}, 16);
module.watch(require("./components/manageGroups"), {
  "default": function (v) {
    exports.ManageGroups = v;
  }
}, 17);
module.watch(require("./components/permissionsList"), {
  "default": function (v) {
    exports.PermissionsList = v;
  }
}, 18);
module.watch(require("./components/signIn"), {
  "default": function (v) {
    exports.SignIn = v;
  }
}, 19);
module.watch(require("./components/signUp"), {
  "default": function (v) {
    exports.SignUp = v;
  }
}, 20);
module.watch(require("./containers/updateEmail"), {
  "default": function (v) {
    exports.UpdateEmail = v;
  }
}, 21);
module.watch(require("./components/updatePasswordOverlay"), {
  "default": function (v) {
    exports.UpdatePasswordOverlay = v;
  }
}, 22);
module.watch(require("./components/loginInline"), {
  "default": function (v) {
    exports.LoginInline = v;
  }
}, 23);
module.watch(require("./containers/accountsDashboardContainer"), {
  "default": function (v) {
    exports.AccountsDashboardContainer = v;
  }
}, 24);
module.watch(require("./containers/addressBookContainer"), {
  "default": function (v) {
    exports.AddressBookContainer = v;
  }
}, 25);
module.watch(require("./containers/userOrdersListContainer"), {
  "default": function (v) {
    exports.UserOrdersListContainer = v;
  }
}, 26);
module.watch(require("./containers/auth"), {
  "default": function (v) {
    exports.AuthContainer = v;
  }
}, 27);
module.watch(require("./containers/editGroupContainer"), {
  "default": function (v) {
    exports.EditGroupContainer = v;
  }
}, 28);
module.watch(require("./containers/forgotPassword"), {
  "default": function (v) {
    exports.ForgotPasswordContainer = v;
  }
}, 29);
module.watch(require("./containers/mainDropdown"), {
  "default": function (v) {
    exports.MainDropdownContainer = v;
  }
}, 30);
module.watch(require("./containers/messages"), {
  "default": function (v) {
    exports.MessagesContainer = v;
  }
}, 31);
module.watch(require("./containers/passwordOverlay"), {
  "default": function (v) {
    exports.UpdatePasswordOverlayContainer = v;
  }
}, 32);
module.watch(require("./containers/loginInline"), {
  "default": function (v) {
    exports.LoginInlineContainer = v;
  }
}, 33);
module.watch(require("./containers/verifyAccount"), {
  "default": function (v) {
    exports.VerifyAccount = v;
  }
}, 34);
module.watch(require("./templates/accounts.html"));
module.watch(require("./templates/dashboard/dashboard.html"));
module.watch(require("./templates/dashboard/dashboard.js"));
module.watch(require("./templates/dropdown/helpers"));
module.watch(require("./templates/inline/inline.html"));
module.watch(require("./templates/inline/inline.js"));
module.watch(require("./templates/login/loginForm.html"));
module.watch(require("./templates/login/loginForm.js"));
module.watch(require("./templates/members/member.html"));
module.watch(require("./templates/members/member.js"));
module.watch(require("./templates/profile/profile.html"));
module.watch(require("./templates/profile/profile.js"));
module.watch(require("./templates/profile/userOrdersList.html"));
module.watch(require("./templates/profile/userOrdersList.js"));
module.watch(require("./templates/updatePassword/updatePassword.html"));
module.watch(require("./templates/updatePassword/updatePassword.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"connectors":{"client":{"templates":{"settings":{"connectors.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/connectors/client/templates/settings/connectors.html                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.connectors.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.connectors.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/connectors/client/templates/settings/template.connectors.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("connectorSettings");
Template["connectorSettings"] = new Template("Template.connectorSettings", (function() {
  var view = this;
  return Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "connectorSettings"
    }));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n        ", HTML.DIV({
      class: "panel-title"
    }, "\n          ", HTML.I({
      class: function() {
        return [ "fa fa-", Spacebars.mustache(view.lookup("name")) ];
      }
    }), "\n          ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n\n        "), "\n        ", HTML.DIV({
      class: "panel-controls"
    }, "\n          ", HTML.INPUT(HTML.Attrs({
      class: "checkbox-switch connector-settings",
      type: "checkbox",
      name: "enabled",
      "data-id": function() {
        return Spacebars.mustache(view.lookup("packageId"));
      },
      "data-key": function() {
        return Spacebars.mustache(view.lookup("settingsKey"));
      }
    }, function() {
      return Spacebars.attrMustache(view.lookup("checked"), view.lookup("enabled"));
    })), "\n        "), "\n      "), "\n      ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), view.lookup("enabled")) ];
      }
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n      "), "\n    "), "\n    " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"connectors.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/connectors/client/templates/settings/connectors.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
Template.connectorSettings.helpers({
  checked: function (enabled) {
    if (enabled === true) {
      return "checked";
    }

    return "";
  },
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  }
}); // toggle connector methods visibility
// also toggles connector method settings

Template.connectorSettings.events({
  /**
   * connectorSettings settings update enabled status for connector service on change
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "change input.checkbox-switch.connector-settings[name=enabled]": function (event) {
    event.preventDefault();
    var settingsKey = event.target.getAttribute("data-key");
    var packageId = event.target.getAttribute("data-id");
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }]; // save connector registry updates

    if (packageId) {
      // update package registry
      Meteor.call("registry/update", packageId, settingsKey, fields); // also update connector provider status

      Meteor.call("connectors/connection/toggle", packageId, settingsKey);
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/connectors/client/templates/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/connectors.html"));
module.watch(require("./settings/connectors.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/connectors/client/index.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"orders":{"client":{"templates":{"list":{"pdf.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/list/pdf.html                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.pdf.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.pdf.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/list/template.pdf.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("completedPDFLayout");
Template["completedPDFLayout"] = new Template("Template.completedPDFLayout", (function() {
  var view = this;
  return [ HTML.HEAD("\n    ", HTML.STYLE({
    type: "text/css"
  }, "\n\n      #non-printable {\n        padding: 20px 0;\n      }\n\n      @media print {\n        #non-printable {\n          display: none;\n        }\n\n        @page {\n          size: 330mm 427mm;\n          margin: 14mm;\n        }\n\n        body {\n          margin: 0;\n          padding 0 !important;\n          min-width: 768px;\n        }\n\n        .container {\n          width: auto;\n          min-width: 750px;\n        }\n      }\n    "), "\n"), "\n", HTML.BODY("\n\n  ", HTML.Raw('<div id="non-printable" class="container">\n    <div class="col-md-6 col-md-offset-3">\n      <a href="javascript:window.print()" style="text-align: center;"><button type="button" class="btn btn-info btn-lg btn-block">Print</button></a>\n    </div>\n  </div>'), "\n\n\n  ", HTML.HEADER("\n    ", HTML.DIV({
    class: "container"
  }, "\n      ", HTML.DIV({
    class: "row"
  }, "\n        ", HTML.DIV({
    class: "col-xs-3 col-sm-5 col-md-7 col-lg-8"
  }, HTML.H1(HTML.A(Blaze.View("lookup:siteName", function() {
    return Spacebars.mustache(view.lookup("siteName"));
  })))), "\n        ", HTML.Raw('<div class="col-md-4 col-lg-4 col-xs-4 col-xs-offset-1 col-md-offset-0" style="text-align: left;"><h2>Order Invoice</h2></div>'), "\n      "), "\n      ", Blaze.If(function() {
    return Spacebars.call(view.lookup("ready"));
  }, function() {
    return [ "\n      ", HTML.DIV({
      class: "row"
    }, "\n        ", HTML.DIV({
      style: "font-family:monospace; text-align: left;",
      class: "col-xs-4 col-sm-3 col-md-3 col-lg-3"
    }, "\n          ", HTML.H3("DATE:", Blaze.View("lookup:dateFormat", function() {
      return Spacebars.mustache(view.lookup("dateFormat"), Spacebars.dot(view.lookup("order"), "createdAt"), Spacebars.kw({
        format: "MM/D/YY"
      }));
    })), "\n        "), "\n        ", HTML.DIV({
      style: "font-family:monospace;",
      class: "col-xs-6 col-xs-offset-3 col-sm-4 col-md-3 col-lg-3 col-md-offset-5"
    }, "ORDER:", Blaze.View("lookup:order._id", function() {
      return Spacebars.mustache(Spacebars.dot(view.lookup("order"), "_id"));
    })), "\n      "), "\n      " ];
  }), "\n    "), "\n  "), "\n  ", HTML.DIV({
    class: "container"
  }, "\n\n      ", HTML.DIV({
    class: "row"
  }, "\n        ", HTML.DIV({
    class: "col-md-6 col-xs-6"
  }, "\n          ", HTML.Raw('<h2 style="margin-top:1em">Ship To</h2>'), "\n          ", Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(Spacebars.dot(view.lookup("order"), "shipping")),
      _variable: "shipment"
    };
  }, function() {
    return [ "\n            ", Spacebars.With(function() {
      return Spacebars.call(Spacebars.dot(view.lookup("shipment"), "address"));
    }, function() {
      return [ "\n              ", HTML.STRONG(HTML.DIV(Blaze.View("lookup:fullName", function() {
        return Spacebars.mustache(view.lookup("fullName"));
      }))), "\n              ", HTML.DIV(Blaze.View("lookup:address1", function() {
        return Spacebars.mustache(view.lookup("address1"));
      })), "\n              ", HTML.DIV(Blaze.If(function() {
        return Spacebars.call(view.lookup("address2"));
      }, function() {
        return [ Blaze.View("lookup:address2", function() {
          return Spacebars.mustache(view.lookup("address2"));
        }), "," ];
      })), "\n              ", HTML.DIV(Blaze.View("lookup:city", function() {
        return Spacebars.mustache(view.lookup("city"));
      }), ", ", Blaze.View("lookup:region", function() {
        return Spacebars.mustache(view.lookup("region"));
      }), " ", Blaze.View("lookup:postal", function() {
        return Spacebars.mustache(view.lookup("postal"));
      }), " ", Blaze.View("lookup:country", function() {
        return Spacebars.mustache(view.lookup("country"));
      })), "\n              ", HTML.DIV(Blaze.View("lookup:phone", function() {
        return Spacebars.mustache(view.lookup("phone"));
      })), "\n            " ];
    }), "\n          " ];
  }), "\n        "), "\n        ", HTML.DIV({
    class: "col-xs-6 col-sm-6 col-md-6 col-lg-6"
  }, "\n\n          ", HTML.Raw('<h2 style="margin-top:1em">Bill To</h2>'), "\n          ", Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(Spacebars.dot(view.lookup("order"), "billing")),
      _variable: "payment"
    };
  }, function() {
    return [ "\n            ", Spacebars.With(function() {
      return Spacebars.call(Spacebars.dot(view.lookup("payment"), "address"));
    }, function() {
      return [ "\n              ", HTML.STRONG(HTML.DIV(Blaze.View("lookup:fullName", function() {
        return Spacebars.mustache(view.lookup("fullName"));
      }))), "\n              ", HTML.DIV(Blaze.View("lookup:address1", function() {
        return Spacebars.mustache(view.lookup("address1"));
      })), "\n              ", HTML.DIV(Blaze.If(function() {
        return Spacebars.call(view.lookup("address2"));
      }, function() {
        return [ Blaze.View("lookup:address2", function() {
          return Spacebars.mustache(view.lookup("address2"));
        }), "," ];
      })), "\n              ", HTML.DIV(Blaze.View("lookup:city", function() {
        return Spacebars.mustache(view.lookup("city"));
      }), ", ", Blaze.View("lookup:region", function() {
        return Spacebars.mustache(view.lookup("region"));
      }), " ", Blaze.View("lookup:postal", function() {
        return Spacebars.mustache(view.lookup("postal"));
      }), " ", Blaze.View("lookup:country", function() {
        return Spacebars.mustache(view.lookup("country"));
      })), "\n              ", HTML.DIV(Blaze.View("lookup:phone", function() {
        return Spacebars.mustache(view.lookup("phone"));
      })), "\n            " ];
    }), "\n          " ];
  }), "\n        "), "\n      "), "\n\n    ", HTML.Raw("<br>"), "\n    ", HTML.Raw("<h3>Payment</h3>"), "\n    ", Spacebars.With(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("billing"), "paymentMethod"));
  }, function() {
    return [ "\n      ", HTML.DIV({
      style: "margin-top:1em"
    }, HTML.H4(Blaze.View("lookup:processor", function() {
      return Spacebars.mustache(view.lookup("processor"));
    }))), "\n      ", HTML.DIV(Blaze.View("lookup:storedCard", function() {
      return Spacebars.mustache(view.lookup("storedCard"));
    })), "\n      ", HTML.DIV("Ref: ", Blaze.View("lookup:transactionId", function() {
      return Spacebars.mustache(view.lookup("transactionId"));
    })), "\n    " ];
  }), "\n\n    ", HTML.Raw('<h2 style="margin-top:2em">ITEMS</h2>'), "\n    ", HTML.TABLE({
    class: "table table-bordered"
  }, "\n      ", HTML.TR("\n        ", HTML.TH("Quantity"), "\n        ", HTML.TH("Title"), "\n        ", HTML.TH("Price"), "\n      "), "\n      ", Blaze.Each(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("order"), "items"));
  }, function() {
    return [ "\n        ", HTML.TR("\n          ", HTML.TD(Blaze.View("lookup:quantity", function() {
      return Spacebars.mustache(view.lookup("quantity"));
    })), "\n          ", HTML.TD("\n            ", Blaze.View("lookup:title", function() {
      return Spacebars.mustache(view.lookup("title"));
    }), "\n            ", HTML.BR(), "\n            ", HTML.SMALL(Blaze.View("lookup:variants.title", function() {
      return Spacebars.mustache(Spacebars.dot(view.lookup("variants"), "title"));
    })), "\n          "), "\n          ", HTML.TD(Blaze.View("lookup:formatPrice", function() {
      return Spacebars.mustache(view.lookup("formatPrice"), Spacebars.dot(view.lookup("variants"), "price"));
    })), "\n        "), "\n      " ];
  }), "\n    "), "\n\n    ", HTML.Raw('<h2 style="margin-top:1em">SUMMARY</h2>'), "\n    ", Spacebars.With(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("billing"), "invoice"));
  }, function() {
    return [ "\n      ", HTML.DIV({
      class: "container"
    }, "\n        ", HTML.DIV({
      class: "row"
    }, "\n          ", HTML.DIV({
      class: "col-md-3"
    }, HTML.SPAN({
      "data-i18n": "cartSubTotals.subtotal"
    }, "Sub total"), ":"), "\n          ", HTML.DIV({
      class: "col-md-2 col-md-offset-1"
    }, Blaze.View("lookup:formatPrice", function() {
      return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("subtotal"));
    })), "\n        "), "\n        ", HTML.DIV({
      class: "row"
    }, "\n          ", HTML.DIV({
      class: "col-md-3 col-xs-3"
    }, HTML.SPAN({
      "data-i18n": "cartSubTotals.shipping"
    }, "Shipping"), ":"), "\n          ", HTML.DIV({
      class: "col-md-2 col-xs-2 col-md-offset-1 col-xs-offset-1"
    }, Blaze.View("lookup:formatPrice", function() {
      return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("shipping"));
    })), "\n        "), "\n        ", HTML.DIV({
      class: "row"
    }, "\n          ", HTML.DIV({
      class: "col-md-3 col-xs-3"
    }, HTML.SPAN({
      "data-i18n": "cartSubTotals.tax"
    }, "Tax"), ":"), "\n          ", HTML.DIV({
      class: "col-md-2 col-xs-2 col-md-offset-1 col-xs-offset-1"
    }, Blaze.View("lookup:formatPrice", function() {
      return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("taxes"));
    })), "\n        "), "\n        ", HTML.DIV({
      class: "row"
    }, "\n          ", HTML.DIV({
      class: "col-md-3 col-xs-3"
    }, HTML.SPAN({
      "data-i18n": "cartSubTotals.discount"
    }, "Discount"), ":"), "\n          ", HTML.DIV({
      class: "col-md-2 col-xs-2 col-md-offset-1 col-xs-offset-1"
    }, Blaze.View("lookup:formatPrice", function() {
      return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("discounts"));
    })), "\n        "), "\n        ", HTML.DIV({
      class: "row"
    }, "\n          ", HTML.DIV({
      class: "col-md-3 col-xs-3"
    }, HTML.SPAN({
      "data-i18n": "cartSubTotals.total"
    }, "Total"), ":"), "\n          ", HTML.DIV({
      class: "col-md-2 col-xs-2 col-md-offset-1 col-xs-offset-1"
    }, HTML.STRONG(Blaze.View("lookup:formatPrice", function() {
      return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("total"));
    }))), "\n        "), "\n      "), "\n    " ];
  }), "\n    ", HTML.Raw('<div style="margin-top: 1em" data-i18n="cartCompleted.summaryMessage">Thank you for your order.</div>'), "\n  "), "\n\n") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"summary.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/list/summary.html                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.summary.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.summary.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/list/template.summary.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("ordersListSummary");
Template["ordersListSummary"] = new Template("Template.ordersListSummary", (function() {
  var view = this;
  return HTML.DIV({
    class: "completed-order-summary"
  }, "\n    ", HTML.DIV({
    class: "container-fluid"
  }, "\n      ", HTML.DIV({
    class: "row"
  }, "\n        ", Blaze.Each(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("order"), "billing"));
  }, function() {
    return [ "\n          ", Spacebars.With(function() {
      return Spacebars.call(view.lookup("invoice"));
    }, function() {
      return [ "\n            ", HTML.DIV({
        class: "cart-items"
      }, "\n              ", HTML.DIV({
        class: "cart-totals"
      }, "\n                ", HTML.DIV({
        class: "row"
      }, "\n                  ", HTML.DIV({
        class: "col-xs-7 text-right"
      }, "\n                    ", HTML.SPAN({
        "data-i18n": "cartSubTotals.subtotal"
      }, "Sub total"), "\n                  "), "\n                  ", HTML.DIV({
        class: "col-xs-4 col-xs-offset-1",
        style: "white-space: nowrap"
      }, "\n                    ", Blaze.View("lookup:formatPrice", function() {
        return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("subtotal"));
      }), "\n                  "), "\n                "), "\n\n                ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("condition"), view.lookup("shipping"), "gt", 0);
      }, function() {
        return [ "\n                ", HTML.DIV({
          class: "row"
        }, "\n                  ", HTML.DIV({
          class: "col-xs-7 text-right"
        }, "\n                    ", HTML.SPAN({
          "data-i18n": "cartSubTotals.shipping"
        }, "Shipping"), "\n                  "), "\n                  ", HTML.DIV({
          class: "col-xs-4 col-xs-offset-1",
          style: "white-space: nowrap"
        }, "\n                    ", Blaze.View("lookup:formatPrice", function() {
          return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("shipping"));
        }), "\n                  "), "\n                "), "\n                " ];
      }), "\n\n                ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("condition"), view.lookup("taxes"), "gt", 0);
      }, function() {
        return [ "\n                ", HTML.DIV({
          class: "row"
        }, "\n                  ", HTML.DIV({
          class: "col-xs-7 text-right"
        }, "\n                    ", HTML.SPAN({
          "data-i18n": "cartSubTotals.tax"
        }, "Tax"), "\n                  "), "\n                  ", HTML.DIV({
          class: "col-xs-4 col-xs-offset-1",
          style: "white-space: nowrap"
        }, "\n                    ", Blaze.View("lookup:formatPrice", function() {
          return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("taxes"));
        }), "\n                  "), "\n                "), "\n                " ];
      }), "\n\n                ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("condition"), view.lookup("discounts"), "gt", 0);
      }, function() {
        return [ "\n                ", HTML.DIV({
          class: "row"
        }, "\n                  ", HTML.DIV({
          class: "col-xs-7 text-right"
        }, "\n                    ", HTML.SPAN({
          "data-i18n": "cartSubTotals.discount"
        }, "Discount"), "\n                  "), "\n                  ", HTML.DIV({
          class: "col-xs-4 col-xs-offset-1",
          style: "white-space: nowrap"
        }, "\n                    ", Blaze.View("lookup:formatPrice", function() {
          return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("discounts"));
        }), "\n                  "), "\n                "), "\n                " ];
      }), "\n\n                ", HTML.DIV({
        class: "row"
      }, "\n                  ", HTML.DIV({
        class: "col-xs-7 text-right"
      }, "\n                    ", HTML.SPAN({
        "data-i18n": "cartSubTotals.total"
      }, "Total"), "\n                  "), "\n                  ", HTML.DIV({
        class: "col-xs-4 col-xs-offset-1",
        style: "white-space: nowrap"
      }, "\n                    ", Blaze.View("lookup:formatPrice", function() {
        return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("total"));
      }), "\n                  "), "\n                "), "\n              "), "\n            "), "\n          " ];
    }), "\n        " ];
  }), "\n      "), "\n    "), "\n\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pdf.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/list/pdf.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction, Router;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Router: function (v) {
    Router = v;
  }
}, 1);
var Orders;
module.watch(require("../../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 4);

/**
* completedPDFLayout
* inheritsHelpersFrom dashboardOrdersList
* Uses the browser print function.
*/
Template.completedPDFLayout.onCreated(function () {
  function _callee() {
    var _this = this;

    var currentRoute;
    return _regenerator.default.async(function () {
      function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              this.state = new ReactiveDict();
              this.state.setDefault({
                order: {},
                ready: false
              });
              this.readyVar = new ReactiveVar(false);
              _context.next = 5;
              return _regenerator.default.awrap(Promise.resolve().then(function () {
                return require("moment");
              }));

            case 5:
              this.moment = _context.sent;
              this.readyVar.set(true);
              currentRoute = Router.current();
              this.autorun(function () {
                _this.subscribe("Orders");

                var order = Orders.findOne({
                  _id: currentRoute.params.id
                });

                _this.state.set({
                  order: order
                });
              });

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }

      return _callee$;
    }(), null, this);
  }

  return _callee;
}());
Template.completedPDFLayout.helpers({
  order: function () {
    return Template.instance().state.get("order");
  },
  billing: function () {
    var order = Template.instance().state.get("order");

    if (order && order.billing && order.billing.length) {
      return order.billing[0];
    }

    return null;
  },
  dateFormat: function (context, block) {
    var _Template$instance = Template.instance(),
        moment = _Template$instance.moment;

    moment.locale(Reaction.Locale.get().language);
    var f = block.hash.format || "MMM DD, YYYY hh:mm:ss A";
    return moment(context).format(f);
  },
  ready: function () {
    return Template.instance().readyVar.get();
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"summary.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/list/summary.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);

/**
 * ordersListSummary helpers
 *
 * @returns paymentInvoice
 */
Template.ordersListSummary.helpers({
  invoice: function () {
    return this.invoice;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"workflow":{"shippingInvoice.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/shippingInvoice.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shippingInvoice.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shippingInvoice.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/template.shippingInvoice.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("coreOrderShippingInvoice");
Template["coreOrderShippingInvoice"] = new Template("Template.coreOrderShippingInvoice", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("InvoiceContainer")),
      isFetching: Spacebars.call(view.lookup("isFetching")),
      order: Spacebars.call(view.lookup("order")),
      currency: Spacebars.call(view.lookup("currency")),
      refunds: Spacebars.call(view.lookup("refunds")),
      currentData: Spacebars.call(view.lookup("currentData"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippingSummary.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/shippingSummary.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shippingSummary.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shippingSummary.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/template.shippingSummary.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("coreOrderShippingSummary");
Template["coreOrderShippingSummary"] = new Template("Template.coreOrderShippingSummary", (function() {
  var view = this;
  return HTML.DIV({
    class: "core-order-created"
  }, "\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("orderSummary"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippingTracking.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/shippingTracking.html                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shippingTracking.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shippingTracking.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/template.shippingTracking.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("coreOrderShippingTracking");
Template["coreOrderShippingTracking"] = new Template("Template.coreOrderShippingTracking", (function() {
  var view = this;
  return [ HTML.Raw("<!-- Temporary header until React panel is done -->\n   "), HTML.DIV({
    "aria-labelledby": function() {
      return Spacebars.mustache(view.lookup("template"));
    },
    class: "panel panel-default",
    id: function() {
      return [ Spacebars.mustache(view.lookup("template")), "-panel" ];
    },
    role: "tabpanel"
  }, "\n     ", HTML.DIV({
    class: "panel-heading"
  }, "\n       ", HTML.H3({
    class: "panel-title",
    "data-i18n": function() {
      return [ "orderWorkflow.", Spacebars.mustache(view.lookup("toCamelCase"), view.lookup("label")) ];
    }
  }, HTML.Raw("<strong>Shipping</strong>")), "\n     "), "\n     ", HTML.DIV({
    class: "panel-body"
  }, "\n\n      ", Blaze.If(function() {
    return Spacebars.call(view.lookup("isNotCanceled"));
  }, function() {
    return [ "\n        ", Blaze.If(function() {
      return Spacebars.call(view.lookup("printableLabels"));
    }, function() {
      return [ "\n        ", HTML.DIV("\n          ", HTML.DIV(HTML.STRONG({
        "data-i18n": "orderShipping.printLabels"
      }, "Labels")), "\n          ", Blaze.If(function() {
        return Spacebars.call(Spacebars.dot(view.lookup("printableLabels"), "shippingLabelUrl"));
      }, function() {
        return [ "\n            ", HTML.A({
          class: "rui btn btn-cta",
          href: function() {
            return Spacebars.mustache(Spacebars.dot(view.lookup("printableLabels"), "shippingLabelUrl"));
          },
          target: "_blank"
        }, "\n              ", HTML.SPAN({
          "data-i18n": "orderShipping.printShippingLabel"
        }, "Print Shipping"), "\n            "), "\n          " ];
      }), "\n          ", Blaze.If(function() {
        return Spacebars.call(Spacebars.dot(view.lookup("printableLabels"), "customsLabelUrl"));
      }, function() {
        return [ "\n            ", HTML.A({
          class: "rui btn btn-cta",
          href: function() {
            return Spacebars.mustache(Spacebars.dot(view.lookup("printableLabels"), "customsLabelUrl"));
          },
          target: "_blank"
        }, "\n              ", HTML.SPAN({
          "data-i18n": "orderShipping.printCustomsLabel"
        }, "Print Customs"), "\n            "), "\n          " ];
      }), "\n        "), "\n        " ];
    }, function() {
      return [ "\n           ", Blaze.If(function() {
        return Spacebars.call(view.lookup("editTracking"));
      }, function() {
        return [ "\n             ", HTML.FORM({
          class: "form-inline",
          name: "addTrackingForm"
        }, "\n               ", HTML.DIV("\n                 ", Blaze.View("lookup:i18n", function() {
          return Spacebars.mustache(view.lookup("i18n"), "orderShipping.tracking", "Tracking");
        }), " ", HTML.LABEL(Blaze.View("lookup:tracking", function() {
          return Spacebars.mustache(view.lookup("tracking"));
        })), "\n                 ", HTML.INPUT({
          class: "form-control",
          type: "text",
          name: "trackingNumber",
          value: function() {
            return Spacebars.mustache(Spacebars.dot(view.lookup("shipment"), "tracking"));
          }
        }), "\n                 ", HTML.BUTTON({
          class: "rui btn btn-default",
          type: "submit",
          "data-i18n": "app.save"
        }, "Save"), "\n               "), "\n             "), "\n             " ];
      }, function() {
        return [ "\n              ", Blaze.If(function() {
          return Spacebars.call(Spacebars.dot(view.lookup("shipment"), "tracking"));
        }, function() {
          return [ "\n                ", HTML.BUTTON({
            class: "rui btn btn-link",
            "data-event-action": "editTracking"
          }, Blaze.View("lookup:shipment.tracking", function() {
            return Spacebars.mustache(Spacebars.dot(view.lookup("shipment"), "tracking"));
          })), "\n              " ];
        }, function() {
          return [ "\n                ", HTML.BUTTON({
            class: "rui btn btn-cta",
            "data-event-action": "refresh-shipping",
            "data-i18n": "orderShipping.generateTracking"
          }, "Generate Label and Tracking"), "\n                ", HTML.I({
            class: "fa fa-spinner fa-spin hidden",
            id: "btn-processing"
          }), "\n              " ];
        }), "\n            " ];
      }), "\n        " ];
    }), "\n\n        ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isCompleted"));
    }, function() {
      return [ "\n        ", HTML.DIV("\n          ", HTML.HR(), "\n          ", HTML.DIV({
        class: "text-right"
      }, "\n            ", HTML.I({
        class: "fa fa-check-circle text-success"
      }), "\n            ", HTML.SPAN({
        class: "strong",
        "data-i18n": "orderShipping.itemsHaveBeenShipped"
      }, "All items have been shipped"), "\n          "), "\n          ", HTML.HR(), "\n          ", HTML.P("\n            ", HTML.BUTTON({
        class: "rui btn btn-info pull-right",
        "data-event-action": "resendNotification",
        "data-i18n": "orderShipping.resendNotification"
      }, "Resend Shipment Notification"), "\n          "), "\n        "), "\n        " ];
    }, function() {
      return [ "\n        ", HTML.DIV("\n          ", HTML.HR(), "\n          ", Blaze.If(function() {
        return Spacebars.call(view.lookup("shipmentReady"));
      }, function() {
        return [ "\n            ", HTML.P({
          "data-i18n": "orderShipping.shippingNotifyCustomer"
        }, "Notify the customer that their items will be shipping soon."), "\n            ", HTML.BUTTON({
          class: "btn btn-success btn-block",
          "data-event-action": "shipmentShipped",
          "data-i18n": "orderShipping.shipped"
        }, "Shipped"), "\n          " ];
      }, function() {
        return [ "\n            ", HTML.BUTTON({
          class: "rui btn btn-default btn-block",
          type: "button",
          "data-i18n": "orderShipping.shipmentPacked",
          "data-event-action": "shipmentPacked"
        }, "All Items Packed, Ready to Ship"), "\n          " ];
      }), "\n        "), "\n        " ];
    }), "\n      " ];
  }, function() {
    return [ "\n        ", HTML.SPAN({
      "data-i18n": "orderShipping.noShippingInfo"
    }, "No shipping information available"), "\n      " ];
  }), "\n    "), "\n  ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"workflow.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/workflow.html                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.workflow.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.workflow.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/template.workflow.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("coreOrderWorkflow");
Template["coreOrderWorkflow"] = new Template("Template.coreOrderWorkflow", (function() {
  var view = this;
  return HTML.DIV({
    "aria-multiselectable": "true",
    class: "panel-group",
    id: "core-order-workflow-accordion",
    role: "tablist"
  }, "\n    ", Spacebars.With(function() {
    return Spacebars.call(view.lookup("order"));
  }, function() {
    return [ "\n      ", Blaze.Each(function() {
      return {
        _sequence: Spacebars.call(view.lookup("shipping")),
        _variable: "shipment"
      };
    }, function() {
      return [ "\n        ", HTML.DIV({
        class: function() {
          return [ "panel ", Blaze.If(function() {
            return Spacebars.call(view.lookup("isCompleted"));
          }, function() {
            return " panel-success ";
          }, function() {
            return " panel-info ";
          }) ];
        }
      }, "\n          ", Blaze.Each(function() {
        return Spacebars.dataMustache(view.lookup("reactionTemplate"), Spacebars.kw({
          workflow: "coreOrderShipmentWorkflow"
        }));
      }, function() {
        return [ "\n            ", Blaze._TemplateWith(function() {
          return {
            template: Spacebars.call(view.lookup("template")),
            data: Spacebars.call(Spacebars.dataMustache(view.lookup("orderFulfillmentData"), Spacebars.dot(view.lookup(".."), "_id"), view.lookup("shipment")))
          };
        }, function() {
          return Spacebars.include(function() {
            return Spacebars.call(Template.__dynamic);
          });
        }), "\n          " ];
      }), "\n        "), "\n      " ];
    }), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippingInvoice.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/shippingInvoice.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 0);
var accounting;
module.watch(require("accounting-js"), {
  "default": function (v) {
    accounting = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 3);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 4);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 5);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 6);
var i18next, Logger, Reaction;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  Logger: function (v) {
    Logger = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var Orders, Shops, Packages;
module.watch(require("../../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 8);
var InvoiceContainer;
module.watch(require("../../containers/invoiceContainer.js"), {
  "default": function (v) {
    InvoiceContainer = v;
  }
}, 9);
var getBillingInfo;
module.watch(require("../../helpers"), {
  getBillingInfo: function (v) {
    getBillingInfo = v;
  }
}, 10);

// helper to return the order payment object
// the first credit paymentMethod on the order
// returns entire payment method
function orderCreditMethod(order) {
  var creditMethods = order.billing && order.billing.filter(function (value) {
    return value && value.paymentMethod && value.paymentMethod.method === "credit";
  });
  var creditMethod = creditMethods && creditMethods.find(function (billing) {
    return billing && billing.shopId === Reaction.getShopId();
  });
  return creditMethod || {};
} //
// core order shipping invoice templates
//


Template.coreOrderShippingInvoice.onCreated(function () {
  var _this = this;

  this.state = new ReactiveDict();
  this.refunds = new ReactiveVar([]);
  this.refundAmount = new ReactiveVar(0.00);
  this.state.setDefault({
    isCapturing: false,
    isRefunding: false,
    isFetching: false
  });
  this.autorun(function () {
    var currentData = Template.currentData();
    var order = Orders.findOne(currentData.orderId);
    var shop = Shops.findOne({});

    _this.state.set("order", order);

    _this.state.set("currency", shop.currencies[shop.currency]);

    _this.state.set("isFetching", true);

    if (order) {
      Meteor.call("orders/refunds/list", order, function (error, result) {
        if (error) Logger.warn(error);

        _this.refunds.set(result);

        _this.state.set("isFetching", false);
      });
    }
  });
});
Template.coreOrderShippingInvoice.helpers({
  currentData: function () {
    var currentData = Template.currentData();
    return currentData;
  },
  order: function () {
    var instance = Template.instance();
    var order = instance.state.get("order");
    return order;
  },
  currency: function () {
    var instance = Template.instance();
    var currency = instance.state.get("currency");
    return currency;
  },
  refunds: function () {
    var refunds = Template.instance().refunds.get();

    if (Array.isArray(refunds)) {
      return refunds.reverse();
    }

    return refunds;
  },
  isCapturing: function () {
    var instance = Template.instance();

    if (instance.state.get("isCapturing")) {
      instance.$(":input").attr("disabled", true);
      instance.$("#btn-capture-payment").text("Capturing");
      return true;
    }

    return false;
  },
  isRefunding: function () {
    var instance = Template.instance();

    if (instance.state.get("isRefunding")) {
      instance.$("#btn-refund-payment").text(i18next.t("order.refunding"));
      return true;
    }

    return false;
  },
  isFetching: function () {
    var instance = Template.instance();

    if (instance.state.get("isFetching")) {
      return true;
    }

    return false;
  },
  InvoiceContainer: function () {
    return InvoiceContainer;
  }
});
/**
 * coreOrderAdjustments events
 */

Template.coreOrderShippingInvoice.events({
  /**
   * Click Start Cancel Order
   * @param {Event} event - Event Object
   * @param {Template} instance - Blaze Template
   * @return {void}
   */
  "click [data-event-action=cancelOrder]": function (event, instance) {
    event.preventDefault();
    var order = instance.state.get("order");
    var invoiceTotal = getBillingInfo(order).invoice && getBillingInfo(order).invoice.total;
    var currencySymbol = instance.state.get("currency").symbol;

    var _getBillingInfo = getBillingInfo(order),
        paymentMethod = _getBillingInfo.paymentMethod;

    Meteor.subscribe("Packages", Reaction.getShopId());
    var packageId = paymentMethod && paymentMethod.paymentPackageId;
    var settingsKey = paymentMethod && paymentMethod.paymentSettingsKey; // check if payment provider supports de-authorize

    var checkSupportedMethods = Packages.findOne({
      _id: packageId
    }).settings[settingsKey].support;
    var orderStatus = paymentMethod && paymentMethod.status;
    var orderMode = paymentMethod && paymentMethod.mode;
    var alertText;

    if (_includes(checkSupportedMethods, "de-authorize") || orderStatus === "completed" && orderMode === "capture") {
      alertText = i18next.t("order.applyRefundDuringCancelOrder", {
        currencySymbol: currencySymbol,
        invoiceTotal: invoiceTotal
      });
    }

    Alerts.alert({
      title: i18next.t("order.cancelOrder"),
      text: alertText,
      type: "warning",
      showCancelButton: true,
      showCloseButton: true,
      confirmButtonColor: "#98afbc",
      cancelButtonColor: "#98afbc",
      confirmButtonText: i18next.t("order.cancelOrderNoRestock"),
      cancelButtonText: i18next.t("order.cancelOrderThenRestock")
    }, function (isConfirm, cancel) {
      var returnToStock;

      if (isConfirm) {
        returnToStock = false;
        return Meteor.call("orders/cancelOrder", order, returnToStock, function (err) {
          if (err) {
            $(".alert").removeClass("hidden").text(err.message);
          }
        });
      }

      if (cancel === "cancel") {
        returnToStock = true;
        return Meteor.call("orders/cancelOrder", order, returnToStock, function (err) {
          if (err) {
            $(".alert").removeClass("hidden").text(err.message);
          }
        });
      }
    });
  },
  "click [data-event-action=makeAdjustments]": function (event, instance) {
    event.preventDefault();
    Meteor.call("orders/makeAdjustmentsToInvoice", instance.state.get("order"));
  },
  "change input[name=refund_amount], keyup input[name=refund_amount]": function (event, instance) {
    instance.refundAmount.set(accounting.unformat(event.target.value));
  }
});
/**
 * coreOrderShippingInvoice helpers
 */

Template.coreOrderShippingInvoice.helpers({
  refundAmount: function () {
    return Template.instance().refundAmount;
  },
  disabled: function () {
    var instance = Template.instance();
    var order = instance.state.get("order");
    var status = orderCreditMethod(order).paymentMethod && orderCreditMethod(order).paymentMethod.status;

    if (status === "approved" || status === "completed") {
      return "disabled";
    }

    return "";
  },
  capturedDisabled: function () {
    var isLoading = Template.instance().state.get("isCapturing");

    if (isLoading) {
      return "disabled";
    }

    return null;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippingSummary.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/shippingSummary.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var OrderSummaryContainer;
module.watch(require("../../containers/orderSummaryContainer"), {
  "default": function (v) {
    OrderSummaryContainer = v;
  }
}, 1);
Template.coreOrderShippingSummary.helpers({
  orderSummary: function () {
    return (0, _objectSpread2.default)({
      component: OrderSummaryContainer
    }, Template.currentData());
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippingTracking.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/shippingTracking.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 1);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 2);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 3);
var i18next, Reaction;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var Orders;
module.watch(require("../../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 5);
var getShippingInfo;
module.watch(require("../../helpers"), {
  getShippingInfo: function (v) {
    getShippingInfo = v;
  }
}, 6);
Template.coreOrderShippingTracking.onCreated(function () {
  var template = Template.instance();
  var currentData = Template.currentData();
  template.orderDep = new Tracker.Dependency();
  template.showTrackingEditForm = ReactiveVar(false);

  function getOrder(orderId, shipmentId) {
    template.orderDep.depend();
    return Orders.findOne({
      "_id": orderId,
      "shipping._id": shipmentId
    });
  }

  Tracker.autorun(function () {
    template.order = getOrder(currentData.orderId, currentData.fulfillment && currentData.fulfillment._id);
  });
});
/**
 * coreShipmentShipped events
 *
 */

Template.coreOrderShippingTracking.events({
  "click [data-event-action=refresh-shipping]": function () {
    var instance = Template.instance();
    instance.$("#btn-processing").removeClass("hidden");

    var orderId = Template.instance().order._id;

    Meteor.call("shipping/status/refresh", orderId, function (result) {
      if (result && result.error) {
        instance.$("#btn-processing").addClass("hidden");
        Alerts.toast(i18next.t("orderShipping.labelError", {
          error: result.error
        }), "error", {
          timeout: 7000
        });
      }
    });
  },
  "click [data-event-action=shipmentShipped]": function () {
    var template = Template.instance();
    var shipment = getShippingInfo(template.order);
    Meteor.call("orders/shipmentShipped", template.order, shipment, function (error) {
      if (error) {
        Alerts.toast(i18next.t("mail.alerts.cantSendEmail"), "error");
      } else {
        Alerts.toast(i18next.t("mail.alerts.emailSent"), "success");
      }
    }); // send notification to order owner

    var userId = template.order.userId;
    var type = "orderShipped";
    var prefix = Reaction.getShopPrefix();
    var url = prefix + "/notifications";
    var sms = true;
    Meteor.call("notification/send", userId, type, url, sms); // Meteor.call("workflow/pushOrderShipmentWorkflow", "coreOrderShipmentWorkflow", "orderShipped", this._id);
  },
  "click [data-event-action=resendNotification]": function () {
    var template = Template.instance();
    Meteor.call("orders/sendNotification", template.order, "shipped", function (error) {
      if (error) {
        Alerts.toast(i18next.t("mail.alerts.cantSendEmail"), "error");
      } else {
        Alerts.toast(i18next.t("mail.alerts.emailSent"), "success");
      }
    });
  },
  "click [data-event-action=shipmentPacked]": function () {
    var template = Template.instance();
    var shipment = getShippingInfo(template.order);
    Meteor.call("orders/shipmentPacked", template.order, shipment);
  },
  "submit form[name=addTrackingForm]": function (event, template) {
    event.preventDefault();
    event.stopPropagation();
    var currentData = Template.currentData();
    var order = template.order;
    var shipment = currentData.fulfillment;
    var tracking = event.target.trackingNumber.value;
    Meteor.call("orders/updateShipmentTracking", order, shipment, tracking, function (error) {
      if (!error) {
        template.orderDep.changed();
        template.showTrackingEditForm.set(false);
      }
    });
  },
  "click [data-event-action=editTracking]": function (event, template) {
    template.showTrackingEditForm.set(true);
  }
});
Template.coreOrderShippingTracking.helpers({
  printableLabels: function () {
    var _Template$instance = Template.instance(),
        order = _Template$instance.order;

    var shipment = getShippingInfo(order);

    if (shipment) {
      var shippingLabelUrl = shipment.shippingLabelUrl,
          customsLabelUrl = shipment.customsLabelUrl;

      if (shippingLabelUrl || customsLabelUrl) {
        return {
          shippingLabelUrl: shippingLabelUrl,
          customsLabelUrl: customsLabelUrl
        };
      }
    }

    return false;
  },
  isShipped: function () {
    var currentData = Template.currentData();

    var _Template$instance2 = Template.instance(),
        order = _Template$instance2.order;

    var shippedItems = currentData.fulfillment && currentData.fulfillment.items.every(function (shipmentItem) {
      var fullItem = order.items.find(function (orderItem) {
        if (orderItem._id === shipmentItem._id) {
          return true;
        }

        return false;
      });
      return !fullItem.workflow.workflow.includes("coreOrderItemWorkflow/shipped");
    });
    return shippedItems;
  },
  isNotCanceled: function () {
    var currentData = Template.currentData();

    var _Template$instance3 = Template.instance(),
        order = _Template$instance3.order;

    var canceledItems = currentData.fulfillment && currentData.fulfillment.items.every(function (shipmentItem) {
      var fullItem = order.items.find(function (orderItem) {
        if (orderItem._id === shipmentItem._id) {
          return true;
        }

        return false;
      });
      return fullItem.workflow.status !== "coreOrderItemWorkflow/canceled";
    });
    return canceledItems;
  },
  isCompleted: function () {
    var currentData = Template.currentData();

    var _Template$instance4 = Template.instance(),
        order = _Template$instance4.order;

    var completedItems = currentData.fulfillment && currentData.fulfillment.items.every(function (shipmentItem) {
      var fullItem = order.items.find(function (orderItem) {
        if (orderItem._id === shipmentItem._id) {
          return true;
        }

        return false;
      });

      if (Array.isArray(fullItem.workflow.workflow)) {
        return fullItem.workflow.workflow.includes("coreOrderItemWorkflow/completed");
      }

      return false;
    });
    return completedItems;
  },
  editTracking: function () {
    // TODO move to a method where we loop package settings
    // to determine if this feature is enabled.
    // somewhere in here is where I wish this was converted to React!
    var _Reaction$getPackageS = Reaction.getPackageSettings("reaction-shipping-rates"),
        settings = _Reaction$getPackageS.settings; // TODO: future proof by not using flatRates, but rather look for editable:true


    if (settings && settings.flatRates.enabled === true) {
      var _template = Template.instance();

      var order = _template.order;
      var shipment = getShippingInfo(order);

      var editing = _template.showTrackingEditForm.get();

      var view = false;

      if (editing === true || !shipment.tracking && editing === false) {
        view = true;
      } // TODO modularize tracking more, editable to settings


      if (view && shipment.shipmentMethod.carrier === "Flat Rate") {
        return true;
      }
    }

    return false;
  },
  order: function () {
    return Template.instance().order;
  },
  shipment: function () {
    var _Template$instance5 = Template.instance(),
        order = _Template$instance5.order;

    return getShippingInfo(order);
  },
  shipmentReady: function () {
    var _Template$instance6 = Template.instance(),
        order = _Template$instance6.order;

    var shipment = getShippingInfo(order);
    var shipmentWorkflow = shipment.workflow;
    return shipmentWorkflow && Array.isArray(shipmentWorkflow.workflow) && shipmentWorkflow.workflow.includes("coreOrderWorkflow/packed") && shipment.tracking || shipmentWorkflow && Array.isArray(shipmentWorkflow.workflow) && shipmentWorkflow.workflow.includes("coreOrderWorkflow/packed");
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"workflow.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/workflow/workflow.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);
var Orders;
module.watch(require("../../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 2);

/**
 * coreOrderWorkflowHelpers
 */
Template.coreOrderWorkflow.helpers({
  /**
   * orderFulfillmentData
   * @summary Creates an Object with order id and a fulfillment object
   * @param  {String} orderId - An order id
   * @param  {Object} fulfillment - An order fulfillment. e.g. a shipment
   * @return {Object} An object witht the order id and fulfillment
   */
  orderFulfillmentData: function (orderId, fulfillment) {
    return {
      orderId: orderId,
      fulfillment: fulfillment
    };
  },

  /**
   * baseOrder
   * @todo may be unnecessary
   * @return {Object} contents of Template.currentData(), non-reactive
   */
  baseOrder: function () {
    return Template.currentData();
  },

  /**
   * order
   * @return {Object|Boolean} An order or false
   */
  order: function () {
    var id = this.order ? this.order._id : Reaction.Router.getQueryParam("_id");

    if (id) {
      return Orders.findOne(id);
    }

    return false;
  },

  /**
   * fulfillmentNumber
   * @param  {Number} index - A number
   * @return {Number} index + 1
   */
  fulfillmentNumber: function (index) {
    return index + 1;
  },

  /**
   * isCompleted
   * @todo may need to be refactored
   * @return {String|Boolean} order completion status or false
   */
  isCompleted: function () {
    var order = Template.parentData(1);

    if (this.status === true) {
      return order.workflow.status;
    }

    return false;
  },

  /**
   * isPending
   * @todo may need to be refactored
   * @return {String|Boolean} status or false
   */
  isPending: function () {
    if (this.status === this.template) {
      return this.status;
    }

    return false;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"orders.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/orders.html                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.orders.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.orders.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/template.orders.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("orders");
Template["orders"] = new Template("Template.orders", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.dataMustache(view.lookup("hasPermission"), "orders");
  }, function() {
    return [ "\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
      return Spacebars.call(view.lookup("ordersComponent"));
    }, function() {
      return Spacebars.include(view.lookupTemplate("React"));
    }), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orders.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/templates/orders.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var OrderDashboardContainer;
module.watch(require("../containers/orderDashboardContainer"), {
  "default": function (v) {
    OrderDashboardContainer = v;
  }
}, 1);
Template.orders.helpers({
  ordersComponent: function () {
    return {
      component: OrderDashboardContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"invoice.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/invoice.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var formatPriceString;
module1.watch(require("../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  }
}, 2);
var Components, registerComponent, withMoment;
module1.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  withMoment: function (v) {
    withMoment = v;
  }
}, 3);
var LineItems;
module1.watch(require("./lineItems"), {
  "default": function (v) {
    LineItems = v;
  }
}, 4);
var InvoiceActions;
module1.watch(require("./invoiceActions"), {
  "default": function (v) {
    InvoiceActions = v;
  }
}, 5);

/**
 * @file Invoice is a React Component for displaying the `invoice` section on the orders sideview
 * @module Invoice
 * @extends Components
 */
var Invoice =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Invoice, _Component);

  function Invoice() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      isOpen: false
      /**
        * @name formatDate()
        * @method
        * @summary Formats dates
        * @param {Number} context - the date to be formatted
        * @param {String} block - the preferred format
        * @returns {String} formatted date
        */

    }, _this.handleClick = function (event) {
      event.preventDefault();

      _this.setState({
        isOpen: true
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Invoice.prototype;

  _proto.formatDate = function () {
    function formatDate(context, block) {
      var moment = this.props.moment;
      var dateFormat = block || "MMM DD, YYYY hh:mm:ss A";
      return moment && moment(context).format(dateFormat) || context.toLocaleString();
    }

    return formatDate;
  }();
  /**
    * @name handleClick()
    * @method
    * @summary Handle clicking the add discount link
    * @param {Event} event - the event that fired
    * @returns {null} null
    */


  /**
    * @name renderDiscountForm()
    * @method
    * @summary Displays the discount form
    * @returns {null} null
    */
  _proto.renderDiscountForm = function () {
    function renderDiscountForm() {
      return React.createElement("div", null, this.state.isOpen && React.createElement("div", null, React.createElement("hr", null), React.createElement(Components.DiscountList, {
        id: this.props.order._id,
        collection: "Orders",
        validatedInput: true
      }), React.createElement("hr", null)));
    }

    return renderDiscountForm;
  }();
  /**
    * @name renderRefundsInfo()
    * @method
    * @summary Displays the refund information after the order payment breakdown on the invoice
    * @returns {null} null
    */


  _proto.renderRefundsInfo = function () {
    function renderRefundsInfo() {
      var _this2 = this;

      var _props = this.props,
          hasRefundingEnabled = _props.hasRefundingEnabled,
          isFetching = _props.isFetching,
          refunds = _props.refunds;
      return React.createElement("div", null, hasRefundingEnabled && isFetching && React.createElement("div", {
        className: "form-group order-summary-form-group"
      }, React.createElement("strong", null, "Loading Refunds"), React.createElement("div", {
        className: "invoice-details"
      }, React.createElement("i", {
        className: "fa fa-spinner fa-spin"
      }))), Array.isArray(refunds) && refunds.map(function (refund) {
        return React.createElement("div", {
          className: "order-summary-form-group text-danger",
          key: refund.created,
          style: {
            marginBottom: 15
          }
        }, React.createElement("strong", null, "Refunded on: ", _this2.formatDate(refund.created, "MM/D/YYYY")), React.createElement("div", {
          className: "invoice-details"
        }, React.createElement("strong", null, formatPriceString(refund.amount))));
      }));
    }

    return renderRefundsInfo;
  }();
  /**
    * @name renderTotal()
    * @method
    * @summary Displays the total payment form
    * @returns {null} null
    */


  _proto.renderTotal = function () {
    function renderTotal() {
      return React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("hr", null), React.createElement("strong", null, "TOTAL"), React.createElement("div", {
        className: "invoice-details"
      }, React.createElement("strong", null, formatPriceString(this.props.invoice.total))));
    }

    return renderTotal;
  }();
  /**
    * @name renderConditionalDisplay()
    * @method
    * @summary Displays either refunds info or the total payment form
    * @returns {null} null
    */


  _proto.renderConditionalDisplay = function () {
    function renderConditionalDisplay() {
      var _props2 = this.props,
          canMakeAdjustments = _props2.canMakeAdjustments,
          paymentCaptured = _props2.paymentCaptured;
      return React.createElement("div", null, canMakeAdjustments ? React.createElement("div", null, " ", this.renderTotal(), " ") : React.createElement("span", null, paymentCaptured ? React.createElement("div", null, this.renderRefundsInfo()) : React.createElement("div", null, " ", this.renderTotal(), " ")));
    }

    return renderConditionalDisplay;
  }();
  /**
    * @name renderInvoice()
    * @method
    * @summary Displays the invoice form with broken down payment info
    * @returns {null} null
    */


  _proto.renderInvoice = function () {
    function renderInvoice() {
      var _props3 = this.props,
          invoice = _props3.invoice,
          discounts = _props3.discounts;
      return React.createElement("div", null, React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Items in order",
        i18nKey: "cartSubTotals.orderItems"
      })), React.createElement("div", {
        className: "invoice-details"
      }, invoice.totalItems)), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Subtotal",
        i18nKey: "cartSubTotals.subtotal"
      })), React.createElement("div", {
        className: "invoice-details"
      }, formatPriceString(invoice.subtotal))), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Shipping",
        i18nKey: "cartSubTotals.shipping"
      })), React.createElement("div", {
        className: "invoice-details"
      }, formatPriceString(invoice.shipping))), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Tax",
        i18nKey: "cartSubTotals.tax"
      })), React.createElement("div", {
        className: "invoice-details"
      }, formatPriceString(invoice.taxes))), discounts && React.createElement("div", null, React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Discount",
        i18nKey: "cartSubTotals.discount"
      })), React.createElement("div", {
        className: "invoice-details"
      }, formatPriceString(invoice.discounts))), this.renderDiscountForm()), this.renderConditionalDisplay());
    }

    return renderInvoice;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {
        actAsExpander: false,
        i18nKeyTitle: "admin.orderWorkflow.invoice.cardTitle",
        title: "Invoice"
      }), React.createElement(Components.CardBody, {
        expandable: false
      }, React.createElement(LineItems, this.props), React.createElement("div", {
        className: "invoice-container"
      }, this.renderInvoice()), React.createElement(InvoiceActions, this.props))));
    }

    return render;
  }();

  return Invoice;
}(Component);

Invoice.propTypes = {
  canMakeAdjustments: PropTypes.bool,
  discounts: PropTypes.bool,
  displayMedia: PropTypes.func,
  hasRefundingEnabled: PropTypes.bool,
  invoice: PropTypes.object,
  isFetching: PropTypes.bool,
  moment: PropTypes.func,
  order: PropTypes.object,
  paymentCaptured: PropTypes.bool,
  refunds: PropTypes.array
};
registerComponent("Invoice", Invoice, withMoment);
module1.exportDefault(withMoment(Invoice));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"invoiceActions.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/invoiceActions.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var formatPriceString;
module1.watch(require("../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  }
}, 2);
var Components, registerComponent;
module1.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

/**
 * @file InvoiceActions React Component for displaying the actionable data on the invoice section on the orders sideview
 *
 * @module InvoiceActions
 * @extends Component
 */
var InvoiceActions =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(InvoiceActions, _Component);

  function InvoiceActions() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      value: 0
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = InvoiceActions.prototype;

  _proto.renderCapturedTotal = function () {
    function renderCapturedTotal() {
      var invoice = this.props.invoice;
      return React.createElement("div", {
        className: "invoice-summary"
      }, React.createElement("span", {
        className: "invoice-label captured-total"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Captured Total",
        i18nKey: "admin.invoice.capturedTotal"
      }))), React.createElement("div", {
        className: "invoice-details"
      }, React.createElement("strong", null, formatPriceString(invoice.total))));
    }

    return renderCapturedTotal;
  }();

  _proto.renderAdjustedTotal = function () {
    function renderAdjustedTotal() {
      var adjustedTotal = this.props.adjustedTotal;
      return React.createElement("div", {
        className: "invoice-summary"
      }, React.createElement("span", {
        className: "invoice-label adjusted-total"
      }, React.createElement("strong", null, React.createElement(Components.Translation, {
        defaultValue: "Adjusted Total",
        i18nKey: "admin.invoice.adjustedTotal"
      }))), React.createElement("div", {
        className: "invoice-details"
      }, React.createElement("strong", null, formatPriceString(adjustedTotal))));
    }

    return renderAdjustedTotal;
  }();

  _proto.renderRefundForm = function () {
    function renderRefundForm() {
      var _this2 = this;

      var adjustedTotal = this.props.adjustedTotal;
      return React.createElement("div", null, this.props.hasRefundingEnabled && React.createElement("div", {
        className: "flex refund-container"
      }, React.createElement("div", {
        className: "refund-input"
      }, React.createElement(Components.NumericInput, {
        numericType: "currency",
        value: this.state.value,
        maxValue: adjustedTotal,
        format: this.props.currency,
        classNames: {
          input: {
            amount: true
          }
        },
        onChange: function (event, value) {
          _this2.setState({
            value: value
          });
        }
      })), React.createElement(Components.Button, {
        className: "flex-item-fill refund-button",
        type: "button",
        status: "primary",
        bezelStyle: "solid",
        disabled: this.props.isRefunding || this.state.value === 0,
        onClick: function (event) {
          _this2.props.handleRefund(event, _this2.state.value);

          _this2.setState({
            value: 0
          });
        }
      }, this.props.isRefunding ? React.createElement("span", {
        id: "btn-refund-payment",
        "data-i18n": "order.applyRefund"
      }, "Refunding ", React.createElement("i", {
        className: "fa fa-spinner fa-spin"
      })) : React.createElement("span", {
        id: "btn-refund-payment",
        "data-i18n": "order.applyRefund"
      }, "Apply Refund"))), this.props.showAfterPaymentCaptured && React.createElement("div", {
        className: "cancel-order-btn"
      }, React.createElement(Components.Button, {
        className: "btn btn-danger",
        bezelStyle: "solid",
        label: "Cancel Order",
        i18nKeyLabel: "order.cancelOrderLabel",
        type: "button",
        "data-event-action": "cancelOrder",
        style: {
          marginBottom: 10
        },
        "data-i18n": "order.cancelOrderLabel"
      })), React.createElement("a", {
        className: "btn btn-default btn-block",
        href: this.props.printOrder,
        target: "_blank",
        "data-i18n": "app.printInvoice"
      }, "Print Invoice"));
    }

    return renderRefundForm;
  }();

  _proto.renderApproval = function () {
    function renderApproval() {
      if (this.props.paymentPendingApproval) {
        return React.createElement("div", {
          className: "btn-block"
        }, React.createElement("div", null, React.createElement(Components.ButtonSelect, {
          buttons: [{
            name: "Approve",
            i18nKeyLabel: "order.approveInvoice",
            active: true,
            status: "success",
            eventAction: "approveInvoice",
            bgColor: "bg-success",
            buttonType: "submit"
          }, {
            name: "Cancel",
            i18nKeyLabel: "order.cancelInvoice",
            active: false,
            status: "danger",
            eventAction: "cancelOrder",
            bgColor: "bg-danger",
            buttonType: "button"
          }]
        })));
      }

      if (this.props.paymentApproved) {
        return React.createElement("div", {
          className: "flex"
        }, React.createElement("a", {
          className: "btn btn-link",
          href: this.props.printOrder,
          target: "_blank",
          "data-i18n": "app.print"
        }, "Print"), React.createElement("button", {
          className: "btn btn-success flex-item-fill",
          type: "button",
          "data-event-action": "capturePayment",
          disabled: this.props.isCapturing,
          onClick: this.props.handleCapturePayment
        }, this.props.isCapturing ? React.createElement("span", {
          id: "btn-capture-payment"
        }, "Capturing ", React.createElement("i", {
          className: "fa fa-spinner fa-spin",
          id: "btn-processing"
        })) : React.createElement("span", {
          id: "btn-capture-payment",
          "data-i18n": "order.capturePayment"
        }, "Capture Payment")));
      }
    }

    return renderApproval;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("form", {
        onSubmit: this.props.handleApprove
      }, React.createElement("div", {
        style: {
          marginBottom: 15,
          marginTop: 15
        }
      }, this.renderApproval(), this.props.paymentCaptured && React.createElement("div", {
        className: "total-container"
      }, this.renderCapturedTotal(), this.props.invoice.total !== this.props.adjustedTotal && this.renderAdjustedTotal(), this.renderRefundForm())));
    }

    return render;
  }();

  return InvoiceActions;
}(Component);

InvoiceActions.propTypes = {
  adjustedTotal: PropTypes.number,
  currency: PropTypes.object,
  handleApprove: PropTypes.func,
  handleCapturePayment: PropTypes.func,
  handleRefund: PropTypes.func,
  hasRefundingEnabled: PropTypes.bool,
  invoice: PropTypes.object,
  isCapturing: PropTypes.bool,
  isRefunding: PropTypes.bool,
  paymentApproved: PropTypes.bool,
  paymentCaptured: PropTypes.bool,
  paymentPendingApproval: PropTypes.bool,
  printOrder: PropTypes.string,
  showAfterPaymentCaptured: PropTypes.bool
};
registerComponent("InvoiceActions", InvoiceActions);
module1.exportDefault(InvoiceActions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"lineItems.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/lineItems.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;

var _isEmpty;

module1.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 0);
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var classnames;
module1.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Roles;
module1.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 5);
var formatPriceString, Reaction;
module1.watch(require("../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);
var Components, registerComponent;
module1.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 7);

/**
 * @file LineItems React Component for displaying the actionable data on the invoice section on the orders sideview
 *
 * @module LineItems
 * @extends Component
 */
var LineItems =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(LineItems, _Component);

  function LineItems() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = LineItems.prototype;

  /**
   * @name LineItems propTypes
   * @summary React component for displaying the actionable data on the invoice section on the orders sideview
   * @param {Object} props - React PropTypes
   * @property {Object} order - An object represnting an order
   * @property {Object} uniqueItems - An object representing a line item
   * @property {Array} editedItems - An array/list of line items that have been edited/modified
   * @property {Array} selectedItems - An array of all the line items  that have been selected
   * @property {Function} displayMedia - A function to display line items images
   * @property {Function} clearRefunds - A function to clear edited/selected items
   * @property {Function} getRefundedItemsInfo - A function that returns an object containing refunded items info
   * @property {Function} getSelectedItemsInfo - A function that returns an object containing selected items info
   * @property {Function} handleInputChange - A function to handle numeric input change
   * @property {Function} handleItemSelect - A function to handle selecting an item via chekbox
   * @property {Function} handlePopOverOpen - A function to handle the popover open and close
   * @property {Function} handleRefundItems - A function to handle items return
   * @property {Function} handleSelectAllItems - A function to handle selecting of all items
   * @property {Bool} selectAllItems - A boolean indicating whether all items have been selected
   * @property {Bool} isRefunding - A boolean indicating whether payment is being refunded
   * @property {Bool} popOverIsOpen - A boolean indicating whether popover is open
   * @return {Node} React node containing component for displaying the `invoice` section on the orders sideview
   */
  _proto.displayMedia = function () {
    function displayMedia(uniqueItem) {
      var displayMedia = this.props.displayMedia;
      return React.createElement(Components.ProductImage, {
        item: uniqueItem,
        displayMedia: displayMedia,
        size: "thumbnail",
        badge: false
      });
    }

    return displayMedia;
  }();

  _proto.renderLineItem = function () {
    function renderLineItem(uniqueItem) {
      return React.createElement("div", {
        className: "order-items invoice-item"
      }, React.createElement("div", {
        className: "order-item form-group order-summary-form-group"
      }, React.createElement("div", {
        className: "order-item-media"
      }, React.createElement("div", null, this.displayMedia(uniqueItem))), React.createElement("div", {
        className: "order-item-details"
      }, React.createElement("div", {
        className: "order-detail-title"
      }, uniqueItem.title, " ", React.createElement("br", null), React.createElement("small", null, uniqueItem.variants.title))), React.createElement("div", {
        className: "order-detail-quantity"
      }, React.createElement("div", null, uniqueItem.quantity)), React.createElement("div", {
        className: "order-detail-price"
      }, React.createElement("div", {
        className: "invoice-details",
        style: {
          marginRight: 15
        }
      }, React.createElement("strong", null, formatPriceString(uniqueItem.variants.price))))));
    }

    return renderLineItem;
  }();

  _proto.renderPopOverLineItem = function () {
    function renderPopOverLineItem(uniqueItem) {
      var _this = this;

      var className = classnames({
        "order-items": true,
        "invoice-item": true,
        "selected": this.props.selectedItems.includes(uniqueItem._id)
      });
      return React.createElement("div", {
        className: className
      }, React.createElement("div", {
        className: "order-item form-group order-summary-form-group"
      }, React.createElement("div", {
        className: "order-item-media popover-mode"
      }, React.createElement(Components.RolloverCheckbox, {
        className: "order-invoice-rollover",
        checkboxClassName: "checkbox-avatar checkbox-large",
        onChange: function () {
          return _this.props.handleItemSelect(uniqueItem);
        },
        checked: this.props.selectedItems.includes(uniqueItem._id)
      }, this.displayMedia(uniqueItem))), React.createElement("div", {
        className: "order-item-details"
      }, React.createElement("div", {
        className: "order-detail-title"
      }, uniqueItem.title, " ", React.createElement("br", null), React.createElement("small", null, uniqueItem.variants.title))), React.createElement("div", {
        className: "order-detail-quantity"
      }, !this.props.selectedItems.includes(uniqueItem._id) && uniqueItem.quantity > 0 ? React.createElement(Components.NumberTypeInput, {
        minValue: 0,
        defaultValue: uniqueItem.quantity,
        onChange: function (event, value) {
          return _this.props.handleInputChange(event, value, uniqueItem);
        },
        maxValue: uniqueItem.quantity
      }) : React.createElement("div", null, "0")), React.createElement("div", {
        className: "order-detail-price"
      }, React.createElement("div", {
        className: "invoice-details",
        style: {
          marginRight: 15
        }
      }, React.createElement("strong", null, formatPriceString(uniqueItem.variants.price))))));
    }

    return renderPopOverLineItem;
  }();

  _proto.renderLineItemInvoice = function () {
    function renderLineItemInvoice(uniqueItem) {
      return React.createElement("div", {
        className: "invoice-order-items"
      }, this.props.order.taxes && React.createElement("div", {
        className: "invoice-order-item-tax"
      }, React.createElement("b", null, React.createElement(Components.Translation, {
        defaultValue: "Tax",
        i18nKey: "cartSubTotals.tax"
      })), React.createElement("div", {
        className: "tax-code"
      }, React.createElement("span", null, uniqueItem.taxDetail ? uniqueItem.taxDetail.taxCode : uniqueItem.variants.taxCode)), React.createElement("div", {
        className: "tax-cost"
      }, React.createElement("span", null, uniqueItem.taxDetail ? formatPriceString(uniqueItem.taxDetail.tax) : formatPriceString(uniqueItem.tax)))), React.createElement("div", {
        className: "invoice-order-item-subtotal"
      }, React.createElement("b", null, React.createElement(Components.Translation, {
        defaultValue: "Subtotal",
        i18nKey: "cartSubTotals.subtotal"
      })), React.createElement("span", null, React.createElement("b", null, formatPriceString(uniqueItem.variants.price * uniqueItem.quantity)))));
    }

    return renderLineItemInvoice;
  }();

  _proto.renderLineItemRefund = function () {
    function renderLineItemRefund() {
      var editedItems = this.props.editedItems;
      return React.createElement("div", null, React.createElement("div", {
        className: "invoice-refund-edited"
      }, React.createElement("div", {
        className: "refund-header"
      }, React.createElement("div", null, React.createElement(Components.Translation, {
        defaultValue: "For Refund",
        i18nKey: "admin.invoice.refundLabel"
      })), React.createElement("div", null, React.createElement(Components.Translation, {
        defaultValue: "Items",
        i18nKey: "admin.invoice.refundItems"
      })), React.createElement("div", null, React.createElement(Components.Translation, {
        defaultValue: "Total",
        i18nKey: "admin.invoice.refundItemAmount"
      }))), React.createElement("div", {
        className: "refund-body"
      }, editedItems.map(function (item, index) {
        return React.createElement("div", {
          className: "refund-item",
          key: index
        }, React.createElement("div", null, React.createElement("span", null, item.title)), React.createElement("div", null, React.createElement("span", null, item.refundedQuantity)), React.createElement("div", null, React.createElement("span", null, formatPriceString(item.refundedTotal))));
      }), React.createElement("div", {
        className: "refund-item return"
      }, React.createElement("div", null, React.createElement("b", null, React.createElement(Components.Translation, {
        defaultValue: "RETURN TOTAL",
        i18nKey: "admin.invoice.refundTotal"
      }))), React.createElement("div", null, React.createElement("span", null, this.props.getRefundedItemsInfo().quantity)), React.createElement("div", null, React.createElement("span", null, formatPriceString(this.props.getRefundedItemsInfo().total)))))));
    }

    return renderLineItemRefund;
  }();

  _proto.renderPopOver = function () {
    function renderPopOver() {
      return React.createElement(Components.Popover, {
        isOpen: this.props.popOverIsOpen,
        attachment: "middle center",
        targetAttachment: "middle center",
        constraints: [{
          to: "scrollParent",
          pin: true
        }, {
          to: "window",
          attachment: "together"
        }],
        showDropdownButton: false
      }, this.popOverContent());
    }

    return renderPopOver;
  }();

  _proto.popOverContent = function () {
    function popOverContent() {
      var _this2 = this;

      return React.createElement("div", {
        className: "invoice-popover"
      }, React.createElement("div", {
        className: "invoice-popover-controls"
      }, React.createElement(Components.Checkbox, {
        className: "checkbox-large",
        checked: this.props.selectAllItems || this.props.selectedItems.length === this.props.uniqueItems.length,
        onChange: function () {
          return _this2.props.handleSelectAllItems(_this2.props.uniqueItems);
        }
      }), React.createElement("div", {
        className: "invoice-popover-close"
      }, React.createElement(Components.Button, {
        className: "rui btn btn-default flat icon-only pull-right",
        icon: "fa-2x fa fa-times",
        bezelStyle: "flat",
        onClick: this.props.clearRefunds
      }))), React.createElement("div", null, this.props.uniqueItems.map(function (uniqueItem, index) {
        return React.createElement("div", {
          key: index
        }, _this2.renderPopOverLineItem(uniqueItem), _this2.renderLineItemInvoice(uniqueItem));
      })), React.createElement("div", null, !_isEmpty(this.props.editedItems) && this.renderLineItemRefund()), React.createElement("div", {
        className: "invoice-actions"
      }, React.createElement("div", {
        className: "invoice-action-cancel"
      }, React.createElement(Components.Button, {
        className: "pull-right",
        bezelStyle: "solid",
        status: "default",
        label: "Cancel",
        onClick: this.props.clearRefunds
      })), React.createElement("div", {
        className: "invoice-action-refund"
      }, React.createElement(Components.Button, {
        className: "pull-right",
        bezelStyle: "solid",
        status: "primary",
        disabled: this.props.isRefunding || this.props.editedItems.length === 0,
        onClick: this.props.handleRefundItems
      }, this.props.isRefunding ? React.createElement("span", null, "Refunding ", React.createElement("i", {
        className: "fa fa-spinner fa-spin"
      })) : React.createElement("span", null, "Refund Items")))));
    }

    return popOverContent;
  }();

  _proto.render = function () {
    function render() {
      var _this3 = this;

      var uniqueItems = this.props.uniqueItems;
      return React.createElement(Components.Button, {
        tagName: "div",
        className: {
          "btn": false,
          "btn-default": false,
          "flat": false,
          "invoice": true,
          "invoice-line-items": true
        },
        onClick: this.props.handlePopOverOpen
      }, uniqueItems.map(function (uniqueItem) {
        return React.createElement("div", {
          key: uniqueItem._id
        }, " ", _this3.renderLineItem(uniqueItem), " ");
      }), Roles.userIsInRole(Meteor.userId(), ["orders", "dashboard/orders"], Reaction.getShopId()) && this.renderPopOver());
    }

    return render;
  }();

  return LineItems;
}(Component);

LineItems.propTypes = {
  clearRefunds: PropTypes.func,
  displayMedia: PropTypes.func,
  editedItems: PropTypes.array,
  getRefundedItemsInfo: PropTypes.func,
  getSelectedItemsInfo: PropTypes.func,
  handleInputChange: PropTypes.func,
  handleItemSelect: PropTypes.func,
  handlePopOverOpen: PropTypes.func,
  handleRefundItems: PropTypes.func,
  handleSelectAllItems: PropTypes.func,
  isRefunding: PropTypes.bool,
  order: PropTypes.object,
  popOverIsOpen: PropTypes.bool,
  selectAllItems: PropTypes.bool,
  selectedItems: PropTypes.array,
  uniqueItems: PropTypes.array
};
registerComponent("LineItems", LineItems);
module1.exportDefault(LineItems);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderBulkActionsBar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderBulkActionsBar.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Translation, Checkbox, Button, Icon, List, ListItem;
module.watch(require("../../../ui/client/components"), {
  Translation: function (v) {
    Translation = v;
  },
  Checkbox: function (v) {
    Checkbox = v;
  },
  Button: function (v) {
    Button = v;
  },
  Icon: function (v) {
    Icon = v;
  },
  List: function (v) {
    List = v;
  },
  ListItem: function (v) {
    ListItem = v;
  }
}, 2);

var OrderBulkActionsBar =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderBulkActionsBar, _Component);

  function OrderBulkActionsBar() {
    var _this;

    _this = _Component.call(this) || this;

    _this.onClick = function (event, value) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[value] = true, _this$setState));
    };

    _this.handleListItemClick = function (event, value) {
      if (_this.props.setShippingStatus) {
        _this.props.setShippingStatus(value, _this.props.selectedItems, _this.props.orders);
      }
    };

    _this.handlePaymentClick = function () {
      if (_this.props.handleBulkPaymentCapture) {
        _this.props.handleBulkPaymentCapture(_this.props.selectedItems, _this.props.orders);
      }
    };

    _this.state = {
      printed: false
    };
    return _this;
  }

  var _proto = OrderBulkActionsBar.prototype;

  _proto.renderLoadingSpinner = function () {
    function renderLoadingSpinner(status) {
      return this.props.isLoading[status] ? React.createElement(Icon, {
        className: "bulk-actions-icons-select",
        icon: "fa fa-spinner fa-pulse"
      }) : React.createElement(Icon, {
        className: "bulk-actions-icons-select",
        icon: "fa fa-circle-o"
      });
    }

    return renderLoadingSpinner;
  }();

  _proto.renderShippingFLowList = function () {
    function renderShippingFLowList() {
      if (this.props.renderFlowList) {
        return React.createElement(List, {
          className: "shipping-flow-list"
        }, React.createElement(ListItem, {
          label: "Print Invoice and Pick Sheet",
          i18nKeyLabel: "order.printInvoiceAndPickSheet",
          value: "printed",
          onClick: this.onClick,
          listItemClassName: this.state.printed ? "selected" : ""
        }, this.state.printed ? React.createElement("div", null, React.createElement(Icon, {
          className: "bulk-actions-icons",
          icon: "fa fa-print"
        }), React.createElement(Icon, {
          className: "bulk-actions-icons-select",
          icon: "fa fa-check"
        })) : React.createElement(Icon, {
          className: "bulk-actions-icons-select",
          icon: "fa fa-print"
        })), React.createElement(ListItem, {
          label: "Picked",
          i18nKeyLabel: "order.picked",
          value: "picked",
          onClick: this.handleListItemClick,
          listItemClassName: this.props.shipping.picked ? "selected" : ""
        }, this.props.shipping.picked && !this.props.isLoading.picked ? React.createElement("div", null, React.createElement(Icon, {
          className: "bulk-actions-icons",
          icon: "fa fa-print"
        }), React.createElement(Icon, {
          className: "bulk-actions-icons-select",
          icon: "fa fa-check"
        })) : this.renderLoadingSpinner("picked")), React.createElement(ListItem, {
          label: "Packed",
          i18nKeyLabel: "order.packed",
          value: "packed",
          onClick: this.handleListItemClick,
          listItemClassName: this.props.shipping.packed ? "selected" : ""
        }, this.props.shipping.packed && !this.props.isLoading.packed ? React.createElement(Icon, {
          className: "bulk-actions-icons-select",
          icon: "fa fa-check"
        }) : this.renderLoadingSpinner("packed")), React.createElement(ListItem, {
          label: this.props.shipping.labeled ? "Generate Label" : "Labeled",
          i18nKeyLabel: this.props.shipping.labeled ? "order.generateLabel" : "order.labeled",
          value: "labeled",
          onClick: this.handleListItemClick,
          listItemClassName: this.props.shipping.labeled ? "selected" : ""
        }, this.props.shipping.labeled && !this.props.isLoading.labeled ? React.createElement("div", null, React.createElement(Icon, {
          className: "bulk-actions-icons",
          icon: "fa fa-print"
        }), React.createElement(Icon, {
          className: "bulk-actions-icons-select",
          icon: "fa fa-check"
        })) : this.renderLoadingSpinner("labeled")), React.createElement(ListItem, {
          label: "Shipped",
          i18nKeyLabel: "order.shipped",
          value: "shipped",
          onClick: this.handleListItemClick,
          listItemClassName: this.props.shipping.shipped ? "selected" : ""
        }, this.props.shipping.shipped && !this.props.isLoading.shipped ? React.createElement("div", null, React.createElement(Icon, {
          className: "bulk-actions-icons",
          icon: "fa fa-paper-plane-o"
        }), React.createElement(Icon, {
          className: "bulk-actions-icons-select",
          icon: "fa fa-check"
        })) : this.renderLoadingSpinner("shipped")));
      }
    }

    return renderShippingFLowList;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          orders = _props.orders,
          multipleSelect = _props.multipleSelect,
          selectedItems = _props.selectedItems,
          selectAllOrders = _props.selectAllOrders;

      if (selectedItems.length > 0) {
        return React.createElement("div", {
          className: "bulk-order-actions-bar"
        }, React.createElement(Checkbox, {
          className: "checkbox-large orders-checkbox",
          checked: selectedItems.length === orders.length || multipleSelect,
          name: "orders-checkbox",
          onChange: function () {
            return selectAllOrders(orders, selectedItems.length === orders.length || multipleSelect);
          }
        }), React.createElement(Translation, {
          className: "selected-orders",
          defaultValue: selectedItems.length + " Selected",
          i18nKey: selectedItems.length + " order.selected"
        }), React.createElement(Button, {
          status: "success",
          bezelStyle: "solid",
          className: "capture-orders-button",
          label: this.props.isLoading.capturePayment ? "Capturing" : "Capture",
          i18nKeyLabel: this.props.isLoading.capturePayment ? "order.capturing" : "order.capture",
          icon: this.props.isLoading.capturePayment ? "fa fa-spinner fa-pulse" : "",
          iconAfter: true,
          onClick: this.handlePaymentClick
        }), React.createElement(Button, {
          status: "default",
          bezelStyle: "solid",
          className: "bulk-actions-button",
          label: "Bulk Actions",
          i18nKeyLabel: "order.bulkActions",
          icon: "fa fa-chevron-down",
          iconAfter: true,
          onClick: this.props.toggleShippingFlowList
        }), this.renderShippingFLowList());
      }

      return null;
    }

    return render;
  }();

  return OrderBulkActionsBar;
}(Component);

OrderBulkActionsBar.propTypes = {
  handleBulkPaymentCapture: PropTypes.func,
  isLoading: PropTypes.object,
  multipleSelect: PropTypes.bool,
  orders: PropTypes.array,
  renderFlowList: PropTypes.bool,
  selectAllOrders: PropTypes.func,
  selectedItems: PropTypes.array,
  setShippingStatus: PropTypes.func,
  shipping: PropTypes.object,
  toggleShippingFlowList: PropTypes.func
};
module.exportDefault(OrderBulkActionsBar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderDashboard.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderDashboard.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var OrderTable;
module.watch(require("../containers/orderTableContainer"), {
  "default": function (v) {
    OrderTable = v;
  }
}, 3);
var OrderFilter;
module.watch(require("./orderFilter"), {
  "default": function (v) {
    OrderFilter = v;
  }
}, 4);
var OrderSearch;
module.watch(require("./orderSearch"), {
  "default": function (v) {
    OrderSearch = v;
  }
}, 5);

var OrderDashboard =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderDashboard, _Component);

  function OrderDashboard() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      detailClassName: "",
      listClassName: "order-icon-toggle",
      openList: true,
      orders: _this.props.orders
    }, _this.handleListToggle = function () {
      _this.setState({
        detailClassName: "",
        listClassName: "order-icon-toggle",
        openList: true
      });
    }, _this.handleDetailToggle = function () {
      _this.setState({
        detailClassName: "order-icon-toggle",
        listClassName: "",
        openList: false
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = OrderDashboard.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "order-dashboard-container"
      }, React.createElement(OrderSearch, {
        handleChange: this.props.handleChange
      }), React.createElement(OrderFilter, {
        clearFilter: this.props.clearFilter,
        filterDates: this.props.filterDates,
        filterShippingStatus: this.props.filterShippingStatus,
        filterWorkflowStatus: this.props.filterWorkflowStatus
      }), this.props.orders.length ? React.createElement("div", {
        className: "container-fluid-sm order-details-list-container"
      }, React.createElement("div", {
        className: "order-toggle-buttons-container"
      }, React.createElement("div", {
        className: "order-toggle-buttons"
      }, React.createElement("button", {
        className: "order-toggle-btn " + this.state.detailClassName,
        onClick: this.handleDetailToggle
      }, React.createElement("i", {
        className: "fa fa-th-list"
      })), React.createElement("button", {
        className: "order-toggle-btn " + this.state.listClassName,
        onClick: this.handleListToggle
      }, React.createElement("i", {
        className: "fa fa-list"
      })))), React.createElement(OrderTable, {
        orders: this.props.orders,
        isOpen: this.state.openList,
        onPageChange: this.props.onPageChange,
        onPageSizeChange: this.props.onPageSizeChange,
        pages: this.props.pages,
        page: this.props.currentPage
      })) : React.createElement("div", {
        className: "container-fluid-sm order-details-list-container"
      }, React.createElement("div", {
        className: "empty-view-message"
      }, React.createElement(Components.Icon, {
        icon: "fa fa-sun-o"
      }), React.createElement(Components.Translation, {
        defaultValue: "No orders found",
        i18nKey: "order.ordersNotFound"
      }))));
    }

    return render;
  }();

  return OrderDashboard;
}(Component);

OrderDashboard.propTypes = {
  clearFilter: PropTypes.func,
  currentPage: PropTypes.number,
  filterDates: PropTypes.func,
  filterShippingStatus: PropTypes.func,
  filterWorkflowStatus: PropTypes.func,
  handleBulkPaymentCapture: PropTypes.func,
  handleChange: PropTypes.func,
  handleClick: PropTypes.func,
  handleSelect: PropTypes.func,
  isLoading: PropTypes.object,
  multipleSelect: PropTypes.bool,
  onPageChange: PropTypes.func,
  onPageSizeChange: PropTypes.func,
  orders: PropTypes.array,
  pages: PropTypes.number,
  query: PropTypes.object,
  renderFlowList: PropTypes.bool,
  searchQuery: PropTypes.string,
  selectAllOrders: PropTypes.func,
  selectedItems: PropTypes.array,
  setShippingStatus: PropTypes.func,
  shipping: PropTypes.object,
  toggleShippingFlowList: PropTypes.func
};
module.exportDefault(OrderDashboard);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderFilter.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderFilter.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Constants;
module.watch(require("../../lib/constants"), {
  "*": function (v) {
    Constants = v;
  }
}, 4);

var OrderFilter =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderFilter, _Component);

  function OrderFilter(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleDatesChange = function (startDate, endDate) {
      _this.setState({
        startDate: startDate,
        endDate: endDate,
        classNames: (0, _objectSpread2.default)({}, _this.state.classNames, {
          date: "active"
        })
      });

      _this.props.filterDates(startDate, endDate);
    };

    _this.handleWorkflowChange = function (event, value) {
      _this.setState({
        workflowLabel: value,
        classNames: (0, _objectSpread2.default)({}, _this.state.classNames, {
          workflow: "active"
        })
      });

      _this.props.filterWorkflowStatus(event, value);
    };

    _this.handleShippingChange = function (event, value) {
      _this.setState({
        shippingLabel: value,
        classNames: (0, _objectSpread2.default)({}, _this.state.classNames, {
          shipping: "active"
        })
      });

      _this.props.filterShippingStatus(event, value);
    };

    _this.state = {
      startDate: null,
      endDate: null,
      workflowLabel: "status",
      shippingLabel: "shippingStatus",
      classNames: {
        date: "",
        shipping: "",
        workflow: ""
      }
    };
    return _this;
  }

  var _proto = OrderFilter.prototype;

  _proto.buttonElement = function () {
    function buttonElement() {
      return React.createElement(Components.Button, {
        className: "order-filter-dropdown-button"
      }, React.createElement("i", {
        className: "fa fa-angle-down"
      }));
    }

    return buttonElement;
  }();

  _proto.dateLabel = function () {
    function dateLabel() {
      if (this.state.startDate && this.state.endDate) {
        return React.createElement("span", null, this.state.startDate.format("MM/DD"), " - ", this.state.endDate.format("MM/DD"));
      }

      return React.createElement(Components.Translation, {
        defaultValue: "Date Range",
        i18nKey: "admin.table.filter.dateRange"
      });
    }

    return dateLabel;
  }();

  _proto.shippingLabel = function () {
    function shippingLabel() {
      if (this.state.classNames.shipping === "active") {
        return React.createElement(Components.Translation, {
          defaultValue: this.state.shippingLabel,
          i18nKey: "order." + this.state.shippingLabel
        });
      }

      return React.createElement(Components.Translation, {
        defaultValue: "Shipping Status",
        i18nKey: "admin.table.filter." + this.state.shippingLabel
      });
    }

    return shippingLabel;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      var attachmentDirection = i18next.dir() === "rtl" ? "left" : "right";
      return React.createElement("div", {
        className: "order-filter-bar"
      }, React.createElement("div", {
        className: "order-filter-item"
      }, React.createElement("div", {
        className: "order-filter-label"
      }, React.createElement("span", {
        className: "order-filter-name capitalize " + this.state.classNames.workflow
      }, React.createElement(Components.Translation, {
        defaultValue: this.state.workflowLabel,
        i18nKey: "admin.table.filter." + this.state.workflowLabel
      })), React.createElement("div", {
        className: "order-filter-icons"
      }, React.createElement(Components.Button, {
        className: "order-filter-button " + this.state.classNames.workflow,
        onClick: function () {
          _this2.setState({
            workflowLabel: "status",
            classNames: (0, _objectSpread2.default)({}, _this2.state.classNames, {
              workflow: ""
            })
          });

          _this2.props.clearFilter("workflow");
        }
      }, React.createElement("i", {
        className: "fa fa-filter"
      })), React.createElement(Components.DropDownMenu, {
        buttonElement: this.buttonElement(),
        menuClassName: "status-dropdown",
        className: "order-menu-item-dropdown",
        onChange: this.handleWorkflowChange,
        attachment: "bottom " + attachmentDirection,
        targetAttachment: "top " + attachmentDirection
      }, Constants.workflowStatus.map(function (status, index) {
        return React.createElement(Components.MenuItem, {
          key: index,
          label: status.label,
          i18nKeyLabel: "admin.table.filter." + status.value,
          value: status.value
        });
      }))))), React.createElement("div", {
        className: "order-filter-item"
      }, React.createElement("div", {
        className: "order-filter-label"
      }, React.createElement("span", {
        className: "order-filter-name " + this.state.classNames.date
      }, this.dateLabel()), React.createElement("div", {
        className: "order-filter-icons"
      }, React.createElement(Components.Button, {
        className: "order-filter-button " + this.state.classNames.date,
        onClick: function () {
          _this2.setState({
            startDate: null,
            endDate: null,
            classNames: (0, _objectSpread2.default)({}, _this2.state.classNames, {
              date: ""
            })
          });

          _this2.props.clearFilter("date");
        }
      }, React.createElement("i", {
        className: "fa fa-filter"
      })), React.createElement(Components.DropDownMenu, {
        buttonElement: this.buttonElement(),
        menuClassName: "calender-dropdown",
        className: "order-menu-item-dropdown",
        attachment: "bottom " + attachmentDirection,
        targetAttachment: "top " + attachmentDirection,
        isClickable: false
      }, React.createElement(Components.CalendarPicker, {
        initialStartDate: this.state.startDate,
        initialEndDate: this.state.endDate,
        onDatesChange: this.handleDatesChange
      }))))), React.createElement("div", {
        className: "order-filter-item hidden-xs"
      }, React.createElement("div", {
        className: "order-filter-label"
      }, React.createElement("span", {
        className: "order-filter-name capitalize " + this.state.classNames.shipping
      }, this.shippingLabel()), React.createElement("div", {
        className: "order-filter-icons"
      }, React.createElement(Components.Button, {
        className: "order-filter-button " + this.state.classNames.shipping,
        onClick: function () {
          _this2.setState({
            shippingLabel: "shippingStatus",
            classNames: (0, _objectSpread2.default)({}, _this2.state.classNames, {
              shipping: ""
            })
          });

          _this2.props.clearFilter("shipping");
        }
      }, React.createElement("i", {
        className: "fa fa-filter"
      })), React.createElement(Components.DropDownMenu, {
        buttonElement: this.buttonElement(),
        menuClassName: "status-dropdown",
        className: "order-menu-item-dropdown",
        onChange: this.handleShippingChange,
        attachment: "bottom " + attachmentDirection,
        targetAttachment: "top " + attachmentDirection
      }, Constants.shippingStatus.map(function (status, index) {
        return React.createElement(Components.MenuItem, {
          key: index,
          label: status.label,
          i18nKeyLabel: "order." + status.value,
          value: status.value
        });
      }))))));
    }

    return render;
  }();

  return OrderFilter;
}(Component);

OrderFilter.propTypes = {
  clearFilter: PropTypes.func,
  filterDates: PropTypes.func,
  filterShippingStatus: PropTypes.func,
  filterWorkflowStatus: PropTypes.func
};
registerComponent("OrderFilter", OrderFilter);
module.exportDefault(OrderFilter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderSearch.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderSearch.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;

var _compose;

module1.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Components, registerComponent, withPermissions;
module1.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  withPermissions: function (v) {
    withPermissions = v;
  }
}, 3);

/**
 * @file React class for Search bar on Order Dashboard
 *
 * @module OrderSearch
 * @extends Component
 */
var OrderSearch =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderSearch, _Component);

  function OrderSearch() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      value: ""
      /**
       * @name handleChange()
       * @method
       * @summary handleChange - handler to call onchange of search input
       * @param {string} event - event object
       * @return {null} -
       */

    }, _this.handleChange = function (event) {
      var value = event.target.value;

      _this.setState({
        value: value
      });

      _this.props.handleChange(value);
    }, _this.handleClear = function () {
      _this.setState({
        value: ""
      });

      _this.props.handleChange("");
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = OrderSearch.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "order-search"
      }, React.createElement(Components.TextField, {
        className: "search-input",
        onChange: this.handleChange,
        value: this.state.value,
        i18nKeyPlaceholder: "admin.table.search.placeholder"
      }), React.createElement("i", {
        className: "fa fa-search fa-fw"
      }), React.createElement(Components.Button, {
        className: "search-clear",
        i18nKeyLabel: "admin.table.search.clearSearch",
        label: "Clear",
        onClick: this.handleClear
      }));
    }

    return render;
  }();

  return OrderSearch;
}(Component);

OrderSearch.propTypes = {
  handleChange: PropTypes.func
};
registerComponent("OrderSearch", OrderSearch, withPermissions({
  roles: ["orders"]
}));
module1.exportDefault(_compose(withPermissions({
  roles: ["orders"]
}))(OrderSearch));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderSummary.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderSummary.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var withMoment, Components;
module.watch(require("../../../components/lib"), {
  withMoment: function (v) {
    withMoment = v;
  },
  Components: function (v) {
    Components = v;
  }
}, 2);
var Badge, ClickToCopy;
module.watch(require("../../../ui/client/components"), {
  Badge: function (v) {
    Badge = v;
  },
  ClickToCopy: function (v) {
    ClickToCopy = v;
  }
}, 3);
var getOrderRiskBadge, getOrderRiskStatus, getBillingInfo, getShippingInfo, getTaxRiskStatus;
module.watch(require("../helpers"), {
  getOrderRiskBadge: function (v) {
    getOrderRiskBadge = v;
  },
  getOrderRiskStatus: function (v) {
    getOrderRiskStatus = v;
  },
  getBillingInfo: function (v) {
    getBillingInfo = v;
  },
  getShippingInfo: function (v) {
    getShippingInfo = v;
  },
  getTaxRiskStatus: function (v) {
    getTaxRiskStatus = v;
  }
}, 4);

var OrderSummary =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderSummary, _Component);

  function OrderSummary() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = OrderSummary.prototype;

  _proto.badgeStatus = function () {
    function badgeStatus() {
      var order = this.props.order;
      var orderStatus = order && order.workflow && order.workflow.status;

      if (orderStatus === "new") {
        return "info";
      } else if (orderStatus === "coreOrderWorkflow/processing") {
        return "success";
      } else if (orderStatus === "coreOrderWorkflow/canceled") {
        return "danger";
      } else if (orderStatus === "coreOrderWorkflow/completed") {
        return "primary";
      }

      return "default";
    }

    return badgeStatus;
  }();

  _proto.orderLink = function () {
    function orderLink() {
      var orderId = this.props.order._id;
      return orderId;
    }

    return orderLink;
  }();

  _proto.truncateId = function () {
    function truncateId() {
      var orderId = this.props.order._id;
      var shortId = orderId.slice(-5);
      return shortId;
    }

    return truncateId;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          dateFormat = _props.dateFormat,
          moment = _props.moment,
          order = _props.order,
          profileShippingAddress = _props.profileShippingAddress,
          printableLabels = _props.printableLabels,
          tracking = _props.tracking;
      var paymentMethod = getBillingInfo(order).paymentMethod || {};
      var invoice = getBillingInfo(order).invoice || {};
      var shipmentMethod = getShippingInfo(order).shipmentMethod || {};
      var orderPaymentRisk = getOrderRiskStatus(order);
      var orderTaxRisk = getTaxRiskStatus(order);
      return React.createElement("div", null, React.createElement("div", {
        className: "order-summary-form-group bg-info",
        style: {
          lineHeight: 3,
          marginTop: -15,
          marginRight: -15,
          marginLeft: -15
        }
      }, React.createElement("strong", {
        style: {
          marginLeft: 15
        }
      }, profileShippingAddress && profileShippingAddress.fullName), React.createElement("div", {
        className: "invoice-details",
        style: {
          marginRight: 15,
          position: "relative"
        }
      }, order.email)), React.createElement("div", {
        className: "roll-up-invoice-list"
      }, React.createElement("div", {
        className: "roll-up-content"
      }, React.createElement("div", {
        style: {
          marginBottom: 4
        }
      }, React.createElement(Badge, {
        badgeSize: "large",
        i18nKeyLabel: "cartDrawer." + (order && order.workflow && order.workflow.status),
        label: order && order.workflow && order.workflow.status,
        status: this.badgeStatus()
      }), orderPaymentRisk && React.createElement(Badge, {
        badgeSize: "large",
        className: "risk-info risk-info-detail " + orderPaymentRisk,
        i18nKeyLabel: "admin.orderRisk." + orderPaymentRisk,
        label: orderPaymentRisk,
        status: getOrderRiskBadge(orderPaymentRisk)
      }), orderTaxRisk && React.createElement("div", {
        className: "risk-info risk-tax"
      }, React.createElement(Components.Translation, {
        i18nKey: "admin.orderRisk.orderTaxRisk",
        defaultValue: "Tax not calulated"
      }))), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "order.orderId"
      }, "Order ID"), React.createElement("div", {
        className: "invoice-details",
        style: {
          cursor: "pointer"
        }
      }, React.createElement(ClickToCopy, {
        copyToClipboard: this.orderLink(),
        displayText: order._id,
        i18nKeyTooltip: "admin.orderWorkflow.summary.copyOrderLink",
        tooltip: "Copy Order Link"
      }))), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "order.created"
      }, "Created"), React.createElement("div", {
        className: "invoice-details"
      }, moment && moment(order.createdAt).fromNow(), " | ", dateFormat(order.createdAt, "MM/D/YYYY"))), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "order.processor"
      }, "Processor"), React.createElement("div", {
        className: "invoice-details"
      }, paymentMethod && paymentMethod.processor)), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "order.payment"
      }, "Payment"), React.createElement("div", {
        className: "invoice-details"
      }, paymentMethod.storedCard, " (", invoice.total, ")")), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "order.transaction"
      }, "Transaction"), React.createElement("div", {
        className: "invoice-details"
      }, paymentMethod.transactionId)), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "orderShipping.carrier"
      }, "Carrier"), React.createElement("div", {
        className: "invoice-details"
      }, shipmentMethod.carrier, " - ", shipmentMethod.label)), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "orderShipping.tracking"
      }, "Tracking"), React.createElement("div", {
        className: "invoice-details"
      }, tracking())), printableLabels() && React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "orderShipping.printLabels"
      }, "Labels"), printableLabels().shippingLabelUrl ? React.createElement("a", {
        className: "invoice-details",
        href: printableLabels().shippingLabelUrl,
        target: "_blank"
      }, React.createElement("span", {
        "data-i18n": "orderShipping.printShippingLabel"
      }, "Print Shipping")) : React.createElement("a", {
        className: "invoice-details",
        href: printableLabels().customsLabelUrl,
        target: "_blank"
      }, React.createElement("span", {
        "data-i18n": "orderShipping.printCustomsLabel"
      }, "Print Customs"))))), React.createElement("br", null), React.createElement("div", {
        className: "order-summary-form-group"
      }, React.createElement("strong", {
        "data-i18n": "orderShipping.shipTo"
      }, "Ship to"), React.createElement("div", {
        className: "invoice-details"
      }, React.createElement("strong", null, "Phone: "), profileShippingAddress.phone)), React.createElement("div", {
        style: {
          marginTop: 4
        }
      }, React.createElement("span", null, profileShippingAddress.fullName), React.createElement("br", null), React.createElement("span", null, profileShippingAddress.address1), profileShippingAddress.address2 && React.createElement("span", null, React.createElement("br", null), profileShippingAddress.address2), React.createElement("br", null), React.createElement("span", null, profileShippingAddress.city, ", ", profileShippingAddress.region, ", ", profileShippingAddress.country, " ", profileShippingAddress.postal)));
    }

    return render;
  }();

  return OrderSummary;
}(Component);

OrderSummary.propTypes = {
  dateFormat: PropTypes.func,
  moment: PropTypes.func,
  order: PropTypes.object,
  printableLabels: PropTypes.func,
  profileShippingAddress: PropTypes.object,
  shipmentStatus: PropTypes.func,
  tracking: PropTypes.func
};
module.exportDefault(withMoment(OrderSummary));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderTable.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderTable.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Avatar;
module.watch(require("react-avatar"), {
  "default": function (v) {
    Avatar = v;
  }
}, 2);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var formatPriceString, i18next;
module.watch(require("../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Orders;
module.watch(require("../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 5);
var Components, withMoment;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  withMoment: function (v) {
    withMoment = v;
  }
}, 6);
var Badge, ClickToCopy, Icon, Translation, Checkbox, Loading, SortableTable;
module.watch(require("../../../ui/client/components"), {
  Badge: function (v) {
    Badge = v;
  },
  ClickToCopy: function (v) {
    ClickToCopy = v;
  },
  Icon: function (v) {
    Icon = v;
  },
  Translation: function (v) {
    Translation = v;
  },
  Checkbox: function (v) {
    Checkbox = v;
  },
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 7);
var getOrderRiskBadge, getOrderRiskStatus, getBillingInfo, getShippingInfo;
module.watch(require("../helpers"), {
  getOrderRiskBadge: function (v) {
    getOrderRiskBadge = v;
  },
  getOrderRiskStatus: function (v) {
    getOrderRiskStatus = v;
  },
  getBillingInfo: function (v) {
    getBillingInfo = v;
  },
  getShippingInfo: function (v) {
    getShippingInfo = v;
  }
}, 8);
var OrderTableColumn;
module.watch(require("./orderTableColumn"), {
  "default": function (v) {
    OrderTableColumn = v;
  }
}, 9);
var OrderBulkActionsBar;
module.watch(require("./orderBulkActionsBar"), {
  "default": function (v) {
    OrderBulkActionsBar = v;
  }
}, 10);
var classNames = {
  colClassNames: {
    name: "order-table-column-name",
    email: "order-table-column-email",
    date: "order-table-column-date hidden-xs hidden-sm",
    id: "order-table-column-id hidden-xs hidden-sm",
    total: "order-table-column-total",
    shipping: "order-table-column-shipping hidden-xs hidden-sm",
    status: "order-table-column-status",
    control: "order-table-column-control"
  },
  headerClassNames: {
    name: "order-table-header-name",
    email: "order-table-header-email",
    date: "order-table-header-date hidden-xs hidden-sm",
    id: "order-table-header-id hidden-xs hidden-sm",
    total: "order-table-header-total",
    shipping: "order-table-header-shipping hidden-xs hidden-sm",
    status: "order-table-header-status",
    control: "order-table-header-control"
  }
};

var OrderTable =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderTable, _Component);

  function OrderTable() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.onPageChange = function (index) {
      _this.props.onPageChange(index);
    }, _this.onPageSizeChange = function (pageSize, pageIndex) {
      _this.props.onPageSizeChange(pageSize, pageIndex);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = OrderTable.prototype;

  _proto.fulfillmentBadgeStatus = function () {
    function fulfillmentBadgeStatus(order) {
      var orderStatus = order.workflow.status;

      if (orderStatus === "new") {
        return "info";
      } else if (orderStatus === "coreOrderWorkflow/processing") {
        return "success";
      } else if (orderStatus === "coreOrderWorkflow/canceled") {
        return "danger";
      } else if (orderStatus === "coreOrderWorkflow/completed") {
        return "primary";
      }

      return "default";
    }

    return fulfillmentBadgeStatus;
  }();

  _proto.renderOrderButton = function () {
    function renderOrderButton(order) {
      var _this2 = this;

      var startWorkflow = order.workflow.status === "new";
      var classes = classnames({
        "rui": true,
        "btn": true,
        "btn-success": startWorkflow
      });
      var chevronDirection = i18next.dir() === "rtl" ? "left" : "right";
      return React.createElement("button", {
        className: classes,
        onClick: function () {
          return _this2.props.handleClick(order, startWorkflow);
        }
      }, React.createElement(Icon, {
        icon: "fa fa-chevron-" + chevronDirection
      }));
    }

    return renderOrderButton;
  }();

  _proto.renderOrderInfo = function () {
    function renderOrderInfo(order) {
      var _props = this.props,
          displayMedia = _props.displayMedia,
          moment = _props.moment;
      var invoice = getBillingInfo(order).invoice || {};
      return React.createElement("div", {
        className: "order-info"
      }, React.createElement("div", {
        className: "order-totals"
      }, React.createElement("span", {
        className: "order-data order-data-date"
      }, React.createElement("strong", null, "Date: "), moment && moment(order.createdAt).fromNow() || order.createdAt.toLocaleString(), "\xA0|\xA0", moment && moment(order.createdAt).format("MM/D/YYYY") || order.createdAt.toLocaleString()), React.createElement("span", {
        className: "order-data order-data-id"
      }, React.createElement("strong", null, "Order ID: "), React.createElement(ClickToCopy, {
        copyToClipboard: order._id,
        displayText: order._id,
        i18nKeyTooltip: "admin.orderWorkflow.summary.copyOrderLink",
        tooltip: "Copy Order Link"
      })), React.createElement("span", {
        className: "order-data order-data-total"
      }, React.createElement("strong", null, "Total: ", formatPriceString(invoice.total)))), React.createElement("div", {
        className: "order-items"
      }, order.items.map(function (item, i) {
        return React.createElement("div", {
          className: "order-item",
          key: i
        }, React.createElement("div", {
          className: "order-item-media"
        }, React.createElement(Components.ProductImage, {
          item: item,
          displayMedia: displayMedia,
          size: "thumbnail",
          badge: true
        })));
      })));
    }

    return renderOrderInfo;
  }();

  _proto.renderShipmentInfo = function () {
    function renderShipmentInfo(order) {
      var emailAddress = order.email || React.createElement(Translation, {
        defaultValue: "Email not available",
        i18nKey: "admin.orderWorkflow.ordersList.emailNotFound"
      });
      var shipping = getShippingInfo(order);
      var orderRisk = getOrderRiskStatus(order);
      return React.createElement("div", {
        className: "shipment-info"
      }, React.createElement("div", {
        className: "customer-info"
      }, React.createElement(Avatar, {
        email: order.email,
        round: true,
        name: shipping.address && shipping.address.fullName,
        size: 30,
        className: "rui-order-avatar"
      }), React.createElement("strong", null, shipping.address && shipping.address.fullName), " | ", emailAddress, orderRisk && React.createElement(Badge, {
        className: "risk-info",
        i18nKeyLabel: "admin.orderRisk." + orderRisk,
        status: getOrderRiskBadge(orderRisk)
      })), React.createElement("div", {
        className: "workflow-info"
      }, React.createElement(Badge, {
        badgeSize: "large",
        i18nKeyLabel: "cartDrawer." + (shipping.workflow && shipping.workflow.status),
        label: shipping.workflow && shipping.workflow.status,
        status: "basic"
      }), React.createElement(Badge, {
        badgeSize: "large",
        i18nKeyLabel: "cartDrawer." + order.workflow.status,
        label: order.workflow.status,
        status: this.fulfillmentBadgeStatus(order)
      })));
    }

    return renderShipmentInfo;
  }();
  /**
   * Render Sortable Table for the list view for orders
   * @param {Object} orders object containing info for order
   * @return {Component} SortableTable list of orders
   */


  _proto.renderOrderCard = function () {
    function renderOrderCard(order) {
      var _this3 = this;

      return React.createElement("div", {
        className: "rui card order"
      }, React.createElement("div", {
        className: "content",
        onClick: function () {
          return _this3.props.handleClick(order, false);
        },
        role: "presentation"
      }, this.renderShipmentInfo(order), this.renderOrderInfo(order)), React.createElement("div", {
        className: "controls",
        onClick: function () {
          return _this3.props.handleClick(order);
        },
        role: "presentation"
      }, this.renderOrderButton(order)));
    }

    return renderOrderCard;
  }();

  _proto.render = function () {
    function render() {
      var _this4 = this;

      var getTrProps;
      var getTheadProps;
      var getTrGroupProps;
      var getTableProps;
      var customColumnMetadata = [];

      if (this.props.isOpen) {
        // Render order list column/row data
        var filteredFields = {
          name: {
            accessor: function (row) {
              return getShippingInfo(row).address && getShippingInfo(row).address.fullName;
            },
            id: "shippingFullName"
          },
          email: {
            accessor: "email",
            id: "email"
          },
          date: {
            accessor: "createdAt",
            id: "createdAt"
          },
          id: {
            accessor: "_id",
            id: "_id"
          },
          total: {
            accessor: function (row) {
              return getBillingInfo(row).invoice && getBillingInfo(row).invoice.total;
            },
            id: "billingTotal"
          },
          shipping: {
            accessor: function (row) {
              return getShippingInfo(row).workflow && getShippingInfo(row).workflow.status;
            },
            id: "shippingStatus"
          },
          status: {
            accessor: "workflow.status",
            id: "workflow.status"
          },
          control: {
            accessor: "",
            id: ""
          }
        };
        var columnNames = Object.keys(filteredFields);

        getTheadProps = function () {
          return {
            className: "order-table-thead"
          };
        };

        getTrGroupProps = function () {
          return {
            className: "order-table-tr-group"
          };
        };

        getTableProps = function () {
          return {
            className: "order-table-list"
          };
        }; // https://react-table.js.org/#/story/cell-renderers-custom-components


        columnNames.forEach(function (columnName) {
          var colHeader;
          var resizable = true;
          var sortable = true;
          var columnNameLabel; // Add custom styles for the column name `name`

          if (columnName === "name") {
            colHeader = function () {
              return React.createElement("div", {
                className: "order-table-name-cell"
              }, React.createElement(Checkbox, {
                className: "order-header-checkbox checkbox-large",
                checked: _this4.props.multipleSelect,
                name: "orders-checkbox",
                onChange: function () {
                  return _this4.props.selectAllOrders(_this4.props.orders, _this4.props.multipleSelect);
                }
              }), React.createElement("span", {
                style: {
                  marginTop: 10
                }
              }, React.createElement(Translation, {
                defaultValue: "Name",
                i18nKey: "admin.table.headers.name"
              })));
            };
          } else if (columnName === "control") {
            colHeader = " ";
            resizable = false;
            sortable = false;
          } else {
            columnNameLabel = i18next.t("admin.table.headers." + columnName);
          }

          var columnMeta = {
            accessor: filteredFields[columnName].accessor,
            id: filteredFields[columnName].id,
            Header: colHeader || columnNameLabel,
            headerClassName: classNames.headerClassNames[columnName],
            className: classNames.colClassNames[columnName],
            resizable: resizable,
            sortable: sortable,
            Cell: function (row) {
              return React.createElement(OrderTableColumn, {
                row: row,
                handleClick: _this4.props.handleClick,
                handleSelect: _this4.props.handleSelect,
                selectedItems: _this4.props.selectedItems,
                fulfillmentBadgeStatus: _this4.fulfillmentBadgeStatus
              });
            }
          };
          customColumnMetadata.push(columnMeta);
        });
      } else {
        // Render order detail column/row data
        var columnMeta = {
          Cell: function (row) {
            return React.createElement("div", null, _this4.renderOrderCard(row.original));
          }
        };
        customColumnMetadata.push(columnMeta);

        getTheadProps = function () {
          return {
            className: "hidden"
          };
        };

        getTrGroupProps = function () {
          return {
            className: "order-table-details-tr-group"
          };
        };

        getTableProps = function () {
          return {
            className: "order-table-detail"
          };
        };

        getTrProps = function () {
          return {
            className: "order-table-detail-tr"
          };
        };
      }

      return React.createElement("div", {
        className: "order-details-table"
      }, this.props.isOpen && React.createElement(OrderBulkActionsBar, {
        shipping: this.props.shipping,
        multipleSelect: this.props.multipleSelect,
        orders: this.props.orders,
        selectAllOrders: this.props.selectAllOrders,
        selectedItems: this.props.selectedItems,
        setShippingStatus: this.props.setShippingStatus,
        isLoading: this.props.isLoading,
        renderFlowList: this.props.renderFlowList,
        toggleShippingFlowList: this.props.toggleShippingFlowList,
        handleBulkPaymentCapture: this.props.handleBulkPaymentCapture
      }), React.createElement(SortableTable, {
        tableClassName: "rui order table -highlight " + (this.props.selectedItems.length > 0 ? "table-header-hidden" : "table-header-visible"),
        collection: Orders,
        data: this.props.orders,
        query: this.props.query,
        columnMetadata: customColumnMetadata,
        externalLoadingComponent: Loading,
        filterType: "none",
        selectedRows: this.props.selectedItems,
        getTheadProps: getTheadProps,
        getTrProps: getTrProps,
        getTrGroupProps: getTrGroupProps,
        getPaginationProps: function () {
          return {
            className: "order-table-pagination-visible"
          };
        },
        getTableProps: getTableProps,
        showPaginationTop: !this.props.selectedItems.length,
        onPageChange: this.onPageChange,
        onPageSizeChange: this.onPageSizeChange,
        pages: this.props.pages,
        page: this.props.page,
        manual: true
      }));
    }

    return render;
  }();

  return OrderTable;
}(Component);

OrderTable.propTypes = {
  displayMedia: PropTypes.func,
  handleBulkPaymentCapture: PropTypes.func,
  handleClick: PropTypes.func,
  handleSelect: PropTypes.func,
  isLoading: PropTypes.object,
  isOpen: PropTypes.bool,
  moment: PropTypes.func,
  multipleSelect: PropTypes.bool,
  onPageChange: PropTypes.func,
  onPageSizeChange: PropTypes.func,
  orders: PropTypes.array,
  page: PropTypes.number,
  pages: PropTypes.number,
  query: PropTypes.object,
  renderFlowList: PropTypes.bool,
  selectAllOrders: PropTypes.func,
  selectedItems: PropTypes.array,
  setShippingStatus: PropTypes.func,
  shipping: PropTypes.object,
  toggleShippingFlowList: PropTypes.func
  /**
   * Fullfilment Badge
   * @param  {Object} order object containing info for order and coreOrderWorkflow
   * @return {string} A string containing the type of Badge
   */

};
module.exportDefault(withMoment(OrderTable));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderTableColumn.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/orderTableColumn.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var formatPriceString, i18next;
module.watch(require("../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var Avatar;
module.watch(require("react-avatar"), {
  "default": function (v) {
    Avatar = v;
  }
}, 4);
var withMoment;
module.watch(require("../../../components/lib"), {
  withMoment: function (v) {
    withMoment = v;
  }
}, 5);
var Badge, ClickToCopy, Icon, RolloverCheckbox, Checkbox;
module.watch(require("../../../ui/client/components"), {
  Badge: function (v) {
    Badge = v;
  },
  ClickToCopy: function (v) {
    ClickToCopy = v;
  },
  Icon: function (v) {
    Icon = v;
  },
  RolloverCheckbox: function (v) {
    RolloverCheckbox = v;
  },
  Checkbox: function (v) {
    Checkbox = v;
  }
}, 6);
var getOrderRiskBadge, getOrderRiskStatus, getBillingInfo, getTaxRiskStatus;
module.watch(require("../helpers"), {
  getOrderRiskBadge: function (v) {
    getOrderRiskBadge = v;
  },
  getOrderRiskStatus: function (v) {
    getOrderRiskStatus = v;
  },
  getBillingInfo: function (v) {
    getBillingInfo = v;
  },
  getTaxRiskStatus: function (v) {
    getTaxRiskStatus = v;
  }
}, 7);

var OrderTableColumn =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderTableColumn, _Component);

  function OrderTableColumn() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = OrderTableColumn.prototype;

  _proto.renderCheckboxOnSelect = function () {
    function renderCheckboxOnSelect(row) {
      if (this.props.selectedItems.length) {
        return React.createElement("div", {
          className: "all-checkboxes"
        }, React.createElement(Checkbox, {
          className: "checkbox-large checkbox-avatar",
          name: row.original._id,
          onChange: this.props.handleSelect,
          checked: this.props.selectedItems.includes(row.original._id)
        }));
      }

      return React.createElement(RolloverCheckbox, {
        checkboxClassName: "checkbox-avatar checkbox-large",
        name: row.original._id,
        onChange: this.props.handleSelect,
        checked: this.props.selectedItems.includes(row.original._id)
      }, React.createElement(Avatar, {
        email: row.original.email,
        round: true,
        name: row.value,
        size: 30,
        className: "rui-order-avatar"
      }));
    }

    return renderCheckboxOnSelect;
  }();

  _proto.render = function () {
    function render() {
      var _this = this;

      var columnAccessor = this.props.row.column.id;
      var invoice = getBillingInfo(this.props.row.original).invoice || {};
      var moment = this.props.moment;
      var orderPaymentRisk = getOrderRiskStatus(this.props.row.original);
      var orderTaxRisk = getTaxRiskStatus(this.props.row.original);
      var orderRisk = orderPaymentRisk || orderTaxRisk;

      if (columnAccessor === "shippingFullName") {
        return React.createElement("div", {
          style: {
            display: "inline-flex"
          }
        }, this.renderCheckboxOnSelect(this.props.row), React.createElement("strong", {
          className: "orders-full-name"
        }, this.props.row.value, orderRisk && React.createElement(Badge, {
          className: "risk-info",
          i18nKeyLabel: "admin.orderRisk." + orderRisk,
          status: getOrderRiskBadge(orderRisk)
        })));
      }

      if (columnAccessor === "email") {
        return React.createElement("div", {
          style: {
            marginTop: 7
          }
        }, this.props.row.value);
      }

      if (columnAccessor === "createdAt") {
        var createdDate = moment && moment(this.props.row.value).format("MM/D/YYYY") || this.props.row.value.toLocaleString();
        return React.createElement("div", {
          style: {
            marginTop: 7
          }
        }, createdDate);
      }

      if (columnAccessor === "_id") {
        var id = this.props.row.original._id;
        var truncatedId = id.substring(0, 4);
        return React.createElement("div", {
          style: {
            marginTop: 7
          }
        }, React.createElement(ClickToCopy, {
          copyToClipboard: id,
          displayText: truncatedId,
          i18nKeyTooltip: "admin.orderWorkflow.summary.copyOrderLink",
          tooltip: "Copy Order Link"
        }));
      }

      if (columnAccessor === "billingTotal") {
        return React.createElement("div", {
          style: {
            marginTop: 7
          }
        }, React.createElement("strong", null, formatPriceString(invoice.total)));
      }

      if (columnAccessor === "shippingStatus") {
        return React.createElement(Badge, {
          className: "orders-badge",
          badgeSize: "large",
          i18nKeyLabel: "admin.table.data.status." + this.props.row.value,
          label: this.props.row.value,
          status: "basic"
        });
      }

      if (columnAccessor === "workflow.status") {
        return React.createElement("div", {
          className: "status-info"
        }, React.createElement(Badge, {
          badgeSize: "large",
          i18nKeyLabel: "admin.table.data.status." + this.props.row.value,
          label: this.props.row.value,
          status: this.props.fulfillmentBadgeStatus(this.props.row.original)
        }));
      }

      if (columnAccessor === "") {
        var startWorkflow = this.props.row.original.workflow.status === "new";
        var classes = classnames({
          "rui": true,
          "btn": true,
          "btn-success": startWorkflow
        });
        var chevronDirection = i18next.dir() === "rtl" ? "left" : "right";
        return React.createElement("button", {
          className: classes,
          onClick: function () {
            return _this.props.handleClick(_this.props.row.original, startWorkflow);
          }
        }, React.createElement(Icon, {
          icon: "fa fa-chevron-" + chevronDirection
        }));
      }

      return React.createElement("span", null, this.props.row.value);
    }

    return render;
  }();

  return OrderTableColumn;
}(Component);

OrderTableColumn.propTypes = {
  fulfillmentBadgeStatus: PropTypes.func,
  handleClick: PropTypes.func,
  handleSelect: PropTypes.func,
  moment: PropTypes.func,
  row: PropTypes.object,
  selectedItems: PropTypes.array
};
module.exportDefault(withMoment(OrderTableColumn));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productImage.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/components/productImage.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var Badge;
module.watch(require("../../../ui/client/components"), {
  Badge: function (v) {
    Badge = v;
  }
}, 3);
var MEDIA_PLACEHOLDER = "/resources/placeholder.gif";

var ProductImage =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductImage, _Component);

  function ProductImage() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ProductImage.prototype;

  _proto.renderBadge = function () {
    function renderBadge() {
      var _props = this.props,
          badge = _props.badge,
          item = _props.item;
      if (!badge) return false;
      return React.createElement(Badge, {
        badgeSize: "small",
        label: item.quantity,
        status: "success"
      });
    }

    return renderBadge;
  }();

  _proto.render = function () {
    function render() {
      var _props2 = this.props,
          displayMedia = _props2.displayMedia,
          item = _props2.item,
          mode = _props2.mode,
          size = _props2.size;
      var fileRecord = displayMedia(item);
      var mediaUrl;

      if (fileRecord) {
        mediaUrl = fileRecord.url({
          store: size
        });
      } else {
        mediaUrl = MEDIA_PLACEHOLDER;
      }

      if (mode === "span") {
        return React.createElement("span", {
          className: "product-image",
          style: {
            backgroundImage: "url('" + mediaUrl + "')"
          }
        });
      }

      return React.createElement("div", null, React.createElement("img", {
        alt: item.title,
        className: "product-image product-image-" + size,
        src: mediaUrl
      }), this.renderBadge());
    }

    return render;
  }();

  return ProductImage;
}(Component);

ProductImage.propTypes = {
  badge: PropTypes.bool,
  displayMedia: PropTypes.func.isRequired,
  item: PropTypes.shape({
    quantity: PropTypes.number,
    title: PropTypes.string.isRequired
  }).isRequired,
  mode: PropTypes.oneOf(["span", "img"]),
  size: PropTypes.string
};
ProductImage.defaultProps = {
  badge: false,
  mode: "img",
  size: "large"
};
registerComponent("ProductImage", ProductImage);
module.exportDefault(ProductImage);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"invoiceContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/containers/invoiceContainer.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _sumBy;

module.watch(require("lodash/sumBy"), {
  "default": function (v) {
    _sumBy = v;
  }
}, 0);

var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 3);
var accounting;
module.watch(require("accounting-js"), {
  "default": function (v) {
    accounting = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var i18next, Logger, Reaction, formatPriceString;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  Logger: function (v) {
    Logger = v;
  },
  Reaction: function (v) {
    Reaction = v;
  },
  formatPriceString: function (v) {
    formatPriceString = v;
  }
}, 6);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 7);
var getPrimaryMediaForOrderItem;
module.watch(require("../../../../../../lib/api"), {
  getPrimaryMediaForOrderItem: function (v) {
    getPrimaryMediaForOrderItem = v;
  }
}, 8);
var composeWithTracker, registerComponent;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 9);
var Invoice;
module.watch(require("../components/invoice.js"), {
  "default": function (v) {
    Invoice = v;
  }
}, 10);
var getOrderRiskStatus, getOrderRiskBadge, getBillingInfo;
module.watch(require("../helpers"), {
  getOrderRiskStatus: function (v) {
    getOrderRiskStatus = v;
  },
  getOrderRiskBadge: function (v) {
    getOrderRiskBadge = v;
  },
  getBillingInfo: function (v) {
    getBillingInfo = v;
  }
}, 11);

var InvoiceContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(InvoiceContainer, _Component);

  function InvoiceContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handlePopOverOpen = function (event) {
      event.preventDefault();

      _this.setState({
        popOverIsOpen: true
      });
    };

    _this.handleClearRefunds = function () {
      _this.setState({
        editedItems: [],
        selectedItems: [],
        selectAllItems: false,
        popOverIsOpen: false
      });
    };

    _this.handleItemSelect = function (lineItem) {
      var _this$state = _this.state,
          selectedItems = _this$state.selectedItems,
          editedItems = _this$state.editedItems; // if item is not in the selectedItems array

      if (!selectedItems.includes(lineItem._id)) {
        // include it in the array
        selectedItems.push(lineItem._id); // Add every quantity in the row to be refunded

        var isEdited = editedItems.find(function (item) {
          return item.id === lineItem._id;
        });
        var adjustedQuantity = lineItem.quantity - _this.state.value;

        if (isEdited) {
          editedItems = editedItems.filter(function (item) {
            return item.id !== lineItem._id;
          });
          isEdited.refundedTotal = lineItem.variants.price * adjustedQuantity;
          isEdited.refundedQuantity = adjustedQuantity;
          editedItems.push(isEdited);
        } else {
          editedItems.push({
            id: lineItem._id,
            title: lineItem.title,
            refundedTotal: lineItem.variants.price * lineItem.quantity,
            refundedQuantity: lineItem.quantity
          });
        }

        _this.setState({
          editedItems: editedItems,
          selectedItems: selectedItems,
          isUpdating: true,
          selectAllItems: false
        });
      } else {
        // remove item from selected items
        selectedItems = selectedItems.filter(function (id) {
          return id !== lineItem._id;
        }); // remove item from edited quantities

        editedItems = editedItems.filter(function (item) {
          return item.id !== lineItem._id;
        });

        _this.setState({
          editedItems: editedItems,
          selectedItems: selectedItems,
          isUpdating: true,
          selectAllItems: false
        });
      }
    };

    _this.handleSelectAllItems = function (uniqueItems) {
      if (_this.state.selectAllItems) {
        // if all items are selected, clear the selectedItems array
        // and set selectAllItems to false
        _this.setState({
          selectedItems: [],
          editedItems: [],
          selectAllItems: false
        });
      } else {
        // if there are no selected items, or if there are some items that have been
        // selected but not all of them, loop through the items array and return a
        // new array with item ids only, then set the selectedItems array with the itemIds
        var updateEditedItems = [];
        var itemIds = uniqueItems.map(function (item) {
          // on select all refunded quantity should be all existing items
          updateEditedItems.push({
            id: item._id,
            title: item.title,
            refundedTotal: item.variants.price * item.quantity,
            refundedQuantity: item.quantity
          });
          return item._id;
        });

        _this.setState({
          editedItems: updateEditedItems,
          selectedItems: itemIds,
          selectAllItems: true,
          isUpdating: true
        });
      }
    };

    _this.handleInputChange = function (event, value, lineItem) {
      var editedItems = _this.state.editedItems;
      var isEdited = editedItems.find(function (item) {
        return item.id === lineItem._id;
      });
      var refundedQuantity = lineItem.quantity - value;

      if (isEdited) {
        editedItems = editedItems.filter(function (item) {
          return item.id !== lineItem._id;
        });
        isEdited.refundedTotal = lineItem.variants.price * refundedQuantity;
        isEdited.refundedQuantity = refundedQuantity;

        if (refundedQuantity !== 0) {
          editedItems.push(isEdited);
        }
      } else if (refundedQuantity !== 0) {
        editedItems.push({
          id: lineItem._id,
          title: lineItem.title,
          refundedTotal: lineItem.variants.price * refundedQuantity,
          refundedQuantity: refundedQuantity
        });
      }

      _this.setState({
        editedItems: editedItems,
        value: value
      });
    };

    _this.getRefundedItemsInfo = function () {
      var editedItems = _this.state.editedItems;
      return {
        quantity: editedItems.reduce(function (acc, item) {
          return acc + item.refundedQuantity;
        }, 0),
        total: editedItems.reduce(function (acc, item) {
          return acc + item.refundedTotal;
        }, 0),
        items: editedItems
      };
    };

    _this.handleApprove = function (event) {
      event.preventDefault();
      var order = _this.state.order;
      approvePayment(order);
    };

    _this.handleCapturePayment = function (event) {
      event.preventDefault();

      _this.setState({
        isCapturing: true
      });

      var order = _this.state.order;
      capturePayments(order, function () {
        _this.setState({
          isCapturing: false
        });
      });
    };

    _this.handleCancelPayment = function (event) {
      event.preventDefault();
      var order = _this.state.order;
      var invoiceTotal = getBillingInfo(order).invoice && getBillingInfo(order).invoice.total;
      var currencySymbol = _this.state.currency.symbol;
      Meteor.subscribe("Packages", Reaction.getShopId());
      var packageId = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.paymentPackageId;
      var settingsKey = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.paymentSettingsKey; // check if payment provider supports de-authorize

      var checkSupportedMethods = Packages.findOne({
        _id: packageId,
        shopId: Reaction.getShopId()
      }).settings[settingsKey].support;
      var orderStatus = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.status;
      var orderMode = getBillingInfo(order).paymentMethod && getBillingInfo(order).paymentMethod.mode;
      var alertText;

      if (_includes(checkSupportedMethods, "de-authorize") || orderStatus === "completed" && orderMode === "capture") {
        alertText = i18next.t("order.applyRefundDuringCancelOrder", {
          currencySymbol: currencySymbol,
          invoiceTotal: invoiceTotal
        });
      } // TODO: Redesign the cancel order workflow to be more intuitive


      Alerts.alert({
        title: i18next.t("order.cancelOrder"),
        text: alertText,
        type: "warning",
        showCancelButton: true,
        showCloseButton: true,
        confirmButtonColor: "#98afbc",
        cancelButtonColor: "#98afbc",
        confirmButtonText: i18next.t("order.cancelOrderNoRestock"),
        cancelButtonText: i18next.t("order.cancelOrderThenRestock")
      }, function (isConfirm, cancel) {
        var returnToStock;

        if (isConfirm) {
          returnToStock = false;
          return Meteor.call("orders/cancelOrder", order, returnToStock);
        }

        if (cancel === "cancel") {
          returnToStock = true;
          return Meteor.call("orders/cancelOrder", order, returnToStock);
        }
      });
    };

    _this.handleRefund = function (event, value) {
      event.preventDefault();
      var currencySymbol = _this.state.currency.symbol;
      var order = _this.state.order;
      var paymentMethod = orderCreditMethod(order) && orderCreditMethod(order).paymentMethod;
      var orderTotal = paymentMethod && paymentMethod.amount;
      var discounts = paymentMethod && paymentMethod.discounts;
      var refund = value;
      var refunds = _this.state.refunds;
      var refundTotal = refunds && Array.isArray(refunds) && refunds.reduce(function (acc, item) {
        return acc + parseFloat(item.amount);
      }, 0);
      var adjustedTotal; // TODO extract Stripe specific fullfilment payment handling out of core.
      // Stripe counts discounts as refunds, so we need to re-add the discount to not "double discount" in the adjustedTotal

      if (paymentMethod && paymentMethod.processor === "Stripe") {
        adjustedTotal = accounting.toFixed(orderTotal + discounts - refundTotal, 2);
      } else {
        adjustedTotal = accounting.toFixed(orderTotal - refundTotal, 2);
      }

      if (refund > adjustedTotal) {
        Alerts.inline("Refund(s) total cannot be greater than adjusted total", "error", {
          placement: "coreOrderRefund",
          i18nKey: "order.invalidRefund",
          autoHide: 10000
        });
      } else {
        Alerts.alert({
          title: i18next.t("order.applyRefundToThisOrder", {
            refund: refund,
            currencySymbol: currencySymbol
          }),
          showCancelButton: true,
          confirmButtonText: i18next.t("order.applyRefund")
        }, function (isConfirm) {
          if (isConfirm) {
            _this.setState({
              isRefunding: true
            });

            Meteor.call("orders/refunds/create", order._id, paymentMethod, refund, function (error, result) {
              if (error) {
                Alerts.alert(error.reason);
              }

              if (result) {
                Alerts.toast(i18next.t("mail.alerts.emailSent"), "success");
              }

              _this.setState({
                isRefunding: false
              });
            });
          }
        });
      }
    };

    _this.handleRefundItems = function () {
      var paymentMethod = orderCreditMethod(_this.state.order) && orderCreditMethod(_this.state.order).paymentMethod;
      var orderMode = paymentMethod && paymentMethod.mode;
      var order = _this.state.order; // Check if payment is yet to be captured approve and capture first before return

      if (orderMode === "authorize") {
        Alerts.alert({
          title: i18next.t("order.refundItemsTitle"),
          type: "warning",
          text: i18next.t("order.refundItemsApproveAlert", {
            refundItemsQuantity: _this.getRefundedItemsInfo().quantity,
            totalAmount: formatPriceString(getBillingInfo(order).invoice && getBillingInfo(order).invoice.total)
          }),
          showCancelButton: true,
          confirmButtonText: i18next.t("order.approveInvoice")
        }, function (isConfirm) {
          if (isConfirm) {
            approvePayment(order);

            _this.alertToCapture(order);
          }
        });
      } else {
        _this.alertToRefund(order);
      }
    };

    _this.alertToCapture = function (order) {
      Alerts.alert({
        title: i18next.t("order.refundItemsTitle"),
        text: i18next.t("order.refundItemsCaptureAlert", {
          refundItemsQuantity: _this.getRefundedItemsInfo().quantity,
          totalAmount: formatPriceString(getBillingInfo(order).invoice && getBillingInfo(order).invoice.total)
        }),
        type: "warning",
        showCancelButton: true,
        confirmButtonText: i18next.t("order.capturePayment")
      }, function (isConfirm) {
        if (isConfirm) {
          capturePayments(order);

          _this.alertToRefund(order);
        }
      });
    };

    _this.alertToRefund = function (order) {
      var paymentMethod = orderCreditMethod(order) && orderCreditMethod(order).paymentMethod;
      var orderMode = paymentMethod && paymentMethod.mode;

      var refundInfo = _this.getRefundedItemsInfo();

      Alerts.alert({
        title: i18next.t("order.refundItemsTitle"),
        text: i18next.t("order.refundItemsAlert", {
          refundItemsQuantity: refundInfo.quantity,
          refundItemsTotal: formatPriceString(refundInfo.total)
        }),
        showCancelButton: true,
        confirmButtonText: i18next.t("order.refundAmount")
      }, function (isConfirm) {
        if (isConfirm) {
          _this.setState({
            isRefunding: true
          }); // Set warning if order is not yet captured


          if (orderMode !== "capture") {
            Alerts.alert({
              text: i18next.t("order.refundItemsWait"),
              type: "warning"
            });

            _this.setState({
              isRefunding: false
            });

            return;
          }

          Meteor.call("orders/refunds/refundItems", _this.state.order._id, paymentMethod, refundInfo, function (error, result) {
            if (result.refund === false) {
              Alerts.alert(result.error.reason || result.error.error);
            }

            if (result.refund === true) {
              Alerts.toast(i18next.t("mail.alerts.emailSent"), "success");
              Alerts.alert({
                text: i18next.t("order.refundItemsSuccess"),
                type: "success",
                allowOutsideClick: false
              });
            }

            _this.setState({
              isRefunding: false,
              popOverIsOpen: false,
              editedItems: [],
              selectedItems: []
            });
          });
        }
      });
    };

    _this.state = {
      currency: props.currency,
      refunds: props.refunds,
      order: props.order,
      isUpdating: false,
      isCapturing: false,
      isRefunding: false,
      popOverIsOpen: false,
      selectAllItems: false,
      selectedItems: [],
      editedItems: [],
      value: undefined
    };
    return _this;
  }

  var _proto = InvoiceContainer.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (nextProps !== this.props) {
        this.setState({
          order: nextProps.order,
          currency: nextProps.currency,
          refunds: nextProps.refunds
        });
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.hasRefundingEnabled = function () {
    function hasRefundingEnabled() {
      var order = this.state.order;
      var orderBillingInfo = getBillingInfo(order);
      var paymentMethodId = orderBillingInfo.paymentMethod && orderBillingInfo.paymentMethod.paymentPackageId;
      var paymentMethodName = orderBillingInfo.paymentMethod && orderBillingInfo.paymentMethod.paymentSettingsKey;
      var paymentMethod = Packages.findOne({
        _id: paymentMethodId
      });
      var isRefundable = paymentMethod && paymentMethod.settings && paymentMethod.settings[paymentMethodName] && paymentMethod.settings[paymentMethodName].support.includes("Refund");
      return isRefundable;
    }

    return hasRefundingEnabled;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Invoice, (0, _extends2.default)({}, this.props, {
        clearRefunds: this.handleClearRefunds,
        handlePopOverOpen: this.handlePopOverOpen,
        handleSelectAllItems: this.handleSelectAllItems,
        onClose: this.handleClose,
        togglePopOver: this.togglePopOver,
        handleInputChange: this.handleInputChange,
        handleItemSelect: this.handleItemSelect,
        displayMedia: getPrimaryMediaForOrderItem,
        toggleUpdating: this.toggleUpdating,
        handleRefundItems: this.handleRefundItems,
        getRefundedItemsInfo: this.getRefundedItemsInfo,
        handleApprove: this.handleApprove,
        isAdjusted: this.isAdjusted,
        handleCapturePayment: this.handleCapturePayment,
        handleRefund: this.handleRefund,
        hasRefundingEnabled: this.hasRefundingEnabled(),
        value: this.state.value,
        refunds: this.state.refunds,
        isCapturing: this.state.isCapturing,
        selectAllItems: this.state.selectAllItems,
        selectedItems: this.state.selectedItems,
        currency: this.state.currency,
        isRefunding: this.state.isRefunding,
        popOverIsOpen: this.state.popOverIsOpen,
        editedItems: this.state.editedItems,
        isUpdating: this.state.isUpdating
      }));
    }

    return render;
  }();

  return InvoiceContainer;
}(Component);
/**
 * @method orderCreditMethod
 * @summary helper method to return the order payment object
 * @param {Object} order - object representing an order
 * @return {Object} object representing entire payment method
 */


InvoiceContainer.propTypes = {
  currency: PropTypes.object,
  isFetching: PropTypes.bool,
  order: PropTypes.object,
  refunds: PropTypes.array,
  uniqueItems: PropTypes.array
};

function orderCreditMethod(order) {
  var billingInfo = getBillingInfo(order);

  if (billingInfo.paymentMethod && billingInfo.paymentMethod.method === "credit") {
    return billingInfo;
  }
}
/**
 * @method approvePayment
 * @summary helper method to approve payment
 * @param {Object} order - object representing an order
 * @return {null} null
 */


function approvePayment(order) {
  var paymentMethod = orderCreditMethod(order);
  var orderTotal = accounting.toFixed(paymentMethod.invoice.subtotal + paymentMethod.invoice.shipping + paymentMethod.invoice.taxes, 2);
  var discount = order.discount; // TODO: review Discount cannot be greater than original total price
  // logic is probably not valid any more. Discounts aren't valid below 0 order.

  if (discount > orderTotal) {
    Alerts.inline("Discount cannot be greater than original total price", "error", {
      placement: "coreOrderShippingInvoice",
      i18nKey: "order.invalidDiscount",
      autoHide: 10000
    });
  } else if (orderTotal === accounting.toFixed(discount, 2)) {
    Alerts.alert({
      title: i18next.t("order.fullDiscountWarning"),
      showCancelButton: true,
      confirmButtonText: i18next.t("order.applyDiscount")
    }, function (isConfirm) {
      if (isConfirm) {
        Meteor.call("orders/approvePayment", order, function (error) {
          if (error) {
            Logger.warn(error);
          }
        });
      }
    });
  } else {
    Meteor.call("orders/approvePayment", order, function (error) {
      if (error) {
        Logger.warn(error);

        if (error.error === "orders/approvePayment.discount-amount") {
          Alerts.inline("Discount cannot be greater than original total price", "error", {
            placement: "coreOrderShippingInvoice",
            i18nKey: "order.invalidDiscount",
            autoHide: 10000
          });
        }
      }
    });
  }
}
/**
 * @method capturePayments
 * @summary helper method to capture payments
 * @param {object} order - object representing an order
 * @param {function} onCancel - called on clicking cancel in alert dialog
 * @return {null} null
 */


function capturePayments(order, onCancel) {
  var capture = function () {
    Meteor.call("orders/capturePayments", order._id);

    if (order.workflow.status === "new") {
      Meteor.call("workflow/pushOrderWorkflow", "coreOrderWorkflow", "processing", order);
      Reaction.Router.setQueryParams({
        filter: "processing",
        _id: order._id
      });
    }
  }; // before capturing, check if there's a payment risk on order; alert admin before capture


  if (getOrderRiskStatus(order)) {
    alertDialog().then(capture).catch(onCancel);
  } else {
    capture();
  }

  function alertDialog() {
    var alertType = "warning";
    var riskBadge = getOrderRiskBadge(getOrderRiskStatus(order)); // use red alert color for high risk level

    if (riskBadge === "danger") {
      alertType = "error";
    }

    return Alerts.alert({
      title: i18next.t("admin.orderRisk.riskCapture"),
      text: i18next.t("admin.orderRisk.riskCaptureWarn"),
      type: alertType,
      showCancelButton: true,
      cancelButtonText: i18next.t("admin.settings.cancel"),
      confirmButtonText: i18next.t("admin.settings.continue")
    });
  }
}

var composer = function (props, onData) {
  var order = props.order,
      refunds = props.refunds;
  var shopBilling = getBillingInfo(order);
  var creditMethod = orderCreditMethod(order);
  var paymentMethod = creditMethod && creditMethod.paymentMethod;
  var orderStatus = creditMethod && creditMethod.paymentMethod && creditMethod.paymentMethod.status;
  var orderDiscounts = creditMethod && creditMethod.invoice.discounts;
  var paymentApproved = orderStatus === "approved";
  var showAfterPaymentCaptured = orderStatus === "completed";

  var paymentCaptured = _includes(["completed", "refunded", "partialRefund"], orderStatus);

  var paymentPendingApproval = _includes(["created", "adjustments", "error"], orderStatus); // get whether adjustments can be made


  var canMakeAdjustments = !_includes(["approved", "completed", "refunded", "partialRefund"], orderStatus); // get adjusted Total

  var adjustedTotal;
  var refundTotal = refunds && Array.isArray(refunds) && refunds.reduce(function (acc, item) {
    return acc + parseFloat(item.amount);
  }, 0);

  if (paymentMethod && paymentMethod.processor === "Stripe") {
    adjustedTotal = Math.abs(paymentMethod.amount + orderDiscounts - refundTotal);
  }

  adjustedTotal = Math.abs(paymentMethod && paymentMethod.amount - refundTotal); // get invoice

  var invoice = Object.assign({}, shopBilling.invoice, {
    totalItems: _sumBy(order.items, function (o) {
      return o.quantity;
    })
  }); // get discounts

  var enabledPaymentsArr = [];
  var apps = Reaction.Apps({
    provides: "paymentMethod",
    enabled: true
  });

  for (var _iterator = apps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var _app = _ref;
    if (_app.enabled === true) enabledPaymentsArr.push(_app);
  }

  var discounts = false;

  for (var _i2 = 0; _i2 < enabledPaymentsArr.length; _i2++) {
    var enabled = enabledPaymentsArr[_i2];

    if (enabled.packageName === "discount-codes") {
      discounts = true;
      break;
    }
  } // get unique lineItems


  var shipment = props.currentData.fulfillment;
  var uniqueItems = order.items.map(function (item) {
    var shipping = shipment && shipment.shipmentMethod;
    item.shipping = shipping;

    if (order.taxes !== undefined) {
      var taxes = order.taxes.slice(0, -1);

      if (taxes.length !== 0) {
        var taxDetail = taxes.find(function (tax) {
          return tax.lineNumber === item._id;
        });
        item.taxDetail = taxDetail;
      }
    }

    return item;
  }); // print order

  var printOrder = Reaction.Router.pathFor("dashboard/pdf/orders", {
    hash: {
      id: props.order._id,
      shipment: props.currentData.fulfillment && props.currentData.fulfillment._id
    }
  });
  onData(null, {
    uniqueItems: uniqueItems,
    invoice: invoice,
    discounts: discounts,
    adjustedTotal: adjustedTotal,
    paymentCaptured: paymentCaptured,
    paymentPendingApproval: paymentPendingApproval,
    paymentApproved: paymentApproved,
    canMakeAdjustments: canMakeAdjustments,
    showAfterPaymentCaptured: showAfterPaymentCaptured,
    printOrder: printOrder,
    currentData: props.currentData,
    currency: props.currency,
    isFetching: props.isFetching,
    order: props.order,
    refunds: props.refunds
  });
};

registerComponent("InvoiceContainer", InvoiceContainer, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(InvoiceContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderDashboardContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/containers/orderDashboardContainer.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var filterShippingStatus, filterWorkflowStatus;
module.watch(require("../helpers"), {
  filterShippingStatus: function (v) {
    filterShippingStatus = v;
  },
  filterWorkflowStatus: function (v) {
    filterWorkflowStatus = v;
  }
}, 3);
var OrderSubscription;
module.watch(require("./orderSubscriptionContainer"), {
  "default": function (v) {
    OrderSubscription = v;
  }
}, 4);

var wrapComponent = function (Comp) {
  return (
    /*#__PURE__*/
    function (_Component) {
      (0, _inheritsLoose2.default)(OrderDashboardContainer, _Component);

      function OrderDashboardContainer(props) {
        var _this;

        _this = _Component.call(this, props) || this;

        _this.filterDates = function (startDate, endDate) {
          var query = _this.state.query;

          if (startDate && endDate) {
            // generate time for start and end of day
            var formattedEndDate = endDate.endOf("day");
            var formattedStartDate = startDate.startOf("day");
            query.createdAt = {
              $gte: new Date(formattedStartDate.toISOString()),
              $lte: new Date(formattedEndDate.toISOString())
            };

            _this.setState({
              query: query
            });
          }
        };

        _this.handleSearchChange = function (value) {
          _this.setState({
            searchQuery: value
          });
        };

        _this.filterWorkflowStatus = function (event, value) {
          var query = filterWorkflowStatus(value);
          var shippingFilter = _this.state.shippingFilter;

          if (_this.state.query.createdAt) {
            query.createdAt = _this.state.query.createdAt;
          }

          if (_this.state.query._id) {
            query._id = _this.state.query._id;
          }

          _this.setState({
            query: (0, _objectSpread2.default)({}, filterShippingStatus(shippingFilter.toLowerCase()), query),
            workflowFilter: value
          });
        };

        _this.filterShippingStatus = function (event, value) {
          var query = filterShippingStatus(value);
          var workflowFilter = _this.state.workflowFilter;

          if (_this.state.query.createdAt) {
            query.createdAt = _this.state.query.createdAt;
          }

          if (_this.state.query._id) {
            query._id = _this.state.query._id;
          }

          _this.setState({
            query: (0, _objectSpread2.default)({}, filterWorkflowStatus(workflowFilter.toLowerCase()), query),
            shippingFilter: value
          });
        };

        _this.clearFilter = function (filterString) {
          var query;
          var _this$state = _this.state,
              shippingFilter = _this$state.shippingFilter,
              workflowFilter = _this$state.workflowFilter;

          if (filterString === "workflow") {
            workflowFilter = "";
            query = (0, _objectSpread2.default)({}, filterWorkflowStatus(workflowFilter), filterShippingStatus(shippingFilter.toLowerCase()));

            if (_this.state.query.createdAt) {
              query.createdAt = _this.state.query.createdAt;
            }
          } else if (filterString === "date") {
            query = (0, _objectSpread2.default)({}, filterWorkflowStatus(workflowFilter.toLowerCase()), filterShippingStatus(shippingFilter.toLowerCase()));
          } else if (filterString === "shipping") {
            shippingFilter = "";
            query = (0, _objectSpread2.default)({}, filterWorkflowStatus(workflowFilter.toLowerCase()), filterShippingStatus(shippingFilter));

            if (_this.state.query.createdAt) {
              query.createdAt = _this.state.query.createdAt;
            }
          } // If there is an id on the current search appeng it to query


          if (_this.state.query._id) {
            query._id = _this.state.query._id;
          }

          _this.setState({
            query: query,
            shippingFilter: shippingFilter,
            workflowFilter: workflowFilter
          });
        };

        _this.updatePage = function (page) {
          var offset = page * _this.state.pageSize;

          _this.setState({
            skip: offset,
            page: page
          });
        };

        _this.updatePageSize = function (pageSize, pageIndex) {
          var offset = pageIndex * pageSize;

          _this.setState({
            pageSize: pageSize,
            skip: offset
          });
        };

        _this.state = {
          query: {},
          searchQuery: "",
          shippingFilter: "",
          workflowFilter: "",
          skip: 0,
          pageSize: 10,
          page: 0
        };
        return _this;
      }

      var _proto = OrderDashboardContainer.prototype;

      _proto.render = function () {
        function render() {
          return React.createElement(Comp, {
            searchQuery: this.state.searchQuery,
            query: this.state.query,
            clearFilter: this.clearFilter,
            filterDates: this.filterDates,
            filterShippingStatus: this.filterShippingStatus,
            filterWorkflowStatus: this.filterWorkflowStatus,
            handleChange: this.handleSearchChange,
            skip: this.state.skip,
            pageSize: this.state.pageSize,
            onPageChange: this.updatePage,
            onPageSizeChange: this.updatePageSize,
            currentPage: this.state.page
          });
        }

        return render;
      }();

      return OrderDashboardContainer;
    }(Component)
  );
};

registerComponent("OrderSubscription", OrderSubscription, [wrapComponent]);
module.exportDefault(_compose(wrapComponent)(OrderSubscription));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderSubscriptionContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/containers/orderSubscriptionContainer.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Counts;
module.watch(require("meteor/tmeasday:publish-counts"), {
  Counts: function (v) {
    Counts = v;
  }
}, 2);
var Orders, OrderSearch;
module.watch(require("../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  },
  OrderSearch: function (v) {
    OrderSearch = v;
  }
}, 3);
var Components, composeWithTracker;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 4);
var OrderDashboard;
module.watch(require("../components/orderDashboard"), {
  "default": function (v) {
    OrderDashboard = v;
  }
}, 5);

var OrderSubscription =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderSubscription, _Component);

  function OrderSubscription() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = OrderSubscription.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(OrderDashboard, this.props);
    }

    return render;
  }();

  return OrderSubscription;
}(Component);

function composer(props, onData) {
  var subscription = Meteor.subscribe("SearchResults", "orders", props.searchQuery);
  var orderSearchResultsIds;
  var query = props.query,
      currentPage = props.currentPage;

  if (subscription.ready()) {
    var orderSearchResults = OrderSearch.find().fetch();
    orderSearchResultsIds = orderSearchResults.map(function (orderSearch) {
      return orderSearch._id;
    }); // checking to ensure search was made and search results are returned

    if (props.searchQuery && Array.isArray(orderSearchResultsIds)) {
      // add matching results from search to query passed to Sortable
      query._id = {
        $in: orderSearchResultsIds
      };
    } else {
      // being here means no search text is inputed or search was cleared, so reset any previous match
      delete query._id;
    }

    var options = {
      limit: props.pageSize,
      skip: props.skip
    };
    var ordersSubscription = Meteor.subscribe("PaginatedOrders", query, options);
    var totalOrderCount = Counts.get("orders-count");

    if (props.searchQuery !== "") {
      totalOrderCount = orderSearchResults.length;
    }

    var pages = Math.ceil(totalOrderCount / props.pageSize);

    if (ordersSubscription.ready()) {
      var results = Orders.find(query).fetch();
      return onData(null, {
        orders: results,
        totalOrderCount: totalOrderCount,
        pages: pages,
        currentPage: currentPage
      });
    }
  }
}

module.exportDefault(composeWithTracker(composer, Components.Loading)(OrderSubscription));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderSummaryContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/containers/orderSummaryContainer.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 0);

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 1);

var _every;

module.watch(require("lodash/every"), {
  "default": function (v) {
    _every = v;
  }
}, 2);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 3);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var composeWithTracker, withMoment;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  withMoment: function (v) {
    withMoment = v;
  }
}, 6);
var Orders;
module.watch(require("../../../../../../lib/collections"), {
  Orders: function (v) {
    Orders = v;
  }
}, 7);
var Card, CardHeader, CardBody, CardGroup;
module.watch(require("../../../ui/client/components"), {
  Card: function (v) {
    Card = v;
  },
  CardHeader: function (v) {
    CardHeader = v;
  },
  CardBody: function (v) {
    CardBody = v;
  },
  CardGroup: function (v) {
    CardGroup = v;
  }
}, 8);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 9);
var OrderSummary;
module.watch(require("../components/orderSummary"), {
  "default": function (v) {
    OrderSummary = v;
  }
}, 10);
var getShippingInfo;
module.watch(require("../helpers"), {
  getShippingInfo: function (v) {
    getShippingInfo = v;
  }
}, 11);

var OrderSummaryContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(OrderSummaryContainer, _Component);

  function OrderSummaryContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.dateFormat = function (context, block) {
      var moment = _this.props.moment;
      var f = block || "MMM DD, YYYY hh:mm:ss A";
      return moment && moment(context).format(f) || context.toLocaleString();
    };

    _this.tracking = function () {
      var shipping = getShippingInfo(_this.props.order);

      if (shipping.tracking) {
        return shipping.tracking;
      }

      return i18next.t("orderShipping.noTracking");
    };

    _this.shipmentStatus = function () {
      var order = _this.props.order;
      var shipment = getShippingInfo(_this.props.order);

      if (shipment.delivered) {
        return {
          delivered: true,
          shipped: true,
          status: "success",
          label: i18next.t("orderShipping.delivered")
        };
      }

      var shipped = _every(shipment.items, function (shipmentItem) {
        for (var _iterator = order.items, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray2) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _fullItem = _ref;

          if (_fullItem._id === shipmentItem._id) {
            if (_fullItem.workflow) {
              if (_isArray(_fullItem.workflow.workflow)) {
                return _includes(_fullItem.workflow.workflow, "coreOrderItemWorkflow/completed");
              }
            }
          }
        }
      });

      var canceled = _every(shipment.items, function (shipmentItem) {
        for (var _iterator2 = order.items, _isArray3 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray3 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray3) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var _fullItem2 = _ref2;

          if (_fullItem2._id === shipmentItem._id) {
            if (_fullItem2.workflow) {
              return _fullItem2.workflow.status === "coreOrderItemWorkflow/canceled";
            }
          }
        }
      });

      if (shipped) {
        return {
          delivered: false,
          shipped: true,
          status: "success",
          label: i18next.t("orderShipping.shipped")
        };
      }

      if (canceled) {
        return {
          delivered: false,
          shipped: false,
          status: "danger",
          label: i18next.t("order.canceledLabel")
        };
      }

      return {
        delivered: false,
        shipped: false,
        status: "info",
        label: i18next.t("orderShipping.notShipped")
      };
    };

    _this.printableLabels = function () {
      var _getShippingInfo = getShippingInfo(_this.props.order),
          shippingLabelUrl = _getShippingInfo.shippingLabelUrl,
          customsLabelUrl = _getShippingInfo.customsLabelUrl;

      if (shippingLabelUrl || customsLabelUrl) {
        return {
          shippingLabelUrl: shippingLabelUrl,
          customsLabelUrl: customsLabelUrl
        };
      }

      return false;
    };

    _this.dateFormat = _this.dateFormat.bind((0, _assertThisInitialized2.default)(_this));
    _this.tracking = _this.tracking.bind((0, _assertThisInitialized2.default)(_this));
    _this.shipmentStatus = _this.shipmentStatus.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = OrderSummaryContainer.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(CardGroup, null, React.createElement(Card, null, React.createElement(CardHeader, {
        actAsExpander: false,
        i18nKeyTitle: "admin.orderWorkflow.summary.cardTitle",
        title: "Summary"
      }), React.createElement(CardBody, {
        expandable: false
      }, React.createElement(OrderSummary, (0, _extends2.default)({}, this.props, {
        dateFormat: this.dateFormat,
        tracking: this.tracking,
        shipmentStatus: this.shipmentStatus,
        printableLabels: this.printableLabels
      })))));
    }

    return render;
  }();

  return OrderSummaryContainer;
}(Component);

OrderSummaryContainer.propTypes = {
  moment: PropTypes.func,
  order: PropTypes.object
};

var composer = function (props, onData) {
  var query = {
    _id: props.orderId
  };
  var options = {
    limit: 1,
    skip: 0
  };
  var orderSub = Meteor.subscribe("PaginatedOrders", query, options);

  if (orderSub.ready()) {
    // Find current order
    var order = Orders.findOne({
      "_id": props.orderId,
      "shipping._id": props.fulfillment && props.fulfillment._id
    });

    if (order) {
      var profileShippingAddress = getShippingInfo(order).address || {};

      if (order.workflow) {
        if (order.workflow.status === "coreOrderCreated") {
          order.workflow.status = "coreOrderCreated";
          Meteor.call("workflow/pushOrderWorkflow", "coreOrderWorkflow", "coreOrderCreated", order);
        }
      }

      onData(null, {
        order: order,
        profileShippingAddress: profileShippingAddress
      });
    } else {
      onData(null, {
        order: {},
        profileShippingAddress: {}
      });
    }
  }
};

module.exportDefault(composeWithTracker(composer)(withMoment(OrderSummaryContainer)));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orderTableContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/containers/orderTableContainer.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread5 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var getPrimaryMediaForOrderItem;
module.watch(require("../../../../../../lib/api"), {
  getPrimaryMediaForOrderItem: function (v) {
    getPrimaryMediaForOrderItem = v;
  }
}, 4);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 5);
var getShippingInfo;
module.watch(require("../helpers"), {
  getShippingInfo: function (v) {
    getShippingInfo = v;
  }
}, 6);
var PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, shippingStates;
module.watch(require("../../lib/constants"), {
  PACKAGE_NAME: function (v) {
    PACKAGE_NAME = v;
  },
  ORDER_LIST_FILTERS_PREFERENCE_NAME: function (v) {
    ORDER_LIST_FILTERS_PREFERENCE_NAME = v;
  },
  ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME: function (v) {
    ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME = v;
  },
  shippingStates: function (v) {
    shippingStates = v;
  }
}, 7);
var OrderTable;
module.watch(require("../components/orderTable"), {
  "default": function (v) {
    OrderTable = v;
  }
}, 8);
var shippingStrings = ["picked", "packed", "labeled", "shipped"];

var wrapComponent = function (Comp) {
  return (
    /*#__PURE__*/
    function (_Component) {
      (0, _inheritsLoose2.default)(OrderTableContainer, _Component);

      function OrderTableContainer(props) {
        var _this;

        _this = _Component.call(this, props) || this;

        _this.toggleShippingFlowList = function () {
          _this.setState({
            renderFlowList: !_this.state.renderFlowList
          });

          _this.setListItemsToDefault();
        };

        _this.handleSelect = function (event, isInputChecked, name) {
          _this.setState({
            multipleSelect: false,
            renderFlowList: false
          });

          shippingStrings.forEach(function (value) {
            var _shipping;

            _this.setState({
              shipping: (_shipping = {}, _shipping[value] = false, _shipping)
            });
          });
          var selectedItemsArray = _this.state.selectedItems;

          if (!selectedItemsArray.includes(name)) {
            selectedItemsArray.push(name);

            _this.setState({
              selectedItems: selectedItemsArray
            });
          } else {
            var updatedSelectedArray = selectedItemsArray.filter(function (id) {
              return id !== name;
            });

            _this.setState({
              selectedItems: updatedSelectedArray
            });
          }
        };

        _this.selectAllOrders = function (orders, areAllSelected) {
          _this.setState({
            renderFlowList: false
          });

          shippingStrings.forEach(function (string) {
            var _shipping2;

            _this.setState({
              shipping: (_shipping2 = {}, _shipping2[string] = false, _shipping2)
            });
          });

          if (areAllSelected) {
            // if all orders are selected, clear the selectedItems array
            // and set multipleSelect to false
            _this.setState({
              selectedItems: [],
              multipleSelect: false
            });
          } else {
            // if there are no selected orders, or if there are some orders that have been
            // selected but not all of them, loop through the orders array and return a
            // new array with order ids only, then set the selectedItems array with the orderIds
            var orderIds = orders.map(function (order) {
              return order._id;
            });

            _this.setState({
              selectedItems: orderIds,
              multipleSelect: true
            });
          }
        };

        _this.handleClick = function (order) {
          var startWorkflow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          Reaction.setActionViewDetail({
            label: "Order Details",
            i18nKeyLabel: "orderWorkflow.orderDetails",
            data: {
              order: order
            },
            props: {
              size: "large"
            },
            template: "coreOrderWorkflow"
          });

          if (startWorkflow === true) {
            Meteor.call("workflow/pushOrderWorkflow", "coreOrderWorkflow", "processing", order);
            Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, "processing");
          }
          /* TODO:
          a) What other routes have a query parameter of _id=XXXXXXX ?
          b) What exactly are we using the order dashboard for? If it's search,
           well, clicking a search result doesn't CURRENTLY do anything. What's
           more, there's some debate as to whether that SHOULD link to anywhere.
           And if it should, why not the existing, modal orders panel?
          */


          Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, order._id);
        };

        _this.updateBulkStatusHelper = function (status) {
          var statusIndex = shippingStrings.indexOf(status);
          return shippingStrings.reduce(function (shipping, state) {
            var _objectSpread2;

            return (0, _objectSpread5.default)({}, shipping, (_objectSpread2 = {}, _objectSpread2[state] = shippingStrings.indexOf(state) <= statusIndex, _objectSpread2));
          }, {});
        };

        _this.updateBulkLoadingHelper = function (status) {
          var statusIndex = shippingStrings.indexOf(status);
          var prevStatusIndex = Object.keys(_this.state.shipping).reduce(function (maxIndex, state) {
            if (_this.state.shipping[state]) {
              return Math.max(shippingStrings.indexOf(state), maxIndex);
            }

            return maxIndex;
          }, -1);
          return shippingStrings.reduce(function (shipping, state) {
            var _objectSpread4;

            if (prevStatusIndex < statusIndex) {
              var _objectSpread3;

              return (0, _objectSpread5.default)({}, shipping, (_objectSpread3 = {}, _objectSpread3[state] = shippingStrings.indexOf(state) <= statusIndex && shippingStrings.indexOf(state) > prevStatusIndex, _objectSpread3));
            }

            return (0, _objectSpread5.default)({}, shipping, (_objectSpread4 = {}, _objectSpread4[state] = shippingStrings.indexOf(state) >= statusIndex && shippingStrings.indexOf(state) <= prevStatusIndex, _objectSpread4));
          }, {});
        };

        _this.shippingStatusUpdateCall = function (selectedOrders, status) {
          var filteredSelectedOrders = selectedOrders.filter(function (order) {
            return order.shipping && Object.keys(getShippingInfo(order)).length;
          });

          _this.setState({
            isLoading: _this.updateBulkLoadingHelper(status)
          });

          var orderText = "order";

          if (filteredSelectedOrders.length > 1) {
            orderText = "orders";
          } // capitalize the first letter of the shipping status passed in
          // e.g. 'shipped' becomes 'Shipped'.
          // status[0].toUpperCase() capitalizes the first letter of the string
          // status.substr(1).toLowerCase() converts every other letter to lower case


          var capitalizeStatus = status[0].toUpperCase() + status.substr(1).toLowerCase();
          var orderCount = 0; // TODO: send these orders in batch as an array. This would entail re-writing the Meteor calls to update the
          // different shipping statuses to receive an array of objects(orders) as a param
          // TODO: rethink this type of flow for updating shipping statuses

          filteredSelectedOrders.forEach(function (order) {
            var shippingRecord = getShippingInfo(order);
            Meteor.call("orders/shipment" + capitalizeStatus, order, shippingRecord, function (error) {
              if (error) {
                Alerts.toast("An error occured while setting the status: " + error, "error");
              } else {
                Meteor.call("orders/updateHistory", order._id, "Shipping state set by bulk operation", status);
              }

              orderCount += 1;

              if (orderCount === filteredSelectedOrders.length) {
                var _isLoading;

                _this.setState({
                  shipping: _this.updateBulkStatusHelper(status),
                  isLoading: (_isLoading = {}, _isLoading[status] = false, _isLoading)
                });

                Alerts.alert({
                  text: i18next.t("order.orderSetToState", {
                    orderNumber: filteredSelectedOrders.length,
                    orderText: orderText,
                    status: status
                  }),
                  type: "success",
                  allowOutsideClick: false
                });
              }
            });
          });
        };

        _this.displayAlert = function (selectedOrders, status, options) {
          // capitalize the first letter of the shipping status passed in
          // e.g. 'shipped' becomes 'Shipped'.
          // status[0].toUpperCase() capitalizes the first letter of the string
          // status.substr(1).toLowerCase() converts every other letter to lower case
          var capitalizeStatus = status[0].toUpperCase() + status.substr(1).toLowerCase();
          var alertOptions = options || {};
          var orderText = "order";
          var skippedOrdersText = "is";
          var orderAlreadyInStateText = "Order has";

          if (selectedOrders.length > 1) {
            orderText = "orders";
            orderAlreadyInStateText = "Orders have";
          }

          if (alertOptions.falsePreviousStatuses > 1) {
            skippedOrdersText = "are";
          } // if the order(s) want to skip the previous states, display alert


          if (alertOptions.falsePreviousStatuses) {
            Alerts.alert({
              text: i18next.t("order.skippedBulkOrdersAlert", {
                selectedOrders: selectedOrders.length,
                orderText: orderText,
                status: capitalizeStatus,
                numberOfSkippedOrders: alertOptions.falsePreviousStatuses,
                skippedOrdersText: skippedOrdersText,
                skippedState: alertOptions.whichFalseState
              }),
              type: "warning",
              showCancelButton: true,
              showCloseButton: true,
              allowOutsideClick: false,
              confirmButtonText: i18next.t("order.approveBulkOrderAction"),
              cancelButtonText: i18next.t("order.cancelBulkOrderAction")
            }, function (setSelected) {
              if (setSelected) {
                // set status of order(s) if this action is confirmed
                _this.shippingStatusUpdateCall(selectedOrders, status);
              }
            }); // if the order(s) are following proper flow, set the status
          } else if (!alertOptions.falsePreviousStatuses && alertOptions.falseCurrentState) {
            _this.shippingStatusUpdateCall(selectedOrders, status); // display alert if order(s) are already in this state

          } else if (!alertOptions.falsePreviousStatuses && !alertOptions.falseCurrentState && alertOptions.trueCurrentState) {
            Alerts.alert({
              text: i18next.t("order.orderAlreadyInState", {
                orderText: orderAlreadyInStateText,
                status: status
              })
            });
          }
        };

        _this.displayRegressionAlert = function (selectedOrders, ordersToRegress, status, options) {
          // capitalize the first letter of the shipping status passed in
          // e.g. 'shipped' becomes 'Shipped'.
          // status[0].toUpperCase() capitalizes the first letter of the string
          // status.substr(1).toLowerCase() converts every other letter to lower case
          var capitalizeStatus = status[0].toUpperCase() + status.substr(1).toLowerCase();
          var alertOptions = options || {};
          var orderText = "order";

          if (ordersToRegress > 1) {
            orderText = "orders";
          }

          Alerts.alert({
            text: i18next.t("order.bulkOrdersRegressionAlert", {
              ordersToRegress: ordersToRegress,
              orderText: orderText,
              status: capitalizeStatus
            }),
            type: "warning",
            showCancelButton: true,
            showCloseButton: true,
            allowOutsideClick: false,
            confirmButtonText: i18next.t("order.approveBulkOrderActionRegression"),
            cancelButtonText: i18next.t("order.cancelBulkOrderAction")
          }, function (regress) {
            if (regress) {
              // if some of the order(s) want to skip the previous state, display warning alert for skipping states
              if (alertOptions.falsePreviousStatuses) {
                _this.displayAlert(selectedOrders, status, {
                  whichFalseState: alertOptions.whichFalseState,
                  falsePreviousStatuses: alertOptions.falsePreviousStatuses,
                  falseCurrentState: alertOptions.falseCurrentState,
                  trueCurrentState: alertOptions.trueCurrentState
                });
              } else {
                // set status of order(s) if this action is confirmed
                _this.shippingStatusUpdateCall(selectedOrders, status);
              }
            }
          });
        };

        _this.pickedShippingStatus = function (selectedOrders, status) {
          // counters to keep track of how many orders are not picked,
          // are already picked, and how many are being regressed
          var isNotPicked = 0;
          var isPicked = 0;
          var ordersToRegress = 0; // loop through selected orders array to determine the current shipping workflow
          // status of each order in regard to the other statuses
          // TODO: optimise this process to avoid having this similar repetitive block of code across 4 methods

          selectedOrders.forEach(function (order) {
            var orderWorkflow = getShippingInfo(order).workflow; // check if the order(s) are in this state already or in the previous state
            // TODO: model this with the assumption that there may be different workflows
            // depending on the type of shop or product that a shop is selling.

            if (orderWorkflow) {
              if (orderWorkflow.status === "new") {
                isNotPicked += 1;
              } else if (orderWorkflow.status === "coreOrderWorkflow/picked") {
                isPicked += 1;
              } else if (orderWorkflow.workflow.includes("coreOrderWorkflow/picked")) {
                ordersToRegress += 1;
              } else if (!orderWorkflow.workflow.includes("coreOrderWorkflow/picked") && (orderWorkflow.status === "coreOrderWorkflow/packed" || orderWorkflow.status === "coreOrderWorkflow/labeled" || orderWorkflow.status === "coreOrderWorkflow/shipped")) {
                ordersToRegress += 1;
              }
            }
          }); // display regression alert if order(s) are being regressed

          if (ordersToRegress) {
            _this.displayRegressionAlert(selectedOrders, ordersToRegress, status); // set status to 'picked' if order(s) are in the previous state OR
            // display alert if order(s) are already in this state

          } else {
            _this.displayAlert(selectedOrders, status, {
              falseCurrentState: isNotPicked,
              trueCurrentState: isPicked
            });
          }
        };

        _this.packedShippingStatus = function (selectedOrders, status) {
          // if an order state wants to skip to packed, this is the state being skipped
          var whichFalseState = shippingStates.picked; // counters to keep track of how many orders are not picked/packed,
          // are already packed, and how many are being regressed

          var isNotPicked = 0;
          var isNotPacked = 0;
          var isPacked = 0;
          var ordersToRegress = 0; // loop through selected orders array to determine the current shipping workflow
          // status of each order in regard to the other statuses
          // TODO: optimise this process to avoid having this similar repetitive block of code across 4 methods

          selectedOrders.forEach(function (order) {
            var orderWorkflow = getShippingInfo(order).workflow; // check if the order(s) are in this state already or in one of the previous states
            // TODO: model this with the assumption that there may be different workflows
            // depending on the type of shop or product that a shop is selling.

            if (orderWorkflow) {
              if (orderWorkflow.status === "new") {
                isNotPicked += 1;
              } else if (orderWorkflow.status === "coreOrderWorkflow/picked") {
                isNotPacked += 1;
              } else if (orderWorkflow.status === "coreOrderWorkflow/packed") {
                isPacked += 1;
              } else if (orderWorkflow.workflow.includes("coreOrderWorkflow/packed")) {
                // check if the selected order(s) are being regressed back to this state
                ordersToRegress += 1;
              } else if (!orderWorkflow.workflow.includes("coreOrderWorkflow/packed") && (orderWorkflow.status === "coreOrderWorkflow/labeled" || orderWorkflow.status === "coreOrderWorkflow/shipped")) {
                ordersToRegress += 1;
              }
            }
          }); // display regression alert if order(s) are being regressed

          if (ordersToRegress) {
            _this.displayRegressionAlert(selectedOrders, ordersToRegress, status, {
              whichFalseState: whichFalseState,
              falsePreviousStatuses: isNotPicked,
              falseCurrentState: isNotPacked,
              trueCurrentState: isPacked
            }); // display proper alert if the order(s) are in this state already or want to skip the previous states

          } else {
            _this.displayAlert(selectedOrders, status, {
              whichFalseState: whichFalseState,
              falsePreviousStatuses: isNotPicked,
              falseCurrentState: isNotPacked,
              trueCurrentState: isPacked
            });
          }
        };

        _this.labeledShippingStatus = function (selectedOrders, status) {
          // string that will hold the state being skipped
          var whichFalseState = ""; // counters to keep track of how many orders are not picked/packed/labeled,
          // are already labeled, and how many are being regressed

          var isNotPacked = 0;
          var isNotLabeled = 0;
          var isLabeled = 0;
          var ordersToRegress = 0; // loop through selected orders array to determine the current shipping workflow
          // status of each order in regard to the other statuses
          // TODO: optimise this process to avoid having this similar repetitive block of code across 4 methods

          selectedOrders.forEach(function (order) {
            var orderWorkflow = getShippingInfo(order).workflow; // check if the order(s) are in this state already or in one of the previous states
            // TODO: model this with the assumption that there may be different workflows
            // depending on the type of shop or product that a shop is selling.

            if (orderWorkflow) {
              if (orderWorkflow.status === "new") {
                isNotPacked += 1;
                whichFalseState = shippingStates.picked;
              } else if (orderWorkflow.status === "coreOrderWorkflow/picked") {
                isNotPacked += 1;
                whichFalseState = shippingStates.packed;
              } else if (orderWorkflow.status === "coreOrderWorkflow/packed") {
                isNotLabeled += 1;
              } else if (orderWorkflow.status === "coreOrderWorkflow/labeled") {
                isLabeled += 1;
              } else if (orderWorkflow.workflow.includes("coreOrderWorkflow/labeled") || orderWorkflow.status === "coreOrderWorkflow/shipped") {
                // check if the selected order(s) are being regressed back to this state
                ordersToRegress += 1;
              }
            }
          }); // display regression alert if order(s) are being regressed

          if (ordersToRegress) {
            _this.displayRegressionAlert(selectedOrders, ordersToRegress, status, {
              whichFalseState: whichFalseState,
              falsePreviousStatuses: isNotPacked,
              falseCurrentState: isNotLabeled,
              trueCurrentState: isLabeled
            }); // display proper alert if the order(s) are in this state already or want to skip the previous states

          } else {
            _this.displayAlert(selectedOrders, status, {
              whichFalseState: whichFalseState,
              falsePreviousStatuses: isNotPacked,
              falseCurrentState: isNotLabeled,
              trueCurrentState: isLabeled
            });
          }
        };

        _this.shippedShippingStatus = function (selectedOrders, status) {
          // string that will hold the state being skipped
          var whichFalseState = ""; // counters to keep track of how many orders are not picked/packed/labeled/shipped,
          // are already shipped, and how many are being regressed

          var isNotLabeled = 0;
          var isNotShipped = 0;
          var isShipped = 0; // loop through selected orders array to determine the current shipping workflow
          // status of each order in regard to the other statuses
          // TODO: optimise this process to avoid having this similar repetitive block of code across 4 methods

          selectedOrders.forEach(function (order) {
            var orderWorkflow = getShippingInfo(order).workflow; // check if the order(s) are in this state already or in one of the previous states
            // TODO: model this with the assumption that there may be different workflows
            // depending on the type of shop or product that a shop is selling.

            if (orderWorkflow) {
              var orderWorkflowStatus = orderWorkflow.status;

              if (orderWorkflowStatus === "new") {
                isNotLabeled += 1;
                whichFalseState = shippingStates.picked;
              } else if (orderWorkflowStatus === "coreOrderWorkflow/picked") {
                isNotLabeled += 1;
                whichFalseState = shippingStates.packed;
              } else if (orderWorkflowStatus === "coreOrderWorkflow/packed") {
                isNotLabeled += 1;
                whichFalseState = shippingStates.labeled;
              } else if (orderWorkflowStatus === "coreOrderWorkflow/labeled") {
                isNotShipped += 1;
              } else if (orderWorkflowStatus === "coreOrderWorkflow/shipped") {
                isShipped += 1;
              }
            }
          }); // display proper alert if the order(s) are in this state already or want to skip the previous states

          _this.displayAlert(selectedOrders, status, {
            whichFalseState: whichFalseState,
            falsePreviousStatuses: isNotLabeled,
            falseCurrentState: isNotShipped,
            trueCurrentState: isShipped
          });
        };

        _this.setShippingStatus = function (status, selectedOrdersIds, orders) {
          _this.setState({
            renderFlowList: true
          });

          var selectedOrders = orders.filter(function (order) {
            return selectedOrdersIds.includes(order._id);
          });

          if (status === "picked") {
            _this.pickedShippingStatus(selectedOrders, status);
          }

          if (status === "packed") {
            _this.packedShippingStatus(selectedOrders, status);
          }

          if (status === "labeled") {
            _this.labeledShippingStatus(selectedOrders, status);
          }

          if (status === "shipped") {
            _this.shippedShippingStatus(selectedOrders, status);
          }
        };

        _this.handleBulkPaymentCapture = function (selectedOrdersIds, orders) {
          _this.setState({
            isLoading: {
              capturePayment: true
            }
          });

          var selectedOrders = orders.filter(function (order) {
            return selectedOrdersIds.includes(order._id);
          });
          var orderCount = 0;

          var done = function () {
            orderCount += 1;

            if (orderCount === selectedOrders.length) {
              _this.setState({
                isLoading: {
                  capturePayment: false
                }
              });

              Alerts.alert({
                text: i18next.t("order.paymentCaptureSuccess"),
                type: "success",
                allowOutsideClick: false
              });
            }
          }; // TODO: send these orders in batch as an array. This would entail re-writing the
          // "orders/approvePayment" method to receive an array of orders as a param.


          selectedOrders.forEach(function (order) {
            // Only capture orders which are not captured yet (but possibly are already approved)
            var billingRecord = _this.orderCreditMethod(order);

            if (billingRecord.paymentMethod.mode === "capture" && billingRecord.paymentMethod.status === "completed") {
              done();
              return;
            }

            Meteor.call("orders/approvePayment", order, function (approvePaymentError) {
              if (approvePaymentError) {
                _this.setState({
                  isLoading: {
                    capturePayment: false
                  }
                });

                Alerts.toast("An error occured while approving the payment: " + approvePaymentError, "error");
              } else {
                // TODO: send these orders in batch as an array. This would entail re-writing the
                // "orders/capturePayments" method to receive an array of orders as a param.
                Meteor.call("orders/capturePayments", order._id, function (capturePaymentError) {
                  if (capturePaymentError) {
                    _this.setState({
                      isLoading: {
                        capturePayment: false
                      }
                    });

                    Alerts.toast("An error occured while capturing the payment: " + capturePaymentError, "error");
                  }

                  done();
                });
              }
            });
          });
        };

        _this.state = {
          selectedItems: [],
          multipleSelect: false,
          // TODO: model this with the assumption that there may be different stages to workflows
          shipping: {
            picked: false,
            packed: false,
            labeled: false,
            shipped: false
          },
          renderFlowList: false,
          // TODO: model this with the assumption that there may be different stages to workflows
          isLoading: {
            picked: false,
            packed: false,
            labeled: false,
            shipped: false,
            capturePayment: false
          },
          ready: false
        };
        return _this;
      }

      var _proto = OrderTableContainer.prototype;

      _proto.setListItemsToDefault = function () {
        function setListItemsToDefault() {
          var _this2 = this;

          if (this.state.renderFlowList === false) {
            shippingStrings.forEach(function (value) {
              var _shipping3;

              _this2.setState({
                shipping: (_shipping3 = {}, _shipping3[value] = false, _shipping3)
              });
            });
          }
        }

        return setListItemsToDefault;
      }();

      /**
       * orderCreditMethod: Finds the credit record in order.billing for the active shop
       * @param order: The order where to find the billing record in.
       * @return: The billing record with paymentMethod.method === credit of currently active shop
       */
      _proto.orderCreditMethod = function () {
        function orderCreditMethod(order) {
          var creditBillingRecords = order.billing.filter(function (value) {
            return value.paymentMethod.method === "credit";
          });
          var billingRecord = creditBillingRecords.find(function (billing) {
            return billing.shopId === Reaction.getShopId();
          });
          return billingRecord;
        }

        return orderCreditMethod;
      }();

      _proto.render = function () {
        function render() {
          return React.createElement(Comp, (0, _extends2.default)({}, this.props, {
            handleSelect: this.handleSelect,
            handleClick: this.handleClick,
            displayMedia: getPrimaryMediaForOrderItem,
            selectedItems: this.state.selectedItems,
            selectAllOrders: this.selectAllOrders,
            multipleSelect: this.state.multipleSelect,
            setShippingStatus: this.setShippingStatus,
            shipping: this.state.shipping,
            isLoading: this.state.isLoading,
            renderFlowList: this.state.renderFlowList,
            toggleShippingFlowList: this.toggleShippingFlowList,
            handleBulkPaymentCapture: this.handleBulkPaymentCapture
          }));
        }

        return render;
      }();

      return OrderTableContainer;
    }(Component)
  );
};

registerComponent("OrderTable", OrderTable, [wrapComponent]);
module.exportDefault(_compose(wrapComponent)(OrderTable));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"helpers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/helpers/index.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  getOrderRiskBadge: function () {
    return getOrderRiskBadge;
  },
  getOrderRiskStatus: function () {
    return getOrderRiskStatus;
  },
  getTaxRiskStatus: function () {
    return getTaxRiskStatus;
  },
  filterWorkflowStatus: function () {
    return filterWorkflowStatus;
  },
  filterShippingStatus: function () {
    return filterShippingStatus;
  },
  getBillingInfo: function () {
    return getBillingInfo;
  },
  getShippingInfo: function () {
    return getShippingInfo;
  }
});
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 0);

function getOrderRiskBadge(riskLevel) {
  var label;

  switch (riskLevel) {
    case "high":
      label = "danger";
      break;

    case "elevated":
      label = "warning";
      break;

    default:
      label = "";
  }

  return label;
}

function getOrderRiskStatus(order) {
  var billingForShop = order.billing.find(function (billing) {
    return billing.shopId === Reaction.getShopId();
  });
  var paymentMethod = billingForShop && billingForShop.paymentMethod || {};
  var riskLevel = paymentMethod.riskLevel; // normal transactions do not need to be flagged

  if (riskLevel === "normal") {
    return "";
  }

  if (!riskLevel) {
    return "";
  }

  return riskLevel;
}

function getTaxRiskStatus(order) {
  return order.taxCalculationFailed || order.bypassAddressValidation;
}

function filterWorkflowStatus(filter) {
  var query = {};

  switch (filter) {
    // New orders
    case "new":
      query = {
        "workflow.status": "new"
      };
      break;
    // Orders that have been approved

    case "approved":
      query = {
        "workflow.status": "coreOrderWorkflow/processing",
        "billing.paymentMethod.status": "approved"
      };
      break;
    // Orders that have been captured

    case "captured":
      query = {
        "billing.paymentMethod.status": "completed",
        "shipping.shipped": false
      };
      break;
    // Orders that are being processed

    case "processing":
      query = {
        "workflow.status": "coreOrderWorkflow/processing"
      };
      break;
    // Orders that are complete, including all items with complete status

    case "completed":
      query = {
        "workflow.status": "coreOrderWorkflow/completed"
      };
      break;

    case "canceled":
      query = {
        "workflow.status": "coreOrderWorkflow/canceled"
      };
      break;

    default:
  }

  return query;
}

function filterShippingStatus(filter) {
  var query = {};

  switch (filter) {
    case "picked":
      query = {
        "shipping.workflow.status": "coreOrderWorkflow/picked"
      };
      break;

    case "packed":
      query = {
        "shipping.workflow.status": "coreOrderWorkflow/packed"
      };
      break;

    case "labeled":
      query = {
        "shipping.workflow.status": "coreOrderWorkflow/labeled"
      };
      break;

    case "shipped":
      query = {
        "shipping.workflow.status": "coreOrderWorkflow/shipped"
      };
      break;

    default:
  }

  return query;
}

function getBillingInfo(order) {
  var billingInfo = order && order.billing && order.billing.find(function (billing) {
    return billing && billing.shopId === Reaction.getShopId();
  });
  return billingInfo || {};
}

function getShippingInfo(order) {
  var shippingInfo = order && order.shipping && order.shipping.find(function (shipping) {
    return shipping && shipping.shopId === Reaction.getShopId();
  });
  return shippingInfo || {};
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/client/index.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./helpers"));
module.watch(require("./templates/list/pdf.html"));
module.watch(require("./templates/list/pdf.js"));
module.watch(require("./templates/list/summary.html"));
module.watch(require("./templates/list/summary.js"));
module.watch(require("./templates/workflow/shippingInvoice.html"));
module.watch(require("./templates/workflow/shippingInvoice.js"));
module.watch(require("./templates/workflow/shippingSummary.html"));
module.watch(require("./templates/workflow/shippingSummary.js"));
module.watch(require("./templates/workflow/shippingTracking.html"));
module.watch(require("./templates/workflow/shippingTracking.js"));
module.watch(require("./templates/workflow/workflow.html"));
module.watch(require("./templates/workflow/workflow.js"));
module.watch(require("./templates/orders.html"));
module.watch(require("./templates/orders.js"));
module.watch(require("./components/productImage"), {
  ProductImage: function (v) {
    exports.ProductImage = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/orders/lib/constants.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PACKAGE_NAME: function () {
    return PACKAGE_NAME;
  },
  ORDER_LIST_FILTERS_PREFERENCE_NAME: function () {
    return ORDER_LIST_FILTERS_PREFERENCE_NAME;
  },
  ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME: function () {
    return ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME;
  },
  DEFAULT_FILTER_NAME: function () {
    return DEFAULT_FILTER_NAME;
  },
  workflowStatus: function () {
    return workflowStatus;
  },
  shippingStatus: function () {
    return shippingStatus;
  },
  shippingStates: function () {
    return shippingStates;
  }
});
var PACKAGE_NAME = "reaction-orders";
var ORDER_LIST_FILTERS_PREFERENCE_NAME = "orderListFilters";
var ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME = "orderListSelectedOrder";
var DEFAULT_FILTER_NAME = "new";
var workflowStatus = [{
  label: "New",
  value: "new"
}, {
  label: "Approved",
  value: "approved"
}, {
  label: "Captured",
  value: "captured"
}, {
  label: "Processing",
  value: "processing"
}, {
  label: "Completed",
  value: "completed"
}, {
  label: "Canceled",
  value: "canceled"
}];
var shippingStatus = [{
  label: "Picked",
  value: "picked"
}, {
  label: "Packed",
  value: "packed"
}, {
  label: "Labeled",
  value: "labeled"
}, {
  label: "Shipped",
  value: "shipped"
}];
var shippingStates = {
  picked: "Picked",
  packed: "Packed",
  labeled: "Labeled",
  shipped: "Shipped",
  delivered: "Delivered"
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"payments":{"client":{"checkout":{"payment":{"methods.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/payment/methods.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.methods.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.methods.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/payment/template.methods.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("corePaymentMethods");
Template["corePaymentMethods"] = new Template("Template.corePaymentMethods", (function() {
  var view = this;
  return Blaze.Each(function() {
    return Spacebars.call(view.lookup("enabledPayments"));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "core-payment-method-form"
    }, "\n      ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template"))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n    "), "\n\n  " ];
  }, function() {
    return [ "\n\n    ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isAdmin"));
    }, function() {
      return [ "\n      ", HTML.DIV({
        class: "alert alert-danger"
      }, "\n        ", HTML.SPAN({
        "data-i18n": "checkoutPayment.noPaymentMethods"
      }, "No payment methods are configured."), "\n        ", HTML.A({
        href: "#",
        "data-event-action": "configure-payment-methods"
      }, "\n          ", HTML.SPAN({
        "data-i18n": "checkoutPayment.configureNow"
      }, "Configure now."), "\n        "), "\n      "), "\n    " ];
    }, function() {
      return [ "\n      ", HTML.DIV({
        class: "alert alert-danger"
      }, "\n        ", HTML.SPAN({
        "data-i18n": "checkoutPayment.noPaymentMethods"
      }, "No payment methods are configured."), "\n        ", HTML.SPAN({
        "data-i18n": "checkoutPayment.contactAdmin"
      }, "Please contact the store administrator."), "\n      "), "\n    " ];
    }), "\n\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payment.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/payment/payment.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.payment.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.payment.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/payment/template.payment.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("checkoutPayment");
Template["checkoutPayment"] = new Template("Template.checkoutPayment", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, "\n\n    ", HTML.DIV({
    class: "panel-heading"
  }, "\n      ", Spacebars.include(view.lookupTemplate("checkoutStepBadge")), "\n\n      ", HTML.Raw('<h3 class="panel-title">\n        <span data-i18n="checkoutPayment.addPaymentToCompleteOrder">Add payment to complete order</span></h3>'), "\n    "), "\n\n    ", HTML.DIV({
    class: "core-payment-methods panel-body"
  }, "\n      ", Spacebars.include(view.lookupTemplate("corePaymentMethods")), "\n      ", HTML.DIV({
    id: "payment-alerts"
  }, Blaze._TemplateWith(function() {
    return {
      placement: Spacebars.call("paymentMethod")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("inlineAlerts"));
  })), "\n    "), "\n\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/payment/index.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./methods.js"));
module.watch(require("./payment.html"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"methods.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/payment/methods.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);
module.watch(require("./methods.html"));
Template.corePaymentMethods.helpers({
  enabledPayments: enabledPayments,
  isAdmin: function () {
    return Reaction.hasAdminAccess();
  }
});
Template.corePaymentMethods.onCreated(function () {
  var payments = enabledPayments();
  var paymentsEnabled = payments.length; // If no payments enabled, show payments settings dashboard

  if (!paymentsEnabled) {
    openActionView();
  }
});
Template.corePaymentMethods.events({
  "click [data-event-action=configure-payment-methods]": function (event) {
    event.preventDefault();
    openActionView();
  }
});

function enabledPayments() {
  var enabledPaymentsArr = [];
  var apps = Reaction.Apps({
    provides: "paymentMethod",
    enabled: true
  });

  for (var _iterator = apps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var _app = _ref;
    if (_app.enabled === true) enabledPaymentsArr.push(_app);
  }

  return enabledPaymentsArr;
}

function openActionView() {
  var dashboardRegistryEntry = Reaction.Apps({
    name: "reaction-dashboard",
    provides: "shortcut"
  });
  var paymentRegistryEntry = Reaction.Apps({
    name: "reaction-payments",
    provides: "settings"
  });
  Reaction.showActionView([dashboardRegistryEntry[0], paymentRegistryEntry[0]]);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/checkout/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./payment"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/settings/settings.html                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/settings/template.settings.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paymentSettings");
Template["paymentSettings"] = new Template("Template.paymentSettings", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel-group",
    id: "paymentSettingsAccordian",
    role: "tablist",
    "aria-multiselectable": "true"
  }, "\n    ", HTML.DIV({
    class: "panel panel-default"
  }, "\n      ", HTML.Raw('<div class="panel-heading">\n        <div class="panel-title">\n          <a href="#payment-methods" aria-controls="paymentMethods" role="button" data-toggle="collapse" data-parent="#paymentSettingsAccordian" data-i18n="admin.paymentSettings.paymentMethod">Default Method</a>\n        </div>\n      </div>'), "\n      ", HTML.DIV({
    id: "payment-methods",
    class: "panel-collapse collapse in",
    role: "tabpanel",
    "aria-labelledby": "paymentMethods"
  }, "\n        ", HTML.DIV({
    class: "panel-body"
  }, "\n          ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Shops")),
      doc: Spacebars.call(view.lookup("shop")),
      id: Spacebars.call("shopEditPaymentMethodsForm"),
      type: Spacebars.call("update"),
      autosave: Spacebars.call(true)
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("defaultPaymentMethod"),
          options: Spacebars.call(view.lookup("paymentMethodOptions"))
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n          " ];
    });
  }), "\n        "), "\n      "), "\n    "), "\n\n    ", Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "paymentSettings"
    }));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n        ", HTML.DIV({
      class: "panel-title"
    }, "\n          ", HTML.I({
      class: function() {
        return [ "fa fa-", Spacebars.mustache(view.lookup("name")) ];
      }
    }), "\n          ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n\n        "), "\n        ", HTML.DIV({
      class: "panel-controls"
    }, "\n          ", HTML.INPUT(HTML.Attrs({
      class: "checkbox-switch",
      type: "checkbox",
      name: "enabled",
      "data-id": function() {
        return Spacebars.mustache(view.lookup("packageId"));
      },
      "data-key": function() {
        return Spacebars.mustache(view.lookup("settingsKey"));
      }
    }, function() {
      return Spacebars.attrMustache(view.lookup("checked"), view.lookup("enabled"));
    })), "\n        "), "\n      "), "\n      ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), view.lookup("enabled")) ];
      }
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n      "), "\n    "), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/settings/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings.html"));
module.watch(require("./settings.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/settings/settings.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 3);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Shops;
module.watch(require("../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 5);
Template.paymentSettings.helpers({
  checked: function (enabled) {
    if (enabled === true) {
      return "checked";
    }

    return "";
  },
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  },
  paymentMethodOptions: function () {
    var paymentMethods = Reaction.Apps({
      provides: "paymentMethod"
    });
    var options = [{
      label: i18next.t("app.auto"),
      value: "none"
    }];

    if (paymentMethods && _isArray(paymentMethods)) {
      for (var _iterator = paymentMethods, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray2) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _method = _ref;

        if (_method.enabled === true) {
          options.push({
            label: i18next.t(_method.i18nKeyLabel),
            value: _method.settingsKey
          });
        }
      }
    }

    return options;
  },
  shop: function () {
    return Shops.findOne(Reaction.getShopId());
  }
}); // toggle payment methods visibility

Template.paymentSettings.events({
  "change input[name=enabled]": function (event) {
    event.preventDefault();
    var settingsKey = event.target.getAttribute("data-key");
    var packageId = event.target.getAttribute("data-id");
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }]; // update package registry

    if (packageId) {
      Meteor.call("registry/update", packageId, settingsKey, fields);
      Meteor.call("shop/togglePackage", packageId, !event.target.checked);
    }
  }
});
AutoForm.hooks({
  shopEditPaymentMethodsForm: {
    onSuccess: function () {
      return Alerts.toast(i18next.t("shopSettings.shopPaymentMethodsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("shopSettings.shopPaymentMethodsFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/payments/client/index.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkout"));
module.watch(require("./settings"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"shipping":{"client":{"templates":{"checkout":{"shipping.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/checkout/shipping.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shipping.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shipping.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/checkout/template.shipping.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("coreCheckoutShipping");
Template["coreCheckoutShipping"] = new Template("Template.coreCheckoutShipping", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, "\n    ", HTML.DIV({
    class: "panel-heading"
  }, "\n      ", Spacebars.include(view.lookupTemplate("checkoutStepBadge")), "\n\n      ", HTML.Raw('<h3 class="panel-title">\n        <span data-i18n="checkoutShipping.selectShippingOption">Select shipping option</span>\n      </h3>'), "\n    "), "\n    ", Blaze.If(function() {
    return Spacebars.call(view.lookup("isReady"));
  }, function() {
    return [ "\n      ", HTML.DIV({
      class: "panel-body"
    }, "\n        ", HTML.UL({
      class: "checkout-shipping list-group"
    }, "\n          ", Blaze.Each(function() {
      return Spacebars.call(view.lookup("shipmentQuotes"));
    }, function() {
      return [ "\n            ", HTML.LI({
        class: function() {
          return [ "list-group-item ", Spacebars.mustache(view.lookup("isSelected"), view.lookup("..")) ];
        },
        "data-carrier": function() {
          return Spacebars.mustache(view.lookup("carrier"));
        },
        "data-method": function() {
          return Spacebars.mustache(view.lookup("method"));
        }
      }, "\n              ", HTML.SPAN({
        class: "text-left"
      }, Blaze.View("lookup:method.carrier", function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("method"), "carrier"));
      }), " - ", Blaze.View("lookup:method.label", function() {
        return Spacebars.mustache(Spacebars.dot(view.lookup("method"), "label"));
      })), "\n              ", HTML.SPAN({
        class: "pull-right"
      }, Blaze.View("lookup:formatPrice", function() {
        return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("rate"));
      })), "\n            "), "\n          " ];
    }, function() {
      return [ "\n            ", Blaze.If(function() {
        return Spacebars.call(view.lookup("hasShippingMethods"));
      }, function() {
        return [ "\n              ", HTML.DIV("\n                ", HTML.DIV({
          class: "spinner-container"
        }, "\n                  ", HTML.DIV({
          class: "spinner"
        }), "\n                "), "\n              "), "\n            " ];
      }, function() {
        return [ "\n              ", HTML.DIV({
          class: "panel-body"
        }, "\n                ", Blaze.If(function() {
          return Spacebars.call(view.lookup("isAdmin"));
        }, function() {
          return [ "\n                  ", HTML.DIV({
            class: "alert alert-danger"
          }, "\n                    ", HTML.SPAN({
            "data-i18n": "checkoutShipping.noShippingMethods"
          }, "No shipping methods are configured."), "\n                    ", HTML.A({
            href: "#",
            "data-event-action": "configure-shipping"
          }, "\n                      ", HTML.SPAN({
            "data-i18n": "checkoutShipping.configureNow"
          }, "Configure now."), "\n                    "), "\n                  "), "\n                " ];
        }, function() {
          return [ "\n                  ", HTML.DIV({
            class: "alert alert-danger"
          }, "\n                    ", HTML.SPAN({
            "data-i18n": "checkoutShipping.noShippingMethods"
          }, "No shipping methods are available for this shop."), "\n                    ", HTML.SPAN({
            "data-i18n": "checkoutShipping.contactAdmin"
          }, "Please contact the store administrator."), "\n                  "), "\n                " ];
        }), "\n              "), "\n            " ];
      }), "\n          " ];
    }), "\n        "), "\n      "), "\n    " ];
  }, function() {
    return [ "\n      ", HTML.DIV({
      class: "spinner-container"
    }, "\n        ", HTML.DIV({
      class: "spinner"
    }), "\n      "), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shipping.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/checkout/shipping.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 0);

var _uniq;

module.watch(require("lodash/uniq"), {
  "default": function (v) {
    _uniq = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var EJSON;
module.watch(require("meteor/ejson"), {
  EJSON: function (v) {
    EJSON = v;
  }
}, 3);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 4);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);
var Cart;
module.watch(require("../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 7);

// Because we are duplicating shipment quotes across shipping records
// we will get duplicate shipping quotes but we only want to diplay one
// So this function eliminates duplicates

/**
 * Return a unique list of objects
 * @param {Array} objs - An array of objects
 * @returns {Array} An array of object only containing unique members
 * @private
 */
function uniqObjects(objs) {
  var jsonBlobs = objs.map(function (obj) {
    return JSON.stringify(obj);
  });

  var uniqueBlobs = _uniq(jsonBlobs);

  return uniqueBlobs.map(function (blob) {
    return EJSON.parse(blob);
  });
} // cartShippingQuotes
// returns multiple methods

/**
 * cartShippingQuotes - returns a list of all the shipping costs/quotations
 * of each available shipping carrier like UPS, Fedex etc.
 * @param {Object} currentCart - The current cart that's about
 * to be checked out.
 * @returns {Array} - an array of the quotations of multiple shipping
 * carriers.
 */


function cartShippingQuotes(currentCart) {
  var cart = currentCart || Cart.findOne();
  var shipmentQuotes = [];

  if (cart) {
    if (cart.shipping) {
      for (var _iterator = cart.shipping, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _shipping = _ref;

        if (_shipping.shipmentQuotes) {
          for (var _iterator2 = _shipping.shipmentQuotes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
            var _ref2;

            if (_isArray2) {
              if (_i2 >= _iterator2.length) break;
              _ref2 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done) break;
              _ref2 = _i2.value;
            }

            var _quote = _ref2;
            shipmentQuotes.push(_quote);
          }
        }
      }
    }
  }

  return uniqObjects(shipmentQuotes);
}

function shippingMethodsQueryStatus(currentCart) {
  var cart = currentCart || Cart.findOne();
  var queryStatus;
  var failingShippingProvider;

  if (cart) {
    if (cart.shipping) {
      for (var _iterator3 = cart.shipping, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var _shipping2 = _ref3;
        var quotesQueryStatus = _shipping2.shipmentQuotesQueryStatus;

        if (quotesQueryStatus) {
          queryStatus = quotesQueryStatus.requestStatus;
        }

        if (queryStatus === "error") {
          failingShippingProvider = quotesQueryStatus.shippingProvider;
        }
      }
    }
  }

  return [queryStatus, failingShippingProvider];
}
/**
 * cartShipmentMethods - gets current shipment methods.
 * @return {Array} - Returns multiple methods if more than one
 * carrier has been chosen.
 */


function cartShipmentMethods() {
  var cart = Cart.findOne();
  var shipmentMethods = [];

  if (cart) {
    if (cart.shipping) {
      for (var _iterator4 = cart.shipping, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
        var _ref4;

        if (_isArray4) {
          if (_i4 >= _iterator4.length) break;
          _ref4 = _iterator4[_i4++];
        } else {
          _i4 = _iterator4.next();
          if (_i4.done) break;
          _ref4 = _i4.value;
        }

        var _shipping3 = _ref4;
        shipmentMethods.push(_shipping3.shipmentMethod);
      }
    }
  }

  return shipmentMethods;
}

function enabledShipping() {
  var enabledShippingArr = [];
  var apps = Reaction.Apps({
    provides: "shippingSettings",
    enabled: true,
    shopId: Reaction.getPrimaryShopId()
  });

  for (var _iterator5 = apps, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
    var _ref5;

    if (_isArray5) {
      if (_i5 >= _iterator5.length) break;
      _ref5 = _iterator5[_i5++];
    } else {
      _i5 = _iterator5.next();
      if (_i5.done) break;
      _ref5 = _i5.value;
    }

    var _app = _ref5;
    if (_app.enabled === true) enabledShippingArr.push(_app);
  }

  return enabledShippingArr;
}

Template.coreCheckoutShipping.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("Shipping");
  });
  this.state = new ReactiveDict();
  this.state.setDefault({
    isLoadingShippingMethods: true
  });
  var enabled = enabledShipping();
  var isEnabled = enabled.length;
  var shippingOpts = {
    provides: "settings",
    name: "settings/shipping",
    template: "shippingSettings"
  }; // If shipping not set, show shipping settings dashboard

  if (!isEnabled) {
    Reaction.showActionView(shippingOpts);
  }
});
Template.coreCheckoutShipping.helpers({
  // retrieves current rates and updates shipping rates
  // in the users cart collection (historical, and prevents repeated rate lookup)
  shipmentQuotes: function () {
    var instance = Template.instance();

    if (instance.subscriptionsReady()) {
      var cart = Cart.findOne(); // isLoadingShippingMethods is updated here because, when this template
      // reacts to a change in data, this method is called before hasShippingMethods().

      var isLoadingShippingMethods = shippingMethodsQueryStatus()[0] === "pending";
      instance.state.set("isLoadingShippingMethods", isLoadingShippingMethods);
      var shippingQuotes = cartShippingQuotes(cart);
      return shippingQuotes;
    }
  },
  hasShippingMethods: function () {
    var instance = Template.instance();
    var isLoadingShippingMethods = instance.state.get("isLoadingShippingMethods");

    if (isLoadingShippingMethods) {
      return true;
    } // Useful for when shipping methods are enabled, but querying them fails
    // due to internet connection issues.


    var quotesQueryStatus = shippingMethodsQueryStatus();
    var didAllQueriesFail = quotesQueryStatus[0] === "error" && quotesQueryStatus[1] === "all";

    if (didAllQueriesFail) {
      return false;
    }

    var hasEnabledShippingProviders = enabledShipping().length > 0;

    if (hasEnabledShippingProviders) {
      return true;
    }

    return false;
  },
  // helper to display currently selected shipmentMethod
  isSelected: function () {
    var self = this;
    var shipmentMethods = cartShipmentMethods();

    for (var _iterator6 = shipmentMethods, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
      var _ref6;

      if (_isArray6) {
        if (_i6 >= _iterator6.length) break;
        _ref6 = _iterator6[_i6++];
      } else {
        _i6 = _iterator6.next();
        if (_i6.done) break;
        _ref6 = _i6.value;
      }

      var _method = _ref6;

      // if there is already a selected method, set active
      if (_isEqual(self.method, _method)) {
        return "active";
      }
    }

    return null;
  },
  isReady: function () {
    var instance = Template.instance();
    var isReady = instance.subscriptionsReady();

    if (Reaction.Subscriptions.Cart.ready()) {
      if (isReady) {
        return true;
      }
    }

    return false;
  },

  /**
   * Template helper that checks to see if the user has permissions for the shop
   * responsible for shipping rates. This is the primary shop unless
   * `merchantShippingRates` is enabled in marketplace
   * @method isAdmin
   * @return {Boolean} true if the user has admin access, otherwise false
   */
  isAdmin: function () {
    var marketplaceSettings = Reaction.marketplace;

    if (marketplaceSettings && marketplaceSettings.merchantShippingRates) {
      Reaction.hasAdminAccess();
    }

    return Reaction.hasAdminAccess(Reaction.getPrimaryShopId());
  }
}); //
// Set and store cart shipmentMethod
// this copies from shipmentMethods (retrieved rates)
// to shipmentMethod (selected rate)
//

Template.coreCheckoutShipping.events({
  "click .list-group-item": function (event) {
    event.preventDefault();
    event.stopPropagation();
    var cart = Cart.findOne();
    Meteor.call("cart/setShipmentMethod", cart._id, this.method, function (error) {
      if (error) throw new Meteor.Error("set-shipment-method-error", error.message);
    });
  },
  "click [data-event-action=configure-shipping]": function (event) {
    event.preventDefault();
    var dashboardRegistryEntry = Reaction.Apps({
      name: "reaction-dashboard",
      provides: "shortcut"
    });
    var shippingRegistryEntry = Reaction.Apps({
      name: "reaction-shipping",
      provides: "settings"
    });
    Reaction.showActionView([dashboardRegistryEntry[0], shippingRegistryEntry[0]]);
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"shipping.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/settings/shipping.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shipping.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shipping.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/settings/template.shipping.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shippingSettings");
Template["shippingSettings"] = new Template("Template.shippingSettings", (function() {
  var view = this;
  return Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "shippingSettings"
    }));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n        ", HTML.DIV({
      class: "panel-title"
    }, "\n          ", HTML.I({
      class: function() {
        return [ "fa fa-", Spacebars.mustache(view.lookup("name")) ];
      }
    }), "\n          ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n\n        "), "\n        ", HTML.DIV({
      class: "panel-controls"
    }, "\n          ", HTML.INPUT(HTML.Attrs({
      class: "checkbox-switch shipping-settings",
      type: "checkbox",
      name: "enabled",
      "data-id": function() {
        return Spacebars.mustache(view.lookup("packageId"));
      },
      "data-key": function() {
        return Spacebars.mustache(view.lookup("settingsKey"));
      }
    }, function() {
      return Spacebars.attrMustache(view.lookup("checked"), view.lookup("enabled"));
    })), "\n        "), "\n      "), "\n      ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), view.lookup("enabled")) ];
      }
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n      "), "\n    "), "\n    " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shipping.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/settings/shipping.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);

/*
 * Template shippinges Helpers
 */
Template.shippingSettings.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("Shipping");
  });
});
Template.shippingSettings.helpers({
  checked: function (enabled) {
    if (enabled === true) {
      return "checked";
    }

    return "";
  },
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  }
}); // toggle shipping methods visibility
// also toggles shipping method settings

Template.shippingSettings.events({
  /**
   * shippingSettings settings update enabled status for shipping service on change
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "change input.checkbox-switch.shipping-settings[name=enabled]": function (event) {
    event.preventDefault();
    var settingsKey = event.target.getAttribute("data-key");
    var packageId = event.target.getAttribute("data-id");
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }]; // save shipping registry updates

    if (packageId) {
      // update package registry
      Meteor.call("registry/update", packageId, settingsKey, fields); // also update shipping provider status

      Meteor.call("shipping/provider/toggle", packageId, settingsKey);
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/templates/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkout/shipping.html"));
module.watch(require("./checkout/shipping.js"));
module.watch(require("./settings/shipping.html"));
module.watch(require("./settings/shipping.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/shipping/client/index.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"ui":{"client":{"components":{"button":{"button.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/button.html                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.button.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.button.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/template.button.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("button");
Template["button"] = new Template("Template.button", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      template: Spacebars.call(view.lookup("element")),
      data: Spacebars.call(view.lookup("elementProps"))
    };
  }, function() {
    return Spacebars.include(function() {
      return Spacebars.call(Template.__dynamic);
    }, function() {
      return [ "\n    ", Blaze.If(function() {
        return Spacebars.call(Spacebars.dot(view.lookup(".."), "toggle"));
      }, function() {
        return [ "\n      ", Blaze.If(function() {
          return Spacebars.call(Spacebars.dot(view.lookup(".."), "toggleOn"));
        }, function() {
          return [ "\n      ", HTML.SPAN({
            class: "rui icon on"
          }, "\n        ", Blaze._TemplateWith(function() {
            return {
              component: Spacebars.call(view.lookup("iconComponent")),
              icon: Spacebars.call(Spacebars.dot(view.lookup(".."), "onIcon"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("React"));
          }), "\n      "), "\n      " ];
        }, function() {
          return [ "\n        ", HTML.SPAN({
            class: "rui icon"
          }, "\n          ", Blaze._TemplateWith(function() {
            return {
              component: Spacebars.call(view.lookup("iconComponent")),
              icon: Spacebars.call(Spacebars.dot(view.lookup(".."), "icon"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("React"));
          }), "\n        "), "\n      " ];
        }), "\n    " ];
      }, function() {
        return [ "\n      ", Blaze.If(function() {
          return Spacebars.call(Spacebars.dot(view.lookup(".."), "icon"));
        }, function() {
          return [ "\n        ", HTML.SPAN({
            class: "icon"
          }, "\n          ", Blaze._TemplateWith(function() {
            return {
              component: Spacebars.call(view.lookup("iconComponent")),
              icon: Spacebars.call(Spacebars.dot(view.lookup(".."), "icon"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("React"));
          }), "\n        "), "\n      " ];
        }), "\n    " ];
      }), "\n    ", HTML.SPAN({
        class: "title"
      }, "\n      ", Blaze.If(function() {
        return Spacebars.call(view.lookup("i18nKeyTitle"));
      }, function() {
        return [ "\n        ", Blaze.View("lookup:i18n", function() {
          return Spacebars.mustache(view.lookup("i18n"), view.lookup("i18nKeyTitle"), view.lookup("title"));
        }), "\n      " ];
      }, function() {
        return [ "\n        ", Blaze.View("lookup:title", function() {
          return Spacebars.mustache(view.lookup("title"));
        }), "\n      " ];
      }), "\n    "), "\n  " ];
    });
  });
}));

Template.__checkName("uiButtonElement");
Template["uiButtonElement"] = new Template("Template.uiButtonElement", (function() {
  var view = this;
  return HTML.BUTTON(HTML.Attrs(function() {
    return Spacebars.attrMustache(view.lookup("buttonAttributes"));
  }), "\n    ", HTML.DIV({
    class: "contents"
  }, "\n      ", Blaze._InOuterTemplateScope(view, function() {
    return Spacebars.include(function() {
      return Spacebars.call(view.templateContentBlock);
    });
  }), "\n    "), "\n  ");
}));

Template.__checkName("uiLinkElement");
Template["uiLinkElement"] = new Template("Template.uiLinkElement", (function() {
  var view = this;
  return HTML.A(HTML.Attrs(function() {
    return Spacebars.attrMustache(view.lookup("buttonAttributes"));
  }), "\n    ", Blaze._InOuterTemplateScope(view, function() {
    return Spacebars.include(function() {
      return Spacebars.call(view.templateContentBlock);
    });
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"button.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/button.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _isFunction;

module.watch(require("lodash/isFunction"), {
  "default": function (v) {
    _isFunction = v;
  }
}, 0);
var Tooltip;
module.watch(require("tether-tooltip"), {
  "default": function (v) {
    Tooltip = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var i18next, i18nextDep;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  },
  i18nextDep: function (v) {
    i18nextDep = v;
  }
}, 3);
var Icon;
module.watch(require("./.."), {
  Icon: function (v) {
    Icon = v;
  }
}, 4);
Template.button.onRendered(function () {
  var _this = this;

  var buttonElement = this.$("button, a")[0];

  this.createTooltip = function () {
    if (_this.data.tooltip) {
      if (_this.tooltip) {
        _this.tooltip.destroy();
      }

      _this.tooltip = new Tooltip({
        target: buttonElement,
        position: _this.data.tooltipPosition || "top left",
        content: i18next.t(_this.data.i18nKeyTooltip, _this.data.tooltip) || _this.data.tooltip
      });
    }
  };

  this.autorun(function () {
    i18nextDep.depend();

    _this.createTooltip();
  });
});
/* eslint no-unused-vars: 1 */
//
// TODO review Template.button helpers for unused elementProps
//

Template.button.helpers({
  iconComponent: function () {
    return Icon;
  },
  elementProps: function () {
    var data = Template.currentData();
    var className = data.className,
        status = data.status,
        type = data.type,
        href = data.href,
        title = data.title,
        label = data.label,
        i18nKeyTitle = data.i18nKeyTitle,
        i18nKeyLabel = data.i18nKeyLabel,
        i18nKeyTooltip = data.i18nKeyTooltip,
        tooltip = data.tooltip,
        icon = data.icon,
        toggle = data.toggle,
        onIcon = data.onIcon,
        toggleOn = data.toggleOn,
        onClick = data.onClick,
        attrs = (0, _objectWithoutProperties2.default)(data, ["className", "status", "type", "href", "title", "label", "i18nKeyTitle", "i18nKeyLabel", "i18nKeyTooltip", "tooltip", "icon", "toggle", "onIcon", "toggleOn", "onClick"]);
    return {
      buttonAttributes: (0, _objectSpread2.default)({}, attrs, {
        // Spread the attrs into this object
        // Then override any props from attrs with some better defaults
        "class": "rui button btn btn-" + status + " " + className,
        href: href,
        type: function () {
          if (!href) {
            return type || "button";
          }
        }
      })
    };
  },
  element: function () {
    var data = Template.currentData();

    if (data.type === "link") {
      return "uiLinkElement";
    }

    return "uiButtonElement";
  },
  i18nKeyTitle: function () {
    var _Template$instance = Template.instance(),
        data = _Template$instance.data;

    return data.itemKeyTitle || data.i18nKeyLabel;
  },
  title: function () {
    var _Template$instance2 = Template.instance(),
        data = _Template$instance2.data;

    return data.title || data.label;
  },
  toggleOn: function () {
    var instance = Template.instance();
    var toggleOn = instance.data.toggleOn;

    if (toggleOn) {
      if (_isFunction(toggleOn)) {
        return toggleOn(instance.data);
      }

      return toggleOn;
    }
  }
});
Template.button.events({
  "click .rui.button": function (event, instance) {
    if (instance.data.onClick) {
      instance.data.onClick(event);
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"button.jsx":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/button.jsx                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var createFragment;
module.watch(require("react-addons-create-fragment"), {
  "default": function (v) {
    createFragment = v;
  }
}, 2);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);

var Button =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Button, _Component);

  function Button(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleClick = function (event) {
      if (_this.props.tagName === "a") {
        event.preventDefault();
      } // If this is a toogle button, and has a onToggle callback function


      if (_this.props.toggle && _this.props.onToggle) {
        if (_this.props.toggleOn) {
          // If toggleOn is true, return the toggleOn value, or true
          _this.props.onToggle(event, _this.props.onValue || true);
        } else {
          // Otherwise return the value prop, or false
          _this.props.onToggle(event, _this.props.value || false);
        }
      } else if (_this.props.onClick) {
        _this.props.onClick(event, _this.props.value);
      }
    };

    _this.handleKeyUp = function (event) {
      // keyCode 32 (spacebar)
      // keyCode 13 (enter/return)
      if (event.keyCode === 32 || event.keyCode === 13) {
        _this.handleClick(event);
      }
    };

    _this.state = {
      tooltipOpen: false
    };
    _this.handleButtonMouseOver = _this.handleButtonMouseOver.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleButtonMouseOut = _this.handleButtonMouseOut.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = Button.prototype;

  _proto.handleButtonMouseOver = function () {
    function handleButtonMouseOver() {
      this.setState({
        tooltipOpen: this.props.tooltip ? true : false
      });
    }

    return handleButtonMouseOver;
  }();

  _proto.handleButtonMouseOut = function () {
    function handleButtonMouseOut() {
      this.setState({
        tooltipOpen: false
      });
    }

    return handleButtonMouseOut;
  }();

  _proto.renderOnStateIcon = function () {
    function renderOnStateIcon() {
      if (this.props.onIcon) {
        return React.createElement(Components.Icon, {
          icon: this.props.onIcon
        });
      }

      return null;
    }

    return renderOnStateIcon;
  }();

  _proto.renderNormalStateIcon = function () {
    function renderNormalStateIcon() {
      if (this.props.icon) {
        return React.createElement(Components.Icon, {
          icon: this.props.icon
        });
      }

      return null;
    }

    return renderNormalStateIcon;
  }();

  _proto.renderIcon = function () {
    function renderIcon() {
      if (this.props.toggle) {
        if (this.props.toggleOn) {
          return this.renderOnStateIcon();
        }
      }

      return this.renderNormalStateIcon();
    }

    return renderIcon;
  }();

  _proto.renderTooltipContent = function () {
    function renderTooltipContent() {
      if (this.isTooltipOpen && this.props.disabled === false) {
        if (typeof this.props.tooltip === "string") {
          return React.createElement(Components.Translation, {
            defaultValue: this.props.tooltip,
            i18nKey: this.props.i18nKeyTooltip
          });
        }

        return React.createElement("div", null, this.props.tooltip);
      }

      return null;
    }

    return renderTooltipContent;
  }();

  _proto.renderLabel = function () {
    function renderLabel() {
      if (this.props.label) {
        if (this.props.toggle) {
          if (this.props.toggleOn && this.props.toggleOnLabel) {
            return React.createElement(Components.Translation, {
              defaultValue: this.props.toggleOnLabel,
              i18nKey: this.props.i18nKeyToggleOnLabel
            });
          }
        }

        return React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        });
      }

      return null;
    }

    return renderLabel;
  }();

  _proto.render = function () {
    function render() {
      var _classnames;

      var _props = this.props,
          active = _props.active,
          status = _props.status,
          toggleOn = _props.toggleOn,
          primary = _props.primary,
          bezelStyle = _props.bezelStyle,
          className = _props.className,
          containerStyle = _props.containerStyle,
          iconAfter = _props.iconAfter,
          label = _props.label,
          i18nKeyTitle = _props.i18nKeyTitle,
          i18nKeyLabel = _props.i18nKeyLabel,
          i18nKeyTooltip = _props.i18nKeyTooltip,
          tabIndex = _props.tabIndex,
          tooltip = _props.tooltip,
          icon = _props.icon,
          toggle = _props.toggle,
          onIcon = _props.onIcon,
          eventAction = _props.eventAction,
          buttonType = _props.buttonType,
          toggleOnLabel = _props.toggleOnLabel,
          i18nKeyToggleOnLabel = _props.i18nKeyToggleOnLabel,
          tagName = _props.tagName,
          onClick = _props.onClick,
          onToggle = _props.onToggle,
          onValue = _props.onValue,
          tooltipAttachment = _props.tooltipAttachment,
          attrs = (0, _objectWithoutProperties2.default)(_props, ["active", "status", "toggleOn", "primary", "bezelStyle", "className", "containerStyle", "iconAfter", "label", "i18nKeyTitle", "i18nKeyLabel", "i18nKeyTooltip", "tabIndex", "tooltip", "icon", "toggle", "onIcon", "eventAction", "buttonType", "toggleOnLabel", "i18nKeyToggleOnLabel", "tagName", "onClick", "onToggle", "onValue", "tooltipAttachment"]);
      var classes = classnames((_classnames = {
        "rui": true,
        "btn": true,
        "btn-default": !primary && (status === null || status === undefined || status === "default"),
        "active": active || toggleOn,
        "btn-success": status === "success",
        "btn-danger": status === "danger",
        "btn-info": status === "info",
        "btn-warning": status === "warning",
        "btn-link": status === "link",
        "btn-cta": status === "cta",
        "btn-primary": primary === true || status === "primary"
      }, _classnames[bezelStyle || "flat"] = true, _classnames), className);
      var extraProps = {};

      if (tagName === "a") {
        extraProps.href = "#";
      } // If this button is not an anchor, or an actual button, then add
      // some extra props related to ARIA compliance for interactive components.
      //
      // - onKeyUp event handler for keyboard navigation
      // - role=button, as it's a simulated button
      // - tabIndex=0 so it obeys the natural tab flow


      if (tagName !== "button" && tagName !== "a") {
        extraProps.onKeyUp = this.handleKeyUp;
        extraProps.role = "button";
        extraProps.tabIndex = 0;
      }

      var buttonProps = Object.assign({
        "className": classes,
        "data-event-action": eventAction,
        "onFocus": this.handleButtonMouseOver,
        "onBlur": this.handleButtonMouseOut,
        "onMouseOut": this.handleButtonMouseOut,
        "onMouseOver": this.handleButtonMouseOver,
        "onClick": this.handleClick,
        "type": buttonType || "button"
      }, attrs, extraProps); // Create a react fragment for all the button children

      var buttonChildren;

      if (iconAfter) {
        buttonChildren = createFragment({
          label: this.renderLabel(),
          icon: this.renderIcon(),
          children: this.props.children
        });
      } else {
        buttonChildren = createFragment({
          icon: this.renderIcon(),
          label: this.renderLabel(),
          children: this.props.children
        });
      } // Button with tooltip gets some special treatment


      if (tooltip) {
        return React.createElement(tagName, buttonProps, React.createElement("span", {
          className: "rui btn-tooltip",
          style: (0, _objectSpread2.default)({
            display: "inline-flex"
          }, containerStyle)
        }, React.createElement(Components.Tooltip, {
          attachment: tooltipAttachment,
          tooltipContent: this.renderTooltipContent()
        }, buttonChildren)));
      } // Add a wrapped container with styles for standard button


      if (containerStyle) {
        buttonChildren = React.createElement("div", {
          style: containerStyle
        }, buttonChildren);
      } // Normal button, without tooltip


      return React.createElement(tagName, buttonProps, buttonChildren);
    }

    return render;
  }();

  (0, _createClass2.default)(Button, [{
    key: "isTooltipOpen",
    get: function () {
      return this.state.tooltipOpen;
    }
  }]);
  return Button;
}(Component);

Button.propTypes = {
  active: PropTypes.bool,
  bezelStyle: PropTypes.oneOf(["flat", "solid", "outline"]),
  buttonType: PropTypes.string,
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  containerStyle: PropTypes.object,
  disabled: PropTypes.bool,
  eventAction: PropTypes.string,
  i18nKeyLabel: PropTypes.string,
  i18nKeyTitle: PropTypes.string,
  i18nKeyToggleOnLabel: PropTypes.string,
  i18nKeyTooltip: PropTypes.string,
  icon: PropTypes.string,
  iconAfter: PropTypes.bool,
  label: PropTypes.string,
  onClick: PropTypes.func,
  onIcon: PropTypes.string,
  onToggle: PropTypes.func,
  onValue: PropTypes.any,
  primary: PropTypes.bool,
  status: PropTypes.string,
  tabIndex: PropTypes.string,
  tagName: PropTypes.string,
  title: PropTypes.string,
  toggle: PropTypes.bool,
  toggleOn: PropTypes.bool,
  toggleOnLabel: PropTypes.string,
  tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),
  tooltipAttachment: PropTypes.string,
  value: PropTypes.any
};
Button.defaultProps = {
  active: false,
  disabled: false,
  iconAfter: false,
  tagName: "button",
  toggle: false,
  bezelStyle: "flat",
  tooltipAttachment: "bottom center"
};
registerComponent("Button", Button);
module.exportDefault(Button);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"buttonSelect.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/buttonSelect.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Button;
module.watch(require("./button.jsx"), {
  "default": function (v) {
    Button = v;
  }
}, 4);

var ButtonSelect =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ButtonSelect, _Component);

  function ButtonSelect() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      toggle: "hidden",
      currentButton: {},
      buttons: [],
      activeButton: "",
      nonActiveButtons: [],
      defaultBgClassNames: "",
      toggleIcon: classnames({
        "fa": true,
        "fa-chevron-down": true,
        "text-center": true,
        "fa-icon": true
      }),
      toggleClassNames: classnames({
        "button-dropdown": true,
        "hidden": true
      })
    }, _this.handleDefaultState = function () {
      var _classnames;

      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
          props = _assertThisInitialize.props;

      var defaultButton = props.buttons.find(function (button) {
        return button.active;
      });
      var defaultBgClassNames = classnames((_classnames = {
        "button-select": true
      }, _classnames[defaultButton.bgColor] = true, _classnames));
      var defaultNonActiveButtons = props.buttons.filter(function (button) {
        return button.active === false || button.active === undefined;
      });
      var currentButton = React.createElement(Button, {
        eventAction: defaultButton.eventAction,
        status: defaultButton.status,
        bezelStyle: "solid",
        label: defaultButton.name,
        i18nKeyLabel: defaultButton.i18nKeyLabel,
        type: defaultButton.buttonType
      });
      return _this.setState({
        currentButton: currentButton,
        defaultBgClassNames: defaultBgClassNames,
        buttons: props.buttons,
        nonActiveButtons: defaultNonActiveButtons
      });
    }, _this.filterButtons = function () {
      var _this$state = _this.state,
          activeButton = _this$state.activeButton,
          buttons = _this$state.buttons;
      var nonActiveButtons = buttons.filter(function (button) {
        return button.name !== activeButton;
      });
      return _this.setState({
        nonActiveButtons: nonActiveButtons
      });
    }, _this.handleToggle = function () {
      var toggle = _this.state.toggle;
      var className;

      if (toggle === "hidden") {
        className = classnames({
          "button-dropdown": true,
          "hidden": false
        });
        return _this.setState({
          toggle: "show",
          toggleClassNames: className,
          toggleIcon: classnames({
            "fa": true,
            "fa-chevron-up": true,
            "text-center": true,
            "fa-icon": true
          })
        });
      }

      className = classnames({
        "button-dropdown": true,
        "hidden": true
      });
      return _this.setState({
        toggle: "hidden",
        toggleClassNames: className,
        toggleIcon: classnames({
          "fa": true,
          "fa-chevron-down": true,
          "text-center": true,
          "fa-icon": true
        })
      });
    }, _this.handleButtonChange = function (button) {
      var _classnames2;

      var currentButton = React.createElement(Button, {
        eventAction: button.eventAction,
        status: button.status,
        bezelStyle: "solid",
        label: button.name,
        i18nKeyLabel: button.i18nKeyLabel,
        type: button.buttonType
      });

      _this.handleToggle();

      return _this.setState({
        currentButton: currentButton,
        defaultBgClassNames: classnames((_classnames2 = {
          "button-select": true
        }, _classnames2[button.bgColor] = true, _classnames2)),
        activeButton: button.name
      }, function () {
        _this.filterButtons();
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ButtonSelect.prototype;

  _proto.componentWillMount = function () {
    function componentWillMount() {
      this.handleDefaultState();
    }

    return componentWillMount;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      var _state = this.state,
          toggleClassNames = _state.toggleClassNames,
          nonActiveButtons = _state.nonActiveButtons,
          defaultBgClassNames = _state.defaultBgClassNames,
          toggleIcon = _state.toggleIcon,
          currentButton = _state.currentButton;
      return React.createElement("div", {
        className: defaultBgClassNames
      }, React.createElement("div", {
        className: "button-group"
      }, currentButton, React.createElement(Components.Button, {
        tagName: "div",
        className: {
          "btn": false,
          "button-toggle": true
        },
        onClick: this.handleToggle
      }, React.createElement("i", {
        className: toggleIcon,
        "aria-hidden": "true"
      }))), React.createElement("div", {
        className: toggleClassNames
      }, nonActiveButtons.map(function (button, key) {
        return React.createElement("button", {
          className: "btn button-item",
          key: key,
          type: "button",
          onClick: function () {
            return _this2.handleButtonChange(button);
          }
        }, React.createElement(Components.Translation, {
          defaultValue: button.name,
          i18nKey: button.i18nKeyLabel
        }));
      })));
    }

    return render;
  }();

  return ButtonSelect;
}(Component);

ButtonSelect.propTypes = {
  buttons: PropTypes.array,
  currentButton: PropTypes.node,
  defaultButton: PropTypes.object,
  defaultNonActiveButtons: PropTypes.array,
  nonActiveButtons: PropTypes.array
};
registerComponent("ButtonSelect", ButtonSelect);
module.exportDefault(ButtonSelect);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"editButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/editButton.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);
var IconButton;
module.watch(require("./iconButton"), {
  "default": function (v) {
    IconButton = v;
  }
}, 2);

/**
 * Edit button is a special type of Icon Button that is toggable by default
 * and presents a pencil ( or edit icon ) in its of state, and a check ( or success icon)
 * when it is on.
 *
 * Use this button in places where you need a pre-styled button for toggling editing
 * states of components.
 *
 * @param {Object} props Props passed into component
 * @returns {IconButton} Retruns an IconButton component with pre-configured icons for editing
 */
var EditButton = function (props) {
  return React.createElement(IconButton, (0, _extends2.default)({
    icon: "fa fa-pencil",
    onIcon: "fa fa-check",
    toggle: true,
    primary: true,
    bezelStyle: "solid",
    kind: "round"
  }, props));
};

registerComponent("EditButton", EditButton);
module.exportDefault(EditButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"flatButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/flatButton.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var Button;
module.watch(require("./button.jsx"), {
  "default": function (v) {
    Button = v;
  }
}, 3);

var FlatButton = function (props) {
  var buttonClassName = classnames({
    rui: true,
    button: true
  });
  return React.createElement(Button, (0, _extends2.default)({
    className: buttonClassName
  }, props));
};

FlatButton.propTypes = (0, _objectSpread2.default)({}, Button.propTypes);
FlatButton.defaultProps = {
  bezelStyle: "flat"
};
registerComponent("FlatButton", FlatButton);
module.exportDefault(FlatButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"handle.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/handle.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

/**
 * Handle is a special type of button used for drag handles.
 * It uses the fa-bars icon by default, and does not have click or hover states
 *
 * Use this button in places where you need a pre-styled button for drag handles
 *
 * @param {Object} props Props passed into component
 * @returns {node} component with pre-configured icon for dragging
 */
var Handle = function (props) {
  var handle = React.createElement("div", {
    className: "rui drag-handle btn btn-drag-handle"
  }, React.createElement(Components.Icon, (0, _extends2.default)({
    icon: "fa fa-bars"
  }, props)));

  if (props.connectDragSource) {
    return props.connectDragSource(handle);
  }

  return handle;
};

Handle.propTypes = {
  connectDragSource: PropTypes.func
};
registerComponent("Handle", Handle);
module.exportDefault(Handle);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"iconButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/iconButton.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var Button;
module.watch(require("./button.jsx"), {
  "default": function (v) {
    Button = v;
  }
}, 3);

var IconButton = function (_ref) {
  var _classnames;

  var icon = _ref.icon,
      onIcon = _ref.onIcon,
      otherProps = (0, _objectWithoutProperties2.default)(_ref, ["icon", "onIcon"]);
  // otherProps.buttonKind === 'flat'
  // default should be default, flat is new css that makes the background transparent.
  var buttonClassName;

  if (otherProps.kind === "flat") {
    buttonClassName = classnames({
      "icon": true,
      "icon-only": true
    });
  } else if (otherProps.kind === "mediaGalleryStatus") {
    buttonClassName = classnames({
      "icon": true,
      "icon-only": true,
      "status-badge": true
    });
  } else if (otherProps.kind === "removeItem") {
    buttonClassName = classnames({
      "icon-only": true,
      "variant-edit": true,
      "remove-item-aria-container": true
    });
  } else {
    buttonClassName = classnames({
      "icon-only": true,
      "variant-edit": true
    });
  }

  var iconClassName = classnames((_classnames = {
    "fa-lg": true
  }, _classnames[icon] = true, _classnames));
  var onIconClassName;

  if (onIcon) {
    var _classnames2;

    onIconClassName = classnames((_classnames2 = {
      "fa-lg": true
    }, _classnames2[onIcon] = true, _classnames2));
  }

  return React.createElement(Button, (0, _extends2.default)({
    className: buttonClassName,
    icon: iconClassName,
    onIcon: onIconClassName,
    containerStyle: {
      display: "flex",
      width: "100%",
      justifyContent: "center"
    }
  }, otherProps));
};

IconButton.propTypes = (0, _objectSpread2.default)({}, Button.propTypes);
IconButton.defaultProps = {
  bezelStyle: "solid"
};
registerComponent("IconButton", IconButton);
module.exportDefault(IconButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./button.jsx"), {
  "default": function (v) {
    exports.Button = v;
  }
}, 0);
module.watch(require("./iconButton"), {
  "default": function (v) {
    exports.IconButton = v;
  }
}, 1);
module.watch(require("./editButton"), {
  "default": function (v) {
    exports.EditButton = v;
  }
}, 2);
module.watch(require("./visibilityButton"), {
  "default": function (v) {
    exports.VisibilityButton = v;
  }
}, 3);
module.watch(require("./handle"), {
  "default": function (v) {
    exports.Handle = v;
  }
}, 4);
module.watch(require("./buttonSelect"), {
  "default": function (v) {
    exports.ButtonSelect = v;
  }
}, 5);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"visibilityButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/button/visibilityButton.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);
var IconButton;
module.watch(require("./iconButton"), {
  "default": function (v) {
    IconButton = v;
  }
}, 2);

/**
 * Visibility button is a special type of Icon Button that is toggable by default
 * and presents a eye icon in its on state, and a eye-slash icon when it is off.
 *
 * Use this button in places where you need a pre-styled button for toggling visibility
 * states of components.
 *
 * @param {Object} props Props passed into component
 * @returns {IconButton} Retruns an IconButton component with pre-configured icons for visibility
 */
var VisibilityButton = function (props) {
  return React.createElement(IconButton, (0, _extends2.default)({
    icon: "fa fa-eye-slash",
    onIcon: "fa fa-eye",
    bezelStyle: "solid",
    primary: true,
    toggle: true
  }, props));
};

registerComponent("VisibilityButton", VisibilityButton);
module.exportDefault(VisibilityButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"cards":{"cardGroup.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cardGroup.html                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.cardGroup.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.cardGroup.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/template.cardGroup.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("cardGroup");
Template["cardGroup"] = new Template("Template.cardGroup", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui card-group"
  }, "\n    ", HTML.DIV({
    class: "header"
  }, "\n      ", HTML.SPAN({
    "data-i18n": function() {
      return [ "admin.groups.", Spacebars.mustache(view.lookup("title")) ];
    }
  }, Blaze.View("lookup:title", function() {
    return Spacebars.mustache(view.lookup("title"));
  })), "\n    "), "\n    ", HTML.DIV({
    class: "content"
  }, "\n      ", Blaze._InOuterTemplateScope(view, function() {
    return Spacebars.include(function() {
      return Spacebars.call(view.templateContentBlock);
    });
  }), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cards.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cards.html                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.cards.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.cards.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/template.cards.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("card");
Template["card"] = new Template("Template.card", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui card"
  }, "\n    ", HTML.DIV({
    class: "content"
  }, "\n      ", Blaze._InOuterTemplateScope(view, function() {
    return Spacebars.include(function() {
      return Spacebars.call(view.templateContentBlock);
    });
  }), "\n    "), "\n\n    ", HTML.DIV({
    class: "controls"
  }, "\n      ", Blaze.Each(function() {
    return {
      _sequence: Spacebars.call(view.lookup("controls")),
      _variable: "controlProps"
    };
  }, function() {
    return [ "\n        ", Blaze._TemplateWith(function() {
      return Spacebars.call(view.lookup("controlProps"));
    }, function() {
      return Spacebars.include(view.lookupTemplate("button"));
    }), "\n      " ];
  }), "\n    "), "\n  ");
}));

Template.__checkName("cardStandardContent");
Template["cardStandardContent"] = new Template("Template.cardStandardContent", (function() {
  var view = this;
  return HTML.H2(Blaze.View("lookup:title", function() {
    return Spacebars.mustache(view.lookup("title"));
  }));
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"card.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/card.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Children, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Children: function (v) {
    Children = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Card =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Card, _Component);

  function Card(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleExpanderClick = function (event) {
      if (_this.isControlled) {
        if (typeof _this.props.onExpand === "function") {
          _this.props.onExpand(event, (0, _assertThisInitialized2.default)(_this), _this.props.name, !_this.isExpanded);
        }
      } else {
        _this.setState({
          expanded: !_this.state.expanded
        }, function () {
          if (typeof _this.props.onExpand === "function") {
            _this.props.onExpand(event, (0, _assertThisInitialized2.default)(_this), _this.props.name, _this.isExpanded);
          }
        });
      }
    };

    _this.state = {
      expanded: true
    };
    return _this;
  }

  var _proto = Card.prototype;

  _proto.render = function () {
    function render() {
      var _this2 = this;

      var className = this.props.className;
      var elements = Children.map(this.props.children, function (child) {
        var newProps = {};

        if (child.props.actAsExpander) {
          newProps.actAsExpander = true;
          newProps.onClick = _this2.handleExpanderClick;
        }

        if (child.props.expandable || child.props.actAsExpander) {
          newProps.expanded = _this2.isExpanded;
        }

        return React.cloneElement(child, newProps);
      });
      var baseClassName = classnames({
        "panel": true,
        "panel-default": true,
        "panel-active": this.isExpanded,
        "closed": this.isExpanded === false
      }, className);
      return React.createElement("div", {
        className: baseClassName,
        style: this.props.style
      }, elements);
    }

    return render;
  }();

  (0, _createClass2.default)(Card, [{
    key: "isControlled",
    get: function () {
      return typeof this.props.expanded === "boolean";
    }
  }, {
    key: "isExpanded",
    get: function () {
      if (this.isControlled) {
        return this.props.expanded;
      }

      return this.state.expanded;
    }
  }]);
  return Card;
}(Component);

Card.defaultProps = {
  expandable: false
};
Card.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  expandable: PropTypes.bool,
  expanded: PropTypes.bool,
  name: PropTypes.string,
  onExpand: PropTypes.func,
  style: PropTypes.object
};
registerComponent("Card", Card);
module.exportDefault(Card);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cardBody.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cardBody.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var VelocityTransitionGroup;
module.watch(require("velocity-react"), {
  VelocityTransitionGroup: function (v) {
    VelocityTransitionGroup = v;
  }
}, 2);
var Radium;
module.watch(require("radium"), {
  "default": function (v) {
    Radium = v;
  }
}, 3);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 4);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 5);
var styles = {
  noPadding: {
    padding: 0
  }
};

var CardBody =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(CardBody, _Component);

  function CardBody() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = CardBody.prototype;

  _proto.renderCard = function () {
    function renderCard() {
      if (this.props.expanded) {
        var baseClassName = classnames({
          "rui": true,
          "panel-body": true,
          "no-padding": this.props.padded === false
        });
        return React.createElement("div", {
          className: baseClassName,
          style: [this.props.padded === false ? styles.noPadding : undefined]
        }, this.props.children);
      }

      return null;
    }

    return renderCard;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(VelocityTransitionGroup, {
        enter: {
          animation: "slideDown"
        },
        leave: {
          animation: "slideUp"
        }
      }, this.renderCard());
    }

    return render;
  }();

  return CardBody;
}(Component);

CardBody.defaultProps = {
  expandable: false,
  expanded: true
};
CardBody.propTypes = {
  children: PropTypes.node,
  expanded: PropTypes.bool,
  padded: PropTypes.bool
};
registerComponent("CardBody", CardBody, Radium);
module.exportDefault(Radium(CardBody));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cardGroup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cardGroup.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var CardGroup = function (_ref) {
  var children = _ref.children;
  return React.createElement("div", {
    className: "panel-group"
  }, children);
};

CardGroup.propTypes = {
  children: PropTypes.node
};
registerComponent("CardGroup", CardGroup);
module.exportDefault(CardGroup);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cardHeader.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cardHeader.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var CardHeader =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(CardHeader, _Component);

  function CardHeader() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (typeof _this.props.onClick === "function") {
        _this.props.onClick(event);
      }
    }, _this.handleSwitchChange = function (event, isChecked, name) {
      if (_this.props.expandOnSwitchOn && _this.props.actAsExpander && _this.props.expanded === false && isChecked === true) {
        _this.handleClick(event);
      }

      if (typeof _this.props.onSwitchChange === "function") {
        _this.props.onSwitchChange(event, isChecked, name);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = CardHeader.prototype;

  _proto.renderTitle = function () {
    function renderTitle() {
      if (this.props.title) {
        return React.createElement(Components.CardTitle, {
          i18nKeyTitle: this.props.i18nKeyTitle,
          title: this.props.title
        });
      }

      return null;
    }

    return renderTitle;
  }();

  _proto.renderImage = function () {
    function renderImage() {
      if (this.props.icon) {
        return React.createElement("div", {
          className: "image"
        }, React.createElement(Components.Icon, {
          icon: this.props.icon
        }));
      }

      if (this.props.imageView) {
        return React.createElement("div", {
          className: "image"
        }, this.props.imageView);
      }

      return null;
    }

    return renderImage;
  }();

  _proto.renderDisclsoureArrow = function () {
    function renderDisclsoureArrow() {
      var expanderClassName = classnames({
        rui: true,
        expander: true,
        open: this.props.expanded
      });
      return React.createElement("div", {
        className: expanderClassName
      }, React.createElement(Components.IconButton, {
        icon: "fa fa-angle-down",
        bezelStyle: "outline",
        style: {
          borderColor: "#dddddd"
        },
        onClick: this.handleClick
      }));
    }

    return renderDisclsoureArrow;
  }();

  _proto.renderChildren = function () {
    function renderChildren() {
      if (this.props.showSwitch) {
        return React.createElement(Components.Switch, {
          checked: this.props.switchOn,
          name: this.props.switchName,
          onChange: this.handleSwitchChange
        });
      }

      return this.props.children;
    }

    return renderChildren;
  }();

  _proto.render = function () {
    function render() {
      var validation = false;

      if (this.props.isValid === false) {
        validation = true;
      }

      var baseClassName = classnames({
        "rui": true,
        "panel-heading": true,
        "card-header": true,
        "expandable": this.props.actAsExpander,
        validation: validation
      });

      if (this.props.actAsExpander) {
        return React.createElement("div", {
          className: baseClassName
        }, React.createElement(Components.Button, {
          tagName: "div",
          className: {
            "btn": false,
            "content-view": true
          },
          onClick: this.handleClick
        }, this.renderImage(), this.renderTitle()), React.createElement("div", {
          className: "action-view"
        }, this.renderChildren()), this.renderDisclsoureArrow());
      }

      return React.createElement("div", {
        className: baseClassName
      }, React.createElement("div", {
        className: "content-view"
      }, this.renderTitle()), React.createElement("div", {
        className: "action-view"
      }, this.props.children));
    }

    return render;
  }();

  return CardHeader;
}(Component);

CardHeader.defaultProps = {
  actAsExpander: false,
  expandable: false
};
CardHeader.propTypes = {
  actAsExpander: PropTypes.bool,
  children: PropTypes.node,
  expandOnSwitchOn: PropTypes.bool,
  expanded: PropTypes.bool,
  i18nKeyTitle: PropTypes.string,
  icon: PropTypes.string,
  imageView: PropTypes.node,
  isValid: PropTypes.bool,
  onClick: PropTypes.func,
  onSwitchChange: PropTypes.func,
  showSwitch: PropTypes.bool,
  switchName: PropTypes.string,
  switchOn: PropTypes.bool,
  title: PropTypes.string
};
registerComponent("CardHeader", CardHeader);
module.exportDefault(CardHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cardTitle.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cardTitle.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var CardTitle = function (props) {
  var element = props.element,
      rest = (0, _objectWithoutProperties2.default)(props, ["element"]);

  if (element) {
    return React.cloneElement(element, rest);
  }

  return React.createElement("h3", {
    className: "panel-title"
  }, React.createElement(Components.Translation, {
    defaultValue: props.title,
    i18nKey: props.i18nKeyTitle
  }), props.children);
};

CardTitle.propTypes = {
  children: PropTypes.node,
  element: PropTypes.node,
  i18nKeyTitle: PropTypes.string,
  title: PropTypes.string
};
registerComponent("CardTitle", CardTitle);
module.exportDefault(CardTitle);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cardToolbar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cardToolbar.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var CardToolbar = function (_ref) {
  var children = _ref.children;
  return React.createElement("div", {
    className: "rui card-toolbar"
  }, children);
};

CardToolbar.propTypes = {
  children: PropTypes.node
};
registerComponent("CardToolbar", CardToolbar);
module.exportDefault(CardToolbar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cards.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/cards.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);

/**
* @typedef CardProps
* @type Object
* @property {Object} controls Reaction UI Button or other control props
* @property {function} onContentClick y The Y
*/
Template.card.events({
  "click .content": function (event, instance) {
    if (instance.data.onContentClick) {
      instance.data.onContentClick(event);
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./card"), {
  "default": function (v) {
    exports.Card = v;
  }
}, 0);
module.watch(require("./cardHeader"), {
  "default": function (v) {
    exports.CardHeader = v;
  }
}, 1);
module.watch(require("./cardTitle"), {
  "default": function (v) {
    exports.CardTitle = v;
  }
}, 2);
module.watch(require("./cardBody"), {
  "default": function (v) {
    exports.CardBody = v;
  }
}, 3);
module.watch(require("./cardGroup"), {
  "default": function (v) {
    exports.CardGroup = v;
  }
}, 4);
module.watch(require("./cardToolbar"), {
  "default": function (v) {
    exports.CardToolbar = v;
  }
}, 5);
module.watch(require("./settingsCard"), {
  "default": function (v) {
    exports.SettingsCard = v;
  }
}, 6);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settingsCard.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/cards/settingsCard.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Blaze;
module.watch(require("meteor/gadicc:blaze-react-component"), {
  "default": function (v) {
    Blaze = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var Components, registerComponent, composeWithTracker;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 4);

var SettingsCard =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SettingsCard, _Component);

  function SettingsCard() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleSwitchChange = function (event, isChecked) {
      if (typeof _this.props.onSwitchChange === "function") {
        _this.props.onSwitchChange(event, isChecked, _this.props.name, (0, _assertThisInitialized2.default)(_this));
      }
    }, _this.handleExpand = function (event, card, name, isExpanded) {
      if (_this.props.onExpand) {
        _this.props.onExpand(event, card, name, isExpanded);
      }

      if (_this.props.packageName && _this.props.saveOpenStateToPreferences) {
        var _Reaction$updateUserP;

        Reaction.updateUserPreferences(_this.props.packageName, "settingsCards", (_Reaction$updateUserP = {}, _Reaction$updateUserP[_this.props.name] = isExpanded, _Reaction$updateUserP));
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = SettingsCard.prototype;

  _proto.renderCardBody = function () {
    function renderCardBody() {
      if (this.props.template) {
        return React.createElement(Blaze, {
          template: this.props.template
        });
      }

      return this.props.children;
    }

    return renderCardBody;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.Card, {
        expandable: true,
        onExpand: this.handleExpand,
        expanded: this.isExpanded,
        name: this.props.name
      }, React.createElement(Components.CardHeader, {
        i18nKeyTitle: this.props.i18nKeyTitle,
        icon: this.props.icon,
        title: this.props.title,
        showSwitch: this.props.showSwitch,
        actAsExpander: true,
        switchOn: this.props.enabled,
        switchName: this.props.name,
        expandOnSwitchOn: true,
        onSwitchChange: this.handleSwitchChange
      }), React.createElement(Components.CardBody, {
        expandable: true,
        padded: this.props.padded
      }, this.renderCardBody()));
    }

    return render;
  }();

  (0, _createClass2.default)(SettingsCard, [{
    key: "isExpanded",
    get: function () {
      if (this.props.packageName && this.props.saveOpenStateToPreferences) {
        return this.props.preferences[this.props.name];
      }

      return this.props.expanded;
    }
  }]);
  return SettingsCard;
}(Component);

SettingsCard.defaultProps = {
  showSwitch: true
};
SettingsCard.propTypes = {
  children: PropTypes.node,
  enabled: PropTypes.bool,
  expanded: PropTypes.bool,
  i18nKeyTitle: PropTypes.string,
  icon: PropTypes.string,
  name: PropTypes.string,
  onExpand: PropTypes.func,
  onSwitchChange: PropTypes.func,
  packageName: PropTypes.string,
  padded: PropTypes.bool,
  preferences: PropTypes.object,
  saveOpenStateToPreferences: PropTypes.bool,
  showSwitch: PropTypes.bool,
  template: PropTypes.any,
  title: PropTypes.string
};

function composer(props, onData) {
  if (props.packageName && props.saveOpenStateToPreferences) {
    var preferences = Reaction.getUserPreferences(props.packageName, "settingsCards", {});
    onData(null, {
      preferences: preferences
    });
  } else {
    onData(null, {});
  }
}

var decoratedComponent = composeWithTracker(composer)(SettingsCard);
registerComponent("SettingsCard", SettingsCard, composeWithTracker(composer));
module.exportDefault(decoratedComponent);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"textfield":{"textfield.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/textfield/textfield.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.textfield.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.textfield.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/textfield/template.textfield.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("textfield");
Template["textfield"] = new Template("Template.textfield", (function() {
  var view = this;
  return HTML.DIV({
    class: "rui textfield"
  }, "\n    ", HTML.INPUT({
    type: "text",
    name: function() {
      return Spacebars.mustache(view.lookup("name"));
    },
    value: function() {
      return Spacebars.mustache(view.lookup("value"));
    },
    placeholder: function() {
      return Spacebars.mustache(view.lookup("placeholder"));
    }
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"textfield.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/textfield/textfield.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var TextareaAutosize;
module.watch(require("react-textarea-autosize"), {
  "default": function (v) {
    TextareaAutosize = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 5);

var TextField =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TextField, _Component);

  function TextField() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.onChange = function (event) {
      if (_this.props.onChange) {
        _this.props.onChange(event, _this.getEventValue(event), _this.props.name);
      }
    }, _this.onBlur = function (event) {
      if (_this.props.onBlur) {
        _this.props.onBlur(event, _this.getEventValue(event), _this.props.name);
      }
    }, _this.onFocus = function (event) {
      if (_this.props.onFocus) {
        _this.props.onFocus(event, _this.getEventValue(event), _this.props.name);
      }
    }, _this.onKeyDown = function (event) {
      if (_this.props.onKeyDown) {
        _this.props.onKeyDown(event, _this.props.name);
      }

      if (_this.props.onReturnKeyDown && event.keyCode === 13) {
        _this.props.onReturnKeyDown(event, event.target.value, _this.props.name);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = TextField.prototype;

  _proto.getEventValue = function () {
    function getEventValue(event) {
      if (this.props.type === "number") {
        try {
          return Number(event.target.value);
        } catch (err) {
          return event.target.value;
        }
      }

      return event.target.value;
    }

    return getEventValue;
  }();
  /**
   * onValueChange
   * @summary set the state when the value of the input is changed
   * @param  {Event} event Event object
   * @return {void}
   */


  /**
   * Render a multiline input (textarea)
   * @return {JSX} jsx
   */
  _proto.renderMultilineInput = function () {
    function renderMultilineInput() {
      var placeholder = i18next.t(this.props.i18nKeyPlaceholder, {
        defaultValue: this.props.placeholder
      });
      return React.createElement(TextareaAutosize, {
        className: this.props.name + "-edit-input",
        onBlur: this.onBlur,
        onChange: this.onChange,
        onFocus: this.onFocus,
        placeholder: placeholder,
        ref: "input",
        value: this.value,
        style: this.props.style,
        disabled: this.props.disabled,
        maxRows: this.props.maxRows,
        id: this.props.id
      });
    }

    return renderMultilineInput;
  }();
  /**
   * Render a singleline input
   * @return {JSX} jsx
   */


  _proto.renderSingleLineInput = function () {
    function renderSingleLineInput() {
      var _classnames;

      var inputClassName = classnames((_classnames = {}, _classnames[(this.props.name || "text") + "-edit-input"] = true, _classnames), this.props.className);
      var placeholder = i18next.t(this.props.i18nKeyPlaceholder, {
        defaultValue: this.props.placeholder
      });
      return React.createElement("input", {
        className: inputClassName,
        name: this.props.name,
        onBlur: this.onBlur,
        onChange: this.onChange,
        onFocus: this.onFocus,
        onKeyDown: this.onKeyDown,
        placeholder: placeholder,
        ref: "input",
        type: this.props.type || "text",
        min: this.props.minValue,
        max: this.props.maxValue,
        value: this.value,
        style: this.props.style,
        disabled: this.props.disabled,
        id: this.props.id
      });
    }

    return renderSingleLineInput;
  }();
  /**
   * Render either a multiline (textarea) or singleline (input)
   * @return {JSX} jsx template
   */


  _proto.renderField = function () {
    function renderField() {
      if (this.props.multiline === true) {
        return this.renderMultilineInput();
      }

      return this.renderSingleLineInput();
    }

    return renderField;
  }();
  /**
   * Render the label for the text field if one is provided in props
   * @return {ReactNode|null} react node or null
   */


  _proto.renderLabel = function () {
    function renderLabel() {
      if (this.props.label) {
        return React.createElement("label", {
          htmlFor: this.props.id
        }, React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        }));
      }

      return null;
    }

    return renderLabel;
  }();
  /**
   * Render help text or validation message
   * @return {ReactNode|null} react node or null
   */


  _proto.renderHelpText = function () {
    function renderHelpText() {
      var helpMode = this.isHelpMode;
      var message = this.validationMessage;
      var helpText = this.props.helpText;
      var i18nKey = this.props.i18nKeyHelpText;

      if (this.isValid === false && message) {
        helpText = message.message;
        i18nKey = message.i18nKeyMessage;
      } // If this is a validation message, show even if helpMode is false


      if (this.isValid === false && message) {
        return React.createElement("span", {
          className: "help-block"
        }, React.createElement(Components.Translation, {
          defaultValue: helpText,
          i18nKey: i18nKey
        }));
      } // If this is a non-validation message, only show if helpMode is true


      if (helpText && helpMode) {
        return React.createElement("span", {
          className: "help-block"
        }, React.createElement(Components.Translation, {
          defaultValue: helpText,
          i18nKey: i18nKey
        }));
      }

      return null;
    }

    return renderHelpText;
  }();
  /**
   * Render Component
   * @return {JSX} component
   */


  _proto.render = function () {
    function render() {
      var classes = classnames({
        // Base
        "rui": true,
        "textfield": true,
        "form-group": true,
        "has-error": this.isValid === false,
        "has-success": this.isValid === true,
        // Alignment
        "center": this.props.align === "center",
        "left": this.props.align === "left",
        "right": this.props.align === "right"
      });
      return React.createElement("div", {
        className: classes,
        style: this.props.textFieldStyle
      }, this.renderLabel(), this.renderField(), this.renderHelpText(), React.createElement("span", {
        className: "product-detail-message",
        id: "{{field}}-message"
      }));
    }

    return render;
  }();

  (0, _createClass2.default)(TextField, [{
    key: "value",

    /**
     * Getter: value
     * @return {String} value for text input
     */
    get: function () {
      // if the props.value is not a number
      // return either the value or and empty string
      if (isNaN(this.props.value)) {
        return this.props.value || "";
      }

      return this.props.value;
    }
    /**
     * Getter: isValid
     * @return {Boolean} true/false if field is valid from props.isValid or props.valitation[this.props.name].isValid
     */

  }, {
    key: "isValid",
    get: function () {
      var isValid = this.props.isValid;

      if (typeof isValid === "boolean") {
        return isValid;
      } else if (this.validationMessage) {
        return false;
      }

      return undefined;
    }
  }, {
    key: "isHelpMode",
    get: function () {
      // TODO: add functionality to toggle helpMode on / off.
      // When on, helpText will always show.
      // When off, only validation messages will show.
      // For now, all helpText will show, meaning this doesn't affect how the app currently works.
      // This is here just to lay the foundation for when we add the toggle.
      return true;
    }
  }, {
    key: "validationMessage",
    get: function () {
      var _props = this.props,
          name = _props.name,
          validation = _props.validation;

      if ((0, _typeof2.default)(validation) === "object" && validation.messages && validation.messages[name]) {
        return validation.messages[name];
      }

      return undefined;
    }
  }]);
  return TextField;
}(Component);

TextField.propTypes = {
  align: PropTypes.oneOf(["left", "center", "right", "justify"]),
  className: PropTypes.string,
  disabled: PropTypes.bool,
  helpText: PropTypes.string,
  i18nKeyHelpText: PropTypes.string,
  i18nKeyLabel: PropTypes.string,
  i18nKeyPlaceholder: PropTypes.string,
  id: PropTypes.string,
  isValid: PropTypes.bool,
  label: PropTypes.string,
  maxRows: PropTypes.number,
  maxValue: PropTypes.any,
  minValue: PropTypes.number,
  multiline: PropTypes.bool,
  name: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  onFocus: PropTypes.func,
  onKeyDown: PropTypes.func,
  onReturnKeyDown: PropTypes.func,
  placeholder: PropTypes.string,
  style: PropTypes.object,
  textFieldStyle: PropTypes.object,
  type: PropTypes.string,
  validation: PropTypes.object,
  value: PropTypes.any
};
registerComponent("TextField", TextField);
module.exportDefault(TextField);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"table":{"sortableTableComponents":{"filter.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/sortableTableComponents/filter.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var TextField;
module.watch(require("../.."), {
  TextField: function (v) {
    TextField = v;
  }
}, 2);

var SortableTableFilter =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SortableTableFilter, _Component);

  function SortableTableFilter() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = SortableTableFilter.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(TextField, {
        i18nKeyPlaceholder: "reactionUI.components.sortableTable.filterPlaceholder",
        id: "react-table-filter-input",
        name: this.props.name,
        onChange: this.props.onChange,
        placeholder: "Filter Data",
        tabIndex: 0,
        type: "text",
        value: this.props.value
      });
    }

    return render;
  }();

  return SortableTableFilter;
}(Component);

SortableTableFilter.propTypes = {
  name: PropTypes.string,
  onChange: PropTypes.func,
  value: PropTypes.string
};
module.exportDefault(SortableTableFilter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/sortableTableComponents/index.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./paginationButtons"), {
  "default": function (v) {
    exports.PaginationButtons = v;
  }
}, 0);
module.watch(require("./pagination"), {
  "default": function (v) {
    exports.SortableTablePagination = v;
  }
}, 1);
module.watch(require("./filter"), {
  "default": function (v) {
    exports.SortableTableFilter = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pagination.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/sortableTableComponents/pagination.js                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var PaginationButtons;
module.watch(require("../sortableTableComponents"), {
  PaginationButtons: function (v) {
    PaginationButtons = v;
  }
}, 3);

var SortableTablePagination =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SortableTablePagination, _Component);

  function SortableTablePagination(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handlePageSizeChange = function (event) {
      var onPageSizeChange = _this.props.onPageSizeChange;
      onPageSizeChange && onPageSizeChange(Number(event.target.value));
    };

    _this.getSafePage = _this.getSafePage.bind((0, _assertThisInitialized2.default)(_this));
    _this.changePage = _this.changePage.bind((0, _assertThisInitialized2.default)(_this));
    _this.applyPage = _this.applyPage.bind((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      page: props.page
    };
    return _this;
  }

  var _proto = SortableTablePagination.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState({
        page: nextProps.page
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.getSafePage = function () {
    function getSafePage(safePage) {
      var page = safePage;

      if (isNaN(page)) {
        page = this.props.page;
      }

      return Math.min(Math.max(page, 0), this.props.pages - 1);
    }

    return getSafePage;
  }();

  _proto.changePage = function () {
    function changePage(page) {
      var safePage = page;
      safePage = this.getSafePage(page);
      this.setState({
        page: safePage
      });

      if (this.props.page !== safePage) {
        this.props.onPageChange(safePage);
      }
    }

    return changePage;
  }();

  _proto.applyPage = function () {
    function applyPage(e) {
      e && e.preventDefault();
      var page = this.state.page;
      this.changePage(page === "" ? this.props.page : page);
    }

    return applyPage;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      var _props = this.props,
          pages = _props.pages,
          page = _props.page,
          showPageSizeOptions = _props.showPageSizeOptions,
          pageSizeOptions = _props.pageSizeOptions,
          pageSize = _props.pageSize,
          showPageJump = _props.showPageJump,
          canPrevious = _props.canPrevious,
          canNext = _props.canNext,
          className = _props.className,
          _props$PreviousCompon = _props.PreviousComponent,
          PreviousComponent = _props$PreviousCompon === void 0 ? PaginationButtons : _props$PreviousCompon,
          _props$NextComponent = _props.NextComponent,
          NextComponent = _props$NextComponent === void 0 ? PaginationButtons : _props$NextComponent;
      return React.createElement("div", {
        className: classnames(className, "-pagination"),
        style: this.props.paginationStyle
      }, React.createElement("div", {
        className: "-center"
      }, React.createElement("span", {
        className: "-pageInfo"
      }, this.props.pageText, " ", showPageJump ? React.createElement("div", {
        className: "-pageJump"
      }, React.createElement("input", {
        type: this.state.page === "" ? "text" : "number",
        onChange: function (e) {
          var val = e.target.value;
          var currentPage = val - 1;

          if (val === "") {
            return _this2.setState({
              page: val
            });
          }

          _this2.setState({
            page: _this2.getSafePage(currentPage)
          });
        },
        value: this.state.page === "" ? "" : this.state.page + 1,
        onBlur: this.applyPage,
        onKeyPress: function (e) {
          if (e.which === 13 || e.keyCode === 13) {
            _this2.applyPage();
          }
        }
      })) : React.createElement("span", {
        className: "-currentPage"
      }, page + 1), " ", this.props.ofText, " ", React.createElement("span", {
        className: "-totalPages"
      }, pages || 1)), showPageSizeOptions && React.createElement("span", {
        className: "select-wrap -pageSizeOptions"
      }, React.createElement("select", {
        onBlur: this.handlePageSizeChange,
        onChange: this.handlePageSizeChange,
        value: pageSize
      }, pageSizeOptions.map(function (option, i) {
        return React.createElement("option", {
          key: i,
          value: option
        }, option, " ", _this2.props.rowsText);
      })))), React.createElement("div", {
        className: "-previous"
      }, React.createElement(PreviousComponent, {
        onClick: function (e) {
          // eslint-disable-line no-unused-vars
          if (canPrevious) {
            return _this2.changePage(page - 1);
          }
        },
        disabled: !canPrevious
      }, this.props.previousText)), React.createElement("span", {
        className: "-divider"
      }, "|"), React.createElement("div", {
        className: "-next"
      }, React.createElement(NextComponent, {
        onClick: function (e) {
          // eslint-disable-line no-unused-vars
          if (canNext) {
            return _this2.changePage(page + 1);
          }
        },
        disabled: !canNext
      }, this.props.nextText)));
    }

    return render;
  }();

  return SortableTablePagination;
}(Component);

SortableTablePagination.propTypes = {
  NextComponent: PropTypes.func,
  PreviousComponent: PropTypes.func,
  canNext: PropTypes.bool,
  canPrevious: PropTypes.bool,
  className: PropTypes.string,
  nextText: PropTypes.string,
  ofText: PropTypes.string,
  onPageChange: PropTypes.func,
  onPageSizeChange: PropTypes.func,
  page: PropTypes.number,
  pageSize: PropTypes.number,
  pageSizeOptions: PropTypes.array,
  pageText: PropTypes.string,
  pages: PropTypes.number,
  paginationStyle: PropTypes.object,
  previousText: PropTypes.string,
  rowsText: PropTypes.string,
  showPageJump: PropTypes.bool,
  showPageSizeOptions: PropTypes.bool
};
module.exportDefault(SortableTablePagination);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paginationButtons.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/sortableTableComponents/paginationButtons.js                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Button;
module.watch(require("../.."), {
  Button: function (v) {
    Button = v;
  }
}, 2);
var i18next;
module.watch(require("../../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 3);

var PaginationButtons =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PaginationButtons, _Component);

  function PaginationButtons() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PaginationButtons.prototype;

  _proto.renderIcon = function () {
    function renderIcon() {
      var children = this.props.children;

      if (children === "Previous") {
        var angleDirection = i18next.dir() === "rtl" ? "right" : "left";
        return "fa fa-angle-" + angleDirection;
      }

      if (children === "Next") {
        var _angleDirection = i18next.dir() === "rtl" ? "left" : "right";

        return "fa fa-angle-" + _angleDirection;
      }

      return null;
    }

    return renderIcon;
  }();

  _proto.renderIconPosition = function () {
    function renderIconPosition() {
      var children = this.props.children;

      if (children === "Previous") {
        return false;
      }

      if (children === "Next") {
        return true;
      }

      return false;
    }

    return renderIconPosition;
  }();

  _proto.renderText = function () {
    function renderText() {
      var children = this.props.children;

      if (children === "Previous") {
        return " Previous";
      }

      if (children === "Next") {
        return "Next ";
      }

      return null;
    }

    return renderText;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          disabled = _props.disabled,
          onClick = _props.onClick;
      return React.createElement(Button, {
        bezelStyle: "flat",
        icon: this.renderIcon(),
        iconAfter: this.renderIconPosition(),
        label: this.renderText(),
        status: "default",
        tagName: "button",
        onClick: onClick,
        disabled: disabled,
        className: "sortableTable-pagination"
      });
    }

    return render;
  }();

  return PaginationButtons;
}(Component);

PaginationButtons.propTypes = {
  children: PropTypes.string,
  disabled: PropTypes.bool,
  onClick: PropTypes.func
};
module.exportDefault(PaginationButtons);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./sortableTable"), {
  "default": function (v) {
    exports.SortableTable = v;
  }
}, 0);
module.watch(require("./sortableTableLegacy"), {
  "default": function (v) {
    exports.SortableTableLegacy = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sortableTable.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/sortableTable.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var matchSorter;
module1.watch(require("match-sorter"), {
  "default": function (v) {
    matchSorter = v;
  }
}, 2);
var ReactTable;
module1.watch(require("react-table"), {
  "default": function (v) {
    ReactTable = v;
  }
}, 3);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Counts;
module1.watch(require("meteor/tmeasday:publish-counts"), {
  Counts: function (v) {
    Counts = v;
  }
}, 5);
var registerComponent;
module1.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 6);
var SortableTableFilter, SortableTablePagination;
module1.watch(require("./sortableTableComponents"), {
  SortableTableFilter: function (v) {
    SortableTableFilter = v;
  },
  SortableTablePagination: function (v) {
    SortableTablePagination = v;
  }
}, 7);

/**
 * @file SortableTable is a React Component wrapper around {@link https://react-table.js.org} ReactTable.
 * Any functionality from ReactTable should be available in SortableTable out of the box, but may require styling.
 * For more, see {@link https://react-table.js.org/#/story/readme ReactTable docs}
 *
 * @module SortableTable
 * @extends Component
 */
var SortableTable =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SortableTable, _Component);

  function SortableTable(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.customFilter = function (filter, row) {
      var id = filter.pivotId || filter.id;

      if (row[id] !== null && typeof row[id] === "string") {
        return row[id] !== undefined ? String(row[id].toLowerCase()).includes(filter.value.toLowerCase()) : true;
      }
    };

    _this.handleFilterInput = function (event, value, field) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));
    };

    _this.renderPaginationBottom = function () {
      if (_this.getTableData() === 0) {
        return false;
      }

      return true;
    };

    _this.setMinRows = function () {
      if (_this.getTableData() === 0) {
        return 3;
      }

      return 0;
    };

    _this.state = {
      currentPage: 0,
      filterInput: "",
      maxPages: 0,
      query: props.query || {}
    };
    _this.handleFilterInput = _this.handleFilterInput.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = SortableTable.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (nextProps.query !== this.props.query) {
        this.setState({
          query: nextProps.query
        });
      }
    }

    return componentWillReceiveProps;
  }();
  /**
   * @name getMeteorData()
   * @method
   * @summary Absorb publication / collection information from props, output data from subscription.
   * Use props to get collection, use that information to call Meteor to get subscription and output data for table.
   * @prop {String} matchingResultsCount - Send to Counts collection to get results count of sub
   * @prop {String} publication - publication to subscribe to
   * @prop {Object} collection - collection to get data from
   * @returns {Object} loading status (bool), results (object), and matchingResults (number)
   */


  _proto.getMeteorData = function () {
    function getMeteorData() {
      var _props = this.props,
          collection = _props.collection,
          matchingResultsCount = _props.matchingResultsCount,
          publication = _props.publication; // Get a count of the number of items matching the current filter.
      // If no filter is set it will return the total number of items in the collection.

      var matchingResults = Counts.get(matchingResultsCount);
      var options = {};
      var pubHandle = Meteor.subscribe(publication, this.state.query, Object.assign({}, options)); // optional transform of collection for grid results

      var results = collection.find(this.state.query, options).fetch();

      if (this.props.transform) {
        results = this.props.transform(results);
      }

      return {
        loading: !pubHandle.ready(),
        results: results,
        matchingResults: matchingResults
      };
    }

    return getMeteorData;
  }();
  /**
   * @name customFilter()
   * @method
   * @summary Replace default filter with customized filter, custom filter is case insensitive
   * custom filter searches entire string, not just from string start
   * @param {Object} filter user-typed data
   * @param {Object} row row info for associated filter
   * @returns {String|Boolean} replacement filter
   */


  /**
   * @name handleClick()
   * @summary Handle click on table row
   * @param {object} rowInfo row data passed in from ReactTable
   * @return {function} return onRowClick function prop, or undefined if not supplied
   */
  _proto.handleClick = function () {
    function handleClick(rowInfo) {
      var onRowClick = this.props.onRowClick;

      if (typeof onRowClick === "function") {
        return onRowClick({
          className: "sortable-table-row",
          props: {
            data: {
              _id: rowInfo.original._id,
              type: rowInfo.original.type
            }
          }
        });
      }
    }

    return handleClick;
  }();
  /**
   * @name renderColumns()
   * @method
   * @summary Absorb columnMetadata information from props, output columns to display
   * @prop {String} columnMetadata - Object of data field, column header
   * @returns {Object} data filed (string), translated header (string), and minWidth (number / undefined)
   */


  _proto.renderColumns = function () {
    function renderColumns() {
      var columnMetadata = this.props.columnMetadata; // Add minWidth = undefined to override 100px default set by ReactTable

      var displayColumns = columnMetadata.map(function (element) {
        return Object.assign({}, element, {
          minWidth: undefined
        });
      });
      return displayColumns;
    }

    return renderColumns;
  }();
  /**
   * @name renderData()
   * @method
   * @summary Take data from getMeteorData() and filter if needed, or spit out raw if no filter
   * @returns {Object} data filed (string), translated header (string), and minWidth (number / undefined)
   */


  _proto.renderData = function () {
    function renderData() {
      var _props2 = this.props,
          filteredFields = _props2.filteredFields,
          filterType = _props2.filterType;
      var filterInput = this.state.filterInput;
      var originalData = [];

      if (this.getMeteorData().results) {
        originalData = this.getMeteorData().results;
      }

      if (filterType === "both" || filterType === "table") {
        var filteredData = matchSorter(originalData, filterInput, {
          keys: filteredFields
        });
        return filteredData;
      }

      return originalData;
    }

    return renderData;
  }();
  /**
   * @name renderColumnFilter()
   * @summary Uses props to determine if Column Filters should be shown
   * @returns {Bool} returns true or false for column filters
   */


  _proto.renderColumnFilter = function () {
    function renderColumnFilter() {
      var filterType = this.props.filterType;

      if (filterType === "both" || filterType === "column") {
        return true;
      }

      return false;
    }

    return renderColumnFilter;
  }();
  /**
   * @name getTableData()
   * @method
   * @summary Checks if JSON data is passed vs publication data
   * @returns {Number} returns number of available data
   */


  _proto.getTableData = function () {
    function getTableData() {
      if (this.props.data) {
        return this.props.data.length;
      }

      return this.getMeteorData().matchingResults;
    }

    return getTableData;
  }();
  /**
   * @name renderTableFilter()
   * @method
   * @summary Uses props to determine if a Table Filter should be shown
   * @returns {node} returns JSX node or null
   */


  _proto.renderTableFilter = function () {
    function renderTableFilter() {
      var filterType = this.props.filterType;

      if (this.getTableData() !== 0) {
        if (filterType === "both" || filterType === "table") {
          return React.createElement(SortableTableFilter, {
            onChange: this.handleFilterInput,
            value: this.state.filterInput,
            name: "filterInput"
          });
        }
      }

      return null;
    }

    return renderTableFilter;
  }();
  /**
   * @name selectedRowsClassName()
   * @method
   * @summary If any rows are selected, give them a className of "selected-row"
   * @param {object} rowInfo row data passed in from ReactTable
   * @returns {String} className to apply to row that is selected, or empty string if no row is selected
   */


  _proto.selectedRowsClassName = function () {
    function selectedRowsClassName(rowInfo) {
      var selectedRows = this.props.selectedRows;
      var className = "";

      if (selectedRows && selectedRows.length) {
        if (rowInfo !== undefined && selectedRows.includes(rowInfo.row._id)) {
          className = "selected-row";
        }
      }

      return className;
    }

    return selectedRowsClassName;
  }();
  /**
   * @name displayNoResultsFound()
   * @method
   * @summary This function displays a 'No Results Found' when there is no data to populate the table
   * @return {node} returns a JSX node or empty string
   */


  _proto.displayNoResultsFound = function () {
    function displayNoResultsFound() {
      var displayText = "";

      if (this.getTableData() === 0) {
        displayText = React.createElement("span", {
          className: "sortableTable-noDataText"
        }, this.props.noDataMessage);
      }

      return displayText;
    }

    return displayNoResultsFound;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      var otherProps = (0, _extends2.default)({}, this.props);
      var defaultClassName = "-striped -highlight"; // All available props: https://github.com/tannerlinsley/react-table#props

      return React.createElement("div", null, this.renderTableFilter(), React.createElement(ReactTable, {
        className: otherProps.tableClassName || defaultClassName,
        columns: this.renderColumns(),
        data: otherProps.data || this.renderData(),
        defaultFilterMethod: this.customFilter,
        defaultPageSize: otherProps.defaultPageSize,
        filterable: this.renderColumnFilter(),
        minRows: this.setMinRows(),
        previousText: otherProps.previousText,
        nextText: otherProps.nextText,
        loadingText: otherProps.loadingText,
        noDataText: this.displayNoResultsFound(),
        pageText: otherProps.pageText,
        ofText: otherProps.ofText,
        rowsText: otherProps.rowsText,
        showPaginationTop: otherProps.showPaginationTop,
        sortable: otherProps.isSortable,
        PaginationComponent: SortableTablePagination,
        showPaginationBottom: this.renderPaginationBottom(),
        getTrProps: function (state, rowInfo, column, instance) {
          // eslint-disable-line no-unused-vars
          if (otherProps.getTrProps) {
            return otherProps.getTrProps();
          }

          return {
            onClick: function (e) {
              // eslint-disable-line no-unused-vars
              _this2.handleClick(rowInfo);
            },
            className: _this2.selectedRowsClassName(rowInfo)
          };
        },
        getTableProps: otherProps.getTableProps,
        getTrGroupProps: otherProps.getTrGroupProps,
        getTheadProps: otherProps.getTheadProps,
        getPaginationProps: otherProps.getPaginationProps,
        pages: otherProps.pages,
        onPageChange: otherProps.onPageChange,
        onPageSizeChange: otherProps.onPageSizeChange,
        page: otherProps.page,
        manual: otherProps.manual
      }));
    }

    return render;
  }();

  return SortableTable;
}(Component);
/**
  * @name SortableTable propTypes
  * @type {propTypes}
  * @param {Object} props - React PropTypes
  * @property {Object} collection collection to get data from
  * @property {Array} columnMetadata provides filtered columns with i18n headers
  * @property {Array} data provides array of objects to be used in place of publication data
  * @property {Number} defaultPageSize how many results per page
  * @property {Boolean} filterType filter by table, column, or both
  * @property {Array} filteredFields provides filtered columns, use columnMetadata instead
  * @property {Boolean} isFilterable show / hide column filter
  * @property {Boolean} isResizeable allow resizing of table columns
  * @property {Boolean} isSortable allow column sorting
  * @property {String} matchingResultsCount provides Count publication to get count from
  * @property {Number} minRows minimum amount of rows to display in table
  * @property {String} noDataMessage text to display when no data is available
  * @property {Function} onRowClick provides function / action when clicking on row
  * @property {String} publication provides publication to get Meteor data from
  * @property {object} query provides query for publication filtering
  * @property {Array} selectedRows provides selected rows in the table
  * @property {Function} transform transform of collection for grid results
  * @return {Array} React propTypes
  */


SortableTable.propTypes = {
  collection: PropTypes.object,
  columnMetadata: PropTypes.array,
  data: PropTypes.array,
  defaultPageSize: PropTypes.number,
  filterType: PropTypes.string,
  filteredFields: PropTypes.array,
  isFilterable: PropTypes.bool,
  isResizeable: PropTypes.bool,
  isSortable: PropTypes.bool,
  matchingResultsCount: PropTypes.string,
  minRows: PropTypes.number,
  noDataMessage: PropTypes.string,
  onRowClick: PropTypes.func,
  publication: PropTypes.string,
  query: PropTypes.object,
  selectedRows: PropTypes.array,
  transform: PropTypes.func
};
SortableTable.defaultProps = {
  defaultPageSize: 10,
  filterType: "table",
  isFilterable: false,
  isResizeable: true,
  isSortable: true,
  minRows: 0,
  noDataMessage: "No results found",
  previousText: "Previous",
  nextText: "Next",
  loadingText: "Loading...",
  noDataText: "No results found",
  pageText: "Page",
  ofText: "of",
  rowsText: "rows" // noDataMessage: <Translation defaultValue="No results found" i18nKey={"reactionUI.components.sortableTable.tableText.noDataMessage"} />,
  // previousText: <Translation defaultValue="Previous" i18nKey={"reactionUI.components.sortableTable.tableText.previousText"} />,
  // nextText: <Translation defaultValue="Next" i18nKey={"reactionUI.components.sortableTable.tableText.nextText"} />,
  // loadingText: <Translation defaultValue="Loading..." i18nKey={"reactionUI.components.sortableTable.tableText.loadingText"} />,
  // noDataText: <Translation defaultValue="No results found" i18nKey={"reactionUI.components.sortableTable.tableText.noDataText"} />,
  // pageText: <Translation defaultValue="Page" i18nKey={"reactionUI.components.sortableTable.tableText.pageText"} />,
  // ofText: <Translation defaultValue="of" i18nKey={"reactionUI.components.sortableTable.tableText.ofText"} />,
  // rowsText: <Translation defaultValue="rows" i18nKey={"reactionUI.components.sortableTable.tableText.rowsText"} />

};
registerComponent("SortableTable", SortableTable);
module1.exportDefault(SortableTable);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sortableTableLegacy.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/table/sortableTableLegacy.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var TacoTable;
module.watch(require("react-taco-table"), {
  TacoTable: function (v) {
    TacoTable = v;
  }
}, 2);

var SortableTableLegacy =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SortableTableLegacy, _Component);

  function SortableTableLegacy() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = SortableTableLegacy.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          data = _props.data,
          columns = _props.columns,
          onRowClick = _props.onRowClick;
      return React.createElement(TacoTable, {
        className: "table sortable-table",
        columns: columns,
        data: data,
        onRowClick: onRowClick
      });
    }

    return render;
  }();

  return SortableTableLegacy;
}(Component);

SortableTableLegacy.propTypes = {
  columns: PropTypes.array,
  data: PropTypes.array,
  onRowClick: PropTypes.func
};
module.exportDefault(SortableTableLegacy);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"alerts":{"alert.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/alerts/alert.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Alert =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Alert, _Component);

  function Alert() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Alert.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      var _this = this;

      if (this.props.alert) {
        var options = this.props.alert.options;

        if (this.props.onAlertSeen) {
          this.props.onAlertSeen(this.props.alert);
        }

        if (this.props.alert && this.props.alert.options && this.props.alert.options.autoHide) {
          setTimeout(function () {
            if (_this.props.onAlertRemove) {
              _this.props.onAlertRemove(_this.props.alert);
            }
          }, options.autoHide);
        }
      }
    }

    return componentDidMount;
  }();

  _proto.render = function () {
    function render() {
      var _classnames2;

      // If we have an alert object, most likely from the global alert system,
      // then display a standard alert
      if (this.props.alert) {
        var _classnames;

        var _props$alert = this.props.alert,
            message = _props$alert.message,
            mode = _props$alert.mode,
            options = _props$alert.options;

        var _alertClassName = classnames((_classnames = {
          alert: true
        }, _classnames["alert-" + (mode || "info")] = true, _classnames));

        return React.createElement("div", {
          className: _alertClassName
        }, React.createElement(Components.Translation, {
          defaultValue: message,
          i18nKey: options.i18nKey
        }), this.props.children);
      } // Otherwise, it's up to the user to provide the content via props


      var alertClassName = classnames((_classnames2 = {
        alert: true
      }, _classnames2["alert-" + (this.props.mode || "info")] = true, _classnames2));
      return React.createElement("div", {
        className: alertClassName
      }, this.props.children);
    }

    return render;
  }();

  return Alert;
}(Component);

Alert.propTypes = {
  alert: PropTypes.object,
  children: PropTypes.node,
  mode: PropTypes.oneOf(["info", "warning", "danger", "success"]),
  onAlertRemove: PropTypes.func,
  onAlertSeen: PropTypes.func
};
registerComponent("Alert", Alert);
module.exportDefault(Alert);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"alerts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/alerts/alerts.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var Alerts = function (_ref) {
  var alerts = _ref.alerts,
      handleAlertRemove = _ref.handleAlertRemove,
      handleAlertSeen = _ref.handleAlertSeen;
  return Array.isArray(alerts) && React.createElement("div", {
    className: "alert-container"
  }, alerts.map(function (alert) {
    return React.createElement(Components.Alert, {
      alert: alert,
      key: alert._id,
      onAlertRemove: handleAlertRemove,
      onAlertSeen: handleAlertSeen
    });
  }));
};

Alerts.propTypes = {
  alerts: PropTypes.arrayOf(PropTypes.object),
  handleAlertRemove: PropTypes.func,
  handleAlertSeen: PropTypes.func
};
module.exportDefault(Alerts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/alerts/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./alerts"), {
  "default": function (v) {
    exports.Alerts = v;
  }
}, 0);
module.watch(require("./alert"), {
  "default": function (v) {
    exports.Alert = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"app":{"app.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/app/app.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Switch;
module.watch(require("react-router-dom"), {
  Switch: function (v) {
    Switch = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var ToolbarContainer;
module.watch(require("../../../../dashboard/client/containers/toolbarContainer"), {
  "default": function (v) {
    ToolbarContainer = v;
  }
}, 4);
var Toolbar;
module.watch(require("../../../../dashboard/client/components/toolbar"), {
  "default": function (v) {
    Toolbar = v;
  }
}, 5);
var ActionViewContainer, PackageListContainer;
module.watch(require("../../../../dashboard/client/containers"), {
  ActionViewContainer: function (v) {
    ActionViewContainer = v;
  },
  PackageListContainer: function (v) {
    PackageListContainer = v;
  }
}, 6);
var ActionView, ShortcutBar;
module.watch(require("../../../../dashboard/client/components"), {
  ActionView: function (v) {
    ActionView = v;
  },
  ShortcutBar: function (v) {
    ShortcutBar = v;
  }
}, 7);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 8);
var ConnectedToolbarComponent = ToolbarContainer(Toolbar);
var ConnectedAdminViewComponent = ActionViewContainer(ActionView);
var ConnectedShortcutBarContainer = PackageListContainer(ShortcutBar);
var styles = {
  customerApp: {
    width: "100%"
  },
  adminApp: {
    width: "100%",
    height: "100vh",
    display: "flex",
    overflow: "hidden"
  },
  adminContentContainer: {
    flex: "1 1 auto",
    height: "100vh"
  },
  adminContainer: {
    display: "flex",
    flex: "1 1 auto"
  },
  scrollableContainer: {
    overflow: "auto"
  }
};

var App =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(App, _Component);

  function App() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleViewContextChange = function (event, value) {
      Reaction.setUserPreferences("reaction-dashboard", "viewAs", value);

      if (Reaction.isPreview() === true) {
        // Save last action view state
        var saveActionViewState = Reaction.getActionView();
        Reaction.setUserPreferences("reaction-dashboard", "savedActionViewState", saveActionViewState); // hideActionView during isPreview === true

        Reaction.hideActionView();
      }
    }, _this.handleKeyDown = function (event) {
      if (event.altKey && event.keyCode === 69) {
        // Switch edit mode
        var userWas = Reaction.getUserPreferences("reaction-dashboard", "viewAs", "customer");
        var userIs = userWas === "customer" ? "administrator" : "customer";

        _this.handleViewContextChange(event, userIs);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = App.prototype;

  _proto.renderAdminApp = function () {
    function renderAdminApp() {
      var pageClassName = classnames({
        "admin": true,
        "page": true,
        "show-settings": this.props.isActionViewOpen
      });
      var currentRoute = this.props.currentRoute;
      var routeOptions = currentRoute.route && currentRoute.route.options || {};
      var routeData = routeOptions && routeOptions.structure || {};
      return React.createElement("div", {
        style: styles.adminApp,
        onKeyDown: this.handleKeyDown,
        role: "presentation"
      }, React.createElement("div", {
        className: pageClassName,
        id: "reactionAppContainer",
        style: styles.adminContentContainer
      }, React.createElement("div", {
        className: "reaction-toolbar"
      }, React.createElement(ConnectedToolbarComponent, {
        handleViewContextChange: this.handleViewContextChange,
        data: routeData
      })), React.createElement("div", {
        style: styles.scrollableContainer
      }, React.createElement(Switch, null, this.props.children))), this.props.hasDashboardAccess && React.createElement(ConnectedAdminViewComponent, null), this.props.hasDashboardAccess && React.createElement(ConnectedShortcutBarContainer, null));
    }

    return renderAdminApp;
  }();

  _proto.render = function () {
    function render() {
      var pageClassName = classnames({
        "admin": true,
        "show-settings": this.props.isActionViewOpen
      });
      var currentRoute = this.props.currentRoute;
      var layout = currentRoute && currentRoute.route && currentRoute.route.options && currentRoute.route.options.layout;

      if (this.isAdminApp && layout !== "printLayout") {
        return this.renderAdminApp();
      }

      return React.createElement("div", {
        className: pageClassName,
        style: styles.customerApp
      }, React.createElement(Switch, null, this.props.children));
    }

    return render;
  }();

  (0, _createClass2.default)(App, [{
    key: "isAdminApp",
    get: function () {
      return this.props.hasDashboardAccess;
    }
  }]);
  return App;
}(Component);

App.propTypes = {
  children: PropTypes.node,
  currentRoute: PropTypes.object.isRequired,
  hasDashboardAccess: PropTypes.bool,
  isActionViewOpen: PropTypes.bool
};
module.exportDefault(App);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/app/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./app"), {
  "default": function (v) {
    exports.App = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"avatar":{"avatar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/avatar/avatar.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Avatar;
module.watch(require("react-avatar"), {
  "default": function (v) {
    Avatar = v;
  }
}, 2);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);

var ReactionAvatar = function (props) {
  var className = props.className,
      email = props.email,
      name = props.name,
      size = props.size,
      src = props.src,
      style = props.style;
  var classes = classnames({
    "rui": true,
    "rui-avatar": true
  }, className);
  return React.createElement(Avatar, {
    className: classes,
    email: email,
    name: name,
    size: size,
    src: src,
    style: style // Below props usually aren't passed, and will use defaults
    ,
    color: props.color,
    currentUser: props.currentUser,
    facebookId: props.facebookId,
    fgColor: props.fgColor,
    googleId: props.googleId,
    md5Email: props.md5Email,
    round: props.round,
    skypeId: props.skypeId,
    textSizeRatio: props.textSizeRatio,
    twitterHandle: props.twitterHandle,
    value: props.value,
    vkontakteId: props.vkontakteId
  });
};

ReactionAvatar.propTypes = {
  className: PropTypes.string,
  color: PropTypes.string,
  colors: PropTypes.array,
  currentUser: PropTypes.bool,
  email: PropTypes.string,
  facebookId: PropTypes.string,
  fgColor: PropTypes.string,
  googleId: PropTypes.string,
  md5Email: PropTypes.string,
  name: PropTypes.string,
  round: PropTypes.bool,
  size: PropTypes.number,
  skypeId: PropTypes.string,
  src: PropTypes.string,
  style: PropTypes.object,
  textSizeRatio: PropTypes.number,
  twitterHandle: PropTypes.string,
  value: PropTypes.string,
  vkontakteId: PropTypes.string
};
ReactionAvatar.defaultProps = {
  className: null,
  color: null,
  currentUser: true,
  email: null,
  facebookId: null,
  fgColor: "#FFFFFF",
  googleId: null,
  md5Email: null,
  name: null,
  round: true,
  size: 100,
  skypeId: null,
  style: null,
  textSizeRatio: 3,
  twitterHandle: null,
  value: null,
  vkontakteId: null
};
module.exportDefault(ReactionAvatar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/avatar/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./avatar"), {
  "default": function (v) {
    exports.ReactionAvatar = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"badge":{"badge.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/badge/badge.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Badge =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Badge, _Component);

  function Badge() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      tooltipOpen: false
    }, _this.handleMouseOver = function () {
      _this.setState({
        tooltipOpen: !!_this.props.tooltip
      });
    }, _this.handleMouseOut = function () {
      _this.setState({
        tooltipOpen: false
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Badge.prototype;

  _proto.renderTooltipContent = function () {
    function renderTooltipContent() {
      if (this.isTooltipOpen) {
        if (typeof this.props.tooltip === "string") {
          return React.createElement(Components.Translation, {
            defaultValue: this.props.tooltip,
            i18nKey: this.props.i18nKeyTooltip
          });
        }

        return React.createElement("div", null, this.props.tooltip);
      }

      return null;
    }

    return renderTooltipContent;
  }();

  _proto.renderLabel = function () {
    function renderLabel() {
      if (this.props.label) {
        if (typeof this.props.label === "string") {
          return React.createElement(Components.Translation, {
            defaultValue: this.props.label,
            i18nKey: this.props.i18nKeyLabel
          });
        }

        return React.createElement("span", null, this.props.label);
      }

      return null;
    }

    return renderLabel;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          badgeSize = _props.badgeSize,
          className = _props.className,
          indicator = _props.indicator,
          status = _props.status,
          tooltip = _props.tooltip,
          tooltipAttachment = _props.tooltipAttachment;
      var classes = classnames({
        "rui": true,
        "badge": true,
        "badge-small": badgeSize === null || badgeSize === undefined || badgeSize === "small",
        "badge-large": badgeSize === "large",
        "badge-basic": status === "basic",
        "badge-cta": status === "cta",
        "badge-danger": status === "danger",
        "badge-default": status === null || status === undefined || status === "default",
        "badge-info": status === "info",
        "badge-primary": status === "primary",
        "badge-success": status === "success",
        "badge-warning": status === "warning",
        "badge-indicator": indicator
      }, className);

      if (tooltip) {
        return React.createElement("span", {
          onFocus: this.handleMouseOver,
          onBlur: this.handleMouseOut,
          onMouseOut: this.handleMouseOut,
          onMouseOver: this.handleMouseOver
        }, React.createElement(Components.Tooltip, {
          attachment: tooltipAttachment,
          tooltipContent: this.renderTooltipContent()
        }, React.createElement("span", {
          className: classes,
          style: {
            display: "inline-flex"
          }
        }, this.renderLabel())));
      }

      return React.createElement("span", {
        className: classes,
        style: {
          display: "inline-flex"
        }
      }, this.renderLabel());
    }

    return render;
  }();

  (0, _createClass2.default)(Badge, [{
    key: "isTooltipOpen",
    get: function () {
      return this.state.tooltipOpen;
    }
  }]);
  return Badge;
}(Component);

Badge.propTypes = {
  badgeSize: PropTypes.string,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  i18nKeyLabel: PropTypes.string,
  i18nKeyTooltip: PropTypes.string,
  indicator: PropTypes.bool,
  label: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  status: PropTypes.string,
  tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),
  tooltipAttachment: PropTypes.string
};
Badge.defaultProps = {
  badgeSize: "small",
  indicator: false,
  status: "default",
  tooltipAttachment: "bottom center"
};
registerComponent("Badge", Badge);
module.exportDefault(Badge);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/badge/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./badge"), {
  "default": function (v) {
    exports.Badge = v;
  }
}, 0);
module.watch(require("./inventoryBadge"), {
  "default": function (v) {
    exports.InventoryBadge = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inventoryBadge.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/badge/inventoryBadge.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var InventoryBadge =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(InventoryBadge, _Component);

  function InventoryBadge() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = InventoryBadge.prototype;

  _proto.render = function () {
    function render() {
      if (this.props.label) {
        return React.createElement(Components.Badge, this.props);
      }

      return null;
    }

    return render;
  }();

  return InventoryBadge;
}(Component);

InventoryBadge.propTypes = {
  label: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
};
registerComponent("InventoryBadge", InventoryBadge);
module.exportDefault(InventoryBadge);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"buttonGroup":{"buttonGroup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/buttonGroup/buttonGroup.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _this = this;

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var ButtonGroup = function () {
  var baseClassName = classnames({
    "rui": true,
    "btn-group": true
  });
  return React.createElement("div", {
    className: baseClassName
  }, _this.props.children);
};

ButtonGroup.propTypes = {
  children: PropTypes.node
};
registerComponent("ButtonGroup", ButtonGroup);
module.exportDefault(ButtonGroup);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"buttonToolbar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/buttonGroup/buttonToolbar.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _this = this;

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var ButtonToolbar = function () {
  var baseClassName = classnames({
    "rui": true,
    "btn-toolbar": true
  });
  return React.createElement("div", {
    className: baseClassName
  }, _this.props.children);
};

ButtonToolbar.propTypes = {
  children: PropTypes.node
};
registerComponent("ButtonToolbar", ButtonToolbar);
module.exportDefault(ButtonToolbar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/buttonGroup/index.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./buttonGroup"), {
  "default": function (v) {
    exports.ButtonGroup = v;
  }
}, 0);
module.watch(require("./buttonToolbar"), {
  "default": function (v) {
    exports.ButtonToolbar = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"calendarPicker":{"calendarPicker.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/calendarPicker/calendarPicker.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var omit;
module.watch(require("lodash/omit"), {
  "default": function (v) {
    omit = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var DayPickerRangeController;
module.watch(require("./dayPickerRangeController"), {
  "default": function (v) {
    DayPickerRangeController = v;
  }
}, 4);

// CalendarPicker is a wrapper around react-dates DayPickerRangeController. Anything that works in react-dates should
// work in CalendarPicker react-dates docs are available at: https://github.com/airbnb/react-dates
var CalendarPicker =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(CalendarPicker, _Component);

  function CalendarPicker(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.onDatesChange = function (_ref) {
      var startDate = _ref.startDate,
          endDate = _ref.endDate;

      _this.setState({
        startDate: startDate,
        endDate: endDate
      });

      if (_this.props.onDatesChange) {
        _this.props.onDatesChange(startDate, endDate);
      }
    };

    _this.onFocusChange = function (focusedInput) {
      _this.setState({
        // Force the focusedInput to always be truthy so that dates are always selectable
        focusedInput: !focusedInput ? "startDate" : focusedInput
      });
    };

    _this.state = {
      startDate: props.initialStartDate,
      endDate: props.initialEndDate,
      focusedInput: props.autoFocusEndDate ? "endDate" : "startDate"
    };
    return _this;
  }
  /**
   * Getter returning a value of `true` if the current drection is set to RTL
   * @return {Boolean} true if RTL false if LTR
   */


  var _proto = CalendarPicker.prototype;

  _proto.renderDayContents = function () {
    function renderDayContents(day) {
      return React.createElement("span", {
        className: "CalendarDay__contents"
      }, day.format("D"));
    }

    return renderDayContents;
  }();

  _proto.render = function () {
    function render() {
      var _state = this.state,
          focusedInput = _state.focusedInput,
          startDate = _state.startDate,
          endDate = _state.endDate,
          renderDayContents = _state.renderDayContents;
      var props = omit(this.props, ["autoFocus", "autoFocusEndDate", "initialStartDate", "initialEndDate"]);
      return React.createElement(DayPickerRangeController, (0, _extends2.default)({}, props, {
        renderDayContents: renderDayContents || this.renderDayContents,
        onDatesChange: this.onDatesChange,
        onFocusChange: this.onFocusChange,
        focusedInput: focusedInput,
        isRTL: this.isRTL,
        startDate: startDate,
        endDate: endDate,
        navPrev: React.createElement("i", {
          className: "fa fa-arrow-left"
        }),
        navNext: React.createElement("i", {
          className: "fa fa-arrow-right"
        }),
        hideKeyboardShortcutsPanel: true
      }));
    }

    return render;
  }();

  (0, _createClass2.default)(CalendarPicker, [{
    key: "isRTL",
    get: function () {
      if (typeof this.props.isRTL === "boolean") {
        // If isRTL is set from props, then use
        return this.props.isRTL;
      } else if (document) {
        // Otherwise try to determine RTL status from the html class name "rtl"
        return document.getElementsByTagName("html")[0].className.includes("rtl");
      } // Return false if above matches fail


      return false;
    }
  }]);
  return CalendarPicker;
}(Component);

CalendarPicker.defaultProps = {
  autoFocusEndDate: false,
  initialStartDate: null,
  initialEndDate: null,
  // day presentation and interaction related props
  renderDayContents: null,
  minimumNights: 1,
  isDayBlocked: function () {
    return false;
  },
  isDayHighlighted: function () {
    return false;
  },
  enableOutsideDays: false,
  // calendar presentation and interaction related props
  withPortal: false,
  initialVisibleMonth: null,
  numberOfMonths: 1,
  onOutsideClick: function () {},
  keepOpenOnDateSelect: false,
  renderCalendarInfo: null,
  isRTL: undefined,
  // navigation related props
  navPrev: null,
  navNext: null,
  onPrevMonthClick: function () {},
  onNextMonthClick: function () {},
  // internationalization
  monthFormat: "MMMM YYYY"
};
CalendarPicker.propTypes = {
  autoFocusEndDate: PropTypes.bool,
  enableOutsideDays: PropTypes.bool,
  initialEndDate: PropTypes.object,
  initialStartDate: PropTypes.object,
  initialVisibleMonth: PropTypes.func,
  isDayBlocked: PropTypes.func,
  isDayHighlighted: PropTypes.func,
  isOutsideRange: PropTypes.func,
  isRTL: PropTypes.bool,
  keepOpenOnDateSelect: PropTypes.bool,
  minimumNights: PropTypes.number,
  monthFormat: PropTypes.string,
  navNext: PropTypes.node,
  navPrev: PropTypes.node,
  numberOfMonths: PropTypes.number,
  onDatesChange: PropTypes.func,
  onNextMonthClick: PropTypes.func,
  onOutsideClick: PropTypes.func,
  onPrevMonthClick: PropTypes.func,
  renderCalendarInfo: PropTypes.func,
  renderDayContents: PropTypes.func,
  withPortal: PropTypes.bool
};
registerComponent("CalendarPicker", CalendarPicker);
module.exportDefault(CalendarPicker);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dayPickerRangeController.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/calendarPicker/dayPickerRangeController.js                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
module.watch(require("react-dates/initialize"));
var Loadable;
module.watch(require("react-loadable"), {
  "default": function (v) {
    Loadable = v;
  }
}, 1);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var DayPickerRangeController = Loadable({
  loader: function () {
    return Promise.resolve().then(function () {
      return require("react-dates");
    });
  },
  loading: function () {
    return React.createElement(Components.Loading, null);
  },
  render: function (loaded, props) {
    var DayPicker = loaded.DayPickerRangeController;
    return React.createElement(DayPicker, props);
  }
});
module.exportDefault(DayPickerRangeController);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"checkbox":{"checkbox.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/checkbox/checkbox.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var Checkbox =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Checkbox, _Component);

  function Checkbox() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this._id = "checkbox-" + Math.floor(Math.random() * 100000), _this.handleChange = function (event) {
      if (_this.props.onChange) {
        var isInputChecked = !_this.props.checked;

        _this.props.onChange(event, isInputChecked, _this.props.name);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Checkbox.prototype;

  _proto.renderLabel = function () {
    function renderLabel() {
      var _props = this.props,
          label = _props.label,
          i18nKeyLabel = _props.i18nKeyLabel;

      if (label || i18nKeyLabel) {
        return React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        });
      }

      return null;
    }

    return renderLabel;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("label", {
        htmlFor: this.id
      }, React.createElement("input", {
        id: this.id,
        checked: this.props.checked,
        onChange: this.handleChange,
        className: this.props.className,
        ref: "checkbox",
        type: "checkbox",
        onBlur: this.props.onMouseOut,
        onMouseOut: this.props.onMouseOut
      }), React.createElement(Components.Translation, {
        defaultValue: this.props.label,
        i18nKey: this.props.i18nKeyLabel
      }));
    }

    return render;
  }();

  (0, _createClass2.default)(Checkbox, [{
    key: "id",
    get: function () {
      return this.props.id || this._id;
    }
  }]);
  return Checkbox;
}(Component);

Checkbox.defaultProps = {
  checked: false
};
Checkbox.propTypes = {
  checked: PropTypes.bool,
  className: PropTypes.string,
  i18nKeyLabel: PropTypes.string,
  id: PropTypes.string,
  label: PropTypes.string,
  name: PropTypes.string,
  onChange: PropTypes.func,
  onMouseOut: PropTypes.func
};
registerComponent("Checkbox", Checkbox);
module.exportDefault(Checkbox);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/checkbox/index.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkbox"), {
  "default": function (v) {
    exports.Checkbox = v;
  }
}, 0);
module.watch(require("./rolloverCheckbox"), {
  "default": function (v) {
    exports.RolloverCheckbox = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"rolloverCheckbox.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/checkbox/rolloverCheckbox.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var RolloverCheckbox = function (_ref) {
  var children = _ref.children,
      checked = _ref.checked,
      checkboxClassName = _ref.checkboxClassName,
      onChange = _ref.onChange,
      name = _ref.name,
      className = _ref.className;
  var extendedClassName = classnames({
    "rollover-checkbox": true
  }, className);

  if (checked) {
    return React.createElement("div", {
      className: extendedClassName
    }, React.createElement("div", {
      className: "selected-checkbox"
    }, React.createElement(Components.Checkbox, {
      checked: checked,
      onChange: onChange,
      className: checkboxClassName,
      name: name
    })));
  }

  return React.createElement("div", {
    className: extendedClassName
  }, React.createElement("div", {
    className: "first-child"
  }, children), React.createElement("div", {
    className: "second-child"
  }, React.createElement(Components.Checkbox, {
    checked: checked,
    onChange: onChange,
    className: checkboxClassName,
    name: name
  })));
};

RolloverCheckbox.propTypes = {
  checkboxClassName: PropTypes.string,
  checked: PropTypes.bool,
  children: PropTypes.node,
  className: PropTypes.string,
  name: PropTypes.string,
  onChange: PropTypes.func
};
registerComponent("RolloverCheckbox", RolloverCheckbox);
module.exportDefault(RolloverCheckbox);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"clickToCopy":{"clickToCopy.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/clickToCopy/clickToCopy.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var CopyToClipboard;
module.watch(require("react-copy-to-clipboard"), {
  "default": function (v) {
    CopyToClipboard = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var ClickToCopy =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ClickToCopy, _Component);

  function ClickToCopy(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      tooltipOpen: false
    };
    _this.handleCtcMouseOver = _this.handleCtcMouseOver.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleCtcMouseOut = _this.handleCtcMouseOut.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = ClickToCopy.prototype;

  _proto.handleCtcMouseOver = function () {
    function handleCtcMouseOver() {
      this.setState({
        tooltipOpen: !!this.props.tooltip
      });
    }

    return handleCtcMouseOver;
  }();

  _proto.handleCtcMouseOut = function () {
    function handleCtcMouseOut() {
      this.setState({
        tooltipOpen: false
      });
    }

    return handleCtcMouseOut;
  }();

  _proto.renderTooltipContent = function () {
    function renderTooltipContent() {
      if (this.isTooltipOpen) {
        if (typeof this.props.tooltip === "string") {
          return React.createElement(Components.Translation, {
            defaultValue: this.props.tooltip,
            i18nKey: this.props.i18nKeyTooltip
          });
        }

        return React.createElement("div", null, this.props.tooltip);
      }

      return null;
    }

    return renderTooltipContent;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      return React.createElement(CopyToClipboard, {
        text: this.props.copyToClipboard,
        onCopy: function () {
          return _this2.setState({
            copied: true
          });
        }
      }, React.createElement(Components.Button, {
        tagName: "span",
        className: {
          btn: false
        },
        onClick: this.handleClick,
        style: {
          display: "inline-flex"
        },
        tooltip: this.props.tooltip,
        i18nKeyTooltip: this.props.i18nKeyTooltip,
        tooltipAttachment: this.tooltipAttachment
      }, this.props.displayText));
    }

    return render;
  }();

  (0, _createClass2.default)(ClickToCopy, [{
    key: "isTooltipOpen",
    get: function () {
      return this.state.tooltipOpen;
    }
  }]);
  return ClickToCopy;
}(Component);

ClickToCopy.propTypes = {
  copyToClipboard: PropTypes.string,
  displayText: PropTypes.string,
  i18nKeyTooltip: PropTypes.string,
  tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),
  tooltipPosition: PropTypes.string
};
ClickToCopy.defaultProps = {
  tooltip: "Copy to Clipboard",
  tooltipPosition: "middle left"
};
registerComponent("ClickToCopy", ClickToCopy);
module.exportDefault(ClickToCopy);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"divider":{"divider.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/divider/divider.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Divider = function (props) {
  var label = props.label,
      i18nKeyLabel = props.i18nKeyLabel;
  var dividerStyle = {
    height: "auto",
    background: "none"
  };
  var classes = classnames({
    rui: true,
    separator: true,
    divider: true,
    labeled: label || i18nKeyLabel
  });

  if (label) {
    return React.createElement("div", {
      className: classes,
      id: props.id,
      style: dividerStyle
    }, React.createElement("hr", null), React.createElement("span", {
      className: "label"
    }, React.createElement(Components.Translation, {
      defaultValue: label,
      i18nKey: i18nKeyLabel
    })), React.createElement("hr", null));
  }

  return React.createElement("div", {
    className: classes
  }, React.createElement("hr", null));
};

Divider.propTypes = {
  i18nKeyLabel: PropTypes.string,
  id: PropTypes.string,
  label: PropTypes.string
};
registerComponent("Divider", Divider);
module.exportDefault(Divider);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"verticalDivider.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/divider/verticalDivider.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);

var VerticalDivider = function () {
  return React.createElement("div", {
    style: {
      height: "20px",
      width: 1,
      backgroundColor: "#E6E6E6",
      margin: "0 10px"
    }
  });
};

registerComponent("VerticalDivider", VerticalDivider);
module.exportDefault(VerticalDivider);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"forms":{"form.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/forms/form.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _update;

module.watch(require("lodash/update"), {
  "default": function (v) {
    _update = v;
  }
}, 0);

var _set;

module.watch(require("lodash/set"), {
  "default": function (v) {
    _set = v;
  }
}, 1);

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 2);

var _get;

module.watch(require("lodash/get"), {
  "default": function (v) {
    _get = v;
  }
}, 3);

var _at;

module.watch(require("lodash/at"), {
  "default": function (v) {
    _at = v;
  }
}, 4);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 5);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 6);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 7);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 8);

var Form =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Form, _Component);

  function Form(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleChange = function (event, value, name) {
      var newdoc = _update(_this.state.doc, name, function () {
        return value;
      }); // Calling user defined field specific handleChange function


      if (_this.props.fieldsProp[name] && typeof _this.props.fieldsProp[name].handleChange === "function") {
        _this.props.fieldsProp[name].handleChange(event, value, name);
      }

      _this.setState({
        doc: newdoc
      }, function () {
        if (_this.props.autoSave === true) {
          _this.handleSubmit(event);
        } else {
          _this.validate();
        }
      });
    };

    _this.handleSelectChange = function (value, name) {
      _this.handleChange(new Event("onSelect"), value, name);
    };

    _this.handleMultiSelectChange = function (value, name) {
      _this.handleChange(new Event("onMultiSelect"), value.map(function (v) {
        return v.value;
      }), name);
    };

    _this.handleSubmit = function () {
      function _callee(event) {
        var isValid;
        return _regenerator.default.async(function () {
          function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  event.preventDefault(); // Need to wait for this before using this.state.isValid
                  // as validate() changes state.

                  isValid = _this.validate();

                  if (_this.props.onSubmit) {
                    _this.props.onSubmit(event, {
                      doc: _this.state.doc,
                      isValid: isValid
                    }, _this.props.name);
                  }

                case 3:
                case "end":
                  return _context.stop();
              }
            }
          }

          return _callee$;
        }(), null, this);
      }

      return _callee;
    }();

    _this.state = {
      doc: props.doc,
      schema: _this.validationSchema(),
      isValid: undefined
    };
    return _this;
  }

  var _proto = Form.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (_isEqual(nextProps.doc, this.props.doc) === false) {
        this.setState({
          doc: nextProps.doc,
          schema: this.validationSchema()
        });
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.validationSchema = function () {
    function validationSchema() {
      var docPath = this.props.docPath;

      if (docPath) {
        var objectKeys = this.objectKeys[docPath + "."];

        if (Array.isArray(objectKeys)) {
          // Use the objectKeys from parent fieldset to generate
          // actual form fields
          var fieldNames = objectKeys.map(function (fieldName) {
            return docPath + "." + fieldName;
          });
          return this.props.schema.pick(fieldNames).newContext();
        }
      }

      return this.props.schema.namedContext();
    }

    return validationSchema;
  }();

  _proto.valueForField = function () {
    function valueForField(fieldName) {
      var picked = _at(this.state.doc, fieldName);

      if (Array.isArray(picked) && picked.length) {
        return picked[0];
      }

      return undefined;
    }

    return valueForField;
  }();

  _proto.validate = function () {
    function validate() {
      var docPath = this.props.docPath; // Create a smaller document in order to validate without extra fields

      var docToValidate = _set({}, docPath, _at(this.state.doc, this.props.docPath)[0]); // Clean any fields not in schame to avoid needless validation errors


      var cleanedObject = this.state.schema._simpleSchema.clean(docToValidate);

      var isValid = this.state.schema.validate(cleanedObject); // Finally validate the document

      this.setState({
        isValid: isValid
      });
      return {
        isValid: isValid
      };
    }

    return validate;
  }();

  _proto.isFieldHidden = function () {
    function isFieldHidden(fieldName) {
      if (Array.isArray(this.props.hideFields) && this.props.hideFields.indexOf(fieldName) >= 0) {
        return true;
      }

      return false;
    }

    return isFieldHidden;
  }();

  _proto.renderFormField = function () {
    function renderFormField(field) {
      var _this2 = this;

      var sharedProps = {
        i18nKeyLabel: "admin." + field.name,
        key: field.name,
        label: field.label,
        name: field.name
      };
      var fieldElement;
      var helpText; // Checking for user defined render style else using what is best according to the type.

      switch (field.renderComponent || field.type) {
        case "boolean":
          fieldElement = React.createElement(Components.Switch, (0, _extends2.default)({}, sharedProps, {
            onChange: this.handleChange,
            checked: this.valueForField(field.name)
          }));
          break;

        case "string":
          fieldElement = React.createElement(Components.TextField, (0, _extends2.default)({}, sharedProps, {
            onChange: this.handleChange,
            value: this.valueForField(field.name),
            multiline: field.multiline,
            maxRows: field.maxRows,
            disabled: field.disabled,
            type: field.inputType
          }));
          break;

        case "select":
          fieldElement = React.createElement(Components.Select, (0, _extends2.default)({}, sharedProps, {
            onChange: this.handleSelectChange,
            options: field.options,
            value: this.valueForField(field.name)
          }));
          break;

        case "multiselect":
          fieldElement = React.createElement(Components.MultiSelect, (0, _extends2.default)({}, sharedProps, {
            multi: true,
            onChange: this.handleMultiSelectChange,
            options: field.options,
            value: this.valueForField(field.name),
            simpleValue: false
          }));
          break;

        default:
          return null;
      }

      var fieldHasError = false;

      if (this.state.isValid === false) {
        this.state.schema.validationErrors().filter(function (v) {
          return v.name === field.name;
        }).forEach(function (validationError) {
          var message = _this2.state.schema.keyErrorMessage(validationError.name);

          fieldHasError = true;
          helpText = React.createElement("div", {
            className: "help-block"
          }, message);
        });
      }

      var formGroupClassName = classnames({
        "rui": true,
        "form-group": true,
        "has-error": fieldHasError
      });
      return React.createElement("div", {
        key: sharedProps.key + "-group",
        className: formGroupClassName
      }, fieldElement, helpText);
    }

    return renderFormField;
  }();

  _proto.renderField = function () {
    function renderField(field, additionalFieldProps) {
      var schema = this.props.schema;
      var fieldName = field.fieldName;

      if (this.isFieldHidden(fieldName) === false) {
        var fieldSchema = schema.getDefinition(fieldName); // Get the type from the schema, as a typeof string

        var fieldType = fieldSchema.type[0].type;
        var fieldTypeString;

        if (fieldType === "SimpleSchema.Integer") {
          fieldTypeString = "number";
        } else {
          // This assumes that oneOf is not used for any schema types
          fieldTypeString = (0, _typeof2.default)(fieldType());
        }

        var fieldProps = (0, _objectSpread2.default)({}, fieldSchema, {
          name: fieldName,
          type: fieldTypeString
        }, additionalFieldProps);
        return this.renderFormField(fieldProps);
      }

      return null;
    }

    return renderField;
  }();

  _proto.renderWithSchema = function () {
    function renderWithSchema() {
      var _this3 = this;

      var _props = this.props,
          docPath = _props.docPath,
          fieldsProp = _props.fieldsProp,
          renderFromFields = _props.renderFromFields;

      if (!this.props.schema) {
        return null;
      } // Render form with a specific docPath


      if (!renderFromFields && docPath) {
        return Object.keys(this.schema).map(function (key) {
          if (!key.endsWith(docPath)) {
            return;
          }

          var objectKeys = _this3.objectKeys[docPath + "."];

          if (Array.isArray(objectKeys)) {
            // Use the objectKeys from parent fieldset to generate
            // actual form fields
            return objectKeys.map(function (fieldName) {
              var fullFieldName = docPath ? docPath + "." + fieldName : fieldName;
              return _this3.renderField({
                fieldName: fullFieldName
              });
            });
          }

          return _this3.renderField({
            fieldName: key
          });
        });
      } // Render form by only using desired fields from schema


      if (this.props.fields) {
        return Object.keys(this.props.fields).map(function (key) {
          var fieldData = _this3.props.fields[key];
          var fieldSchema = _this3.schema[key];
          var tempObj = Object.assign({}, fieldData);

          if (!fieldSchema) {
            return;
          } // Remove inherited type() as type is supposed to be string.


          if (typeof tempObj.type === "function") {
            delete tempObj.type;
          }

          var fieldProp = _get(fieldsProp, key, {});

          return _this3.renderField({
            fieldName: key
          }, Object.assign(tempObj, fieldProp));
        });
      } // Render all fields if none of the options are set above


      return Object.keys(this.schema).map(function (key) {
        return (// eslint-disable-line consistent-return
          _this3.renderField({
            fieldName: key
          })
        );
      });
    }

    return renderWithSchema;
  }();

  _proto.renderFormActions = function () {
    function renderFormActions() {
      if (this.props.autoSave === false) {
        return React.createElement(Components.FormActions, null, React.createElement(Components.Button, {
          label: "Save Changes",
          i18nKeyLabel: "app.saveChanges",
          bezelStyle: "solid",
          primary: true,
          type: "submit"
        }));
      }
    }

    return renderFormActions;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("form", {
        onSubmit: this.handleSubmit
      }, this.renderWithSchema(), this.renderFormActions());
    }

    return render;
  }();

  (0, _createClass2.default)(Form, [{
    key: "objectKeys",
    get: function () {
      return this.props.schema._objectKeys;
    }
  }, {
    key: "schema",
    get: function () {
      return this.props.schema.mergedSchema();
    }
  }]);
  return Form;
}(Component);

Form.defaultProps = {
  autoSave: false,
  renderFromFields: false,
  fieldsProp: {}
  /**
  * @name Form propTypes
  * @type {propTypes}
  * @param {Object} props - React PropTypes
  * @property {Boolean} autoSave - controls autoSave and rendering of Submit button.
  * @property {Object} doc - the object that will have the form state.
  * @property {String} docPath - the path in the schema which will be used for validation or to render fields.
  * @property {Array} fields - fields to render.
  * @property {Object} fieldsProps - map of field specific properties passed to underlying components.
  * @property {Array} hideFields - fields to hide.
  * @property {String} name
  * @property {Func} onSubmit
  * @property {Boolean} renderFromFields - this controls whether form is rendered from schema or from fields.
  * @property {Object} schema - the schema used for validation and rendering.
  * @return {Array} React propTypes
  */

};
Form.propTypes = {
  autoSave: PropTypes.bool,
  doc: PropTypes.object,
  docPath: PropTypes.string,
  fields: PropTypes.object,
  fieldsProp: PropTypes.object,
  hideFields: PropTypes.arrayOf(PropTypes.string),
  name: PropTypes.string,
  onSubmit: PropTypes.func,
  renderFromFields: PropTypes.bool,
  schema: PropTypes.object
};
registerComponent("Form", Form);
module.exportDefault(Form);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"formActions.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/forms/formActions.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var FormActions = function (_ref) {
  var children = _ref.children;
  return React.createElement("div", {
    style: {
      display: "flex",
      justifyContent: "flex-end"
    }
  }, children);
};

FormActions.propTypes = {
  children: PropTypes.node
};
registerComponent("FormActions", FormActions);
module.exportDefault(FormActions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/forms/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./form"), {
  "default": function (v) {
    exports.Form = v;
  }
}, 0);
module.watch(require("./formActions"), {
  "default": function (v) {
    exports.FormActions = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"icon":{"icon.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/icon/icon.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Icon = function (_ref) {
  var className = _ref.className,
      icon = _ref.icon,
      style = _ref.style;
  var classes;

  if (icon) {
    if (icon.indexOf("icon-") === 0 || icon.indexOf("fa") >= 0) {
      classes = icon;
    } else {
      var _classnames;

      classes = classnames((_classnames = {
        fa: true
      }, _classnames["fa-" + icon] = true, _classnames));
    }
  }

  classes = classnames({
    "rui": true,
    "font-icon": true
  }, classes, className);
  return React.createElement("i", {
    style: style,
    className: classes
  });
};

Icon.propTypes = {
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  icon: PropTypes.string.isRequired,
  style: PropTypes.object
};
registerComponent("Icon", Icon);
module.exportDefault(Icon);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/icon/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./icon"), {
  "default": function (v) {
    exports.Icon = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"items":{"item.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/items/item.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var Item = function (_ref) {
  var children = _ref.children;
  return React.createElement("div", {
    className: "rui item"
  }, children);
};

Item.displayName = "Item";
Item.propTypes = {
  children: PropTypes.node
};
registerComponent("Item", Item);
module.exportDefault(Item);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"items.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/items/items.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var Items = function (_ref) {
  var children = _ref.children;
  return React.createElement("div", {
    className: "rui items"
  }, children);
};

Items.displayName = "Items";
Items.propTypes = {
  children: PropTypes.node
};
registerComponent("Items", Items);
module.exportDefault(Items);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"list":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/list/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./list"), {
  "default": function (v) {
    exports.List = v;
  }
}, 0);
module.watch(require("./listItem"), {
  "default": function (v) {
    exports.ListItem = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/list/list.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var List = function (_ref) {
  var children = _ref.children,
      isAdmin = _ref.isAdmin,
      className = _ref.className;
  var listClassName = classnames({
    "rui": true,
    "admin": isAdmin,
    "list-group": true
  }, className);
  return React.createElement("div", {
    className: listClassName
  }, children);
};

List.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  isAdmin: PropTypes.bool
};
registerComponent("List", List);
module.exportDefault(List);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"listItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/list/listItem.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var ListItem =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ListItem, _Component);

  function ListItem() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      if (_this.props.actionType === "switch") {
        var isChecked = typeof _this.props.switchOn === "boolean" ? !_this.props.switchOn : true;

        _this.handleSwitchChange(event, isChecked, _this.props.switchName);
      } else if (typeof _this.props.onClick === "function") {
        _this.props.onClick(event, _this.data);
      }
    }, _this.handleOnKeyUp = function (event) {
      // keyCode 32 (spacebar)
      // keyCode 13 (enter/return)
      if (event.keyCode === 32 || event.keyCode === 13) {
        _this.handleClick(event);
      }
    }, _this.handleSwitchChange = function (event, isChecked, name) {
      event.preventDefault();
      event.stopPropagation();

      if (typeof _this.props.onSwitchChange === "function") {
        _this.props.onSwitchChange(event, isChecked, name);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ListItem.prototype;

  _proto.renderIcon = function () {
    function renderIcon() {
      var iconClassName = classnames({
        "rui": true,
        "admin": this.props.isAdmin,
        "list-item-icon": true
      });

      if (this.props.icon) {
        return React.createElement("div", {
          className: iconClassName
        }, React.createElement(Components.Icon, {
          icon: this.props.icon
        }));
      }

      return null;
    }

    return renderIcon;
  }();

  _proto.renderAction = function () {
    function renderAction() {
      var actionClassName = classnames({
        "rui": true,
        "admin": this.props.isAdmin,
        "list-item-action": true
      });

      if (this.props.actionType === "switch") {
        return React.createElement("div", {
          className: actionClassName
        }, React.createElement(Components.Switch, {
          checked: this.props.switchOn,
          name: this.props.switchName,
          onChange: this.handleSwitchChange
        }));
      }

      if (this.props.actionType) {
        return React.createElement("div", {
          className: actionClassName
        }, React.createElement(Components.Icon, {
          icon: "fa fa-angle-right"
        }));
      }

      return null;
    }

    return renderAction;
  }();

  _proto.renderContent = function () {
    function renderContent() {
      var content;
      var contentClassName = classnames({
        "rui": true,
        "admin": this.props.isAdmin,
        "list-item-content": true
      });

      if (this.props.label) {
        content = React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        });

        if (!this.props.i18nKeyLabel) {
          content = React.createElement("span", null, this.props.label);
        }
      } else {
        content = this.props.children;
      }

      return React.createElement("div", {
        className: contentClassName
      }, content);
    }

    return renderContent;
  }();

  _proto.renderSubItems = function () {
    function renderSubItems() {
      if (typeof this.props.label !== "undefined" && this.props.children) {
        var listItemClassName = classnames({
          "rui": true,
          "admin": this.props.isAdmin,
          "list-group-item-sub-item": true
        });
        return React.createElement("div", {
          className: listItemClassName
        }, this.props.children);
      }

      return null;
    }

    return renderSubItems;
  }();

  _proto.render = function () {
    function render() {
      var listItemClassName = classnames({
        "rui": true,
        "admin": this.props.isAdmin,
        "list-group-item": true
      }, this.props.listItemClassName);
      return React.createElement("div", {
        className: listItemClassName,
        onClick: this.handleClick,
        onKeyUp: this.handleOnKeyUp,
        role: "button",
        tabIndex: 0
      }, this.renderIcon(), this.renderContent(), this.renderAction(), this.renderSubItems());
    }

    return render;
  }();

  (0, _createClass2.default)(ListItem, [{
    key: "data",
    get: function () {
      return this.props.value;
    }
  }]);
  return ListItem;
}(Component);

ListItem.propTypes = {
  actionType: PropTypes.oneOf(["arrow", "switch"]),
  children: PropTypes.node,
  i18nKeyLabel: PropTypes.string,
  icon: PropTypes.string,
  isAdmin: PropTypes.bool,
  label: PropTypes.string,
  listItemClassName: PropTypes.string,
  onClick: PropTypes.func,
  onSwitchChange: PropTypes.func,
  switchName: PropTypes.string,
  switchOn: PropTypes.bool,
  value: PropTypes.any
};
registerComponent("ListItem", ListItem);
module.exportDefault(ListItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"loading":{"loading.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/loading/loading.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);

var Loading = function () {
  return React.createElement("div", {
    className: "spinner-container spinner-container-lg"
  }, React.createElement(Components.CircularProgress, {
    indeterminate: true
  }));
};

registerComponent("Loading", Loading);
module.exportDefault(Loading);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"media":{"hint.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/media/hint.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);

// Modification of https://github.com/ethanselzer/react-image-magnify/blob/master/src/hint/DefaultHint.js
function Hint(_ref) {
  var isTouchDetected = _ref.isTouchDetected,
      hintTextMouse = _ref.hintTextMouse,
      hintTextTouch = _ref.hintTextTouch;
  return React.createElement("div", {
    style: {
      width: "100%",
      display: "flex",
      justifyContent: "center",
      position: "absolute",
      bottom: "15px"
    }
  }, React.createElement("div", {
    style: {
      display: "flex",
      alignItems: "center",
      padding: "5px 10px",
      backgroundColor: "#333",
      borderRadius: "16px",
      opacity: "0.90"
    }
  }, React.createElement("span", {
    style: {
      padding: "2px 0 0 2px",
      fontSize: "14px",
      color: "white"
    }
  }, isTouchDetected ? hintTextTouch : hintTextMouse)));
}

Hint.displayName = "Hint";
Hint.propTypes = {
  hintTextMouse: PropTypes.string,
  hintTextTouch: PropTypes.string,
  isTouchDetected: PropTypes.bool
};
module.exportDefault(Hint);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/media/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./mediaGallery"), {
  "default": function (v) {
    exports.MediaGallery = v;
  }
}, 0);
module.watch(require("./mediaItem"), {
  "default": function (v) {
    exports.MediaItem = v;
  }
}, 1);
module.watch(require("./mediaUploader"), {
  "default": function (v) {
    exports.MediaUploader = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mediaGallery.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/media/mediaGallery.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Dropzone;
module.watch(require("react-dropzone"), {
  "default": function (v) {
    Dropzone = v;
  }
}, 2);
var Measure;
module.watch(require("react-measure"), {
  "default": function (v) {
    Measure = v;
  }
}, 3);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 4);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);

var MediaGallery =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MediaGallery, _Component);

  function MediaGallery() {
    var _this;

    _this = _Component.call(this) || this;

    _this.handleDropClick = function () {
      _this.dropzone && _this.dropzone.open();
    };

    _this.handleDrop = function (files) {
      if (files.length === 0) return;
      return _this.props.onDrop(files);
    };

    _this.state = {
      dimensions: {
        width: -1,
        height: -1
      }
    };
    return _this;
  }

  var _proto = MediaGallery.prototype;

  _proto.renderAddItem = function () {
    function renderAddItem() {
      if (this.props.editable) {
        return React.createElement(Components.Button, {
          className: {
            // Disable default button class names
            "flat": false,
            "btn": false,
            "btn-default": false,
            // Media gallery class names
            "gallery-image": true,
            "add": true
          },
          tagName: "div",
          onClick: this.handleDropClick
        }, React.createElement("img", {
          alt: "",
          className: "img-responsive",
          src: "/resources/placeholder.gif"
        }), React.createElement("div", {
          className: "rui badge-container"
        }, React.createElement("i", {
          className: "fa fa-plus fa-2x"
        })));
      }

      return null;
    }

    return renderAddItem;
  }();

  _proto.renderProgressItem = function () {
    function renderProgressItem() {
      // For now, we are not showing actual progress, but we could
      return React.createElement("div", {
        className: "gallery-image add"
      }, React.createElement("img", {
        alt: "",
        className: "img-responsive",
        src: "/resources/placeholder.gif"
      }), React.createElement("div", {
        className: "rui badge-container"
      }, React.createElement(Components.CircularProgress, {
        indeterminate: true
      })));
    }

    return renderProgressItem;
  }();

  _proto.renderFeaturedMedia = function () {
    function renderFeaturedMedia() {
      var _this2 = this;

      var _props = this.props,
          editable = _props.editable,
          onMouseEnterMedia = _props.onMouseEnterMedia,
          onMouseLeaveMedia = _props.onMouseLeaveMedia,
          onMoveMedia = _props.onMoveMedia,
          onRemoveMedia = _props.onRemoveMedia;
      var _state$dimensions = this.state.dimensions,
          width = _state$dimensions.width,
          height = _state$dimensions.height;
      var media = this.featuredMedia;
      if (!media) return React.createElement(Components.MediaItem, null);
      return React.createElement(Measure, {
        bounds: true,
        onResize: function (contentRect) {
          var dimensions = (0, _objectSpread2.default)({}, contentRect.bounds); // We get React warnings in console when the bounds height comes in as zero

          if (dimensions.height === 0) dimensions.height = -1;

          _this2.setState({
            dimensions: dimensions
          });
        }
      }, function (_ref) {
        var measureRef = _ref.measureRef;
        return React.createElement("div", {
          ref: measureRef
        }, React.createElement(Components.MediaItem, {
          editable: editable,
          index: 0 // index prop is required for SortableItem HOC to work
          ,
          mediaHeight: height,
          mediaWidth: width,
          onMouseEnter: onMouseEnterMedia,
          onMouseLeave: onMouseLeaveMedia,
          onMove: onMoveMedia,
          onRemoveMedia: onRemoveMedia,
          source: _this2.featuredMedia,
          zoomable: true
        }));
      });
    }

    return renderFeaturedMedia;
  }();

  _proto.renderMediaThumbnails = function () {
    function renderMediaThumbnails() {
      var _props2 = this.props,
          editable = _props2.editable,
          mediaList = _props2.media,
          onMouseEnterMedia = _props2.onMouseEnterMedia,
          onMouseLeaveMedia = _props2.onMouseLeaveMedia,
          onMoveMedia = _props2.onMoveMedia,
          onRemoveMedia = _props2.onRemoveMedia;
      return (mediaList || []).map(function (media, index) {
        return React.createElement(Components.MediaItem, {
          editable: editable,
          key: media._id,
          index: index // index prop is required for SortableItem HOC to work
          ,
          onMouseEnter: onMouseEnterMedia,
          onMouseLeave: onMouseLeaveMedia,
          onMove: onMoveMedia,
          onRemoveMedia: onRemoveMedia,
          size: "small",
          source: media
        });
      });
    }

    return renderMediaThumbnails;
  }();

  _proto.renderMediaGalleryUploader = function () {
    function renderMediaGalleryUploader() {
      var _this3 = this;

      var _props3 = this.props,
          containerWidth = _props3.mediaGalleryWidth,
          uploadProgress = _props3.uploadProgress;
      var classes = {
        "admin-featuredImage": Reaction.hasAdminAccess(),
        "featuredImage": true
      };
      return React.createElement("div", {
        className: "rui media-gallery"
      }, React.createElement(Dropzone, {
        className: "rui gallery-drop-pane",
        disableClick: true,
        multiple: true,
        disablePreview: true,
        onDrop: this.handleDrop,
        ref: function (inst) {
          _this3.dropzone = inst;
        },
        accept: "image/jpg, image/png, image/jpeg"
      }, React.createElement("div", {
        className: "rui gallery"
      }, React.createElement("div", {
        className: classnames(classes),
        style: {
          height: containerWidth
        }
      }, this.featuredMedia ? this.renderFeaturedMedia() : this.renderAddItem()), React.createElement("div", {
        className: "rui gallery-thumbnails"
      }, !!this.hasMedia && this.renderMediaThumbnails(), !!uploadProgress && this.renderProgressItem(), this.renderAddItem()))));
    }

    return renderMediaGalleryUploader;
  }();

  _proto.renderMediaGallery = function () {
    function renderMediaGallery() {
      var containerWidth = this.props.mediaGalleryWidth;
      var classes = {
        "admin-featuredImage": Reaction.hasAdminAccess(),
        "featuredImage": true
      };
      return React.createElement("div", {
        className: "rui media-gallery"
      }, React.createElement("div", {
        className: "rui gallery"
      }, React.createElement("div", {
        className: classnames(classes),
        style: {
          height: containerWidth
        }
      }, this.renderFeaturedMedia()), React.createElement("div", {
        className: "rui gallery-thumbnails"
      }, this.renderMediaThumbnails())));
    }

    return renderMediaGallery;
  }();

  _proto.render = function () {
    function render() {
      var editable = this.props.editable;
      var gallery;

      if (editable) {
        gallery = this.renderMediaGalleryUploader();
      } else {
        gallery = this.renderMediaGallery();
      } // Note that only editable mode actually uses drag-drop, but since both views render
      // MediaItems, which are SortableItems, there is an error if it isn't in the ancester tree


      return React.createElement(Components.DragDropProvider, null, gallery);
    }

    return render;
  }();

  (0, _createClass2.default)(MediaGallery, [{
    key: "hasMedia",
    get: function () {
      var media = this.props.media;
      return Array.isArray(media) && media.length > 0;
    }
  }, {
    key: "featuredMedia",
    get: function () {
      return this.props.featuredMedia || this.props.media[0];
    }
  }]);
  return MediaGallery;
}(Component);

MediaGallery.propTypes = {
  editable: PropTypes.bool,
  featuredMedia: PropTypes.object,
  media: PropTypes.arrayOf(PropTypes.object),
  mediaGalleryHeight: PropTypes.number,
  mediaGalleryWidth: PropTypes.number,
  onDrop: PropTypes.func,
  onMouseEnterMedia: PropTypes.func,
  onMouseLeaveMedia: PropTypes.func,
  onMoveMedia: PropTypes.func,
  onRemoveMedia: PropTypes.func,
  uploadProgress: PropTypes.shape({
    bytesUploaded: PropTypes.number.isRequired,
    bytesTotal: PropTypes.number.isRequired,
    percentage: PropTypes.number.isRequired
  })
};
MediaGallery.defaultProps = {
  onDrop: function () {},
  onMouseEnterMedia: function () {},
  onMouseLeaveMedia: function () {},
  onMoveMedia: function () {},
  onRemoveMedia: function () {}
};
module.exportDefault(MediaGallery);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mediaItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/media/mediaItem.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var ReactImageMagnify;
module.watch(require("react-image-magnify"), {
  "default": function (v) {
    ReactImageMagnify = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var SortableItem;
module.watch(require("../../containers"), {
  SortableItem: function (v) {
    SortableItem = v;
  }
}, 6);
var Hint;
module.watch(require("./hint"), {
  "default": function (v) {
    Hint = v;
  }
}, 7);

var MediaItem =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MediaItem, _Component);

  function MediaItem() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();
      event.stopPropagation();

      _this.props.onClick();
    }, _this.handleKeyPress = function (event) {
      if (event.keyCode === 13) _this.handleClick(event);
    }, _this.handleMouseEnter = function (event) {
      var _this$props = _this.props,
          onMouseEnter = _this$props.onMouseEnter,
          source = _this$props.source;
      onMouseEnter(event, source);
    }, _this.handleMouseLeave = function (event) {
      var _this$props2 = _this.props,
          onMouseLeave = _this$props2.onMouseLeave,
          source = _this$props2.source;
      onMouseLeave(event, source);
    }, _this.handleRemoveMedia = function (event) {
      var _this$props3 = _this.props,
          onRemoveMedia = _this$props3.onRemoveMedia,
          source = _this$props3.source;
      event.stopPropagation();
      onRemoveMedia(source);
    }, _this.getSource = function (size) {
      var _this$props4 = _this.props,
          defaultSource = _this$props4.defaultSource,
          source = _this$props4.source;
      return source && source.url({
        store: size
      }) || defaultSource;
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = MediaItem.prototype;

  _proto.renderRevision = function () {
    function renderRevision() {
      var source = this.props.source;

      var _ref = source || {},
          revision = _ref.revision;

      if (!revision) return null;

      if (revision.changeType === "remove") {
        return React.createElement(Components.IconButton, {
          icon: "fa",
          status: "danger",
          i18nKeyTooltip: "admin.mediaGallery.removedImage",
          tooltip: "Image has been deleted. Publish to save changes.",
          kind: "mediaGalleryStatus"
        });
      }

      return React.createElement(Components.IconButton, {
        icon: "fa",
        status: "info",
        i18nKeyTooltip: "admin.mediaGallery.addedImage",
        tooltip: "This is a new image. Publish to save changes.",
        kind: "mediaGalleryStatus"
      });
    }

    return renderRevision;
  }();

  _proto.renderControls = function () {
    function renderControls() {
      var _props = this.props,
          editable = _props.editable,
          source = _props.source;
      if (!editable) return null;

      var _ref2 = source || {},
          revision = _ref2.revision; // If we have a pending remove, don't show the remove button


      var removeButton = null;

      if (!revision || revision.changeType !== "remove") {
        removeButton = React.createElement(Components.IconButton, {
          icon: "fa fa-times",
          onClick: this.handleRemoveMedia,
          i18nKeyTooltip: "admin.mediaGallery.deleteImage",
          tooltip: "Click to remove image"
        });
      }

      return React.createElement("div", {
        className: "rui badge-container"
      }, this.renderRevision(), removeButton);
    }

    return renderControls;
  }();

  _proto.renderImage = function () {
    function renderImage() {
      var _props2 = this.props,
          editable = _props2.editable,
          mediaHeight = _props2.mediaHeight,
          mediaWidth = _props2.mediaWidth,
          size = _props2.size,
          zoomable = _props2.zoomable;

      if (zoomable && !editable) {
        return React.createElement(ReactImageMagnify, {
          smallImage: {
            width: mediaWidth,
            height: mediaHeight,
            src: this.getSource(size)
          },
          imageClassName: "img-responsive",
          fadeDurationInMs: 150,
          hoverDelayInMs: 200,
          pressDuration: 300,
          largeImage: {
            src: this.getSource("image"),
            width: mediaWidth * 2,
            height: mediaHeight * 2
          },
          isHintEnabled: true,
          enlargedImageContainerClassName: "zoomed-image-container",
          hintTextMouse: "Hover to zoom",
          hintTextTouch: "Long-touch to zoom",
          hintComponent: Hint
        });
      }

      return React.createElement("img", {
        alt: "",
        className: "img-responsive",
        src: this.getSource(size)
      });
    }

    return renderImage;
  }();

  _proto.render = function () {
    function render() {
      var _props3 = this.props,
          connectDragSource = _props3.connectDragSource,
          connectDropTarget = _props3.connectDropTarget,
          editable = _props3.editable,
          zoomable = _props3.zoomable;
      var classes = {
        "gallery-image": true,
        "no-fade-on-hover": zoomable && !editable,
        "admin-gallery-image": Reaction.hasAdminAccess()
      };
      var mediaElement = React.createElement("div", {
        className: classnames(classes),
        onClick: this.handleClick,
        onKeyPress: this.handleKeyPress,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        role: "button",
        tabIndex: 0
      }, this.renderImage(), this.renderControls());

      if (editable) {
        return connectDragSource(connectDropTarget(mediaElement));
      }

      return mediaElement;
    }

    return render;
  }();

  return MediaItem;
}(Component);

MediaItem.propTypes = {
  connectDragSource: PropTypes.func,
  connectDropTarget: PropTypes.func,
  defaultSource: PropTypes.string,
  editable: PropTypes.bool,
  mediaHeight: PropTypes.number,
  mediaWidth: PropTypes.number,
  onClick: PropTypes.func,
  onMouseEnter: PropTypes.func,
  onMouseLeave: PropTypes.func,
  onRemoveMedia: PropTypes.func,
  size: PropTypes.string,
  source: PropTypes.object,
  zoomable: PropTypes.bool
};
MediaItem.defaultProps = {
  defaultSource: "/resources/placeholder.gif",
  editable: false,
  onClick: function () {},
  onMouseEnter: function () {},
  onMouseLeave: function () {},
  onRemoveMedia: function () {},
  size: "large",
  zoomable: false
};
registerComponent("MediaItem", MediaItem, SortableItem("media"));
module.exportDefault(SortableItem("media")(MediaItem));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mediaUploader.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/media/mediaUploader.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Dropzone;
module.watch(require("react-dropzone"), {
  "default": function (v) {
    Dropzone = v;
  }
}, 2);
var FileRecord;
module.watch(require("@reactioncommerce/file-collections"), {
  FileRecord: function (v) {
    FileRecord = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);
var Logger;
module.watch(require("../../../../../../../client/api"), {
  Logger: function (v) {
    Logger = v;
  }
}, 5);
var Media;
module.watch(require("../../../../files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 6);

var MediaUploader =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MediaUploader, _Component);

  function MediaUploader(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.uploadFiles = function (acceptedFiles) {
      var metadata = _this.props.metadata;
      var filesArray = Array.from(acceptedFiles);
      if (filesArray.length === 0) return;

      _this.setState({
        isUploading: true
      });

      var promises = [];
      filesArray.forEach(function (browserFile) {
        var fileRecord = FileRecord.fromFile(browserFile);
        if (metadata) fileRecord.metadata = metadata;
        var promise = fileRecord.upload({}) // We insert only AFTER the server has confirmed that all chunks were uploaded
        .then(function () {
          return Media.insert(fileRecord);
        }).catch(function (error) {
          Logger.error(error);
        });
        promises.push(promise);
      });
      Promise.all(promises).then(function () {
        if (!_this._isMounted) return;

        _this.setState({
          isUploading: false
        });
      });
    };

    _this.state = {
      isUploading: false
    };
    return _this;
  }

  var _proto = MediaUploader.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      this._isMounted = true;
    }

    return componentDidMount;
  }();

  _proto.componentWillUnmount = function () {
    function componentWillUnmount() {
      this._isMounted = false;
    }

    return componentWillUnmount;
  }();

  _proto.render = function () {
    function render() {
      var isUploading = this.state.isUploading;
      return React.createElement(Dropzone, {
        accept: "image/jpg, image/png, image/jpeg",
        className: "rui button btn btn-default btn-block",
        disabled: !!isUploading,
        onDrop: this.uploadFiles
      }, React.createElement("div", {
        className: "contents"
      }, !!isUploading && React.createElement("div", {
        style: {
          marginLeft: "auto",
          marginRight: "auto"
        }
      }, React.createElement(Components.CircularProgress, {
        indeterminate: true
      })), !isUploading && React.createElement("span", {
        className: "title"
      }, React.createElement(Components.Translation, {
        defaultValue: "Click or drop images here to upload media",
        i18nKey: "mediaUploader.dropFiles"
      }))));
    }

    return render;
  }();

  return MediaUploader;
}(Component);

MediaUploader.propTypes = {
  metadata: PropTypes.object
};
registerComponent("MediaUploader", MediaUploader);
module.exportDefault(MediaUploader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"menu":{"dropDownMenu.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/menu/dropDownMenu.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Children, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Children: function (v) {
    Children = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var DropDownMenu =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(DropDownMenu, _Component);

  function DropDownMenu(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleDropdownToggle = function () {
      _this.setState({
        isOpen: !_this.state.isOpen
      });
    };

    _this.handleMenuItemChange = function (event, value, menuItem) {
      _this.setState({
        label: menuItem.props.label || value,
        isOpen: false
      });

      if (_this.props.closeOnClick) {
        _this.handleOpen(false);
      }

      if (_this.props.onChange) {
        _this.props.onChange(event, value);
      }
    };

    _this.handleOpen = function (isOpen) {
      if (_this.isControlled) {
        if (_this.props.onRequestOpen) {
          _this.props.onRequestOpen(isOpen);
        }
      } else {
        _this.setState({
          isOpen: isOpen
        });
      }
    };

    _this.state = {
      label: undefined,
      isOpen: false
    };
    return _this;
  }

  var _proto = DropDownMenu.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (this.isControlled) {
        this.setState({
          isOpen: nextProps.isOpen
        });
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.Popover, {
        attachment: this.props.attachment,
        buttonElement: this.props.buttonElement || React.createElement(Components.Button, {
          icon: "fa fa-chevron-down",
          iconAfter: true,
          label: this.label
        }),
        constraints: this.props.constraints,
        isOpen: this.isOpen,
        onClick: this.handleDropdownToggle,
        onRequestOpen: this.handleOpen,
        targetAttachment: this.props.targetAttachment
      }, React.createElement(Components.Menu, {
        className: this.props.className,
        menuClassName: this.props.menuClassName,
        value: this.props.value,
        onChange: this.handleMenuItemChange,
        style: this.props.menuStyle,
        isClickable: this.props.isClickable
      }, this.props.children));
    }

    return render;
  }();

  (0, _createClass2.default)(DropDownMenu, [{
    key: "isOpen",
    get: function () {
      return this.props.isOpen || this.state.isOpen;
    }
  }, {
    key: "isControlled",
    get: function () {
      return typeof this.props.isOpen === "boolean";
    }
  }, {
    key: "label",
    get: function () {
      var _this2 = this;

      var label = this.state.label;
      Children.forEach(this.props.children, function (element) {
        if (element.props.value === _this2.props.value) {
          label = element.props.label;
        }
      });

      if (!label) {
        var children = Children.toArray(this.props.children);

        if (children.length) {
          return children[0].props.label;
        }
      }

      return label;
    }
  }]);
  return DropDownMenu;
}(Component);

DropDownMenu.propTypes = {
  attachment: PropTypes.string,
  buttonElement: PropTypes.node,
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  closeOnClick: PropTypes.bool,
  constraints: PropTypes.array,
  isClickable: PropTypes.bool,
  isEnabled: PropTypes.bool,
  isOpen: PropTypes.bool,
  menuClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  menuStyle: PropTypes.object,
  onChange: PropTypes.func,
  onPublishClick: PropTypes.func,
  onRequestOpen: PropTypes.func,
  revisions: PropTypes.arrayOf(PropTypes.object),
  targetAttachment: PropTypes.string,
  translation: PropTypes.shape({
    lang: PropTypes.string
  }),
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])
};
registerComponent("DropDownMenu", DropDownMenu);
module.exportDefault(DropDownMenu);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/menu/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./menu"), {
  "default": function (v) {
    exports.Menu = v;
  }
}, 0);
module.watch(require("./menuItem"), {
  "default": function (v) {
    exports.MenuItem = v;
  }
}, 1);
module.watch(require("./dropDownMenu"), {
  "default": function (v) {
    exports.DropDownMenu = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menu.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/menu/menu.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Children, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Children: function (v) {
    Children = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Menu =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Menu, _Component);

  function Menu() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleChange = function (event, value, menuItem) {
      if (_this.props.onChange) {
        _this.props.onChange(event, value, menuItem);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Menu.prototype;

  _proto.renderMenuItems = function () {
    function renderMenuItems() {
      var _this2 = this;

      if (this.props.children) {
        return Children.map(this.props.children, function (element) {
          var newChild = React.cloneElement(element, {
            active: element.props.value === _this2.props.value,
            onClick: _this2.handleChange
          });
          var baseClassName = classnames({
            active: element.props.value === _this2.props.value
          }, _this2.props.className);
          return React.createElement("li", {
            className: baseClassName
          }, _this2.props.isClickable ? newChild : element);
        });
      }
    }

    return renderMenuItems;
  }();

  _proto.render = function () {
    function render() {
      var className = classnames({
        "rui": true,
        "menu": true,
        "dropdown-menu": true
      }, this.props.menuClassName);
      return React.createElement("ul", {
        className: className,
        style: this.props.style
      }, this.renderMenuItems());
    }

    return render;
  }();

  return Menu;
}(Component);

Menu.propTypes = {
  attachment: PropTypes.string,
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  isClickable: PropTypes.bool,
  menuClassName: PropTypes.string,
  onChange: PropTypes.func,
  style: PropTypes.object,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])
};
Menu.defaultProps = {
  attachment: "top",
  isClickable: true
};
registerComponent("Menu", Menu);
module.exportDefault(Menu);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"menuItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/menu/menuItem.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var MenuItem =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MenuItem, _Component);

  function MenuItem() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (_this.props.onClick && _this.props.disabled === false) {
        _this.props.onClick(event, _this.props.value, (0, _assertThisInitialized2.default)(_this));
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = MenuItem.prototype;

  _proto.renderIcon = function () {
    function renderIcon() {
      if (this.props.icon) {
        return React.createElement(Components.Icon, {
          icon: this.props.icon,
          style: this.props.iconStyle
        });
      }

      return null;
    }

    return renderIcon;
  }();

  _proto.renderLabel = function () {
    function renderLabel() {
      if (this.props.label) {
        return React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        });
      }

      return null;
    }

    return renderLabel;
  }();

  _proto.render = function () {
    function render() {
      var _ref;

      return React.createElement(Components.Button, {
        tagName: "div",
        className: (_ref = {
          "rui": true,
          "menu-item": true,
          "flat": false,
          "btn": false,
          "btn-default": false,
          "active": this.props.active
        }, _ref[this.props.className || ""] = true, _ref),
        disabled: this.props.disabled,
        "data-event-action": this.props.eventAction,
        onClick: this.handleClick
      }, this.renderIcon(), this.renderLabel());
    }

    return render;
  }();

  return MenuItem;
}(Component);

MenuItem.propTypes = {
  active: PropTypes.bool,
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  disabled: PropTypes.bool,
  eventAction: PropTypes.string,
  i18nKeyLabel: PropTypes.string,
  i18nKeySelectedLabel: PropTypes.string,
  icon: PropTypes.string,
  iconStyle: PropTypes.object,
  label: PropTypes.string,
  onClick: PropTypes.func,
  selectionLabel: PropTypes.string,
  value: PropTypes.any
};
MenuItem.defaultProps = {
  disabled: false
};
registerComponent("MenuItem", MenuItem);
module.exportDefault(MenuItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"metadata":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/metadata/index.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./metadata"), {
  "default": function (v) {
    exports.Metadata = v;
  }
}, 0);
module.watch(require("./metafield"), {
  "default": function (v) {
    exports.Metafield = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"metadata.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/metadata/metadata.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var Metadata =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Metadata, _Component);

  function Metadata() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleSubmit = function (event) {
      event.preventDefault();
    }, _this.handleMetaChange = function (event, metafield, index) {
      if (_this.props.onMetaChange) {
        _this.props.onMetaChange(event, metafield, index);
      }
    }, _this.handleMetaSave = function (event, metafield, index) {
      if (_this.props.onMetaSave) {
        _this.props.onMetaSave(event, metafield, index);
      }
    }, _this.handleMetaRemove = function (event, metafield, index) {
      if (_this.props.onMetaRemove) {
        _this.props.onMetaRemove(event, metafield, index);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Metadata.prototype;

  /**
   * Render user readable metadata
   * @return {JSX} metadata
   */
  _proto.renderMetadata = function () {
    function renderMetadata() {
      if (this.props.metafields) {
        return this.props.metafields.map(function (metadata, index) {
          return React.createElement("div", {
            className: "rui meta-item",
            key: index
          }, React.createElement("div", {
            className: "rui meta-key"
          }, metadata.key), React.createElement("div", {
            className: "rui meta-value"
          }, metadata.value));
        });
      }

      return null;
    }

    return renderMetadata;
  }();
  /**
   * Render a metadata form
   * @return {JSX} metadata forms for each row of metadata
   */


  _proto.renderMetadataForm = function () {
    function renderMetadataForm() {
      var _this2 = this;

      if (this.props.metafields) {
        return this.props.metafields.map(function (metadata, index) {
          return React.createElement(Components.Metafield, {
            index: index,
            key: index,
            metafield: metadata,
            onBlur: _this2.handleMetaSave,
            onChange: _this2.handleMetaChange,
            onRemove: _this2.handleMetaRemove
          });
        });
      }

      return null;
    }

    return renderMetadataForm;
  }();

  _proto.renderMetadataCreateForm = function () {
    function renderMetadataCreateForm() {
      return React.createElement(Components.Metafield, {
        blank: true,
        metafield: this.props.newMetafield,
        onBlur: this.handleMetaSave,
        onChange: this.handleMetaChange,
        ref: "newMetadataFields"
      });
    }

    return renderMetadataCreateForm;
  }();
  /**
   * render
   * @return {JSX} component
   */


  _proto.render = function () {
    function render() {
      // Admin editable metadata
      if (this.props.editable) {
        return React.createElement("div", {
          className: "rui list-group product-detail-edit product-attributes"
        }, this.renderMetadataForm(), this.renderMetadataCreateForm());
      } // User readable metadata


      return React.createElement("div", {
        className: "rui metadata"
      }, this.renderMetadata());
    }

    return render;
  }();

  return Metadata;
}(Component);

Metadata.defaultProps = {
  editable: true
}; // Prop Types

Metadata.propTypes = {
  editable: PropTypes.bool,
  metafields: PropTypes.arrayOf(PropTypes.object),
  newMetafield: PropTypes.object,
  onMetaChange: PropTypes.func,
  onMetaRemove: PropTypes.func,
  onMetaSave: PropTypes.func
};
registerComponent("Metadata", Metadata);
module.exportDefault(Metadata);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"metafield.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/metadata/metafield.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Velocity;
module.watch(require("velocity-animate"), {
  "default": function (v) {
    Velocity = v;
  }
}, 2);
module.watch(require("velocity-animate/velocity.ui"));
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Metafield =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Metafield, _Component);

  function Metafield() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleSubmit = function (event) {
      event.preventDefault();
    }, _this.handleChange = function (event) {
      if (_this.props.onChange) {
        var newMetadata = {
          key: _this.refs.keyInput.refs.input.value,
          value: _this.refs.valueInput.refs.input.value
        };

        _this.props.onChange(event, newMetadata, _this.props.index);
      }
    }, _this.handleBlur = function (event) {
      if (_this.props.onBlur) {
        var newMetadata = {
          key: _this.refs.keyInput.refs.input.value,
          value: _this.refs.valueInput.refs.input.value
        };

        if (newMetadata.key && newMetadata.value) {
          _this.props.onBlur(event, newMetadata, _this.props.index);
        }
      }
    }, _this.handleRemove = function (event) {
      if (_this.props.onRemove) {
        _this.props.onRemove(event, _this.props.metafield, _this.props.index);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Metafield.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (nextProps.metafield.key !== this.props.metafield.key) {
        var input = this.refs.keyInput.refs.input;
        Velocity.RunSequence([{
          e: input,
          p: {
            backgroundColor: "#e2f2e2"
          },
          o: {
            duration: 200
          }
        }, {
          e: input,
          p: {
            backgroundColor: "#fff"
          },
          o: {
            duration: 100
          }
        }]);
      }

      if (nextProps.metafield.value !== this.props.metafield.value) {
        var _input = this.refs.valueInput.refs.input;
        Velocity.RunSequence([{
          e: _input,
          p: {
            backgroundColor: "#e2f2e2"
          },
          o: {
            duration: 200
          }
        }, {
          e: _input,
          p: {
            backgroundColor: "#fff"
          },
          o: {
            duration: 100
          }
        }]);
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.renderActionButton = function () {
    function renderActionButton() {
      if (this.props.blank === true) {
        return React.createElement(Components.Button, {
          icon: "plus",
          onClick: this.handleSubmit,
          type: "submit"
        });
      }

      return React.createElement(Components.Button, {
        icon: "times-circle",
        onClick: this.handleRemove,
        type: "button"
      });
    }

    return renderActionButton;
  }();
  /**
   * Render a metadata form
   * @return {JSX} metadata forms for each row of metadata
   */


  _proto.render = function () {
    function render() {
      if (this.props.metafield) {
        return React.createElement("div", {
          className: "rui list-group-item metafield-list-item"
        }, React.createElement("form", {
          className: "form form-inline",
          onSubmit: this.handleSubmit
        }, React.createElement(Components.TextField, {
          className: "metafield-key-input",
          i18nKeyPlaceholder: this.i18nKeyDetailName,
          name: "key",
          onBlur: this.handleBlur,
          onChange: this.handleChange,
          onReturnKeyDown: this.handleBlur,
          placeholder: this.detailNamePlaceholder,
          ref: "keyInput",
          value: this.props.metafield.key
        }), React.createElement(Components.TextField, {
          className: "metafield-value-input",
          i18nKeyPlaceholder: this.i18nKeyDetailInformation,
          name: "value",
          onBlur: this.handleBlur,
          onChange: this.handleChange,
          onReturnKeyDown: this.handleBlur,
          placeholder: this.detailInfoPlaceholder,
          ref: "valueInput",
          value: this.props.metafield.value
        }), this.renderActionButton()));
      }

      return null;
    }

    return render;
  }();

  (0, _createClass2.default)(Metafield, [{
    key: "detailNamePlaceholder",
    get: function () {
      return this.props.detailNamePlaceholder || "Detail Name";
    }
  }, {
    key: "i18nKeyDetailName",
    get: function () {
      return this.props.i18nKeyDetailName || "productDetailEdit.detailName";
    }
  }, {
    key: "detailInfoPlaceholder",
    get: function () {
      return this.props.detailInfoPlaceholder || "Detail Information";
    }
  }, {
    key: "i18nKeyDetailInformation",
    get: function () {
      return this.props.i18nKeyDetailInfo || "productDetail.detailsInfo";
    }
    /**
     * Handle form submit
     * @param  {Event} event Event object
     * @return {void} no return value
     */

  }]);
  return Metafield;
}(Component);

Metafield.defaultProps = {
  editable: true
}; // Prop Types

Metafield.propTypes = {
  blank: PropTypes.bool,
  detailInfoPlaceholder: PropTypes.func,
  detailNamePlaceholder: PropTypes.func,
  i18nKeyDetailInfo: PropTypes.func,
  i18nKeyDetailName: PropTypes.func,
  index: PropTypes.number,
  metafield: PropTypes.object,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  onRemove: PropTypes.func
};
registerComponent("Metafield", Metafield);
module.exportDefault(Metafield);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"modal":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/modal/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./overlay"), {
  "default": function (v) {
    exports.Overlay = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"overlay.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/modal/overlay.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var VelocityTransitionGroup;
module.watch(require("velocity-react"), {
  VelocityTransitionGroup: function (v) {
    VelocityTransitionGroup = v;
  }
}, 2);
var Radium;
module.watch(require("radium"), {
  "default": function (v) {
    Radium = v;
  }
}, 3);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 4);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 5);
var styles = {
  base: {
    position: "fixed",
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    backgroundColor: "rgba(0, 0, 0, 0.7)",
    zIndex: 1040,
    padding: 0
  }
};

var Overlay =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Overlay, _Component);

  function Overlay() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      enterAnimation: {
        animation: {
          opacity: 1
        },
        duration: 200
      },
      leaveAnimation: {
        animation: {
          opacity: 0
        },
        duration: 200
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Overlay.prototype;

  _proto.renderOverlay = function () {
    function renderOverlay() {
      if (this.props.isVisible) {
        var baseClassName = classnames({
          rui: true
        });
        return React.createElement("div", {
          "aria-hidden": true,
          className: baseClassName,
          style: styles.base,
          onClick: this.props.onClick
        });
      }

      return null;
    }

    return renderOverlay;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(VelocityTransitionGroup, {
        enter: this.state.enterAnimation,
        leave: this.state.leaveAnimation
      }, this.renderOverlay());
    }

    return render;
  }();

  return Overlay;
}(Component);

Overlay.defaultProps = {
  isVisible: true
};
Overlay.propTypes = {
  children: PropTypes.node,
  isVisible: PropTypes.bool,
  onClick: PropTypes.func
};
registerComponent("Overlay", Overlay, Radium);
module.exportDefault(Radium(Overlay));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"multiselect":{"multiselect.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/multiselect/multiselect.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Select;
module.watch(require("react-select"), {
  "default": function (v) {
    Select = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 5);

var MultiSelect =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MultiSelect, _Component);

  function MultiSelect() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleChange = function (value) {
      if (typeof _this.props.onChange === "function") {
        _this.props.onChange(value, _this.props.name);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = MultiSelect.prototype;

  _proto.renderLabel = function () {
    function renderLabel() {
      if (this.props.label) {
        var id = this.props.id;
        return React.createElement("label", {
          htmlFor: id
        }, React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        }));
      }

      return null;
    }

    return renderLabel;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          label = _props.label,
          i18nKeyLabel = _props.i18nKeyLabel,
          placeholder = _props.placeholder,
          i18nKeyPlaceholder = _props.i18nKeyPlaceholder,
          selectProps = (0, _objectWithoutProperties2.default)(_props, ["label", "i18nKeyLabel", "placeholder", "i18nKeyPlaceholder"]);
      var classes = classnames({
        // Base
        "rui": true,
        "multiselect": true,
        "form-group": true
      });
      var translatedPlaceholder = i18next.t(i18nKeyPlaceholder, {
        defaultValue: placeholder
      });
      return React.createElement("div", {
        className: classes
      }, this.renderLabel(), React.createElement(Select, (0, _extends2.default)({}, selectProps, {
        placeholder: translatedPlaceholder,
        onChange: this.handleChange
      })));
    }

    return render;
  }();

  return MultiSelect;
}(Component);

MultiSelect.defaultProps = {
  multi: true,
  simpleValue: true
};
MultiSelect.propTypes = {
  i18nKeyLabel: PropTypes.string,
  i18nKeyPlaceholder: PropTypes.string,
  id: PropTypes.string,
  label: PropTypes.string,
  name: PropTypes.string,
  onChange: PropTypes.func,
  options: PropTypes.array,
  placeholder: PropTypes.string,
  value: PropTypes.any
};
registerComponent("MultiSelect", MultiSelect);
module.exportDefault(MultiSelect);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"notFound":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/notFound/index.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./notFound"), {
  "default": function (v) {
    exports.NotFound = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notFound.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/notFound/notFound.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Icon;
module.watch(require("../icon"), {
  Icon: function (v) {
    Icon = v;
  }
}, 4);

/**
 * @summary React component for displaying a not-found view
 * @param {Object} props - React PropTypes
 * @property {String|Object} className - String className or `classnames` compatible object for the base wrapper
 * @property {String|Object} contentClassName - String className or `classnames` compatible object for the content wrapper
 * @property {String} i18nKeyMessage - i18n key for message
 * @property {String} i18nKeyTitle - i18n key for title
 * @property {String} icon - icon font class names
 * @property {String} message - extra message text
 * @property {String} title - title of page
 * @return {Node} React node containing not-found view
 */
var NotFound = function (props) {
  // ClassName for base wrapper,
  // If one is provided in props, the default is not used
  var baseClassName = classnames({
    "container-fluid-sm": typeof props.className === "undefined"
  }, props.className); // ClassName for content wrapper
  // If one is provided in props, the default is not used

  var contentClassName = classnames({
    "empty-view-message": typeof props.contentClassName === "undefined"
  }, props.contentClassName);
  return React.createElement("div", {
    className: baseClassName
  }, React.createElement("div", {
    className: contentClassName
  }, props.icon && React.createElement(Icon, {
    icon: props.icon
  }), props.title && React.createElement(Components.Translation, {
    defaultValue: props.title,
    i18nKey: props.i18nKeyTitle
  }), props.message && React.createElement(Components.Translation, {
    defaultValue: props.message,
    i18nKey: props.i18nKeyMessage
  }), props.children));
};

NotFound.propTypes = {
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  contentClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  i18nKeyMessage: PropTypes.string,
  i18nKeyTitle: PropTypes.string,
  icon: PropTypes.string,
  message: PropTypes.string,
  title: PropTypes.string
};
registerComponent("NotFound", NotFound);
module.exportDefault(NotFound);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"numericInput":{"numberTypeInput.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/numericInput/numberTypeInput.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var NumberTypeInput =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(NumberTypeInput, _Component);

  function NumberTypeInput(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleIncrementButton = function (event) {
      var value = _this.state.value + 1;

      if (_this.state.maxValue && value <= _this.state.maxValue) {
        _this.handleChange(event, value);
      }
    };

    _this.handleDecrementButton = function (event) {
      var value = _this.state.value - 1;

      if (value >= _this.state.minValue) {
        _this.handleChange(event, value);
      }
    };

    _this.handleChange = function (event, value) {
      var newValue = parseInt(value, 10);
      var _this$state = _this.state,
          maxValue = _this$state.maxValue,
          minValue = _this$state.minValue; // prevent the new value from being
      // greater or less than the min and max values

      if (newValue > maxValue) {
        newValue = maxValue;
      }

      if (newValue < minValue) {
        newValue = minValue;
      } // setting the value state
      // if a new value set edited css class


      _this.setState({
        value: newValue,
        className: {
          edited: newValue !== maxValue
        }
      }); // if props.onChange and the new value is a number


      if (_this.props.onChange && !isNaN(newValue)) {
        _this.props.onChange(event, newValue);
      }
    };

    _this.handleBlur = function (event) {
      var maxValue = _this.state.maxValue; // if input is left empty reset
      // it's value to be the max value

      if (isNaN(_this.state.value)) {
        _this.setState({
          value: maxValue
        });

        _this.props.onChange(event, maxValue);
      }
    };

    _this.state = {
      value: props.defaultValue,
      minValue: props.minValue || 0,
      maxValue: props.maxValue || undefined,
      className: {}
    };
    return _this;
  }

  var _proto = NumberTypeInput.prototype;

  _proto.render = function () {
    function render() {
      var fieldClassName = classnames((0, _objectSpread2.default)({
        "number-input-field": true
      }, this.state.className));
      return React.createElement("div", {
        className: "rui number-input"
      }, React.createElement(Components.TextField, {
        className: fieldClassName,
        type: "number",
        onBlur: this.handleBlur,
        onChange: this.handleChange,
        maxValue: this.state.maxValue,
        minValue: this.state.minValue,
        value: this.state.value
      }), React.createElement("div", {
        className: "stacked-buttons"
      }, React.createElement(Components.Button, {
        className: "button",
        icon: "fa fa-chevron-up",
        disabled: this.state.maxValue === this.state.value,
        onClick: this.handleIncrementButton
      }), React.createElement("br", null), React.createElement(Components.Button, {
        className: "button",
        icon: "fa fa-chevron-down",
        disabled: this.state.minValue === this.state.value,
        onClick: this.handleDecrementButton
      })));
    }

    return render;
  }();

  return NumberTypeInput;
}(Component);

NumberTypeInput.propTypes = {
  defaultValue: PropTypes.number,
  maxValue: PropTypes.number,
  minValue: PropTypes.number,
  onChange: PropTypes.func,
  value: PropTypes.number
};
registerComponent("NumberTypeInput", NumberTypeInput);
module.exportDefault(NumberTypeInput);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"numericInput.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/numericInput/numericInput.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var accounting;
module.watch(require("accounting-js"), {
  "default": function (v) {
    accounting = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);

var NumericInput =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(NumericInput, _Component);

  function NumericInput(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.onBlur = function () {
      var value = _this.state.value;

      if (value > _this.props.maxValue) {
        value = _this.props.maxValue;
      }

      _this.setState({
        isEditing: false,
        value: value
      });

      if (_this.props.onBlur) {
        var numberValue = _this.unformat(value);

        _this.props.onBlur(event, numberValue, _this.props.name);
      }
    };

    _this.onFocus = function (event) {
      var currentTarget = event.currentTarget;

      _this.setState({
        isEditing: true
      }, function () {
        _this.setState({
          value: _this.format(_this.state.value)
        }, function () {
          _this.selectAll(currentTarget);
        });
      });
    };

    _this.handleChange = function (event) {
      var value = event.currentTarget.value;

      _this.setState({
        value: value
      });

      if (_this.props.onChange) {
        var numberValue = _this.unformat(value);

        _this.props.onChange(event, numberValue, _this.props.name);
      }
    };

    _this.state = {
      value: _this.props.value,
      isEditing: false
    };
    return _this;
  }
  /**
   * update state when component receives props
   * @param  {Object} nextProps new props
   * @return {undefined}
   */


  var _proto = NumericInput.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== undefined && !this.state.isEditing) {
        var value = this.format(nextProps.value);
        this.setState({
          value: value
        });
      }
    }

    return componentWillReceiveProps;
  }();
  /**
   * Gets the displayed value. If in edit mode,
   * the field's value is not formatted. If not in
   * edit mode, the field gets formatted according to chosen locale.
   * @returns {*}
   */


  /**
   * Format this inputs value to a numeric string
   * @return {String} Formatted numeric string
   */
  _proto.format = function () {
    function format(value) {
      var moneyFormat = Object.assign({}, this.props.format);

      if (this.state.isEditing) {
        moneyFormat.symbol = ""; // No currency sign in edit mode
      }

      var unformattedValue = this.unformat(value);
      var formatted = accounting.formatMoney(unformattedValue, moneyFormat).trim();
      return formatted;
    }

    return format;
  }();
  /**
   * Get the field's value as rational number
   * @param { Number } the field's value
   */


  _proto.unformat = function () {
    function unformat(value) {
      var unformattedValue = accounting.unformat(value, this.props.format.decimal);
      return unformattedValue;
    }

    return unformat;
  }();
  /**
   * onBlur
   * @summary set the state when the value of the input is changed
   * @param  {Event} event Event object
   * @return {void}
   */


  /**
   * onKeyDown
   * @summary set the state when the value of the input is changed
   * @param  {Event} event Event object
   * @return {void}
   */
  _proto.onKeyDown = function () {
    function onKeyDown(event) {
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event, this.props.name);
      }

      if (this.props.onReturnKeyDown && event.keyCode === 13) {
        var numberValue = this.unformat(event.target.value);
        this.props.onReturnKeyDown(event, numberValue, this.props.name);
      }
    }

    return onKeyDown;
  }();
  /**
   * Selects the text of the passed input field
   * @param ctrl
   */


  _proto.selectAll = function () {
    function selectAll(ctrl) {
      if (ctrl.setSelectionRange) {
        ctrl.setSelectionRange(0, ctrl.value.length);
      }
    }

    return selectAll;
  }();
  /**
   * onFocus
   * @summary set the state when the input is focused
   * @param  {Event} event Event object
   * @return {void}
   */


  /**
   * renderLabel
   * @summary Render the label for the field if one is provided in props
   * @return {ReactNode|null} react node or null
   */
  _proto.renderLabel = function () {
    function renderLabel() {
      if (this.props.label) {
        return React.createElement("label", {
          htmlFor: this.props.id
        }, React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        }));
      }

      return null;
    }

    return renderLabel;
  }();
  /**
   * renderField
   * @summary Render input box or field
   * @return {JSX} jsx template
   */


  _proto.renderField = function () {
    function renderField() {
      var classNames = this.props.classNames;

      if (this.props.isEditing === false) {
        var textValueClassName = classnames((0, _objectSpread2.default)({
          rui: true,
          text: true
        }, classNames.text || {}));
        return React.createElement("span", {
          className: textValueClassName
        }, this.displayValue);
      }

      var fieldClassName = classnames((0, _objectSpread2.default)({
        "form-control": true
      }, classNames.input || {}));
      return React.createElement("div", {
        className: "rui control numeric-input-field"
      }, React.createElement("input", {
        className: fieldClassName,
        disabled: this.props.disabled,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        ref: "input",
        onChange: this.handleChange,
        value: this.displayValue
      }));
    }

    return renderField;
  }();
  /**
   * render
   * @return {ReactElement} markup
   */


  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "numeric-input"
      }, this.renderLabel(), this.renderField());
    }

    return render;
  }();

  (0, _createClass2.default)(NumericInput, [{
    key: "displayValue",
    get: function () {
      var value = this.state.value;

      if (this.state.isEditing) {
        return value;
      }

      return this.format(value);
    }
  }]);
  return NumericInput;
}(Component);

NumericInput.defaultProps = {
  disabled: false,
  isEditing: true,
  classNames: {}
};
NumericInput.propTypes = {
  classNames: PropTypes.shape({}),
  disabled: PropTypes.bool,
  format: PropTypes.shape({
    decimal: PropTypes.string
  }),
  i18nKeyLabel: PropTypes.string,
  id: PropTypes.string,
  isEditing: PropTypes.bool,
  label: PropTypes.string,
  maxValue: PropTypes.number,
  name: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  onKeyDown: PropTypes.func,
  onReturnKeyDown: PropTypes.func,
  value: PropTypes.number
};
registerComponent("NumericInput", NumericInput);
module.exportDefault(NumericInput);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"popover":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/popover/index.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./popover"), {
  "default": function (v) {
    exports.Popover = v;
  }
}, 0);
module.watch(require("./popoverContent"), {
  "default": function (v) {
    exports.PopoverContent = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"popover.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/popover/popover.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var TetherComponent;
module.watch(require("react-tether"), {
  "default": function (v) {
    TetherComponent = v;
  }
}, 3);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);

var Popover =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Popover, _Component);

  function Popover() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      isOpen: false
    }, _this.handleDisplayButtonClick = function (event, value) {
      if (_this.props.onDisplayButtonClick) {
        _this.props.onDisplayButtonClick(event, value);
      }
    }, _this.handleOpen = function () {
      if (_this.isControlled) {
        if (_this.props.onRequestOpen) {
          _this.props.onRequestOpen(true);
        }
      } else {
        _this.setState({
          isOpen: true
        });
      }
    }, _this.handleClickOutside = function () {
      if (_this.isControlled) {
        if (_this.props.onRequestOpen) {
          _this.props.onRequestOpen(false);
        }
      } else {
        _this.setState({
          isOpen: false
        });
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Popover.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (this.isControlled) {
        this.setState({
          isOpen: nextProps.isOpen
        });
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.renderPopoverChildren = function () {
    function renderPopoverChildren() {
      if (this.isOpen) {
        return React.createElement(Components.PopoverContent, {
          children: this.props.children,
          onClickOutside: this.props.onClick
        });
      }

      return null;
    }

    return renderPopoverChildren;
  }();

  _proto.renderButtons = function () {
    function renderButtons() {
      if (this.props.showDropdownButton) {
        return React.createElement(Components.ButtonGroup, null, this.props.buttonElement, React.createElement(Components.Button, {
          key: "dropdown-button",
          icon: "fa fa-chevron-down",
          onClick: this.props.onClick,
          status: this.props.buttonElement.props.status
        }));
      } else if (this.props.buttonElement) {
        return React.cloneElement(this.props.buttonElement, {
          onClick: this.props.onClick
        });
      }

      return React.createElement("div", null);
    }

    return renderButtons;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(TetherComponent, {
        style: {
          maxHeight: "100vh",
          overflowY: "auto"
        },
        attachment: this.attachment,
        classPrefix: "popover",
        className: classnames({
          "rui": true,
          "popover-element": true,
          "popover-open": true,
          "popover-theme-arrows": this.props.showArrow || false
        }),
        constraints: this.props.constraints || [{
          to: "scrollParent",
          attachment: "together",
          pin: true
        }],
        targetAttachment: this.props.targetAttachment
      }, this.renderButtons(), this.renderPopoverChildren());
    }

    return render;
  }();

  (0, _createClass2.default)(Popover, [{
    key: "isOpen",
    get: function () {
      return this.props.isOpen || this.state.isOpen;
    }
  }, {
    key: "isControlled",
    get: function () {
      return typeof this.props.isOpen === "boolean";
    }
    /**
     * attachment
     * @description Return the attachment for the tooltip or the default
     * @return {String} attachment
     */

  }, {
    key: "attachment",
    get: function () {
      return this.props.attachment || Components.Tooltip.defaultProps.attachment;
    }
  }]);
  return Popover;
}(Component);

Popover.propTypes = {
  attachment: PropTypes.string,
  buttonElement: PropTypes.node,
  children: PropTypes.node,
  constraints: PropTypes.array,
  isOpen: PropTypes.bool,
  onClick: PropTypes.func,
  onDisplayButtonClick: PropTypes.func,
  onRequestOpen: PropTypes.func,
  showArrow: PropTypes.bool,
  showDropdownButton: PropTypes.bool,
  targetAttachment: PropTypes.string,
  tooltipContent: PropTypes.node
};
Popover.defaultProps = {
  attachment: "bottom left",
  showArrow: false,
  targetAttachment: "top left"
};
registerComponent("Popover", Popover);
module.exportDefault(Popover);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"popoverContent.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/popover/popoverContent.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var onclickOutside;
module.watch(require("react-onclickoutside"), {
  "default": function (v) {
    onclickOutside = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var PopoverContent =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PopoverContent, _Component);

  function PopoverContent() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PopoverContent.prototype;

  _proto.handleClickOutside = function () {
    function handleClickOutside(event) {
      if (this.props.onClickOutside) {
        this.props.onClickOutside(event);
      }
    }

    return handleClickOutside;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "rui popover-content"
      }, this.props.children);
    }

    return render;
  }();

  return PopoverContent;
}(Component);

PopoverContent.propTypes = {
  children: PropTypes.node,
  onClickOutside: PropTypes.func
};
registerComponent("PopoverContent", onclickOutside(PopoverContent));
module.exportDefault(onclickOutside(PopoverContent));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"progress":{"circularProgress.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/progress/circularProgress.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var CircularProgress = function (_ref) {
  var indeterminate = _ref.indeterminate;
  return !!indeterminate && React.createElement("div", {
    className: "spinner"
  });
};

CircularProgress.propTypes = {
  indeterminate: PropTypes.bool
};
CircularProgress.defaultProps = {
  indeterminate: true
};
registerComponent("CircularProgress", CircularProgress);
module.exportDefault(CircularProgress);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"select":{"select.react.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/select/select.react.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);

var Select =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Select, _Component);

  function Select() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Select.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(Components.MultiSelect, (0, _extends2.default)({
        multi: false,
        clearable: false
      }, this.props));
    }

    return render;
  }();

  return Select;
}(Component);

registerComponent("Select", Select);
module.exportDefault(Select);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"slider":{"slider.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/slider/slider.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Nouislider;
module.watch(require("react-nouislider"), {
  "default": function (v) {
    Nouislider = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Slider =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Slider, _Component);

  function Slider() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Slider.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(Nouislider, {
        range: this.props.range,
        start: this.props.start,
        tooltips: this.props.tooltips,
        connect: this.props.connect,
        step: this.props.step,
        orientation: this.props.orientation,
        margin: this.props.margin,
        padding: this.props.padding,
        onChange: this.props.onChange,
        onSlide: this.props.onSlide
      });
    }

    return render;
  }();

  return Slider;
}(Component);

Slider.propTypes = {
  connect: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),
  margin: PropTypes.number,
  onChange: PropTypes.func,
  onSlide: PropTypes.func,
  orientation: PropTypes.string,
  padding: PropTypes.number,
  range: PropTypes.object,
  start: PropTypes.arrayOf(PropTypes.number),
  step: PropTypes.number,
  tooltips: PropTypes.oneOfType([PropTypes.array, PropTypes.bool])
};
Slider.defaultProps = {
  range: {
    min: 0,
    max: 100
  },
  start: [0, 100],
  step: 5,
  orientation: "horizontal",
  tooltips: true,
  margin: 0,
  padding: 0
};
registerComponent("Slider", Slider);
module.exportDefault(Slider);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"switch":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/switch/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./switch"), {
  "default": function (v) {
    exports.Switch = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"switch.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/switch/switch.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var Switch =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Switch, _Component);

  function Switch(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleChange = function (event) {
      if (_this.props.onChange) {
        var isInputChecked = !_this.props.checked;

        _this.props.onChange(event, isInputChecked, _this.props.name);
      }
    };

    _this.checkboxRef = function (ref) {
      _this._checkbox = ref;
    };

    _this.state = {
      checked: false
    };
    return _this;
  }

  var _proto = Switch.prototype;

  _proto.renderLabel = function () {
    function renderLabel() {
      var labelElement;

      if (this.props.checked === false && this.props.label) {
        labelElement = React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        });
      } else if (this.props.checked === true && this.props.onLabel) {
        labelElement = React.createElement(Components.Translation, {
          defaultValue: this.props.onLabel,
          i18nKey: this.props.i18nKeyOnLabel
        });
      } else if (this.props.label) {
        labelElement = React.createElement(Components.Translation, {
          defaultValue: this.props.label,
          i18nKey: this.props.i18nKeyLabel
        });
      }

      if (labelElement) {
        return React.createElement("div", {
          className: "control-label"
        }, labelElement);
      }

      return null;
    }

    return renderLabel;
  }();
  /**
   * Render help text or validation message
   * @return {ReactNode|null} react node or null
   */


  _proto.renderHelpText = function () {
    function renderHelpText() {
      var helpMode = this.isHelpMode;
      var helpText = this.props.helpText;
      var i18nKey = this.props.i18nKeyHelpText; // Show if helpMode is true

      if (helpText && helpMode) {
        return React.createElement("span", {
          className: "help-block"
        }, React.createElement(Components.Translation, {
          defaultValue: helpText,
          i18nKey: i18nKey
        }));
      }

      return null;
    }

    return renderHelpText;
  }();

  _proto.render = function () {
    function render() {
      var id = this.props.id;
      var baseClassName = classnames({
        rui: true,
        "switch": true,
        disabled: this.props.disabled
      });
      var switchControlClassName = classnames({
        "switch-control": true,
        "active": this.props.checked
      });
      return React.createElement("span", null, React.createElement("label", {
        className: baseClassName,
        htmlFor: id
      }, React.createElement("input", {
        id: id,
        checked: this.props.checked,
        onChange: this.handleChange,
        ref: this.checkboxRef,
        type: "checkbox"
      }), React.createElement("div", {
        className: switchControlClassName
      }), this.renderLabel()), this.renderHelpText());
    }

    return render;
  }();

  (0, _createClass2.default)(Switch, [{
    key: "isHelpMode",
    get: function () {
      // TODO: add functionality to toggle helpMode on / off.
      // When on, helpText will always show.
      // When off, only validation messages will show.
      // For now, all helpText will show, meaning this doesn't affect how the app currently works.
      // This is here just to lay the foundation for when we add the toggle.
      return true;
    }
  }]);
  return Switch;
}(Component);

Switch.defaultProps = {
  checked: false
};
Switch.propTypes = {
  checked: PropTypes.bool,
  disabled: PropTypes.bool,
  helpText: PropTypes.string,
  i18nKeyHelpText: PropTypes.string,
  i18nKeyLabel: PropTypes.string,
  i18nKeyOnLabel: PropTypes.string,
  id: PropTypes.string,
  label: PropTypes.string,
  name: PropTypes.string,
  onChange: PropTypes.func,
  onLabel: PropTypes.string
};
registerComponent("Switch", Switch);
module.exportDefault(Switch);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"tabs":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tabs/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./tabList"), {
  "default": function (v) {
    exports.TabList = v;
  }
}, 0);
module.watch(require("./tabItem"), {
  "default": function (v) {
    exports.TabItem = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tabs/tabItem.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var TabItem =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TabItem, _Component);

  function TabItem() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      if (typeof _this.props.onClick === "function") {
        event.preventDefault();

        _this.props.onClick(event, _this.props.value, _this.props.index);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = TabItem.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          active = _props.active,
          className = _props.className,
          onClick = _props.onClick,
          value = _props.value,
          href = _props.href,
          index = _props.index,
          otherProps = (0, _objectWithoutProperties2.default)(_props, ["active", "className", "onClick", "value", "href", "index"]);
      var baseClassName = classnames({
        rui: true,
        tab: true,
        active: active
      }, className);
      return React.createElement("li", (0, _extends2.default)({}, otherProps, {
        className: baseClassName,
        role: "presentation"
      }), React.createElement("a", {
        onClick: this.handleClick,
        href: href,
        style: {
          width: "100%",
          height: "100%"
        }
      }, this.props.children));
    }

    return render;
  }();

  return TabItem;
}(Component);

TabItem.propTypes = {
  active: PropTypes.bool,
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  href: PropTypes.string,
  index: PropTypes.number,
  onClick: PropTypes.func,
  value: PropTypes.any
};
registerComponent("TabItem", TabItem);
module.exportDefault(TabItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tabList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tabs/tabList.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Children, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Children: function (v) {
    Children = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames/dedupe"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var TabList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TabList, _Component);

  function TabList() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = TabList.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          className = _props.className,
          selectedTab = _props.selectedTab,
          otherProps = (0, _objectWithoutProperties2.default)(_props, ["className", "selectedTab"]);
      var baseClassName = classnames({
        "rui": true,
        "tab-list": true,
        "nav": true,
        "nav-pills": true
      }, className);
      var elements = Children.map(this.props.children, function (child, index) {
        var newProps = {
          index: index,
          active: false
        };

        if (selectedTab === child.props.value || selectedTab === index) {
          newProps.active = true;
        }

        return React.cloneElement(child, newProps);
      });
      return React.createElement("ul", (0, _extends2.default)({}, otherProps, {
        className: baseClassName,
        role: "tablist"
      }), elements);
    }

    return render;
  }();

  return TabList;
}(Component);

TabList.propTypes = {
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  selectedTab: PropTypes.oneOfType([PropTypes.any])
};
registerComponent("TabList", TabList);
module.exportDefault(TabList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"tags":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tags/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./tagItem"), {
  "default": function (v) {
    exports.TagItem = v;
  }
}, 0);
module.watch(require("./tagList"), {
  "default": function (v) {
    exports.TagList = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tagItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tags/tagItem.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Autosuggest;
module.watch(require("react-autosuggest"), {
  "default": function (v) {
    Autosuggest = v;
  }
}, 3);
var Velocity;
module.watch(require("velocity-animate"), {
  "default": function (v) {
    Velocity = v;
  }
}, 4);
module.watch(require("velocity-animate/velocity.ui"));
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 5);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var Button, Handle;
module.watch(require("./.."), {
  Button: function (v) {
    Button = v;
  },
  Handle: function (v) {
    Handle = v;
  }
}, 7);
var SortableItem;
module.watch(require("../../containers"), {
  SortableItem: function (v) {
    SortableItem = v;
  }
}, 8);
var Router;
module.watch(require("../../../../router/lib"), {
  Router: function (v) {
    Router = v;
  }
}, 9);

var TagItem =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TagItem, _Component);

  function TagItem() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleTagFormSubmit = function (event) {
      event.preventDefault();
      _this._saved = true;

      _this.saveTag(event);
    }, _this.handleTagRemove = function () {
      if (_this.props.onTagRemove) {
        _this.props.onTagRemove(_this.props.tag, _this.props.parentTag);
      }
    }, _this.handleTagUpdate = function (event) {
      if (_this.props.onTagUpdate && event.keyCode === 13) {
        _this._saved = true;

        _this.props.onTagUpdate(_this.props.tag._id, event.target.value);
      }
    }, _this.handleTagKeyDown = function (event) {
      if (event.keyCode === 13) {
        _this._saved = true;

        _this.saveTag(event);
      }
    }, _this.handleTagMouseOut = function (event) {
      // event.preventDefault();
      if (_this.props.onTagMouseOut) {
        _this.props.onTagMouseOut(event, _this.props.tag);
      }
    }, _this.handleTagSelect = function () {
      if (_this.props.onTagSelect) {
        // Pass the tag back up to the parent component
        _this.props.onTagSelect(_this.props.tag);
      }
    }, _this.handleTagMouseOver = function (event) {
      if (_this.props.onTagMouseOver) {
        _this.props.onTagMouseOver(event, _this.props.tag);
      }
    }, _this.handleTagInputBlur = function (event) {
      if (_this.props.onTagInputBlur) {
        _this._saved = true;

        _this.props.onTagInputBlur(event, _this.props.tag);
      }
    }, _this.handleInputChange = function (event, _ref) {
      var newValue = _ref.newValue;

      if (_this.props.onTagUpdate) {
        var updatedTag = Object.assign({}, (0, _objectSpread2.default)({}, _this.props.tag), {
          name: newValue
        });

        _this.props.onTagUpdate(event, updatedTag);
      }
    }, _this.handleSuggestionsUpdateRequested = function (suggestion) {
      if (_this.props.onGetSuggestions) {
        _this.props.onGetSuggestions(suggestion);
      }
    }, _this.handleSuggestionsClearRequested = function () {
      if (_this.props.onClearSuggestions) {
        _this.props.onClearSuggestions();
      }
    }, _this.handleClick = function (event) {
      if (_this.props.onTagClick) {
        event.preventDefault();

        _this.props.onTagClick(event, _this.props.tag);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = TagItem.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (this._updated && this._saved && this.refs.autoSuggestInput) {
        var input = this.refs.autoSuggestInput.input;
        Velocity.RunSequence([{
          e: input,
          p: {
            backgroundColor: "#e2f2e2"
          },
          o: {
            duration: 200
          }
        }, {
          e: input,
          p: {
            backgroundColor: "#fff"
          },
          o: {
            duration: 100
          }
        }]);
        this._updated = false;
      }

      if (nextProps.tag.name !== this.props.tag.name) {
        this._updated = true;
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.getSuggestionValue = function () {
    function getSuggestionValue(suggestion) {
      return suggestion.label;
    }

    return getSuggestionValue;
  }();

  _proto.saveTag = function () {
    function saveTag(event) {
      if (this.props.onTagSave) {
        this.props.onTagSave(event, this.props.tag);
      }
    }

    return saveTag;
  }();
  /**
   * Handle tag form submit events and pass them up the component chain
   * @param  {Event} event Event object
   * @return {void} no return value
   */


  /**
   * Render a simple tag for display purposes only
   * @return {JSX} simple tag
   */
  _proto.renderTag = function () {
    function renderTag() {
      var baseClassName = classnames({
        "rui": true,
        "tag": true,
        "link": true,
        "full-width": this.props.fullWidth
      });
      var url = Router.pathFor("tag", {
        hash: {
          slug: this.props.tag.slug
        }
      });
      return React.createElement("a", {
        className: baseClassName,
        href: url,
        onFocus: this.handleTagMouseOver,
        onBlur: this.handleTagMouseOut,
        onMouseOut: this.handleTagMouseOut,
        onMouseOver: this.handleTagMouseOver,
        onClick: this.handleClick
      }, this.props.tag.name);
    }

    return renderTag;
  }();
  /**
   * Render an admin editable tag
   * @return {JSX} editable tag
   */


  _proto.renderEditableTag = function () {
    function renderEditableTag() {
      var baseClassName = classnames({
        "rui": true,
        "tag": true,
        "edit": true,
        "draggable": this.props.draggable,
        "full-width": this.props.fullWidth
      });
      return this.props.connectDropTarget(React.createElement("div", {
        className: "rui item edit draggable"
      }, React.createElement("div", {
        className: baseClassName,
        "data-id": this.props.tag._id
      }, React.createElement("form", {
        onSubmit: this.handleTagFormSubmit
      }, React.createElement(Handle, {
        connectDragSource: this.props.connectDragSource
      }), this.renderAutosuggestInput(), React.createElement(Button, {
        icon: "times-circle",
        onClick: this.handleTagRemove,
        status: "danger"
      }), this.props.isTagNav && React.createElement(Button, {
        icon: "chevron-down",
        onClick: this.handleTagSelect,
        status: "default"
      })))));
    }

    return renderEditableTag;
  }();
  /**
   * Render a tag creation form
   * @return {JSX} blank tag for creating new tags
   */


  _proto.renderBlankEditableTag = function () {
    function renderBlankEditableTag() {
      var baseClassName = classnames({
        "rui": true,
        "tag": true,
        "edit": true,
        "create": true,
        "full-width": this.props.fullWidth
      });
      return React.createElement("div", {
        className: "rui item edit draggable"
      }, React.createElement("div", {
        className: baseClassName
      }, React.createElement("form", {
        onSubmit: this.handleTagFormSubmit
      }, React.createElement(Button, {
        icon: "tag"
      }), this.renderAutosuggestInput(), React.createElement(Button, {
        icon: "plus"
      }))));
    }

    return renderBlankEditableTag;
  }();

  _proto.renderSuggestion = function () {
    function renderSuggestion(suggestion) {
      return React.createElement("span", null, suggestion.label);
    }

    return renderSuggestion;
  }();

  _proto.renderAutosuggestInput = function () {
    function renderAutosuggestInput() {
      return React.createElement(Autosuggest, {
        getSuggestionValue: this.getSuggestionValue,
        inputProps: {
          placeholder: this.inputPlaceholder,
          value: this.props.tag.name,
          onKeyDown: function (event) {
            // 9 == Tab key
            // 13 == Enter Key
            if (event.keyCode === 9 || event.keyCode === 13) {// this.handleUpdate
              // options.onUpdateCallback && options.onUpdateCallback();
            }
          },
          onBlur: this.handleTagInputBlur,
          onChange: this.handleInputChange
        },
        onSuggestionsClearRequested: this.handleSuggestionsClearRequested,
        onSuggestionsFetchRequested: this.handleSuggestionsUpdateRequested,
        ref: "autoSuggestInput",
        renderSuggestion: this.renderSuggestion,
        suggestions: this.props.suggestions
      });
    }

    return renderAutosuggestInput;
  }();
  /**
   * Render component
   * @return {JSX} tag component
   */


  _proto.render = function () {
    function render() {
      if (this.props.blank) {
        return this.renderBlankEditableTag();
      } else if (this.props.editable) {
        return this.renderEditableTag();
      }

      return this.renderTag();
    }

    return render;
  }();

  (0, _createClass2.default)(TagItem, [{
    key: "tag",
    get: function () {
      return this.props.tag || {
        name: ""
      };
    }
  }, {
    key: "inputPlaceholder",
    get: function () {
      return i18next.t(this.props.i18nKeyInputPlaceholder || "tags.tagName", {
        defaultValue: this.props.inputPlaceholder || "Tag Name"
      });
    }
  }]);
  return TagItem;
}(Component);

TagItem.propTypes = {
  blank: PropTypes.bool,
  connectDragSource: PropTypes.func,
  connectDropTarget: PropTypes.func,
  draggable: PropTypes.bool,
  editable: PropTypes.bool,
  fullWidth: PropTypes.bool,
  i18nKeyInputPlaceholder: PropTypes.string,
  index: PropTypes.number,
  inputPlaceholder: PropTypes.string,
  isTagNav: PropTypes.bool,
  onClearSuggestions: PropTypes.func,
  onGetSuggestions: PropTypes.func,
  onTagClick: PropTypes.func,
  onTagInputBlur: PropTypes.func,
  onTagMouseOut: PropTypes.func,
  onTagMouseOver: PropTypes.func,
  onTagRemove: PropTypes.func,
  onTagSave: PropTypes.func,
  onTagSelect: PropTypes.func,
  onTagUpdate: PropTypes.func,
  parentTag: PropTypes.object,
  suggestions: PropTypes.arrayOf(PropTypes.object),
  tag: PropTypes.object
};
registerComponent("TagItem", TagItem, SortableItem("tag"));
module.exportDefault(SortableItem("tag")(TagItem));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tagList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tags/tagList.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var Components;
module.watch(require("../../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 4);
var ReactionPropTypes;
module.watch(require("../../../../../../../lib/api"), {
  PropTypes: function (v) {
    ReactionPropTypes = v;
  }
}, 5);

var TagList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TagList, _Component);

  function TagList() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.displayName = "Tag List (TagList)", _this.handleNewTagSave = function (event, tag) {
      event.preventDefault();

      if (_this.props.onNewTagSave) {
        _this.props.onNewTagSave(tag, _this.props.parentTag);
      }
    }, _this.handleNewTagUpdate = function (event, tag) {
      if (_this.props.onNewTagUpdate) {
        _this.props.onNewTagUpdate(tag, _this.props.parentTag);
      }
    }, _this.handleTagSave = function (event, tag) {
      if (_this.props.onTagSave) {
        _this.props.onTagSave(tag, _this.props.parentTag);
      }
    }, _this.handleTagRemove = function (tag) {
      if (_this.props.onTagRemove) {
        _this.props.onTagRemove(tag, _this.props.parentTag);
      }
    }, _this.handleTagMouseOut = function (event, tag) {
      if (_this.props.onTagMouseOut) {
        _this.props.onTagMouseOut(event, tag, _this.props.parentTag);
      }
    }, _this.handleTagMouseOver = function (event, tag) {
      if (_this.props.onTagMouseOver) {
        _this.props.onTagMouseOver(event, tag, _this.props.parentTag);
      }
    }, _this.handleTagUpdate = function (event, tag) {
      if (_this.props.onTagUpdate) {
        _this.props.onTagUpdate(tag, _this.props.parentTag);
      }
    }, _this.handleTagClick = function (event, tag) {
      if (_this.props.onTagClick) {
        _this.props.onTagClick(event, tag);
      }
    }, _this.hasDropdownClassName = function (tag) {
      if (_this.props.hasDropdownClassName) {
        return _this.props.hasDropdownClassName(tag);
      }

      return "";
    }, _this.navbarSelectedClassName = function (tag) {
      if (_this.props.navbarSelectedClassName) {
        return _this.props.navbarSelectedClassName(tag);
      }

      return "";
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = TagList.prototype;

  _proto.renderTags = function () {
    function renderTags() {
      var _this2 = this;

      var classes = function () {
        var _classnames;

        var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        return classnames((_classnames = {
          "navbar-item": _this2.props.isTagNav
        }, _classnames[_this2.navbarSelectedClassName(tag)] = _this2.props.isTagNav, _classnames[_this2.hasDropdownClassName(tag)] = _this2.props.isTagNav, _classnames));
      };

      if (Array.isArray(this.props.tags)) {
        var arrayProps = _compact(this.props.tags);

        var tags = arrayProps.map(function (tag, index) {
          return React.createElement("div", {
            className: classes(tag),
            key: index
          }, React.createElement(Components.TagItem, (0, _extends2.default)({}, _this2.props, {
            "data-id": tag._id,
            index: index,
            key: index,
            tag: tag,
            onMove: _this2.props.onMoveTag,
            draggable: _this2.props.draggable,
            onTagInputBlur: _this2.handleTagSave,
            onTagMouseOut: _this2.handleTagMouseOut,
            onTagMouseOver: _this2.handleTagMouseOver,
            onTagRemove: _this2.handleTagRemove,
            onTagSave: _this2.handleTagSave,
            onTagUpdate: _this2.handleTagUpdate,
            onTagClick: _this2.handleTagClick
          })), _this2.props.children);
        }); // Render an blank tag for creating new tags

        if (this.props.editable && this.props.enableNewTagForm) {
          tags.push(React.createElement("div", {
            className: classes(),
            key: "newTagForm"
          }, React.createElement(Components.TagItem, (0, _extends2.default)({}, this.props, {
            blank: true,
            key: "newTagForm",
            tag: this.props.newTag,
            inputPlaceholder: "Add Tag",
            i18nKeyInputPlaceholder: "tags.addTag",
            onTagInputBlur: this.handleNewTagSave,
            onTagSave: this.handleNewTagSave,
            onTagUpdate: this.handleNewTagUpdate
          }))));
        }

        return tags;
      }

      return null;
    }

    return renderTags;
  }();

  _proto.render = function () {
    function render() {
      if (this.props.isTagNav) {
        return React.createElement("div", {
          className: "tag-group"
        }, this.renderTags());
      }

      var classes = classnames({
        rui: true,
        tags: true,
        edit: this.props.editable
      });
      return React.createElement("div", {
        className: classes,
        "data-id": this.props.parentTag._id,
        ref: "tags"
      }, this.renderTags());
    }

    return render;
  }();

  return TagList;
}(Component);

TagList.defaultProps = {
  parentTag: {}
};
TagList.propTypes = {
  children: PropTypes.node,
  draggable: PropTypes.bool,
  editable: PropTypes.bool,
  enableNewTagForm: PropTypes.bool,
  hasDropdownClassName: PropTypes.func,
  isTagNav: PropTypes.bool,
  navbarSelectedClassName: PropTypes.func,
  newTag: PropTypes.object,
  onClearSuggestions: PropTypes.func,
  onGetSuggestions: PropTypes.func,
  onMoveTag: PropTypes.func,
  onNewTagSave: PropTypes.func,
  onNewTagUpdate: PropTypes.func,
  onTagClick: PropTypes.func,
  onTagMouseOut: PropTypes.func,
  onTagMouseOver: PropTypes.func,
  onTagRemove: PropTypes.func,
  onTagSave: PropTypes.func,
  onTagSort: PropTypes.func,
  onTagUpdate: PropTypes.func,
  parentTag: ReactionPropTypes.Tag,
  showBookmark: PropTypes.bool,
  suggestions: PropTypes.arrayOf(PropTypes.object),
  tags: ReactionPropTypes.arrayOfTags
};
module.exportDefault(TagList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"toolbar":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/toolbar/index.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./toolbar"), {
  "default": function (v) {
    exports.Toolbar = v;
  }
}, 0);
module.watch(require("./toolbarGroup"), {
  "default": function (v) {
    exports.ToolbarGroup = v;
  }
}, 1);
module.watch(require("./toolbarText"), {
  "default": function (v) {
    exports.ToolbarText = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toolbar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/toolbar/toolbar.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var Toolbar = function (_ref) {
  var children = _ref.children;
  return React.createElement("nav", {
    className: "rui toolbar navbar-inverse"
  }, children);
};

Toolbar.propTypes = {
  attachment: PropTypes.string,
  children: PropTypes.node
};
Toolbar.defaultProps = {
  attachment: "top"
};
registerComponent("Toolbar", Toolbar);
module.exportDefault(Toolbar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toolbarGroup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/toolbar/toolbarGroup.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

/**
 * Toobar Text
 * @param {Object} props component props
 * @return {node} react element node
 */
var ToolbarGroup = function (props) {
  var baseClassName = classnames({
    "rui": true,
    "toolbar-group": true,
    "left": props.firstChild,
    "right": props.lastChild,
    "visible-mobile": props.visibleOnMobile
  }, props.className);
  return React.createElement("div", {
    className: baseClassName
  }, props.children);
};

ToolbarGroup.propTypes = {
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),
  firstChild: PropTypes.bool,
  lastChild: PropTypes.bool,
  visibleOnMobile: PropTypes.bool
};
registerComponent("ToolbarGroup", ToolbarGroup);
module.exportDefault(ToolbarGroup);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toolbarText.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/toolbar/toolbarText.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

/**
 * Toobar Text
 * @param {Object} props component props
 * @return {node} react element node
 */
var ToolbarText = function (props) {
  var baseClassName = classnames({
    "navbar-text": true
  }, props.className);
  return React.createElement("div", {
    className: baseClassName
  }, props.children);
};

ToolbarText.propTypes = {
  children: PropTypes.node,
  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string])
};
registerComponent("ToolbarText", ToolbarText);
module.exportDefault(ToolbarText);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"tooltip":{"tooltip.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/tooltip/tooltip.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var TetherComponent;
module.watch(require("react-tether"), {
  "default": function (v) {
    TetherComponent = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);

var Tooltip =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Tooltip, _Component);

  function Tooltip() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Tooltip.prototype;

  _proto.renderTooltip = function () {
    function renderTooltip() {
      if (this.props.tooltipContent) {
        return React.createElement("div", {
          className: "tooltip-content"
        }, this.props.tooltipContent);
      }

      return null;
    }

    return renderTooltip;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(TetherComponent, {
        attachment: this.attachment,
        classPrefix: "tooltip",
        className: classnames({
          "tooltip-element": true,
          "tooltip-open": true,
          "tooltip-theme-arrows": true
        }),
        constraints: [{
          to: "window",
          attachment: "together"
        }]
      }, React.createElement("div", null, this.props.children), this.renderTooltip());
    }

    return render;
  }();

  (0, _createClass2.default)(Tooltip, [{
    key: "attachment",

    /**
     * attachment
     * @description Return the attachment for the tooltip or the default
     * @return {String} attachment
     */
    get: function () {
      return this.props.attachment || Tooltip.defaultProps.attachment;
    }
  }]);
  return Tooltip;
}(Component);

Tooltip.propTypes = {
  attachment: PropTypes.string,
  children: PropTypes.node,
  tooltipContent: PropTypes.node
};
Tooltip.defaultProps = {
  attachment: "bottom center"
};
registerComponent("Tooltip", Tooltip);
module.exportDefault(Tooltip);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"translation":{"currency.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/translation/currency.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var formatPriceString;
module.watch(require("../../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  }
}, 3);

var Currency = function (_ref) {
  var amount = _ref.amount,
      priceRange = _ref.priceRange,
      editable = _ref.editable;
  return React.createElement("span", {
    itemProp: "price"
  }, formatPriceString(amount || priceRange, editable));
};

Currency.propTypes = {
  amount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  editable: PropTypes.bool,
  priceRange: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
};
registerComponent("Currency", Currency);
module.exportDefault(Currency);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/translation/index.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./translation"), {
  "default": function (v) {
    exports.Translation = v;
  }
}, 0);
module.watch(require("./currency"), {
  "default": function (v) {
    exports.Currency = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translation.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/translation/translation.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _camelCase;

module.watch(require("lodash/camelCase"), {
  "default": function (v) {
    _camelCase = v;
  }
}, 0);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 4);

var Translation = function (_ref) {
  var i18nKey = _ref.i18nKey,
      defaultValue = _ref.defaultValue,
      rest = (0, _objectWithoutProperties2.default)(_ref, ["i18nKey", "defaultValue"]);

  var key = i18nKey || _camelCase(defaultValue);

  var translation = i18next.t(key, {
    defaultValue: defaultValue
  }); // i18next returns 'undefined' if the default value happens to be the key for a set of definitions
  // ```
  // "components": {
  //    "componentDef": "Translated Component Def"
  // }
  // ```
  // In this case, a request for i18next.t("components", "defaultValue") will return undefined
  // but i18next.t("components.componentDef", "defaultValue") will return correctly
  //
  // This checks to see if translation is undefined and returns the default value instead

  if (typeof translation === "undefined") {
    return React.createElement("span", rest, defaultValue);
  }

  return React.createElement("span", rest, translation);
};

Translation.propTypes = {
  defaultValue: PropTypes.string,
  i18nKey: PropTypes.string
};
registerComponent("Translation", Translation);
module.exportDefault(Translation);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/components/index.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./alerts"), {
  Alerts: function (v) {
    exports.Alerts = v;
  },
  Alert: function (v) {
    exports.Alert = v;
  }
}, 0);
module.watch(require("./app"), {
  App: function (v) {
    exports.App = v;
  }
}, 1);
module.watch(require("./icon/icon"), {
  "default": function (v) {
    exports.Icon = v;
  }
}, 2);
module.watch(require("./progress/circularProgress"), {
  "default": function (v) {
    exports.CircularProgress = v;
  }
}, 3);
module.watch(require("./divider/divider"), {
  "default": function (v) {
    exports.Divider = v;
  }
}, 4);
module.watch(require("./divider/verticalDivider"), {
  "default": function (v) {
    exports.VerticalDivider = v;
  }
}, 5);
module.watch(require("./items/items"), {
  "default": function (v) {
    exports.Items = v;
  }
}, 6);
module.watch(require("./items/item"), {
  "default": function (v) {
    exports.Item = v;
  }
}, 7);
module.watch(require("./textfield/textfield"), {
  "default": function (v) {
    exports.TextField = v;
  }
}, 8);
module.watch(require("./numericInput/numericInput"), {
  "default": function (v) {
    exports.NumericInput = v;
  }
}, 9);
module.watch(require("./numericInput/numberTypeInput"), {
  "default": function (v) {
    exports.NumberTypeInput = v;
  }
}, 10);
module.watch(require("./button"), {
  Button: function (v) {
    exports.Button = v;
  },
  IconButton: function (v) {
    exports.IconButton = v;
  },
  EditButton: function (v) {
    exports.EditButton = v;
  },
  VisibilityButton: function (v) {
    exports.VisibilityButton = v;
  },
  Handle: function (v) {
    exports.Handle = v;
  },
  ButtonSelect: function (v) {
    exports.ButtonSelect = v;
  }
}, 11);
module.watch(require("./badge"), {
  Badge: function (v) {
    exports.Badge = v;
  }
}, 12);
module.watch(require("./translation"), {
  Translation: function (v) {
    exports.Translation = v;
  },
  Currency: function (v) {
    exports.Currency = v;
  }
}, 13);
module.watch(require("./tooltip/tooltip"), {
  "default": function (v) {
    exports.Tooltip = v;
  }
}, 14);
module.watch(require("./metadata"), {
  Metadata: function (v) {
    exports.Metadata = v;
  },
  Metafield: function (v) {
    exports.Metafield = v;
  }
}, 15);
module.watch(require("./tags"), {
  TagList: function (v) {
    exports.TagList = v;
  },
  TagItem: function (v) {
    exports.TagItem = v;
  }
}, 16);
module.watch(require("./cards"), {
  "*": module.makeNsSetter()
}, 17);
module.watch(require("./media"), {
  MediaGallery: function (v) {
    exports.MediaGallery = v;
  },
  MediaItem: function (v) {
    exports.MediaItem = v;
  },
  MediaUploader: function (v) {
    exports.MediaUploader = v;
  }
}, 18);
module.watch(require("./button/flatButton"), {
  "default": function (v) {
    exports.FlatButton = v;
  }
}, 19);
module.watch(require("./table"), {
  SortableTable: function (v) {
    exports.SortableTable = v;
  },
  SortableTableLegacy: function (v) {
    exports.SortableTableLegacy = v;
  }
}, 20);
module.watch(require("./checkbox"), {
  Checkbox: function (v) {
    exports.Checkbox = v;
  },
  RolloverCheckbox: function (v) {
    exports.RolloverCheckbox = v;
  }
}, 21);
module.watch(require("./loading/loading"), {
  "default": function (v) {
    exports.Loading = v;
  }
}, 22);
module.watch(require("./forms"), {
  "*": module.makeNsSetter()
}, 23);
module.watch(require("./toolbar"), {
  "*": module.makeNsSetter()
}, 24);
module.watch(require("./popover"), {
  "*": module.makeNsSetter()
}, 25);
module.watch(require("./menu"), {
  "*": module.makeNsSetter()
}, 26);
module.watch(require("./buttonGroup"), {
  "*": module.makeNsSetter()
}, 27);
module.watch(require("./switch"), {
  Switch: function (v) {
    exports.Switch = v;
  }
}, 28);
module.watch(require("./list"), {
  List: function (v) {
    exports.List = v;
  },
  ListItem: function (v) {
    exports.ListItem = v;
  }
}, 29);
module.watch(require("./slider/slider"), {
  "default": function (v) {
    exports.Slider = v;
  }
}, 30);
module.watch(require("./multiselect/multiselect"), {
  "default": function (v) {
    exports.MultiSelect = v;
  }
}, 31);
module.watch(require("./modal"), {
  Overlay: function (v) {
    exports.Overlay = v;
  }
}, 32);
module.watch(require("./tabs"), {
  "*": module.makeNsSetter()
}, 33);
module.watch(require("./select/select.react"), {
  "default": function (v) {
    exports.Select = v;
  }
}, 34);
module.watch(require("./clickToCopy/clickToCopy"), {
  "default": function (v) {
    exports.ClickToCopy = v;
  }
}, 35);
module.watch(require("./avatar"), {
  ReactionAvatar: function (v) {
    exports.ReactionAvatar = v;
  }
}, 36);
module.watch(require("./notFound"), {
  "*": module.makeNsSetter()
}, 37);
module.watch(require("./calendarPicker/calendarPicker"), {
  CalendarPicker: function (v) {
    exports.CalendarPicker = v;
  }
}, 38);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"alerts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/alerts.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Alerts;
module.watch(require("../components"), {
  Alerts: function (v) {
    Alerts = v;
  }
}, 3);
var ReactionAlerts;
module.watch(require("../../../layout/client/templates/layout/alerts/inlineAlerts"), {
  "default": function (v) {
    ReactionAlerts = v;
  }
}, 4);
var handlers = {
  handleAlertRemove: function (alert) {
    ReactionAlerts.collection_.remove(alert._id);
  },
  handleAlertSeen: function (alert) {
    ReactionAlerts.collection_.update(alert._id, {
      $set: {
        seen: true
      }
    });
  }
};

function composer(props, onData) {
  var alerts = ReactionAlerts.collection_.find({
    "options.placement": props.placement || "",
    "options.id": props.id || ""
  }).fetch();
  onData(null, {
    alerts: alerts
  });
}

registerComponent("Alerts", Alerts, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(Alerts));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"appContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/appContainer.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 1);
var Reaction, Router;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Router: function (v) {
    Router = v;
  }
}, 2);
var App;
module.watch(require("../components"), {
  App: function (v) {
    App = v;
  }
}, 3);

function composer(props, onData) {
  onData(null, {
    isActionViewOpen: Reaction.isActionViewOpen(),
    hasDashboardAccess: Reaction.hasDashboardAccessForAnyShop(),
    currentRoute: Router.current()
  });
}

registerComponent("App", App, [composeWithTracker(composer)]);
module.exportDefault(_compose(composeWithTracker(composer))(App));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"avatar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/avatar.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Accounts;
module.watch(require("../../../../../../lib/collections"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var ReactionAvatar;
module.watch(require("../components/avatar"), {
  ReactionAvatar: function (v) {
    ReactionAvatar = v;
  }
}, 4);

var composer = function (props, onData) {
  var targetUserId = Reaction.Router.getQueryParam("userId");
  var account = Accounts.findOne(targetUserId);
  var email; // If an email is provided via props, use that email

  if (props.email) {
    email = props.email;
  } // If there is no email provided, no query param provide, and the avatar is for the current user, find their account


  if (!email && !account && props.currentUser) {
    account = Accounts.findOne(Meteor.userId());
  } // If we now have an account, and that account has an email address, return it


  if (account && Array.isArray(account.emails)) {
    var defaultEmail = account.emails.find(function (emailObj) {
      return emailObj.provides === "default";
    });
    email = defaultEmail && defaultEmail.address || account.emails[0].address;
  }

  onData(null, {
    email: email
  });
};

registerComponent("ReactionAvatar", ReactionAvatar, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(ReactionAvatar));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"edit.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/edit.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Children, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Children: function (v) {
    Children = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);

var EditContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(EditContainer, _Component);

  function EditContainer() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleEditButtonClick = function (event) {
      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
          props = _assertThisInitialize.props;

      if (_this.props.onEditButtonClick) {
        var returnValue = _this.props.onEditButtonClick(event, props);

        if (returnValue === false) {
          return returnValue;
        }
      }

      Reaction.showActionView({
        label: props.label,
        i18nKeyLabel: props.i18nKeyLabel,
        template: props.editView,
        data: {
          data: props.data,
          viewProps: {
            field: props.field
          }
        }
      });
      Reaction.state.set("edit/focus", props.field);
      return true;
    }, _this.handleVisibilityButtonClick = function (event) {
      var _assertThisInitialize2 = (0, _assertThisInitialized2.default)(_this),
          props = _assertThisInitialize2.props;

      if (_this.props.onVisibilityButtonClick) {
        var returnValue = _this.props.onVisibilityButtonClick(event, props);

        if (returnValue === false) {
          return returnValue;
        }
      }

      return true;
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = EditContainer.prototype;

  _proto.renderVisibilityButton = function () {
    function renderVisibilityButton() {
      if (this.props.showsVisibilityButton) {
        return React.createElement("span", {
          className: "edit-container-item edit-container-item"
        }, React.createElement(Components.VisibilityButton, {
          onClick: this.handleVisibilityButtonClick,
          toggleOn: this.props.data.isVisible
        }));
      }

      return null;
    }

    return renderVisibilityButton;
  }();

  _proto.renderEditButton = function () {
    function renderEditButton() {
      var status;
      var tooltip;
      var hasChange = false;

      if (this.props.data.__draft && this.props.field) {
        var draft = this.props.data.__draft;

        if (Array.isArray(draft.diff)) {
          for (var _iterator = draft.diff, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var _diff = _ref;
            var hasChangedField = false;

            if (Array.isArray(this.props.field)) {
              if (this.props.field.indexOf(_diff.path[0]) >= 0) {
                hasChangedField = true;
              }
            } else if (typeof this.props.field === "string" && this.props.field === _diff.path[0]) {
              hasChangedField = true;
            }

            if (hasChangedField) {
              status = "warning";
              tooltip = React.createElement("span", null, React.createElement(Components.Translation, {
                defaultValue: "Unpublished Changes",
                i18nKey: "revisions.unpublishedChanges"
              }));
              hasChange = true;
            }
          }
        }
      } else if (this.props.data.__draft) {
        status = "warning";
        tooltip = React.createElement("span", null, React.createElement(Components.Translation, {
          defaultValue: "Unpublished Changes",
          i18nKey: "revisions.unpublishedChanges"
        }));
      }

      if (this.props.autoHideEditButton && hasChange === false) {
        return null;
      }

      return React.createElement("span", {
        className: "edit-container-item edit-container-item"
      }, React.createElement(Components.EditButton, {
        onClick: this.handleEditButtonClick,
        status: status,
        tooltip: tooltip
      }));
    }

    return renderEditButton;
  }();

  _proto.render = function () {
    function render() {
      // Display edit button if the permissions allow it.
      if (this.props.hasPermission) {
        // If children were passed as props to this component,
        // copy the children and inject the edit buttons
        if (this.props.children) {
          return React.cloneElement(this.props.children, {
            visibilityButton: this.renderVisibilityButton(),
            editButton: this.renderEditButton()
          });
        } // Otherwise, render a container for the edit buttons


        return React.createElement("span", {
          className: "rui edit-container"
        }, this.renderVisibilityButton(), this.renderEditButton());
      } // If permissions don't allow the edit buttons to be shown and there are
      // no child elements, then cancel rendering.


      if (!this.props.children) {
        return null;
      } // If permissions don't allow the edit buttons to be shown and there are
      // child elements, render them normally


      return Children.only(this.props.children);
    }

    return render;
  }();

  return EditContainer;
}(Component);

EditContainer.propTypes = {
  autoHideEditButton: PropTypes.bool,
  children: PropTypes.node,
  data: PropTypes.object,
  field: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  hasPermission: PropTypes.bool,
  onEditButtonClick: PropTypes.func,
  onVisibilityButtonClick: PropTypes.func,
  showsVisibilityButton: PropTypes.bool
};

function composer(props, onData) {
  var hasPermission;
  var viewAs = Reaction.getUserPreferences("reaction-dashboard", "viewAs", "administrator");

  if (props.disabled === true || viewAs === "customer") {
    hasPermission = false;
  } else {
    hasPermission = Reaction.hasPermission(props.permissions);
  }

  onData(null, {
    hasPermission: hasPermission
  });
}

registerComponent("EditContainer", EditContainer, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(EditContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/index.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./edit"), {
  "default": function (v) {
    exports.EditContainer = v;
  }
}, 0);
module.watch(require("./alerts"), {
  "default": function (v) {
    exports.AlertContainer = v;
  }
}, 1);
module.watch(require("./appContainer"), {
  "default": function (v) {
    exports.AppContainer = v;
  }
}, 2);
module.watch(require("./avatar"), {
  "default": function (v) {
    exports.ReactionAvatarContainer = v;
  }
}, 3);
module.watch(require("./inventoryBadge"), {
  "default": function (v) {
    exports.InventoryBadgeContainer = v;
  }
}, 4);
module.watch(require("./sortableItem"), {
  "default": function (v) {
    exports.SortableItem = v;
  }
}, 5);
module.watch(require("./mediaGallery"), {
  "default": function (v) {
    exports.MediaGalleryContainer = v;
  }
}, 6);
module.watch(require("./tagListContainer"), {
  "default": function (v) {
    exports.TagListContainer = v;
  }
}, 7);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inventoryBadge.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/inventoryBadge.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 0);
var InventoryBadge;
module.watch(require("../components/badge"), {
  InventoryBadge: function (v) {
    InventoryBadge = v;
  }
}, 1);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 2);

var composer = function (props, onData) {
  var variant = props.variant,
      soldOut = props.soldOut;
  var inventoryManagement = variant.inventoryManagement,
      inventoryPolicy = variant.inventoryPolicy,
      lowInventoryWarningThreshold = variant.lowInventoryWarningThreshold;
  var inventoryQuantity = ReactionProduct.getVariantQuantity(variant);
  var label = null;
  var i18nKeyLabel = null;
  var status = null; // TODO: update this to use Catalog API.

  if (inventoryManagement && !inventoryPolicy && inventoryQuantity === 0) {
    status = "info";
    label = "Backorder";
    i18nKeyLabel = "productDetail.backOrder";
  } else if (soldOut) {
    status = "danger";
    label = "Sold Out!";
    i18nKeyLabel = "productDetail.soldOut";
  } else if (inventoryManagement) {
    if (lowInventoryWarningThreshold >= inventoryQuantity) {
      status = "warning";
      label = "Limited Supply";
      i18nKeyLabel = "productDetail.limitedSupply";
    }
  }

  onData(null, (0, _objectSpread2.default)({}, props, {
    label: label,
    i18nKeyLabel: i18nKeyLabel,
    status: status
  }));
};

registerComponent("InventoryBadge", InventoryBadge, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(InventoryBadge));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"mediaGallery.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/mediaGallery.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _sortBy;

module.watch(require("lodash/sortBy"), {
  "default": function (v) {
    _sortBy = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 3);
var Measure;
module.watch(require("react-measure"), {
  "default": function (v) {
    Measure = v;
  }
}, 4);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 5);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 6);
var FileRecord;
module.watch(require("@reactioncommerce/file-collections"), {
  FileRecord: function (v) {
    FileRecord = v;
  }
}, 7);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 8);
var MediaGallery;
module.watch(require("../components/media/mediaGallery"), {
  "default": function (v) {
    MediaGallery = v;
  }
}, 9);
var Logger, Reaction;
module.watch(require("../../../../../../client/api"), {
  Logger: function (v) {
    Logger = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 10);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 11);
var Revisions;
module.watch(require("../../../../../../lib/collections"), {
  Revisions: function (v) {
    Revisions = v;
  }
}, 12);
var isRevisionControlEnabled;
module.watch(require("../../../revisions/lib/api"), {
  isRevisionControlEnabled: function (v) {
    isRevisionControlEnabled = v;
  }
}, 13);
var Media;
module.watch(require("../../../files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 14);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(MediaGalleryContainer, _Component);

    function MediaGalleryContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.handleRemoveMedia = function (media) {
        var imageUrl = media.url({
          store: "medium"
        });
        var mediaId = media._id;
        Alerts.alert({
          title: "Remove Media?",
          type: "warning",
          showCancelButton: true,
          imageUrl: imageUrl,
          imageHeight: 150
        }, function (isConfirm) {
          if (isConfirm) {
            Meteor.call("media/remove", mediaId, function (error) {
              if (error) {
                Alerts.toast(error.reason, "warning", {
                  autoHide: 10000
                });
              }
            });
          } // show media as removed (since it will not disappear until changes are published

        });
      };

      _this.handleMouseEnterMedia = function (event, media) {
        var editable = _this.props.editable; // It is confusing for an admin to know what the actual featured media is if it
        // changes on hover of the other media.

        if (!editable) {
          _this.setState({
            featuredMedia: media
          });
        }
      };

      _this.handleMouseLeaveMedia = function () {
        var editable = _this.props.editable; // It is confusing for an admin to know what the actual featured media is if it
        // changes on hover of the other media.

        if (!editable) {
          _this.setState({
            featuredMedia: null
          });
        }
      };

      _this.handleMoveMedia = function (dragIndex, hoverIndex) {
        var mediaList = _this.media;
        var media = mediaList[dragIndex]; // Apply new sort order to variant list

        var newMediaOrder = update(mediaList, {
          $splice: [[dragIndex, 1], [hoverIndex, 0, media]]
        }); // Set local state so the component does't have to wait for a round-trip
        // to the server to get the updated list of variants

        _this.setState({
          media: newMediaOrder
        }); // Save the updated positions


        var sortedMediaIDs = newMediaOrder.map(function (_ref) {
          var _id = _ref._id;
          return _id;
        });
        Meteor.call("media/updatePriorities", sortedMediaIDs, function (error) {
          if (error) {
            // Go back to using media prop instead of media state so that it doesn't appear successful
            _this.setState({
              media: null
            });

            Alerts.toast(error.reason, "warning", {
              autoHide: 10000
            });
          }
        });
      };

      _this.handleUpload = function (files) {
        var productId = ReactionProduct.selectedProductId();
        var variant = ReactionProduct.selectedVariant();

        if ((0, _typeof2.default)(variant) !== "object") {
          return Alerts.add("Select a variant", "danger", {
            autoHide: true
          });
        }

        var variantId = variant._id;
        var shopId = ReactionProduct.selectedProduct().shopId || Reaction.getShopId();
        var userId = Meteor.userId();
        var count = Media.findLocal({
          "metadata.variantId": variantId
        }).length;

        var _loop = function (file) {
          // Convert it to a FileRecord
          var fileRecord = FileRecord.fromFile(file); // Set metadata

          fileRecord.metadata = {
            ownerId: userId,
            productId: productId,
            variantId: variantId,
            shopId: shopId,
            priority: count,
            toGrid: 1 // we need number

          };
          count += 1; // Listen for upload progress events

          fileRecord.on("uploadProgress", function (uploadProgress) {
            _this.setState({
              uploadProgress: uploadProgress
            });
          }); // Do the upload. chunkSize is optional and defaults to 5MB

          fileRecord.upload({}) // We insert only AFTER the server has confirmed that all chunks were uploaded
          .then(function () {
            Meteor.call("media/insert", fileRecord.document, function (error) {
              if (error) Alerts.toast(error.reason, "error");

              _this.setState({
                uploadProgress: null
              });
            });
          }).catch(function (error) {
            _this.setState({
              uploadProgress: null
            });

            Logger.error(error);
          });
        };

        for (var _iterator = files, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref2 = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref2 = _i.value;
          }

          var file = _ref2;

          _loop(file);
        }
      };

      _this.state = {
        dimensions: {
          width: -1,
          height: -1
        },
        featuredMedia: null,
        media: null,
        uploadProgress: null
      };
      return _this;
    }

    var _proto = MediaGalleryContainer.prototype;

    _proto.componentWillReceiveProps = function () {
      function componentWillReceiveProps(nextProps) {
        // We need to do this logic only if we've temporarily set media in state for latency compensation
        if (!this.state.media) return;
        var previousMediaIds = (this.props.media || []).map(function (_ref3) {
          var _id = _ref3._id;
          return _id;
        });
        var nextMediaIds = (nextProps.media || []).map(function (_ref4) {
          var _id = _ref4._id;
          return _id;
        }); // If added, moved, or reordered media items since last render, then we can assume
        // we got updated data in subscription, clear state, and go back to using the prop

        if (JSON.stringify(previousMediaIds) !== JSON.stringify(nextMediaIds)) {
          this.setState({
            media: null
          });
        }
      }

      return componentWillReceiveProps;
    }();

    _proto.render = function () {
      function render() {
        var _this2 = this;

        var _state$dimensions = this.state.dimensions,
            width = _state$dimensions.width,
            height = _state$dimensions.height;
        return React.createElement(Measure, {
          bounds: true,
          onResize: function (contentRect) {
            _this2.setState({
              dimensions: contentRect.bounds
            });
          }
        }, function (_ref5) {
          var measureRef = _ref5.measureRef;
          return React.createElement("div", {
            ref: measureRef
          }, React.createElement(Comp, (0, _extends2.default)({
            featuredMedia: _this2.state.featuredMedia,
            onDrop: _this2.handleUpload,
            onMouseEnterMedia: _this2.handleMouseEnterMedia,
            onMouseLeaveMedia: _this2.handleMouseLeaveMedia,
            onMoveMedia: _this2.handleMoveMedia,
            onRemoveMedia: _this2.handleRemoveMedia
          }, _this2.props, {
            media: _this2.media,
            mediaGalleryHeight: height,
            mediaGalleryWidth: width,
            uploadProgress: _this2.state.uploadProgress
          })));
        });
      }

      return render;
    }();

    (0, _createClass2.default)(MediaGalleryContainer, [{
      key: "media",
      get: function () {
        return this.state.media || this.props.media;
      }
    }]);
    return MediaGalleryContainer;
  }(Component), _class.propTypes = {
    editable: PropTypes.bool,
    id: PropTypes.string,
    media: PropTypes.arrayOf(PropTypes.object),
    placement: PropTypes.string // Load first image as featuredImage

  }, _temp;
};

function fetchMediaRevisions() {
  var productId = ReactionProduct.selectedProductId();
  var mediaRevisions = Revisions.find({
    "parentDocument": productId,
    "documentType": "image",
    "workflow.status": {
      $nin: ["revision/published"]
    }
  }).fetch();
  return mediaRevisions;
} // resort the media in


function sortMedia(media) {
  var sortedMedia = _sortBy(media, function (m) {
    var _ref6 = m && m.metadata || {},
        priority = _ref6.priority;

    if (!priority && priority !== 0) {
      return 1000;
    }

    return priority;
  });

  return sortedMedia;
} // Search through revisions and if we find one for the image, stick it on the object


function appendRevisionsToMedia(props, media) {
  if (!isRevisionControlEnabled() || !Reaction.hasPermission(props.permission || ["createProduct"])) {
    return media;
  }

  var mediaRevisions = fetchMediaRevisions();
  var newMedia = [];

  for (var _iterator2 = media, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
    var _ref7;

    if (_isArray2) {
      if (_i2 >= _iterator2.length) break;
      _ref7 = _iterator2[_i2++];
    } else {
      _i2 = _iterator2.next();
      if (_i2.done) break;
      _ref7 = _i2.value;
    }

    var _image = _ref7;
    _image.revision = undefined;

    for (var _iterator3 = mediaRevisions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref8;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref8 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref8 = _i3.value;
      }

      var _revision = _ref8;

      if (_revision.documentId === _image._id) {
        _image.revision = _revision;
        _image.metadata.priority = _revision.documentData.priority;
      }
    }

    newMedia.push(_image);
  }

  return sortMedia(newMedia);
}

function composer(props, onData) {
  var media;
  var editable;
  var viewAs = Reaction.getUserPreferences("reaction-dashboard", "viewAs", "administrator");

  if (props.media) {
    media = appendRevisionsToMedia(props, props.media);
  }

  if (viewAs === "customer") {
    editable = false;
  } else {
    editable = Reaction.hasPermission(props.permission || ["createProduct"]);
  }

  onData(null, {
    editable: editable,
    media: media
  });
}

registerComponent("MediaGallery", MediaGallery, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(MediaGallery));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sortableItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/sortableItem.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  "default": function () {
    return ComposeSortableItem;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var DragSource, DropTarget;
module.watch(require("react-dnd"), {
  DragSource: function (v) {
    DragSource = v;
  },
  DropTarget: function (v) {
    DropTarget = v;
  }
}, 2);

/**
 * Specifies the props to inject into your component.
 * @param {DragSourceConnector} connect An onject containing functions to assign roles to a component's DOM nodes
 * @param {DragSourceMonitor} monitor An object containing functions that return information about drag state
 * @return {Object} Props for drag source
 */
function collectDropSource(connect, monitor) {
  return {
    connectDragSource: connect.dragSource(),
    isDragging: monitor.isDragging()
  };
}

function collectDropTarget(connect) {
  return {
    connectDropTarget: connect.dropTarget()
  };
}

var cardSource = {
  beginDrag: function (props) {
    var index = props.index;
    return {
      index: index
    };
  }
};
var cardTarget = {
  hover: function (props, monitor) {
    var dragIndex = monitor.getItem().index;
    var hoverIndex = props.index; // Don't replace items with themselves

    if (dragIndex === hoverIndex) {
      return;
    } // Time to actually perform the action


    props.onMove(dragIndex, hoverIndex); // Note: we're mutating the monitor item here!
    // Generally it's better to avoid mutations,
    // but it's good here for the sake of performance
    // to avoid expensive index searches.

    monitor.getItem().index = hoverIndex;
  },
  drop: function (props) {
    if (typeof props.onDrop === "function") props.onDrop();
  }
};

function ComposeSortableItem(itemType) {
  return function (SortableItemComponent) {
    var SortableItem = function (props) {
      return React.createElement(SortableItemComponent, props);
    };

    SortableItem.contextTypes = {
      dragDropManager: PropTypes.object.isRequired
    };
    SortableItem.propTypes = {
      // Injected by React DnD:
      connectDragSource: PropTypes.func.isRequired,
      connectDropTarget: PropTypes.func.isRequired,
      isDragging: PropTypes.bool.isRequired
    };
    var decoratedComponent = SortableItem;
    decoratedComponent = DragSource(itemType, cardSource, collectDropSource)(decoratedComponent);
    decoratedComponent = DropTarget(itemType, cardTarget, collectDropTarget)(decoratedComponent);
    return decoratedComponent;
  };
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tagListContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/containers/tagListContainer.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 1);

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 2);

var _debounce;

module.watch(require("lodash/debounce"), {
  "default": function (v) {
    _debounce = v;
  }
}, 3);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 4);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 5);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 6);
var registerComponent, composeWithTracker, Components;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  Components: function (v) {
    Components = v;
  }
}, 7);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 8);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 9);
var TagList;
module.watch(require("../components/tags/tagList"), {
  "default": function (v) {
    TagList = v;
  }
}, 10);
var Tags;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  }
}, 11);
var getTagIds;
module.watch(require("../../../../../../lib/selectors/tags"), {
  getTagIds: function (v) {
    getTagIds = v;
  }
}, 12);

function updateSuggestions(term, _ref) {
  var excludeTags = _ref.excludeTags;
  var slug = Reaction.getSlug(term);
  var selector = {
    slug: new RegExp(slug, "i")
  };

  if (Array.isArray(excludeTags)) {
    selector._id = {
      $nin: excludeTags
    };
  }

  var tags = Tags.find(selector).map(function (tag) {
    return {
      label: tag.name
    };
  });
  return tags;
}

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(TagListContainer, _Component);

    function TagListContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.handleNewTagSave = function (tag) {
        if (_this.productId && _this.canSaveTag(tag)) {
          Meteor.call("products/updateProductTags", _this.productId, tag.name, null, function (error) {
            if (error) {
              return Alerts.toast(i18next.t("productDetail.tagExists"), "error");
            }

            _this.setState({
              newTag: {
                name: ""
              },
              suggestions: []
            });

            return true;
          });
        }
      };

      _this.handleNewTagUpdate = function (tag) {
        _this.setState({
          newTag: tag
        });
      };

      _this.handleTagSave = function (tag) {
        if (_this.productId && _this.canSaveTag(tag)) {
          Meteor.call("products/updateProductTags", _this.productId, tag.name, tag._id, function (error) {
            if (error) {
              return Alerts.toast(i18next.t("productDetail.tagExists"), "error");
            }

            _this.setState({
              suggestions: []
            });

            return true;
          });
        }
      };

      _this.handleTagRemove = function (tag) {
        if (_this.productId) {
          Meteor.call("products/removeProductTag", _this.productId, tag._id, function (error) {
            if (error) {
              Alerts.toast(i18next.t("productDetail.tagInUse"), "error");
            }
          });
        }
      };

      _this.handleTagUpdate = function (tag) {
        var _tagsByKey;

        var newState = update(_this.state, {
          tagsByKey: (_tagsByKey = {}, _tagsByKey[tag._id] = {
            $set: tag
          }, _tagsByKey)
        });

        _this.setState(newState);
      };

      _this.handleMoveTag = function (dragIndex, hoverIndex) {
        var tag = _this.state.tagIds[dragIndex]; // Apply new sort order to variant list

        var newState = update(_this.state, {
          tagIds: {
            $splice: [[dragIndex, 1], [hoverIndex, 0, tag]]
          }
        }); // Set local state so the component does't have to wait for a round-trip
        // to the server to get the updated list of variants

        _this.setState(newState, function () {
          // Save the updated positions
          if (_this.props.product) {
            _this.debounceUpdateTagOrder();
          }
        });
      };

      _this.handleGetSuggestions = function (suggestionUpdateRequest) {
        var suggestions = updateSuggestions(suggestionUpdateRequest.value, {
          excludeTags: _this.state.tagIds
        });

        _this.setState({
          suggestions: suggestions
        });
      };

      _this.handleClearSuggestions = function () {
        _this.setState({
          suggestions: []
        });
      };

      _this.state = {
        tagIds: props.tagIds || [],
        tagsByKey: props.tagsByKey || {},
        newTag: {
          name: ""
        },
        suggestions: []
      };
      _this.debounceUpdateTagOrder = _debounce(function () {
        Meteor.call("products/updateProductField", _this.props.product._id, "hashtags", _this.state.tagIds);
      }, 500);
      return _this;
    }

    var _proto = TagListContainer.prototype;

    _proto.componentWillReceiveProps = function () {
      function componentWillReceiveProps(nextProps) {
        this.setState({
          tagIds: nextProps.tagIds || [],
          tagsByKey: nextProps.tagsByKey || {}
        });
      }

      return componentWillReceiveProps;
    }();

    _proto.canSaveTag = function () {
      function canSaveTag(tag) {
        // Blank tags cannot be saved
        if (typeof tag.name === "string" && tag.name.trim().length === 0) {
          return false;
        } // If the tag does not have an id, then allow the save


        if (!tag._id) {
          return true;
        } // Get the original tag from the props
        // Tags from props are not mutated, and come from an outside source


        var originalTag = this.props.tagsByKey[tag._id];

        if (originalTag && originalTag.name !== tag.name) {
          return true;
        }

        return false;
      }

      return canSaveTag;
    }();

    _proto.render = function () {
      function render() {
        return React.createElement(Components.DragDropProvider, null, React.createElement(Comp, (0, _extends2.default)({
          newTag: this.state.newTag,
          onClick: this.handleEditButtonClick,
          onClearSuggestions: this.handleClearSuggestions,
          onGetSuggestions: this.handleGetSuggestions,
          onMoveTag: this.handleMoveTag,
          onNewTagSave: this.handleNewTagSave,
          onNewTagUpdate: this.handleNewTagUpdate,
          onTagRemove: this.handleTagRemove,
          onTagSave: this.handleTagSave,
          onTagUpdate: this.handleTagUpdate,
          suggestions: this.state.suggestions,
          tags: this.tags,
          tooltip: "Unpublished changes"
        }, this.props)));
      }

      return render;
    }();

    (0, _createClass2.default)(TagListContainer, [{
      key: "productId",
      get: function () {
        if (this.props.product) {
          return this.props.product._id;
        }

        return null;
      }
    }, {
      key: "tags",
      get: function () {
        var _this2 = this;

        if (this.props.editable) {
          return this.state.tagIds.map(function (tagId) {
            return _this2.state.tagsByKey[tagId];
          });
        }

        return this.props.tagsAsArray;
      }
    }]);
    return TagListContainer;
  }(Component), _class.propTypes = {
    children: PropTypes.node,
    editable: PropTypes.bool,
    hasPermission: PropTypes.bool,
    product: PropTypes.object,
    tagIds: PropTypes.arrayOf(PropTypes.string),
    tagsAsArray: PropTypes.arrayOf(PropTypes.object),
    tagsByKey: PropTypes.object
  }, _temp;
};

function composer(props, onData) {
  var tags = props.tags;

  if (props.product) {
    if (_isArray(props.product.hashtags)) {
      tags = _map(props.product.hashtags, function (id) {
        return Tags.findOne(id);
      });
    }
  }

  var isEditable = props.editable;

  if (typeof isEditable !== "boolean") {
    isEditable = Reaction.hasPermission(props.permissions);
  }

  var tagsByKey = {};

  if (Array.isArray(tags)) {
    for (var _iterator = tags, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i >= _iterator.length) break;
        _ref2 = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref2 = _i.value;
      }

      var _tag = _ref2;

      if (_tag) {
        tagsByKey[_tag._id] = _tag;
      }
    }
  }

  onData(null, {
    isProductTags: props.product !== undefined,
    tagIds: getTagIds({
      tags: tags
    }),
    tagsByKey: tagsByKey,
    tagsAsArray: tags,
    editable: isEditable
  });
}

registerComponent("TagList", TagList, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(TagList));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"helpers":{"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/helpers/helpers.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  templateClassName: function () {
    return templateClassName;
  }
});

var _isString;

module.watch(require("lodash/isString"), {
  "default": function (v) {
    _isString = v;
  }
}, 0);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 1);

var templateClassName = function (templateInstance, defaults, key) {
  var classNameData = templateInstance.data.classNames || {};
  var classNameOverrides = classNameData[key];

  if (_isString(classNameOverrides)) {
    return classnames(defaults, classNameOverrides);
  }

  return classnames((0, _objectSpread2.default)({}, defaults || {}, classNameOverrides));
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"react-template-helper.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/helpers/react-template-helper.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _omit;

module.watch(require("lodash/omit"), {
  "default": function (v) {
    _omit = v;
  }
}, 0);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 1);
var ReactDOM;
module.watch(require("react-dom"), {
  "default": function (v) {
    ReactDOM = v;
  }
}, 2);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 3);
var Blaze;
module.watch(require("meteor/blaze"), {
  Blaze: function (v) {
    Blaze = v;
  }
}, 4);
// Empty template; logic in `onRendered` below
Template.React = new Template("Template.React", function () {
  return [];
});
Template.React.onRendered(function () {
  var parentTemplate = parentTemplateName();
  var container = this.firstNode.parentNode;
  this.container = container;
  this.autorun(function () {
    var data = Blaze.getData();
    var comp = data && data.component;

    if (!comp) {
      throw new Error("In template " + parentTemplate + ", call to `{{> React ... }}` missing `component` argument.");
    }

    var props = _omit(data, "component");

    ReactDOM.render(React.createElement(comp, props), container);
  });
});
Template.React.onDestroyed(function () {
  if (this.container) {
    ReactDOM.unmountComponentAtNode(this.container);
  }
}); // Gets the name of the template inside of which this instance of `{{> React ...}}`
// is being used. Used to print more explicit error messages

function parentTemplateName() {
  var view = Blaze.getView();

  if (!view || view.name !== "Template.React") {
    throw new Error("Unexpected: called outside of Template.React");
  } // find the first parent view which is a template or body


  view = view.parentView;

  while (view) {
    var m = view.name.match(/^Template\.(.*)/); // check `view.name.match(/^Template\./)` because iron-router (and
    // maybe other packages) create a view named "yield" that has the
    // `template` property set

    if (view.template && view.name && m) {
      return m[1];
    } else if (view.name === "body") {
      return "<body>";
    }

    view = view.parentView;
  } // not sure when this could happen


  return "<unknown>";
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"providers":{"admin.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/providers/admin.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  "default": function () {
    return Admin;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);

function Admin() {
  return function (Component) {
    var AdminComponent = function (props, context) {
      var adminContext = context.adminContext;
      return React.createElement(Component, (0, _extends2.default)({
        adminContext: adminContext
      }, props));
    };

    AdminComponent.contextTypes = {
      adminContext: PropTypes.object.isRequired
    };
    return AdminComponent;
  };
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"adminContextProvider.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/providers/adminContextProvider.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component, Children;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  },
  Children: function (v) {
    Children = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);

var AdminContextProvider =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AdminContextProvider, _Component);

  function AdminContextProvider() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = AdminContextProvider.prototype;

  _proto.getChildContext = function () {
    function getChildContext() {
      var adminContext = this.props.adminContext;
      return {
        adminContext: adminContext
      };
    }

    return getChildContext;
  }();

  _proto.render = function () {
    function render() {
      // `Children.only` enables us not to add a <div /> for nothing
      return Children.only(this.props.children);
    }

    return render;
  }();

  return AdminContextProvider;
}(Component);

AdminContextProvider.childContextTypes = {
  adminContext: PropTypes.object.isRequired
};
AdminContextProvider.propTypes = {
  adminContext: PropTypes.object.isRequired,
  children: PropTypes.node
};

function composer(props, onData) {
  onData(null, {
    adminContext: {
      isAdminArea: true,
      adminClassName: {
        admin: true
      }
    }
  });
}

module.exportDefault(composeWithTracker(composer)(AdminContextProvider));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"dragDropProvider.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/providers/dragDropProvider.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Component, Children;
module.watch(require("react"), {
  Component: function (v) {
    Component = v;
  },
  Children: function (v) {
    Children = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var DragDropManager;
module.watch(require("dnd-core"), {
  DragDropManager: function (v) {
    DragDropManager = v;
  }
}, 2);
var HTML5Backend;
module.watch(require("react-dnd-html5-backend"), {
  "default": function (v) {
    HTML5Backend = v;
  }
}, 3);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);
var defaultManager = new DragDropManager(HTML5Backend);

var DragDropProvider =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(DragDropProvider, _Component);

  function DragDropProvider() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = DragDropProvider.prototype;

  _proto.getChildContext = function () {
    function getChildContext() {
      return {
        dragDropManager: defaultManager
      };
    }

    return getChildContext;
  }();

  _proto.render = function () {
    function render() {
      // `Children.only` enables us not to add a <div /> for nothing
      return Children.only(this.props.children);
    }

    return render;
  }();

  return DragDropProvider;
}(Component);

DragDropProvider.childContextTypes = {
  dragDropManager: PropTypes.object.isRequired
};
DragDropProvider.propTypes = {
  children: PropTypes.node
};
registerComponent("DragDropProvider", DragDropProvider);
module.exportDefault(DragDropProvider);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/providers/index.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./admin"), {
  "default": function (v) {
    exports.Admin = v;
  }
}, 0);
module.watch(require("./adminContextProvider"), {
  "default": function (v) {
    exports.AdminContextProvider = v;
  }
}, 1);
module.watch(require("./translatable"), {
  "default": function (v) {
    exports.Translatable = v;
  }
}, 2);
module.watch(require("./translationProvider"), {
  "default": function (v) {
    exports.TranslationProvider = v;
  }
}, 3);
module.watch(require("./dragDropProvider"), {
  "default": function (v) {
    exports.DragDropProvider = v;
  }
}, 4);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translatable.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/providers/translatable.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  "default": function () {
    return Translatable;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);

function Translatable() {
  return function (Component) {
    var TranslatableComponent = function (props, context) {
      var translations = context.translations;
      return React.createElement(Component, (0, _extends2.default)({
        translations: translations
      }, props));
    };

    TranslatableComponent.contextTypes = {
      translations: PropTypes.object.isRequired
    };
    return TranslatableComponent;
  };
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translationProvider.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/providers/translationProvider.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 0);
var React, Component, Children;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  },
  Children: function (v) {
    Children = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var i18nextDep;
module.watch(require("../../../../../../client/api"), {
  i18nextDep: function (v) {
    i18nextDep = v;
  }
}, 4);

var TranslationProvider =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TranslationProvider, _Component);

  function TranslationProvider() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = TranslationProvider.prototype;

  _proto.getChildContext = function () {
    function getChildContext() {
      var translations = this.props.translations;
      return {
        translations: translations
      };
    }

    return getChildContext;
  }();

  _proto.render = function () {
    function render() {
      // `Children.only` enables us not to add a <div /> for nothing
      return Children.only(this.props.children);
    }

    return render;
  }();

  return TranslationProvider;
}(Component);

TranslationProvider.childContextTypes = {
  translations: PropTypes.object.isRequired
};
TranslationProvider.propTypes = {
  children: PropTypes.node,
  translations: PropTypes.object.isRequired
};

function composer(props, onData) {
  i18nextDep.depend();
  onData(null, {
    translations: {
      language: Session.get("language")
    }
  });
}

module.exportDefault(composeWithTracker(composer)(TranslationProvider));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui/client/index.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./helpers/helpers"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./components"), {
  "*": module.makeNsSetter()
}, 1);
module.watch(require("./containers"), {
  "*": module.makeNsSetter()
}, 2);
module.watch(require("./providers"), {
  "*": module.makeNsSetter()
}, 3);
module.watch(require("./helpers/react-template-helper"));
module.watch(require("./components/button/button.html"));
module.watch(require("./components/button/button.js"));
module.watch(require("./components/cards/cardGroup.html"));
module.watch(require("./components/cards/cards.html"));
module.watch(require("./components/cards/cards.js"));
module.watch(require("./components/numericInput/numericInput.js"));
module.watch(require("./components/textfield/textfield.html"));
module.watch(require("nouislider-algolia-fork/src/nouislider.css"));
module.watch(require("nouislider-algolia-fork/src/nouislider.pips.css"));
module.watch(require("nouislider-algolia-fork/src/nouislider.tooltips.css"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"catalog":{"client":{"templates":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/catalog/client/templates/settings.html                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/catalog/client/templates/template.settings.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("catalogSettings");
Template["catalogSettings"] = new Template("Template.catalogSettings", (function() {
  var view = this;
  return Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "catalogSettings"
    }));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n        ", HTML.DIV({
      class: "panel-title"
    }, "\n          ", HTML.I({
      class: function() {
        return [ "fa fa-", Spacebars.mustache(view.lookup("name")) ];
      }
    }), "\n          ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n\n        "), "\n        ", HTML.DIV({
      class: "panel-controls"
    }, "\n          ", HTML.INPUT(HTML.Attrs({
      class: "checkbox-switch",
      type: "checkbox",
      name: "enabled",
      "data-id": function() {
        return Spacebars.mustache(view.lookup("packageId"));
      },
      "data-key": function() {
        return Spacebars.mustache(view.lookup("settingsKey"));
      }
    }, function() {
      return Spacebars.attrMustache(view.lookup("checked"), view.lookup("enabled"));
    })), "\n        "), "\n      "), "\n      ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), view.lookup("enabled")) ];
      }
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n      "), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/catalog/client/templates/settings.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
Template.catalogSettings.helpers({
  checked: function (enabled) {
    if (enabled === true) {
      return "checked";
    }

    return "";
  },
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  }
});
Template.catalogSettings.events({
  /**
   * settings update enabled status for services on change
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "change input[name=enabled]": function (event) {
    var settingsKey = event.target.getAttribute("data-key");
    var packageId = event.target.getAttribute("data-id");
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }];
    Meteor.call("registry/update", packageId, settingsKey, fields);
    Meteor.call("shop/togglePackage", packageId, !event.target.checked);
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/catalog/client/index.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/settings.html"));
module.watch(require("./templates/settings.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"email":{"client":{"templates":{"email.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/templates/email.html                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.email.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.email.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/templates/template.email.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("emailSettings");
Template["emailSettings"] = new Template("Template.emailSettings", (function() {
  var view = this;
  return [ HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("EmailConfig"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n  ", HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("EmailLogs"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"email.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/templates/email.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var EmailLogs;
module.watch(require("../containers/emailLogs"), {
  "default": function (v) {
    EmailLogs = v;
  }
}, 1);
var EmailConfig;
module.watch(require("../containers/emailConfig"), {
  "default": function (v) {
    EmailConfig = v;
  }
}, 2);
Template.emailSettings.helpers({
  EmailConfig: function () {
    return {
      component: EmailConfig
    };
  },
  EmailLogs: function () {
    return {
      component: EmailLogs
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"actions":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/actions/index.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings"), {
  "default": function (v) {
    exports.settings = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/actions/settings.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _pick;

module.watch(require("lodash/pick"), {
  "default": function (v) {
    _pick = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Alert;
module.watch(require("sweetalert2"), {
  "default": function (v) {
    Alert = v;
  }
}, 2);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 3);
module.exportDefault({
  /**
   * Save email settings
   * @param {Object} settings - object of mail provider settings
   * @param {Function} callback - optional callback
   * @return {Boolean} returns true if all fields provided and update method called
   */
  saveSettings: function (settings, callback) {
    var service = settings.service,
        host = settings.host,
        port = settings.port,
        user = settings.user,
        password = settings.password;

    if (!service) {
      Alert(i18next.t("app.error"), i18next.t("mail.alerts.missingService"), "error");
      return callback();
    }

    if (service !== "custom" && service !== "Maildev" && (!user || !password)) {
      Alert(i18next.t("app.error"), i18next.t("mail.alerts.userPassRequired", {
        service: service
      }), "error");
      return callback();
    }

    if (service === "custom" && (!host || !port)) {
      Alert(i18next.t("app.error"), i18next.t("mail.alerts.allFieldsRequired"), "error");
      return callback();
    } // make sure port is a Number


    settings.port = Number(settings.port);

    if (isNaN(settings.port)) {
      Alert(i18next.t("app.error"), i18next.t("mail.alerts.portNaN"), "error");
      return callback();
    }

    var save = function () {
      Meteor.call("email/saveSettings", _pick(settings, ["service", "host", "port", "user", "password"]), function (err) {
        if (err) {
          return Alert(i18next.t("app.error"), i18next.t("mail.alerts.saveFailed", {
            error: err.reason
          }), "error");
        }

        return Alert({
          title: i18next.t("app.success"),
          text: i18next.t("mail.alerts.saveSuccess"),
          type: "success",
          timer: 1700
        }).catch(function () {
          return null;
        });
      });
    }; // check if the settings work first


    Meteor.call("email/verifySettings", settings, function (error) {
      callback(); // if the connection fails

      if (error) {
        Alert({
          title: i18next.t("mail.alerts.connectionFailed"),
          text: i18next.t("mail.alerts.saveAnyway"),
          type: "warning",
          showCancelButton: true,
          cancelButtonText: i18next.t("app.cancel"),
          confirmButtonColor: "#DD6B55",
          confirmButtonText: i18next.t("app.save")
        }).then(function () {
          return save();
        }).catch(function () {
          return true;
        });
      } else {
        save();
      }
    });
    return true;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"emailConfig.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/components/emailConfig.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Translation;
module.watch(require("../../../ui/client/components"), {
  Translation: function (v) {
    Translation = v;
  }
}, 3);

var EmailConfig =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(EmailConfig, _Component);

  function EmailConfig(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      showPassword: false,
      showSettings: false
    };
    _this.togglePassword = _this.togglePassword.bind((0, _assertThisInitialized2.default)(_this));
    _this.toggleSettings = _this.toggleSettings.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = EmailConfig.prototype;

  _proto.togglePassword = function () {
    function togglePassword() {
      this.setState({
        showPassword: !this.state.showPassword
      });
    }

    return togglePassword;
  }();

  _proto.toggleSettings = function () {
    function toggleSettings() {
      this.setState({
        showSettings: !this.state.showSettings
      });
    }

    return toggleSettings;
  }();

  _proto.renderSettingsDisplay = function () {
    function renderSettingsDisplay() {
      var _props = this.props,
          settings = _props.settings,
          status = _props.status;
      var service = settings.service,
          host = settings.host,
          port = settings.port,
          user = settings.user,
          password = settings.password;
      var showPassword = this.state.showPassword;

      var NotSet = function () {
        return React.createElement("span", {
          "data-i18n": "admin.settings.fieldNotSet"
        }, "Not set");
      };

      return React.createElement("div", null, React.createElement("div", {
        className: "pull-right"
      }, React.createElement(Components.IconButton, {
        icon: "fa fa-gear",
        onClick: this.toggleSettings
      })), React.createElement("div", {
        className: "email-config-status"
      }, React.createElement("strong", null, React.createElement(Translation, {
        defaultValue: "Status",
        i18nKey: "admin.settings.status"
      })), ": ", status ? React.createElement("i", {
        className: "fa fa-circle " + status
      }) : React.createElement("i", {
        className: "fa fa-refresh fa-spin"
      })), React.createElement("div", null, React.createElement("strong", null, React.createElement(Translation, {
        defaultValue: "Service",
        i18nKey: "admin.settings.service"
      })), ": ", service || React.createElement(NotSet, null)), React.createElement("div", {
        className: "truncate"
      }, React.createElement("strong", null, React.createElement(Translation, {
        defaultValue: "Host",
        i18nKey: "admin.settings.host"
      })), ": ", host || React.createElement(NotSet, null)), React.createElement("div", null, React.createElement("strong", null, React.createElement(Translation, {
        defaultValue: "Port",
        i18nKey: "admin.settings.port"
      })), ": ", port || React.createElement(NotSet, null)), React.createElement("div", {
        className: "truncate"
      }, React.createElement("strong", null, React.createElement(Translation, {
        defaultValue: "User",
        i18nKey: "admin.settings.user"
      })), ": ", user || React.createElement(NotSet, null)), React.createElement("div", null, React.createElement("strong", null, React.createElement(Translation, {
        defaultValue: "Password",
        i18nKey: "admin.settings.password"
      })), ":\xA0\xA0", password ? React.createElement("span", null, showPassword ? password : "********", React.createElement(Components.Button, {
        className: {
          "btn": false,
          "btn-default": false
        },
        tagName: "span",
        onClick: this.togglePassword
      }, React.createElement("span", {
        style: {
          marginLeft: "1rem"
        }
      }, React.createElement("em", null, showPassword ? React.createElement("span", {
        "data-i18n": "admin.settings.passwordHide"
      }, "Hide") : React.createElement("span", {
        "data-i18n": "admin.settings.passwordShow"
      }, "Show"))))) : React.createElement(NotSet, null)));
    }

    return renderSettingsDisplay;
  }();

  _proto.renderSettingsUpdate = function () {
    function renderSettingsUpdate() {
      var showSettings = this.state.showSettings;

      if (showSettings === true) {
        return React.createElement("div", null, React.createElement("hr", null), React.createElement("h4", null, React.createElement(Translation, {
          defaultValue: "Edit Settings",
          i18nKey: "admin.settings.editSettings"
        })), React.createElement(Components.EmailSettings, {
          showSettings: showSettings
        }));
      }

      return null;
    }

    return renderSettingsUpdate;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "admin.settings.mailProvider",
        title: "Mail Provider"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, this.renderSettingsDisplay(), this.renderSettingsUpdate())));
    }

    return render;
  }();

  return EmailConfig;
}(Component);

EmailConfig.propTypes = {
  settings: PropTypes.shape({
    host: PropTypes.string,
    password: PropTypes.string,
    port: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    service: PropTypes.string,
    user: PropTypes.string
  }),
  status: PropTypes.string
};
module.exportDefault(EmailConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emailLogs.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/components/emailLogs.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var SortableTable;
module.watch(require("../../../ui/client/components"), {
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 3);
var Jobs;
module.watch(require("../../../../../../lib/collections"), {
  Jobs: function (v) {
    Jobs = v;
  }
}, 4);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 5);

var EmailLogs =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(EmailLogs, _Component);

  function EmailLogs() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = EmailLogs.prototype;

  _proto.renderEmailsTable = function () {
    function renderEmailsTable() {
      var filteredFields = ["data.to", "updated", "data.subject", "status"];
      var noDataMessage = i18next.t("admin.logs.noEmails"); // helper adds a class to every grid row

      var customRowMetaData = {
        bodyCssClassName: function () {
          return "email-grid-row";
        }
      }; // add i18n handling to headers

      var customColumnMetadata = [];
      filteredFields.forEach(function (field) {
        var colWidth;
        var colStyle;
        var colClassName;

        if (field === "status") {
          colWidth = 70;
          colStyle = {
            textAlign: "center"
          };
          colClassName = "email-log-status";
        } // https://react-table.js.org/#/story/cell-renderers-custom-components


        var columnMeta = {
          accessor: field,
          Header: i18next.t("admin.logs.headers." + field),
          Cell: function (row) {
            return React.createElement(Components.EmailTableColumn, {
              row: row
            });
          },
          className: colClassName,
          width: colWidth,
          style: colStyle
        };
        customColumnMetadata.push(columnMeta);
      });
      return React.createElement(SortableTable, {
        publication: "Emails",
        collection: Jobs,
        matchingResultsCount: "emails-count",
        showFilter: true,
        rowMetadata: customRowMetaData,
        filteredFields: filteredFields,
        noDataMessage: noDataMessage,
        columnMetadata: customColumnMetadata,
        externalLoadingComponent: Components.Loading
      });
    }

    return renderEmailsTable;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "admin.logs.headers.emailLogs",
        title: "Email Logs"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, this.renderEmailsTable())));
    }

    return render;
  }();

  return EmailLogs;
}(Component);

EmailLogs.propTypes = {
  emails: PropTypes.arrayOf(PropTypes.shape({
    _id: PropTypes.string.isRequired,
    created: PropTypes.instanceOf(Date).isRequired,
    data: PropTypes.shape({
      to: PropTypes.string.isRequired,
      subject: PropTypes.string.isRequired
    }),
    status: PropTypes.string.isRequired
  })),
  limit: PropTypes.string
};
module.exportDefault(EmailLogs);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emailSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/components/emailSettings.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var EmailSettings =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(EmailSettings, _Component);

  function EmailSettings(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      settings: props.settings,
      hasAuth: !(props.settings.service === "Maildev"),
      isSaving: false
    };
    _this.handleStateChange = _this.handleStateChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSelect = _this.handleSelect.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = EmailSettings.prototype;

  _proto.handleStateChange = function () {
    function handleStateChange(e) {
      var settings = this.state.settings;
      settings[e.target.name] = e.target.value;
      this.setState({
        settings: settings
      });
    }

    return handleStateChange;
  }();

  _proto.handleSubmit = function () {
    function handleSubmit(e) {
      var _this2 = this;

      e.preventDefault();
      var _props = this.props,
          saveSettings = _props.saveSettings,
          providers = _props.providers;
      var settings = this.state.settings;
      var newSettings = settings;

      if (settings.service !== "custom") {
        newSettings = Object.assign({}, settings, providers[settings.service]);
      }

      this.setState({
        isSaving: true
      });
      saveSettings(newSettings, function () {
        return _this2.setState({
          isSaving: false
        });
      });
    }

    return handleSubmit;
  }();

  _proto.handleSelect = function () {
    function handleSelect(service) {
      this.setState({
        settings: {
          service: service
        },
        hasAuth: !(service === "Maildev")
      });
    }

    return handleSelect;
  }();

  _proto.render = function () {
    function render() {
      var providers = this.props.providers;
      var _state = this.state,
          settings = _state.settings,
          hasAuth = _state.hasAuth,
          isSaving = _state.isSaving;
      var providerNames = Object.keys(providers);
      var emailProviders = providerNames.map(function (name) {
        return {
          label: name,
          value: name
        };
      });
      emailProviders.unshift({
        label: "Custom",
        value: "custom"
      });
      return React.createElement("form", {
        onSubmit: this.handleSubmit
      }, React.createElement(Components.Select, {
        clearable: false,
        label: "Service",
        i18nKeyLabel: "admin.settings.providerName",
        placeholder: "Select a Service",
        i18nKeyPlaceholder: "admin.settings.selectService",
        name: "service",
        onChange: this.handleSelect,
        options: emailProviders,
        value: settings.service || ""
      }), settings.service === "custom" && React.createElement("div", null, React.createElement(Components.TextField, {
        label: "Host",
        i18nKeyLabel: "admin.settings.host",
        type: "text",
        name: "host",
        value: settings.host,
        onChange: this.handleStateChange
      }), React.createElement(Components.TextField, {
        label: "Port",
        i18nKeyLabel: "admin.settings.port",
        type: "text",
        name: "port",
        value: settings.port,
        onChange: this.handleStateChange
      })), hasAuth && React.createElement("div", null, React.createElement(Components.TextField, {
        label: "User",
        i18nKeyLabel: "admin.settings.user",
        type: "text",
        name: "user",
        value: settings.user,
        onChange: this.handleStateChange
      }), React.createElement(Components.TextField, {
        label: "Password",
        i18nKeyLabel: "admin.settings.password",
        type: "password",
        name: "password",
        value: settings.password,
        onChange: this.handleStateChange
      })), React.createElement(Components.Button, {
        primary: true,
        bezelStyle: "solid",
        className: "pull-right",
        type: "submit",
        disabled: isSaving
      }, isSaving ? React.createElement("i", {
        className: "fa fa-refresh fa-spin"
      }) : React.createElement("span", {
        "data-i18n": "app.save"
      }, "Save")));
    }

    return render;
  }();

  return EmailSettings;
}(Component);

EmailSettings.propTypes = {
  providers: PropTypes.object.isRequired,
  saveSettings: PropTypes.func.isRequired,
  settings: PropTypes.shape({
    service: PropTypes.string,
    host: PropTypes.string,
    port: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    user: PropTypes.string,
    password: PropTypes.string
  })
};
module.exportDefault(EmailSettings);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emailTableColumn.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/components/emailTableColumn.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Components, registerComponent, withMoment;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  withMoment: function (v) {
    withMoment = v;
  }
}, 3);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 4);

var EmailTableColumn =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(EmailTableColumn, _Component);

  function EmailTableColumn() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleAction = function () {
      var row = _this.props.row;
      var emailId = row.original._id;
      var emailAddress = row.original.data.to;
      Meteor.call("emails/retryFailed", emailId, function (err) {
        if (err) {
          return Alerts.toast(i18next.t("app.error", {
            error: err.reason
          }), "error");
        }

        return Alerts.toast(i18next.t("mail.alerts.resendSuccess", {
          email: emailAddress
        }), "success");
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = EmailTableColumn.prototype;

  _proto.render = function () {
    function render() {
      var row = this.props.row;
      var renderColumn = row.column.id;

      if (renderColumn === "status") {
        if (row.value === "completed") {
          return React.createElement("span", null, React.createElement(Components.Icon, {
            icon: "fa fa-circle",
            className: "valid"
          }), React.createElement(Components.Button, {
            className: {
              "btn": false,
              "btn-default": false
            },
            tagName: "span",
            onClick: this.handleAction,
            title: this.props.data
          }, React.createElement(Components.Icon, {
            icon: "fa fa-retweet",
            className: "resend-mail"
          })));
        }

        return React.createElement("span", null, React.createElement(Components.Icon, {
          icon: "fa fa-circle",
          className: "error"
        }), React.createElement(Components.Button, {
          className: {
            "btn": false,
            "btn-default": false
          },
          tagName: "span",
          onClick: this.handleAction,
          title: this.props.data
        }, React.createElement(Components.Icon, {
          icon: "fa fa-retweet",
          className: "resend-mail"
        })));
      }

      if (renderColumn === "updated") {
        var moment = this.props.moment;
        var createdDate = moment && moment(row.value).format("LLL") || row.value.toLocaleString();
        return React.createElement("span", null, createdDate);
      }

      return React.createElement("span", null, row.value);
    }

    return render;
  }();

  return EmailTableColumn;
}(Component);

EmailTableColumn.propTypes = {
  data: PropTypes.object,
  moment: PropTypes.func,
  row: PropTypes.object
};
registerComponent("EmailTableColumn", EmailTableColumn, withMoment);
module.exportDefault(withMoment(EmailTableColumn));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"emailConfig.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/containers/emailConfig.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 3);
var getServiceConfig;
module.watch(require("nodemailer-wellknown"), {
  "default": function (v) {
    getServiceConfig = v;
  }
}, 4);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 5);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 6);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var actions;
module.watch(require("../actions"), {
  "default": function (v) {
    actions = v;
  }
}, 8);
var EmailConfig;
module.watch(require("../components/emailConfig"), {
  "default": function (v) {
    EmailConfig = v;
  }
}, 9);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(EmailConfigContainer, _Component);

    function EmailConfigContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;
      _this.state = {
        status: null,
        error: null
      };
      return _this;
    }

    var _proto = EmailConfigContainer.prototype;

    _proto.componentDidMount = function () {
      function componentDidMount() {
        this._isMounted = true;
        this.checkEmailStatus();
      }

      return componentDidMount;
    }();

    _proto.componentWillReceiveProps = function () {
      function componentWillReceiveProps(nextProps) {
        var settings = this.props.settings;
        var nextSettings = nextProps.settings; // if the email settings do not match check the email status

        if (JSON.stringify(settings) !== JSON.stringify(nextSettings)) {
          this.checkEmailStatus();
        } else {
          return;
        }
      }

      return componentWillReceiveProps;
    }();

    _proto.componentWillUnmount = function () {
      function componentWillUnmount() {
        this._isMounted = false;
      }

      return componentWillUnmount;
    }(); // checking email settings
    // and updating status


    _proto.checkEmailStatus = function () {
      function checkEmailStatus() {
        var _this2 = this;

        var settings = this.props.settings;
        var service = settings.service,
            host = settings.host,
            port = settings.port,
            user = settings.user,
            password = settings.password;

        if (service && host && port && user && password) {
          Meteor.call("email/verifySettings", function (error) {
            if (!_this2._isMounted) return;

            if (error) {
              _this2.setState({
                status: "error"
              });
            } else {
              _this2.setState({
                status: "valid"
              });
            }
          });
        } else {
          this.setState({
            status: "error"
          });
        }
      }

      return checkEmailStatus;
    }();

    _proto.render = function () {
      function render() {
        var status = this.state.status;
        return React.createElement(Comp, (0, _extends2.default)({}, this.props, {
          status: status
        }));
      }

      return render;
    }();

    return EmailConfigContainer;
  }(Component), _class.propTypes = {
    settings: PropTypes.shape({
      host: PropTypes.string,
      password: PropTypes.string,
      port: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
      service: PropTypes.string,
      user: PropTypes.string
    })
  }, _temp;
};

var composer = function (props, onData) {
  if (Meteor.subscribe("Packages").ready()) {
    var shopSettings = Reaction.getShopSettings();
    var settings = shopSettings.mail || {};

    if (settings.service && settings.service !== "custom") {
      var config = getServiceConfig(settings.service); // show localhost for test providers like Maildev that have no host

      settings.host = config.host || "localhost";
      settings.port = config.port;
    }

    return onData(null, {
      settings: settings
    });
  }
};

var handlers = {
  saveSettings: actions.settings.saveSettings
};
registerComponent("EmailConfig", EmailConfig, [composeWithTracker(composer), _withProps(handlers), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers), wrapComponent)(EmailConfig));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emailLogs.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/containers/emailLogs.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var EmailLogs;
module.watch(require("../components/emailLogs"), {
  "default": function (v) {
    EmailLogs = v;
  }
}, 5);
var Jobs;
module.watch(require("../../../../../../lib/collections"), {
  Jobs: function (v) {
    Jobs = v;
  }
}, 6);

var composer = function (props, onData) {
  if (Meteor.subscribe("Emails").ready()) {
    var emails = Jobs.find().fetch();
    onData(null, {
      emails: emails
    });
  }
};

var handlers = {
  /**
   * Restart a failed or cancelled email job
   * @param {Object} email - the email job object
   * @return {null} triggers an alert
   */
  resend: function (email) {
    Meteor.call("emails/retryFailed", email._id, function (err) {
      if (err) {
        return Alerts.toast(i18next.t("app.error", {
          error: err.reason
        }), "error");
      }

      return Alerts.toast(i18next.t("mail.alerts.resendSuccess", {
        email: email.data.to
      }), "success");
    });
  }
};
registerComponent("EmailLogs", EmailLogs, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(EmailLogs));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emailSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/containers/emailSettings.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var actions;
module.watch(require("../actions"), {
  "default": function (v) {
    actions = v;
  }
}, 5);
var EmailSettings;
module.watch(require("../components/emailSettings"), {
  "default": function (v) {
    EmailSettings = v;
  }
}, 6);

var providers = require("nodemailer-wellknown/services.json");

var composer = function (props, onData) {
  if (Meteor.subscribe("Packages", Reaction.getShopId()).ready()) {
    var settings = Reaction.getShopSettings().mail || {};
    var service = settings.service,
        host = settings.host,
        port = settings.port,
        user = settings.user,
        password = settings.password;

    if (host && port && user && password && !service) {
      settings.service = "custom";
    }

    onData(null, {
      providers: providers,
      settings: settings
    });
  }
};

var handlers = {
  saveSettings: actions.settings.saveSettings
};
registerComponent("EmailSettings", EmailSettings, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(EmailSettings));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/email/client/index.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/email.html"));
module.watch(require("./templates/email.js"));
module.watch(require("./components/emailTableColumn"), {
  "default": function (v) {
    exports.EmailTableColumn = v;
  }
}, 0);
module.watch(require("./containers/emailConfig"), {
  "default": function (v) {
    exports.EmailConfig = v;
  }
}, 1);
module.watch(require("./containers/emailLogs"), {
  "default": function (v) {
    exports.EmailLogs = v;
  }
}, 2);
module.watch(require("./containers/emailSettings"), {
  "default": function (v) {
    exports.EmailSettings = v;
  }
}, 3);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"revisions":{"client":{"templates":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/templates/settings.html                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/templates/template.settings.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("revisionControlSettings");
Template["revisionControlSettings"] = new Template("Template.revisionControlSettings", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("SearchContainerComponent"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/templates/settings.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var SearchContainer;
module.watch(require("../containers/settingsContainer.js"), {
  "default": function (v) {
    SearchContainer = v;
  }
}, 1);
Template.revisionControlSettings.helpers({
  SearchContainerComponent: function () {
    return {
      component: SearchContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"publishControls.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/components/publishControls.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Button, FlatButton, IconButton, Divider, DropDownMenu, MenuItem, Switch, Icon;
module.watch(require("../../../ui/client/components"), {
  Button: function (v) {
    Button = v;
  },
  FlatButton: function (v) {
    FlatButton = v;
  },
  IconButton: function (v) {
    IconButton = v;
  },
  Divider: function (v) {
    Divider = v;
  },
  DropDownMenu: function (v) {
    DropDownMenu = v;
  },
  MenuItem: function (v) {
    MenuItem = v;
  },
  Switch: function (v) {
    Switch = v;
  },
  Icon: function (v) {
    Icon = v;
  }
}, 3);
var SimpleDiff;
module.watch(require("./simpleDiff"), {
  "default": function (v) {
    SimpleDiff = v;
  }
}, 4);
var Translatable;
module.watch(require("../../../ui/client/providers"), {
  Translatable: function (v) {
    Translatable = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);

var PublishControls =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PublishControls, _Component);

  function PublishControls(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleVisibilityChange = function (event, value) {
      if (_this.props.onVisibilityChange) {
        var isDocumentVisible = false;

        if (value === "public") {
          isDocumentVisible = true;
        }

        _this.props.onVisibilityChange(event, isDocumentVisible, _this.props.documentIds);
      }
    };

    _this.handleAction = function (event, value) {
      if (_this.props.onAction) {
        _this.props.onAction(event, value, _this.props.documentIds);
      }
    };

    _this.onViewContextChange = function (event, isChecked) {
      if (typeof _this.props.onViewContextChange === "function") {
        _this.props.onViewContextChange(event, isChecked ? "customer" : "administrator");
      }
    };

    _this.state = {
      showDiffs: false
    };
    _this.handleToggleShowChanges = _this.handleToggleShowChanges.bind((0, _assertThisInitialized2.default)(_this));
    _this.handlePublishClick = _this.handlePublishClick.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = PublishControls.prototype;

  _proto.handleToggleShowChanges = function () {
    function handleToggleShowChanges() {
      this.setState({
        showDiffs: !this.state.showDiffs
      });
    }

    return handleToggleShowChanges;
  }();

  _proto.handlePublishClick = function () {
    function handlePublishClick() {
      if (this.props.onPublishClick) {
        this.props.onPublishClick(this.props.revisions);
      }
    }

    return handlePublishClick;
  }();

  _proto.renderChanges = function () {
    function renderChanges() {
      if (this.showDiffs) {
        var diffs = this.props.revisions.map(function (revision) {
          return React.createElement(SimpleDiff, {
            diff: revision.diff,
            key: revision._id
          });
        });
        return React.createElement("div", null, diffs);
      }

      return null;
    }

    return renderChanges;
  }();

  _proto.renderDeletionStatus = function () {
    function renderDeletionStatus() {
      if (this.hasChanges) {
        if (this.primaryRevision && this.primaryRevision.documentData.isDeleted) {
          return React.createElement(Button, {
            label: "Archived",
            onClick: this.handleRestore,
            status: "danger",
            i18nKeyLabel: "app.archived"
          });
        }
      }

      return null;
    }

    return renderDeletionStatus;
  }();

  _proto.renderPublishButton = function () {
    function renderPublishButton() {
      var buttonProps = {};

      if (Array.isArray(this.props.documentIds) && this.props.documentIds.length > 1) {
        buttonProps.label = "Publish All";
        buttonProps.i18nKeyLabel = "toolbar.publishAll";
      }

      var isDisabled = Array.isArray(this.props.documentIds) && this.props.documentIds.length === 0;
      return React.createElement("div", {
        className: "hidden-xs"
      }, React.createElement(Button, (0, _extends2.default)({
        bezelStyle: "outline",
        disabled: isDisabled,
        label: "Publish",
        onClick: this.handlePublishClick,
        status: "success",
        tooltip: "This product has changes that need to be published before they are visible to your customers.",
        i18nKeyLabel: "productDetailEdit.publish"
      }, buttonProps)));
    }

    return renderPublishButton;
  }();

  _proto.renderMoreOptionsButton = function () {
    function renderMoreOptionsButton() {
      return React.createElement(DropDownMenu, {
        buttonElement: React.createElement(IconButton, {
          icon: "fa fa-ellipsis-v"
        }),
        handleMenuItemChange: this.handleAction
      }, React.createElement(MenuItem, {
        label: "Administrator",
        value: "administrator"
      }), React.createElement(MenuItem, {
        label: "Customer",
        value: "customer"
      }), React.createElement(Divider, null), React.createElement(MenuItem, {
        i18nKeyLabel: "app.public",
        icon: "fa fa-unlock",
        label: "Public",
        selectLabel: "Public",
        value: "public"
      }), React.createElement(MenuItem, {
        i18nKeyLabel: "app.private",
        label: "Private",
        icon: "fa fa-lock",
        selectLabel: "Public",
        value: "private"
      }), React.createElement(Divider, null), React.createElement(MenuItem, {
        disabled: this.hasChanges === false,
        i18nKeyLabel: "revisions.discardChanges",
        icon: "fa fa-undo",
        label: "Discard Changes",
        value: "discard"
      }), React.createElement(Divider, null), React.createElement(MenuItem, {
        i18nKeyLabel: "app.archive",
        icon: "fa fa-trash-o",
        label: "Archive",
        value: "archive"
      }));
    }

    return renderMoreOptionsButton;
  }();

  _proto.renderViewControls = function () {
    function renderViewControls() {
      if (this.props.showViewAsControls) {
        var tooltip = "Private";
        var i18nKeyTooltip = "app.private";

        if (this.isVisible === "public") {
          tooltip = "Public";
          i18nKeyTooltip = "app.public";
        }

        return React.createElement("div", {
          className: "hidden-xs"
        }, React.createElement(FlatButton, {
          i18nKeyTooltip: i18nKeyTooltip,
          icon: "fa fa-eye-slash",
          onIcon: "fa fa-eye",
          toggle: true,
          tooltip: tooltip,
          value: "public",
          onValue: "private",
          toggleOn: this.isVisible === "public",
          onToggle: this.handleVisibilityChange
        }));
      }

      return null;
    }

    return renderViewControls;
  }();

  _proto.renderUndoButton = function () {
    function renderUndoButton() {
      return React.createElement(FlatButton, {
        disabled: this.hasChanges === false,
        tooltip: "Discard Changes",
        i18nKeyTooltip: "revisions.discardChanges",
        icon: "fa fa-undo",
        value: "discard",
        onClick: this.handleAction
      });
    }

    return renderUndoButton;
  }();

  _proto.renderArchiveButton = function () {
    function renderArchiveButton() {
      return React.createElement(FlatButton, {
        tooltip: "Archive",
        i18nKeyTooltip: "app.archive",
        icon: "fa fa-archive",
        value: "archive",
        onClick: this.handleAction
      });
    }

    return renderArchiveButton;
  }();

  _proto.renderSettingsButton = function () {
    function renderSettingsButton() {
      return React.createElement(FlatButton, {
        icon: "fa fa-cog",
        value: "settings",
        onClick: this.handleAction
      });
    }

    return renderSettingsButton;
  }();

  _proto.renderVisibilitySwitch = function () {
    function renderVisibilitySwitch() {
      return React.createElement(Switch, {
        i18nKeyLabel: "admin.dashboard.preview",
        label: "Preview",
        checked: this.props.isPreview,
        onChange: this.onViewContextChange
      });
    }

    return renderVisibilitySwitch;
  }();

  _proto.renderAdminButton = function () {
    function renderAdminButton() {
      return React.createElement(FlatButton, {
        onClick: function () {
          Reaction.showActionView({
            i18nKeyTitle: "dashboard.coreTitle",
            title: "Dashboard",
            template: "dashboardPackages"
          });
        }
      }, React.createElement(Icon, {
        style: {
          fontSize: 24
        },
        icon: "icon icon-reaction-logo"
      }));
    }

    return renderAdminButton;
  }();

  _proto.renderAddButton = function () {
    function renderAddButton() {
      return React.createElement(FlatButton, {
        i18nKeyTooltip: "app.shortcut.addProduct",
        icon: "fa fa-plus",
        tooltip: "Add Product",
        onClick: this.props.onAddProduct
      });
    }

    return renderAddButton;
  }();

  _proto.render = function () {
    function render() {
      if (this.props.isEnabled) {
        return React.createElement(Components.ToolbarGroup, {
          lastChild: true
        }, this.renderDeletionStatus(), this.renderUndoButton(), this.renderArchiveButton(), this.renderViewControls(), this.renderPublishButton());
      }

      return null;
    }

    return render;
  }();

  (0, _createClass2.default)(PublishControls, [{
    key: "showChangesButtonLabel",
    get: function () {
      if (!this.showDiffs) {
        return "Show Changes";
      }

      return "Hide Changes";
    }
  }, {
    key: "showChangesButtoni18nKeyLabel",
    get: function () {
      if (!this.showDiffs) {
        return "app.showChanges";
      }

      return "app.hideChanges";
    }
  }, {
    key: "primaryRevision",
    get: function () {
      var revisions = this.props.revisions;

      if (Array.isArray(revisions) && revisions.length) {
        var primaryDocumentId = this.props.documentIds[0];
        return revisions.find(function (revision) {
          return revision.documentId === primaryDocumentId;
        });
      }

      return false;
    }
  }, {
    key: "revisionIds",
    get: function () {
      if (this.hasRevisions) {
        return this.props.revisions.map(function (revision) {
          return revision._id;
        });
      }

      return false;
    }
  }, {
    key: "hasRevisions",
    get: function () {
      return Array.isArray(this.props.revisions) && this.props.revisions.length;
    }
  }, {
    key: "diffs",
    get: function () {
      return this.props.revisions;
    }
  }, {
    key: "showDiffs",
    get: function () {
      return this.diffs && this.state.showDiffs;
    }
  }, {
    key: "isVisible",
    get: function () {
      if (Array.isArray(this.props.revisions) && this.props.revisions.length && this.primaryRevision) {
        var primaryRevisionObj = this.primaryRevision;

        if (primaryRevisionObj.documentData.isVisible) {
          return "public";
        }
      } else if (Array.isArray(this.props.documents) && this.props.documents.length) {
        var primaryDocument = this.props.documents[0];

        if (primaryDocument.isVisible) {
          return "public";
        }
      }

      return "private";
    }
    /**
     * Getter hasChanges
     * @return {Boolean} one or more revision has changes
     */

  }, {
    key: "hasChanges",
    get: function () {
      // Verify we even have any revision at all
      if (this.hasRevisions) {
        // Loop through all revisions to determine if they have changes
        var diffHasActualChanges = this.props.revisions.map(function (revision) {
          // We probably do have chnages to publish
          // Note: Sometimes "updatedAt" will cause false positives, but just incase, lets
          // enable the publish button anyway.
          if (Array.isArray(revision.diff) && revision.diff.length || revision.documentType !== "product") {
            return true;
          } // If all else fails, we will disable the button


          return false;
        }); // If even one revision has changes we should enable the publish button

        return diffHasActualChanges.some(function (element) {
          return element === true;
        });
      } // No revisions, no publishing


      return false;
    }
  }]);
  return PublishControls;
}(Component);

PublishControls.propTypes = {
  documentIds: PropTypes.arrayOf(PropTypes.string),
  documents: PropTypes.arrayOf(PropTypes.object),
  isEnabled: PropTypes.bool,
  isPreview: PropTypes.bool,
  onAction: PropTypes.func,
  onAddProduct: PropTypes.func,
  onPublishClick: PropTypes.func,
  onViewContextChange: PropTypes.func,
  onVisibilityChange: PropTypes.func,
  revisions: PropTypes.arrayOf(PropTypes.object),
  showViewAsControls: PropTypes.bool,
  translation: PropTypes.shape({
    lang: PropTypes.string
  })
};
PublishControls.defaultProps = {
  showViewAsControls: true
};
module.exportDefault(Translatable()(PublishControls));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/components/settings.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Translation;
module.watch(require("../../../ui/client/components"), {
  Translation: function (v) {
    Translation = v;
  }
}, 2);

var RevisionControlSettings =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(RevisionControlSettings, _Component);

  function RevisionControlSettings() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = RevisionControlSettings.prototype;

  _proto.render = function () {
    function render() {
      var message;

      if (this.settings.general.enabled) {
        message = React.createElement(Translation, {
          defaultValue: "Revision controls is enabled",
          i18nKey: "revisions.isEnabled"
        });
      } else {
        message = React.createElement(Translation, {
          defaultValue: "Revision controls is disabled",
          i18nKey: "revisions.isDisabled"
        });
      }

      return React.createElement("div", {
        className: "rui publish-controls"
      }, React.createElement("p", {
        className: "help-text"
      }, message));
    }

    return render;
  }();

  (0, _createClass2.default)(RevisionControlSettings, [{
    key: "settings",
    get: function () {
      return this.props.settings;
    }
  }]);
  return RevisionControlSettings;
}(Component);

RevisionControlSettings.propTypes = {
  checked: PropTypes.bool,
  label: PropTypes.string,
  onUpdateSettings: PropTypes.func,
  settings: PropTypes.object
};
module.exportDefault(RevisionControlSettings);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"simpleDiff.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/components/simpleDiff.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);

var SimpleDiff =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SimpleDiff, _Component);

  function SimpleDiff() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = SimpleDiff.prototype;

  _proto.renderDiff = function () {
    function renderDiff() {
      var diff = this.props.diff;
      return diff.map(function (change, index) {
        var rightHandSide = change.rhs && change.rhs.toString();
        var leftHandSide = change.lhs && change.lhs.toString();

        switch (change.kind) {
          // Array change
          case "A":
            return React.createElement("tr", {
              className: "success",
              key: index
            }, React.createElement("td", null, React.createElement("i", {
              className: "fa fa-plus"
            })), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, leftHandSide), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, rightHandSide));
          // Added property / element

          case "N":
            return React.createElement("tr", {
              className: "success",
              key: index
            }, React.createElement("td", null, React.createElement("i", {
              className: "fa fa-plus"
            })), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, leftHandSide), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, rightHandSide));
          // Edited property or element

          case "E":
            return React.createElement("tr", {
              className: "warning",
              key: index
            }, React.createElement("td", null, React.createElement("i", {
              className: "fa fa-pencil"
            })), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, leftHandSide), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, rightHandSide));
          // Removed property / element

          case "D":
            return React.createElement("tr", {
              className: "danger",
              key: index
            }, React.createElement("td", null, React.createElement("i", {
              className: "fa fa-times"
            })), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, leftHandSide), React.createElement("td", {
              style: {
                whiteSpace: "normal"
              }
            }, rightHandSide));

          default:
            return null;
        }
      });
    }

    return renderDiff;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", null, React.createElement("table", {
        className: "table table-bordered"
      }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null), React.createElement("th", null, "Current"), React.createElement("th", null, "Change"))), React.createElement("tbody", null, this.renderDiff())));
    }

    return render;
  }();

  return SimpleDiff;
}(Component);

SimpleDiff.defaultProps = {
  diff: []
};
SimpleDiff.propTypes = {
  diff: PropTypes.arrayOf(PropTypes.object)
};
module.exportDefault(SimpleDiff);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"publishContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/containers/publishContainer.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var PublishControls;
module.watch(require("../components/publishControls"), {
  "default": function (v) {
    PublishControls = v;
  }
}, 3);
var Revisions;
module.watch(require("../../../../../../lib/collections"), {
  Revisions: function (v) {
    Revisions = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var TranslationProvider;
module.watch(require("../../../ui/client/providers/translationProvider"), {
  "default": function (v) {
    TranslationProvider = v;
  }
}, 6);
var isRevisionControlEnabled;
module.watch(require("../../lib/api"), {
  isRevisionControlEnabled: function (v) {
    isRevisionControlEnabled = v;
  }
}, 7);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 8);

/*
 * PublishContainer is a container component connected to Meteor data source.
 */
var PublishContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PublishContainer, _Component);

  function PublishContainer() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handlePublishClick = function (revisions) {
      var productIds = _this.props.documents.filter(function (doc) {
        return doc.type === "simple";
      }).map(function (doc) {
        return doc._id;
      });

      if (Array.isArray(revisions) && revisions.length) {
        var documentIds = revisions.map(function (revision) {
          if (revision.parentDocument && revision.documentType !== "product") {
            return revision.parentDocument;
          }

          return revision.documentId;
        });
        var documentIdsSet = new Set(documentIds); // ensures they are unique

        documentIds = Array.from(documentIdsSet);
        Meteor.call("revisions/publish", documentIds, function (error, result) {
          if (result && result.status === "success") {
            var message = i18next.t("revisions.changedPublished", {
              defaultValue: "Changes published successfully"
            });
            Alerts.toast(message, "success");

            if (_this.props.onPublishSuccess) {
              _this.props.onPublishSuccess(result);
            } // Publish to catalog after revisions have been published


            _this.publishToCatalog("products", productIds);
          } else {
            Alerts.toast(error && error.message || result && result.status || i18next.t("app.error"), "error");
          }
        });
      } else {
        // Publish to catalog immediately if there are no revisions to publish beforehand
        _this.publishToCatalog("products", productIds);
      }
    }, _this.handlePublishActions = function (event, action, documentIds) {
      switch (action) {
        case "archive":
          if (_this.props.onAction) {
            _this.props.onAction(event, action, _this.props.documentIds);
          }

          break;

        case "discard":
          Meteor.call("revisions/discard", documentIds, function (error, result) {
            if (result === true) {
              var message = i18next.t("revisions.changesDiscarded", {
                defaultValue: "Changes discarded successfully"
              });
              Alerts.toast(message, "success");
            } else {
              var _message = i18next.t("revisions.noChangesDiscarded", {
                defaultValue: "There are no changes to discard"
              });

              Alerts.toast(_message, "warning");
            }
          });
          break;

        default:
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = PublishContainer.prototype;

  _proto.publishToCatalog = function () {
    function publishToCatalog(collection, documentIds) {
      Meteor.call("catalog/publish/" + collection, documentIds, function (error, result) {
        if (result) {
          Alerts.toast(i18next.t("admin.catalogProductPublishSuccess", {
            defaultValue: "Product published to catalog"
          }), "success");
        } else if (error) {
          Alerts.toast(error.message, "error");
        }
      });
    }

    return publishToCatalog;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(TranslationProvider, null, React.createElement(PublishControls, {
        documentIds: this.props.documentIds,
        documents: this.props.documents,
        isEnabled: this.props.isEnabled,
        onPublishClick: this.handlePublishClick,
        onAction: this.handlePublishActions,
        onVisibilityChange: this.props.onVisibilityChange,
        revisions: this.props.revisions,
        isPreview: this.props.isPreview
      }));
    }

    return render;
  }();

  return PublishContainer;
}(Component);

PublishContainer.propTypes = {
  documentIds: PropTypes.arrayOf(PropTypes.string),
  documents: PropTypes.arrayOf(PropTypes.object),
  isEnabled: PropTypes.bool,
  isPreview: PropTypes.bool,
  onAction: PropTypes.func,
  onPublishSuccess: PropTypes.func,
  onVisibilityChange: PropTypes.func,
  product: PropTypes.object,
  revisions: PropTypes.arrayOf(PropTypes.object)
};

function composer(props, onData) {
  var viewAs = Reaction.getUserPreferences("reaction-dashboard", "viewAs", "administrator");

  if (Array.isArray(props.documentIds) && props.documentIds.length) {
    var subscription = Meteor.subscribe("ProductRevisions", props.documentIds);

    if (subscription.ready()) {
      var revisions = Revisions.find({
        "$or": [{
          documentId: {
            $in: props.documentIds
          }
        }, {
          "documentData.ancestors": {
            $in: props.documentIds
          }
        }, {
          parentDocument: {
            $in: props.documentIds
          }
        }],
        "workflow.status": {
          $nin: ["revision/published"]
        }
      }).fetch();
      onData(null, {
        isEnabled: isRevisionControlEnabled(),
        documentIds: props.documentIds,
        documents: props.documents,
        revisions: revisions,
        isPreview: viewAs === "customer"
      });
      return;
    }
  }

  onData(null, {
    isEnabled: isRevisionControlEnabled(),
    isPreview: viewAs === "customer"
  });
}

module.exportDefault(composeWithTracker(composer)(PublishContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settingsContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/containers/settingsContainer.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  handlePublishClick: function () {
    return handlePublishClick;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var composeWithTracker;
module.watch(require("../../../components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var SettingsComponent;
module.watch(require("../components/settings"), {
  "default": function (v) {
    SettingsComponent = v;
  }
}, 4);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 5);

var RevisionSettingsContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(RevisionSettingsContainer, _Component);

  function RevisionSettingsContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleUpdateSettings = function (settings) {
      _this.setState({
        settings: settings
      }, function () {
        Meteor.call("revisions/settings/update", settings);
      });
    };

    _this.state = {
      settings: _this.props.packageInfo.settings
    };
    return _this;
  }

  var _proto = RevisionSettingsContainer.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState({
        settings: nextProps.packageInfo.settings
      });
    }

    return componentWillReceiveProps;
  }();

  /**
   * Publish container is a stateless container component connected to Meteor data source.
   * @return {PropTypes.node} react node
   */
  _proto.render = function () {
    function render() {
      return React.createElement("div", null, React.createElement(SettingsComponent, {
        onUpdateSettings: this.handleUpdateSettings,
        settings: this.settings
      }));
    }

    return render;
  }();

  (0, _createClass2.default)(RevisionSettingsContainer, [{
    key: "settings",
    get: function () {
      return this.state.settings;
    }
  }]);
  return RevisionSettingsContainer;
}(Component);

RevisionSettingsContainer.propTypes = {
  packageInfo: PropTypes.object
};

function handlePublishClick(revisions) {
  if (Array.isArray(revisions)) {
    var documentIds = revisions.map(function (revision) {
      return revision.documentId;
    });
    Meteor.call("revisions/publish", documentIds);
  }
}

function composer(props, onData) {
  var packageInfo = Packages.findOne({
    name: "reaction-revisions"
  });
  onData(null, {
    packageInfo: packageInfo
  });
}

module.exportDefault(composeWithTracker(composer)(RevisionSettingsContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/client/index.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/settings.html"));
module.watch(require("./templates/settings.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"api":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/lib/api/index.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./revisions"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"revisions.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/revisions/lib/api/revisions.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  getPackageSettings: function () {
    return getPackageSettings;
  },
  isRevisionControlEnabled: function () {
    return isRevisionControlEnabled;
  },
  RevisionApi: function () {
    return RevisionApi;
  }
});
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../lib/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);

function getPackageSettings() {
  var shopId = Reaction.getPrimaryShopId();
  var packageInfo = Packages.findOne({
    name: "reaction-revisions",
    shopId: shopId
  });

  if (packageInfo && packageInfo.enabled && packageInfo.settings) {
    return packageInfo.settings;
  }

  return null;
}

function isRevisionControlEnabled() {
  var settings = getPackageSettings();

  if (settings && settings.general && typeof settings.general.enabled === "boolean") {
    return settings.general.enabled;
  }

  return false;
}

var RevisionApi = {
  isRevisionControlEnabled: isRevisionControlEnabled,
  getPackageSettings: getPackageSettings
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"taxes":{"client":{"settings":{"custom.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/settings/custom.html                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.custom.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.custom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/settings/template.custom.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("customTaxRates");
Template["customTaxRates"] = new Template("Template.customTaxRates", (function() {
  var view = this;
  return [ HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("taxGrid"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", HTML.DIV({
    class: "pull-right"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("editButton"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "isEditing");
  }, function() {
    return [ "\n    ", HTML.DIV("\n    ", Blaze.If(function() {
      return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(view.lookup("taxSchema")),
          type: Spacebars.call("method-update"),
          meteormethod: Spacebars.call("taxes/editRate"),
          doc: Spacebars.call(view.lookup("taxRate")),
          id: Spacebars.call("customTaxRates-update-form"),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("country"),
              options: Spacebars.call(view.lookup("countryOptions")),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n\n          ", HTML.LABEL({
            class: "control-label"
          }, Blaze.View("lookup:afFieldLabelText", function() {
            return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
              name: "region"
            }));
          })), "\n          ", Blaze.If(function() {
            return Spacebars.call(view.lookup("statesForCountry"));
          }, function() {
            return [ "\n            ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("region"),
                value: Spacebars.call(view.lookup("region")),
                options: Spacebars.call(view.lookup("statesForCountry")),
                class: Spacebars.call("form-control")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afFieldInput"));
            }), "\n          " ];
          }, function() {
            return [ "\n            ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("region"),
                value: Spacebars.call(view.lookup("region")),
                class: Spacebars.call("form-control")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afFieldInput"));
            }), "\n          " ];
          }), "\n          ", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "region"
            }));
          }, function() {
            return [ "\n            ", HTML.SPAN({
              class: "help-block"
            }, Blaze.View("lookup:afFieldMessage", function() {
              return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
                name: "region"
              }));
            })), "\n          " ];
          }), "\n\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("postal"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("Postal Code")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("rate"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("Rate as a percentage")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("taxSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n\n    " ];
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(view.lookup("taxSchema")),
          type: Spacebars.call("method"),
          meteormethod: Spacebars.call("taxes/addRate"),
          id: Spacebars.call("customTaxRates-insert-form"),
          doc: Spacebars.call(view.lookup("taxRate")),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("country"),
              options: Spacebars.call(view.lookup("countryOptions")),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n\n          ", HTML.LABEL({
            class: "control-label"
          }, Blaze.View("lookup:afFieldLabelText", function() {
            return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
              name: "region"
            }));
          })), "\n          ", Blaze.If(function() {
            return Spacebars.call(view.lookup("statesForCountry"));
          }, function() {
            return [ "\n            ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("region"),
                value: Spacebars.call(view.lookup("region")),
                options: Spacebars.call(view.lookup("statesForCountry")),
                class: Spacebars.call("form-control")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afFieldInput"));
            }), "\n          " ];
          }, function() {
            return [ "\n            ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("region"),
                value: Spacebars.call(view.lookup("region")),
                class: Spacebars.call("form-control")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afFieldInput"));
            }), "\n          " ];
          }), "\n          ", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "region"
            }));
          }, function() {
            return [ "\n            ", HTML.SPAN({
              class: "help-block"
            }, Blaze.View("lookup:afFieldMessage", function() {
              return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
                name: "region",
                placeholder: "State/Region/Province"
              }));
            })), "\n          " ];
          }), "\n\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("postal"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("Postal Code")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("rate"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("Rate as a percentage")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("taxSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n    " ];
    }), "\n    "), "\n  " ];
  }) ];
}));

Template.__checkName("taxSettingsSubmitButton");
Template["taxSettingsSubmitButton"] = new Template("Template.taxSettingsSubmitButton", (function() {
  var view = this;
  return HTML.DIV({
    class: "clearfix"
  }, "\n    ", HTML.DIV({
    class: "pull-right"
  }, "\n      ", HTML.Raw('<button type="button" class="btn btn-primary cancel" data-i18n="app.cancel">Cancel</button>'), "\n      ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
  }, function() {
    return [ "\n      ", HTML.BUTTON({
      type: "button",
      class: "btn btn-primary delete",
      "data-i18n": "app.delete"
    }, "Delete"), "\n      " ];
  }), "\n      ", HTML.Raw('<button type="submit" class="btn btn-primary" data-i18n="app.saveChanges">Save Changes</button>'), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/settings/settings.html                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/settings/template.settings.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("taxSettings");
Template["taxSettings"] = new Template("Template.taxSettings", (function() {
  var view = this;
  return [ HTML.Raw("<!-- {{#autoForm collection=Collections.Packages schema=packageConfigSchema doc=packageData type=\"update\" id=\"taxsettings-update-form\" autosave=true}}\n        <div class=\"panel-body\">\n          {{> afQuickField name='settings.defaultTaxCode' options=taxCodes}}\n          {{> afQuickField name='settings.taxIncluded'}}\n          {{> afQuickField name='settings.taxShipping'}}\n        </div>\n    {{/autoForm}} -->\n\n    "), Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "taxSettings"
    }));
  }, function() {
    return [ "\n\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n        ", HTML.DIV({
      class: "panel-title"
    }, "\n          ", HTML.I({
      class: function() {
        return [ "fa fa-", Spacebars.mustache(view.lookup("name")) ];
      }
    }), "\n          ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n\n        "), "\n        ", HTML.DIV({
      class: "panel-controls"
    }, "\n          ", HTML.INPUT(HTML.Attrs({
      class: "checkbox-switch",
      type: "checkbox",
      name: "enabled",
      "data-id": function() {
        return Spacebars.mustache(view.lookup("packageId"));
      },
      "data-key": function() {
        return Spacebars.mustache(view.lookup("settingsKey"));
      }
    }, function() {
      return Spacebars.attrMustache(view.lookup("checked"), view.lookup("enabled"));
    })), "\n        "), "\n      "), "\n      ", HTML.DIV({
      class: function() {
        return [ "panel-body ", Spacebars.mustache(view.lookup("shown"), view.lookup("enabled")) ];
      }
    }, "\n        ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n      "), "\n    "), "\n    " ];
  }) ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"custom.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/settings/custom.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 4);
var Shops;
module.watch(require("../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 5);
var Countries;
module.watch(require("../../../../../../client/collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 6);
var Taxes, TaxCodes;
module.watch(require("../../lib/collections"), {
  Taxes: function (v) {
    Taxes = v;
  },
  TaxCodes: function (v) {
    TaxCodes = v;
  }
}, 7);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 8);
var TaxSchema;
module.watch(require("../../lib/collections/schemas"), {
  Taxes: function (v) {
    TaxSchema = v;
  }
}, 9);
var IconButton, Loading, SortableTable;
module.watch(require("../../../ui/client/components"), {
  IconButton: function (v) {
    IconButton = v;
  },
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 10);

/* eslint no-shadow: ["error", { "allow": ["options"] }] */

/* eslint no-unused-vars: ["error", { "argsIgnorePattern": "[oO]ptions" }] */
Template.customTaxRates.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("Taxes");
  });
  this.state = new ReactiveDict();
  this.state.setDefault({
    isEditing: false,
    editingId: null
  });
});
Template.customTaxRates.helpers({
  editButton: function () {
    var instance = Template.instance();
    var state = instance.state;
    var isEditing = state.equals("isEditing", true);
    var editingId = state.get("editingId"); // toggle edit state

    if (!isEditing) {
      editingId = null;
    } // return icon


    return {
      component: IconButton,
      icon: "fa fa-plus",
      onIcon: "fa fa-pencil",
      toggle: true,
      toggleOn: isEditing,
      style: {
        position: "relative",
        top: "-25px",
        right: "8px"
      },
      onClick: function () {
        // remove active rows from grid
        $(".tax-grid-row").removeClass("active");
        return state.set({
          isEditing: !isEditing,
          editingId: editingId
        });
      }
    };
  },
  taxGrid: function () {
    var filteredFields = ["taxCode", "rate", "country", "region", "postal"];
    var noDataMessage = i18next.t("admin.taxSettings.noCustomTaxRatesFound");
    var instance = Template.instance(); //
    // helper to get and select row from griddle
    // into blaze for to select tax row for editing
    //

    function editRow(options) {
      var currentId = instance.state.get("editingId"); // isEditing is tax rate object

      instance.state.set("isEditing", options.props.data);
      instance.state.set("editingId", options.props.data._id); // toggle edit mode clicking on same row

      if (currentId === options.props.data._id) {
        instance.state.set("isEditing", null);
        instance.state.set("editingId", null);
      }
    } //
    // helper adds a class to every grid row
    //


    var customRowMetaData = {
      bodyCssClassName: function () {
        return "tax-grid-row";
      }
    }; // add i18n handling to headers

    var customColumnMetadata = [];
    filteredFields.forEach(function (field) {
      var columnMeta = {
        accessor: field,
        Header: i18next.t("admin.taxGrid." + field)
      };
      customColumnMetadata.push(columnMeta);
    }); // return tax Grid

    return {
      component: SortableTable,
      publication: "Taxes",
      collection: Taxes,
      matchingResultsCount: "taxes-count",
      showFilter: true,
      rowMetadata: customRowMetaData,
      filteredFields: filteredFields,
      columns: filteredFields,
      noDataMessage: noDataMessage,
      onRowClick: editRow,
      columnMetadata: customColumnMetadata,
      externalLoadingComponent: Loading
    };
  },
  instance: function () {
    var instance = Template.instance();
    return instance;
  },
  // schema for forms
  taxSchema: function () {
    return TaxSchema;
  },
  // list of countries for tax input
  countryOptions: function () {
    return Countries.find().fetch();
  },
  statesForCountry: function () {
    var shop = Shops.findOne();
    var selectedCountry = AutoForm.getFieldValue("country");

    if (!selectedCountry) {
      return false;
    }

    if ((shop !== null ? shop.locales.countries[selectedCountry].states : undefined) === null) {
      return false;
    }

    var options = [];

    if (shop && (0, _typeof2.default)(shop.locales.countries[selectedCountry].states) === "object") {
      for (var state in meteorBabelHelpers.sanitizeForInObject(shop.locales.countries[selectedCountry].states)) {
        if ({}.hasOwnProperty.call(shop.locales.countries[selectedCountry].states, state)) {
          var locale = shop.locales.countries[selectedCountry].states[state];
          options.push({
            label: locale.name,
            value: state
          });
        }
      }
    }

    return options;
  },
  taxRate: function () {
    var shop = Shops.findOne();
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var tax = Taxes.findOne(id) || {}; // enforce a default country that makes sense.

    if (!tax.country) {
      if (shop && (0, _typeof2.default)(shop.addressBook) === "object") {
        tax.country = shop.addressBook[0].country;
      }
    }

    return tax;
  },
  taxCodes: function () {
    var instance = Template.instance();

    if (instance.subscriptionsReady()) {
      var taxCodes = TaxCodes.find().fetch();
      var options = [{
        label: i18next.t("admin.taxSettings.taxable"),
        value: "RC_TAX"
      }, {
        label: i18next.t("admin.taxSettings.nottaxable"),
        value: "RC_NOTAX"
      }];

      for (var _iterator = taxCodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _taxCode = _ref;
        options.push({
          label: i18next.t(_taxCode.label),
          value: _taxCode.id
        });
      }

      return options;
    }

    return [];
  }
}); //
// on submit lets clear the form state
//

Template.customTaxRates.events({
  "submit #customTaxRates-update-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: false,
      editingId: null
    });
  },
  "submit #customTaxRates-insert-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: true,
      editingId: null
    });
  },
  "click .cancel, .tax-grid-row .active": function () {
    var instance = Template.instance(); // remove active rows from grid

    instance.state.set({
      isEditing: false,
      editingId: null
    }); // ugly hack

    $(".tax-grid-row").removeClass("active");
  },
  "click .delete": function () {
    var confirmTitle = i18next.t("admin.taxSettings.confirmRateDelete");
    var confirmButtonText = i18next.t("app.delete");
    var instance = Template.instance();
    var id = instance.state.get("editingId"); // confirm delete

    Alerts.alert({
      title: confirmTitle,
      type: "warning",
      showCancelButton: true,
      confirmButtonText: confirmButtonText
    }, function (isConfirm) {
      if (isConfirm) {
        if (id) {
          Meteor.call("taxes/deleteRate", id);
          instance.state.set({
            isEditing: false,
            editingId: null
          });
        }
      }
    });
  },
  "click .tax-grid-row": function (event) {
    // toggle all rows off, then add our active row
    $(".tax-grid-row").removeClass("active");
    Template.instance().$(event.currentTarget).addClass("active");
  }
}); //
// Hooks for update and insert forms
//

AutoForm.hooks({
  "customTaxRates-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.taxSettings.shopCustomTaxRatesSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.taxSettings.shopCustomTaxRatesFailed") + " " + error, "error");
    }
  },
  "customTaxRates-insert-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.taxSettings.shopCustomTaxRatesSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.taxSettings.shopCustomTaxRatesFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/settings/settings.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var TaxCodes;
module.watch(require("../../lib/collections"), {
  TaxCodes: function (v) {
    TaxCodes = v;
  }
}, 2);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 3);

/*
 * Template taxes Helpers
 */
Template.taxSettings.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("TaxCodes");
  });
});
Template.taxSettings.helpers({
  checked: function (enabled) {
    if (enabled === true) {
      return "checked";
    }

    return "";
  },
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  },
  // prepare and return taxCodes
  // for default shop value
  //
  taxCodes: function () {
    var instance = Template.instance();

    if (instance.subscriptionsReady()) {
      var taxCodes = TaxCodes.find().fetch();
      var options = [{
        label: i18next.t("app.auto"),
        value: "none"
      }];

      for (var _iterator = taxCodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _taxCode = _ref;
        options.push({
          label: i18next.t(_taxCode.label),
          value: _taxCode.id
        });
      }

      return options;
    }

    return undefined;
  }
});
Template.taxSettings.events({
  /**
   * taxSettings settings update enabled status for tax service on change
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "change input[name=enabled]": function (event) {
    var settingsKey = event.target.getAttribute("data-key");
    var packageId = event.target.getAttribute("data-id");
    var fields = [{
      property: "enabled",
      value: event.target.checked
    }]; // save tax registry updates

    Meteor.call("registry/update", packageId, settingsKey, fields);
  },

  /**
   * taxSettings settings show/hide secret key for a tax service
   * @param  {event} event    jQuery Event
   * @return {void}
   */
  "click [data-event-action=showSecret]": function (event) {
    var button = Template.instance().$(event.currentTarget);
    var input = button.closest(".form-group").find("input[name=secret]");

    if (input.attr("type") === "password") {
      input.attr("type", "text");
      button.html("Hide");
    } else {
      input.attr("type", "password");
      button.html("Show");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/client/index.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/custom.html"));
module.watch(require("./settings/custom.js"));
module.watch(require("./settings/settings.html"));
module.watch(require("./settings/settings.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"config.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/schemas/config.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  TaxPackageConfig: function () {
    return TaxPackageConfig;
  }
});
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 0);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 1);
var Taxes;
module.watch(require("./taxes"), {
  Taxes: function (v) {
    Taxes = v;
  }
}, 2);
var TaxPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.defaultTaxCode": {
    type: String,
    optional: true
  },
  "settings.taxIncluded": {
    type: Boolean,
    defaultValue: false
  },
  "settings.taxShipping": {
    type: Boolean,
    defaultValue: false
  },
  "settings.rates": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.rates.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "settings.rates.taxes": {
    type: Array,
    optional: true
  },
  "settings.rates.taxes.$": {
    type: Taxes
  }
});
registerSchema("TaxPackageConfig", TaxPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/schemas/index.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./taxrates"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./taxes"), {
  "*": module.makeNsSetter()
}, 1);
module.watch(require("./taxcodes"), {
  "*": module.makeNsSetter()
}, 2);
module.watch(require("./config"), {
  "*": module.makeNsSetter()
}, 3);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxcodes.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/schemas/taxcodes.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  TaxCodes: function () {
    return TaxCodes;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var TaxCodes = new SimpleSchema({
  "id": {
    type: String,
    label: "Tax Id",
    unique: true
  },
  "shopId": {
    type: String
  },
  "taxCode": {
    type: String,
    label: "Tax Code"
  },
  "taxCodeProvider": {
    type: String,
    label: "Tax Code Provider"
  },
  "ssuta": {
    type: Boolean,
    label: "Streamlined Sales Tax",
    optional: true,
    defaultValue: false
  },
  "title": {
    type: String,
    optional: true
  },
  "label": {
    type: String,
    optional: true
  },
  "parent": {
    type: String,
    optional: true
  },
  "children": {
    type: Array,
    optional: true
  },
  "children.$": {
    type: Object,
    blackbox: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("TaxCodes", TaxCodes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxes.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/schemas/taxes.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Taxes: function () {
    return Taxes;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var shopIdAutoValue;
module.watch(require("../../../../../../../lib/collections/schemas/helpers"), {
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);
var Taxes = new SimpleSchema({
  "shopId": {
    type: String,
    autoValue: shopIdAutoValue,
    index: 1,
    label: "Taxes shopId"
  },
  "taxCode": {
    type: String,
    label: "Tax Identifier",
    defaultValue: "RC_TAX",
    index: 1
  },
  "cartMethod": {
    label: "Calculation Method",
    type: String,
    allowedValues: ["unit", "row", "total"],
    defaultValue: "total"
  },
  "taxLocale": {
    label: "Taxation Location",
    type: String,
    allowedValues: ["shipping", "billing", "origination", "destination"],
    defaultValue: "destination"
  },
  "taxShipping": {
    label: "Tax Shipping",
    type: Boolean,
    defaultValue: false
  },
  "taxIncluded": {
    label: "Taxes included in product prices",
    type: Boolean,
    defaultValue: false,
    optional: true
  },
  "discountsIncluded": {
    label: "Tax before discounts",
    type: Boolean,
    defaultValue: false,
    optional: true
  },
  "region": {
    label: "State/Province/Region",
    type: String,
    optional: true,
    index: 1
  },
  "postal": {
    label: "ZIP/Postal Code",
    type: String,
    optional: true,
    index: 1
  },
  "country": {
    type: String,
    label: "Country",
    optional: true,
    index: 1
  },
  "isCommercial": {
    label: "Commercial address.",
    type: Boolean,
    optional: true
  },
  "rate": Number,
  "method": {
    type: Array,
    optional: true,
    label: "Tax Methods"
  },
  "method.$": {
    type: Object
  },
  "method.$.plugin": {
    type: String,
    label: "Plugin",
    defaultValue: "Custom",
    optional: true
  },
  "method.$.enabled": {
    type: Boolean,
    label: "Enabled",
    defaultValue: true,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Taxes", Taxes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxrates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/schemas/taxrates.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  TaxRates: function () {
    return TaxRates;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var TaxRates = new SimpleSchema({
  country: {
    type: String
  },
  county: {
    type: String,
    optional: true
  },
  postal: {
    type: String,
    optional: true
  },
  rate: Number
}, {
  check: check,
  tracker: Tracker
});
registerSchema("TaxRates", TaxRates);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/collections.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Taxes: function () {
    return Taxes;
  },
  TaxCodes: function () {
    return TaxCodes;
  }
});
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 0);
var Schemas;
module.watch(require("./schemas"), {
  "*": function (v) {
    Schemas = v;
  }
}, 1);
var Taxes = new Mongo.Collection("Taxes");
Taxes.attachSchema(Schemas.Taxes);
/**
* TaxCodes Collection
*/

var TaxCodes = new Mongo.Collection("TaxCodes");
TaxCodes.attachSchema(Schemas.TaxCodes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/taxes/lib/collections/index.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./collections"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"templates":{"client":{"templates":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/templates/client/templates/settings.html                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/templates/client/templates/template.settings.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("templateSettings");
Template["templateSettings"] = new Template("Template.templateSettings", (function() {
  var view = this;
  return [ HTML.DIV({
    class: "panel panel-default"
  }, "\n    ", HTML.DIV({
    class: "panel-body"
  }, "\n      ", HTML.DIV({
    class: "col-md-12"
  }, "\n        ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("templateGrid"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n      "), "\n    "), "\n  "), "\n\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "isEditing");
  }, function() {
    return [ "\n    ", Blaze.If(function() {
      return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
    }, function() {
      return [ "\n      ", Blaze.If(function() {
        return Spacebars.call(view.lookup("typeEmail"));
      }, function() {
        return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
          return {
            collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Templates")),
            schema: Spacebars.call(view.lookup("emailTemplateSchema")),
            id: Spacebars.call("email-template-edit-form"),
            template: Spacebars.call("bootstrap3-inline"),
            doc: Spacebars.call(view.lookup("template"))
          };
        }, function() {
          return Spacebars.include(view.lookupTemplate("autoForm"), function() {
            return [ "\n\n            ", HTML.DIV({
              class: "panel panel-default"
            }, "\n              ", HTML.DIV({
              class: "panel-heading",
              "data-i18n": "templateUpdateForm.emailTemplates.updateEmailTemplate"
            }, "Update email template"), "\n              ", HTML.DIV({
              class: "panel-body"
            }, "\n                ", HTML.DIV({
              class: "col-md-12 form-group"
            }, "\n                  ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("title"),
                class: Spacebars.call("form-control")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afQuickField"));
            }), "\n                  ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("name"),
                class: Spacebars.call("form-control"),
                disabled: Spacebars.call(true)
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afQuickField"));
            }), "\n                  ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("language"),
                class: Spacebars.call("form-control"),
                disabled: Spacebars.call(true)
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afQuickField"));
            }), "\n                  ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("subject"),
                class: Spacebars.call("form-control")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afQuickField"));
            }), "\n                  ", Blaze._TemplateWith(function() {
              return {
                name: Spacebars.call("template"),
                label: Spacebars.call("HTML"),
                class: Spacebars.call("form-control"),
                type: Spacebars.call("textarea"),
                rows: Spacebars.call("15")
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("afQuickField"));
            }), "\n                "), "\n              "), "\n\n              ", HTML.DIV({
              class: "panel-footer"
            }, "\n                ", HTML.DIV({
              class: "right"
            }, "\n                  ", Blaze._TemplateWith(function() {
              return {
                instance: Spacebars.call(view.lookup("instance"))
              };
            }, function() {
              return Spacebars.include(view.lookupTemplate("templateSubmitButton"));
            }), "\n                "), "\n              "), "\n            "), "\n\n          " ];
          });
        }), "\n        "), "\n      " ];
      }, function() {
        return [ "\n      ", HTML.DIV("\n        ", HTML.DIV({
          class: "panel panel-default"
        }, "\n          ", HTML.DIV({
          class: "panel-heading",
          "data-i18n": "templateUpdateForm.reactTemplates.updateReactTemplate"
        }, "Update React template"), "\n          ", HTML.DIV({
          class: "panel-body"
        }, "\n            ", HTML.DIV({
          class: "col-md-12"
        }, "\n              ", HTML.DIV({
          class: "alert alert-info"
        }, "\n                ", HTML.SPAN({
          "data-i18n": "templateUpdateForm.reactTemplates.updateUnavailable"
        }, "React templates cannot be edited through this interface"), "\n              "), "\n            "), "\n          "), "\n        "), "\n      "), "\n      " ];
      }), "\n    " ];
    }), "\n  " ];
  }) ];
}));

Template.__checkName("templateSubmitButton");
Template["templateSubmitButton"] = new Template("Template.templateSubmitButton", (function() {
  var view = this;
  return HTML.Raw('<div class="clearfix">\n    <div class="pull-right">\n      <button type="button" class="btn btn-primary cancel" data-i18n="app.cancel">Cancel</button>\n      <button type="submit" class="btn btn-primary" data-i18n="app.saveChanges">Save Changes</button>\n    </div>\n  </div>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/templates/client/templates/settings.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 2);
var Blaze;
module.watch(require("meteor/blaze"), {
  Blaze: function (v) {
    Blaze = v;
  }
}, 3);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 4);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 5);
var Loading, SortableTable;
module.watch(require("../../../ui/client/components"), {
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 6);
var EmailTemplates;
module.watch(require("../../lib/collections/schemas"), {
  EmailTemplates: function (v) {
    EmailTemplates = v;
  }
}, 7);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 8);
var Templates;
module.watch(require("../../../../../../lib/collections"), {
  Templates: function (v) {
    Templates = v;
  }
}, 9);

/*
 * template templateSettings onCreated
 */
Template.templateSettings.onCreated(function () {
  var _this = this;

  // Subscribe to Templates collections
  this.autorun(function () {
    _this.subscribe("Templates");
  }); // Initiate State

  this.state = new ReactiveDict();
  this.state.setDefault({
    isEditing: false,
    editingId: null
  });
});
/*
 * template templateSettings helpers
 */

Template.templateSettings.helpers({
  templateGrid: function () {
    var filteredFields = ["title", "type", "language"];
    var noDataMessage = i18next.t("templateGrid.noTemplatesFound");
    var instance = Template.instance(); //
    // helper to get and select row from griddle
    // into blaze to get correct template to edit
    //

    function editRow(options) {
      var currentId = instance.state.get("editingId"); // isEditing is current template

      instance.state.set("isEditing", options.props.data);
      instance.state.set("editingId", options.props.data._id); // toggle edit mode clicking on same row

      if (currentId === options.props.data._id) {
        instance.state.set("isEditing", null);
        instance.state.set("editingId", null);
      }
    } // helper adds a class to every grid row


    var customRowMetaData = {
      bodyCssClassName: function () {
        return "template-grid-row";
      }
    }; // add i18n handling to headers

    var customColumnMetadata = [];
    filteredFields.forEach(function (field) {
      var columnMeta = {
        accessor: field,
        // name of field
        Header: i18next.t("templateGrid.columns." + field) // name to display

      };
      customColumnMetadata.push(columnMeta);
    }); // return template Grid

    return {
      component: SortableTable,
      publication: "Templates",
      collection: Templates,
      matchingResultsCount: "templates-count",
      showFilter: true,
      rowMetadata: customRowMetaData,
      filteredFields: filteredFields,
      columns: filteredFields,
      noDataMessage: noDataMessage,
      onRowClick: editRow,
      columnMetadata: customColumnMetadata,
      externalLoadingComponent: Loading
    };
  },
  instance: function () {
    var instance = Template.instance();
    return instance;
  },
  template: function () {
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var template = Templates.findOne(id) || {};
    return template;
  },
  typeEmail: function () {
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var template = Templates.findOne(id) || {};

    if (template.type === "email") {
      return true;
    }

    return false;
  },
  emailTemplateSchema: function () {
    return EmailTemplates;
  }
});
/*
 * template templateSettings events
 */

Template.templateSettings.events({
  "click .template-grid-row": function (event) {
    // toggle all rows off, then add our active row
    $(".template-grid-row").removeClass("active");
    Template.instance().$(event.currentTarget).addClass("active");
  },
  "submit #email-template-edit-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: false,
      editingId: null
    });
  },
  "click .cancel, .template-grid-row .active": function () {
    var instance = Template.instance(); // remove active rows from grid

    instance.state.set({
      isEditing: false,
      editingId: null
    });
    $(".template-grid-row").removeClass("active");
  }
});
AutoForm.hooks({
  "email-template-edit-form": {
    onSubmit: function (insertDoc) {
      var _this2 = this;

      this.event.preventDefault();
      var templateId = this.docId;
      Meteor.call("templates/email/update", templateId, insertDoc, function (error, result) {
        if (error) {
          Alerts.toast(i18next.t("templateUpdateForm.alerts.failedToUpdate", {
            err: error.message
          }), "error");

          _this2.done(new Error("Failed to update template: ", error));

          return false;
        }

        if (result) {
          Alerts.toast(i18next.t("templateUpdateForm.alerts.templateUpdated", "Template successfully updated"), "success");

          _this2.done();
        }
      });
    }
  }
});

Blaze.TemplateInstance.prototype.parentTemplate = function () {
  var levels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var view = Blaze.currentView;
  var numLevel = levels;

  while (view) {
    if (view.name.substring(0, 9) === "Template." && !numLevel) {
      return view.templateInstance();
    }

    numLevel -= 1;
    view = view.parentView;
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/templates/client/index.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/settings.html"));
module.watch(require("./templates/settings.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"emailtemplates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/templates/lib/collections/schemas/emailtemplates.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  EmailTemplates: function () {
    return EmailTemplates;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var Templates;
module.watch(require("../../../../../../../lib/collections"), {
  Templates: function (v) {
    Templates = v;
  }
}, 3);
var shopIdAutoValue;
module.watch(require("../../../../../../../lib/collections/schemas/helpers"), {
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  }
}, 4);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 5);
var EmailTemplates = new SimpleSchema({
  "shopId": {
    type: String,
    index: 1,
    autoValue: shopIdAutoValue,
    label: "Template ShopId"
  },
  "name": {
    type: String,
    optional: true
  },
  "priority": {
    type: SimpleSchema.Integer,
    optional: true,
    defaultValue: 1
  },
  "enabled": {
    type: Boolean,
    defaultValue: true
  },
  "route": {
    type: String,
    optional: true
  },
  "audience": {
    type: Array,
    optional: true
  },
  "audience.$": {
    type: String
  },
  "type": {
    type: String,
    defaultValue: "email",
    optional: true
  },
  "provides": {
    type: String,
    defaultValue: "template"
  },
  "block": {
    type: String,
    optional: true
  },
  "defaultData": {
    type: Object,
    blackbox: true,
    optional: true
  },
  "template": {
    type: String,
    optional: true
  },
  "parser": {
    type: String,
    optional: true
  },
  "language": {
    type: String,
    optional: true,
    defaultValue: "en"
  },
  "source": {
    type: String,
    optional: true
  },
  "title": {
    type: String,
    optional: true
  },
  "subject": {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("EmailTemplates", EmailTemplates);
Templates.attachSchema(EmailTemplates, {
  selector: {
    type: "email"
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/templates/lib/collections/schemas/index.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./emailtemplates"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"discounts":{"lib":{"collections":{"schemas":{"config.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/discounts/lib/collections/schemas/config.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountsPackageConfig: function () {
    return DiscountsPackageConfig;
  }
});
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 0);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 1);
var Discounts;
module.watch(require("./discounts"), {
  Discounts: function (v) {
    Discounts = v;
  }
}, 2);
var DiscountsPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.rates": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.rates.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "settings.rates.discounts": {
    type: Array,
    optional: true
  },
  "settings.rates.discounts.$": {
    type: Discounts
  }
});
registerSchema("DiscountsPackageConfig", DiscountsPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"discounts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/discounts/lib/collections/schemas/discounts.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Transactions: function () {
    return Transactions;
  },
  Discounts: function () {
    return Discounts;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var shopIdAutoValue;
module.watch(require("../../../../../../../lib/collections/schemas/helpers"), {
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);
var Transactions = new SimpleSchema({
  cartId: {
    type: String,
    index: 1
  },
  userId: {
    type: String,
    index: 1
  },
  appliedAt: {
    type: Date,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Transactions", Transactions);
/*
* Discounts Schema
*/

var Discounts = new SimpleSchema({
  "shopId": {
    type: String,
    autoValue: shopIdAutoValue,
    index: 1,
    label: "Discounts shopId"
  },
  "label": {
    type: String,
    optional: true
  },
  "description": {
    type: String,
    optional: true
  },
  "discountMethod": {
    label: "Discount Method Type",
    type: String,
    index: 1,
    allowedValues: ["code", "rate"]
  },
  // discount is allowed to be string or number.
  // it's a formula value (could be shipping code)
  "discount": {
    type: String,
    optional: true
  },
  "transactions": {
    type: Array,
    optional: true
  },
  "transactions.$": {
    type: Transactions
  },
  "calculation": {
    type: Object,
    optional: true,
    label: "Calculation",
    defaultValue: {}
  },
  "calculation.method": {
    type: String,
    index: 1,
    defaultValue: "discount",
    allowedValues: ["credit", "discount", "sale", "shipping"]
  },
  "conditions": {
    type: Object,
    optional: true,
    label: "Conditions",
    defaultValue: {}
  },
  "conditions.order": {
    type: Object,
    defaultValue: {}
  },
  "conditions.order.min": {
    type: Number,
    label: "Mininum",
    defaultValue: 0.00
  },
  "conditions.order.max": {
    type: Number,
    label: "Maximum",
    optional: true
  },
  "conditions.order.startDate": {
    type: Date,
    label: "Start",
    optional: true
  },
  "conditions.order.endDate": {
    type: Date,
    label: "End",
    optional: true
  },
  "conditions.enabled": {
    type: Boolean,
    label: "Enabled",
    defaultValue: true,
    optional: true
  },
  "conditions.audience": {
    type: Array,
    optional: true,
    label: "Audience"
  },
  "conditions.audience.$": {
    type: String,
    optional: true,
    label: "Audience"
  },
  "conditions.permissions": {
    type: Array,
    optional: true,
    label: "Permissions"
  },
  "conditions.permissions.$": {
    type: String,
    optional: true,
    label: "Permission"
  },
  "conditions.products": {
    type: Array,
    optional: true,
    label: "Products"
  },
  "conditions.products.$": {
    type: String,
    optional: true,
    label: "Product"
  },
  "conditions.tags": {
    type: Array,
    optional: true,
    label: "Tags"
  },
  "conditions.tags.$": {
    type: String,
    optional: true,
    label: "Tag"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Discounts", Discounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/discounts/lib/collections/schemas/index.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./discounts"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./config"), {
  "*": module.makeNsSetter()
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"client":{"components":{"form.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/discounts/client/components/form.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  "default": function () {
    return DiscountForm;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var debounce;
module.watch(require("lodash/debounce"), {
  "default": function (v) {
    debounce = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Translation;
module.watch(require("../../../ui/client/components"), {
  Translation: function (v) {
    Translation = v;
  }
}, 5);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 6);

var DiscountForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(DiscountForm, _Component);

  function DiscountForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      discount: _this.props.discount,
      validationMessage: null,
      validatedInput: _this.props.validatedInput || false,
      attempts: 0,
      discountApplied: false
    }; // debounce helper so to wait on user input

    _this.debounceDiscounts = debounce(function () {
      _this.setState({
        validationMessage: ""
      });

      var discount = _this.state.discount; // handle discount code validation messages after attempt to apply

      Meteor.call("discounts/codes/apply", _this.props.id, discount, _this.props.collection, function (error, result) {
        if (error) {
          Alerts.toast(i18next.t(error.reason), "error");
        }

        if ((0, _typeof2.default)(result) === "object") {
          _this.setState({
            validationMessage: result
          });
        } else if (result !== 1) {
          // if validationMessage isn't an object with i18n
          // we will display an elliptical that's not
          // actually done here though, just bit of foolery
          _this.timerId = Meteor.setTimeout(function () {
            _this.setState({
              validationMessage: "..."
            });
          }, 2000);
        }
      });
    }, 800);
    _this.handleChange = _this.handleChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = DiscountForm.prototype;

  _proto.componentWillUnmount = function () {
    function componentWillUnmount() {
      if (this.timerId) Meteor.clearInterval(this.timerId);
    }

    return componentWillUnmount;
  }(); // handle apply


  _proto.renderApplied = function () {
    function renderApplied() {
      return React.createElement(Components.Button, {
        className: {
          "btn": false,
          "btn-default": false
        },
        tagName: "span",
        label: "Discount submitted.",
        i18nKeyLabel: "discounts.submitted",
        onClick: this.handleClick
      });
    }

    return renderApplied;
  }(); // handle keydown and change events


  _proto.handleChange = function () {
    function handleChange(event) {
      var attempts = this.state.attempts; // ensure we don't submit on enter

      if (event.keyCode === 13) {
        event.preventDefault();
        event.stopPropagation();
      } // clear input if user hits escape key


      if (event.keyCode === 27) {
        return this.setState({
          discount: "",
          validatedInput: false,
          attempts: 0,
          discountApplied: false,
          validationMessage: null
        });
      }

      this.setState({
        discount: event.target.value,
        attempts: attempts + 1
      }); // TODO: this.debounce doesn't always need to exec we should add some logic to determine based on attempts or some other
      // cleverness if now is a good time to apply the code.

      this.debounceDiscounts();
    }

    return handleChange;
  }(); // handle display or not


  _proto.handleClick = function () {
    function handleClick(event) {
      event.preventDefault();
      this.setState({
        validatedInput: true
      });
    }

    return handleClick;
  }(); // loader button


  _proto.loader = function () {
    function loader() {
      var _state = this.state,
          attempts = _state.attempts,
          discount = _state.discount,
          validationMessage = _state.validationMessage;
      var loader;

      if (validationMessage && validationMessage.i18nKeyLabel && attempts > 3) {
        loader = React.createElement(Translation, {
          defaultValue: validationMessage.i18nKeyLabel,
          i18nKey: validationMessage.i18nKey
        });
      } else if (validationMessage) {
        loader = React.createElement("i", {
          className: "fa fa-ellipsis-h fa-fw"
        });
      } else if (discount && discount.length >= 10 && attempts >= 12) {
        loader = React.createElement("i", {
          className: "fa fa-stop-circle fa-fw"
        });
      } else if (discount && discount.length >= 2 && attempts >= 2) {
        loader = React.createElement("i", {
          className: "fa fa-circle-o-notch fa-spin fa-fw"
        });
      } else {
        loader = React.createElement("i", {
          className: "fa fa-search fa-fw"
        });
      }

      return loader;
    }

    return loader;
  }(); // render discount form


  _proto.renderDiscountForm = function () {
    function renderDiscountForm() {
      return React.createElement("form", null, React.createElement("label", {
        htmlFor: "discount-url"
      }, React.createElement(Translation, {
        defaultValue: "Discount Code",
        i18nKey: "discounts.discountLabel"
      })), React.createElement("div", {
        className: "input-group"
      }, React.createElement("input", {
        onChange: this.handleChange,
        onKeyDown: this.handleChange,
        className: "form-control",
        id: "discount-input",
        "aria-describedby": "discount-input-addon"
      }), React.createElement("span", {
        className: "input-group-addon",
        id: "discount-input-addon"
      }, this.loader())));
    }

    return renderDiscountForm;
  }(); // have a code link


  _proto.renderDiscountLink = function () {
    function renderDiscountLink() {
      return React.createElement(Components.Button, {
        className: {
          "btn": false,
          "btn-default": false
        },
        tagName: "span",
        label: "Have a code? Enter it here.",
        i18nKeyLabel: "discounts.enterItHere",
        onClick: this.handleClick
      });
    }

    return renderDiscountLink;
  }(); // render discount code input form


  _proto.render = function () {
    function render() {
      var _state2 = this.state,
          discountApplied = _state2.discountApplied,
          validatedInput = _state2.validatedInput;

      if (discountApplied === true && validatedInput === true) {
        return this.renderApplied();
      } else if (validatedInput === true) {
        return this.renderDiscountForm();
      }

      return this.renderDiscountLink();
    }

    return render;
  }();

  return DiscountForm;
}(Component);

DiscountForm.propTypes = {
  collection: PropTypes.string,
  discount: PropTypes.string,
  id: PropTypes.string,
  validatedInput: PropTypes.bool
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"list.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/discounts/client/components/list.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Translation, IconButton;
module.watch(require("../../../ui/client/components"), {
  Translation: function (v) {
    Translation = v;
  },
  IconButton: function (v) {
    IconButton = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var DiscountForm;
module.watch(require("./form"), {
  "default": function (v) {
    DiscountForm = v;
  }
}, 6);

var DiscountList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(DiscountList, _Component);

  function DiscountList(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  } // handle remove click


  var _proto = DiscountList.prototype;

  _proto.handleClick = function () {
    function handleClick(event, codeId) {
      return Meteor.call("discounts/codes/remove", this.props.id, codeId, this.props.collection);
    }

    return handleClick;
  }(); // list items


  _proto.renderList = function () {
    function renderList() {
      var _this2 = this;

      var listItems = this.props.listItems.map(function (listItem) {
        return _this2.renderItem(listItem.id, listItem.code);
      });
      return React.createElement("div", {
        className: "rui list-group"
      }, listItems);
    }

    return renderList;
  }(); // render item


  _proto.renderItem = function () {
    function renderItem(_id, code) {
      var _this3 = this;

      var TrashCan;

      if (this.props.collection !== "Orders") {
        TrashCan = React.createElement("div", {
          className: "pull-right"
        }, React.createElement(IconButton, {
          icon: "fa fa-remove",
          onClick: function (e) {
            return _this3.handleClick(e, _id);
          }
        }));
      }

      return React.createElement("div", {
        className: "rui list-group-item",
        key: _id
      }, React.createElement("span", null, code, "\xA0", React.createElement(Translation, {
        defaultValue: "code",
        i18nKey: "discounts.code"
      }), "\xA0", React.createElement(Translation, {
        defaultValue: "Discount applied",
        i18nKey: "discounts.applied"
      })), TrashCan);
    }

    return renderItem;
  }(); // load form input view


  _proto.renderNoneFound = function () {
    function renderNoneFound() {
      return React.createElement(DiscountForm, {
        id: this.props.id,
        collection: this.props.collection,
        validatedInput: this.props.validatedInput
      });
    }

    return renderNoneFound;
  }(); // render list view


  _proto.render = function () {
    function render() {
      var listItems = this.props.listItems;
      return listItems.length >= 1 ? this.renderList() : this.renderNoneFound();
    }

    return render;
  }();

  return DiscountList;
}(Component);

DiscountList.propTypes = {
  collection: PropTypes.string,
  id: PropTypes.string,
  listItems: PropTypes.array,
  validatedInput: PropTypes.bool
};

function composer(props, onData) {
  var currentCart = Reaction.Collections[props.collection].findOne({
    _id: props.id
  });
  var listItems = [];
  var listItem = currentCart.billing.find(function (element) {
    return element.paymentMethod && element.paymentMethod.processor === "code";
  });

  if (listItem) {
    listItems.push({
      id: listItem._id,
      code: listItem.paymentMethod.code,
      discount: listItem.paymentMethod.amount
    });
  }

  onData(null, {
    collection: props.collection,
    validatedInput: props.validatedInput,
    id: props.id,
    listItems: listItems
  });
}

var options = {
  propsToWatch: ["billing"]
};
var discountListComponent = composeWithTracker(composer, options)(DiscountList);
registerComponent("DiscountList", discountListComponent);
module.exportDefault(discountListComponent);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"components":{"lib":{"composer":{"compose.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/components/lib/composer/compose.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  "default": function () {
    return compose;
  }
});

var _getDisplayName;

module.watch(require("recompose/getDisplayName"), {
  "default": function (v) {
    _getDisplayName = v;
  }
}, 0);

var _pick;

module.watch(require("lodash/pick"), {
  "default": function (v) {
    _pick = v;
  }
}, 1);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 2);
var shallowEqual;
module.watch(require("shallowequal"), {
  "default": function (v) {
    shallowEqual = v;
  }
}, 3);
var hoistStatics;
module.watch(require("hoist-non-react-statics"), {
  "default": function (v) {
    hoistStatics = v;
  }
}, 4);

function compose(dataLoader) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function (Child) {
    var _options$errorHandler = options.errorHandler,
        errorHandler = _options$errorHandler === void 0 ? function (err) {
      throw err;
    } : _options$errorHandler,
        _options$loadingHandl = options.loadingHandler,
        loadingHandler = _options$loadingHandl === void 0 ? function () {
      return null;
    } : _options$loadingHandl,
        _options$env = options.env,
        env = _options$env === void 0 ? {} : _options$env,
        _options$pure = options.pure,
        pure = _options$pure === void 0 ? false : _options$pure,
        _options$propsToWatch = options.propsToWatch,
        propsToWatch = _options$propsToWatch === void 0 ? null : _options$propsToWatch,
        _options$shouldSubscr = options.shouldSubscribe,
        shouldSubscribe = _options$shouldSubscr === void 0 ? null : _options$shouldSubscr,
        _options$shouldUpdate = options.shouldUpdate,
        shouldUpdate = _options$shouldUpdate === void 0 ? null : _options$shouldUpdate;

    var Container =
    /*#__PURE__*/
    function (_React$Component) {
      (0, _inheritsLoose2.default)(Container, _React$Component);

      function Container(props) {
        var _this;

        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        _this = _React$Component.call.apply(_React$Component, [this, props].concat(args)) || this;
        _this.state = {};
        _this.propsCache = {};
        return _this;
      }

      var _proto = Container.prototype;

      _proto.componentWillMount = function () {
        function componentWillMount() {
          this._subscribe(this.props);
        }

        return componentWillMount;
      }();

      _proto.componentWillReceiveProps = function () {
        function componentWillReceiveProps(props) {
          this._subscribe(props);
        }

        return componentWillReceiveProps;
      }();

      _proto.shouldComponentUpdate = function () {
        function shouldComponentUpdate(nextProps, nextState) {
          if (shouldUpdate) {
            return shouldUpdate(this.props, nextProps);
          }

          if (!pure) {
            return true;
          }

          return !shallowEqual(this.props, nextProps) || this.state.error !== nextState.error || !shallowEqual(this.state.data, nextState.data);
        }

        return shouldComponentUpdate;
      }();

      _proto.componentWillUnmount = function () {
        function componentWillUnmount() {
          this._unmounted = true;

          this._unsubscribe();
        }

        return componentWillUnmount;
      }();

      _proto._shouldSubscribe = function () {
        function _shouldSubscribe(props) {
          var firstRun = !this._cachedWatchingProps;

          var nextProps = _pick(props, propsToWatch);

          var currentProps = this._cachedWatchingProps || {};
          this._cachedWatchingProps = nextProps;
          if (firstRun) return true;

          if (typeof shouldSubscribe === "function") {
            return shouldSubscribe(currentProps, nextProps);
          }

          if (propsToWatch === null) return true;
          if (propsToWatch.length === 0) return false;
          return !shallowEqual(currentProps, nextProps);
        }

        return _shouldSubscribe;
      }();

      _proto._subscribe = function () {
        function _subscribe(props) {
          var _this2 = this;

          if (!this._shouldSubscribe(props)) return;

          var onData = function (error, data) {
            if (_this2._unmounted) {
              throw new Error("Trying to set data after component(" + Container.displayName + ") has unmounted.");
            }

            var payload = {
              error: error,
              data: data
            };

            _this2.setState(payload);
          }; // We need to do this before subscribing again.


          this._unsubscribe();

          this._stop = dataLoader(props, onData, env);
        }

        return _subscribe;
      }();

      _proto._unsubscribe = function () {
        function _unsubscribe() {
          if (this._stop) {
            this._stop();
          }
        }

        return _unsubscribe;
      }();

      _proto.render = function () {
        function render() {
          var props = this.props;
          var _state = this.state,
              data = _state.data,
              error = _state.error;

          if (error) {
            return errorHandler(error);
          }

          if (!data) {
            return loadingHandler();
          }

          var finalProps = (0, _objectSpread2.default)({}, props, data);
          return React.createElement(Child, finalProps);
        }

        return render;
      }();

      return Container;
    }(React.Component);

    Container.__composerData = {
      dataLoader: dataLoader,
      options: options
    };
    Container.displayName = "Tracker(" + _getDisplayName(Child) + ")";
    hoistStatics(Container, Child);
    return Container;
  };
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/components/lib/composer/index.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./compose"), {
  "default": function (v) {
    exports.compose = v;
  }
}, 0);
module.watch(require("./tracker"), {
  "*": module.makeNsSetter()
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tracker.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/components/lib/composer/tracker.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  composeWithTracker: function () {
    return composeWithTracker;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 1);
var Components;
module.watch(require("../components"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var compose;
module.watch(require("./compose"), {
  "default": function (v) {
    compose = v;
  }
}, 3);

/**
 * @file **Reaction Components API** - Most of the React components in the Reaction UI can be replaced or extended with the API outlined here. This allows anyone to create a custom plugin that can easily change the look of the UI and/or extend its functionality without having to edit core Reaction code. See {@link https://docs.reactioncommerce.com/reaction-docs/master/components-api full tutorial and documentation}.
 *
 * @example // Register a component and container(s) with a name.
 * // The raw component can then be extended or replaced.
 *
 * // Structure of a component in the list:
 *
 * ComponentsTable.MyComponent = {
 *    name: 'MyComponent',
 *    hocs: [fn1, fn2],
 *    rawComponent: React.Component
 * }
 * @namespace Components
 */

/**
 * @name getTrackerLoader
 * @summary getTrackerLoader creates a Meteor Tracker to watch dep updates from
 * the passed in reactiveMapper function
 * @param  {Function} reactiveMapper data fetching function to bind to a tracker
 * @return {Function} composed function
 * @memberof Components
 * @private
 */
function getTrackerLoader(reactiveMapper) {
  return function (props, onData, env) {
    var trackerCleanup = null;
    var handler = Tracker.nonreactive(function () {
      return Tracker.autorun(function () {
        // assign the custom clean-up function.
        trackerCleanup = reactiveMapper(props, onData, env);
      });
    });
    return function () {
      if (typeof trackerCleanup === "function") trackerCleanup();
      return handler.stop();
    };
  };
}
/**
 * @name composeWithTracker
 * @method
 * @summary A higher order component to wrap a reactive function with Meteor's Tracker
 * @param {Function} reactiveMapper data fetching function to bind to a tracker
 * @param {React.Component|Boolean|Object} options can be a custom loader, false (to disable), or a full options object
 * @return {Function} composed function
 * @memberof Components
 */


function composeWithTracker(reactiveMapper, options) {
  var composeOptions = {};

  if (typeof options === "undefined") {
    // eslint-disable-next-line react/display-name
    composeOptions.loadingHandler = function () {
      return React.createElement(Components.Loading, null);
    };
  }

  if (typeof options === "function") {
    var CustomLoader = options; // eslint-disable-next-line

    composeOptions.loadingHandler = function () {
      return React.createElement(CustomLoader, null);
    };
  }

  if ((0, _typeof2.default)(options) === "object") {
    composeOptions = options;
  }

  return compose(getTrackerLoader(reactiveMapper), composeOptions);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/components/lib/components.js                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

module.export({
  Components: function () {
    return Components;
  },
  ComponentsTable: function () {
    return ComponentsTable;
  },
  registerComponent: function () {
    return registerComponent;
  },
  registerHOC: function () {
    return registerHOC;
  },
  getComponent: function () {
    return getComponent;
  },
  replaceComponent: function () {
    return replaceComponent;
  },
  getRawComponent: function () {
    return getRawComponent;
  },
  getHOCs: function () {
    return getHOCs;
  },
  copyHOCs: function () {
    return copyHOCs;
  },
  loadRegisteredComponents: function () {
    return loadRegisteredComponents;
  }
});

var _setDisplayName;

module.watch(require("recompose/setDisplayName"), {
  "default": function (v) {
    _setDisplayName = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Components = {};
var ComponentsTable = {};

function registerComponent(name, rawComponent) {
  var hocs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (!name || !rawComponent) {
    throw new Error("A name and component are required for registerComponent");
  } // store the component in the table


  ComponentsTable[name] = {
    name: name,
    rawComponent: rawComponent,
    hocs: Array.isArray(hocs) ? hocs : [hocs]
  };
}

function registerHOC(name) {
  var hocs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  if (!name || !hocs) {
    throw new Error("A name and HOC(s) are required for registerHOC");
  }

  var newHOCs = Array.isArray(hocs) ? hocs : [hocs];
  var existingComponent = ComponentsTable[name]; // Check to see if this component has already been registered and whether it has
  // HOC's to merge with our new ones. If not, just register it like a new component.
  // This allows us to register HOCs _before_ registering the UI component.
  // Just keep in mind that the resulting component will definitely throw an error
  // if a UI component doesn't eventually get registered.

  if (!!existingComponent && !!existingComponent.hocs) {
    var existingHOCs = existingComponent.hocs;
    ComponentsTable[name] = {
      name: name,
      hocs: _toConsumableArray(newHOCs).concat(_toConsumableArray(existingHOCs))
    };
  } else {
    ComponentsTable[name] = {
      name: name,
      hocs: newHOCs
    };
  }
}

function getComponent(name) {
  var component = ComponentsTable[name];

  if (!component) {
    throw new Error("Component " + name + " not registered.");
  }

  var hocs = component.hocs.map(function (hoc) {
    return Array.isArray(hoc) ? hoc[0](hoc[1]) : hoc;
  });
  return _compose.apply(void 0, _toConsumableArray(hocs).concat([_setDisplayName("Reaction(" + name + ")")]))(component.rawComponent);
}

function replaceComponent(name, newComponent) {
  var hocs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var previousComponent = ComponentsTable[name];

  if (!previousComponent) {
    throw new Error("Component '" + name + "' not found. Use registerComponent to create it.");
  }

  var newHocs = Array.isArray(hocs) ? hocs : [hocs];
  return registerComponent(name, newComponent, _toConsumableArray(newHocs).concat(_toConsumableArray(previousComponent.hocs)));
}

var getRawComponent = function (name) {
  return ComponentsTable[name].rawComponent;
};

var getHOCs = function (name) {
  return ComponentsTable[name].hocs;
};

function copyHOCs(sourceComponentName, targetComponent) {
  var sourceComponent = ComponentsTable[sourceComponentName];
  return _compose.apply(void 0, _toConsumableArray(sourceComponent.hocs))(targetComponent);
}

function loadRegisteredComponents() {
  Object.keys(ComponentsTable).forEach(function (name) {
    Components[name] = getComponent(name);
  });
  return Components;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hoc.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/components/lib/hoc.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  withCurrentUser: function () {
    return withCurrentUser;
  },
  withMoment: function () {
    return withMoment;
  },
  withMomentTimezone: function () {
    return withMomentTimezone;
  },
  withCurrentAccount: function () {
    return withCurrentAccount;
  },
  withIsAdmin: function () {
    return withIsAdmin;
  },
  withPermissions: function () {
    return withPermissions;
  },
  withIsOwner: function () {
    return withIsOwner;
  }
});

var _lifecycle;

module.watch(require("recompose/lifecycle"), {
  "default": function (v) {
    _lifecycle = v;
  }
}, 0);

var _difference;

module.watch(require("lodash/difference"), {
  "default": function (v) {
    _difference = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 3);
var Accounts, Groups;
module.watch(require("../../../../../lib/collections"), {
  Accounts: function (v) {
    Accounts = v;
  },
  Groups: function (v) {
    Groups = v;
  }
}, 4);
var composeWithTracker;
module.watch(require("./composer"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 5);
var Logger;
var Reaction;

if (Meteor.isClient) {
  var _require = require("../../../../../client/api");

  Logger = _require.Logger;

  var _require2 = require("../../../../../client/api");

  Reaction = _require2.Reaction;
} else {
  var _require3 = require("../../../../../server/api");

  Logger = _require3.Logger;

  var _require4 = require("../../../../../server/api");

  Reaction = _require4.Reaction;
}
/**
 * @name withCurrentUser
 * @method
 * @summary A wrapper to reactively inject the current user into a component
 * @param {Function|React.Component} component - the component to wrap
 * @return {Function} the new wrapped component with a "currentUser" prop
 * @memberof Components
 */


function withCurrentUser(component) {
  return composeWithTracker(function (props, onData) {
    onData(null, {
      currentUser: Meteor.user()
    });
  })(component);
}

function withMoment(component) {
  return _lifecycle({
    componentDidMount: function () {
      var _this = this;

      Promise.resolve().then(function () {
        return require("moment");
      }).then(function (moment) {
        moment.locale(Reaction.Locale.get().language);

        _this.setState({
          moment: moment
        });
      }).catch(function (error) {
        Logger.debug(error, "moment.js async import error");
      });
    }
  })(component);
}

function withMomentTimezone(component) {
  return _lifecycle({
    componentDidMount: function () {
      var _this2 = this;

      Promise.resolve().then(function () {
        return require("moment-timezone");
      }).then(function (moment) {
        _this2.setState({
          momentTimezone: moment.tz
        });
      }).catch(function (error) {
        Logger.debug(error, "moment.js async import error");
      });
    }
  })(component);
}

function withCurrentAccount(component) {
  return composeWithTracker(function (props, onData) {
    var shopId = Reaction.getShopId();
    var user = Meteor.user();

    if (!shopId || !user) {
      return null;
    }

    var accSub = Meteor.subscribe("Accounts", user._id);

    if (accSub.ready()) {
      // shoppers should always be guests
      var isGuest = Reaction.hasPermission("guest"); // but if a user has never logged in then they are anonymous

      var isAnonymous = Roles.userIsInRole(user, "anonymous", shopId); // this check for "anonymous" uses userIsInRole instead of hasPermission because hasPermission
      // always return `true` when logged in as the owner.
      // But in this case, the anonymous check should be false when a user is logged in

      var account = Accounts.findOne(user._id);
      onData(null, {
        currentAccount: isGuest && !isAnonymous && account
      });
    }
  }, false)(component);
}

function withIsAdmin(component) {
  return composeWithTracker(function (props, onData) {
    onData(null, {
      isAdmin: Reaction.hasAdminAccess()
    });
  })(component);
}

function withPermissions(_ref) {
  var _ref$roles = _ref.roles,
      roles = _ref$roles === void 0 ? ["guest", "anonymous"] : _ref$roles,
      group = _ref.group;
  return composeWithTracker(function (props, onData) {
    var hasPermissions = Reaction.hasPermission(roles);

    if (!group) {
      return onData(null, {
        hasPermissions: hasPermissions
      });
    } // if group is passed, use group access instead


    var grpSub = Meteor.subscribe("Groups");

    if (grpSub.ready()) {
      var grp = Groups.findOne({
        slug: group
      });

      if (grp && grp.permissions) {
        var user = Meteor.user();
        var permissions = user.roles[Reaction.getShopId()] || []; // checks that userPermissions includes all elements from groupPermissions

        hasPermissions = _difference(grp.permissions, permissions).length === 0;
      }

      onData(null, {
        hasPermissions: hasPermissions
      });
    }
  });
}

function withIsOwner(component) {
  return composeWithTracker(function (props, onData) {
    onData(null, {
      isOwner: Reaction.hasOwnerAccess()
    });
  })(component);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/components/lib/index.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./composer"), {
  composeWithTracker: function (v) {
    exports.composeWithTracker = v;
  }
}, 0);
module.watch(require("./components"), {
  "*": module.makeNsSetter()
}, 1);
module.watch(require("./hoc"), {
  "*": module.makeNsSetter()
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"job-collection":{"lib":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/job-collection/lib/index.js                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Job: function () {
    return Job;
  },
  JobCollection: function () {
    return JobCollection;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 1);
var check, Match;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  },
  Match: function (v) {
    Match = v;
  }
}, 2);
var createJobCollection;
module.watch(require("@reactioncommerce/job-queue"), {
  "default": function (v) {
    createJobCollection = v;
  }
}, 3);

var later = Meteor.isServer && require("later");

var classes = createJobCollection({
  Mongo: Mongo,
  Meteor: Meteor,
  check: check,
  Match: Match,
  later: later
});
var Job = classes.Job,
    JobCollection = classes.JobCollection;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"router":{"lib":{"hooks.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/router/lib/hooks.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**
 * @file Route Hook Methods - The Router.Hooks namespace provides a router-agnostic API for registering functions to be called either on specific routes or on every route. Read more about [Routing in Reaction](https://docs.reactioncommerce.com/reaction-docs/master/routing).
 *
 * @namespace Router.Hooks
 */
var Hooks = {
  _hooks: {
    onEnter: {},
    onExit: {}
  },
  _addHook: function (type, routeName, callback) {
    if (typeof this._hooks[type][routeName] === "undefined") {
      this._hooks[type][routeName] = [];
    }

    this._hooks[type][routeName].push(callback);
  },
  enter: function (callback) {
    var _this = this;

    if (Array.isArray(callback)) {
      callback.forEach(function (cb) {
        _this.onEnter(cb);
      });
    } else {
      this.onEnter(callback);
    }
  },
  leave: function (callback) {
    var _this2 = this;

    if (Array.isArray(callback)) {
      callback.forEach(function (cb) {
        _this2.onExit(cb);
      });
    } else {
      return this.onExit(callback);
    }
  },

  /**
   * @method onEnter
   * @memberof Router.Hooks
   * @summary Register a hook on a specific route
   * Can be called as many times as needed to add more than one callback
   * @example // create a function to do something on the product detail page
  function logSomeStuff() {
  console.log("We're arriving at the product page!");
  }
  // add that to the product detail page onEnter hook
  Router.Hooks.onEnter("product", logSomeStuff);
   * @param  {String}   routeName Name of route
   * @param  {Function} callback  Callback method
   * @return {undefined}
   */
  onEnter: function (routeName, callback) {
    // if first argument is a function it's a global callback
    if (arguments.length === 1 && typeof routeName === "function") {
      var cb = routeName;
      return this._addHook("onEnter", "GLOBAL", cb);
    } // route-specific onEnter callback


    return this._addHook("onEnter", routeName, callback);
  },

  /**
   * @method onExit
   * @memberof Router.Hooks
   * @summary Register a hook on a specific route
   * Can be called as many times as needed to add more than one callback
   * @param  {String}   routeName Name of route
   * @param  {Function} callback  Callback method
   * @return {undefined}
   */
  onExit: function (routeName, callback) {
    // if first argument is a function it's a global callback
    if (arguments.length === 1 && typeof routeName === "function") {
      var cb = routeName;
      return this._addHook("onExit", "GLOBAL", cb);
    } // route-specific onExit callback


    return this._addHook("onExit", routeName, callback);
  },

  /**
   * @method get
   * @memberof Router.Hooks
   * @summary Get all registered hooks for a specific route
   * @param  {String} type Type of hook - `"onEnter"` or `"onExit"`
   * @param  {String} name Name of Route
   * @return {Array}  Array of hooks
   */
  get: function (type, name) {
    var group = this._hooks[type] || {};
    var callbacks = group[name];
    return typeof callbacks !== "undefined" && !!callbacks.length ? callbacks : [];
  },

  /**
   * @method run
   * @memberof Router.Hooks
   * @summary Run all registered hooks
   * @param  {String} type Type of hook - `"onEnter"` or `"onExit"`
   * @param  {String} name "GLOBAL" for all registered global hooks
   * @param  {Object} [context] Context object, optional, or `routeName`
   * @return {Array}  Array of hooks
   */
  run: function (type, name, context) {
    var callbacks = this.get(type, name);

    if (typeof callbacks !== "undefined" && !!callbacks.length) {
      return callbacks.forEach(function (callback) {
        return callback(context);
      });
    }

    return null;
  }
};
module.exportDefault(Hooks);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/router/lib/index.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("react-router-dom"), {
  Link: function (v) {
    exports.Link = v;
  },
  NavLink: function (v) {
    exports.NavLink = v;
  },
  Prompt: function (v) {
    exports.Prompt = v;
  },
  withRouter: function (v) {
    exports.withRouter = v;
  }
}, 0);
module.watch(require("./router"), {
  "default": function (v) {
    exports.Router = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"router.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/router/lib/router.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.export({
  history: function () {
    return history;
  },
  ReactionLayout: function () {
    return ReactionLayout;
  }
});

var _uniqBy;

module.watch(require("lodash/uniqBy"), {
  "default": function (v) {
    _uniqBy = v;
  }
}, 0);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 1);
var Route;
module.watch(require("react-router"), {
  Route: function (v) {
    Route = v;
  }
}, 2);
var createBrowserHistory;
module.watch(require("history/createBrowserHistory"), {
  "default": function (v) {
    createBrowserHistory = v;
  }
}, 3);
var createMemoryHistory;
module.watch(require("history/createMemoryHistory"), {
  "default": function (v) {
    createMemoryHistory = v;
  }
}, 4);
var pathToRegexp;
module.watch(require("path-to-regexp"), {
  "default": function (v) {
    pathToRegexp = v;
  }
}, 5);
var queryParse;
module.watch(require("query-parse"), {
  "default": function (v) {
    queryParse = v;
  }
}, 6);
var Immutable;
module.watch(require("immutable"), {
  "default": function (v) {
    Immutable = v;
  }
}, 7);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 8);
var Blaze;
module.watch(require("meteor/gadicc:blaze-react-component"), {
  "default": function (v) {
    Blaze = v;
  }
}, 9);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 10);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 11);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 12);
var Packages, Shops;
module.watch(require("../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 13);
var getComponent;
module.watch(require("../../components/lib/components"), {
  getComponent: function (v) {
    getComponent = v;
  }
}, 14);
var Hooks;
module.watch(require("./hooks"), {
  "default": function (v) {
    Hooks = v;
  }
}, 15);
var history = Meteor.isClient ? createBrowserHistory() : createMemoryHistory();
// Private vars
var currentRoute = Immutable.Map();
var routerReadyDependency = new Tracker.Dependency();
var routerChangeDependency = new Tracker.Dependency();
/** Class representing a static base router */

var Router =
/*#__PURE__*/
function () {
  function Router() {}

  /**
   * Triggers reactively on router ready state changed
   * @return {Boolean} Router initalization state
   */
  Router.ready = function () {
    function ready() {
      routerReadyDependency.depend();
      return Router._initialized;
    }

    return ready;
  }();
  /**
   * Re-triggers router ready dependency
   * @return {undefined}
   */


  Router.triggerRouterReady = function () {
    function triggerRouterReady() {
      routerReadyDependency.changed();
    }

    return triggerRouterReady;
  }();
  /**
   * Hooks
   * @type {Hooks}
   */


  /**
   * Get the current route date. Not reactive.
   * @return {Object} Object containing route data
   */
  Router.current = function () {
    function current() {
      return currentRoute.toJS();
    }

    return current;
  }();
  /**
   * Set current route data. Is reactive.
   * @param {Object} routeData Object containing route data
   * @return {undefined}
   */


  Router.setCurrentRoute = function () {
    function setCurrentRoute(routeData) {
      currentRoute = Immutable.Map(routeData);
      routerChangeDependency.changed();
    }

    return setCurrentRoute;
  }();
  /**
   * Get the name of the current route. Is reactive.
   * @return {String} Name of current route
   */


  Router.getRouteName = function () {
    function getRouteName() {
      var current = Router.current();
      return current.route && current.route.name || "";
    }

    return getRouteName;
  }();
  /**
   * Get param by name. Is reactive.
   * @param  {String} name Param name
   * @return {String|undefined} String value or undefined
   */


  Router.getParam = function () {
    function getParam(name) {
      routerChangeDependency.depend();
      var current = Router.current();
      return current.params && current.params[name] || undefined;
    }

    return getParam;
  }();
  /**
   * Get query param by name
   * @param  {String} name Query param name. Is reactive.
   * @return {String|undefined} String value or undefined
   */


  Router.getQueryParam = function () {
    function getQueryParam(name) {
      routerChangeDependency.depend();
      var current = Router.current();
      return current.query && current.query[name] || undefined;
    }

    return getQueryParam;
  }();
  /**
   * Merge new query params with current params
   * @param {Object} newParams Object containing params
   * @return {undefined}
   */


  Router.setQueryParams = function () {
    function setQueryParams(newParams) {
      var current = Router.current(); // Merge current and new params

      var queryParams = Object.assign({}, current.query, newParams); // Any param marked as null or undefined will be removed

      for (var key in meteorBabelHelpers.sanitizeForInObject(queryParams)) {
        if (queryParams[key] === null || queryParams[key] === undefined) {
          delete queryParams[key];
        }
      } // Update route


      Router.go(current.route.name, current.params, queryParams);
    }

    return setQueryParams;
  }();
  /**
   * Watch path change. Is Reactive.
   * @return {undefined}
   */


  Router.watchPathChange = function () {
    function watchPathChange() {
      routerChangeDependency.depend();
    }

    return watchPathChange;
  }();

  (0, _createClass2.default)(Router, null, [{
    key: "_routes",

    /**
     * history
     * @type {history}
     */

    /**
     * Hooks
     * @type {Hooks}
     */

    /**
     * Registered route definitions
     * @type {Array}
     */

    /**
     * Router initialization state
     * @type {Boolean}
     */

    /**
     * Active classname for active routes
     * @type {String}
     */

    /**
     * Routes array
     * @type {Array}
     * @param {Array} value An array of objects
     */
    set: function (value) {
      Router.routes = value;
    },
    get: function () {
      return Router.routes;
    }
  }, {
    key: "triggers",
    get: function () {
      return Hooks;
    }
  }]);
  return Router;
}();
/**
 * pathFor
 * @summary get current router path
 * @param {String} path - path to fetch
 * @param {Object} options - url params
 * @return {String} returns current router path
 */


Router.history = history;
Router.Hooks = Hooks;
Router.routes = [];
Router._initialized = false;
Router.activeClassName = "active";

Router.pathFor = function (path) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var foundPath = Router.routes.find(function (pathObject) {
    if (pathObject.route) {
      if (options.hash && options.hash.shopSlug) {
        if (pathObject.options.name === path && pathObject.route.includes("shopSlug")) {
          return true;
        }
      } else if (pathObject.options.name === path && !pathObject.route.includes("shopSlug")) {
        return true;
      }
    } // No path found


    return false;
  });

  if (foundPath) {
    // Pull the hash out of options
    //
    // This is becuase of Spacebars that we have hash.
    // Spacebars takes all params passed into a template tag and places
    // them into the options.hash object. This will also include any `query` params
    var hash = options && options.hash || {}; // Create an executable function based on the route regex

    var toPath = pathToRegexp.compile(foundPath.route); // Compile the regex path with the params from the hash

    var compiledPath = toPath(hash); // Convert the query object to a string
    // e.g. { a: "one", b: "two"} => "a=one&b=two"

    var queryString = queryParse.toString(hash.query); // Return the compiled path + query string if we have one

    if (typeof queryString === "string" && queryString.length) {
      return compiledPath + "?" + queryString;
    } // Return only the compiled path


    return compiledPath;
  }

  return "/";
};
/**
 * Navigate to path with params and query
 * @param  {String} path Path string
 * @param  {Object} params Route params object
 * @param  {Object} query Query params object
 * @return {undefined} undefined
 */


Router.go = function (path, params, query) {
  var actualPath;

  var routerGo = function () {
    if (typeof path === "string" && path.startsWith("/")) {
      actualPath = path;
    } else {
      actualPath = Router.pathFor(path, {
        hash: (0, _objectSpread2.default)({}, params, {
          query: query
        })
      });
    }

    if (window) {
      history.push(actualPath);
    }
  }; // if Router is in a non ready/initialized state yet, wait until it is


  if (!Router.ready()) {
    Tracker.autorun(function (routerReadyWaitFor) {
      if (Router.ready()) {
        routerReadyWaitFor.stop();
        routerGo();
      }
    });
    return;
  }

  routerGo();
};
/**
 * Replace location
 * @param  {String} path Path string
 * @param  {Object} params Route params object
 * @param  {Object} query Query params object
 * @return {undefined} undefined
 */


Router.replace = function (path, params, query) {
  var actualPath = Router.pathFor(path, {
    hash: (0, _objectSpread2.default)({}, params, {
      query: query
    })
  });

  if (window) {
    history.replace(actualPath);
  }
};
/**
 * Reload router
 * @return {undefined} undefined
 */


Router.reload = function () {
  var current = Router.current();

  if (window) {
    history.replace(current.route.fullPath || "/");
  }
};
/**
 * isActive
 * @summary general helper to return "active" when on current path
 * @example {{active "name"}}
 * @param {String} routeName - route name as defined in registry
 * @return {String} return "active" or null
 */


Router.isActiveClassName = function (routeName) {
  var current = Router.current();
  var group = current.route.group;
  var prefix = "";

  if (current.route) {
    var path = current.route.path;

    if (group && group.prefix) {
      prefix = current.route.group.prefix;
    } // Match route


    if (prefix.length && routeName.startsWith(prefix) && path === routeName) {
      // Route name is a path and starts with the prefix. (default '/reaction')
      return Router.activeClassName;
    } else if (routeName.startsWith("/") && path === routeName) {
      // Route name isa  path and starts with slash, but was not prefixed
      return Router.activeClassName;
    } else if (current.route.name === routeName) {
      // Route name is the actual name of the route
      return Router.activeClassName;
    }
  }

  return "";
};
/**
 * hasRoutePermission
 * check if user has route permissions
 * @access private
 * @param  {Object} route - route context
 * @return {Boolean} returns `true` if user is allowed to see route, `false` otherwise
 */


function hasRoutePermission(route) {
  var routeName = route.name;
  return routeName === "index" || routeName === "not-found" || Router.Reaction.hasPermission(route.permissions, Meteor.userId());
}
/**
 * getRegistryRouteName
 * assemble route name to be standard
 * prefix/package name + registry name or route
 * @param  {String} packageName  [package name]
 * @param  {Object} registryItem [registry object]
 * @return {String}              [route name]
 */


function getRegistryRouteName(packageName, registryItem) {
  var routeName;

  if (packageName && registryItem) {
    if (registryItem.name) {
      routeName = registryItem.name;
    } else if (registryItem.template) {
      routeName = packageName + "/" + registryItem.template;
    } else {
      routeName = packageName;
    } // dont include params in the name


    var _routeName$split = routeName.split(":");

    var _routeName$split2 = _slicedToArray(_routeName$split, 1);

    routeName = _routeName$split2[0];
    return routeName;
  }

  return null;
}
/**
 * selectLayout
 * @access private
 * @param {Object} layout - element of shops.layout array
 * @param {Object} setLayout - layout
 * @param {Object} setWorkflow - workflow
 * @returns {Object} layout - return object of template definitions for Blaze Layout
 */


function selectLayout(layout, setLayout, setWorkflow) {
  var currentLayout = setLayout || Session.get("DEFAULT_LAYOUT") || "coreLayout";
  var currentWorkflow = setWorkflow || Session.get("DEFAULT_WORKFLOW") || "coreWorkflow";

  if (layout.layout === currentLayout && layout.workflow === currentWorkflow && layout.enabled === true) {
    return layout;
  }

  return null;
}
/**
 * ReactionLayout
 * sets and returns reaction layout structure
 * @access public
 * @param {Object} options - this router context
 * @param {String} options.layout - string of shop.layout.layout (defaults to coreLayout)
 * @param {String} options.workflow - string of shop.layout.workflow (defaults to coreLayout)
 * @returns {Object} layout - return object of template definitions for Blaze Layout
 */


function ReactionLayout() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  // Find a workflow layout to render
  // By default we'll use the primary shop for layouts
  var shopId = Router.Reaction.getPrimaryShopId(); // We'll check the marketplace settings too so that we can use the active shopId
  // if merchantTemplates is enabled
  // XXX: using merchantTemplates is not ready for production and has not been tested! Use at your own risk.

  var marketplaceSettings;

  if (Meteor.isClient) {
    // If we're on the client, use the cached marketplace settings
    marketplaceSettings = Router.Reaction.marketplace;
  } else {
    // if we're on the server, go get the settings from the db with this method
    marketplaceSettings = Router.Reaction.getMarketplaceSettings();

    if (marketplaceSettings && marketplaceSettings.public) {
      // We're only interested in the public settings here
      marketplaceSettings = marketplaceSettings.public;
    }
  } // If merchantTemplates is enabled, use the active shopId


  if (marketplaceSettings && marketplaceSettings.merchantTemplates === true) {
    shopId = Router.Reaction.getShopId();
  } // Get the shop data


  var shop = Shops.findOne(shopId); // get the layout & workflow from options if they exist
  // Otherwise get them from the Session. this is set in `/client/config/defaults`
  // Otherwise, default to hard-coded values

  var layoutName = options.layout || Session.get("DEFAULT_LAYOUT") || "coreLayout";
  var workflowName = options.workflow || Session.get("DEFAULT_WORKFLOW") || "coreWorkflow"; // Layout object used to render
  // Defaults provided for reference

  var layoutStructure = {
    template: "",
    layoutHeader: "",
    layoutFooter: "",
    notFound: "notFound",
    dashboardHeader: "",
    dashboardControls: "",
    dashboardHeaderControls: "",
    adminControlsFooter: ""
  };
  var layoutTheme = "default"; // Find a registered layout using the layoutName and workflowName

  if (shop) {
    var sortedLayout = shop.layout.sort(function (prev, next) {
      return prev.priority - next.priority;
    });
    var foundLayout = sortedLayout.find(function (x) {
      return selectLayout(x, layoutName, workflowName);
    });

    if (foundLayout) {
      if (foundLayout.structure) {
        layoutStructure = (0, _objectSpread2.default)({}, foundLayout.structure);
      }

      if (foundLayout.theme) {
        layoutTheme = foundLayout.theme;
      }
    }
  } // If the original options did not include a workflow, but did have a template,
  // then we override the template from the layout with the one provided by the options.
  //
  // Why is this? We always need a workflow to render the entire layout of the app.
  // The default layout has a default template that may not be the one we want to render.
  // Some routes, such as `/account/profile` do no have a workflow, but define a template.
  // Without the logic below, it would end up rendering the homepage instead of the profile
  // page.
  // const optionsHasWorkflow = typeof options.workflow === "string";


  var optionsHasTemplate = typeof options.template === "string";

  if (optionsHasTemplate) {
    layoutStructure.template = options.template;
  } // If there is no Blaze Template (Template[]) or React Component (getComponent)
  // Then use the notFound template instead


  var hasReactComponent = true;

  try {
    getComponent(layoutStructure.template);
  } catch (e) {
    hasReactComponent = false;
  }

  if (!Template[layoutStructure.template] && !hasReactComponent) {
    return React.createElement(Blaze, {
      template: layoutStructure.notFound
    });
  } // Render the layout


  return {
    theme: layoutTheme,
    structure: layoutStructure,
    component: function (props) {
      // eslint-disable-line react/no-multi-comp, react/display-name
      var _Router$current = Router.current(),
          route = _Router$current.route;

      var permissions = options.permissions;
      var structure = (0, _objectSpread2.default)({}, layoutStructure); // If the current route is unauthorized, and is not the "not-found" route,
      // then override the template to use the default unauthorized template

      if (hasRoutePermission((0, _objectSpread2.default)({}, route, {
        permissions: permissions
      })) === false && route.name !== "not-found" && !Meteor.user()) {
        if (!Router.Reaction.hasPermission(route.permissions, Meteor.userId())) {
          structure.template = "unauthorized";
        }

        return false;
      }

      try {
        // Try to create a React component if defined
        return React.createElement(getComponent(layoutName), (0, _objectSpread2.default)({}, props, {
          structure: structure
        }));
      } catch (e) {
        // eslint-disable-next-line
        console.warn(e, "Failed to create a React layout element");
      } // If all else fails, render a not found page


      return React.createElement(Blaze, {
        template: structure.notFound
      });
    }
  };
}

/**
 * initPackageRoutes
 * registers route and template when registry item has
 * registryItem.route && registryItem.template
 * @param {Object} options - options and context for route creation
 * @returns {undefined} returns undefined
 */
Router.initPackageRoutes = function (options) {
  // make _initialized = false in case router is reinitialized
  Router._initialized = false;
  routerReadyDependency.changed();
  Router.Reaction = options.reactionContext;
  Router.routes = [];
  var marketplaceSettings = {
    shopPrefix: "/shop" // default value

  };
  var marketplace = Packages.findOne({
    name: "reaction-marketplace",
    shopId: Router.Reaction.getPrimaryShopId()
  });

  if (marketplace && marketplace.settings && marketplace.settings.public) {
    marketplaceSettings = marketplace.settings.public;
  }

  var pkgs = Packages.find().fetch();
  var routeDefinitions = []; // prefixing isnt necessary if we only have one shop
  // but we need to bypass the current
  // subscription to determine this.

  var shopSub = Meteor.subscribe("shopsCount");
  Tracker.autorun(function (shopSubWaitFor) {
    if (shopSub.ready()) {
      shopSubWaitFor.stop(); // using tmeasday:publish-counts
      // Default layouts

      var indexLayout = ReactionLayout(options.indexRoute);
      var notFoundLayout = ReactionLayout({
        template: "notFound"
      }); // Index route

      routeDefinitions.push({
        route: "/",
        name: "index",
        options: (0, _objectSpread2.default)({
          name: "index"
        }, options.indexRoute, {
          theme: indexLayout.theme,
          component: indexLayout.component,
          structure: indexLayout.structure
        })
      });
      routeDefinitions.push({
        route: marketplaceSettings.shopPrefix + "/:shopSlug",
        name: "index",
        options: (0, _objectSpread2.default)({
          name: "index",
          type: "shop-prefix"
        }, options.indexRoute, {
          theme: indexLayout.theme,
          component: indexLayout.component,
          structure: indexLayout.structure
        })
      }); // Not-found route

      routeDefinitions.push({
        route: "/not-found",
        name: "not-found",
        options: (0, _objectSpread2.default)({
          name: "not-found"
        }, notFoundLayout.indexRoute, {
          theme: notFoundLayout.theme,
          component: notFoundLayout.component,
          structure: notFoundLayout.structure
        })
      }); // get package registry route configurations

      for (var _iterator = pkgs, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i2 >= _iterator.length) break;
          _ref = _iterator[_i2++];
        } else {
          _i2 = _iterator.next();
          if (_i2.done) break;
          _ref = _i2.value;
        }

        var _pkg = _ref;
        var newRoutes = []; // pkg registry

        if (_pkg.registry && _pkg.enabled) {
          var registry = Array.from(_pkg.registry);

          for (var _i3 = 0; _i3 < registry.length; _i3++) {
            var registryItem = registry[_i3];

            // registryItems
            if (registryItem.route) {
              var meta = registryItem.meta,
                  _route = registryItem.route,
                  permissions = registryItem.permissions,
                  template = registryItem.template,
                  layout = registryItem.layout,
                  workflow = registryItem.workflow;
              var name = getRegistryRouteName(_pkg.name, registryItem); // define new route
              // we could allow the options to be passed in the registry if we need to be more flexible

              var reactionLayout = ReactionLayout({
                template: template,
                workflow: workflow,
                layout: layout,
                permissions: permissions
              });
              var newRouteConfig = {
                route: _route,
                name: name,
                options: {
                  meta: meta,
                  name: name,
                  template: template,
                  layout: layout,
                  triggersEnter: Router.Hooks.get("onEnter", name),
                  triggersExit: Router.Hooks.get("onExit", name),
                  component: reactionLayout.component,
                  theme: reactionLayout.theme,
                  structure: reactionLayout.structure
                }
              };
              newRoutes.push((0, _objectSpread2.default)({}, newRouteConfig, {
                route: "/shop/:shopSlug" + _route,
                options: (0, _objectSpread2.default)({}, newRouteConfig.options, {
                  type: "shop-prefix"
                })
              })); // push new routes

              newRoutes.push(newRouteConfig);
            } // end registryItems

          } // end package.registry
          //
          // add group and routes to routing table
          //


          for (var _i4 = 0; _i4 < newRoutes.length; _i4++) {
            var route = newRoutes[_i4];
            // allow overriding of prefix in route definitions
            // define an "absolute" url by excluding "/"
            route.group = {};

            if (route.route.substring(0, 1) !== "/") {
              route.route = "/" + route.route;
              route.group.prefix = "";
            }

            routeDefinitions.push(route);
          }
        }
      } // end package loop
      // Uniq-ify routes
      // Take all route definitions in the order that were received, and reverse it.
      // Routes defined later, like in the case of custom routes will then have a
      // higher precedence. Any duplicates after the first instance will be removed.
      //
      // TODO: In the future, sort by priority
      // TODO: Allow duplicated routes with a prefix / suffix / flag


      var uniqRoutes = _uniqBy(routeDefinitions.reverse(), "route");

      var reactRouterRoutes = uniqRoutes.map(function (route, index) {
        return React.createElement(Route, {
          key: route.name + "-" + index,
          path: route.route,
          exact: true,
          render: route.options.component
        });
      }); // Last route, if no other route is matched, this one will be the not-found view
      // Note: This is last becuase all other routes must at-least attempt a match
      // before falling back to this not-found route.

      reactRouterRoutes.push(React.createElement(Route, {
        key: "not-found",
        render: notFoundLayout.component
      })); // Finish initialization

      Router._initialized = true;
      Router.reactComponents = reactRouterRoutes;
      Router._routes = uniqRoutes; // Trigger a reactive refresh to re-render routes

      routerReadyDependency.changed();
    }
  });
};

module.exportDefault(Router);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"client":{"browserRouter.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/router/client/browserRouter.js                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  getRootNode: function () {
    return getRootNode;
  },
  initBrowserRouter: function () {
    return initBrowserRouter;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var ReactDOM;
module.watch(require("react-dom"), {
  "default": function (v) {
    ReactDOM = v;
  }
}, 2);
var matchPath;
module.watch(require("react-router"), {
  matchPath: function (v) {
    matchPath = v;
  }
}, 3);
var ReactRouter;
module.watch(require("react-router-dom"), {
  Router: function (v) {
    ReactRouter = v;
  }
}, 4);
var equal;
module.watch(require("deep-equal"), {
  "default": function (v) {
    equal = v;
  }
}, 5);
var pathToRegexp;
module.watch(require("path-to-regexp"), {
  "default": function (v) {
    pathToRegexp = v;
  }
}, 6);
var queryParse;
module.watch(require("query-parse"), {
  "default": function (v) {
    queryParse = v;
  }
}, 7);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 8);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 9);
var Components;
module.watch(require("../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 10);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 11);
var TranslationProvider;
module.watch(require("../../ui/client/providers"), {
  TranslationProvider: function (v) {
    TranslationProvider = v;
  }
}, 12);
var MetaData;
module.watch(require("../../../../../lib/api/router/metadata"), {
  MetaData: function (v) {
    MetaData = v;
  }
}, 13);
var Router;
module.watch(require("../lib"), {
  Router: function (v) {
    Router = v;
  }
}, 14);
var _Router = Router,
    history = _Router.history;

var BrowserRouter =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(BrowserRouter, _Component);

  function BrowserRouter() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleLocationChange = function (location) {
      // Find all matching paths
      var foundPaths = Router.routes.filter(function (pathObject) {
        return matchPath(location.pathname, {
          path: pathObject.route,
          exact: true
        });
      }); // If no matching path is found, fetch the not-found route definition

      if (foundPaths.length === 0 && location.pathname !== "not-found") {
        foundPaths = Router.routes.filter(function (pathObject) {
          return matchPath("/not-found", {
            path: pathObject.route,
            exact: true
          });
        });
      } // If we have a found path, take the first match


      var foundPath = foundPaths.length && foundPaths[0];
      var params = {}; // Process the params from the found path definiton

      if (foundPath) {
        var keys = [];
        var re = pathToRegexp(foundPath.route, keys); // Create parser with route regex

        var values = re.exec(location.pathname); // Process values
        // Create params object

        keys.forEach(function (key, index) {
          params[key.name] = values[index + 1];
        });
      } // Get serach (query) string from current location


      var search = location.search; // Remove the ? if it exists at the beginning

      if (typeof search === "string" && search.startsWith("?")) {
        search = search.substr(1);
      } // Create object of all necessary data for the current route


      var routeData = {
        route: (0, _objectSpread2.default)({}, foundPath, {
          name: foundPath.name,
          path: location.pathname,
          fullPath: "" + location.pathname + location.search
        }),
        params: params,
        query: queryParse.toObject(search),
        // Parse query string into object
        payload: location
      }; // The currentRoute is equal to the routeData.route that we just setup

      var currentRoute = routeData.route || {}; // Get the previousRouteData, which is the Router.current() just before it changes.
      // Default to empty objects to guard against error

      var previousRouteData = Router.current() || {};
      var previousRoute = previousRouteData.route; // If routes are not identical, run onExit and onEnter

      if (!equal({
        params: previousRouteData.params,
        query: previousRouteData.query,
        route: previousRouteData.route
      }, {
        params: routeData.params,
        query: routeData.query,
        route: routeData.route
      })) {
        // Run onExit hooks if the previousRoute exists
        if (previousRoute) {
          Router.Hooks.run("onExit", "GLOBAL", previousRouteData);
          Router.Hooks.run("onExit", previousRoute.name, previousRouteData);
        } // Set current route reactive-var


        Router.setCurrentRoute(routeData); // Run on enter hooks for the new route

        Router.Hooks.run("onEnter", "GLOBAL", routeData);
        Router.Hooks.run("onEnter", currentRoute.name, routeData);
      }

      MetaData.init(routeData);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = BrowserRouter.prototype;

  _proto.componentWillMount = function () {
    function componentWillMount() {
      this.unsubscribeFromHistory = history.listen(this.handleLocationChange);
      this.handleLocationChange(history.location);
    }

    return componentWillMount;
  }();

  _proto.componentWillUnmount = function () {
    function componentWillUnmount() {
      if (this.unsubscribeFromHistory) this.unsubscribeFromHistory();
    }

    return componentWillUnmount;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(ReactRouter, this.props);
    }

    return render;
  }();

  return BrowserRouter;
}(Component);

BrowserRouter.propTypes = {
  children: PropTypes.node,
  history: PropTypes.object,
  store: PropTypes.object
};
BrowserRouter.contextTypes = {
  store: PropTypes.object
};

function getRootNode() {
  var rootNode = document.getElementById("react-root");

  if (rootNode) {
    return rootNode;
  }

  var rootNodeHtml = "<div id='react-root'></div>";
  var body = document.getElementsByTagName("body")[0];
  body.insertAdjacentHTML("beforeend", rootNodeHtml);
  rootNode = document.getElementById("react-root");
  return rootNode;
}

function initBrowserRouter() {
  Router.initPackageRoutes({
    reactionContext: Reaction,
    indexRoute: Session.get("INDEX_OPTIONS") || {}
  });
  Router.Hooks.onEnter(MetaData.init);
  Tracker.autorun(function (computation) {
    if (Router.ready()) {
      ReactDOM.render(React.createElement(BrowserRouter, {
        history: history
      }, React.createElement(TranslationProvider, null, React.createElement(Components.App, {
        children: Router.reactComponents
      }))), getRootNode());
      computation.stop();
    }
  });
}

module.exportDefault(BrowserRouter);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/router/client/index.js                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./startup"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"startup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/router/client/startup.js                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var loadRegisteredComponents;
module.watch(require("../../components/lib"), {
  loadRegisteredComponents: function (v) {
    loadRegisteredComponents = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var Shops;
module.watch(require("../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 5);
var Router;
module.watch(require("../lib"), {
  Router: function (v) {
    Router = v;
  }
}, 6);
var initBrowserRouter;
module.watch(require("./browserRouter"), {
  initBrowserRouter: function (v) {
    initBrowserRouter = v;
  }
}, 7);
Meteor.startup(function () {
  loadRegisteredComponents(); // Subscribe to router required publications
  // Note: Although these are subscribed to by the subscription manager in "/modules/client/core/subscriptions",
  // using the subscriptions manager sometimes causes issues when signing in/out where you may seee a grey screen
  // or missing shop data throughout the app.
  // TODO: Revisit subscriptions manager usage and waiting for shops to exist client side before rendering.

  var primaryShopSub = Meteor.subscribe("PrimaryShop");
  var merchantShopSub = Meteor.subscribe("MerchantShops");
  var packageSub = Meteor.subscribe("Packages");
  var isLoaded = false;
  Tracker.autorun(function () {
    // initialize client routing
    if (primaryShopSub.ready() && merchantShopSub.ready() && packageSub.ready() && // In addition to the subscriptions, shopId must be defined before we proceed
    // to avoid conditions where the subscriptions may be ready, but the cached
    // shopId has yet been set.
    // Reaction.primaryShopId is a reactive data source
    Reaction.primaryShopId !== null) {
      var shops = Shops.find({}).fetch(); //  initBrowserRouter calls Router.initPackageRoutes which calls shopSub.ready which is reactive,
      //  So we have to call initBrowserRouter in a non reactive context.
      //  Otherwise initBrowserRouter is called twice each time a subscription becomes "ready"

      Tracker.nonreactive(function () {
        // Make sure we have shops before we try to make routes for them
        if (Array.isArray(shops) && shops.length) {
          if (!isLoaded) {
            isLoaded = true;
            initBrowserRouter();
          }
        }
      });
    }
  }); //
  // we need to sometimes force
  // router reload on login to get
  // the entire layout to rerender
  // we only do this when the routes table
  // has already been generated (existing user)
  //

  Accounts.onLogin(function () {
    var shops = Shops.find({}).fetch();

    if (Meteor.loggingIn() === false && Router._routes.length > 0) {
      if (Array.isArray(shops) && shops.length) {
        initBrowserRouter();
      }
    }
  });
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"i18n":{"client":{"components":{"currencyDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/components/currencyDropdown.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var Currency =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Currency, _Component);

  function Currency() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      value: ""
    }, _this.onChange = function (event, value) {
      _this.setState({
        value: value
      });

      _this.props.handleChange(value);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Currency.prototype;

  _proto.currencyDisplay = function () {
    function currencyDisplay(value, symbol) {
      return value + " " + symbol;
    }

    return currencyDisplay;
  }();

  _proto.buttonElement = function () {
    function buttonElement() {
      return React.createElement(Components.Button, {
        label: this.props.currentCurrency || this.state.value,
        containerStyle: {
          color: "#000",
          fontWeight: "normal",
          letterSpacing: 0.8
        }
      }, "\xA0", React.createElement("i", {
        className: "fa fa-caret-down"
      }));
    }

    return buttonElement;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      return React.createElement("div", null, this.props.currencies.length > 1 && React.createElement(Components.DropDownMenu, {
        buttonElement: this.buttonElement(),
        onChange: this.onChange,
        value: this.props.currentCurrency || this.state.value,
        menuStyle: {
          maxHeight: 500,
          overflow: "auto"
        }
      }, React.createElement(Components.MenuItem, {
        label: "Select Currency",
        i18nKeyLabel: "currencies.select",
        disabled: true
      }), React.createElement(Components.Divider, null), this.props.currencies.map(function (currency) {
        return React.createElement(Components.MenuItem, {
          key: currency.currency,
          label: _this2.currencyDisplay(currency.currency, currency.symbol),
          value: _this2.currencyDisplay(currency.currency, currency.symbol)
        });
      })));
    }

    return render;
  }();

  return Currency;
}(Component);

Currency.propTypes = {
  currencies: PropTypes.array,
  currentCurrency: PropTypes.string,
  handleChange: PropTypes.func
};
module.exportDefault(Currency);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"languageDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/components/languageDropdown.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var LanguageDropDown =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(LanguageDropDown, _Component);

  function LanguageDropDown() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      value: ""
    }, _this.onChange = function (event, value) {
      _this.setState({
        value: value
      });

      _this.props.handleChange(value);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = LanguageDropDown.prototype;

  _proto.buttonElement = function () {
    function buttonElement() {
      return React.createElement(Components.Button, {
        containerStyle: {
          color: "#000"
        }
      }, React.createElement("i", {
        className: "fa fa-language fa-lg"
      }), "\xA0", React.createElement("i", {
        className: "fa fa-caret-down"
      }));
    }

    return buttonElement;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", null, this.props.languages.length > 1 && React.createElement("div", {
        className: "dropdown-toggle"
      }, React.createElement(Components.DropDownMenu, {
        buttonElement: this.buttonElement(),
        value: this.props.currentLanguage || this.state.value,
        onChange: this.onChange,
        menuStyle: {
          maxHeight: 500,
          overflow: "auto"
        }
      }, React.createElement(Components.MenuItem, {
        label: "Select language",
        i18nKeyLabel: "languages.select",
        disabled: true
      }), React.createElement(Components.Divider, null), this.props.languages.map(function (language) {
        return React.createElement(Components.MenuItem, {
          key: language.i18n,
          label: language.label,
          i18nKeyLabel: language.translation,
          value: language.i18n
        });
      }))));
    }

    return render;
  }();

  return LanguageDropDown;
}(Component);

LanguageDropDown.propTypes = {
  currentLanguage: PropTypes.string,
  handleChange: PropTypes.func,
  languages: PropTypes.array
};
module.exportDefault(LanguageDropDown);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"localizationSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/components/localizationSettings.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var ShopSchema;
module.watch(require("../../../../../../lib/collections/schemas/shops"), {
  Shop: function (v) {
    ShopSchema = v;
  }
}, 3);
var PACKAGE_NAME = "reaction-i18n";

var LocalizationSettings =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(LocalizationSettings, _Component);

  function LocalizationSettings(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleUpdateCurrencyConfiguration = function (event, isChecked, name) {
      var currencyIndex = _this.state.currencies.findIndex(function (currency) {
        return currency.name === name;
      });

      _this.setState(function (state) {
        var newStateCurrencies = state.currencies;
        newStateCurrencies[currencyIndex].enabled = isChecked;
        return {
          currencies: newStateCurrencies
        };
      }, function () {
        // Delaying to allow animation before sending data to server
        // If animation is not delayed, it twitches when actual update happens
        setTimeout(function () {
          _this.props.onUpdateCurrencyConfiguration(event, isChecked, name);
        }, 200);
      });
    };

    _this.handleUpdateLangaugeConfiguration = function (event, isChecked, name) {
      var languageIndex = _this.state.languages.findIndex(function (language) {
        return language.value === name;
      });

      _this.setState(function (state) {
        var newStateLanguages = state.languages;
        newStateLanguages[languageIndex].enabled = isChecked;
        return {
          languages: newStateLanguages
        };
      }, function () {
        // Delaying to allow animation before sending data to server
        // If animation is not delayed, it twitches when actual update happens
        setTimeout(function () {
          _this.props.onUpdateLanguageConfiguration(event, isChecked, name);
        }, 200);
      });
    };

    _this.handleSubmit = function (event, formData) {
      if (typeof _this.props.onUpdateLocalization === "function") {
        _this.props.onUpdateLocalization(formData.doc);
      }
    };

    _this.handleAllOn = function (event, name) {
      if (name === "language") {
        if (typeof _this.props.onEnableAllLanguages === "function") {
          _this.props.onEnableAllLanguages(true);
        }
      } else if (name === "currency") {
        if (typeof _this.props.onEnableAllCurrencies === "function") {
          _this.props.onEnableAllCurrencies(true);
        }
      }
    };

    _this.handleAllOff = function (event, name) {
      if (name === "language") {
        if (typeof _this.props.onEnableAllLanguages === "function") {
          _this.props.onEnableAllLanguages(false);
        }
      } else if (name === "currency") {
        if (typeof _this.props.onEnableAllCurrencies === "function") {
          _this.props.onEnableAllCurrencies(false);
        }
      }
    };

    _this.handleReloadTranslations = function (event) {
      if (typeof _this.props.onReloadTranslations === "function") {
        _this.props.onReloadTranslations(event.altKey);
      }
    };

    _this.state = {
      currencies: props.currencies,
      languages: props.languages
    };
    return _this;
  }

  var _proto = LocalizationSettings.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState({
        currencies: nextProps.currencies,
        languages: nextProps.languages
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.renderCurrencies = function () {
    function renderCurrencies() {
      var _this2 = this;

      return this.props.currencies.map(function (currency, key) {
        return React.createElement(Components.ListItem, {
          actionType: "switch",
          key: key,
          label: currency.label,
          switchOn: currency.enabled,
          switchName: currency.name,
          onSwitchChange: _this2.handleUpdateCurrencyConfiguration
        });
      });
    }

    return renderCurrencies;
  }();

  _proto.renderLanguages = function () {
    function renderLanguages() {
      var _this3 = this;

      return this.state.languages.map(function (language, key) {
        return React.createElement(Components.ListItem, {
          actionType: "switch",
          key: key,
          label: language.label,
          switchOn: language.enabled,
          switchName: language.value,
          onSwitchChange: _this3.handleUpdateLangaugeConfiguration
        });
      });
    }

    return renderLanguages;
  }();

  _proto.renderListControls = function () {
    function renderListControls(name) {
      return React.createElement(Components.CardToolbar, null, React.createElement(Components.FlatButton, {
        i18nKeyLabel: "admin.i18nSettings.allOn",
        label: "All On",
        value: name,
        onClick: this.handleAllOn
      }), "|", React.createElement(Components.FlatButton, {
        i18nKeyLabel: "admin.i18nSettings.allOff",
        label: "All Off",
        value: name,
        onClick: this.handleAllOff
      }), name === "language" && "|", name === "language" && React.createElement(Components.FlatButton, {
        i18nKeyTooltip: "admin.i18nSettings.reloadTranslations",
        tooltip: "Reload translations asdasdasdasdasd",
        tooltipAttachment: "middle left",
        icon: "fa fa-refresh",
        onClick: this.handleReloadTranslations
      }));
    }

    return renderListControls;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.CardGroup, null, React.createElement(Components.SettingsCard, {
        i18nKeyTitle: "admin.i18nSettings.shopLocalization",
        name: "localization",
        packageName: PACKAGE_NAME,
        saveOpenStateToPreferences: true,
        showSwitch: false,
        title: "Shop Localization"
      }, React.createElement(Components.Form, {
        autoSave: true,
        schema: ShopSchema,
        doc: this.props.shop,
        fields: {
          timezone: {
            type: "select",
            options: this.props.timezoneOptions
          },
          currency: {
            type: "select",
            options: this.props.currencyOptions
          },
          baseUOM: {
            type: "select",
            options: this.props.uomOptions
          },
          baseUOL: {
            type: "select",
            options: this.props.uolOptions
          },
          language: {
            type: "select",
            options: this.props.enabledLanguages
          }
        },
        name: "localization",
        onSubmit: this.handleSubmit
      })), React.createElement(Components.SettingsCard, {
        i18nKeyTitle: "admin.i18nSettings.enabledLanguages",
        name: "languages",
        padded: false,
        packageName: PACKAGE_NAME,
        saveOpenStateToPreferences: true,
        showSwitch: false,
        title: "Languages"
      }, this.renderListControls("language"), React.createElement(Components.List, null, this.renderLanguages())), React.createElement(Components.SettingsCard, {
        i18nKeyTitle: "admin.i18nSettings.enabledCurrencies",
        padded: false,
        packageName: PACKAGE_NAME,
        name: "currencies",
        saveOpenStateToPreferences: true,
        showSwitch: false,
        title: "Currencies"
      }, this.renderListControls("currency"), React.createElement(Components.List, null, this.renderCurrencies())));
    }

    return render;
  }();

  return LocalizationSettings;
}(Component);

LocalizationSettings.propTypes = {
  currencies: PropTypes.array,
  currencyOptions: PropTypes.array,
  enabledLanguages: PropTypes.array,
  languages: PropTypes.array,
  onEnableAllCurrencies: PropTypes.func,
  onEnableAllLanguages: PropTypes.func,
  onReloadTranslations: PropTypes.func,
  onUpdateCurrencyConfiguration: PropTypes.func,
  onUpdateLanguageConfiguration: PropTypes.func,
  onUpdateLocalization: PropTypes.func,
  shop: PropTypes.object,
  // Shop data
  timezoneOptions: PropTypes.array,
  uolOptions: PropTypes.array,
  uomOptions: PropTypes.array
};
module.exportDefault(LocalizationSettings);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"currencyDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/containers/currencyDropdown.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Match;
module.watch(require("meteor/check"), {
  Match: function (v) {
    Match = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 5);
var Cart, Shops, Accounts;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Accounts: function (v) {
    Accounts = v;
  }
}, 6);
var CurrencyDropdown;
module.watch(require("../components/currencyDropdown"), {
  "default": function (v) {
    CurrencyDropdown = v;
  }
}, 7);
var handlers = {
  handleChange: function (value) {
    var currency = value.split(" ");
    var currencyName = currency[0]; // update Accounts with the selected currency

    Meteor.call("accounts/setProfileCurrency", currencyName);
    var cart = Cart.findOne({
      userId: Meteor.userId()
    }); // Attach changed currency to this users cart

    Meteor.call("cart/setUserCurrency", cart._id, currencyName);
  }
};

var composer = function (props, onData) {
  var currentCurrency = "USD $";
  var currencies = [];

  if (Reaction.Subscriptions.PrimaryShop.ready() && Reaction.Subscriptions.MerchantShops.ready() && Meteor.user()) {
    var shopId; // Choose shop to get language from

    if (Reaction.marketplaceEnabled && Reaction.merchantCurrency) {
      shopId = Reaction.getShopId();
    } else {
      shopId = Reaction.getPrimaryShopId();
    }

    var shop = Shops.findOne(shopId, {
      fields: {
        currencies: 1,
        currency: 1
      }
    });
    var user = Accounts.findOne({
      _id: Meteor.userId()
    });
    var profileCurrency = user && user.profile && user.profile.currency;

    if (Match.test(shop, Object) && shop.currency) {
      var locale = Reaction.Locale.get();

      if (profileCurrency && shop.currencies[profileCurrency] && shop.currencies[profileCurrency].symbol) {
        currentCurrency = profileCurrency + " " + shop.currencies[profileCurrency].symbol;
      } else if (locale && locale.currency && locale.currency.enabled) {
        currentCurrency = locale.locale.currency.split(",")[0] + " " + locale.currency.symbol;
      } else {
        currentCurrency = shop.currency.split(",")[0] + " " + shop.currencies[shop.currency].symbol;
      }
    }

    if (Match.test(shop, Object) && shop.currencies) {
      for (var currencyName in meteorBabelHelpers.sanitizeForInObject(shop.currencies)) {
        if (shop.currencies[currencyName].enabled === true) {
          var currency = {
            currency: currencyName
          }; // only one currency will be "active". Either the one
          // matching the profileCurrency if it exists or else
          //  the one matching shop currency

          if (profileCurrency) {
            if (profileCurrency === currency.currency) {
              currency.class = "active";
            }
          } else if (shop.currency === currency.currency) {
            currency.class = "active";
          }

          currency.symbol = shop.currencies[currencyName].symbol;
          currencies.push(currency);
        }
      }
    }
  }

  onData(null, {
    currentCurrency: currentCurrency,
    currencies: currencies
  });
};

registerComponent("CurrencyDropdown", CurrencyDropdown, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(CurrencyDropdown));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"languageDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/containers/languageDropdown.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Shops;
module.watch(require("../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 4);
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 5);
var LanguageDropdown;
module.watch(require("../components/languageDropdown"), {
  "default": function (v) {
    LanguageDropdown = v;
  }
}, 6);
var handlers = {
  handleChange: function (value) {
    Meteor.users.update(Meteor.userId(), {
      $set: {
        "profile.lang": value
      }
    });
  }
};

var composer = function (props, onData) {
  var languages = [];
  var currentLanguage = "";

  if (Reaction.Subscriptions.PrimaryShop.ready() && Reaction.Subscriptions.MerchantShops.ready() && Meteor.user()) {
    var shopId; // Choose shop to get language from

    if (Reaction.marketplaceEnabled && Reaction.merchantLanguage) {
      shopId = Reaction.getShopId();
    } else {
      shopId = Reaction.getPrimaryShopId();
    }

    var shop = Shops.findOne({
      _id: shopId
    });

    if ((0, _typeof2.default)(shop) === "object" && shop.languages) {
      for (var _iterator = shop.languages, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _language = _ref;

        if (_language.enabled === true) {
          _language.translation = "languages." + _language.label.toLowerCase(); // appending a helper to let us know this
          // language is currently selected

          var _Meteor$user = Meteor.user(),
              profile = _Meteor$user.profile;

          if (profile && profile.lang) {
            if (profile.lang === _language.i18n) {
              currentLanguage = profile.lang;
            }
          } else if (shop.language === _language.i18n) {
            // we don't have a profile language
            // use the shop default
            currentLanguage = shop.language;
          }

          languages.push(_language);
        }
      }
    }
  }

  onData(null, {
    languages: languages,
    currentLanguage: currentLanguage
  });
};

registerComponent("LanguageDropdown", LanguageDropdown, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(LanguageDropdown));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"localizationSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/containers/localizationSettings.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var registerComponent, composeWithTracker, withMomentTimezone;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  withMomentTimezone: function (v) {
    withMomentTimezone = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Countries;
module.watch(require("../../../../../../client/collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 5);
var Shops;
module.watch(require("../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 6);
var LocalizationSettings;
module.watch(require("../components/localizationSettings"), {
  "default": function (v) {
    LocalizationSettings = v;
  }
}, 7);

var wrapComponent = function (Comp) {
  var _class, _temp2;

  return _temp2 = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(LocalizationSettingsContainer, _Component);

    function LocalizationSettingsContainer() {
      var _temp, _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleUpdateLanguageConfiguration = function (event, isChecked, name) {
        var language = _this.props.languages.find(function (l) {
          return l.value === name;
        });

        if (language) {
          Meteor.call("shop/updateLanguageConfiguration", language.value, isChecked);
        }
      }, _this.handleUpdateCurrencyConfiguration = function (event, isChecked, name) {
        Meteor.call("shop/updateCurrencyConfiguration", name, isChecked);
      }, _this.handleSubmit = function (doc) {
        Shops.update({
          _id: doc._id
        }, {
          $set: {
            timezone: doc.timezone,
            currency: doc.currency,
            baseUOM: doc.baseUOM,
            baseUOL: doc.baseUOL,
            language: doc.language
          }
        });
      }, _this.handleEnableAllLanguages = function (isEnabled) {
        Meteor.call("shop/updateLanguageConfiguration", "all", isEnabled);
      }, _this.handleEnableAllCurrencies = function (isEnabled) {
        Meteor.call("shop/updateCurrencyConfiguration", "all", isEnabled);
      }, _this.handleTranslationReload = function (flushAll) {
        if (flushAll === true) {
          Alerts.toast(i18next.t("admin.i18nSettings.reloadAllStarted", {
            defaultValue: "Reloading translations for all shops."
          }), "info");
          Meteor.call("i18n/flushTranslations", function (error) {
            if (!error) {
              Alerts.toast(i18next.t("admin.i18nSettings.reloadAllSuccess", {
                defaultValue: "Translations have been reloaded for all shops."
              }), "success");
            } else {
              Alerts.toast(i18next.t("admin.i18nSettings.reloadAllFail", {
                defaultValue: "Translations could not be reloaded for all shops."
              }), "error");
            }
          });
        } else {
          Alerts.toast(i18next.t("admin.i18nSettings.reloadStarted", {
            defaultValue: "Reloading translations for the current shop."
          }), "info");
          Meteor.call("i18n/flushTranslations", function (error) {
            if (!error) {
              Alerts.toast(i18next.t("admin.i18nSettings.reloadSuccess", {
                defaultValue: "Translations have been reloaded for the current shop."
              }), "success");
            } else {
              Alerts.toast(i18next.t("admin.i18nSettings.reloadFail", {
                defaultValue: "Translations could not be reloaded for the current shop."
              }), "error");
            }
          });
        }
      }, _temp) || (0, _assertThisInitialized2.default)(_this);
    }

    var _proto = LocalizationSettingsContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, (0, _extends2.default)({}, this.props, {
          onEnableAllCurrencies: this.handleEnableAllCurrencies,
          onEnableAllLanguages: this.handleEnableAllLanguages,
          onUpdateCurrencyConfiguration: this.handleUpdateCurrencyConfiguration,
          onUpdateLanguageConfiguration: this.handleUpdateLanguageConfiguration,
          onUpdateLocalization: this.handleSubmit,
          onReloadTranslations: this.handleTranslationReload
        }));
      }

      return render;
    }();

    return LocalizationSettingsContainer;
  }(Component), _class.propTypes = LocalizationSettings.propTypes, _temp2;
};

function composer(props, onData) {
  var languages = [];
  var shop = Shops.findOne();
  var countries = Countries.find().fetch();
  var preferences = Reaction.getUserPreferences("reaction-i18n", "settingsCards", {});

  if ((0, _typeof2.default)(shop) === "object" && shop.languages) {
    for (var _iterator = shop.languages, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _language = _ref;

      var i18nKey = "languages." + _language.label.toLowerCase();

      languages.push({
        label: _language.label,
        value: _language.i18n,
        enabled: _language.i18n === shop.language || _language.enabled,
        i18nKey: i18nKey
      });
    }
  }

  var currencies = shop.currencies;
  var currencyList = [];
  var currencyOptions = [];

  for (var currency in meteorBabelHelpers.sanitizeForInObject(currencies)) {
    if ({}.hasOwnProperty.call(currencies, currency)) {
      if (currency === "updatedAt") {
        continue;
      }

      var structure = currencies[currency];

      var _label = currency + "  |  " + structure.symbol + "  |  " + structure.format;

      currencyList.push({
        name: currency,
        label: _label,
        enabled: structure.enabled || currency === shop.currency
      });

      if (structure.enabled || currency === shop.currency) {
        currencyOptions.push({
          label: _label,
          value: currency
        });
      }
    }
  }

  var _Shops$findOne = Shops.findOne(),
      unitsOfMeasure = _Shops$findOne.unitsOfMeasure;

  var uomOptions = [];

  if (Array.isArray(unitsOfMeasure)) {
    for (var _iterator2 = unitsOfMeasure, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _measure = _ref2;
      uomOptions.push({
        label: i18next.t("uom." + _measure.uom, {
          defaultValue: _measure.uom
        }),
        value: _measure.uom
      });
    }
  }

  var _Shops$findOne2 = Shops.findOne(),
      unitsOfLength = _Shops$findOne2.unitsOfLength;

  var uolOptions = [];

  if (Array.isArray(unitsOfLength)) {
    for (var _iterator3 = unitsOfLength, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var _length = _ref3;
      uolOptions.push({
        label: i18next.t("uol." + _length.uol, {
          defaultValue: _length.uol
        }),
        value: _length.uol
      });
    }
  }

  var label = i18next.t("app.timezoneOptions", "Choose timezone");
  var timezoneOptions = [{
    value: "",
    label: label
  }];
  var moment = props.momentTimezone;

  if (moment) {
    var timezones = moment.names();

    for (var _iterator4 = timezones, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
      var _ref4;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref4 = _i4.value;
      }

      var _timezone = _ref4;
      timezoneOptions.push({
        value: _timezone,
        label: _timezone
      });
    }
  }

  onData(null, {
    preferences: preferences,
    shop: shop,
    languages: languages,
    currencies: currencyList,
    enabledLanguages: languages.filter(function (language) {
      return language.enabled || language.value === shop.language;
    }),
    countryOptions: countries,
    currencyOptions: currencyOptions,
    uomOptions: uomOptions,
    uolOptions: uolOptions,
    timezoneOptions: timezoneOptions
  });
}

registerComponent("i18nSettings", LocalizationSettings, [withMomentTimezone, composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(withMomentTimezone, composeWithTracker(composer), wrapComponent)(LocalizationSettings));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/i18n/client/index.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./containers/currencyDropdown"), {
  "default": function (v) {
    exports.CurrencyDropdown = v;
  }
}, 0);
module.watch(require("./containers/languageDropdown"), {
  "default": function (v) {
    exports.LanguageDropdown = v;
  }
}, 1);
module.watch(require("./containers/localizationSettings"), {
  "default": function (v) {
    exports.LocalizationSettings = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"ui-navbar":{"client":{"components":{"brand.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-navbar/client/components/brand.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);

var Brand =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Brand, _Component);

  function Brand() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();
      Reaction.Router.go("/");
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Brand.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          logo = _props.logo,
          title = _props.title;
      return React.createElement("a", {
        className: "brand",
        href: "/",
        onClick: this.handleClick
      }, this.props.logo && React.createElement("div", {
        className: "logo"
      }, React.createElement("img", {
        src: logo,
        alt: title
      })), React.createElement("span", {
        className: "title"
      }, title));
    }

    return render;
  }();

  return Brand;
}(Component);

Brand.propTypes = {
  logo: PropTypes.string,
  title: PropTypes.string
};
registerComponent("Brand", Brand);
module.exportDefault(Brand);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"navbar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-navbar/client/components/navbar.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var NavBar =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(NavBar, _Component);

  function NavBar() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      navBarVisible: false,
      searchModalOpen: false
    }, _this.toggleNavbarVisibility = function () {
      var isVisible = _this.state.navBarVisible;

      _this.setState({
        navBarVisible: !isVisible
      });
    }, _this.handleCloseNavbar = function () {
      _this.setState({
        navBarVisible: false
      });
    }, _this.handleOpenSearchModal = function () {
      _this.setState({
        searchModalOpen: true
      });
    }, _this.handleCloseSearchModal = function () {
      _this.setState({
        searchModalOpen: false
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = NavBar.prototype;

  _proto.renderLanguage = function () {
    function renderLanguage() {
      return React.createElement("div", {
        className: "languages"
      }, React.createElement(Components.LanguageDropdown, null));
    }

    return renderLanguage;
  }();

  _proto.renderCurrency = function () {
    function renderCurrency() {
      return React.createElement("div", {
        className: "currencies"
      }, React.createElement(Components.CurrencyDropdown, null));
    }

    return renderCurrency;
  }();

  _proto.renderBrand = function () {
    function renderBrand() {
      var _props = this.props,
          brandMedia = _props.brandMedia,
          shop = _props.shop;

      var _ref = shop || {},
          name = _ref.name;

      var logo = brandMedia && brandMedia.url({
        store: "large"
      });
      return React.createElement(Components.Brand, {
        logo: logo,
        title: name || ""
      });
    }

    return renderBrand;
  }();

  _proto.renderSearchButton = function () {
    function renderSearchButton() {
      if (this.props.searchEnabled) {
        return React.createElement("div", {
          className: "search"
        }, React.createElement(Components.FlatButton, {
          icon: "fa fa-search",
          kind: "flat",
          onClick: this.handleOpenSearchModal
        }), React.createElement(Components.SearchSubscription, {
          open: this.state.searchModalOpen,
          onClose: this.handleCloseSearchModal
        }));
      }
    }

    return renderSearchButton;
  }();

  _proto.renderNotificationIcon = function () {
    function renderNotificationIcon() {
      if (this.props.hasProperPermission) {
        return React.createElement("div", {
          className: "navbar-notification"
        }, React.createElement(Components.Notification, null));
      }
    }

    return renderNotificationIcon;
  }();

  _proto.renderCartContainerAndPanel = function () {
    function renderCartContainerAndPanel() {
      return React.createElement("div", {
        className: "cart-container"
      }, React.createElement("div", {
        className: "cart"
      }, React.createElement(Components.CartIcon, null)), React.createElement("div", {
        className: "cart-alert"
      }, React.createElement(Components.CartPanel, null)));
    }

    return renderCartContainerAndPanel;
  }();

  _proto.renderMainDropdown = function () {
    function renderMainDropdown() {
      return React.createElement(Components.MainDropdown, null);
    }

    return renderMainDropdown;
  }();

  _proto.renderHamburgerButton = function () {
    function renderHamburgerButton() {
      return React.createElement("div", {
        className: "showmenu"
      }, React.createElement(Components.Button, {
        icon: "bars",
        onClick: this.toggleNavbarVisibility
      }));
    }

    return renderHamburgerButton;
  }();

  _proto.renderTagNav = function () {
    function renderTagNav() {
      return React.createElement("header", {
        className: "menu",
        role: "banner"
      }, React.createElement(Components.TagNav, (0, _extends2.default)({
        isVisible: this.state.navBarVisible,
        closeNavbar: this.handleCloseNavbar
      }, this.props), React.createElement(Components.Brand, null), this.renderNotificationIcon(), this.renderLanguage(), this.renderCurrency()));
    }

    return renderTagNav;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "rui navbar"
      }, this.props.visibility.hamburger && this.renderHamburgerButton(), this.props.visibility.brand && this.renderBrand(), this.props.visibility.tags && this.renderTagNav(), this.props.visibility.search && this.renderSearchButton(), this.props.visibility.notifications && this.renderNotificationIcon(), this.props.visibility.languages && this.renderLanguage(), this.props.visibility.currency && this.renderCurrency(), this.props.visibility.mainDropdown && this.renderMainDropdown(), this.props.visibility.cartContainer && this.renderCartContainerAndPanel());
    }

    return render;
  }();

  return NavBar;
}(Component);

NavBar.propTypes = {
  brandMedia: PropTypes.object,
  hasProperPermission: PropTypes.bool,
  searchEnabled: PropTypes.bool,
  shop: PropTypes.object,
  visibility: PropTypes.object.isRequired
};
NavBar.defaultProps = {
  visibility: {
    hamburger: true,
    brand: true,
    tags: true,
    search: true,
    notifications: true,
    languages: true,
    currency: true,
    mainDropdown: true,
    cartContainer: true
  }
};
module.exportDefault(NavBar);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"navbarCheckout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-navbar/client/components/navbarCheckout.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var NavBar;
module.watch(require("../components/navbar"), {
  "default": function (v) {
    NavBar = v;
  }
}, 1);

var NavBarCheckout = function (props, context) {
  var visibility = {
    hamburger: false,
    brand: true,
    tags: false,
    search: false,
    notifications: false,
    languages: false,
    currency: false,
    mainDropdown: false,
    cartContainer: false
  };
  var newProps = (0, _objectSpread2.default)({}, props, {
    visibility: visibility
  });
  return React.createElement(NavBar, newProps, context);
};

module.exportDefault(NavBarCheckout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"navbar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-navbar/client/containers/navbar.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  composer: function () {
    return composer;
  }
});
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var NavBar;
module.watch(require("../components/navbar"), {
  "default": function (v) {
    NavBar = v;
  }
}, 3);
var Shops;
module.watch(require("../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 4);
var Media;
module.watch(require("../../../files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 5);

function composer(props, onData) {
  var shopSub = Meteor.subscribe("MerchantShops", Reaction.getShopsForUser(["admin"]));

  if (!shopSub.ready()) {
    return;
  }

  var shop = Shops.findOne(Reaction.getShopId());
  var searchPackage = Reaction.Apps({
    provides: "ui-search"
  });
  var user = Meteor.user();
  var searchEnabled;
  var searchTemplate;
  var brandMedia;
  var shops;

  if (user && user.roles) {
    // Get all shops for which user has roles
    shops = Shops.find({
      $and: [{
        _id: {
          $in: Object.keys(user.roles)
        }
      }, {
        $or: [{
          "workflow.status": "active"
        }, {
          _id: Reaction.getPrimaryShopId()
        }]
      }]
    }).fetch();
  }
  /**
   * handleShopSelectChange
   * @method
   * @summary Handle change in selected shop
   * @param {script} event
   * @param {String} shopId - selected shopId
   * @since 1.5.8
   * @return {void}
  */


  var handleShopSelectChange = function (event, shopId) {
    // set shopId
    Reaction.setShopId(shopId);
  };

  if (searchPackage.length) {
    searchEnabled = true;
    searchTemplate = searchPackage[0].template;
  } else {
    searchEnabled = false;
  }

  if (shop && Array.isArray(shop.brandAssets)) {
    var brandAsset = shop.brandAssets.find(function (asset) {
      return asset.type === "navbarBrandImage";
    });
    brandMedia = brandAsset && Media.findOneLocal(brandAsset.mediaId);
  }

  var hasProperPermission = Reaction.hasPermission("account/profile");
  onData(null, {
    shop: shop,
    brandMedia: brandMedia,
    searchEnabled: searchEnabled,
    searchTemplate: searchTemplate,
    hasProperPermission: hasProperPermission,
    shops: shops,
    handleShopSelectChange: handleShopSelectChange
  });
}

registerComponent("NavBar", NavBar, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(NavBar));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"navbarCheckout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-navbar/client/containers/navbarCheckout.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 0);
var NavBarCheckout;
module.watch(require("../components/navbarCheckout"), {
  "default": function (v) {
    NavBarCheckout = v;
  }
}, 1);
var composer;
module.watch(require("./navbar"), {
  composer: function (v) {
    composer = v;
  }
}, 2);
registerComponent("NavBarCheckout", NavBarCheckout, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(NavBarCheckout));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-navbar/client/index.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./components/brand"), {
  "default": function (v) {
    exports.Brand = v;
  }
}, 0);
module.watch(require("./containers/navbar"), {
  "default": function (v) {
    exports.Navbar = v;
  }
}, 1);
module.watch(require("./containers/navbarCheckout"), {
  "default": function (v) {
    exports.NavBarCheckout = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"ui-tagnav":{"client":{"components":{"tagGroup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/components/tagGroup.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 4);
var TagHelpers;
module.watch(require("../helpers"), {
  TagHelpers: function (v) {
    TagHelpers = v;
  }
}, 5);
var getTagIds;
module.watch(require("../../../../../../lib/selectors/tags"), {
  getTagIds: function (v) {
    getTagIds = v;
  }
}, 6);
var Router;
module.watch(require("../../../../../../client/api"), {
  Router: function (v) {
    Router = v;
  }
}, 7);

var TagGroup =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TagGroup, _Component);

  function TagGroup(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _initialiseProps.call((0, _assertThisInitialized2.default)(_this));

    var _props$tagGroupProps = props.tagGroupProps,
        parentTag = _props$tagGroupProps.parentTag,
        tagsByKey = _props$tagGroupProps.tagsByKey,
        tagIds = _props$tagGroupProps.tagIds;
    _this.state = {
      suggestions: [],
      newTag: {
        name: ""
      },
      tagIds: tagIds,
      parentTag: parentTag,
      tagsByKey: tagsByKey
    };
    return _this;
  }

  var _proto = TagGroup.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var _nextProps$tagGroupPr = nextProps.tagGroupProps,
          parentTag = _nextProps$tagGroupPr.parentTag,
          tagsByKey = _nextProps$tagGroupPr.tagsByKey,
          tagIds = _nextProps$tagGroupPr.tagIds;
      this.setState({
        tagIds: tagIds,
        parentTag: parentTag,
        tagsByKey: tagsByKey
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.renderTree = function () {
    function renderTree(tags) {
      var _this2 = this;

      if (Array.isArray(tags)) {
        return tags.map(function (tag) {
          return React.createElement("div", {
            className: "rui grouptag " + _this2.className,
            "data-id": tag._id,
            key: tag._id
          }, React.createElement(Components.TagGroupHeader, (0, _extends2.default)({}, _this2.props, {
            tag: tag,
            parentTag: _this2.state.parentTag,
            onTagRemove: _this2.props.onTagRemove
          })), React.createElement(Components.TagGroupBody, (0, _extends2.default)({}, _this2.props, {
            tagGroupBodyProps: _this2.tagGroupBodyProps(tag)
          })));
        });
      }
    }

    return renderTree;
  }();

  _proto.render = function () {
    function render() {
      var slug = this.state.parentTag.slug;
      var url = Router.pathFor("tag", {
        hash: {
          slug: slug
        }
      });
      return React.createElement("div", {
        className: "rui tagtree"
      }, React.createElement("div", {
        className: "header"
      }, React.createElement("span", {
        className: "title"
      }, this.state.parentTag.name), React.createElement("a", {
        href: url
      }, "View All ", React.createElement("i", {
        className: "fa fa-angle-right"
      }))), React.createElement("div", {
        className: "content"
      }, this.renderTree(this.tags), this.props.editable && React.createElement("div", {
        className: "rui grouptag create"
      }, React.createElement("div", {
        className: "header"
      }, React.createElement(Components.TagItem, {
        blank: true,
        tag: this.state.newTag,
        key: "newTagForm",
        inputPlaceholder: "Add Tag",
        i18nKeyInputPlaceholder: "tags.addTag",
        suggestions: this.state.suggestions,
        onClearSuggestions: this.handleClearSuggestions,
        onGetSuggestions: this.handleGetSuggestions,
        onTagInputBlur: this.handleNewTagSave,
        onTagSave: this.handleNewTagSave,
        onTagUpdate: this.handleNewTagUpdate
      })))));
    }

    return render;
  }();

  (0, _createClass2.default)(TagGroup, [{
    key: "tags",
    get: function () {
      var _this3 = this;

      if (this.props.editable) {
        return this.state.tagIds.map(function (tagId) {
          return _this3.state.tagsByKey[tagId];
        });
      }

      return this.props.tagGroupProps.subTagGroups;
    }
  }, {
    key: "className",
    get: function () {
      if (this.props.blank) {
        return "create";
      }

      return "";
    }
  }]);
  return TagGroup;
}(Component);

var _initialiseProps = function () {
  var _this4 = this;

  this.handleGetSuggestions = function (suggestionUpdateRequest) {
    var suggestions = TagHelpers.updateSuggestions(suggestionUpdateRequest.value, {
      excludeTags: _this4.state.tagIds
    });

    _this4.setState({
      suggestions: suggestions
    });
  };

  this.handleClearSuggestions = function () {
    _this4.setState({
      suggestions: []
    });
  };

  this.handleNewTagSave = function (event, tag) {
    if (_this4.props.onNewTagSave) {
      _this4.props.onNewTagSave(tag, _this4.props.tagGroupProps.parentTag);

      _this4.setState({
        newTag: {
          name: ""
        }
      });
    }
  };

  this.handleTagUpdate = function (event, tag) {
    var _tagsByKey;

    var newState = update(_this4.state, {
      tagsByKey: (_tagsByKey = {}, _tagsByKey[tag._id] = {
        $set: tag
      }, _tagsByKey)
    });

    _this4.setState(newState);
  };

  this.handleNewTagUpdate = function (event, tag) {
    // updates blank tag state being edited
    _this4.setState({
      newTag: tag
    });
  };

  this.tagGroupBodyProps = function (tag) {
    var subTagGroups = _compact(TagHelpers.subTags(tag));

    var tagsByKey = {};

    if (Array.isArray(subTagGroups)) {
      for (var _iterator = subTagGroups, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _tagItem = _ref;
        tagsByKey[_tagItem._id] = _tagItem;
      }
    }

    return {
      parentTag: tag,
      tagsByKey: tagsByKey || {},
      tagIds: getTagIds({
        tags: subTagGroups
      }) || [],
      subTagGroups: subTagGroups
    };
  };
};

TagGroup.propTypes = {
  blank: PropTypes.bool,
  editable: PropTypes.bool,
  onNewTagSave: PropTypes.func,
  onTagRemove: PropTypes.func,
  tagGroupProps: PropTypes.object
};
registerComponent("TagGroup", TagGroup);
module.exportDefault(TagGroup);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tagGroupBody.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/components/tagGroupBody.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 0);

var _debounce;

module.watch(require("lodash/debounce"), {
  "default": function (v) {
    _debounce = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 3);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 4);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 5);

var TagGroupBody =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TagGroupBody, _Component);

  function TagGroupBody(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleNewTagSave = function (event, tag) {
      if (_this.props.onNewTagSave) {
        _this.props.onNewTagSave(tag, _this.state.parentTag);

        _this.setState({
          newTag: {
            name: ""
          }
        });
      }
    };

    _this.handleTagUpdate = function (event, tag) {
      var _tagsByKey;

      var newState = update(_this.state, {
        tagsByKey: (_tagsByKey = {}, _tagsByKey[tag._id] = {
          $set: tag
        }, _tagsByKey)
      });

      _this.setState(newState);
    };

    _this.handleNewTagUpdate = function (event, tag) {
      // updates blank tag state being edited
      _this.setState({
        newTag: tag
      });
    };

    _this.handleGetSuggestions = function (suggestionUpdateRequest) {
      var suggestions = _this.props.updateSuggestions(suggestionUpdateRequest.value, {
        excludeTags: _this.state.tagIds
      });

      _this.setState({
        suggestions: suggestions
      });
    };

    _this.handleClearSuggestions = function () {
      _this.setState({
        suggestions: []
      });
    };

    _this.handleMoveTag = function (dragIndex, hoverIndex) {
      var tag = _this.state.tagIds[dragIndex];

      if (!tag) {
        return false;
      } // Apply new sort order to variant list


      var newState = update(_this.state, {
        tagIds: {
          $splice: [[dragIndex, 1], [hoverIndex, 0, tag]]
        }
      }); // Set local state so the component does't have to wait for a round-trip
      // to the server to get the updated list of variants

      _this.setState(newState, function () {
        _debounce(function () {
          return _this.props.onTagSort(_this.state.tagIds, _this.state.parentTag);
        }, 500)();
      });
    };

    _this.handleTagSave = function (event, tag) {
      if (_this.props.onUpdateTag) {
        _this.props.onUpdateTag(tag._id, tag.name, _this.state.parentTag._id);
      }
    };

    var _props$tagGroupBodyPr = props.tagGroupBodyProps,
        parentTag = _props$tagGroupBodyPr.parentTag,
        tagsByKey = _props$tagGroupBodyPr.tagsByKey,
        tagIds = _props$tagGroupBodyPr.tagIds;
    _this.state = {
      suggestions: [],
      newTag: {
        name: ""
      },
      tagIds: tagIds,
      parentTag: parentTag,
      tagsByKey: tagsByKey
    };
    return _this;
  }

  var _proto = TagGroupBody.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var _nextProps$tagGroupBo = nextProps.tagGroupBodyProps,
          parentTag = _nextProps$tagGroupBo.parentTag,
          tagsByKey = _nextProps$tagGroupBo.tagsByKey,
          tagIds = _nextProps$tagGroupBo.tagIds;
      this.setState({
        tagIds: tagIds,
        parentTag: parentTag,
        tagsByKey: tagsByKey
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.genTagsList = function () {
    function genTagsList(tags, parentTag) {
      var _this2 = this;

      if (Array.isArray(tags)) {
        return tags.map(function (tag, index) {
          return React.createElement(Components.TagItem, {
            tag: tag,
            index: index,
            key: index,
            "data-id": tag._id,
            editable: _this2.props.editable,
            isSelected: _this2.isSelected,
            parentTag: parentTag,
            draggable: true,
            selectable: true,
            suggestions: _this2.state.suggestions,
            onClearSuggestions: _this2.handleClearSuggestions,
            onGetSuggestions: _this2.handleGetSuggestions,
            onMove: _this2.handleMoveTag,
            onTagInputBlur: _this2.handleTagSave,
            onTagMouseOut: _this2.handleTagMouseOut,
            onTagMouseOver: _this2.handleTagMouseOver,
            onTagRemove: _this2.props.onTagRemove,
            onTagSave: _this2.handleTagSave,
            onTagSelect: _this2.onTagSelect,
            onTagUpdate: _this2.handleTagUpdate,
            onTagClick: _this2.props.onTagClick
          });
        });
      }
    }

    return genTagsList;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "content"
      }, React.createElement("div", {
        className: "rui tags",
        "data-id": this.state.parentTag._id
      }, this.genTagsList(_compact(this.tags), this.state.parentTag), this.props.editable && React.createElement("div", {
        className: "rui item create"
      }, React.createElement(Components.TagItem, {
        blank: true,
        key: "newTagForm",
        tag: this.state.newTag,
        inputPlaceholder: "Add Tag",
        i18nKeyInputPlaceholder: "tags.addTag",
        suggestions: this.state.suggestions,
        onClearSuggestions: this.handleClearSuggestions,
        onGetSuggestions: this.handleGetSuggestions,
        onMoveTag: this.handleMoveTag,
        onTagInputBlur: this.handleNewTagSave,
        onTagSave: this.handleNewTagSave,
        onTagUpdate: this.handleNewTagUpdate
      }))));
    }

    return render;
  }();

  (0, _createClass2.default)(TagGroupBody, [{
    key: "tags",
    get: function () {
      var _this3 = this;

      if (this.props.editable) {
        return this.state.tagIds.map(function (tagId) {
          return _this3.state.tagsByKey[tagId];
        });
      }

      return this.props.tagGroupBodyProps.subTagGroups;
    }
  }]);
  return TagGroupBody;
}(Component);

TagGroupBody.propTypes = {
  editable: PropTypes.bool,
  onNewTagSave: PropTypes.func,
  onTagClick: PropTypes.func,
  onTagRemove: PropTypes.func,
  onTagSort: PropTypes.func,
  onUpdateTag: PropTypes.func,
  tagGroupBodyProps: PropTypes.object,
  updateSuggestions: PropTypes.func
};
registerComponent("TagGroupBody", TagGroupBody);
module.exportDefault(TagGroupBody);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tagGroupHeader.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/components/tagGroupHeader.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var TagGroupHeader =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TagGroupHeader, _Component);

  function TagGroupHeader(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleGetSuggestions = function (suggestionUpdateRequest) {
      var suggestions = _this.props.updateSuggestions(suggestionUpdateRequest.value, {
        excludeTags: _this.state.tagIds
      });

      _this.setState({
        suggestions: suggestions
      });
    };

    _this.handleTagUpdate = function (event, tag) {
      _this.setState({
        tag: tag
      });
    };

    _this.handleTagSave = function (event, tag) {
      if (_this.props.onUpdateTag) {
        _this.props.onUpdateTag(tag._id, tag.name, _this.props.parentTag._id);
      }
    };

    _this.handleTagTreeMove = function () {// needed to prevent move errors, pending fix for TagGroup draging
    };

    _this.state = {
      suggestions: [],
      tag: _this.props.tag
    };
    return _this;
  }

  var _proto = TagGroupHeader.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "header"
      }, React.createElement(Components.TagItem, {
        tag: this.state.tag,
        parentTag: this.props.parentTag,
        selectable: true,
        className: "js-tagNav-item",
        editable: this.props.editable,
        isSelected: this.isSelected,
        suggestions: this.state.suggestions,
        onClearSuggestions: this.handleClearSuggestions,
        onGetSuggestions: this.handleGetSuggestions,
        onMove: this.handleTagTreeMove,
        onTagRemove: this.props.onTagRemove,
        onTagSave: this.handleTagSave,
        onTagInputBlur: this.handleTagSave,
        onTagUpdate: this.handleTagUpdate,
        onTagClick: this.props.onTagClick
      }));
    }

    return render;
  }();

  return TagGroupHeader;
}(Component);

TagGroupHeader.propTypes = {
  editable: PropTypes.bool,
  onTagClick: PropTypes.func,
  onTagRemove: PropTypes.func,
  onUpdateTag: PropTypes.func,
  parentTag: PropTypes.object,
  tag: PropTypes.object,
  updateSuggestions: PropTypes.func
};
registerComponent("TagGroupHeader", TagGroupHeader);
module.exportDefault(TagGroupHeader);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tagNav.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/components/tagNav.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Components;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);
var getTagIds;
module.watch(require("../../../../../../lib/selectors/tags"), {
  getTagIds: function (v) {
    getTagIds = v;
  }
}, 4);
var TagHelpers;
module.watch(require("../helpers"), {
  TagHelpers: function (v) {
    TagHelpers = v;
  }
}, 5);
var ShopSelect;
module.watch(require("../../../dashboard/client/components/shopSelect"), {
  "default": function (v) {
    ShopSelect = v;
  }
}, 6);

var TagNav =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TagNav, _Component);

  function TagNav(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.onShopSelectChange = function (event, shopId) {
      if (_this.props.handleShopSelectChange) {
        _this.props.handleShopSelectChange(event, shopId);
      }
    };

    _this.tagGroupProps = function (tag) {
      var subTagGroups = _compact(TagHelpers.subTags(tag));

      var tagsByKey = {};

      if (Array.isArray(subTagGroups)) {
        for (var _iterator = subTagGroups, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _tagItem = _ref;
          tagsByKey[_tagItem._id] = _tagItem;
        }
      }

      return {
        parentTag: tag,
        tagsByKey: tagsByKey || {},
        tagIds: getTagIds({
          tags: subTagGroups
        }) || [],
        subTagGroups: subTagGroups
      };
    };

    _this.state = {
      selectedTag: _this.props.selectedTag || {}
    };
    return _this;
  }

  var _proto = TagNav.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      this.setState({
        selectedTag: nextProps.selectedTag
      });
    }

    return componentWillReceiveProps;
  }();
  /**
   * onShopSelectChange
   * @method
   * @summary Handle change in selected shop
   * @param {script} event
   * @param {String} shopId - selected shopId
   * @since 1.5.8
   * @return {void}
  */


  _proto.renderEditButton = function () {
    function renderEditButton() {
      var editContainerItem = this.props.navButtonStyles.editContainerItem;
      return React.createElement("span", {
        className: "navbar-item edit-button",
        style: editContainerItem
      }, React.createElement(Components.EditButton, {
        onClick: this.props.onEditButtonClick,
        bezelStyle: "solid",
        primary: true,
        icon: "fa fa-pencil",
        onIcon: "fa fa-check",
        toggle: true,
        toggleOn: this.props.editable
      }));
    }

    return renderEditButton;
  }();
  /**
  * renderShopSelect
  * @method
  * @summary Handles shop options display on mobile view
  * @return {JSX} React node containing dropdown menu
  */


  _proto.renderShopSelect = function () {
    function renderShopSelect() {
      if (this.props.handleShopSelectChange) {
        return React.createElement(ShopSelect, {
          className: "shop-select",
          isTagNav: true,
          onShopSelectChange: this.onShopSelectChange,
          shopName: this.props.shop.name,
          shops: this.props.shops,
          shopId: this.props.shop._id
        });
      }

      return null;
    }

    return renderShopSelect;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          navbarOrientation = _props.navbarOrientation,
          navbarPosition = _props.navbarPosition,
          navbarAnchor = _props.navbarAnchor,
          navbarVisibility = _props.navbarVisibility;
      return React.createElement("div", {
        className: "rui tagnav " + navbarOrientation + " " + navbarPosition + " " + navbarAnchor + " " + navbarVisibility
      }, React.createElement("div", {
        className: "navbar-header"
      }, React.createElement(Components.Button, {
        primary: true,
        icon: "times",
        status: "default",
        className: "close-button",
        onClick: this.props.closeNavbar
      }), this.props.children), this.renderShopSelect(), React.createElement("div", {
        className: "navbar-items"
      }, React.createElement(Components.DragDropProvider, null, React.createElement(Components.TagList, (0, _extends2.default)({}, this.props, {
        isTagNav: true,
        draggable: true,
        enableNewTagForm: true
      }), React.createElement("div", {
        className: "dropdown-container"
      }, React.createElement(Components.TagGroup, (0, _extends2.default)({}, this.props, {
        editable: this.props.editable === true,
        tagGroupProps: this.tagGroupProps(this.state.selectedTag || {}),
        onMove: this.props.onMoveTag,
        onTagInputBlur: this.handleTagSave,
        onTagMouseOut: this.handleTagMouseOut,
        onTagMouseOver: this.handleTagMouseOver,
        onTagSave: this.handleTagSave
      }))))), this.props.canEdit && this.renderEditButton()));
    }

    return render;
  }();

  return TagNav;
}(Component);

TagNav.propTypes = {
  canEdit: PropTypes.bool,
  children: PropTypes.node,
  closeNavbar: PropTypes.func,
  editable: PropTypes.bool,
  handleShopSelectChange: PropTypes.func,
  navButtonStyles: PropTypes.object,
  navbarAnchor: PropTypes.string,
  navbarOrientation: PropTypes.string,
  navbarPosition: PropTypes.string,
  navbarVisibility: PropTypes.string,
  onEditButtonClick: PropTypes.func,
  onMoveTag: PropTypes.func,
  selectedTag: PropTypes.object,
  shop: PropTypes.object,
  shops: PropTypes.array
};
module.exportDefault(TagNav);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"tagNavContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/containers/tagNavContainer.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);

var _sortBy;

module.watch(require("lodash/sortBy"), {
  "default": function (v) {
    _sortBy = v;
  }
}, 1);

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 2);

var _debounce;

module.watch(require("lodash/debounce"), {
  "default": function (v) {
    _debounce = v;
  }
}, 3);

var _find;

module.watch(require("lodash/find"), {
  "default": function (v) {
    _find = v;
  }
}, 4);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 5);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 6);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 7);
var Components, registerComponent, composeWithTracker;
module.watch(require("../../../components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 8);
var Reaction, Router;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Router: function (v) {
    Router = v;
  }
}, 9);
var getTagIds;
module.watch(require("../../../../../../lib/selectors/tags"), {
  getTagIds: function (v) {
    getTagIds = v;
  }
}, 10);
var TagHelpers;
module.watch(require("../helpers"), {
  TagHelpers: function (v) {
    TagHelpers = v;
  }
}, 11);
var Tags;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  }
}, 12);
var TagNav;
module.watch(require("../components/tagNav"), {
  "default": function (v) {
    TagNav = v;
  }
}, 13);
var navButtonStyles = {
  editContainerItem: {
    display: "flex",
    marginLeft: 5
  }
};
var NavbarStates = {
  Orientation: "stateNavbarOrientation",
  Position: "stateNavbarPosition",
  Anchor: "stateNavbarAnchor",
  Visible: "stateNavbarVisible"
};
var NavbarOrientation = {
  Vertical: "vertical",
  Horizontal: "horizontal"
};
var NavbarPosition = {
  Static: "static",
  Fixed: "fixed"
};
var NavbarAnchor = {
  Top: "top",
  Right: "right",
  Bottom: "bottom",
  Left: "left",
  None: "inline"
};
var TagNavHelpers = {
  onTagCreate: function (tagName, parentTag) {
    TagHelpers.createTag(tagName, undefined, parentTag);
  },
  onTagRemove: function (tag, parentTag) {
    TagHelpers.removeTag(tag, parentTag);
  },
  onTagSort: function (tagIds, parentTag) {
    TagHelpers.sortTags(tagIds, parentTag);
  },
  onTagDragAdd: function (movedTagId, toListId, toIndex, ofList) {
    TagHelpers.moveTagToNewParent(movedTagId, toListId, toIndex, ofList);
  },
  onUpdateTag: function (tagId, tagName, parentTagId) {
    TagHelpers.updateTag(tagId, tagName, parentTagId);
  },
  isMobile: function () {
    return window.matchMedia("(max-width: 991px)").matches;
  },
  tagById: function (tagId, tags) {
    return _find(tags, function (tag) {
      return tag._id === tagId;
    });
  },
  updateSuggestions: function (suggestion, excludeTagsObj) {
    return TagHelpers.updateSuggestions(suggestion, excludeTagsObj);
  },
  hasSubTags: function (tagId, tags) {
    var foundTag = this.tagById(tagId, tags);

    if (foundTag) {
      if (Array.isArray(foundTag.relatedTagIds) && foundTag.relatedTagIds.length) {
        return true;
      }
    }

    return false;
  }
};

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(TagNavContainer, _Component);

    function TagNavContainer(props) {
      var _this$state;

      var _this;

      _this = _Component.call(this, props) || this;

      _this.onWindowResize = function () {
        var matchQuery = window.matchMedia("(max-width: 991px)");

        if (matchQuery.matches) {
          var _this$setState;

          _this.setState((_this$setState = {}, _this$setState[NavbarStates.Orientation] = NavbarOrientation.Vertical, _this$setState[NavbarStates.Position] = NavbarPosition.Fixed, _this$setState[NavbarStates.Anchor] = NavbarAnchor.Left, _this$setState));
        } else {
          var _this$setState2;

          _this.setState((_this$setState2 = {}, _this$setState2[NavbarStates.Orientation] = NavbarOrientation.Horizontal, _this$setState2[NavbarStates.Position] = NavbarPosition.Static, _this$setState2[NavbarStates.Anchor] = NavbarAnchor.None, _this$setState2[NavbarStates.Visible] = false, _this$setState2));
        }
      };

      _this.handleNewTagSave = function (tag, parentTag) {
        if (_this.canSaveTag(tag)) {
          TagNavHelpers.onTagCreate(tag.name, parentTag);

          _this.setState({
            newTag: {
              name: ""
            }
          });
        }
      };

      _this.handleNewTagUpdate = function (tag) {
        // updates the current tag state being edited
        _this.setState({
          newTag: tag
        });
      };

      _this.handleTagRemove = function (tag, parentTag) {
        TagNavHelpers.onTagRemove(tag, parentTag);
      };

      _this.handleTagUpdate = function (tag) {
        var _tagsByKey;

        var newState = update(_this.state, {
          tagsByKey: (_tagsByKey = {}, _tagsByKey[tag._id] = {
            $set: tag
          }, _tagsByKey)
        });

        _this.setState(newState);
      };

      _this.handleTagSave = function (tag) {
        TagNavHelpers.onUpdateTag(tag._id, tag.name);
      };

      _this.handleMoveTag = function (dragIndex, hoverIndex) {
        var tag = _this.state.tagIds[dragIndex]; // Apply new sort order to variant list

        var newState = update(_this.state, {
          tagIds: {
            $splice: [[dragIndex, 1], [hoverIndex, 0, tag]]
          }
        }); // Set local state so the component does't have to wait for a round-trip
        // to the server to get the updated list of variants

        _this.setState(newState, function () {
          _debounce(function () {
            return TagNavHelpers.onTagSort(_this.state.tagIds);
          }, 500)(); // Save the updated positions

        });
      };

      _this.handleGetSuggestions = function (suggestionUpdateRequest) {
        var suggestions = TagNavHelpers.updateSuggestions(suggestionUpdateRequest.value, {
          excludeTags: _this.state.tagIds
        });

        _this.setState({
          suggestions: suggestions
        });
      };

      _this.handleClearSuggestions = function () {
        _this.setState({
          suggestions: []
        });
      };

      _this.attachBodyListener = function () {
        document.body.addEventListener("mouseover", _this.closeDropdown);

        _this.setState({
          attachedBodyListener: true
        });
      };

      _this.detachhBodyListener = function () {
        document.body.removeEventListener("mouseover", _this.closeDropdown);

        _this.setState({
          attachedBodyListener: false
        });
      };

      _this.closeDropdown = function (event) {
        var closestNavItem = event.target.closest(".navbar-item"); // on mouseover an element outside of tags, close dropdown

        if (_this._isMounted && !closestNavItem) {
          _this.closeDropdownTimeout = setTimeout(function () {
            _this.setState({
              selectedTag: null
            });

            _this.detachhBodyListener();
          }, 500);
        } else if (_this.closeDropdownTimeout) {
          clearTimeout(_this.closeDropdownTimeout);
        }
      };

      _this.onTagSelect = function (currentSelectedTag) {
        if (_isEqual(currentSelectedTag, _this.state.selectedTag)) {
          _this.setState({
            selectedTag: null
          });
        } else {
          _this.setState({
            selectedTag: currentSelectedTag
          });
        }
      };

      _this.handleTagMouseOver = function (event, tag) {
        var tagId = tag._id;
        var tags = _this.props.tagsAsArray;

        if (TagNavHelpers.isMobile()) {
          return;
        } // While in edit mode, don't trigger the hover hide/show menu


        if (_this.state.editable === false) {
          // User mode
          // Don't show dropdown if there are no subtags
          if (TagNavHelpers.hasSubTags(tagId, tags) === false) {
            _this.setState({
              selectedTag: null
            });

            return;
          } // Otherwise, show the menu
          // And Attach an event listener to the document body
          // This will check to see if the dropdown should be closed if the user
          // leaves the tag nav bar


          _this.attachBodyListener();

          _this.setState({
            selectedTag: TagNavHelpers.tagById(tagId, tags)
          });
        }
      };

      _this.handleTagClick = function (event, tag) {
        if (TagNavHelpers.isMobile()) {
          var tagId = tag._id;
          var tags = _this.props.tagsAsArray;
          var selectedTag = _this.state.selectedTag;
          var hasSubTags = TagNavHelpers.hasSubTags(tagId, tags);

          if (hasSubTags === false) {
            // click close button to make navbar left disappear
            _this.props.closeNavbar();

            Router.go("tag", {
              slug: tag.slug
            });
          } else {
            event.preventDefault();
          }

          if (selectedTag && selectedTag._id === tagId) {
            _this.setState({
              selectedTag: null
            });
          } else if (hasSubTags) {
            _this.setState({
              selectedTag: TagNavHelpers.tagById(tagId, tags)
            });
          }
        } else {
          Router.go("tag", {
            slug: tag.slug
          });
        }
      };

      _this.handleEditButtonClick = function () {
        _this.setState({
          editable: !_this.state.editable
        });
      };

      _this.navbarSelectedClassName = function (tag) {
        var currentSelectedTag = _this.state.selectedTag;

        if (currentSelectedTag) {
          if (currentSelectedTag._id === tag._id) {
            return "selected";
          }
        }

        return "";
      };

      _this._isMounted = false;
      _this.state = (_this$state = {
        attachedBodyListener: false,
        editable: false,
        tagIds: props.tagIds || [],
        tagsByKey: props.tagsByKey || {},
        selectedTag: null,
        suggestions: []
      }, _this$state[NavbarStates.Visible] = props.isVisible, _this$state.newTag = {
        name: ""
      }, _this$state);
      _this.onWindowResize = _this.onWindowResize.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    var _proto = TagNavContainer.prototype;

    _proto.componentDidMount = function () {
      function componentDidMount() {
        window.addEventListener("resize", this.onWindowResize);
        this.onWindowResize();
        this._isMounted = true;
      }

      return componentDidMount;
    }();

    _proto.componentWillReceiveProps = function () {
      function componentWillReceiveProps(nextProps) {
        var _this2 = this,
            _setState;

        var selectedTag = {};
        var previousEdit = this.state.editable;
        nextProps.tagsAsArray.forEach(function (tag) {
          if (_this2.isSelected(tag)) {
            selectedTag = tag;
          }
        });
        var tagIds = nextProps.tagIds,
            tagsByKey = nextProps.tagsByKey,
            isVisible = nextProps.isVisible;
        this.setState((_setState = {}, _setState[NavbarStates.Visible] = isVisible, _setState.editable = previousEdit && this.canEdit, _setState.tagIds = tagIds, _setState.tagsByKey = tagsByKey, _setState.selectedTag = selectedTag, _setState));
      }

      return componentWillReceiveProps;
    }();

    _proto.componentWillUnmount = function () {
      function componentWillUnmount() {
        window.removeEventListener("resize", this.onWindowResize);
        this._isMounted = false;
      }

      return componentWillUnmount;
    }();

    _proto.canSaveTag = function () {
      function canSaveTag(tag) {
        // Blank tags cannot be saved
        if (typeof tag.name === "string" && tag.name.trim().length === 0) {
          return false;
        } // If the tag does not have an id, then allow the save


        if (!tag._id) {
          return true;
        } // Get the original tag from the props
        // Tags from props are not mutated, and come from an outside source


        var originalTag = this.props.tagsByKey[tag._id];

        if (originalTag && originalTag.name !== tag.name) {
          return true;
        }

        return false;
      }

      return canSaveTag;
    }();

    _proto.isSelected = function () {
      function isSelected(tag) {
        var isSelected = false;

        if (this.state.selectedTag && tag) {
          isSelected = this.state.selectedTag._id === tag._id;
        }

        return isSelected;
      }

      return isSelected;
    }();

    _proto.hasDropdownClassName = function () {
      function hasDropdownClassName(tag) {
        if (Array.isArray(tag.relatedTagIds)) {
          return "has-dropdown";
        }

        return "";
      }

      return hasDropdownClassName;
    }();

    _proto.render = function () {
      function render() {
        return React.createElement("div", null, React.createElement(Comp, (0, _extends2.default)({}, this.props, TagNavHelpers, {
          navbarOrientation: this.navbarOrientation,
          navbarPosition: this.navbarPosition,
          navbarAnchor: this.navbarAnchor,
          navbarVisibility: this.navbarVisibility,
          tags: this.tags,
          canEdit: this.canEdit,
          newTag: this.state.newTag,
          selectedTag: this.state.selectedTag,
          navButtonStyles: navButtonStyles,
          editable: this.state.editable,
          hasDropdownClassName: this.hasDropdownClassName,
          navbarSelectedClassName: this.navbarSelectedClassName,
          suggestions: this.state.suggestions,
          onClearSuggestions: this.handleClearSuggestions,
          onGetSuggestions: this.handleGetSuggestions,
          onEditButtonClick: this.handleEditButtonClick,
          onMoveTag: this.handleMoveTag,
          onNewTagSave: this.handleNewTagSave,
          onNewTagUpdate: this.handleNewTagUpdate,
          onTagClick: this.handleTagClick,
          onTagMouseOver: this.handleTagMouseOver,
          onTagRemove: this.handleTagRemove,
          onTagSave: this.handleTagSave,
          onTagUpdate: this.handleTagUpdate,
          onTagSelect: this.onTagSelect
        })), React.createElement(Components.Overlay, {
          isVisible: this.state[NavbarStates.Visible],
          onClick: this.props.closeNavbar
        }));
      }

      return render;
    }();

    (0, _createClass2.default)(TagNavContainer, [{
      key: "canEdit",
      get: function () {
        return this.props.hasEditRights && Reaction.isPreview() === false;
      }
    }, {
      key: "navbarOrientation",
      get: function () {
        return this.state[NavbarStates.Orientation];
      }
    }, {
      key: "navbarPosition",
      get: function () {
        return this.state[NavbarStates.Position];
      }
    }, {
      key: "navbarAnchor",
      get: function () {
        return this.state[NavbarStates.Anchor];
      }
    }, {
      key: "navbarVisibility",
      get: function () {
        var isVisible = this.state[NavbarStates.Visible] === true;

        if (isVisible) {
          return "open";
        }

        return "closed";
      }
    }, {
      key: "tags",
      get: function () {
        var _this3 = this;

        if (this.state.editable) {
          return this.state.tagIds.map(function (tagId) {
            return _this3.state.tagsByKey[tagId];
          });
        }

        return this.props.tagsAsArray;
      }
    }]);
    return TagNavContainer;
  }(Component), _class.propTypes = {
    closeNavbar: PropTypes.func,
    editButton: PropTypes.node,
    editable: PropTypes.bool,
    hasEditRights: PropTypes.bool,
    isVisible: PropTypes.bool,
    tagIds: PropTypes.arrayOf(PropTypes.string),
    tagsAsArray: PropTypes.arrayOf(PropTypes.object),
    tagsByKey: PropTypes.object
  }, _temp;
};

var composer = function (props, onData) {
  var tags = Tags.find({
    isTopLevel: true
  }, {
    sort: {
      position: 1
    }
  }).fetch();
  tags = _sortBy(tags, "position"); // puts tags without position at end of array

  var tagsByKey = {};

  if (Array.isArray(tags)) {
    for (var _iterator = tags, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _tag = _ref;
      tagsByKey[_tag._id] = _tag;
    }
  }

  onData(null, {
    name: "coreHeaderNavigation",
    hasEditRights: Reaction.hasAdminAccess(),
    tagsAsArray: tags,
    isVisible: props.isVisible,
    tagIds: getTagIds({
      tags: tags
    }),
    tagsByKey: tagsByKey
  });
};

registerComponent("TagNav", TagNav, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(TagNav));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"helpers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/helpers/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./tags"), {
  TagHelpers: function (v) {
    exports.TagHelpers = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tags.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/helpers/tags.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

module.export({
  TagHelpers: function () {
    return TagHelpers;
  }
});

var _compact;

module.watch(require("lodash/compact"), {
  "default": function (v) {
    _compact = v;
  }
}, 0);

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 1);

var _find;

module.watch(require("lodash/find"), {
  "default": function (v) {
    _find = v;
  }
}, 2);

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 3);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Tags;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  }
}, 5);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 6);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 7);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 8);
var TagHelpers = {
  moveItem: function (oldArray, fromIndex, toIndex) {
    var newArray = _toConsumableArray(oldArray);

    newArray.splice(toIndex, 0, newArray.splice(fromIndex, 1)[0]);
    return newArray;
  },
  subTags: function (parentTag) {
    if (_isArray(parentTag.relatedTagIds)) {
      var tags = Tags.find({
        isTopLevel: false,
        _id: {
          $in: parentTag.relatedTagIds
        }
      }).fetch();
      var subTags = parentTag.relatedTagIds.map(function (tagId) {
        return _find(tags, function (tagObject) {
          return tagObject._id === tagId;
        });
      });
      return subTags;
    }

    return [];
  },
  currentTag: function () {
    return Session.get("currentTag");
  },
  getTags: function () {
    var tags = [];
    tags = Tags.find({
      isTopLevel: true
    }, {
      sort: {
        position: 1
      }
    }).fetch();
    /*
    if (this.tagIds) {
      for (let relatedTagId of this.tagIds) {
        if (!_.find(tags, {
          _id: relatedTagId
        })) {
          tags.push(Tags.findOne(relatedTagId));
        }
      }
    }*/

    if (this.tag) {
      Session.set("currentTag", this.tag._id);
    } else {
      Session.set("currentTag", "");
    }

    return tags; // there are cases where
    // we'll have no tags, and sort will error
    // so we check length for safety
    // if (tags) {
    //   tags.sort(function (a, b) {
    //     return a.position - b.position;
    //   });
    //   return tags;
    // }
  },
  createTag: function (tagName, tagId, parentTag) {
    if (!tagName) {
      return;
    }

    var parentTagId;

    if (parentTag) {
      parentTagId = parentTag._id;
    }

    Meteor.call("shop/updateHeaderTags", tagName, null, parentTagId, function (error) {
      if (error) {
        Alerts.toast(i18next.t("productDetail.tagExists"), "error");
      }
    });
  },
  updateTag: function (tagId, tagName, parentTagId) {
    Meteor.call("shop/updateHeaderTags", tagName, tagId, parentTagId, function (error) {
      if (error) {
        Alerts.toast(i18next.t("productDetail.tagExists"), "error");
      }
    });
  },

  /* eslint no-unused-vars: 0 */
  //
  //   TODO review toIndex, ofList variable implementation in tags.js moveTagToNewParent
  //
  moveTagToNewParent: function (movedTagId, toListId, toIndex, ofList) {
    if (movedTagId) {
      if (toListId) {
        var _result = Tags.update(toListId, {
          $addToSet: {
            relatedTagIds: movedTagId
          }
        });

        return _result;
      }

      var result = Tags.update(movedTagId, {
        $set: {
          isTopLevel: true
        }
      });
      return result;
    }

    return 0;
  },
  sortTags: function (tagIds, parentTag) {
    if (_isArray(tagIds)) {
      if (_isEmpty(parentTag)) {
        // Top level tags
        for (var _iterator = tagIds, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray2) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _tagId = _ref;
          Tags.update(_tagId, {
            $set: {
              position: tagIds.indexOf(_tagId)
            }
          });
        }
      } else {
        // Sub tags
        Tags.update(parentTag._id, {
          $set: {
            relatedTagIds: _compact(tagIds)
          }
        });
      }
    }
  },
  removeTag: function (tag, parentTag) {
    if (_isEmpty(parentTag) === false) {
      Tags.update(parentTag._id, {
        $pullAll: {
          relatedTagIds: [tag._id]
        }
      });
    } else if (tag.isTopLevel === true) {
      Tags.update(tag._id, {
        $set: {
          isTopLevel: false
        }
      });
    }
  },
  updateSuggestions: function (term, _ref2) {
    var excludeTags = _ref2.excludeTags;
    var slug = Reaction.getSlug(term);
    var selector = {
      slug: new RegExp(slug, "i")
    };

    if (Array.isArray(excludeTags)) {
      selector._id = {
        $nin: excludeTags
      };
    }

    var tags = Tags.find(selector).map(function (tag) {
      return {
        label: tag.name
      };
    });
    return tags;
  }
};
Template.registerHelper("reactionSubTags", TagHelpers.subTags);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/ui-tagnav/client/index.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./components/tagGroup"), {
  "default": function (v) {
    exports.TagGroup = v;
  }
}, 0);
module.watch(require("./components/tagGroupBody"), {
  "default": function (v) {
    exports.TagGroupBody = v;
  }
}, 1);
module.watch(require("./components/tagGroupHeader"), {
  "default": function (v) {
    exports.TagGroupHeader = v;
  }
}, 2);
module.watch(require("./components/tagNav"), {
  "default": function (v) {
    exports.TagNav = v;
  }
}, 3);
module.watch(require("./containers/tagNavContainer"), {
  "default": function (v) {
    exports.TagNavContainer = v;
  }
}, 4);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"dom":{"client":{"dom.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dom/client/dom.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**
 * @file Exposes the DOM object used to manipulate the document.
 * The functions are only meant to be used on the client.
 * @namespace DOM
 */
var DOM = {};
/**
 * @method setMetaTag
 * @memberof DOM
 * @summary Sets/adds a meta tag to the document head
 * @param {Object} attributes - key/value pairs for tag attributes
 * @return {undefined} no return value
 */

DOM.setMetaTag = function (attributes) {
  var currentMetaTag = document.querySelector("meta[name=\"" + attributes.name + "\"]"); // If tag exists, just update its content attribute

  if (currentMetaTag) {
    currentMetaTag.setAttribute("content", attributes.content);
    currentMetaTag.setAttribute("data-metatag", "1");
    return;
  } // Otherwise, create a new meta tag element


  var newMetaTag = document.createElement("meta");
  newMetaTag.setAttribute("name", attributes.name);
  newMetaTag.setAttribute("content", attributes.content); // This attribute will be used to remove meta tags on route changes.

  newMetaTag.setAttribute("data-metatag", "1"); // Append to document head

  document.head.appendChild(newMetaTag);
};
/**
 * @method addLinkTag
 * @memberof DOM
 * @summary Adds a link tags to the document head
 * @param {Object} attributes - key/value pairs for tag attributes
 * @return {undefined} no return value
 */


DOM.addLinkTag = function (attributes) {
  var newLinkTag = document.createElement("link");

  for (var key in meteorBabelHelpers.sanitizeForInObject(attributes)) {
    if ({}.hasOwnProperty.call(attributes, key)) {
      newLinkTag.setAttribute(key, attributes[key]);
    }
  }

  document.head.appendChild(newLinkTag);
};
/**
 * @method removeDocHeadAddedTags
 * @memberof DOM
 * @summary Removes document head tags
 * @returns {undefined} no return value
 */


DOM.removeDocHeadAddedTags = function () {
  var elements = document.querySelectorAll("[data-metatag='1']");

  for (var _iterator = elements, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var _element = _ref;

    _element.parentNode.removeChild(_element);
  }
};

module.exportDefault(DOM);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/dom/client/index.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./dom"), {
  "default": function (v) {
    exports.DOM = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"files":{"client":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/core/files/client/index.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Media: function () {
    return Media;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var MeteorFileCollection, FileRecord;
module.watch(require("@reactioncommerce/file-collections"), {
  MeteorFileCollection: function (v) {
    MeteorFileCollection = v;
  },
  FileRecord: function (v) {
    FileRecord = v;
  }
}, 1);
var MediaRecords;
module.watch(require("../../../../../lib/collections"), {
  MediaRecords: function (v) {
    MediaRecords = v;
  }
}, 2);
FileRecord.downloadEndpointPrefix = "/assets/files";
FileRecord.uploadEndpoint = "/assets/uploads";
FileRecord.absoluteUrlPrefix = Meteor.absoluteUrl();
var Media = new MeteorFileCollection("Media", {
  // The backing Meteor Mongo collection, which you must make sure is published to clients as necessary
  collection: MediaRecords,
  DDP: Meteor
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"included":{"payments-paypal":{"client":{"templates":{"checkout":{"express":{"checkoutButton.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/express/checkoutButton.html                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.checkoutButton.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.checkoutButton.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/express/template.checkoutButton.js               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paypalCheckoutButton");
Template["paypalCheckoutButton"] = new Template("Template.paypalCheckoutButton", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("isLoading"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "spinner-container"
    }, "\n      ", HTML.DIV({
      class: "spinner"
    }), "\n    "), "\n  " ];
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "paypal-express"
    }, "\n      ", HTML.DIV({
      class: function() {
        return [ "paypal-checkout-button-container ", Blaze.Unless(function() {
          return Spacebars.call(view.lookup("isConfigured"));
        }, function() {
          return "hidden";
        }) ];
      }
    }, "\n        ", HTML.BUTTON({
      class: "btn btn-block btn-info js-paypal-express-checkout"
    }, HTML.I({
      class: "fa fa-paypal"
    }), "\n          ", HTML.SPAN({
      "data-i18n": "checkout.paymentMethod.expressButtonLabel"
    }, "Checkout with PayPal Express"), "\n        "), "\n      "), "\n\n      ", HTML.DIV({
      class: function() {
        return [ "paypal-checkout-alert-message ", Blaze.If(function() {
          return Spacebars.call(view.lookup("isConfigured"));
        }, function() {
          return "hidden";
        }) ];
      }
    }, "\n        ", Blaze.If(function() {
      return Spacebars.call(view.lookup("hasAdminAccess"));
    }, function() {
      return [ "\n        ", HTML.DIV({
        class: "alert alert-danger"
      }, "\n          ", HTML.I({
        class: "fa fa-paypal"
      }), "\n          ", HTML.SPAN({
        "data-i18n": "checkout.paymentMethod.expressNotConfigured"
      }, "Paypal Express misconfigured."), "\n        "), "\n        " ];
    }, function() {
      return [ "\n        ", HTML.DIV({
        class: "alert alert-warning"
      }, "\n          ", HTML.I({
        class: "fa fa-paypal"
      }), "\n          ", HTML.SPAN({
        "data-i18n": "checkout.paymentMethod.expressNotAvailable"
      }, "Paypal Express not available"), "\n        "), "\n        " ];
    }), "\n      "), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"checkoutButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/express/checkoutButton.js                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 4);
var i18next;
module.watch(require("../../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 5);
var Cart;
module.watch(require("../../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 6);
var PaypalClientAPI;
module.watch(require("../../../lib/paypalRestApi"), {
  PaypalClientAPI: function (v) {
    PaypalClientAPI = v;
  }
}, 7);
module.watch(require("./checkoutButton.html"));

/**
 * PayPal Checkout Button
 *
 * This is the PayPal Express Checkout button that displays opens a popup,
 * provided by paypal.
 */

/**
 * Checkout - Open PayPal Express popup
 * @return {undefined} no return value
 */
function checkout() {
  paypal.checkout.initXO();
  var cart = Cart.findOne();

  if (!cart) {
    return undefined;
  }

  return Meteor.call("getExpressCheckoutToken", cart._id, function (error, token) {
    if (error) {
      var msg = (error !== null ? error.error : undefined) || i18next.t("checkoutPayment.processingError", "There was a problem with your payment.");
      Alerts.add(msg, "danger", {
        placement: "paymentMethod"
      });
      return paypal.checkout.closeFlow();
    }

    var url = paypal.checkout.urlPrefix + token;
    return paypal.checkout.startFlow(url);
  });
}
/**
 * Validate express checkout settings object
 * @param  {Object} settings Object containing "merchantId" and "mode":
 * @return {Boolean} true if valid, false otherwise
 */


function expressCheckoutSettingsValid(settings) {
  return _isEmpty(settings.merchantId) === false && _isEmpty(settings.mode) === false;
}
/**
 * PayPal checkout onCreate
 * @param  {Function} function to execute when template is created
 * @return {undefined} no return value
 */


Template.paypalCheckoutButton.onCreated(function () {
  Meteor.call("getExpressCheckoutSettings", function (error, expressCheckoutSettings) {
    if (!error) {
      return Session.set("expressCheckoutSettings", expressCheckoutSettings);
    }
  });
  PaypalClientAPI.load();
  this.state = new ReactiveDict();
  this.state.setDefault({
    isConfigured: true,
    isLoading: true
  });
});
/**
 * PayPal checkout onRendered
 * @param  {Function} function to execute when template is rendered
 * @return {undefined} no return value
 */

Template.paypalCheckoutButton.onRendered(function () {
  var _this = this;

  var element = this.$(".js-paypal-express-checkout")[0];
  this.autorun(function () {
    if (PaypalClientAPI.loaded()) {
      var expressCheckoutSettings = Session.get("expressCheckoutSettings");

      if (expressCheckoutSettingsValid(expressCheckoutSettings)) {
        // setup paypal button for this checkout
        // gives nada back to us?
        paypal.checkout.setup(expressCheckoutSettings.merchantId, {
          environment: expressCheckoutSettings.mode,
          button: element,
          // Blank function to disable default paypal onClick functionality
          click: function () {}
        });

        _this.state.set("isLoading", false);
      } else {
        _this.state.set("isConfigured", false);

        _this.state.set("isLoading", false);
      }
    } else {
      _this.state.set("isLoading", true);
    }
  });
});
/**
 * PayPal checkout button helpers
 */

Template.paypalCheckoutButton.helpers({
  expressCheckoutEnabled: function () {
    var expressCheckoutSettings = Session.get("expressCheckoutSettings");
    return expressCheckoutSettings !== undefined ? expressCheckoutSettings.enabled : undefined;
  },

  /**
   * Check for proper configuration of PayPal Express Checkout settings.
   * This function only validates that the required settings exist and are not empty.
   * @return {Boolean} true if properly configured, false otherwise
   */
  isConfigured: function () {
    return Template.instance().state.equals("isConfigured", true);
  }
});
/**
 * PayPal checkout button events
 */

Template.paypalCheckoutButton.events({
  /**
   * Click Event: Express Checkout Button
   * @return {undefined} no return value
   */
  "click .js-paypal-express-checkout": function () {
    return checkout();
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/express/index.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkoutButton.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"payflow":{"payflowForm.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/payflow/payflowForm.html                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.payflowForm.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.payflowForm.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/payflow/template.payflowForm.js                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paypalPayflowForm");
Template["paypalPayflowForm"] = new Template("Template.paypalPayflowForm", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      schema: Spacebars.call(view.lookup("PaypalPayment")),
      id: Spacebars.call("paypal-payment-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n    ", HTML.DIV({
        class: "row"
      }, "\n      ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "payerName"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "payerName"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("payerName"),
          value: Spacebars.call(view.lookup("cartPayerName"))
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "payerName"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "payerName"
          }));
        })), "\n        " ];
      }), "\n      "), "\n\n      ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cardNumber"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cardNumber"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cardNumber"),
          placeholder: Spacebars.call("XXXX XXXX XXXX XXXX")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cardNumber"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cardNumber"
          }));
        })), "\n        " ];
      }), "\n      "), "\n    "), "\n    ", HTML.DIV({
        class: "row"
      }, "\n      ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireMonth"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireMonth"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireMonth"),
          options: Spacebars.call(Spacebars.dataMustache(view.lookup("monthOptions"), false)),
          firstOption: Spacebars.call(Spacebars.dataMustache(view.lookup("i18n"), "app.monthOptions", "Choose month")),
          placeholder: Spacebars.call("Exp. Month")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireMonth"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireMonth"
          }));
        })), "\n        " ];
      }), "\n      "), "\n\n      ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireYear"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireYear"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireYear"),
          options: Spacebars.call(Spacebars.dataMustache(view.lookup("yearOptions"), false)),
          firstOption: Spacebars.call(Spacebars.dataMustache(view.lookup("i18n"), "app.yearOptions", "Choose year")),
          placeholder: Spacebars.call("Exp. Year")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireYear"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireYear"
          }));
        })), "\n        " ];
      }), "\n      "), "\n    "), "\n    ", HTML.DIV({
        class: "row"
      }, "\n      ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-3 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cvv"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cvv"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cvv"),
          placeholder: Spacebars.call("CVV")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cvv"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cvv"
          }));
        })), "\n        " ];
      }), "\n      "), "\n    "), "\n\n    ", HTML.DIV({
        class: "alert alert-danger hidden"
      }, "Oh! Snap!"), "\n    ", HTML.BUTTON({
        type: "submit",
        class: "rui btn btn-lg btn-cta btn-block btn-complete-order"
      }, "\n      ", HTML.SPAN({
        id: "btn-complete-order",
        "data-i18n": "checkoutPayment.completeYourOrder"
      }, "Complete your order"), "\n      ", HTML.I({
        class: "fa fa-spinner fa-spin hidden",
        id: "btn-processing"
      }), "\n    "), "\n\n    " ];
    });
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/payflow/index.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./payflowForm.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payflowForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/payflow/payflowForm.js                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 3);
var Logger;
module.watch(require("../../../../../../../../client/modules/logger"), {
  "default": function (v) {
    Logger = v;
  }
}, 4);
var Cart, Shops, Packages;
module.watch(require("../../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 5);
var PaypalPayment;
module.watch(require("../../../../lib/collections/schemas"), {
  PaypalPayment: function (v) {
    PaypalPayment = v;
  }
}, 6);
var Reaction, i18next;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 7);
var PayPal;
module.watch(require("../../../../lib/api"), {
  PayPal: function (v) {
    PayPal = v;
  }
}, 8);
module.watch(require("./payflowForm.html"));
var submitting = false;

function uiEnd(template, buttonText) {
  template.$(".cart-checkout-step *").removeAttr("disabled");
  template.$("#btn-complete-order").text(buttonText);
  return template.$("#btn-processing").addClass("hidden");
}

function paymentAlert(errorMessage) {
  return $(".alert").removeClass("hidden").text(errorMessage);
}

function hidePaymentAlert() {
  return $(".alert").addClass("hidden").text("");
}

function getError(error, detailSubpart) {
  if (error) {
    if (error.response) {
      return error.response[detailSubpart];
    }
  }

  return undefined;
}

function handlePaypalSubmitError(error) {
  var results = [];
  var singleError = getError(error, "error_description");
  var serverError = getError(error, "message");
  var errors = getError(error, "response") || [];

  if (singleError) {
    return paymentAlert("Oops! " + singleError);
  } else if (errors.length) {
    for (var i = 0, len = errors.length; i < len; i += 1) {
      var thisError = errors[i];
      var formattedError = "Oops! " + thisError.issue + ": " + thisError.field.split(/[. ]+/).pop().replace(/_/g, " ");
      results.push(paymentAlert(formattedError));
    }

    return results;
  } else if (serverError) {
    // Alerts.toast(i18next.t("checkout.unknownError", { err: serverError }), "error");
    return paymentAlert(i18next.t("checkout.paymentMethod.unknownError"));
  }

  Logger.fatal("An unknown error has occurred while processing a Paypal payment");
  return paymentAlert(i18next.t("checkout.paymentMethod.unknownError"));
} //
// paypal payflow form helpers
//


Template.paypalPayflowForm.helpers({
  PaypalPayment: function () {
    return PaypalPayment;
  }
}); //
// autoform handling
//

AutoForm.addHooks("paypal-payment-form", {
  onSubmit: function (doc) {
    hidePaymentAlert();
    var template = this.template;
    var payerNamePieces = doc.payerName.split(" ");
    var form = {
      first_name: payerNamePieces[0],
      last_name: payerNamePieces[1],
      number: doc.cardNumber,
      expire_month: doc.expireMonth,
      expire_year: doc.expireYear,
      cvv2: doc.cvv,
      type: Reaction.getCardType(doc.cardNumber)
    };
    var storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + " " + doc.cardNumber.slice(-4);
    PayPal.authorize(form, {
      total: Cart.findOne().getTotal(),
      currency: Shops.findOne().currency
    }, function (error, transaction) {
      submitting = false; // todo: check scope

      if (error) {
        handlePaypalSubmitError(error);
        uiEnd(template, i18next.t("checkout.paymentMethod.resubmit"));
      } else if (transaction.saved === true) {
        var normalizedStatus = transaction.response.state;
        if (normalizedStatus === "approved") normalizedStatus = "created";
        var supportedStatuses = ["created", "failed", "canceled", "expired", "pending"];
        if (supportedStatuses.indexOf(normalizedStatus) === -1) normalizedStatus = "failed";
        var normalizedMode;

        switch (transaction.response.intent) {
          case "authorize":
            normalizedMode = "authorize";
            break;

          case "sale":
          case "order":
          default:
            normalizedMode = "capture";
            break;
        } // just auth, not transaction


        var transactionId = transaction.response.id; // when auth and transaction

        var authId;

        if ((0, _typeof2.default)(transaction.response.transactions[0].related_resources[0]) === "object") {
          authId = transaction.response.transactions[0].related_resources[0].authorization.id;
        }

        Meteor.subscribe("Packages", Reaction.getShopId());
        var packageData = Packages.findOne({
          name: "reaction-paypal",
          shopId: Reaction.getShopId()
        });
        var paymentMethod = {
          processor: "PayflowPro",
          paymentPackageId: packageData._id,
          paymentSettingsKey: packageData.registry[0].settingsKey,
          storedCard: storedCard,
          method: "credit",
          authorization: authId,
          transactionId: transactionId,
          metadata: {
            transactionId: transactionId,
            authorizationId: authId
          },
          amount: Number(transaction.response.transactions[0].amount.total),
          status: normalizedStatus,
          mode: normalizedMode,
          createdAt: new Date(transaction.response.create_time),
          updatedAt: new Date(transaction.response.update_time),
          transactions: []
        };
        paymentMethod.transactions.push(transaction.response);
        Meteor.call("cart/submitPayment", paymentMethod);
      } else {
        handlePaypalSubmitError(transaction.error);
        uiEnd(template, i18next.t("checkout.paymentMethod.resubmit"));
      }
    });
    return false;
  },
  beginSubmit: function () {
    this.template.$(".cart-checkout-step *").attr("disabled", true);
    this.template.$("#btn-complete-order").text(i18next.t("checkout.paymentMethod.submitting"));
    return this.template.$("#btn-processing").removeClass("hidden");
  },
  endSubmit: function () {
    if (!submitting) {
      return uiEnd(this.template, i18next.t("checkout.completeYourOrder"));
    }

    return undefined;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"return":{"cancel.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/cancel.html                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.cancel.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.cancel.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/template.cancel.js                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paypalCancel");
Template["paypalCancel"] = new Template("Template.paypalCancel", (function() {
  var view = this;
  return HTML.Raw('<div class="spinner-container">\n      <div class="spinner"></div>\n    </div>\n  <div class="updatedInfo"></div>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"done.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/done.html                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.done.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.done.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/template.done.js                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paypalDone");
Template["paypalDone"] = new Template("Template.paypalDone", (function() {
  var view = this;
  return [ HTML.Raw('<div class="spinner-container">\n      <div class="spinner"></div>\n    </div>\n  '), HTML.DIV({
    class: "container-fluid-sm"
  }, "\n    ", HTML.DIV({
    class: "paypal-done-error"
  }, "\n      ", HTML.Raw('<i class="fa fa-barcode"></i>'), "\n      ", HTML.Raw('<p data-i18n="checkoutPayment.processingError">There was a problem processing your payment.</p>'), "\n      ", HTML.Raw('<p id="paypal-error-message"></p>'), "\n      ", HTML.P(HTML.A({
    href: function() {
      return Spacebars.mustache(view.lookup("checkoutUrl"));
    }
  }, "Return to Checkout")), "\n    "), "\n  ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cancel.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/cancel.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Reaction;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 0);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
Template.paypalCancel.onCreated(function () {
  Session.set("guestCheckoutFlow", true);
  Reaction.Router.go("cart/checkout");
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"done.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 3);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var Cart, Packages;
module.watch(require("../../../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 6);
var Logger;
module.watch(require("../../../../../../../../client/modules/logger"), {
  "default": function (v) {
    Logger = v;
  }
}, 7);

// This template handles receiving the token from Paypal, recording it and moving on the checkout
function isDuplicate(error) {
  var errorMessage = error.message;
  var duplicateErrorCode = "10415";
  return errorMessage.indexOf(duplicateErrorCode) > -1;
}

function showError(error) {
  $(".spinner-container").hide();
  $("#paypal-error-message").text(error);
  $(".paypal-done-error").show();
}

function buildPaymentMethod(result, status, mode) {
  Meteor.subscribe("Packages", Reaction.getShopId());
  var packageData = Packages.findOne({
    name: "reaction-paypal",
    shopId: Reaction.getShopId()
  });
  var paymentMethod = {
    processor: "PaypalExpress",
    paymentPackageId: packageData._id,
    paymentSettingsKey: packageData.registry[0].settingsKey,
    method: "credit",
    transactionId: result.TRANSACTIONID,
    amount: parseFloat(result.AMT, 10),
    status: status,
    mode: mode,
    createdAt: new Date(result.ORDERTIME),
    updatedAt: new Date(result.ORDERTIME),
    transactions: [result]
  };
  return paymentMethod;
}

Template.paypalDone.onRendered(function () {
  $(".paypal-done-error").hide();
});
Template.paypalDone.helpers({
  checkoutUrl: function () {
    var template = Template.instance();
    return template.checkoutUrl;
  }
});
Template.paypalDone.onCreated(function () {
  var payerId = Reaction.Router.getQueryParam("PayerID");
  var token = Reaction.Router.getQueryParam("token");
  var prefix = Reaction.getShopPrefix();
  this.checkoutUrl = prefix + "/cart/checkout"; // wait for cart to be ready

  Tracker.autorun(function (c) {
    if (Reaction.Subscriptions.Cart.ready()) {
      var cart = Cart.findOne();

      if (!cart) {
        Logger.warn("Could not find valid cart");
        return;
      }

      c.stop();

      if (Session.get("expressToken") !== token) {
        Session.set("expressToken", token);
        Meteor.call("confirmPaymentAuthorization", cart._id, token, payerId, function (error, result) {
          if (error) {
            if (isDuplicate(error)) {
              Reaction.Router.go("cart/completed", {}, {
                _id: cart._id
              });
            }

            var msg = error !== null ? error.error : undefined;
            showError(msg);
          }

          if (result) {
            var status;
            var mode = "authorize"; // Normalize status depending on results

            if (result.PAYMENTSTATUS === "Pending") {
              status = "created";
            } else if (result.PAYMENTSTATUS === "Completed") {
              // If we set capture at auth this will be completed
              status = "completed";
              mode = "capture";
            } else {
              status = result.PAYMENTSTATUS;
            }

            var paymentMethod = buildPaymentMethod(result, status, mode);
            Meteor.call("cart/submitPayment", paymentMethod, function (payError, payResult) {
              if (!payResult && payError) {
                Logger.warn(payError, "Error received during submitting Payment via Paypal");
                showError(payError);
                Session.set("guestCheckoutFlow", true);
              }
            });
          }
        });
      }
    }
  });
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/checkout/return/index.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./cancel.html"));
module.watch(require("./cancel.js"));
module.watch(require("./done.html"));
module.watch(require("./done.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"settings":{"express.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/settings/express.html                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.express.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.express.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/settings/template.express.js                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paypalExpressSettings");
Template["paypalExpressSettings"] = new Template("Template.paypalExpressSettings", (function() {
  var view = this;
  return [ Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "merchantId"));
  }, function() {
    return [ "\n  ", HTML.DIV({
      class: "alert alert-info"
    }, "\n    ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.paypalExpressCredentials"
    }, "Don't have a PayPal username, password and signature?"), "\n    ", HTML.A({
      href: "https://developer.paypal.com/webapps/developer/applications/accounts",
      target: "_blank"
    }, "\n      ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.paypalExpressGetCredentialsHere"
    }, "Get one here."), "\n    "), "\n  "), "\n  " ];
  }), "\n\n  ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("PaypalPackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("paypal-update-form-express")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.merchantId")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.username")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.password"),
          type: Spacebars.call("password")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.signature")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.express.support"),
          options: Spacebars.call("allowed"),
          noselect: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.expressAuthAndCapture"),
          type: Spacebars.call("boolean-select"),
          trueLabel: Spacebars.call("Authorize, Capture immediately."),
          falseLabel: Spacebars.call("Authorize, Capture on complete.")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.express_mode"),
          type: Spacebars.call("boolean-select"),
          trueLabel: Spacebars.call("Live - Production Mode"),
          falseLabel: Spacebars.call("Testing - Sandbox Mode")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n\n    ", HTML.BUTTON({
        type: "submit",
        class: "btn btn-primary pull-right"
      }, HTML.SPAN({
        "data-i18n": "app.saveChanges"
      }, "Save Changes")), "\n  " ];
    });
  }) ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payflow.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/settings/payflow.html                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.payflow.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.payflow.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/settings/template.payflow.js                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("paypalPayFlowSettings");
Template["paypalPayFlowSettings"] = new Template("Template.paypalPayFlowSettings", (function() {
  var view = this;
  return [ Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "client_id"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "alert alert-info"
    }, "\n      ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.paypalPayflowCredentials"
    }, "Don't have a PayPal client ID and secret?"), "\n      ", HTML.A({
      href: "https://developer.paypal.com/webapps/developer/applications",
      target: "_blank"
    }, "\n        ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.paypalPayflowGetCredentialsHere"
    }, "Get them here."), "\n      "), "\n    "), "\n  " ];
  }), "\n  ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("PaypalPackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("paypal-update-form-payflow")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.client_id")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.client_secret"),
          type: Spacebars.call("password")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.payflow.support"),
          options: Spacebars.call("allowed"),
          noselect: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.payflow_mode"),
          type: Spacebars.call("boolean-select"),
          trueLabel: Spacebars.call("Live - Production Mode"),
          falseLabel: Spacebars.call("Testing - Sandbox Mode")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n    ", HTML.BUTTON({
        type: "submit",
        class: "btn btn-primary pull-right"
      }, HTML.SPAN({
        "data-i18n": "app.saveChanges"
      }, "Save Changes")), "\n  " ];
    });
  }) ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"express.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/settings/express.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);
var PaypalPackageConfig;
module.watch(require("../../../lib/collections/schemas"), {
  PaypalPackageConfig: function (v) {
    PaypalPackageConfig = v;
  }
}, 4);
module.watch(require("./express.html"));
Template.paypalExpressSettings.helpers({
  PaypalPackageConfig: function () {
    return PaypalPackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-paypal"
    });
  }
});
AutoForm.hooks({
  "paypal-update-form-express": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.saveSuccess"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.saveFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payflow.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/templates/settings/payflow.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);
var PaypalPackageConfig;
module.watch(require("../../../lib/collections/schemas"), {
  PaypalPackageConfig: function (v) {
    PaypalPackageConfig = v;
  }
}, 4);
module.watch(require("./payflow.html"));
Template.paypalPayFlowSettings.helpers({
  PaypalPackageConfig: function () {
    return PaypalPackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-paypal"
    });
  }
});
AutoForm.hooks({
  "paypal-update-form-payflow": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.saveSuccess"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.saveFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"lib":{"paypalRestApi.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/lib/paypalRestApi.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PaypalClientAPI: function () {
    return PaypalClientAPI;
  }
});

var _once;

module.watch(require("lodash/once"), {
  "default": function (v) {
    _once = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 2);
var Logger;
module.watch(require("../../../../../../client/api"), {
  Logger: function (v) {
    Logger = v;
  }
}, 3);
var PaypalClientAPI = {
  load: _once(function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.async = true;
    script.src = "//www.paypalobjects.com/api/checkout.js";
    document.head.appendChild(script);

    this._checkReady();
  }),
  _checkReady: function () {
    var _this = this;

    var i = 0;
    var checkReady = Meteor.setInterval(function () {
      if (typeof paypal !== "undefined") {
        _this._loaded.set(true);

        Meteor.clearInterval(checkReady);
      } else {
        i += 100;

        if (i > 10000) {
          // stop checking and warn if the lib isn't loaded within 10 secs
          Meteor.clearInterval(checkReady);
          Logger.warn("Error loading Paypal lib from CDN");
        }
      }
    }, 100);
  },
  _loaded: new ReactiveVar(false),
  loaded: function () {
    return this._loaded.get();
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/checkout/return"));
module.watch(require("./templates/checkout/express"));
module.watch(require("./templates/checkout/payflow"));
module.watch(require("./templates/settings/express"));
module.watch(require("./templates/settings/payflow"));
module.watch(require("./paypal.less"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paypal.less":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/paypal.less                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./paypal.less.css"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paypal.less.css":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/client/paypal.less.css                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("meteor/modules").addStyles(
  ".paypal-express {\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n.paypal-done-error {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 400px;\n  font-size: 3rem;\n  color: #ABABAB;\n}\n.paypal-done-error i {\n  font-size: 6rem;\n  margin-bottom: 2rem;\n}\n.paypal-checkout-button-container .btn {\n  background-color: #009cde;\n  border-color: #009cde;\n}\n"
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/lib/collections/schemas/index.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./paypal"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"paypal.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PaypalPackageConfig: function () {
    return PaypalPackageConfig;
  },
  PaypalPayment: function () {
    return PaypalPayment;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);
var PaypalPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.expressAuthAndCapture": {
    type: Boolean,
    label: "Capture at time of Auth",
    defaultValue: false
  },
  "settings.express": {
    type: Object,
    defaultValue: {}
  },
  "settings.express.support": {
    type: Array,
    label: "Payment provider supported methods"
  },
  "settings.express.support.$": {
    type: String,
    allowedValues: ["Authorize", "De-authorize", "Capture", "Refund"]
  },
  "settings.payflow": {
    type: Object,
    defaultValue: {}
  },
  "settings.payflow.support": {
    type: Array,
    label: "Payment provider supported methods"
  },
  "settings.payflow.support.$": {
    type: String,
    allowedValues: ["Authorize", "De-authorize", "Capture", "Refund"]
  },
  "settings.merchantId": {
    type: String,
    label: "Merchant ID",
    optional: true
  },
  "settings.username": {
    type: String,
    label: "Username",
    optional: true
  },
  "settings.password": {
    type: String,
    label: "Password",
    optional: true
  },
  "settings.signature": {
    type: String,
    label: "Signature",
    optional: true
  },
  "settings.express_mode": {
    type: Boolean,
    defaultValue: false
  },
  "settings.payflow_enabled": {
    type: Boolean,
    defaultValue: true
  },
  "settings.client_id": {
    type: String,
    label: "API Client ID",
    min: 60,
    optional: true
  },
  "settings.client_secret": {
    type: String,
    label: "API Secret",
    min: 60,
    optional: true
  },
  "settings.payflow_mode": {
    type: Boolean,
    defaultValue: false
  }
});
registerSchema("PaypalPackageConfig", PaypalPackageConfig);
var PaypalPayment = new SimpleSchema({
  payerName: {
    type: String,
    label: "Cardholder name"
  },
  cardNumber: {
    type: String,
    min: 12,
    max: 19,
    label: "Card number"
  },
  expireMonth: {
    type: String,
    max: 2,
    label: "Expiration month"
  },
  expireYear: {
    type: String,
    max: 4,
    label: "Expiration year"
  },
  cvv: {
    type: String,
    max: 4,
    label: "CVV"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("PaypalPayment", PaypalPayment);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"api":{"express.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/lib/api/express.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Express: function () {
    return Express;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../lib/api"), {
  "default": function (v) {
    Reaction = v;
  }
}, 2);

function getSettings(settings, ref, valueName) {
  if (settings !== null) {
    return settings[valueName];
  } else if (ref !== null) {
    return ref[valueName];
  }

  return {};
} // using global instance of Reaction
// Paypal is a shared client/server stub
// to provide normalized PayPal tooling


var Express = {
  expressCheckoutAccountOptions: function () {
    var shopId = Reaction.getShopId();

    var _Packages$findOne = Packages.findOne({
      name: "reaction-paypal",
      shopId: shopId,
      enabled: true
    }),
        settings = _Packages$findOne.settings;

    var mode;

    if ((settings !== null ? settings.express_mode : undefined) === true) {
      mode = "production";
    } else {
      mode = "sandbox";
    }

    var ref = Meteor.settings.paypal;
    var options = {
      enabled: settings !== null ? settings.express.enabled : undefined,
      mode: mode,
      username: getSettings(settings, ref, "username"),
      password: getSettings(settings, ref, "password"),
      signature: getSettings(settings, ref, "signature"),
      merchantId: getSettings(settings, ref, "merchantId"),
      return_url: Reaction.getAbsoluteUrl("paypal/done"),
      cancel_url: Reaction.getAbsoluteUrl("paypal/cancel")
    };

    if (options.mode === "sandbox") {
      options.url = "https://api-3t.sandbox.paypal.com/nvp";
    } else {
      options.url = "https://api-3t.paypal.com/nvp";
    }

    return options;
  },
  config: function (options) {
    this.accountOptions = options;
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/lib/api/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PayPal: function () {
    return PayPal;
  }
});
var PayFlow;
module.watch(require("./payflow"), {
  "*": function (v) {
    PayFlow = v;
  }
}, 0);
var Express;
module.watch(require("./express"), {
  "*": function (v) {
    Express = v;
  }
}, 1);
var PayPal = Object.assign({}, Express.Express, PayFlow.PayFlow);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payflow.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-paypal/lib/api/payflow.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PayFlow: function () {
    return PayFlow;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../lib/api"), {
  "default": function (v) {
    Reaction = v;
  }
}, 2);
var PayFlow = {
  payflowAccountOptions: function () {
    var _Packages$findOne = Packages.findOne({
      name: "reaction-paypal",
      shopId: Reaction.getShopId(),
      enabled: true
    }),
        settings = _Packages$findOne.settings;

    var mode;

    if ((settings !== null ? settings.payflow_mode : undefined) === true) {
      mode = "live";
    } else {
      mode = "sandbox";
    }

    var ref = Meteor.settings.paypal;
    var options = {
      mode: mode,
      enabled: getSettings(settings, ref, "payflow_enabled"),
      client_id: getSettings(settings, ref, "client_id"),
      client_secret: getSettings(settings, ref, "client_secret")
    };

    if (!options.client_id) {
      throw new Meteor.Error("invalid-credentials", "Invalid PayPal Credentials");
    }

    return options;
  },
  authorize: function (cardInfo, paymentInfo, callback) {
    Meteor.call("payflowpro/payment/submit", "authorize", cardInfo, paymentInfo, callback);
  },
  capture: function (transactionId, amount, callback) {
    var captureDetails = {
      amount: {
        currency: "USD",
        // todo should this be locale.currency
        total: parseFloat(amount, 10)
      },
      is_final_capture: true
    };
    Meteor.call("payflowpro/payment/capture", transactionId, captureDetails, callback);
  },
  config: function (options) {
    this.accountOptions = options;
  },
  paymentObj: function () {
    return {
      intent: "sale",
      payer: {
        payment_method: "credit_card",
        funding_instruments: []
      },
      transactions: []
    };
  },
  parseCardData: function (data) {
    return {
      credit_card: {
        type: data.type,
        number: data.number,
        first_name: data.first_name,
        last_name: data.last_name,
        cvv2: data.cvv2,
        expire_month: data.expire_month,
        expire_year: data.expire_year
      }
    };
  },
  parsePaymentData: function (data) {
    return {
      amount: {
        total: parseFloat(data.total, 10),
        currency: data.currency
      }
    };
  }
};

function getSettings(settings, ref, valueName) {
  if (settings !== null) {
    return settings[valueName];
  } else if (ref !== null) {
    return ref[valueName];
  }

  return {};
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"product-variant":{"client":{"templates":{"products":{"productGrid":{"publishControls.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/productGrid/publishControls.html                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.publishControls.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.publishControls.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/productGrid/template.publishControls.js          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("gridPublishControls");
Template["gridPublishControls"] = new Template("Template.gridPublishControls", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("PublishComponent"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"publishControls.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/productGrid/publishControls.js                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Components;
module.watch(require("../../../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
Template.gridPublishControls.helpers({
  PublishComponent: function () {
    return {
      component: Components.GridProductPublish
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"productSettings":{"productSettings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.html             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.productSettings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.productSettings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/productSettings/template.productSettings.js      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("productSettings");
Template["productSettings"] = new Template("Template.productSettings", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("hasSelectedProducts"));
  }, function() {
    return [ "\n  ", HTML.DIV({
      class: "panel panel-default"
    }, "\n    ", HTML.DIV({
      class: "panel-heading panel-heading-flex"
    }, "\n      ", HTML.DIV({
      class: "panel-title",
      "data-i18n": "gridSettingsPanel.selected"
    }, "Selected"), "\n      ", HTML.DIV({
      class: "panel-controls"
    }, "\n        ", HTML.BUTTON({
      type: "button",
      class: "rui btn btn-default flat",
      "data-toggle": "tooltip",
      title: function() {
        return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.publish", "Publish");
      },
      "data-original-title": function() {
        return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.publish", "Publish");
      },
      "data-event-action": "publishProduct"
    }, "\n          ", Blaze.If(function() {
      return Spacebars.call(view.lookup("isVisible"));
    }, function() {
      return [ "\n            ", HTML.SPAN({
        class: "fa fa-eye fa-lg"
      }), "\n          " ];
    }, function() {
      return [ "\n            ", HTML.SPAN({
        class: "fa fa-eye-slash fa-lg"
      }), "\n          " ];
    }), "\n        "), "\n\n        ", HTML.BUTTON({
      type: "button",
      class: "rui btn btn-default flat",
      "data-toggle": "tooltip",
      title: function() {
        return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.duplicateProduct", "Duplicate Product");
      },
      "data-original-title": function() {
        return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.duplicateProduct", "Duplicate Product");
      },
      "data-event-action": "cloneProduct"
    }, "\n          ", HTML.SPAN({
      class: "fa fa-files-o fa-lg"
    }), "\n        "), "\n\n        ", HTML.BUTTON({
      type: "button",
      class: "rui btn btn-default flat",
      "data-toggle": "tooltip",
      title: function() {
        return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.archiveProduct", "Archive Product");
      },
      "data-original-title": function() {
        return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.archiveProduct", "Archive Product");
      },
      "data-event-action": "archiveProduct"
    }, "\n          ", HTML.SPAN({
      class: "fa fa-archive fa-lg"
    }), "\n        "), "\n      "), "\n    "), "\n\n    ", HTML.DIV({
      class: "list-group order-items"
    }, "\n      ", Blaze.Each(function() {
      return {
        _sequence: Spacebars.call(view.lookup("products")),
        _variable: "product"
      };
    }, function() {
      return [ "\n        ", Blaze._TemplateWith(function() {
        return Spacebars.call(view.lookup("product"));
      }, function() {
        return Spacebars.include(view.lookupTemplate("productSettingsListItem"));
      }), "\n      " ];
    }), "\n    "), "\n\n  "), "\n\n  ", HTML.DIV({
      class: "panel panel-default"
    }, "\n    ", HTML.DIV({
      class: "panel-heading"
    }, "\n      ", HTML.H4({
      class: "panel-title",
      "data-i18n": "productDetailEdit.size"
    }, "Size"), "\n    "), "\n\n    ", HTML.DIV({
      class: "product-settings-size-controls list-group"
    }, "\n\n      ", HTML.DIV({
      class: function() {
        return [ "list-group-item ", Spacebars.mustache(view.lookup("itemWeightActive"), 0) ];
      },
      "data-event-action": "changeProductWeight",
      "data-event-data": "0"
    }, "\n        ", HTML.DIV({
      class: "product-settings-size-control"
    }, "\n            ", HTML.DIV({
      class: "main"
    }), "\n        "), "\n      "), "\n\n      ", HTML.DIV({
      class: function() {
        return [ "list-group-item ", Spacebars.mustache(view.lookup("itemWeightActive"), 1) ];
      },
      "data-event-action": "changeProductWeight",
      "data-event-data": "1"
    }, "\n\n        ", HTML.DIV({
      class: "product-settings-size-control main-wide"
    }, "\n            ", HTML.DIV({
      class: "main"
    }), "\n            ", HTML.DIV({
      class: "side"
    }, "\n              ", HTML.SPAN(), "\n              ", HTML.SPAN(), "\n              ", HTML.SPAN(), "\n            "), "\n        "), "\n      "), "\n\n      ", HTML.DIV({
      class: function() {
        return [ "list-group-item ", Spacebars.mustache(view.lookup("itemWeightActive"), 2) ];
      },
      "data-event-action": "changeProductWeight",
      "data-event-data": "2"
    }, "\n        ", HTML.DIV({
      class: "product-settings-size-control main-full"
    }, "\n          ", HTML.DIV({
      class: "main"
    }, "\n            ", HTML.DIV({
      class: "overlay"
    }), "\n          "), "\n        "), "\n      "), "\n\n    "), "\n  "), "\n  " ];
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel panel-default"
    }, "\n      ", HTML.DIV({
      class: "panel-heading"
    }, "\n        ", HTML.SPAN({
      class: "panel-title"
    }, "\n          ", Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.noSelectedProducts", "No selected products. Use the ");
    }), HTML.I({
      class: "fa fa-gear"
    }), Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), "productDetailEdit.orShiftCtrlCmd", " or shift|ctrl|cmd + click on products to select multiple. With shift you can select a contiguous range of products.");
    }), "\n        "), "\n      "), "\n    "), "\n  " ];
  });
}));

Template.__checkName("productSettingsListItem");
Template["productSettingsListItem"] = new Template("Template.productSettingsListItem", (function() {
  var view = this;
  return HTML.DIV({
    class: function() {
      return [ "list-group-item product-settings-list-item ", Spacebars.mustache(view.lookup("listItemActiveClassName"), view.lookup("_id")) ];
    },
    "data-id": function() {
      return Spacebars.mustache(view.lookup("_id"));
    },
    id: function() {
      return Spacebars.mustache(view.lookup("_id"));
    }
  }, "\n    ", HTML.A({
    href: "#",
    "data-event-category": "grid",
    "data-event-action": "product-click",
    "data-event-label": "grid product click",
    "data-event-value": function() {
      return Spacebars.mustache(view.lookup("_id"));
    }
  }, "\n      ", HTML.DIV({
    class: "order-item-media"
  }, "\n        ", HTML.IMG({
    src: function() {
      return Spacebars.mustache(view.lookup("mediaUrl"));
    }
  }), "\n      "), "\n\n      ", HTML.DIV({
    class: "order-item-details"
  }, "\n        ", HTML.DIV("\n          ", HTML.DIV({
    class: "overlay-title"
  }, Blaze.View("lookup:title", function() {
    return Spacebars.mustache(view.lookup("title"));
  })), "\n          ", HTML.DIV({
    class: "currency-symbol"
  }, Blaze.View("lookup:formatPrice", function() {
    return Spacebars.mustache(view.lookup("formatPrice"), view.lookup("displayPrice"));
  })), "\n        "), "\n      "), "\n\n      ", HTML.Raw('<div class="action-view">\n        <i class="fa fa-angle-right"></i>\n      </div>'), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var Logger;
module.watch(require("../../../../../../../../client/modules/logger"), {
  "default": function (v) {
    Logger = v;
  }
}, 5);
var getPrimaryMediaForItem, ReactionProduct;
module.watch(require("../../../../../../../../lib/api"), {
  getPrimaryMediaForItem: function (v) {
    getPrimaryMediaForItem = v;
  },
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 6);
var Products;
module.watch(require("../../../../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  }
}, 7);
var isRevisionControlEnabled;
module.watch(require("../../../../../../core/revisions/lib/api"), {
  isRevisionControlEnabled: function (v) {
    isRevisionControlEnabled = v;
  }
}, 8);
var applyProductRevision;
module.watch(require("../../../../../../../../lib/api/products"), {
  applyProductRevision: function (v) {
    applyProductRevision = v;
  }
}, 9);

function updateVariantProductField(variants, field, value) {
  return variants.map(function (variant) {
    return Meteor.call("products/updateProductField", variant._id, field, value);
  });
}

Template.productSettings.onCreated(function () {
  var _this = this;

  this.state = new ReactiveDict();
  this.state.setDefault({
    products: [],
    productIds: []
  });
  this.autorun(function () {
    var currentData = Template.currentData();

    if (_isArray(currentData.products)) {
      var productIds = currentData.products.map(function (product) {
        return product._id;
      });

      var _products = Products.find({
        _id: {
          $in: productIds
        }
      }).map(function (product) {
        return applyProductRevision(product);
      });

      _this.state.set("productIds", productIds);

      _this.state.set("products", _products);
    }
  });
});
Template.productSettings.helpers({
  isVisible: function () {
    var instance = Template.instance();
    var products = instance.state.get("products") || []; // Use the first selected product to determin status of bulk, isVisible button

    if (Array.isArray(products) && products.length) {
      return products[0].isVisible;
    }

    return false;
  },
  hasSelectedProducts: function () {
    return this.products && this.products.length > 0;
  },
  itemWeightActive: function (weight) {
    var instance = Template.instance();
    var products = instance.state.get("products");
    var tag = ReactionProduct.getTag();

    for (var _iterator = products, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray2) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _product = _ref;
      var positions = _product.positions && _product.positions[tag] || {};
      var currentWeight = positions.weight || 0;

      if (currentWeight === weight) {
        return "active";
      }
    }

    return "";
  }
});
Template.productSettingsListItem.events({
  "click [data-event-action=product-click]": function () {
    Reaction.Router.go("product", {
      handle: this.__published && this.__published.handle || this.handle
    });
    Reaction.state.set("edit/focus", "productDetails"); // Set actionView to product admin

    Reaction.setActionView({
      i18nKeyLabel: "productDetailEdit.productSettings",
      label: "Product Settings",
      template: "ProductAdmin"
    });
  }
});
Template.productSettingsListItem.helpers({
  displayPrice: function () {
    if (this._id) {
      return ReactionProduct.getProductPriceRange(this._id).range;
    }

    return null;
  },
  mediaUrl: function () {
    var variants = ReactionProduct.getTopVariants(this._id);
    if (!variants || variants.length === 0) return "/resources/placeholder.gif";
    var media = getPrimaryMediaForItem({
      productId: this._id,
      variantId: variants[0]._id
    });
    if (!media) return "/resources/placeholder.gif";
    return media.url({
      store: "thumbnail"
    });
  },
  listItemActiveClassName: function (productId) {
    var handle = Reaction.Router.current().params.handle;

    if (ReactionProduct.equals("productId", productId) && handle) {
      return "active";
    }

    return "";
  }
});
/**
 * productExtendedControls events
 */

Template.productSettings.events({
  "click [data-event-action=publishProduct]": function () {
    var instance = Template.instance();
    var products = instance.state.get("products") || [];

    if (isRevisionControlEnabled()) {
      for (var _iterator2 = products, _isArray3 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray3 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray3) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var _product2 = _ref2;
        // Update the visibility using the first selected product to determine the proper
        // visibility toggle. This is to ensure that all selected products will become visible or not visible
        // at the same time so it's not confusing.
        Meteor.call("products/updateProductField", _product2._id, "isVisible", !products[0].isVisible); // update the variants visibility

        var variants = Products.find({
          ancestors: {
            $in: [_product2._id]
          }
        });
        updateVariantProductField(variants, "isVisible", !products[0].isVisible);
      }
    } else {
      // The legacy behavior will bulk toggle visibilty of each product seperatly.
      //
      // Example:
      // If you selected 10 products, and 5 were visible and 5 were not visible, and then
      // clicked the visibility button, 5 products would switched from not visible to visible, and the other 5
      // would be swiched from visible to not visible.
      ReactionProduct.publishProduct(products);
    }
  },
  "click [data-event-action=cloneProduct]": function () {
    ReactionProduct.cloneProduct(this.products);
  },
  "click [data-event-action=archiveProduct]": function () {
    ReactionProduct.archiveProduct(this.products);
  },
  "click [data-event-action=changeProductWeight]": function (event) {
    event.preventDefault();
    var tag = ReactionProduct.getTag();

    for (var _iterator3 = this.products, _isArray4 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray4 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray4) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var _product3 = _ref3;
      var weight = Template.instance().$(event.currentTarget).data("event-data") || 0;
      var positions = {
        weight: weight,
        updatedAt: new Date()
      };
      /* eslint no-loop-func: 1 */
      //
      //

      Meteor.call("products/updateProductPosition", _product3._id, positions, tag, function (error) {
        // eslint-disable-line no-loop-func
        if (error) {
          Logger.warn(error);
          throw new Meteor.Error("access-denied", error);
        }
      });
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"products.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/products.html                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.products.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.products.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/template.products.js                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("products");
Template["products"] = new Template("Template.products", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("component"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

Template.__checkName("productListGrid");
Template["productListGrid"] = new Template("Template.productListGrid", (function() {
  var view = this;
  return HTML.DIV({
    class: "row"
  }, "\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("component"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n    "), "\n    ", Blaze.If(function() {
    return Spacebars.dataMustache(view.lookup("hasPermission"), "createProduct");
  }, function() {
    return [ "\n      ", Spacebars.include(view.lookupTemplate("productList")), "\n    " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantForm.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/variantForm.html                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.variantForm.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.variantForm.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/template.variantForm.js                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("variantForm");
Template["variantForm"] = new Template("Template.variantForm", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.dataMustache(view.lookup("component"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"products.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/products.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Components;
module.watch(require("../../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 0);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
Template.products.helpers({
  component: function () {
    return Components.Products;
  }
});
/**
 * products events
 */

Template.products.events({
  "click #productListView": function () {
    $(".product-grid").hide();
    return $(".product-list").show();
  },
  "click #productGridView": function () {
    $(".product-list").hide();
    return $(".product-grid").show();
  },
  "click .product-list-item": function () {
    // go to new product
    Reaction.Router.go("product", {
      handle: this._id
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/templates/products/variantForm.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Components;
module.watch(require("../../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
Template.variantForm.helpers({
  component: function () {
    var currentData = Template.currentData() || {};
    return (0, _objectSpread2.default)({}, currentData, {
      component: Components.VariantEditForm
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/client/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/products/productGrid/publishControls.html"));
module.watch(require("./templates/products/productGrid/publishControls.js"));
module.watch(require("./templates/products/productSettings/productSettings.html"));
module.watch(require("./templates/products/productSettings/productSettings.js"));
module.watch(require("./templates/products/products.html"));
module.watch(require("./templates/products/products.js"));
module.watch(require("./templates/products/variantForm.html"));
module.watch(require("./templates/products/variantForm.js"));
module.watch(require("../components/gridItemControls"), {
  "default": function (v) {
    exports.GridItemControls = v;
  }
}, 0);
module.watch(require("../components/gridItemNotice"), {
  "default": function (v) {
    exports.GridItemNotice = v;
  }
}, 1);
module.watch(require("../components/productGrid"), {
  "default": function (v) {
    exports.ProductGrid = v;
  }
}, 2);
module.watch(require("../components/productGridItems"), {
  "default": function (v) {
    exports.ProductGridItems = v;
  }
}, 3);
module.watch(require("../components/products"), {
  "default": function (v) {
    exports.Products = v;
  }
}, 4);
module.watch(require("../components/variantForm"), {
  "default": function (v) {
    exports.VariantForm = v;
  }
}, 5);
module.watch(require("../components/variantEdit"), {
  "default": function (v) {
    exports.VariantEdit = v;
  }
}, 6);
module.watch(require("../components/customer/productGrid"), {
  "default": function (v) {
    exports.ProductGridCustomer = v;
  }
}, 7);
module.watch(require("../components/customer/productGridItem"), {
  "default": function (v) {
    exports.ProductGridItemCustomer = v;
  }
}, 8);
module.watch(require("../containers/gridItemControlsContainer"), {
  "default": function (v) {
    exports.GridItemControlsContainer = v;
  }
}, 9);
module.watch(require("../containers/gridItemNoticeContainer"), {
  "default": function (v) {
    exports.GridItemNoticeContainer = v;
  }
}, 10);
module.watch(require("../containers/gridPublishContainer"), {
  "default": function (v) {
    exports.GridPublishContainer = v;
  }
}, 11);
module.watch(require("../containers/productGridContainer"), {
  "default": function (v) {
    exports.ProductGridContainer = v;
  }
}, 12);
module.watch(require("../containers/productGridItemsContainer"), {
  "default": function (v) {
    exports.ProductGridItemsContainer = v;
  }
}, 13);
module.watch(require("../containers/productsContainer"), {
  "default": function (v) {
    exports.ProductsContainer = v;
  }
}, 14);
module.watch(require("../containers/productsContainerAdmin"), {
  "default": function (v) {
    exports.ProductsContainerAdmin = v;
  }
}, 15);
module.watch(require("../containers/productsContainerCustomer"), {
  "default": function (v) {
    exports.ProductsContainerCustomer = v;
  }
}, 16);
module.watch(require("../containers/variantFormContainer"), {
  "default": function (v) {
    exports.VariantFormContainer = v;
  }
}, 17);
module.watch(require("../containers/variantEditContainer"), {
  "default": function (v) {
    exports.VariantEditContainer = v;
  }
}, 18);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"customer":{"productGrid.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/customer/productGrid.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 3);

var ProductGrid =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductGrid, _Component);

  function ProductGrid() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.loadMoreProducts = function (event) {
      var _this$props = _this.props,
          canLoadMoreProducts = _this$props.canLoadMoreProducts,
          loadProducts = _this$props.loadProducts;
      var _window = window,
          scrollY = _window.scrollY,
          innerHeight = _window.innerHeight;
      var _document = document,
          scrollHeight = _document.body.scrollHeight;
      var atBottom = innerHeight + scrollY === scrollHeight;

      if (canLoadMoreProducts && atBottom) {
        loadProducts(event);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ProductGrid.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      window.addEventListener("scroll", this.loadMoreProducts);
    }

    return componentDidMount;
  }();

  _proto.componentWillUnmount = function () {
    function componentWillUnmount() {
      window.removeEventListener("scroll", this.loadMoreProducts);
    }

    return componentWillUnmount;
  }(); // load more products to the grid


  // render the loading spinner
  _proto.renderLoadingSpinner = function () {
    function renderLoadingSpinner() {
      var ready = this.props.productsSubscription.ready; // if the products catalog is not ready
      // show the loading spinner

      if (!ready()) return React.createElement(Components.Loading, null);
    }

    return renderLoadingSpinner;
  }(); // render the No Products Found message


  _proto.renderNotFound = function () {
    function renderNotFound() {
      var _props = this.props,
          products = _props.products,
          ready = _props.productsSubscription.ready; // if the products subscription is ready & the products array is undefined or empty
      // show the Not Found message

      if (ready() && (!Array.isArray(products) || !products.length)) {
        return React.createElement(Components.NotFound, {
          i18nKeyTitle: "productGrid.noProductsFound",
          icon: "fa fa-barcode",
          title: "No Products Found"
        });
      }
    }

    return renderNotFound;
  }(); // render the product grid


  _proto.renderProductGrid = function () {
    function renderProductGrid() {
      var products = this.props.products;
      var currentTag = ReactionProduct.getTag();
      return React.createElement("div", {
        className: "product-grid"
      }, React.createElement("ul", {
        className: "product-grid-list list-unstyled",
        id: "product-grid-list"
      }, products.map(function (product) {
        return React.createElement(Components.ProductGridItemCustomer, {
          product: product,
          position: product.positions && product.positions[currentTag] || {},
          key: product._id
        });
      })));
    }

    return renderProductGrid;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "container-main"
      }, this.renderProductGrid(), this.renderLoadingSpinner(), this.renderNotFound());
    }

    return render;
  }();

  return ProductGrid;
}(Component);

ProductGrid.propTypes = {
  canLoadMoreProducts: PropTypes.bool,
  loadProducts: PropTypes.func,
  products: PropTypes.array,
  productsSubscription: PropTypes.object
};
module.exportDefault(ProductGrid);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productGridItem.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/customer/productGridItem.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var formatPriceString, Router;
module.watch(require("../../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  },
  Router: function (v) {
    Router = v;
  }
}, 3);
var registerComponent, Components;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  Components: function (v) {
    Components = v;
  }
}, 4);

var ProductGridItem =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductGridItem, _Component);

  function ProductGridItem() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();
      Router.go(_this.productURL);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ProductGridItem.prototype;

  // notice
  _proto.renderNotices = function () {
    function renderNotices() {
      var _props$product = this.props.product,
          isSoldOut = _props$product.isSoldOut,
          isLowQuantity = _props$product.isLowQuantity,
          isBackorder = _props$product.isBackorder;
      var noticeContent = {
        classNames: this.noticeClassNames
      };

      if (isSoldOut) {
        if (isBackorder) {
          noticeContent.defaultValue = "Backorder";
          noticeContent.i18nKey = "productDetail.backOrder";
        } else {
          noticeContent.defaultValue = "Sold Out!";
          noticeContent.i18nKey = "productDetail.soldOut";
        }
      } else if (isLowQuantity) {
        noticeContent.defaultValue = "Limited Supply";
        noticeContent.i18nKey = "productDetail.limitedSupply";
      }

      return React.createElement("div", {
        className: "grid-alerts"
      }, React.createElement("div", {
        className: "product-grid-badges"
      }, React.createElement("span", {
        className: noticeContent.classNames
      }, React.createElement(Components.Translation, {
        defaultValue: noticeContent.defaultValue,
        i18nKey: noticeContent.i18nKey
      }))));
    }

    return renderNotices;
  }(); // render product image


  _proto.renderMedia = function () {
    function renderMedia() {
      var product = this.props.product;
      var MEDIA_PLACEHOLDER = "/resources/placeholder.gif";

      var _ref = Array.isArray(product.media) && product.media[0] || {
        large: MEDIA_PLACEHOLDER
      },
          large = _ref.large;

      return React.createElement("span", {
        className: "product-image",
        style: {
          backgroundImage: "url(\"" + large + "\")"
        }
      });
    }

    return renderMedia;
  }();

  _proto.renderAdditionalMedia = function () {
    function renderAdditionalMedia() {
      var _props = this.props,
          media = _props.product.media,
          weight = _props.position.weight; // if product is not medium weight
      // or the media array is empty exit

      if (weight !== 1 || !media || media.length === 0) return; // creating an additional madia array with
      // the 2nd, 3rd and 4th images returned
      // in the media array

      var additionalMedia = _toConsumableArray(media.slice(1, 4));

      return React.createElement("div", {
        className: "product-additional-images"
      }, additionalMedia.map(function (img) {
        return React.createElement("span", {
          key: img.small,
          className: "product-image",
          style: {
            backgroundImage: "url(\"" + img.medium + "\")"
          }
        });
      }));
    }

    return renderAdditionalMedia;
  }();

  _proto.renderGridContent = function () {
    function renderGridContent() {
      var product = this.props.product;
      return React.createElement("div", {
        className: "grid-content"
      }, React.createElement("a", {
        href: this.productURL,
        "data-event-category": "grid",
        "data-event-action": "product-click",
        "data-event-label": "grid product click",
        "data-event-value": product._id,
        onClick: this.handleClick
      }, React.createElement("div", {
        className: "overlay"
      }, React.createElement("div", {
        className: "overlay-title"
      }, product.title), React.createElement("div", {
        className: "currency-symbol"
      }, formatPriceString(product.price && product.price.range || "")), this.props.isSearch && React.createElement("div", {
        className: "overlay-description"
      }, product.description))));
    }

    return renderGridContent;
  }();

  _proto.render = function () {
    function render() {
      var _props2 = this.props,
          product = _props2.product,
          isSearch = _props2.isSearch;
      return React.createElement("li", {
        className: this.productClassNames,
        "data-id": product._id,
        id: product._id
      }, React.createElement("div", {
        className: isSearch ? "item-content" : ""
      }, React.createElement("span", {
        className: "product-grid-item-alerts"
      }), React.createElement("a", {
        className: "product-grid-item-images",
        href: this.productURL,
        "data-event-category": "grid",
        "data-event-label": "grid product click",
        "data-event-value": product._id,
        onClick: this.handleClick
      }, React.createElement("div", {
        className: "product-primary-images"
      }, this.renderMedia()), this.renderAdditionalMedia()), !isSearch && this.renderNotices(), this.renderGridContent()));
    }

    return render;
  }();

  (0, _createClass2.default)(ProductGridItem, [{
    key: "productURL",
    get: function () {
      var handle = this.props.product.handle;
      return Router.pathFor("product", {
        hash: {
          handle: handle
        }
      });
    } // get weight class name

  }, {
    key: "weightClass",
    get: function () {
      var _ref2 = this.props.position || {
        weight: 0
      },
          weight = _ref2.weight;

      switch (weight) {
        case 1:
          return "product-medium";

        case 2:
          return "product-large";

        default:
          return "product-small";
      }
    } // get notice class names

  }, {
    key: "noticeClassNames",
    get: function () {
      var _props$product2 = this.props.product,
          isSoldOut = _props$product2.isSoldOut,
          isLowQuantity = _props$product2.isLowQuantity,
          isBackorder = _props$product2.isBackorder;
      return classnames({
        "badge": isSoldOut || isLowQuantity,
        "variant-qty-sold-out": isSoldOut || isSoldOut && isBackorder,
        "badge-danger": isSoldOut && !isBackorder,
        "badge-low-inv-warning": isLowQuantity && !isSoldOut
      });
    } // get product item class names

  }, {
    key: "productClassNames",
    get: function () {
      var _classnames;

      var position = this.props.position;
      return classnames((_classnames = {
        "product-grid-item": true
      }, _classnames[this.weightClass] = true, _classnames["pinned"] = position.pinned, _classnames));
    } // handle click event

  }]);
  return ProductGridItem;
}(Component);

ProductGridItem.propTypes = {
  isSearch: PropTypes.bool,
  position: PropTypes.object,
  product: PropTypes.object // get product detail page URL

};
registerComponent("ProductGridItemCustomer", ProductGridItem);
module.exportDefault(ProductGridItem);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"gridItemControls.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/gridItemControls.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var GridItemControls =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(GridItemControls, _Component);

  function GridItemControls() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = GridItemControls.prototype;

  _proto.renderArchived = function () {
    function renderArchived() {
      if (this.props.product.isDeleted) {
        return React.createElement("span", {
          className: "badge badge-danger"
        }, React.createElement(Components.Translation, {
          defaultValue: "Archived",
          i18nKey: "app.archived"
        }));
      }
    }

    return renderArchived;
  }();

  _proto.renderVisibilityButton = function () {
    function renderVisibilityButton() {
      if (!this.props.product.__isValid && this.props.hasChanges()) {
        return React.createElement("div", null, React.createElement(Components.IconButton, {
          icon: "",
          onIcon: "",
          status: "danger"
        }));
      } else if (this.props.hasChanges()) {
        return React.createElement("div", null, React.createElement(Components.IconButton, {
          icon: "",
          onIcon: "",
          status: "info"
        }));
      }
    }

    return renderVisibilityButton;
  }();

  _proto.render = function () {
    function render() {
      if (this.props.hasCreateProductPermission()) {
        return React.createElement("div", {
          className: "product-grid-controls"
        }, React.createElement("label", {
          className: "like-button hidden",
          htmlFor: "select-product-" + this.props.product._id
        }, React.createElement("input", {
          type: "checkbox",
          name: "selectProduct",
          value: this.props.product._id,
          id: "select-product-" + this.props.product._id,
          checked: this.props.checked(),
          readOnly: true
        })), this.renderArchived(), this.renderVisibilityButton());
      }

      return null;
    }

    return render;
  }();

  return GridItemControls;
}(Component);

GridItemControls.propTypes = {
  checked: PropTypes.func,
  hasChanges: PropTypes.func,
  hasCreateProductPermission: PropTypes.func,
  isValid: PropTypes.bool,
  product: PropTypes.object
};
module.exportDefault(GridItemControls);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gridItemNotice.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/gridItemNotice.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var GridItemNotice =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(GridItemNotice, _Component);

  function GridItemNotice() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = GridItemNotice.prototype;

  _proto.renderNotice = function () {
    function renderNotice() {
      if (this.props.isSoldOut()) {
        if (this.props.isBackorder()) {
          return React.createElement("span", {
            className: "variant-qty-sold-out badge"
          }, React.createElement(Components.Translation, {
            defaultValue: "Backorder",
            i18nKey: "productDetail.backOrder"
          }));
        }

        return React.createElement("span", {
          className: "variant-qty-sold-out badge badge-danger"
        }, React.createElement(Components.Translation, {
          defaultValue: "Sold Out!",
          i18nKey: "productDetail.soldOut"
        }));
      } else if (this.props.isLowQuantity()) {
        return React.createElement("div", {
          className: "badge badge-low-inv-warning",
          title: ""
        }, React.createElement(Components.Translation, {
          defaultValue: "Limited Supply",
          i18nKey: "productDetail.limitedSupply"
        }));
      }
    }

    return renderNotice;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "product-grid-badges"
      }, this.renderNotice());
    }

    return render;
  }();

  return GridItemNotice;
}(Component);

GridItemNotice.propTypes = {
  isBackorder: PropTypes.func,
  isLowQuantity: PropTypes.func,
  isSoldOut: PropTypes.func
};
module.exportDefault(GridItemNotice);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productGrid.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/productGrid.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var ProductGrid =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductGrid, _Component);

  function ProductGrid() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.renderProductGridItems = function (products) {
      if (Array.isArray(products)) {
        var productMediaById = _this.props.productMediaById;
        return products.map(function (product, index) {
          return React.createElement(Components.ProductGridItems, (0, _extends2.default)({}, _this.props, {
            product: product,
            productMedia: productMediaById[product._id],
            key: index,
            index: index
          }));
        });
      }

      return React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "text-center"
      }, React.createElement("h3", null, React.createElement(Components.Translation, {
        defaultValue: "No Products Found",
        i18nKey: "app.noProductsFound"
      }))));
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ProductGrid.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "container-main"
      }, React.createElement("div", {
        className: "product-grid"
      }, React.createElement(Components.DragDropProvider, null, React.createElement("ul", {
        className: "product-grid-list list-unstyled",
        id: "product-grid-list"
      }, this.renderProductGridItems(this.props.products)))));
    }

    return render;
  }();

  return ProductGrid;
}(Component);

ProductGrid.propTypes = {
  productMediaById: PropTypes.object,
  products: PropTypes.arrayOf(PropTypes.object)
};
ProductGrid.defaultProps = {
  productMediaById: {}
};
module.exportDefault(ProductGrid);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productGridItems.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/productGridItems.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var formatPriceString;
module.watch(require("../../../../../client/api"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  }
}, 3);

var ProductGridItems =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductGridItems, _Component);

  function ProductGridItems() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleDoubleClick = function (event) {
      _this.props.onDoubleClick(event);
    }, _this.handleClick = function (event) {
      _this.props.onClick(event);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ProductGridItems.prototype;

  _proto.renderPinned = function () {
    function renderPinned() {
      return this.props.positions().pinned ? "pinned" : "";
    }

    return renderPinned;
  }();

  _proto.renderVisible = function () {
    function renderVisible() {
      return this.props.product.isVisible ? "" : "not-visible";
    }

    return renderVisible;
  }();

  _proto.renderOverlay = function () {
    function renderOverlay() {
      if (this.props.product.isVisible === false) {
        return React.createElement("div", {
          className: "product-grid-overlay"
        });
      }
    }

    return renderOverlay;
  }();

  _proto.renderMedia = function () {
    function renderMedia() {
      var _props = this.props,
          product = _props.product,
          productMedia = _props.productMedia;
      return React.createElement(Components.ProductImage, {
        displayMedia: function () {
          return productMedia.primaryMedia;
        },
        item: product,
        size: "large",
        mode: "span"
      });
    }

    return renderMedia;
  }();

  _proto.renderAdditionalMedia = function () {
    function renderAdditionalMedia() {
      var _props2 = this.props,
          isMediumWeight = _props2.isMediumWeight,
          productMedia = _props2.productMedia;
      if (!isMediumWeight()) return null;
      var mediaArray = productMedia.additionalMedia;
      if (!mediaArray || mediaArray.length === 0) return null;
      return React.createElement("div", {
        className: "product-additional-images " + this.renderVisible()
      }, mediaArray.map(function (media) {
        return React.createElement("span", {
          key: media._id,
          className: "product-image",
          style: {
            backgroundImage: "url('" + media.url({
              store: "medium"
            }) + "')"
          }
        });
      }), this.renderOverlay());
    }

    return renderAdditionalMedia;
  }();

  _proto.renderNotices = function () {
    function renderNotices() {
      return React.createElement("div", {
        className: "grid-alerts"
      }, React.createElement(Components.GridItemNotice, {
        product: this.props.product
      }), React.createElement(Components.GridItemControls, {
        product: this.props.product
      }));
    }

    return renderNotices;
  }();

  _proto.renderGridContent = function () {
    function renderGridContent() {
      return React.createElement("div", {
        className: "grid-content"
      }, React.createElement("a", {
        href: this.props.pdpPath(),
        "data-event-category": "grid",
        "data-event-action": "product-click",
        "data-event-label": "grid product click",
        "data-event-value": this.props.product._id,
        onDoubleClick: this.handleDoubleClick,
        onClick: this.handleClick
      }, React.createElement("div", {
        className: "overlay"
      }, React.createElement("div", {
        className: "overlay-title"
      }, this.props.product.title), React.createElement("div", {
        className: "currency-symbol"
      }, formatPriceString(this.props.displayPrice())), this.props.isSearch && React.createElement("div", {
        className: "overlay-description"
      }, this.props.product.description))));
    }

    return renderGridContent;
  }();

  _proto.renderHoverClassName = function () {
    function renderHoverClassName() {
      return this.props.isSearch ? "item-content" : "";
    }

    return renderHoverClassName;
  }();

  _proto.render = function () {
    function render() {
      var productItem = React.createElement("li", {
        className: "product-grid-item " + this.renderPinned() + " " + this.props.weightClass() + " " + this.props.isSelected(),
        "data-id": this.props.product._id,
        id: this.props.product._id
      }, React.createElement("div", {
        className: this.renderHoverClassName()
      }, React.createElement("span", {
        className: "product-grid-item-alerts"
      }), React.createElement("a", {
        className: "product-grid-item-images",
        href: this.props.pdpPath(),
        "data-event-category": "grid",
        "data-event-label": "grid product click",
        "data-event-value": this.props.product._id,
        onDoubleClick: this.handleDoubleClick,
        onClick: this.handleClick
      }, React.createElement("div", {
        className: "product-primary-images " + this.renderVisible()
      }, this.renderMedia(), this.renderOverlay()), this.renderAdditionalMedia()), !this.props.isSearch && this.renderNotices(), this.renderGridContent()));

      if (this.props.canEdit) {
        return this.props.connectDropTarget(this.props.connectDragSource(productItem));
      }

      return productItem;
    }

    return render;
  }();

  return ProductGridItems;
}(Component);

ProductGridItems.propTypes = {
  canEdit: PropTypes.bool,
  connectDragSource: PropTypes.func,
  connectDropTarget: PropTypes.func,
  displayPrice: PropTypes.func,
  isMediumWeight: PropTypes.func,
  isSearch: PropTypes.bool,
  isSelected: PropTypes.func,
  onClick: PropTypes.func,
  onDoubleClick: PropTypes.func,
  pdpPath: PropTypes.func,
  positions: PropTypes.func,
  product: PropTypes.object,
  productMedia: PropTypes.object,
  weightClass: PropTypes.func
};
ProductGridItems.defaultProps = {
  onClick: function () {},
  onDoubleClick: function () {},
  productMedia: {
    additionalMedia: null,
    primaryMedia: null
  }
};
module.exportDefault(ProductGridItems);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"products.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/products.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var getIds;
module.watch(require("../../../../../lib/selectors/tags"), {
  getTagIds: function (v) {
    getIds = v;
  }
}, 4);

/** Class representing the Products React component
 * @summary PropTypes for Product React component
 * @property {Function} loadMoreProducts - load more products callback
 * @property {Function} loadProducts - Load products callback
 * @property {Array} products - Array of products
 * @property {Object} products - Products subscription
 * @property {Function} ready - Ready state check helper
 * @property {Boolean} showNotFound - Force show not-found view
*/
var Products =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Products, _Component);

  function Products() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      if (_this.props.loadProducts) {
        _this.props.loadProducts(event);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = Products.prototype;

  /**
   * Render product grid
   * @access protected
   * @return {Node} React node containing the `ProductGrid` component.
   */
  _proto.renderProductGrid = function () {
    function renderProductGrid() {
      var products = this.props.products;
      var productsByKey = {};

      if (Array.isArray(products)) {
        for (var _iterator = products, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _product = _ref;
          productsByKey[_product._id] = _product;
        }
      }

      return React.createElement(Components.ProductGrid, {
        productsByKey: productsByKey || {},
        productIds: getIds({
          tags: products
        }),
        canEdit: Reaction.hasPermission("createProduct"),
        products: products
      });
    }

    return renderProductGrid;
  }();
  /**
   * Render loading component
   * @access protected
   * @return {Node} React node containing the `Loading` component.
   */


  _proto.renderSpinner = function () {
    function renderSpinner() {
      if (this.props.productsSubscription.ready() === false) {
        return React.createElement(Components.Loading, null);
      }
    }

    return renderSpinner;
  }();
  /**
   * Render load more button
   * @access protected
   * @return {Node|undefined} React node contianing a `laod more` button or undefined.
   */


  _proto.renderLoadMoreProductsButton = function () {
    function renderLoadMoreProductsButton() {
      if (this.props.loadMoreProducts()) {
        return React.createElement("div", {
          className: "product-load-more",
          id: "productScrollLimitLoader"
        }, React.createElement("button", {
          className: "btn btn-inverse btn-block btn-lg",
          onClick: this.handleClick
        }, React.createElement(Components.Translation, {
          defaultValue: "Load more products",
          i18nKey: "app.loadMoreProducts"
        })));
      }
    }

    return renderLoadMoreProductsButton;
  }();
  /**
   * Render the not found component
   * @access protected
   * @return {Node} React node contianing the `NotFound` component.
   */


  _proto.renderNotFound = function () {
    function renderNotFound() {
      return React.createElement(Components.NotFound, {
        i18nKeyTitle: "productGrid.noProductsFound",
        icon: "fa fa-barcode",
        title: "No Products Found"
      });
    }

    return renderNotFound;
  }();
  /**
   * Render component
   * @access protected
   * @return {Node} React node containing elements that make up the `Products` component.
   */


  _proto.render = function () {
    function render() {
      // Force show the not-found view.
      if (this.props.showNotFound) {
        return this.renderNotFound();
      } else if (this.props.ready()) {
        // Render products grid if products are available after subscription ready.
        if (this.hasProducts) {
          return React.createElement("div", {
            id: "container-main"
          }, this.renderProductGrid(), this.renderLoadMoreProductsButton(), this.renderSpinner());
        } // Render not-found view if no products are available.


        return this.renderNotFound();
      } // Render loading component by default if no condition above matches.


      return this.renderSpinner();
    }

    return render;
  }();

  (0, _createClass2.default)(Products, [{
    key: "hasProducts",

    /**
     * Checks and returns a Boolean if the `products` array from props is not empty.
     * @return {Boolean} Boolean value `true` if products are available, `false` otherwise.
     */
    get: function () {
      return Array.isArray(this.props.products) && this.props.products.length > 0;
    }
    /**
     * Handle load more button click
     * @access protected
     * @param  {SyntheticEvent} event Synthetic event object
     * @return {undefined}
     */

  }]);
  return Products;
}(Component);

Products.propTypes = {
  loadMoreProducts: PropTypes.func,
  loadProducts: PropTypes.func,
  products: PropTypes.array,
  productsSubscription: PropTypes.object,
  ready: PropTypes.func,
  showNotFound: PropTypes.bool
};
module.exportDefault(Products);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantEdit.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/variantEdit.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var VariantEdit =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(VariantEdit, _Component);

  function VariantEdit() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleCreateNewChildVariant = function () {
      if (_this.props.handleCreateNewChildVariant) {
        _this.props.handleCreateNewChildVariant(_this.props.variant);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = VariantEdit.prototype;

  _proto.renderVariant = function () {
    function renderVariant() {
      var variant = this.props.variant;
      return React.createElement(Components.VariantForm, {
        editFocus: this.props.editFocus,
        countries: this.props.countries,
        variant: variant,
        type: "variant"
      });
    }

    return renderVariant;
  }();

  _proto.renderOptionsCard = function () {
    function renderOptionsCard() {
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, {
        expandable: false,
        name: "variantOptions"
      }, React.createElement(Components.CardHeader, {
        i18nKeyTitle: "productDetailEdit.variantsOptions",
        title: "Variant Options"
      }, React.createElement(Components.Button, {
        icon: "plus",
        className: "rui btn btn-default btn-clone-variant flat",
        tooltip: "Add Option",
        onClick: this.handleCreateNewChildVariant
      }))), this.renderChildVariants());
    }

    return renderOptionsCard;
  }();

  _proto.renderChildVariants = function () {
    function renderChildVariants() {
      var _this2 = this;

      var childVariants = this.props.childVariants;

      if (Array.isArray(childVariants)) {
        return childVariants.map(function (childVariant, index) {
          return React.createElement(Components.VariantForm, {
            key: index,
            editFocus: _this2.props.editFocus,
            countries: _this2.props.countries,
            variant: childVariant,
            type: "option"
          });
        });
      }

      return null;
    }

    return renderChildVariants;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", null, this.renderVariant(), this.renderOptionsCard());
    }

    return render;
  }();

  return VariantEdit;
}(Component);

VariantEdit.propTypes = {
  childVariants: PropTypes.arrayOf(PropTypes.object),
  countries: PropTypes.arrayOf(PropTypes.object),
  editFocus: PropTypes.string,
  handleCreateNewChildVariant: PropTypes.func,
  variant: PropTypes.object
};
module.exportDefault(VariantEdit);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/components/variantForm.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread6 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var Velocity;
module.watch(require("velocity-animate"), {
  "default": function (v) {
    Velocity = v;
  }
}, 4);
module.watch(require("velocity-animate/velocity.ui"));
var Components;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 5);
var findCurrency;
module.watch(require("../../../../../client/api"), {
  findCurrency: function (v) {
    findCurrency = v;
  }
}, 6);
var fieldNames = ["title", "originCountry", "compareAtPrice", "price", "width", "length", "height", "weight", "taxCode", "taxDescription", "inventoryQuantity", "inventoryPolicy", "lowInventoryWarningThreshold"];
var fieldGroups = {
  title: {
    group: "variantDetails"
  },
  originCountry: {
    group: "variantDetails"
  },
  compareAtPrice: {
    group: "variantDetails"
  },
  price: {
    group: "variantDetails"
  },
  width: {
    group: "variantDetails"
  },
  length: {
    group: "variantDetails"
  },
  height: {
    group: "variantDetails"
  },
  weight: {
    group: "variantDetails"
  },
  taxCode: {
    group: "taxable"
  },
  taxDescription: {
    group: "taxable"
  },
  inventoryQuantity: {
    group: "inventoryManagement"
  },
  inventoryPolicy: {
    group: "inventoryManagement"
  },
  lowInventoryWarningThreshold: {
    group: "inventoryManagement"
  }
};

var VariantForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(VariantForm, _Component);

  function VariantForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleFieldChange = function (event, value, field) {
      _this.setState(function (_ref) {
        var _objectSpread2;

        var variant = _ref.variant;
        return {
          variant: (0, _objectSpread6.default)({}, variant, (_objectSpread2 = {}, _objectSpread2[field] = value, _objectSpread2))
        };
      });
    };

    _this.handleFieldBlur = function (event, value, field) {
      if (_this.props.onVariantFieldSave) {
        _this.props.onVariantFieldSave(_this.variant._id, field, value, _this.state.variant);
      }
    };

    _this.handleSelectChange = function (value, field) {
      _this.setState(function (_ref2) {
        var _objectSpread3;

        var variant = _ref2.variant;
        return {
          variant: (0, _objectSpread6.default)({}, variant, (_objectSpread3 = {}, _objectSpread3[field] = value, _objectSpread3))
        };
      }, function () {
        if (_this.props.onVariantFieldSave) {
          _this.props.onVariantFieldSave(_this.variant._id, field, value, _this.state.variant);
        }
      });
    };

    _this.handleCheckboxChange = function (event, value, field) {
      _this.setState(function (_ref3) {
        var _objectSpread4;

        var variant = _ref3.variant;
        return {
          variant: (0, _objectSpread6.default)({}, variant, (_objectSpread4 = {}, _objectSpread4[field] = value, _objectSpread4))
        };
      });

      _this.handleFieldBlur(event, value, field);
    };

    _this.handleInventoryPolicyChange = function (event, value, field) {
      /*
      Due to some confusing verbiage on how inventoryPolicy works / is displayed, we need to handle this field
      differently than we handle the other checkboxes in this component. Specifically, we display the opposite value of
      what the actual field value is. Because this is a checkbox, that means that the opposite value is actually the
      field value as well, not just a display value, so we need to reverse the boolean value when it gets passed into
      this function before we send it to the server to update the data. Other than reversing the value, this function
      is the same as `handleCheckboxChange`.
      */
      var inverseValue = !value;

      _this.setState(function (_ref4) {
        var _objectSpread5;

        var variant = _ref4.variant;
        return {
          variant: (0, _objectSpread6.default)({}, variant, (_objectSpread5 = {}, _objectSpread5[field] = inverseValue, _objectSpread5))
        };
      });

      _this.handleFieldBlur(event, inverseValue, field);
    };

    _this.handleCardExpand = function (event, card, cardName, isExpanded) {
      if (typeof _this.props.onCardExpand === "function") {
        _this.props.onCardExpand(isExpanded ? cardName : undefined);
      }
    };

    _this.handleVariantVisibilityToggle = function (variant) {
      return _this.props.onVisibilityButtonClick(variant);
    };

    _this.isExpanded = function (groupName) {
      return _this.state.expandedCard === groupName;
    };

    _this.state = {
      expandedCard: props.editFocus,
      variant: props.variant,
      inventoryPolicy: props.variant.inventoryPolicy,
      taxable: props.variant.taxable,
      inventoryManagement: props.variant.inventoryManagement
    };
    return _this;
  }

  var _proto = VariantForm.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var nextVariant = nextProps.variant || {};
      var currentVariant = this.state.variant || {};

      if (_isEqual(nextVariant, currentVariant) === false) {
        for (var _i = 0; _i < fieldNames.length; _i++) {
          var fieldName = fieldNames[_i];

          if (nextVariant[fieldName] !== currentVariant[fieldName]) {
            if (fieldName !== "taxCode") {
              this.animateFieldFlash(fieldName);
            }
          }
        }

        this.setState({
          expandedCard: nextProps.editFocus,
          inventoryManagement: nextProps.variant.inventoryManagement,
          inventoryPolicy: nextProps.variant.inventoryPolicy,
          taxable: nextProps.variant.taxable,
          variant: nextProps.variant
        });
      }

      this.setState({
        expandedCard: nextProps.editFocus
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.fieldGroupForFieldName = function () {
    function fieldGroupForFieldName(field) {
      // Other wise, if a field was passed
      // const fieldName = this.state.viewProps.field;
      var fieldName; // If the field is an array of field name

      if (Array.isArray(field) && field.length) {
        // Use the first field name
        var _field = _slicedToArray(field, 1);

        fieldName = _field[0];
      } else {
        fieldName = field;
      }

      var fieldData = fieldGroups[fieldName];

      if (fieldData && fieldData.group) {
        return fieldData.group;
      }

      return fieldName;
    }

    return fieldGroupForFieldName;
  }();

  _proto.animateFieldFlash = function () {
    function animateFieldFlash(fieldName) {
      var fieldRef = this.refs[fieldName + "Input"];

      if (fieldRef) {
        var input = fieldRef.refs.input;
        var isFieldValid = this.props.validation.isFieldValid(fieldName);
        var flashColor = isFieldValid ? "#f0fff4" : "#ffeeef";
        Velocity.RunSequence([{
          e: input,
          p: {
            backgroundColor: flashColor
          },
          o: {
            duration: 200
          }
        }, {
          e: input,
          p: {
            backgroundColor: "#fff"
          },
          o: {
            duration: 100
          }
        }]);
      }
    }

    return animateFieldFlash;
  }();

  _proto.renderTaxCodeField = function () {
    function renderTaxCodeField() {
      if (this.props.isProviderEnabled()) {
        return React.createElement(Components.Select, {
          clearable: false,
          i18nKeyLabel: "productVariant.taxCode",
          i18nKeyPlaceholder: "productVariant.selectTaxCode",
          label: "Tax Code",
          name: "taxCode",
          ref: "taxCodeInput",
          options: this.props.fetchTaxCodes(),
          onChange: this.handleSelectChange,
          value: this.variant.taxCode
        });
      }

      return React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.taxCode",
        i18nKeyPlaceholder: "productVariant.selectTaxCode",
        placeholder: "Select Tax Code",
        label: "Tax Code",
        name: "taxCode",
        ref: "taxCodeInput",
        value: this.variant.taxCode,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      });
    }

    return renderTaxCodeField;
  }();

  _proto.renderArchiveButton = function () {
    function renderArchiveButton() {
      var _this2 = this;

      if (this.props.isDeleted) {
        return React.createElement(Components.Button, {
          icon: "refresh",
          className: "rui btn btn-default btn-restore-variant flat",
          tooltip: "Restore",
          onClick: function () {
            return _this2.props.restoreVariant(_this2.variant);
          }
        });
      }

      return React.createElement(Components.Button, {
        icon: "archive",
        className: "rui btn btn-default btn-remove-variant flat",
        tooltip: "Archive",
        onClick: function () {
          return _this2.props.removeVariant(_this2.variant);
        }
      });
    }

    return renderArchiveButton;
  }();

  _proto.renderArchivedLabel = function () {
    function renderArchivedLabel() {
      if (this.props.isDeleted) {
        return React.createElement("div", {
          className: "panel-subheading"
        }, React.createElement("span", {
          className: "badge badge-danger",
          "data-i18n": "app.archived"
        }, React.createElement("span", null, "Archived")));
      }
    }

    return renderArchivedLabel;
  }();

  _proto.renderInventoryPolicyField = function () {
    function renderInventoryPolicyField() {
      if (this.props.hasChildVariants(this.variant)) {
        return React.createElement("div", {
          className: "col-sm-12"
        }, React.createElement(Components.Switch, {
          i18nKeyLabel: "productVariant.inventoryPolicy",
          i18nKeyOnLabel: "productVariant.inventoryPolicy",
          name: "inventoryPolicy",
          label: "Allow backorder",
          onLabel: "Allow backorder",
          checked: !this.state.inventoryPolicy,
          onChange: this.handleInventoryPolicyChange,
          validation: this.props.validation,
          disabled: true,
          helpText: "Backorder allowance is now controlled by options",
          i18nKeyHelpText: "admin.helpText.variantBackorderToggle",
          style: {
            backgroundColor: "lightgrey",
            cursor: "not-allowed"
          }
        }));
      }

      return React.createElement("div", {
        className: "col-sm-12"
      }, React.createElement(Components.Switch, {
        i18nKeyLabel: "productVariant.inventoryPolicy",
        i18nKeyOnLabel: "productVariant.inventoryPolicy",
        name: "inventoryPolicy",
        label: "Allow backorder",
        onLabel: "Allow backorder",
        checked: !this.state.inventoryPolicy,
        onChange: this.handleInventoryPolicyChange,
        validation: this.props.validation
      }));
    }

    return renderInventoryPolicyField;
  }();

  _proto.renderQuantityField = function () {
    function renderQuantityField() {
      if (this.props.hasChildVariants(this.variant)) {
        return React.createElement("div", {
          className: "col-sm-6"
        }, React.createElement(Components.TextField, {
          i18nKeyLabel: "productVariant.inventoryQuantity",
          i18nKeyPlaceholder: "0",
          placeholder: "0",
          label: "Quantity",
          type: "number",
          name: "inventoryQuantity",
          ref: "inventoryQuantityInput",
          value: this.props.onUpdateQuantityField(this.variant),
          style: {
            backgroundColor: "lightgrey",
            cursor: "not-allowed"
          },
          disabled: true,
          helpText: "Variant inventory is now controlled by options",
          i18nKeyHelpText: "admin.helpText.variantInventoryQuantity"
        }));
      }

      return React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.inventoryQuantity",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Quantity",
        type: "number",
        name: "inventoryQuantity",
        ref: "inventoryQuantityInput",
        value: this.variant.inventoryQuantity,
        onChange: this.handleFieldChange,
        onBlur: this.handleFieldBlur,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation,
        helpText: "Option inventory",
        i18nKeyHelpText: "admin.helpText.optionInventoryQuantity"
      }));
    }

    return renderQuantityField;
  }();

  _proto.renderVariantFields = function () {
    function renderVariantFields() {
      var _this3 = this;

      var cardName = "variant-" + this.variant._id;
      var classNames = classnames({
        "variant-card": true,
        "active": this.isExpanded(cardName)
      });
      var currency = findCurrency(null, true);
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, {
        className: classNames,
        expandable: true,
        expanded: this.isExpanded(cardName),
        name: cardName,
        onExpand: this.handleCardExpand
      }, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "productDetailEdit.variantDetails",
        title: "Variant Details",
        isValid: this.props.validation.isValid
      }, this.renderArchivedLabel(), React.createElement(Components.Button, {
        icon: "files-o",
        className: "rui btn btn-default btn-clone-variant flat",
        tooltip: "Duplicate",
        onClick: function () {
          return _this3.props.cloneVariant(_this3.variant);
        }
      }), React.createElement(Components.VisibilityButton, {
        onClick: function () {
          return _this3.handleVariantVisibilityToggle(_this3.variant);
        },
        bezelStyle: "flat",
        primary: false,
        toggleOn: this.variant.isVisible
      }), this.renderArchiveButton()), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.title",
        i18nKeyPlaceholder: "productVariant.title",
        placeholder: "Label",
        label: "Label",
        name: "title",
        ref: "titleInput",
        value: this.variant.title,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }), React.createElement(Components.Select, {
        clearable: false,
        i18nKeyLabel: "productVariant.originCountry",
        i18nKeyPlaceholder: "productVariant.originCountry",
        label: "Origin Country",
        name: "originCountry",
        ref: "countryOfOriginInput",
        options: this.props.countries,
        onChange: this.handleSelectChange,
        value: this.variant.originCountry
      }), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.NumericInput, {
        i18nKeyLabel: "productVariant.price",
        i18nKeyPlaceholder: "0.00",
        placeholder: "0.00",
        label: "Price",
        name: "price",
        ref: "priceInput",
        value: this.variant.price,
        format: currency,
        numericType: "currency",
        style: this.props.greyDisabledFields(this.variant),
        disabled: this.props.hasChildVariants(this.variant),
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      })), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.NumericInput, {
        i18nKeyLabel: "productVariant.compareAtPrice",
        i18nKeyPlaceholder: "0.00",
        placeholder: "0.00",
        label: "Compare At Price",
        name: "compareAtPrice",
        ref: "compareAtPriceInput",
        value: this.variant.compareAtPrice,
        numericType: "currency",
        format: currency,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }))), React.createElement(Components.Divider, null), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.width",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Width",
        name: "width",
        ref: "widthInput",
        value: this.variant.width,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      })), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.length",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Length",
        name: "length",
        ref: "lengthInput",
        value: this.variant.length,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.height",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Height",
        name: "height",
        ref: "heightInput",
        value: this.variant.height,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      })), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.weight",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Weight",
        name: "weight",
        ref: "weightInput",
        value: this.variant.weight,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }))))), React.createElement(Components.SettingsCard, {
        enabled: this.state.taxable,
        expandable: true,
        i18nKeyTitle: "productVariant.taxable",
        name: "taxable",
        packageName: "reaction-product-variant",
        saveOpenStateToPreferences: true,
        showSwitch: true,
        title: "Taxable",
        onSwitchChange: this.handleCheckboxChange
      }, this.renderTaxCodeField(), React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.taxDescription",
        i18nKeyPlaceholder: "productVariant.taxDescription",
        placeholder: "Tax Description",
        label: "Tax Description",
        name: "taxDescription",
        ref: "taxDescriptionInput",
        value: this.variant.taxDescription,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      })), React.createElement(Components.SettingsCard, {
        enabled: this.state.inventoryManagement,
        expandable: true,
        i18nKeyTitle: "productVariant.inventoryManagement",
        name: "inventoryManagement",
        packageName: "reaction-product-variant",
        saveOpenStateToPreferences: true,
        showSwitch: true,
        title: "Inventory Tracking",
        onSwitchChange: this.handleCheckboxChange
      }, React.createElement("div", {
        className: "row"
      }, this.renderQuantityField(), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.lowInventoryWarningThreshold",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        type: "number",
        label: "Warn At",
        name: "lowInventoryWarningThreshold",
        ref: "lowInventoryWarningThresholdInput",
        value: this.variant.lowInventoryWarningThreshold,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }))), React.createElement("div", {
        className: "row"
      }, this.renderInventoryPolicyField())));
    }

    return renderVariantFields;
  }();

  _proto.renderOptionFields = function () {
    function renderOptionFields() {
      var _this4 = this;

      var cardName = "variant-" + this.variant._id;
      var classNames = classnames({
        "variant-option-card": true,
        "active": this.isExpanded(cardName)
      });
      var currency = findCurrency(null, true);
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, {
        className: classNames,
        expandable: true,
        expanded: this.isExpanded(cardName),
        name: cardName,
        onExpand: this.handleCardExpand
      }, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        title: this.variant.optionTitle || "Label is required",
        isValid: this.props.validation.isValid
      }, this.renderArchivedLabel(), React.createElement(Components.Button, {
        icon: "files-o",
        className: "rui btn btn-default btn-clone-variant flat",
        tooltip: "Duplicate",
        onClick: function () {
          return _this4.props.cloneVariant(_this4.variant);
        }
      }), React.createElement(Components.VisibilityButton, {
        onClick: function () {
          return _this4.handleVariantVisibilityToggle(_this4.variant);
        },
        bezelStyle: "flat",
        primary: false,
        toggleOn: this.variant.isVisible
      }), this.renderArchiveButton()), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.optionTitle",
        i18nKeyPlaceholder: "productVariant.optionTitle",
        placeholder: "optionTitle",
        label: "Short Label",
        name: "optionTitle",
        ref: "optionTitleInput",
        value: this.variant.optionTitle,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation,
        helpText: "Displayed on Product Detail Page",
        i18nKeyHelpText: "admin.helpText.optionTitle"
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.title",
        i18nKeyPlaceholder: "productVariant.title",
        placeholder: "Label",
        label: "Label",
        name: "title",
        ref: "titleInput",
        value: this.variant.title,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation,
        helpText: "Displayed in cart, checkout, and orders",
        i18nKeyHelpText: "admin.helpText.title"
      }), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.NumericInput, {
        i18nKeyLabel: "productVariant.price",
        i18nKeyPlaceholder: "0.00",
        placeholder: "0.00",
        label: "Price",
        name: "price",
        ref: "priceInput",
        value: this.variant.price,
        format: currency,
        numericType: "currency",
        style: this.props.greyDisabledFields(this.variant),
        disabled: this.props.hasChildVariants(this.variant),
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation,
        helpText: "Purchase price",
        i18nKeyHelpText: "admin.helpText.price"
      })), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.NumericInput, {
        i18nKeyLabel: "productVariant.compareAtPrice",
        i18nKeyPlaceholder: "0.00",
        placeholder: "0.00",
        label: "Compare At Price",
        name: "compareAtPrice",
        ref: "compareAtPriceInput",
        value: this.variant.compareAtPrice,
        format: currency,
        numericType: "currency",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation,
        helpText: "Original price or MSRP",
        i18nKeyHelpText: "admin.helpText.compareAtPrice"
      }))), React.createElement("div", {
        className: "row"
      }, this.renderQuantityField(), this.renderInventoryPolicyField()), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.width",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Width",
        name: "width",
        ref: "widthInput",
        value: this.variant.width,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      })), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.length",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Length",
        name: "length",
        ref: "lengthInput",
        value: this.variant.length,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }))), React.createElement("div", {
        className: "row"
      }, React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.height",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Height",
        name: "height",
        ref: "heightInput",
        value: this.variant.height,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      })), React.createElement("div", {
        className: "col-sm-6"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productVariant.weight",
        i18nKeyPlaceholder: "0",
        placeholder: "0",
        label: "Weight",
        name: "weight",
        ref: "weightInput",
        value: this.variant.weight,
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        validation: this.props.validation
      }))))));
    }

    return renderOptionFields;
  }();

  _proto.render = function () {
    function render() {
      if (this.props.type === "option") {
        return React.createElement("div", null, this.renderOptionFields());
      }

      return React.createElement("div", null, this.renderVariantFields());
    }

    return render;
  }();

  (0, _createClass2.default)(VariantForm, [{
    key: "variant",
    get: function () {
      return this.state.variant || this.props.variant || {};
    }
  }]);
  return VariantForm;
}(Component);

VariantForm.propTypes = {
  cloneVariant: PropTypes.func,
  countries: PropTypes.arrayOf(PropTypes.object),
  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  fetchTaxCodes: PropTypes.func,
  greyDisabledFields: PropTypes.func,
  hasChildVariants: PropTypes.func,
  isDeleted: PropTypes.bool,
  isProviderEnabled: PropTypes.func,
  onCardExpand: PropTypes.func,
  onFieldChange: PropTypes.func,
  onUpdateQuantityField: PropTypes.func,
  onVariantFieldSave: PropTypes.func,
  onVisibilityButtonClick: PropTypes.func,
  removeVariant: PropTypes.func,
  restoreVariant: PropTypes.func,
  type: PropTypes.string,
  validation: PropTypes.object,
  variant: PropTypes.object
};
module.exportDefault(VariantForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"gridItemControlsContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/gridItemControlsContainer.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 4);
var Validation;
module.watch(require("@reactioncommerce/schemas"), {
  Validation: function (v) {
    Validation = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);
var GridItemControls;
module.watch(require("../components/gridItemControls"), {
  "default": function (v) {
    GridItemControls = v;
  }
}, 7);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 8);
var ProductVariant;
module.watch(require("../../../../../lib/collections/schemas/products"), {
  ProductVariant: function (v) {
    ProductVariant = v;
  }
}, 9);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(GridItemControlsContainer, _Component);

    function GridItemControlsContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.hasCreateProductPermission = function () {
        return Reaction.hasPermission("createProduct");
      };

      _this.hasChanges = function () {
        return !!_this.props.product.__draft;
      };

      _this.checkValidation = function () {
        // this returns an array with a single object
        var variants = ReactionProduct.getVariants(_this.props.product._id); // should validate variants if they exist to determine if product is Valid

        if (variants.length !== 0) {
          var validatedVariants = variants.map(function (variant) {
            return _this.validation.validate(variant);
          });

          _this.setState({
            validProduct: Object.assign({}, _this.props.product, {
              __isValid: validatedVariants[0].isValid
            })
          });
        } else {
          // if variants do not exist then validation should pass
          _this.setState({
            validProduct: Object.assign({}, _this.props.product, {
              __isValid: true
            })
          });
        }
      };

      _this.checked = function () {
        return _this.props.isSelected === true;
      };

      _this.validation = new Validation(ProductVariant);
      _this.validProduct = props.product;
      _this.hasCreateProductPermission = _this.hasCreateProductPermission.bind((0, _assertThisInitialized2.default)(_this));
      _this.hasChanges = _this.hasChanges.bind((0, _assertThisInitialized2.default)(_this));
      _this.checked = _this.checked.bind((0, _assertThisInitialized2.default)(_this));
      _this.checkValidation = _this.checkValidation.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    var _proto = GridItemControlsContainer.prototype;

    _proto.componentWillMount = function () {
      function componentWillMount() {
        this.checkValidation();
      }

      return componentWillMount;
    }();

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, {
          product: this.state.validProduct,
          hasCreateProductPermission: this.hasCreateProductPermission,
          hasChanges: this.hasChanges,
          checked: this.checked
        });
      }

      return render;
    }();

    return GridItemControlsContainer;
  }(Component), _class.propTypes = {
    isSelected: PropTypes.bool,
    product: PropTypes.object
  }, _temp;
};

function composer(props, onData) {
  var product = props.product;
  var isSelected;

  if (product) {
    var selectedProducts = Session.get("productGrid/selectedProducts");
    isSelected = Array.isArray(selectedProducts) ? selectedProducts.indexOf(product._id) >= 0 : false;
  }

  onData(null, {
    product: product,
    isSelected: isSelected
  });
}

registerComponent("GridItemControls", GridItemControls, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(GridItemControls));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gridItemNoticeContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/gridItemNoticeContainer.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 3);
var GridItemNotice;
module.watch(require("../components/gridItemNotice"), {
  "default": function (v) {
    GridItemNotice = v;
  }
}, 4);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(GridItemNoticeContainer, _Component);

    function GridItemNoticeContainer() {
      var _this;

      _this = _Component.call(this) || this;

      _this.isLowQuantity = function () {
        var topVariants = ReactionProduct.getTopVariants(_this.props.product._id);

        for (var _iterator = topVariants, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _topVariant = _ref;
          var inventoryThreshold = _topVariant.lowInventoryWarningThreshold;
          var inventoryQuantity = ReactionProduct.getVariantQuantity(_topVariant);

          if (inventoryQuantity !== 0 && inventoryThreshold >= inventoryQuantity) {
            return true;
          }
        }

        return false;
      };

      _this.isSoldOut = function () {
        var topVariants = ReactionProduct.getTopVariants(_this.props.product._id);

        for (var _iterator2 = topVariants, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var _topVariant2 = _ref2;
          var inventoryQuantity = ReactionProduct.getVariantQuantity(_topVariant2);

          if (inventoryQuantity > 0) {
            return false;
          }
        }

        return true;
      };

      _this.isBackorder = function () {
        return _this.props.product.isBackorder;
      };

      _this.isLowQuantity = _this.isLowQuantity.bind((0, _assertThisInitialized2.default)(_this));
      _this.isSoldOut = _this.isSoldOut.bind((0, _assertThisInitialized2.default)(_this));
      _this.isBackorder = _this.isBackorder.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    var _proto = GridItemNoticeContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, {
          isLowQuantity: this.isLowQuantity,
          isSoldOut: this.isSoldOut,
          isBackorder: this.isBackorder
        });
      }

      return render;
    }();

    return GridItemNoticeContainer;
  }(Component), _class.propTypes = {
    product: PropTypes.object
  }, _temp;
};

registerComponent("GridItemNotice", GridItemNotice, wrapComponent);
module.exportDefault(wrapComponent(GridItemNotice));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"gridPublishContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/gridPublishContainer.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 4);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 5);
var Products;
module.watch(require("../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  }
}, 6);
var PublishContainer;
module.watch(require("../../../core/revisions/client/containers/publishContainer"), {
  "default": function (v) {
    PublishContainer = v;
  }
}, 7);

var GridProductPublishContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(GridProductPublishContainer, _Component);

  function GridProductPublishContainer() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleVisibilityChange = function (event, isProductVisible) {
      if (Array.isArray(_this.props.documentIds)) {
        for (var _iterator = _this.props.documentIds, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _productId = _ref;
          Meteor.call("products/updateProductField", _productId, "isVisible", isProductVisible);
        }
      }
    }, _this.handlePublishActions = function (event, action) {
      if (action === "archive") {
        ReactionProduct.archiveProduct(_this.props.documents);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = GridProductPublishContainer.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(PublishContainer, (0, _extends2.default)({
        onAction: this.handlePublishActions,
        onVisibilityChange: this.handleVisibilityChange
      }, this.props));
    }

    return render;
  }();

  return GridProductPublishContainer;
}(Component);

GridProductPublishContainer.propTypes = {
  documentIds: PropTypes.arrayOf(PropTypes.string),
  documents: PropTypes.arrayOf(PropTypes.object)
};

function composer(props, onData) {
  var selectedProducts = Session.get("productGrid/selectedProducts");
  var products = Session.get("productGrid/products");
  var productIds;

  if (Array.isArray(selectedProducts) && selectedProducts.length) {
    productIds = selectedProducts;
  } else if (Array.isArray(products) && products.length) {
    productIds = products.map(function (p) {
      return p._id;
    });
  }

  if (productIds) {
    var documents = Products.find({
      _id: {
        $in: productIds
      }
    }).fetch();
    onData(null, {
      documentIds: productIds,
      documents: documents
    });
  } else {
    onData(null, {});
  }
}

registerComponent("GridProductPublish", GridProductPublishContainer, composeWithTracker(composer)); // Decorate component and export

module.exportDefault(composeWithTracker(composer)(GridProductPublishContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productGridContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/productGridContainer.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);

var _get;

module.watch(require("lodash/get"), {
  "default": function (v) {
    _get = v;
  }
}, 1);

var _without;

module.watch(require("lodash/without"), {
  "default": function (v) {
    _without = v;
  }
}, 2);

var _uniq;

module.watch(require("lodash/uniq"), {
  "default": function (v) {
    _uniq = v;
  }
}, 3);

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 4);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 5);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 6);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 7);
var Components, composeWithTracker, registerComponent;
module.watch(require("../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 8);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 9);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 10);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 11);
var Media;
module.watch(require("../../../core/files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 12);
var Logger;
module.watch(require("../../../../../client/modules/logger"), {
  "default": function (v) {
    Logger = v;
  }
}, 13);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 14);
var ProductGrid;
module.watch(require("../components/productGrid"), {
  "default": function (v) {
    ProductGrid = v;
  }
}, 15);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(ProductGridContainer, _Component);

    function ProductGridContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.componentWillReceiveProps = function (nextProps) {
        _this.setState({
          products: nextProps.products,
          productIds: nextProps.productIds,
          productsByKey: nextProps.productsByKey
        });
      };

      _this.handleSelectProductItem = function (isChecked, productId) {
        var selectedProducts = Session.get("productGrid/selectedProducts");

        if (isChecked) {
          selectedProducts.push(productId);
        } else {
          selectedProducts = _without(selectedProducts, productId);
        }

        Reaction.setUserPreferences("reaction-product-variant", "selectedGridItems", selectedProducts); // Save the selected items to the Session

        Session.set("productGrid/selectedProducts", _uniq(selectedProducts));

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            products = _assertThisInitialize.products;

        if (products) {
          var filteredProducts = products.filter(function (product) {
            return selectedProducts.includes(product._id);
          });
          Reaction.showActionView({
            label: "Grid Settings",
            i18nKeyLabel: "gridSettingsPanel.title",
            template: "productSettings",
            type: "product",
            data: {
              products: filteredProducts
            }
          });
        }
      };

      _this.handleProductDrag = function (dragIndex, hoverIndex) {
        var _positions, _positions2, _productsByKey;

        var tag = ReactionProduct.getTag();
        var dragProductId = _this.state.productIds[dragIndex];
        var hoverProductId = _this.state.productIds[hoverIndex];

        var dragProductWeight = _get((0, _assertThisInitialized2.default)(_this), "state.productsByKey[" + dragProductId + "].positions[" + tag + "].weight", 0);

        var dropProductWeight = _get((0, _assertThisInitialized2.default)(_this), "state.productsByKey[" + hoverProductId + "].positions[" + tag + "].weight", 0);

        var newState = update(_this.state, {
          productsByKey: (_productsByKey = {}, _productsByKey[dragProductId] = {
            $merge: {
              positions: (_positions = {}, _positions[tag] = {
                weight: dropProductWeight
              }, _positions)
            }
          }, _productsByKey[hoverProductId] = {
            $merge: {
              positions: (_positions2 = {}, _positions2[tag] = {
                weight: dragProductWeight
              }, _positions2)
            }
          }, _productsByKey),
          productIds: {
            $splice: [[dragIndex, 1], [hoverIndex, 0, dragProductId]]
          }
        });

        _this.setState(newState);
      };

      _this.handleProductDrop = function () {
        var tag = ReactionProduct.getTag();

        _this.state.productIds.map(function (productId, index) {
          var position = {
            position: index,
            updatedAt: new Date()
          };
          return Meteor.call("products/updateProductPosition", productId, position, tag, function (error) {
            if (error) {
              Logger.error(error);
              throw new Meteor.Error("error-occurred", error);
            }
          });
        });
      };

      _this.state = {
        products: props.products,
        productsByKey: props.productsByKey,
        productIds: props.productIds,
        initialLoad: true,
        slug: "",
        canLoadMoreProducts: false
      };
      return _this;
    }

    var _proto = ProductGridContainer.prototype;

    _proto.componentWillMount = function () {
      function componentWillMount() {
        var selectedProducts = Reaction.getUserPreferences("reaction-product-variant", "selectedGridItems");
        var products = this.products;

        if (_isEmpty(selectedProducts)) {
          return Reaction.hideActionView();
        } // Save the selected items to the Session


        Session.set("productGrid/selectedProducts", _uniq(selectedProducts));

        if (products) {
          var filteredProducts = products.filter(function (product) {
            return selectedProducts.includes(product._id);
          });

          if (Reaction.isPreview() === false) {
            Reaction.showActionView({
              label: "Grid Settings",
              i18nKeyLabel: "gridSettingsPanel.title",
              template: "productSettings",
              type: "product",
              data: {
                products: filteredProducts
              }
            });
          }
        }
      }

      return componentWillMount;
    }();

    _proto.render = function () {
      function render() {
        return React.createElement(Components.DragDropProvider, null, React.createElement(Comp, (0, _extends2.default)({}, this.props, {
          products: this.products,
          onMove: this.handleProductDrag,
          onDrop: this.handleProductDrop,
          itemSelectHandler: this.handleSelectProductItem
        })));
      }

      return render;
    }();

    (0, _createClass2.default)(ProductGridContainer, [{
      key: "products",
      get: function () {
        var _this2 = this;

        if (this.props.isSearch) {
          return this.state.products;
        }

        return this.state.productIds.map(function (id) {
          return _this2.state.productsByKey[id];
        });
      }
    }]);
    return ProductGridContainer;
  }(Component), _class.propTypes = {
    isSearch: PropTypes.bool,
    productIds: PropTypes.array,
    products: PropTypes.array,
    productsByKey: PropTypes.object
  }, _temp;
};

function composer(props, onData) {
  // Instantiate an object for use as a map. This object does not inherit prototype or methods from `Object`
  var productMediaById = Object.create(null);
  (props.products || []).forEach(function (product) {
    var primaryMedia = Media.findOneLocal({
      "metadata.productId": product._id,
      "metadata.toGrid": 1,
      "metadata.workflow": {
        $nin: ["archived", "unpublished"]
      }
    }, {
      sort: {
        "metadata.priority": 1,
        "uploadedAt": 1
      }
    });
    var variantIds = ReactionProduct.getVariants(product._id).map(function (variant) {
      return variant._id;
    });
    var additionalMedia = Media.findLocal({
      "metadata.productId": product._id,
      "metadata.variantId": {
        $in: variantIds
      },
      "metadata.workflow": {
        $nin: ["archived", "unpublished"]
      }
    }, {
      limit: 3,
      sort: {
        "metadata.priority": 1,
        "uploadedAt": 1
      }
    });
    if (additionalMedia.length < 2) additionalMedia = null;
    productMediaById[product._id] = {
      additionalMedia: additionalMedia,
      primaryMedia: primaryMedia
    };
  });
  onData(null, {
    productMediaById: productMediaById
  });
}

registerComponent("ProductGrid", ProductGrid, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(ProductGrid));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productGridItemsContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/productGridItemsContainer.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);

var _max;

module.watch(require("lodash/max"), {
  "default": function (v) {
    _max = v;
  }
}, 1);

var _min;

module.watch(require("lodash/min"), {
  "default": function (v) {
    _min = v;
  }
}, 2);

var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 3);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 4);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 5);
var registerComponent;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 6);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 7);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 8);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 9);
var SortableItem;
module.watch(require("../../../core/ui/client/containers"), {
  SortableItem: function (v) {
    SortableItem = v;
  }
}, 10);
var ProductGridItems;
module.watch(require("../components/productGridItems"), {
  "default": function (v) {
    ProductGridItems = v;
  }
}, 11);

var wrapComponent = function (Comp) {
  var _class, _temp2;

  return _temp2 = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(ProductGridItemsContainer, _Component);

    function ProductGridItemsContainer() {
      var _temp, _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.onPageClick = function (event) {
        // Do nothing if we are in preview mode
        if (Reaction.isPreview() === false) {
          // Don't trigger the clear selection if we're clicking on a grid item.
          if (event.target.closest(".product-grid-item") === null) {
            var selectedProducts = Session.get("productGrid/selectedProducts"); // Do we have any selected products?
            // If we do then lets reset the Grid Settings ActionView

            if (Array.isArray(selectedProducts) && selectedProducts.length) {
              // Reset sessions ver of selected products
              Session.set("productGrid/selectedProducts", []); // Reset the action view of selected products

              Reaction.setActionView({
                label: "Grid Settings",
                i18nKeyLabel: "gridSettingsPanel.title",
                template: "productSettings",
                type: "product",
                data: {}
              });
            }
          }
        }
      }, _this.productPath = function () {
        if (_this.props.product) {
          var handle = _this.props.product.handle;

          if (_this.props.product.__published) {
            handle = _this.props.product.__published.handle;
          }

          return Reaction.Router.pathFor("product", {
            hash: {
              handle: handle
            }
          });
        }

        return "/";
      }, _this.positions = function () {
        var tag = ReactionProduct.getTag();
        return _this.props.product.positions && _this.props.product.positions[tag] || {};
      }, _this.weightClass = function () {
        var positions = _this.positions();

        var weight = positions.weight || 0;

        switch (weight) {
          case 1:
            return "product-medium";

          case 2:
            return "product-large";

          default:
            return "product-small";
        }
      }, _this.isSelected = function () {
        if (Reaction.isPreview() === false) {
          return _includes(Session.get("productGrid/selectedProducts"), _this.props.product._id) ? "active" : "";
        }

        return false;
      }, _this.isMediumWeight = function () {
        var positions = _this.positions();

        var weight = positions.weight || 0;
        return weight === 1;
      }, _this.displayPrice = function () {
        if (_this.props.product.price && _this.props.product.price.range) {
          return _this.props.product.price.range;
        }
      }, _this.handleCheckboxSelect = function (list, product) {
        var checkbox = list.querySelector("input[type=checkbox][value=\"" + product._id + "\"]");
        var items = document.querySelectorAll("li.product-grid-item");
        var activeItems = document.querySelectorAll("li.product-grid-item.active");
        var selected = activeItems.length;

        if (event.shiftKey && selected > 0) {
          var indexes = [Array.prototype.indexOf.call(items, document.querySelector("li.product-grid-item[id=\"" + product._id + "\"]")), Array.prototype.indexOf.call(items, activeItems[0]), Array.prototype.indexOf.call(items, activeItems[selected - 1])];

          for (var i = _min(indexes); i <= _max(indexes); i += 1) {
            checkbox = items[i].querySelector("input[type=checkbox]");

            if (checkbox.checked === false) {
              checkbox.checked = true;

              _this.props.itemSelectHandler(checkbox.checked, product._id);
            }
          }
        } else if (checkbox) {
          checkbox.checked = !checkbox.checked;

          _this.props.itemSelectHandler(checkbox.checked, product._id);
        }
      }, _this.onDoubleClick = function () {
        var product = _this.props.product;
        var handle = product.__published && product.__published.handle || product.handle;
        Reaction.Router.go("product", {
          handle: handle
        }); // Open actionView to productDetails panel

        Reaction.state.set("edit/focus", "productDetails");
        Reaction.setActionView({
          i18nKeyLabel: "productDetailEdit.productSettings",
          label: "Product Settings",
          template: "ProductAdmin"
        });

        if (_this.props.isSearch) {
          _this.props.unmountMe();
        }
      }, _this.onClick = function (event) {
        event.preventDefault();
        var product = _this.props.product;

        if (Reaction.hasPermission("createProduct") && Reaction.isPreview() === false) {
          if (_this.props.isSearch) {
            var handle = product.handle;

            if (product.__published) {
              handle = product.__published.handle;
            }

            Reaction.Router.go("product", {
              handle: handle
            });

            _this.props.unmountMe();
          }

          var isSelected = event.target.closest("li.product-grid-item.active");
          var list = document.getElementById("product-grid-list");

          if (isSelected) {
            // If a product is already selected, and you are single clicking on another product(s)
            // WITH command key, the product(s) are added to the selected products Session array
            _this.handleCheckboxSelect(list, product);

            if (event.metaKey || event.ctrlKey || event.shiftKey) {
              _this.handleCheckboxSelect(list, product);
            }
          } else if (event.metaKey || event.ctrlKey || event.shiftKey) {
            _this.handleCheckboxSelect(list, product);
          } else {
            var checkbox = list.querySelector("input[type=checkbox][value=\"" + product._id + "\"]");
            Session.set("productGrid/selectedProducts", []);

            if (checkbox) {
              checkbox.checked = true;

              _this.props.itemSelectHandler(checkbox.checked, product._id);
            }
          }
        } else {
          var _handle = product.__published && product.__published.handle || product.handle;

          Reaction.Router.go("product", {
            handle: _handle
          });

          if (_this.props.isSearch) {
            _this.props.unmountMe();
          }
        }
      }, _temp) || (0, _assertThisInitialized2.default)(_this);
    }

    var _proto = ProductGridItemsContainer.prototype;

    _proto.componentDidMount = function () {
      function componentDidMount() {
        document.querySelector(".page > main").addEventListener("click", this.onPageClick);
      }

      return componentDidMount;
    }();

    _proto.componentWillUnmount = function () {
      function componentWillUnmount() {
        document.querySelector(".page > main").removeEventListener("click", this.onPageClick);
      }

      return componentWillUnmount;
    }();

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, (0, _extends2.default)({
          product: this.props.product,
          pdpPath: this.productPath,
          positions: this.positions,
          weightClass: this.weightClass,
          isSelected: this.isSelected,
          isMediumWeight: this.isMediumWeight,
          displayPrice: this.displayPrice,
          onDoubleClick: this.onDoubleClick,
          onClick: this.onClick
        }, this.props));
      }

      return render;
    }();

    return ProductGridItemsContainer;
  }(Component), _class.propTypes = {
    connectDragSource: PropTypes.func,
    connectDropTarget: PropTypes.func,
    isSearch: PropTypes.bool,
    itemSelectHandler: PropTypes.func,
    product: PropTypes.object,
    unmountMe: PropTypes.func
  }, _temp2;
};

registerComponent("ProductGridItems", ProductGridItems, [SortableItem("productGridItem"), wrapComponent]);
module.exportDefault(_compose(SortableItem("productGridItem"), wrapComponent)(ProductGridItems));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productsContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/productsContainer.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent, composeWithTracker, Components;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  Components: function (v) {
    Components = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);

var ProductsContainer = function (_ref) {
  var isAdmin = _ref.isAdmin;

  if (isAdmin) {
    return React.createElement(Components.ProductsAdmin, null);
  }

  return React.createElement(Components.ProductsCustomer, null);
};

ProductsContainer.propTypes = {
  isAdmin: PropTypes.bool
};

function composer(props, onData) {
  var isAdmin = Reaction.hasPermission("createProduct", Meteor.userId());
  onData(null, {
    isAdmin: isAdmin
  });
}

registerComponent("Products", ProductsContainer, [composeWithTracker(composer)]);
module.exportDefault(_compose(composeWithTracker(composer))(ProductsContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productsContainerAdmin.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/productsContainerAdmin.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 5);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 6);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 7);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 8);
var ITEMS_INCREMENT;
module.watch(require("../../../../../client/config/defaults"), {
  ITEMS_INCREMENT: function (v) {
    ITEMS_INCREMENT = v;
  }
}, 9);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 10);
var applyProductRevision, resubscribeAfterCloning;
module.watch(require("../../../../../lib/api/products"), {
  applyProductRevision: function (v) {
    applyProductRevision = v;
  },
  resubscribeAfterCloning: function (v) {
    resubscribeAfterCloning = v;
  }
}, 11);
var Products, Tags, Shops;
module.watch(require("../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  },
  Tags: function (v) {
    Tags = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 12);
var ProductsComponent;
module.watch(require("../components/products"), {
  "default": function (v) {
    ProductsComponent = v;
  }
}, 13);
var reactiveProductIds = new ReactiveVar([], function (oldVal, newVal) {
  return JSON.stringify(oldVal.sort()) === JSON.stringify(newVal.sort());
}); // Isolated resubscribe to product grid images, only when the list of product IDs changes

Tracker.autorun(function () {
  Meteor.subscribe("ProductGridMedia", reactiveProductIds.get());
});
/**
 * loadMoreProducts
 * @summary whenever #productScrollLimitLoader becomes visible, retrieve more results
 * this basically runs this:
 * Session.set('productScrollLimit', Session.get('productScrollLimit') + ITEMS_INCREMENT);
 * @return {undefined}
 */

function loadMoreProducts() {
  var threshold;
  var target = document.querySelectorAll("#productScrollLimitLoader");
  var scrollContainer = document.querySelectorAll("#container-main");

  if (scrollContainer.length === 0) {
    scrollContainer = window;
  }

  if (target.length) {
    threshold = scrollContainer[0].scrollHeight - scrollContainer[0].scrollTop === scrollContainer[0].clientHeight;

    if (threshold) {
      if (!target[0].getAttribute("visible")) {
        target[0].setAttribute("productScrollLimit", true);
        Session.set("productScrollLimit", Session.get("productScrollLimit") + ITEMS_INCREMENT || 24);
      }
    } else if (target[0].getAttribute("visible")) {
      target[0].setAttribute("visible", false);
    }
  }
}

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(ProductsContainer, _Component);

    function ProductsContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.ready = function () {
        if (_this.props.showNotFound === true) {
          return false;
        }

        var isInitialLoad = _this.state.initialLoad === true;

        var isReady = _this.props.productsSubscription.ready();

        if (isInitialLoad === false) {
          return true;
        }

        if (isReady) {
          return true;
        }

        return false;
      };

      _this.loadMoreProducts = function () {
        return _this.props.canLoadMoreProducts === true;
      };

      _this.loadProducts = function (event) {
        event.preventDefault();

        _this.setState({
          initialLoad: false
        });

        loadMoreProducts();
      };

      _this.state = {
        initialLoad: true
      };
      _this.ready = _this.ready.bind((0, _assertThisInitialized2.default)(_this));
      _this.loadMoreProducts = _this.loadMoreProducts.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    var _proto = ProductsContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, (0, _extends2.default)({}, this.props, {
          ready: this.ready,
          loadMoreProducts: this.loadMoreProducts,
          loadProducts: this.loadProducts
        }));
      }

      return render;
    }();

    return ProductsContainer;
  }(Component), _class.propTypes = {
    canLoadMoreProducts: PropTypes.bool,
    productsSubscription: PropTypes.object,
    showNotFound: PropTypes.bool
  }, _temp;
};

function composer(props, onData) {
  var _sort;

  window.prerenderReady = false;
  var canLoadMoreProducts = false;
  var slug = Reaction.Router.getParam("slug");
  var shopIdOrSlug = Reaction.Router.getParam("shopSlug");
  var tag = Tags.findOne({
    slug: slug
  }) || Tags.findOne(slug);
  var scrollLimit = Session.get("productScrollLimit");
  var tags = {}; // this could be shop default implementation needed

  var shopIds = {};

  if (tag) {
    tags = {
      tags: [tag._id]
    };
  }

  if (shopIdOrSlug) {
    shopIds = {
      shops: [shopIdOrSlug]
    };
  } // if we get an invalid slug, don't return all products


  if (!tag && slug) {
    onData(null, {
      showNotFound: true
    });
    return;
  }

  var currentTag = ReactionProduct.getTag();
  var sort = (_sort = {}, _sort["positions." + currentTag + ".position"] = 1, _sort["positions." + currentTag + ".createdAt"] = 1, _sort.createdAt = 1, _sort);
  var viewAsPref = Reaction.getUserPreferences("reaction-dashboard", "viewAs"); // Edit mode is true by default

  var editMode = true; // if we have a "viewAs" preference and the preference is not set to "administrator", then edit mode is false

  if (viewAsPref && viewAsPref !== "administrator") {
    editMode = false;
  }

  var queryParams = Object.assign({}, tags, Reaction.Router.current().query, shopIds);
  var productsSubscription = Meteor.subscribe("Products", scrollLimit, queryParams, sort, editMode);

  if (resubscribeAfterCloning.get()) {
    resubscribeAfterCloning.set(false);
    productsSubscription.stop();
  }

  if (productsSubscription.ready()) {
    window.prerenderReady = true;
  }

  var activeShopsIds = Shops.find({
    $or: [{
      "workflow.status": "active"
    }, {
      _id: Reaction.getPrimaryShopId()
    }]
  }).map(function (activeShop) {
    return activeShop._id;
  });
  var productCursor = Products.find({
    ancestors: [],
    type: {
      $in: ["simple"]
    },
    shopId: {
      $in: activeShopsIds
    }
  });
  var productIds = [];
  var products = productCursor.map(function (product) {
    productIds.push(product._id);
    return applyProductRevision(product);
  });
  var sortedProducts = ReactionProduct.sortProducts(products, currentTag);
  Session.set("productGrid/products", sortedProducts);
  reactiveProductIds.set(productIds);
  canLoadMoreProducts = productCursor.count() >= Session.get("productScrollLimit");
  var isActionViewOpen = Reaction.isActionViewOpen();

  if (isActionViewOpen === false) {
    Session.set("productGrid/selectedProducts", []);
  }

  onData(null, {
    canLoadMoreProducts: canLoadMoreProducts,
    products: sortedProducts,
    productsSubscription: productsSubscription
  });
}

registerComponent("ProductsAdmin", ProductsComponent, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(ProductsComponent));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productsContainerCustomer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/productsContainerCustomer.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 5);
var Reaction;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 6);
var ITEMS_INCREMENT;
module.watch(require("../../../../../client/config/defaults"), {
  ITEMS_INCREMENT: function (v) {
    ITEMS_INCREMENT = v;
  }
}, 7);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 8);
var Catalog, Tags, Shops;
module.watch(require("../../../../../lib/collections"), {
  Catalog: function (v) {
    Catalog = v;
  },
  Tags: function (v) {
    Tags = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 9);
var ProductGridCustomer;
module.watch(require("../components/customer/productGrid"), {
  "default": function (v) {
    ProductGridCustomer = v;
  }
}, 10);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(ProductsContainer, _Component);

    function ProductsContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.loadProducts = function () {
        _this.setState({
          initialLoad: false
        }); // load in the next set of products


        Session.set("productScrollLimit", Session.get("productScrollLimit") + ITEMS_INCREMENT || 24);
      };

      _this.state = {
        initialLoad: true
      };
      return _this;
    }

    var _proto = ProductsContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, (0, _extends2.default)({}, this.props, {
          loadProducts: this.loadProducts
        }));
      }

      return render;
    }();

    return ProductsContainer;
  }(Component), _class.propTypes = {
    canLoadMoreProducts: PropTypes.bool,
    productsSubscription: PropTypes.object,
    showNotFound: PropTypes.bool
  }, _temp;
};

function composer(props, onData) {
  var _sort;

  window.prerenderReady = false;
  var canLoadMoreProducts = false;
  var slug = Reaction.Router.getParam("slug");
  var shopIdOrSlug = Reaction.Router.getParam("shopSlug");
  var tag = Tags.findOne({
    slug: slug
  }) || Tags.findOne(slug);
  var scrollLimit = Session.get("productScrollLimit");
  var tags = {}; // this could be shop default implementation needed

  var shopIds = {};

  if (tag) {
    tags = {
      tags: [tag._id]
    };
  }

  if (shopIdOrSlug) {
    shopIds = {
      shops: [shopIdOrSlug]
    };
  } // if we get an invalid slug, don't return all products


  if (!tag && slug) {
    onData(null, {
      showNotFound: true
    });
    return;
  }

  var currentTag = ReactionProduct.getTag();
  var sort = (_sort = {}, _sort["positions." + currentTag + ".position"] = 1, _sort["positions." + currentTag + ".createdAt"] = 1, _sort.createdAt = 1, _sort);
  var queryParams = Object.assign({}, tags, Reaction.Router.current().query, shopIds);
  var productsSubscription = Meteor.subscribe("Products/grid", scrollLimit, queryParams, sort);

  if (productsSubscription.ready()) {
    window.prerenderReady = true;
  }

  var activeShopsIds = Shops.find({
    $or: [{
      "workflow.status": "active"
    }, {
      _id: Reaction.getPrimaryShopId()
    }]
  }).map(function (activeShop) {
    return activeShop._id;
  });
  var productCursor = Catalog.find({
    ancestors: [],
    type: {
      $in: ["product-simple"]
    },
    shopId: {
      $in: activeShopsIds
    }
  }, {
    $sort: sort
  });
  canLoadMoreProducts = productCursor.count() >= Session.get("productScrollLimit");
  var products = productCursor.fetch();
  onData(null, {
    canLoadMoreProducts: canLoadMoreProducts,
    products: products,
    productsSubscription: productsSubscription
  });
}

registerComponent("ProductsCustomer", ProductGridCustomer, [composeWithTracker(composer)]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(ProductGridCustomer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantEditContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/variantEditContainer.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent, composeWithTracker;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 5);
var Products;
module.watch(require("../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  }
}, 6);
var Countries;
module.watch(require("../../../../../client/collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 7);
var Reaction, i18next;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 8);
var applyProductRevision;
module.watch(require("../../../../../lib/api/products"), {
  applyProductRevision: function (v) {
    applyProductRevision = v;
  }
}, 9);
var VariantEdit;
module.watch(require("../components/variantEdit"), {
  "default": function (v) {
    VariantEdit = v;
  }
}, 10);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(VariantEditContainer, _Component);

    function VariantEditContainer() {
      return _Component.apply(this, arguments) || this;
    }

    var _proto = VariantEditContainer.prototype;

    _proto.handleCreateNewChildVariant = function () {
      function handleCreateNewChildVariant(variant) {
        Meteor.call("products/createVariant", variant._id, function (error, result) {
          if (error) {
            Alerts.alert({
              text: i18next.t("productDetailEdit.addVariantFail", {
                title: variant.title
              }),
              confirmButtonText: i18next.t("app.close", {
                defaultValue: "Close"
              })
            });
          } else if (result) {
            var newVariantId = result;
            var selectedProduct = ReactionProduct.selectedProduct();
            var handle = selectedProduct.__published && selectedProduct.__published.handle || selectedProduct.handle;
            ReactionProduct.setCurrentVariant(newVariantId); // Session.set("variant-form-" + newVariantId, true);

            var cardName = "variant-" + newVariantId;
            Reaction.state.set("edit/focus", cardName);
            Reaction.Router.go("product", {
              handle: handle,
              variantId: newVariantId
            });
          }
        });
      }

      return handleCreateNewChildVariant;
    }();

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, {
          childVariants: this.props.childVariants,
          countries: this.props.countries,
          editFocus: this.props.editFocus,
          handleCreateNewChildVariant: this.handleCreateNewChildVariant,
          variant: this.props.variant
        });
      }

      return render;
    }();

    return VariantEditContainer;
  }(Component), _class.propTypes = {
    childVariants: PropTypes.arrayOf(PropTypes.object),
    countries: PropTypes.arrayOf(PropTypes.object),
    editFocus: PropTypes.string,
    variant: PropTypes.object
  }, _temp;
};

function composer(props, onData) {
  Meteor.subscribe("TaxCodes").ready();
  var productHandle = Reaction.Router.getParam("handle");

  if (!productHandle) {
    Reaction.clearActionView();
  }

  if (ReactionProduct.selectedTopVariant()) {
    var variant = Products.findOne({
      _id: ReactionProduct.selectedTopVariant()._id
    });
    var revisedVariant = applyProductRevision(variant);
    var childVariants = ReactionProduct.getVariants(revisedVariant._id);
    onData(null, {
      countries: Countries.find({}).fetch(),
      editFocus: Reaction.state.get("edit/focus"),
      childVariants: childVariants,
      variant: revisedVariant
    });
  } else {
    onData(null, {
      countries: Countries.find({}).fetch()
    });
  }
}

registerComponent("VariantEditForm", VariantEdit, [composeWithTracker(composer), wrapComponent]);
module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(VariantEdit));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantFormContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-variant/containers/variantFormContainer.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var registerComponent;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 5);
var Validation;
module.watch(require("@reactioncommerce/schemas"), {
  Validation: function (v) {
    Validation = v;
  }
}, 6);
var ReactionProduct;
module.watch(require("../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 7);
var Packages;
module.watch(require("../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 8);
var Reaction, i18next;
module.watch(require("../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 9);
var TaxCodes;
module.watch(require("../../../core/taxes/lib/collections"), {
  TaxCodes: function (v) {
    TaxCodes = v;
  }
}, 10);
var ProductVariant;
module.watch(require("../../../../../lib/collections/schemas/products"), {
  ProductVariant: function (v) {
    ProductVariant = v;
  }
}, 11);
var VariantForm;
module.watch(require("../components/variantForm"), {
  "default": function (v) {
    VariantForm = v;
  }
}, 12);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(VariantFormContainer, _Component);

    function VariantFormContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.isProviderEnabled = function () {
        var shopId = Reaction.getShopId();
        var provider = Packages.findOne({
          shopId: shopId,
          "registry.provides": "taxCodes",
          "$where": function () {
            var providerName = this.name.split("-")[1];
            return this.settings[providerName].enabled;
          }
        });

        if (provider) {
          return true;
        }

        return false;
      };

      _this.fetchTaxCodes = function () {
        var shopId = Reaction.getShopId();
        var provider = Packages.findOne({
          shopId: shopId,
          "registry.provides": "taxCodes",
          "$where": function () {
            var providers = this.registry.filter(function (o) {
              return o.provides && o.provides.includes("taxCodes");
            });
            var providerName = providers[0].name.split("/")[2];
            return this.settings[providerName].enabled;
          }
        });
        var taxCodesArray = [];
        var codes = TaxCodes.find({
          shopId: shopId,
          taxCodeProvider: provider.name
        });
        codes.forEach(function (code) {
          taxCodesArray.push({
            value: code.taxCode,
            label: code.taxCode + " | " + code.label
          });
        });
        return taxCodesArray;
      };

      _this.hasChildVariants = function (variant) {
        if (ReactionProduct.checkChildVariants(variant._id) > 0) {
          return true;
        }

        return false;
      };

      _this.greyDisabledFields = function (variant) {
        if (_this.hasChildVariants(variant)) {
          return {
            backgroundColor: "lightgrey",
            cursor: "not-allowed"
          };
        }
      };

      _this.restoreVariant = function (variant) {
        var title = variant.title || i18next.t("productDetailEdit.thisVariant");
        Alerts.alert({
          title: i18next.t("productDetailEdit.restoreVariantConfirm", {
            title: title
          }),
          showCancelButton: true,
          confirmButtonText: "Restore"
        }, function (isConfirm) {
          if (isConfirm) {
            var id = variant._id;
            Meteor.call("products/updateProductField", id, "isDeleted", false, function (error) {
              if (error) {
                Alerts.alert({
                  text: i18next.t("productDetailEdit.restoreVariantFail", {
                    title: title
                  }),
                  confirmButtonText: i18next.t("app.close", {
                    defaultValue: "Close"
                  })
                });
              }

              _this.setState({
                isDeleted: !_this.state.isDeleted
              });
            });
          }
        });
      };

      _this.removeVariant = function (variant) {
        var title = variant.title || i18next.t("productDetailEdit.thisVariant");
        Alerts.alert({
          title: i18next.t("productDetailEdit.archiveVariantConfirm", {
            title: title
          }),
          showCancelButton: true,
          confirmButtonText: "Archive"
        }, function (isConfirm) {
          if (isConfirm) {
            _this.setState({
              isDeleted: !_this.state.isDeleted
            });

            var id = variant._id;
            Meteor.call("products/deleteVariant", id, function (error, result) {
              if (result && ReactionProduct.selectedVariantId() === id) {
                return ReactionProduct.setCurrentVariant(null);
              }
            });
          }
        });
      };

      _this.cloneVariant = function (variant) {
        var title = variant.title || i18next.t("productDetailEdit.thisVariant");
        var productId = ReactionProduct.selectedProductId();

        if (!productId) {
          return;
        }

        Meteor.call("products/cloneVariant", productId, variant._id, function (error, result) {
          if (error) {
            Alerts.alert({
              text: i18next.t("productDetailEdit.cloneVariantFail", {
                title: title
              }),
              confirmButtonText: i18next.t("app.close", {
                defaultValue: "Close"
              })
            });
          } else if (result) {
            var variantId = result[0];
            ReactionProduct.setCurrentVariant(variantId);
            Session.set("variant-form-" + variantId, true);
          }
        });
      };

      _this.handleVariantFieldSave = function (variantId, fieldName, value, variant) {
        var validationStatus = _this.runVariantValidation(variant);

        if (validationStatus.isFieldValid(fieldName)) {
          Meteor.call("products/updateProductField", variantId, fieldName, value, function (error) {
            if (error) {
              Alerts.toast(error.message, "error");
            }

            if (fieldName === "inventoryPolicy") {
              _this.updateInventoryPolicyIfChildVariants(variant);
            }
          });
        }
      };

      _this.handleCardExpand = function (cardName) {
        Reaction.state.set("edit/focus", cardName);
      };

      _this.handleVariantVisibilityToggle = function (variant) {
        Meteor.call("products/updateProductField", variant._id, "isVisible", !variant.isVisible);
      };

      _this.updateInventoryPolicyIfChildVariants = function (variant) {
        // Get all siblings, including current variant
        var options = ReactionProduct.getSiblings(variant); // Get parent

        var parent = ReactionProduct.getVariantParent(variant); // If this is not a top-level variant, update top-level inventory policy as well

        if (parent && options && options.length) {
          // Check to see if every variant option inventory policy is true
          var inventoryPolicy = options.every(function (option) {
            return option.inventoryPolicy === true;
          }); // If all inventory policies on children are true, update parent to be true

          if (inventoryPolicy === true) {
            return Meteor.call("products/updateProductField", parent._id, "inventoryPolicy", true, function (error) {
              if (error) {
                Alerts.toast(error.message, "error");
              }
            });
          } // If any child has a false inventoryPolicy, update parent to be false


          return Meteor.call("products/updateProductField", parent._id, "inventoryPolicy", false, function (error) {
            if (error) {
              Alerts.toast(error.message, "error");
            }
          });
        }
      };

      _this.updateQuantityIfChildVariants = function (variant) {
        if (_this.hasChildVariants(variant)) {
          var variantQuantity = ReactionProduct.getVariantQuantity(variant);
          return variantQuantity;
        }
      };

      _this.validation = new Validation(ProductVariant);
      _this.state = {
        validationStatus: _this.validation.validationStatus,
        isDeleted: props.variant && props.variant.isDeleted
      };
      return _this;
    }

    var _proto = VariantFormContainer.prototype;

    _proto.componentDidMount = function () {
      function componentDidMount() {
        this.runVariantValidation(this.props.variant);
      }

      return componentDidMount;
    }();

    _proto.componentWillReceiveProps = function () {
      function componentWillReceiveProps(nextProps) {
        this.setState({
          isDeleted: nextProps.variant && nextProps.variant.isDeleted
        });
      }

      return componentWillReceiveProps;
    }();

    _proto.runVariantValidation = function () {
      function runVariantValidation(variant) {
        if (variant) {
          var validationStatus = this.validation.validate(variant);
          this.setState(function () {
            return {
              validationStatus: validationStatus
            };
          });
          return validationStatus;
        }
      }

      return runVariantValidation;
    }();

    _proto.render = function () {
      function render() {
        if (this.props.variant) {
          return React.createElement(Comp, (0, _extends2.default)({
            isProviderEnabled: this.isProviderEnabled,
            fetchTaxCodes: this.fetchTaxCodes,
            hasChildVariants: this.hasChildVariants,
            greyDisabledFields: this.greyDisabledFields,
            restoreVariant: this.restoreVariant,
            removeVariant: this.removeVariant,
            cloneVariant: this.cloneVariant,
            onVariantFieldSave: this.handleVariantFieldSave,
            onVisibilityButtonClick: this.handleVariantVisibilityToggle,
            onCardExpand: this.handleCardExpand,
            onUpdateQuantityField: this.updateQuantityIfChildVariants,
            validation: this.state.validationStatus,
            isDeleted: this.state.isDeleted
          }, this.props, {
            variant: this.props.variant
          }));
        }

        return null;
      }

      return render;
    }();

    return VariantFormContainer;
  }(Component), _class.propTypes = {
    variant: PropTypes.object
  }, _temp;
};

registerComponent("VariantForm", VariantForm, wrapComponent);
module.exportDefault(_compose(wrapComponent)(VariantForm));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"inventory":{"client":{"templates":{"dashboard":{"inventory.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/inventory/client/templates/dashboard/inventory.html                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.inventory.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.inventory.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/inventory/client/templates/dashboard/template.inventory.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("inventoryDashboard");
Template["inventoryDashboard"] = new Template("Template.inventoryDashboard", (function() {
  var view = this;
  return "Sorry, there is not an inventory dashboard yet.";
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/inventory/client/templates/settings/settings.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/inventory/client/templates/settings/template.settings.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("inventorySettings");
Template["inventorySettings"] = new Template("Template.inventorySettings", (function() {
  var view = this;
  return "Sorry, there are no UI inventory settings yet.";
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/inventory/client/index.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/dashboard/inventory.html"));
module.watch(require("./templates/settings/settings.html"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"marketplace":{"client":{"templates":{"becomeSellerButton":{"becomeSellerButton.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/becomeSellerButton/becomeSellerButton.html                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.becomeSellerButton.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.becomeSellerButton.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/becomeSellerButton/template.becomeSellerButton.js             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("becomeSellerButton");
Template["becomeSellerButton"] = new Template("Template.becomeSellerButton", (function() {
  var view = this;
  return HTML.Raw('<button class="btn btn-info" data-event-category="marketplace" data-event-action="button-click-become-seller" data-event-label="Become a Seller button click" data-event-value="clicked" data-i18n="marketplace.becomeSeller">Become a seller</button>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"becomeSellerButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/becomeSellerButton/becomeSellerButton.js                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction, i18next;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 2);
Template.becomeSellerButton.events({
  "click [data-event-action='button-click-become-seller']": function () {
    Meteor.call("shop/createShop", Meteor.userId(), function (error, response) {
      if (error) {
        var errorMessage = i18next.t("marketplace.errorCannotCreateShop", {
          defaultValue: "Could not create shop for current user {{user}}"
        });
        return Alerts.toast(errorMessage + " " + error, "error");
      }

      var success = i18next.t("marketplace.yourShopIsReady", {
        defaultValue: "Your shop is now ready!"
      });
      Reaction.setShopId(response.shopId);
      return Alerts.toast(success, "success");
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"dashboard":{"merchant-settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/dashboard/merchant-settings.html                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.merchant-settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.merchant-settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/dashboard/template.merchant-settings.js                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("marketplaceMerchantSettings");
Template["marketplaceMerchantSettings"] = new Template("Template.marketplaceMerchantSettings", (function() {
  var view = this;
  return HTML.DIV({
    class: "marketplaceMerchantSettings"
  }, "\n  ", Blaze.Each(function() {
    return Spacebars.dataMustache(view.lookup("reactionApps"), Spacebars.kw({
      provides: "marketplaceMerchantSettings"
    }));
  }, function() {
    return [ "\n    ", HTML.SPAN({
      "data-i18n": function() {
        return Spacebars.mustache(view.lookup("i18nKeyLabel"));
      }
    }, Blaze.View("lookup:label", function() {
      return Spacebars.mustache(view.lookup("label"));
    })), "\n    ", HTML.DIV({
      class: function() {
        return Spacebars.mustache(view.lookup("shown"), view.lookup("enabled"));
      }
    }, "\n      ", Blaze._TemplateWith(function() {
      return {
        template: Spacebars.call(view.lookup("template")),
        data: Spacebars.call(view.lookup("."))
      };
    }, function() {
      return Spacebars.include(function() {
        return Spacebars.call(Template.__dynamic);
      });
    }), "\n    "), "\n  " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/dashboard/settings.html                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/dashboard/template.settings.js                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("marketplaceShopSettings");
Template["marketplaceShopSettings"] = new Template("Template.marketplaceShopSettings", (function() {
  var view = this;
  return [ Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("MarketplacePackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      id: Spacebars.call("marketplaceOptionsForm"),
      type: Spacebars.call("update"),
      autosave: Spacebars.call(true)
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n    ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.public.allowMerchantSignup")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n    ", HTML.Comment(" TODO: As we add optional functionality to marketplace, add options here "), "\n  " ];
    });
  }), "\n\n  ", Blaze.View("lookup:schema", function() {
    return Spacebars.mustache(view.lookup("schema"));
  }), "\n\n  ", HTML.DIV({
    class: "settings-invite-owner"
  }, "\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("inviteOwner"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"merchant-settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/dashboard/merchant-settings.js                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
Template.marketplaceMerchantSettings.helpers({
  shown: function (enabled) {
    if (enabled !== true) {
      return "hidden";
    }

    return "";
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/dashboard/settings.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var Components;
module.watch(require("../../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Reaction, i18next;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var Packages;
module.watch(require("../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 4);
var MarketplacePackageConfig;
module.watch(require("../../../lib/collections/schemas"), {
  MarketplacePackageConfig: function (v) {
    MarketplacePackageConfig = v;
  }
}, 5);

/**
 * marketplaceShopSettings helpers
 *
 */
Template.marketplaceShopSettings.helpers({
  MarketplacePackageConfig: function () {
    return MarketplacePackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-marketplace",
      shopId: Reaction.getPrimaryShopId()
    });
  },
  inviteOwner: function () {
    return Components.InviteOwner;
  }
});
/**
 * marketplaceSettings autoform alerts
 */

AutoForm.hooks({
  marketplaceOptionsForm: {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.dashboardMarketplaceSettingsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.dashboardMarketplaceSettingsFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"shops":{"shopSelect.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/shops/shopSelect.html                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shopSelect.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shopSelect.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/shops/template.shopSelect.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shopSelect");
Template["shopSelect"] = new Template("Template.shopSelect", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("shops"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "shops"
    }, "\n      ", HTML.DIV({
      class: "dropdown",
      role: "shops"
    }, "\n        ", HTML.DIV({
      class: "dropdown-toggle",
      "data-toggle": "dropdown",
      "data-delay": "600",
      "aria-haspopup": "true",
      "aria-expanded": "false"
    }, "\n\n          ", HTML.SPAN(Blaze.View("lookup:currentShopName", function() {
      return Spacebars.mustache(view.lookup("currentShopName"));
    })), "\n\n          ", HTML.SPAN({
      class: "caret"
    }), "\n        "), "\n        ", HTML.UL({
      class: "dropdown-menu",
      role: "menu"
    }, "\n          ", Blaze.Each(function() {
      return Spacebars.call(view.lookup("shops"));
    }, function() {
      return [ "\n            ", HTML.LI({
        class: function() {
          return Spacebars.mustache(view.lookup("isActiveShop"), view.lookup("_id"));
        }
      }, "\n              ", HTML.A({
        class: "shop",
        role: "menuitem"
      }, Blaze.View("lookup:name", function() {
        return Spacebars.mustache(view.lookup("name"));
      })), "\n            "), "\n          " ];
    }), "\n        "), "\n      "), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopSelect.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/shops/shopSelect.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../../lib/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);
var Router;
module.watch(require("../../../../../../../client/api"), {
  Router: function (v) {
    Router = v;
  }
}, 2);
var Shops;
module.watch(require("../../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 3);
Template.shopSelect.helpers({
  shops: function () {
    if (Reaction.Subscriptions.PrimaryShop.ready() && Reaction.Subscriptions.MerchantShops.ready()) {
      return Shops.find();
    }
  },
  isActiveShop: function (shopId) {
    return shopId === Router.getParam("shopId") ? "active" : "";
  },
  currentShopName: function () {
    var _id = Router.getParam("shopId") || Reaction.getShopId(); // or prime shop


    var shop;

    if (_id) {
      shop = Shops.findOne({
        _id: _id
      });

      if (shop) {
        return shop.name;
      }
    }

    return "Shop Name";
  }
});
Template.shopSelect.events({
  "click .shop": function (event) {
    event.preventDefault();
    Router.go("shop", {
      shopId: this._id
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"stripeConnectSignupButton":{"stripeConnectSignupButton.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/stripeConnectSignupButton/stripeConnectSignupButton.html      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.stripeConnectSignupButton.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.stripeConnectSignupButton.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/stripeConnectSignupButton/template.stripeConnectSignupButton. //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("stripeConnectSignupButton");
Template["stripeConnectSignupButton"] = new Template("Template.stripeConnectSignupButton", (function() {
  var view = this;
  return HTML.Raw('<h3>Setup Stripe Account</h3>\n  <p>To accept payment and publish your products to the marketplace, you\'ll need\n    to connect your stripe account. If you don\'t have a stripe account, you can set\n    one up for free as part of this process.</p>\n  <button class="btn btn-success btn-block" data-event-category="marketplace" data-event-action="button-click-stripe-signup" data-event-label="Stripe Connect Signup button click" data-event-value="clicked" data-i18n="marketplace.stripeConnectSignup">Start Accepting Payment</button>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripeConnectSignupButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/templates/stripeConnectSignupButton/stripeConnectSignupButton.js        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../../lib/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var Shops;
module.watch(require("../../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 4);
Template.stripeConnectSignupButton.events({
  "click [data-event-action='button-click-stripe-signup']": function () {
    var shopId = Reaction.getShopId();
    var primaryShopId = Reaction.getPrimaryShopId();
    var primaryStripePackage = Reaction.getPackageSettingsWithOptions({
      shopId: primaryShopId,
      name: "reaction-stripe",
      enabled: true
    }); // eslint-disable-next-line
    // debugger;

    var clientId;

    if (primaryStripePackage && primaryStripePackage.settings && primaryStripePackage.settings.public && typeof primaryStripePackage.settings.public.client_id === "string") {
      // If the primaryshop has stripe enabled and set the client_id
      clientId = primaryStripePackage.settings.public.client_id;
    } else {
      return Alerts.toast("" + i18next.t("admin.connect.stripeConnectNotEnabled"), "error");
    }

    var shop = Shops.findOne({
      _id: shopId
    });

    if (!shop || !shop.workflow || shop.workflow.status !== "active") {
      return Alerts.toast("" + i18next.t("admin.connect.shopNotActive"), "error");
    }

    if (!shop.emails || !Array.isArray(shop.emails) || shop.emails.length === 0) {
      return Alerts.toast("" + i18next.t("admin.connect.shopEmailNotConfigured"), "error");
    }

    if (!shop.addressBook || !Array.isArray(shop.addressBook) || shop.addressBook.length === 0) {
      return Alerts.toast("" + i18next.t("admin.connect.shopAddressNotConfigured"), "error");
    }

    var country = shop.addressBook[0].country;
    var phoneNumber = shop.addressBook[0].phone;
    var businessName = shop.addressBook[0].company;
    var streetAddress = shop.addressBook[0].address1;
    var city = shop.addressBook[0].city;
    var state = shop.addressBook[0].region;
    var zip = shop.addressBook[0].postal;
    var user = Meteor.user() || {};
    var defaultEmail = user.emails.find(function (email) {
      return email.provides === "default";
    });
    var defaultEmailAddress = defaultEmail ? defaultEmail.address : "";

    var _ref = user.name ? user.name.split(" ") : [],
        _ref2 = _toArray(_ref),
        firstName = _ref2[0],
        last = _ref2.slice(1);

    var lastName = last.join(" ");
    var stripeConnectAuthorizeUrl = "https://connect.stripe.com/oauth/authorize?response_type=code&state=" + shopId + "&client_id=" + clientId + "&scope=read_write";
    var autofillParams = "&stripe_user[email]=" + defaultEmailAddress + "&stripe_user[country]=" + country + "&stripe_user[phone_number]=" + phoneNumber + "&stripe_user[business_name]=" + businessName + "&stripe_user[street_address]=" + streetAddress + "&stripe_user[city]=" + city + "&stripe_user[state]=" + state + "&stripe_user[zip]=" + zip + "&stripe_user[first_name]=" + firstName + "&stripe_user[last_name]=" + lastName; // eslint-disable-line max-len

    window.open(stripeConnectAuthorizeUrl + autofillParams, "_blank");
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"components":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/components/index.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./marketplaceShops"), {
  "default": function (v) {
    exports.MarketplaceShops = v;
  }
}, 0);
module.watch(require("./marketplaceShopTableCell"), {
  "default": function (v) {
    exports.MarketplaceShopTableCell = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inviteOwner.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/components/inviteOwner.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var registerComponent, Components;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  Components: function (v) {
    Components = v;
  }
}, 2);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var ReactionAlerts;
module.watch(require("../../../../core/layout/client/templates/layout/alerts/inlineAlerts"), {
  "default": function (v) {
    ReactionAlerts = v;
  }
}, 4);

var InviteOwner =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(InviteOwner, _Component);

  function InviteOwner() {
    var _this;

    _this = _Component.call(this) || this;

    _this.onChange = function (event) {
      var _this$setState;

      _this.setState((_this$setState = {}, _this$setState[event.target.name] = event.target.value, _this$setState));
    };

    _this.removeAlert = function (oldAlert) {
      return _this.setState({
        alertArray: _this.state.alertArray.filter(function (alert) {
          return JSON.stringify(alert) === JSON.stringify(oldAlert);
        })
      });
    };

    _this.handleSubmit = function (event) {
      event.preventDefault();

      _this.setState({
        isLoading: true
      });

      var _this$state = _this.state,
          name = _this$state.name,
          email = _this$state.email,
          alertId = _this$state.alertId;
      var alertOptions = {
        placement: alertId,
        id: alertId,
        autoHide: 4000
      };
      var shopData = {}; // TODO: add optional shop data to the form (maybe just name?)

      Meteor.call("accounts/inviteShopOwner", {
        name: name,
        email: email
      }, shopData, function (error, result) {
        var message = "";

        if (error) {
          var messageKey;

          if (error.reason === "Unable to send invitation email.") {
            messageKey = "accountsUI.error.unableToSendInvitationEmail";
          } else if (error.reason !== "") {
            message = error.reason;
          } else {
            messageKey = "accountsUI.error.errorSendingEmail";
          }

          ReactionAlerts.add(message, "danger", Object.assign({}, alertOptions, {
            i18nKey: messageKey
          }));
        }

        _this.setState({
          isLoading: false
        });

        if (result) {
          _this.setState({
            name: "",
            email: ""
          });

          Alerts.toast(i18next.t("accountsUI.info.invitationSent"), "success");
        }
      });
    };

    _this.state = {
      alertId: "admin-invite-form",
      name: "",
      email: "",
      group: "",
      isLoading: false
    };
    return _this;
  }

  var _proto = InviteOwner.prototype;

  _proto.renderSpinnerButton = function () {
    function renderSpinnerButton() {
      if (this.state.isLoading) {
        return React.createElement("div", {
          style: {
            textAlign: "center"
          }
        }, React.createElement("i", {
          className: "fa fa-spinner fa-spin"
        }));
      }

      return React.createElement(Components.Button, {
        status: "primary",
        onClick: this.handleSubmit,
        bezelStyle: "solid",
        buttonType: "submit",
        i18nKeyLabel: "accountsUI.info.sendInvitation",
        label: "Send Invitation"
      });
    }

    return renderSpinnerButton;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "panel panel-default admin-invite-form"
      }, React.createElement("h4", {
        style: {
          textAlign: "center"
        }
      }, "Invite Owner Form"), React.createElement(Components.Alerts, {
        placement: this.state.alertId,
        id: this.state.alertId,
        onAlertRemove: this.removeAlert
      }), React.createElement("div", {
        className: "panel-body"
      }, React.createElement("form", {
        className: "invite-owner",
        onSubmit: this.handleSubmit
      }, React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.name",
        label: "Name",
        name: "name",
        id: "member-form-name",
        type: "text",
        i18nKeyPlaceholder: "admin.groupsInvite.name",
        value: this.state.name,
        onChange: this.onChange
      })), React.createElement("div", {
        className: "form-group"
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "accountsUI.email",
        label: "Email",
        name: "email",
        id: "member-form-email",
        type: "text",
        i18nKeyPlaceholder: "admin.groupsInvite.email",
        value: this.state.email,
        onChange: this.onChange
      })), React.createElement("div", {
        className: "form-group action-select"
      }, React.createElement("div", {
        className: "form-btns add-admin justify"
      }, this.renderSpinnerButton())))));
    }

    return render;
  }();

  return InviteOwner;
}(Component);

registerComponent("InviteOwner", InviteOwner);
module.exportDefault(InviteOwner);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"marketplaceShopTableCell.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/components/marketplaceShopTableCell.js                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _startCase;

module.watch(require("lodash/startCase"), {
  "default": function (v) {
    _startCase = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var SHOP_WORKFLOW_STATUS_ACTIVE, SHOP_WORKFLOW_STATUS_DISABLED;
module.watch(require("../../lib/constants"), {
  SHOP_WORKFLOW_STATUS_ACTIVE: function (v) {
    SHOP_WORKFLOW_STATUS_ACTIVE = v;
  },
  SHOP_WORKFLOW_STATUS_DISABLED: function (v) {
    SHOP_WORKFLOW_STATUS_DISABLED = v;
  }
}, 4);

var MarketplaceShopTableCell =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MarketplaceShopTableCell, _Component);

  function MarketplaceShopTableCell() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleWorkflowChange = function (event, value) {
      if (_this.props.onWorkflowChange) {
        // Get the shop id from the original document
        var _id = _this.shop._id;

        _this.props.onWorkflowChange(_id, value);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = MarketplaceShopTableCell.prototype;

  _proto.render = function () {
    function render() {
      var _props = this.props,
          field = _props.field,
          data = _props.data;

      if (field === "emails" && Array.isArray(data.value) && data.value.length) {
        return React.createElement("div", {
          className: "table-cell body"
        }, React.createElement("span", null, data.value[0].address));
      }

      if (field === "workflow") {
        return React.createElement(Components.DropDownMenu, {
          buttonElement: React.createElement("div", {
            className: "col-dropdown"
          }, React.createElement(Components.Button, {
            bezelStyle: "solid",
            label: _startCase(this.status)
          }, "\xA0", React.createElement("i", {
            className: "fa fa-chevron-down"
          }))),
          onChange: this.handleWorkflowChange,
          value: this.status
        }, React.createElement(Components.MenuItem, {
          label: "Active",
          value: SHOP_WORKFLOW_STATUS_ACTIVE
        }), React.createElement(Components.MenuItem, {
          label: "Disabled",
          value: SHOP_WORKFLOW_STATUS_DISABLED
        }));
      }

      return React.createElement("div", {
        className: "table-cell body"
      }, React.createElement("span", null, data.value));
    }

    return render;
  }();

  (0, _createClass2.default)(MarketplaceShopTableCell, [{
    key: "shop",
    get: function () {
      return this.props.data.original;
    }
  }, {
    key: "status",
    get: function () {
      if (this.shop.workflow) {
        return this.shop.workflow.status;
      }

      return SHOP_WORKFLOW_STATUS_ACTIVE;
    }
  }]);
  return MarketplaceShopTableCell;
}(Component);

MarketplaceShopTableCell.propTypes = {
  data: PropTypes.object,
  field: PropTypes.string,
  onWorkflowChange: PropTypes.func
};
registerComponent("MarketplaceShopTableCell", MarketplaceShopTableCell);
module.exportDefault(MarketplaceShopTableCell);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"marketplaceShops.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/components/marketplaceShops.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var MarketplaceShops =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(MarketplaceShops, _Component);

  function MarketplaceShops() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = MarketplaceShops.prototype;

  _proto.renderShopsTable = function () {
    function renderShopsTable() {
      var _this = this;

      var fields = ["name", "emails", "workflow"];
      var columnMetadata = fields.map(function (field) {
        return {
          Header: React.createElement(Components.Translation, {
            i18nKey: "marketplaceShops.headers." + field,
            defaultValue: field
          }),
          accessor: field,
          Cell: function (data) {
            return React.createElement(Components.MarketplaceShopTableCell, {
              data: data,
              field: field,
              onWorkflowChange: _this.props.onWorkflowChange
            });
          }
        };
      });
      return React.createElement(Components.SortableTable, {
        data: this.props.shops,
        columnMetadata: columnMetadata,
        filteredFields: fields,
        filterType: "none",
        showFilter: true,
        isSortable: false
      });
    }

    return renderShopsTable;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "rui sortable-table-container"
      }, React.createElement("div", {
        className: "rui sortable-table"
      }, this.renderShopsTable()));
    }

    return render;
  }();

  return MarketplaceShops;
}(Component);

MarketplaceShops.propTypes = {
  onWorkflowChange: PropTypes.func,
  shops: PropTypes.arrayOf(PropTypes.object)
};
module.exportDefault(MarketplaceShops);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/containers/index.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./marketplaceShops"), {
  "default": function (v) {
    exports.MarketplaceShopsContainer = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"marketplaceShops.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/containers/marketplaceShops.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var composeWithTracker, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Shops;
module.watch(require("../../../../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var MarketplaceShops;
module.watch(require("../components/marketplaceShops"), {
  "default": function (v) {
    MarketplaceShops = v;
  }
}, 4);

var onWorkflowChange = function (shopId, value) {
  Meteor.call("marketplace/updateShopWorkflow", shopId, value);
};

var composer = function (props, onData) {
  // Subscribe to merchant shops and get all shops (excluding the primary shop) if subscription is ready
  if (Meteor.subscribe("MerchantShops").ready()) {
    var shops = Shops.find({
      _id: {
        $nin: [Reaction.getPrimaryShopId()]
      }
    }).fetch();
    onData(null, {
      shops: shops,
      onWorkflowChange: onWorkflowChange
    });
  }
};

registerComponent("MarketplaceShops", MarketplaceShops, composeWithTracker(composer));
module.exportDefault(composeWithTracker(composer)(MarketplaceShops));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/client/index.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/becomeSellerButton/becomeSellerButton.html"));
module.watch(require("./templates/becomeSellerButton/becomeSellerButton.js"));
module.watch(require("./templates/dashboard/settings.html"));
module.watch(require("./templates/dashboard/settings.js"));
module.watch(require("./templates/dashboard/merchant-settings.html"));
module.watch(require("./templates/dashboard/merchant-settings.js"));
module.watch(require("./templates/shops/shopSelect.html"));
module.watch(require("./templates/shops/shopSelect.js"));
module.watch(require("./templates/stripeConnectSignupButton/stripeConnectSignupButton.html"));
module.watch(require("./templates/stripeConnectSignupButton/stripeConnectSignupButton.js"));
module.watch(require("./components/inviteOwner"), {
  "default": function (v) {
    exports.InviteOwner = v;
  }
}, 0);
module.watch(require("./components"), {
  "*": module.makeNsSetter()
}, 1);
module.watch(require("./containers"), {
  "*": module.makeNsSetter()
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/lib/collections/schemas/index.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./marketplace"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"marketplace.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/lib/collections/schemas/marketplace.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  ShopTypes: function () {
    return ShopTypes;
  },
  EnabledPackagesByShopType: function () {
    return EnabledPackagesByShopType;
  },
  MarketplacePackageConfig: function () {
    return MarketplacePackageConfig;
  },
  SellerShop: function () {
    return SellerShop;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 3);
var Shop;
module.watch(require("../../../../../../../lib/collections/schemas/shops.js"), {
  Shop: function (v) {
    Shop = v;
  }
}, 4);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 5);
var ShopTypes = new SimpleSchema({
  shopType: {
    type: String,
    defaultValue: "merchant"
  },
  enabled: {
    type: Boolean,
    defaultValue: false
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShopTypes", ShopTypes);
var EnabledPackagesByShopType = new SimpleSchema({
  shopType: String,
  enabledPackages: [String]
}, {
  check: check,
  tracker: Tracker
});
registerSchema("EnabledPackagesByShopType", EnabledPackagesByShopType);
var MarketplacePackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.thirdPartyLogistics": {
    type: Object,
    blackbox: true,
    optional: true
  },
  "settings.shops": {
    type: Object,
    defaultValue: {}
  },
  "settings.shops.enabledShopTypes": {
    type: Array,
    defaultValue: [{
      shopType: "merchant",
      active: true
    }, {
      shopType: "affiliate",
      active: false
    }]
  },
  "settings.shops.enabledShopTypes.$": {
    type: ShopTypes
  },
  "settings.shops.enabledPackagesByShopTypes": {
    type: Array,
    optional: true
  },
  "settings.shops.enabledPackagesByShopTypes.$": {
    type: EnabledPackagesByShopType
  },
  "settings.payoutMethod": {
    type: Object,
    blackbox: true,
    optional: true
  },
  "settings.public": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  // if true, any user can create a shop
  // if false, shop owners must be invited via Accounts panel
  "settings.public.allowMerchantSignup": {
    type: Boolean,
    defaultValue: false
  },
  // Deprecated - no longer used in any marketplace considerations
  // marketplace is enabled and disabled via the package
  // seller signup is controlled by the allowMerchantSignup setting
  "settings.public.allowGuestSellers": {
    type: Boolean,
    defaultValue: false
  },
  "settings.public.marketplaceNakedRoutes": {
    type: Boolean,
    defaultValue: true
  },
  // if true, permit each merchant to setup their own payment provider
  "settings.public.perMerchantPaymentProviders": {
    type: Boolean,
    defaultValue: false
  },
  // if true, the cart should be different for each merchant
  "settings.public.merchantCart": {
    type: Boolean,
    defaultValue: false
  },
  // if true, each merchant sets their own currency
  // TODO: REMOVE in favor of merchantLocale
  // "settings.public.merchantCurrency": {
  //   type: Boolean,
  //   defaultValue: false
  // },
  // if true, each merchant performs their own fulfillment
  "settings.public.merchantFulfillment": {
    type: Boolean,
    defaultValue: true
  },
  // if true, each merchant sets their own language
  // // TODO: REMOVE in favor of merchantLocale
  // "settings.public.merchantLanguage": { // DEPRECATED
  //   type: Boolean,
  //   defaultValue: false
  // },
  // if true, each merchant sets their own locale, language, and currency
  "settings.public.merchantLocale": {
    type: Boolean,
    defaultValue: false
  },
  // if true, permit each merchant to setup their own shipping rates
  "settings.public.merchantShippingRates": {
    type: Boolean,
    defaultValue: false
  },
  // if true, each merchant sets their own currency
  "settings.public.merchantTheme": {
    type: Boolean,
    defaultValue: false
  }
});
registerSchema("MarketplacePackageConfig", MarketplacePackageConfig);
/**
 * Seller Shop Schema
 */

var SellerShop = Shop.clone().extend({
  stripeConnectSettings: {
    type: Object,
    optional: true
  }
});
registerSchema("SellerShop", SellerShop);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"constants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/marketplace/lib/constants.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  SHOP_WORKFLOW_STATUS_ACTIVE: function () {
    return SHOP_WORKFLOW_STATUS_ACTIVE;
  },
  SHOP_WORKFLOW_STATUS_DISABLED: function () {
    return SHOP_WORKFLOW_STATUS_DISABLED;
  },
  SHOP_WORKFLOW_STATUS_ARCHIVED: function () {
    return SHOP_WORKFLOW_STATUS_ARCHIVED;
  }
});
var SHOP_WORKFLOW_STATUS_ACTIVE = "active";
var SHOP_WORKFLOW_STATUS_DISABLED = "disabled";
var SHOP_WORKFLOW_STATUS_ARCHIVED = "archived";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"shipping-rates":{"client":{"templates":{"settings":{"rates.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-rates/client/templates/settings/rates.html                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.rates.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.rates.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-rates/client/templates/settings/template.rates.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shippingRatesSettings");
Template["shippingRatesSettings"] = new Template("Template.shippingRatesSettings", (function() {
  var view = this;
  return [ HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("shippingGrid"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", HTML.DIV({
    class: "pull-right"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("editButton"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "isEditing");
  }, function() {
    return [ "\n    ", HTML.DIV("\n    ", Blaze.If(function() {
      return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
    }, function() {
      return [ "\n      ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(Spacebars.dot(view.lookup("Schemas"), "ShippingMethod")),
          type: Spacebars.call("method"),
          meteormethod: Spacebars.call("shipping/rates/update"),
          doc: Spacebars.call(view.lookup("shippingRate")),
          id: Spacebars.call("shipping-rates-update-form"),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV({
            class: "col-sm-7"
          }, "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("name"),
              autofocus: Spacebars.call(""),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("label"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("group"),
              options: Spacebars.call("allowed"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", HTML.DIV({
            class: "col-md-4"
          }, "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("cost"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("handling"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("rate"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("enabled")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("_id"),
              type: Spacebars.call("hidden")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afFieldInput"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("shippingSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n      "), "\n    " ];
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(Spacebars.dot(view.lookup("Schemas"), "ShippingMethod")),
          type: Spacebars.call("method"),
          meteormethod: Spacebars.call("shipping/rates/add"),
          id: Spacebars.call("shipping-rates-insert-form"),
          doc: Spacebars.call(view.lookup("shippingRate")),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV({
            class: "col-sm-7"
          }, "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("name"),
              autofocus: Spacebars.call(""),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("label"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("group"),
              options: Spacebars.call("allowed"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", HTML.DIV({
            class: "col-md-4"
          }, "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("cost"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("handling"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("rate"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("enabled")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("_id"),
              type: Spacebars.call("hidden")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afFieldInput"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("shippingSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n    " ];
    }), "\n    "), "\n  " ];
  }) ];
}));

Template.__checkName("shippingSettingsSubmitButton");
Template["shippingSettingsSubmitButton"] = new Template("Template.shippingSettingsSubmitButton", (function() {
  var view = this;
  return HTML.DIV({
    class: "clearfix"
  }, "\n    ", HTML.DIV({
    class: "pull-right"
  }, "\n      ", HTML.Raw('<button type="button" class="btn btn-primary cancel" data-i18n="app.cancel">Cancel</button>'), "\n      ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
  }, function() {
    return [ "\n      ", HTML.BUTTON({
      type: "button",
      class: "btn btn-primary delete",
      "data-i18n": "app.delete"
    }, "Delete"), "\n      " ];
  }), "\n      ", HTML.Raw('<button type="submit" class="btn btn-primary" data-i18n="app.saveChanges">Save Changes</button>'), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"rates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-rates/client/templates/settings/rates.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 4);
var Shipping;
module.watch(require("../../../../../../../lib/collections"), {
  Shipping: function (v) {
    Shipping = v;
  }
}, 5);
var i18next;
module.watch(require("../../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var IconButton, Loading, SortableTable;
module.watch(require("../../../../../core/ui/client/components"), {
  IconButton: function (v) {
    IconButton = v;
  },
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 7);
Template.shippingRatesSettings.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("Shipping");
  });
  this.state = new ReactiveDict();
  this.state.setDefault({
    isEditing: false,
    editingId: null
  });
});
Template.shippingRatesSettings.helpers({
  editButton: function () {
    var instance = Template.instance();
    var state = instance.state;
    var isEditing = state.equals("isEditing", true);
    var editingId = state.get("editingId"); // toggle edit state

    if (!isEditing) {
      editingId = null;
    } // return icon


    return {
      component: IconButton,
      icon: "fa fa-plus",
      onIcon: "fa fa-pencil",
      toggle: true,
      toggleOn: isEditing,
      style: {
        position: "relative",
        top: "-25px",
        right: "8px"
      },
      onClick: function () {
        // remove active rows from grid
        $(".shipping-grid-row").removeClass("active");
        return state.set({
          isEditing: !isEditing,
          editingId: editingId
        });
      }
    };
  },
  shippingGrid: function () {
    var filteredFields = ["name", "group", "label", "rate"];
    var noDataMessage = i18next.t("admin.shippingSettings.noRatesFound");
    var instance = Template.instance(); // griddle helper to select row

    function editRow(options) {
      var currentId = instance.state.get("editingId"); // isEditing is shipping rate object

      instance.state.set("isEditing", options.props.data);
      instance.state.set("editingId", options.props.data._id); // toggle edit mode clicking on same row

      if (currentId === options.props.data._id) {
        instance.state.set("isEditing", null);
        instance.state.set("editingId", null);
      }
    } // add shipping-grid-row class


    var customRowMetaData = {
      bodyCssClassName: function () {
        return "shipping-grid-row";
      }
    }; // add i18n handling to headers

    var customColumnMetadata = [];
    filteredFields.forEach(function (field) {
      var columnMeta = {
        accessor: field,
        Header: i18next.t("admin.shippingGrid." + field)
      };
      customColumnMetadata.push(columnMeta);
    }); // filter and extract shipping methods
    // from flat rate shipping provider

    function transform(results) {
      var result = [];

      for (var _iterator = results, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _method = _ref;

        if (_method.provider && _method.provider.name === "flatRates") {
          result.push(_method.methods);
        }
      }

      return result[0];
    } // return shipping Grid


    return {
      component: SortableTable,
      publication: "Shipping",
      transform: transform,
      collection: Shipping,
      matchingResultsCount: "shipping-count",
      showFilter: true,
      rowMetadata: customRowMetaData,
      filteredFields: filteredFields,
      columns: filteredFields,
      noDataMessage: noDataMessage,
      onRowClick: editRow,
      columnMetadata: customColumnMetadata,
      externalLoadingComponent: Loading
    };
  },
  instance: function () {
    var instance = Template.instance();
    return instance;
  },
  shippingRate: function () {
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var providerRates = Shipping.findOne({
      "provider.name": "flatRates"
    }) || {};
    var rate = {};

    if (providerRates && providerRates.methods) {
      if (id) {
        for (var _iterator2 = providerRates.methods, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var _method2 = _ref2;

          if (_method2._id === id) {
            rate = _method2;
          }
        }
      } else {
        // a little trick to provide _id for insert
        rate._id = providerRates._id;
      }
    }

    return rate;
  }
}); //
// on submit lets clear the form state
//

Template.shippingRatesSettings.events({
  "submit #shipping-rates-update-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: false,
      editingId: null
    });
  },
  "submit #shipping-rates-insert-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: true,
      editingId: null
    });
  },
  "click .cancel, .shipping-grid-row .active": function () {
    var instance = Template.instance(); // remove active rows from grid

    instance.state.set({
      isEditing: false,
      editingId: null
    }); // ugly hack

    $(".shipping-grid-row").removeClass("active");
  },
  "click .delete": function () {
    var confirmTitle = i18next.t("admin.shippingSettings.confirmRateDelete");
    var confirmButtonText = i18next.t("app.delete");
    var instance = Template.instance();
    var id = instance.state.get("editingId"); // confirm delete

    Alerts.alert({
      title: confirmTitle,
      type: "warning",
      showCancelButton: true,
      confirmButtonText: confirmButtonText
    }, function (isConfirm) {
      if (isConfirm) {
        if (id) {
          Meteor.call("shipping/rates/delete", id);
          instance.state.set({
            isEditing: false,
            editingId: null
          });
        }
      }
    });
  },
  "click .shipping-grid-row": function (event) {
    // toggle all rows off, then add our active row
    $(".shipping-grid-row").removeClass("active");
    Template.instance().$(event.currentTarget).addClass("active");
  }
}); //
// Hooks for update and insert forms
//

AutoForm.hooks({
  "shipping-rates-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.shippingSettings.rateSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.shippingSettings.rateFailed") + " " + error, "error");
    }
  },
  "shipping-rates-insert-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.shippingSettings.rateSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.shippingSettings.rateFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-rates/client/templates/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/rates.html"));
module.watch(require("./settings/rates.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-rates/client/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"social":{"client":{"templates":{"apps":{"facebook.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/facebook.html                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.facebook.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.facebook.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/template.facebook.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("facebook");
Template["facebook"] = new Template("Template.facebook", (function() {
  var view = this;
  return HTML.A({
    target: function() {
      return Spacebars.mustache(view.lookup("targetWindow"));
    },
    class: "facebook-share",
    href: "#"
  }, "\n    ", HTML.I({
    class: function() {
      return [ "fa fa-facebook", Blaze.If(function() {
        return Spacebars.call(view.lookup("faClass"));
      }, function() {
        return [ "-", Blaze.View("lookup:faClass", function() {
          return Spacebars.mustache(view.lookup("faClass"));
        }) ];
      }), " ", Spacebars.mustache(view.lookup("faSize")) ];
    }
  }), "\n    ", Blaze.If(function() {
    return Spacebars.call(view.lookup("showText"));
  }, function() {
    return [ " ", Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), "social.shareOnFacebook", "Share on Facebook");
    }), " " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"googleplus.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/googleplus.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.googleplus.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.googleplus.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/template.googleplus.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("googleplus");
Template["googleplus"] = new Template("Template.googleplus", (function() {
  var view = this;
  return HTML.A({
    target: function() {
      return Spacebars.mustache(view.lookup("targetWindow"));
    },
    class: function() {
      return [ Spacebars.mustache(view.lookup("classes")), " googleplus-share" ];
    },
    href: "#"
  }, "\n    ", HTML.I({
    class: function() {
      return [ "fa fa-google-plus", Blaze.If(function() {
        return Spacebars.call(view.lookup("faClass"));
      }, function() {
        return [ "-", Blaze.View("lookup:faClass", function() {
          return Spacebars.mustache(view.lookup("faClass"));
        }) ];
      }), " ", Spacebars.mustache(view.lookup("faSize")) ];
    }
  }), "\n    ", Blaze.If(function() {
    return Spacebars.call(view.lookup("showText"));
  }, function() {
    return [ " ", Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), "social.shareOnGoogle", "Share on Google+");
    }), " " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pinterest.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/pinterest.html                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.pinterest.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.pinterest.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/template.pinterest.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("pinterest");
Template["pinterest"] = new Template("Template.pinterest", (function() {
  var view = this;
  return HTML.A({
    target: function() {
      return Spacebars.mustache(view.lookup("targetWindow"));
    },
    class: function() {
      return [ Spacebars.mustache(view.lookup("classes")), " pinterest-share" ];
    },
    href: "#"
  }, "\n    ", HTML.I({
    class: function() {
      return [ "fa fa-pinterest", Blaze.If(function() {
        return Spacebars.call(view.lookup("faClass"));
      }, function() {
        return [ "-", Blaze.View("lookup:faClass", function() {
          return Spacebars.mustache(view.lookup("faClass"));
        }) ];
      }), " ", Spacebars.mustache(view.lookup("faSize")) ];
    }
  }), "\n    ", Blaze.If(function() {
    return Spacebars.call(view.lookup("showText"));
  }, function() {
    return [ " ", Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), "social.shareOnPinterest", "Share on Pinterest");
    }), " " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"twitter.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/twitter.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.twitter.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.twitter.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/template.twitter.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("twitter");
Template["twitter"] = new Template("Template.twitter", (function() {
  var view = this;
  return HTML.A({
    target: function() {
      return Spacebars.mustache(view.lookup("targetWindow"));
    },
    class: "twitter-share",
    href: "#"
  }, "\n    ", HTML.I({
    class: function() {
      return [ "fa fa-twitter", Blaze.If(function() {
        return Spacebars.call(view.lookup("faClass"));
      }, function() {
        return [ "-", Blaze.View("lookup:faClass", function() {
          return Spacebars.mustache(view.lookup("faClass"));
        }) ];
      }), " ", Spacebars.mustache(view.lookup("faSize")) ];
    }
  }), "\n    ", Blaze.If(function() {
    return Spacebars.call(view.lookup("showText"));
  }, function() {
    return [ " ", Blaze.View("lookup:i18n", function() {
      return Spacebars.mustache(view.lookup("i18n"), "social.shareOnTwitter", "Share on Twitter");
    }), " " ];
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"facebook.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/facebook.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* eslint-disable */
//
// TODO facebook social templates need review to ensure proper use of reaction layouts
//
Template.facebook.onRendered(function () {
  var ref;

  if (this.data.placement === "footer" && ((ref = this.data.apps.facebook) !== null ? ref.profilePage : void 0) !== null) {
    // eslint-disable-line no-cond-assign
    return this.$(".facebook-share").attr("href", this.data.apps.facebook.profilePage);
  } //
  // autorun and insert fb
  //


  this.autorun(function () {
    var media;
    var ref1;
    var template = Template.instance();
    var data = Template.currentData();
    $('meta[property^="og:"]').remove();
    var description = ((ref1 = data.apps.facebook) !== null ? ref1.description : void 0) || $(".product-detail-field.description").text();
    var url = data.url || location.origin + location.pathname;
    var title = data.title || document.title;
    $("<meta>", {
      property: "og:type",
      content: "article"
    }).appendTo("head");
    $("<meta>", {
      property: "og:site_name",
      content: location.hostname
    }).appendTo("head");
    $("<meta>", {
      property: "og:url",
      content: url
    }).appendTo("head");
    $("<meta>", {
      property: "og:title",
      content: title
    }).appendTo("head");
    $("<meta>", {
      property: "og:description",
      content: description
    }).appendTo("head");

    if (data.media) {
      if (!/^http(s?):\/\/+/.test(data.media)) {
        media = location.origin + data.media;
      }

      $("<meta>", {
        property: "og:image",
        content: media
      }).appendTo("head");
    }
    /* eslint no-unused-vars: 1 */
    //
    // TODO review Template.facebook.onRendered for FB response
    // believe this object is declared by FB so the
    // lint error should be ignored
    //


    if (data.apps.facebook.appId !== null) {
      return template.$(".facebook-share").click(function (e) {
        e.preventDefault();
        return FB.ui({
          method: "share",
          display: "popup",
          href: url
        }, function () {});
      });
    } // else return


    url = encodeURIComponent(url);
    title = encodeURIComponent(title);
    var base = "https://www.facebook.com/sharer/sharer.php";
    var summary = encodeURIComponent(description);
    var href = base + "?s=100&p[url]=" + url + "&p[title]=" + title + "&p[summary]=" + summary;

    if (data.media) {
      href += "&p[images][0]=" + encodeURIComponent(media);
    }

    return template.$(".facebook-share").attr("href", href);
  });
});
Template.facebook.onCreated(function () {
  var apps = Template.currentData().apps;
  var isEnabled = "facebook" in apps && apps.facebook.enabled;

  if (isEnabled) {
    $('<div id="fb-root"></div>').appendTo("body");

    window.fbAsyncInit = function () {
      return FB.init({
        appId: apps.facebook.appId,
        xfbml: true,
        version: "v2.1"
      });
    };

    (function (d, s, id) {
      var js = void 0;
      var fjs = d.getElementsByTagName(s)[0];

      if (d.getElementById(id)) {
        return;
      }

      js = d.createElement(s);
      js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    })(document, "script", "facebook-jssdk");
  }

  return isEnabled;
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"googleplus.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/googleplus.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* eslint-disable */
//
// TODO google social templates need review to ensure proper use of reaction layouts
//
Template.googleplus.onRendered(function () {
  var ref;

  if (this.data.placement === "footer" && ((ref = this.data.apps.googleplus) !== null ? ref.profilePage : void 0) !== null) {
    // eslint-disable-line
    return this.$(".googleplus-share").attr("href", this.data.apps.googleplus.profilePage);
  }

  return this.autorun(function () {
    var media;
    var ref1;
    var ref2;
    var template = Template.instance();
    var data = Template.currentData();
    $("meta[itemscope]").remove();
    var description = ((ref1 = data.apps.googleplus) !== null ? ref1.description : void 0) || $(".product-detail-field.description").text(); // eslint-disable-line

    var url = data.url || location.origin + location.pathname; // const title = data.title;

    var itemtype = ((ref2 = data.apps.googleplus) !== null ? ref2.itemtype : void 0) || "Article";
    $("html").attr("itemscope", "").attr("itemtype", "http://schema.org/" + itemtype);
    $("<meta>", {
      itemprop: "name",
      content: location.hostname
    }).appendTo("head");
    $("<meta>", {
      itemprop: "url",
      content: url
    }).appendTo("head");
    $("<meta>", {
      itemprop: "description",
      content: description
    }).appendTo("head");

    if (data.media) {
      if (!/^http(s?):\/\/+/.test(data.media)) {
        media = location.origin + data.media;
      }

      $("<meta>", {
        itemprop: "image",
        content: media
      }).appendTo("head");
    }

    var href = "https://plus.google.com/share?url=" + url;
    return template.$(".googleplus-share").attr("href", href);
  });
});
Template.googleplus.events({
  "click a": function (event) {
    event.preventDefault();
    return window.open(Template.instance().$(".googleplus-share").attr("href"), "googleplus_window", "width=750, height=650");
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pinterest.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/pinterest.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* eslint-disable */
//
// TODO pinterest social templates need review to ensure proper use of reaction layouts
//
Template.pinterest.onRendered(function () {
  var ref;

  if (this.data.placement === "footer" && ((ref = this.data.apps.pinterest) !== null ? ref.profilePage : void 0) !== null) {
    return this.$(".pinterest-share").attr("href", this.data.apps.pinterest.profilePage);
  }
  /*
    Pinterest requires three parameters:
      url: desired url
      media: image being shared
      description: image description
   */


  return this.autorun(function () {
    var media;
    var ref1;
    var template = Template.instance();
    var data = Template.currentData();
    var preferredUrl = data.url || location.origin + location.pathname;
    var url = encodeURIComponent(preferredUrl);

    if (data.media) {
      if (!/^http(s?):\/\/+/.test(data.media)) {
        media = location.origin + data.media;
      }
    }

    var description = encodeURIComponent(((ref1 = data.apps.pinterest) !== null ? ref1.description : void 0) || $(".product-detail-field.description").text());
    var href = "http://www.pinterest.com/pin/create/button/?url=" + url + "&media=" + media + "&description=" + description;
    return template.$(".pinterest-share").attr("href", href);
  });
});
Template.pinterest.events({
  "click a": function (event) {
    event.preventDefault();
    return window.open(Template.instance().$(".pinterest-share").attr("href"), "pinterest_window", "width=750, height=650");
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"twitter.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/apps/twitter.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* eslint-disable */
//
// TODO twitter social templates need review to ensure proper use of reaction layouts
//
Template.twitter.onRendered(function () {
  var ref;

  if (this.data.placement === "footer" && ((ref = this.data.apps.twitter) !== null ? ref.profilePage : void 0) !== null) {
    return this.$(".twitter-share").attr("href", this.data.apps.twitter.profilePage);
  } //
  // return twitter
  //


  return this.autorun(function () {
    var template = Template.instance();
    var data = Template.currentData();
    $('meta[property^="twitter:"]').remove();
    $("<meta>", {
      property: "twitter:card",
      content: "summary"
    }).appendTo("head");

    if (data.apps.twitter.username) {
      $("<meta>", {
        property: "twitter:creator",
        content: data.apps.twitter.username
      }).appendTo("head");
    }

    var ref1;
    var description = ((ref1 = data.apps.twitter) !== null ? ref1.description : void 0) || $(".product-detail-field.description").text();
    $("<meta>", {
      property: "twitter:url",
      content: location.origin + location.pathname
    }).appendTo("head");
    $("<meta>", {
      property: "twitter:title",
      content: "" + data.title
    }).appendTo("head");
    $("<meta>", {
      property: "twitter:description",
      content: description
    }).appendTo("head");

    if (data.media) {
      if (!/^http(s?):\/\/+/.test(data.media)) {
        // let media = location.origin + data.media;
        $("<meta>", {
          property: "twitter:image",
          content: data.media
        }).appendTo("head");
      }
    }

    var preferredUrl = data.url || location.origin + location.pathname;
    var url = encodeURIComponent(preferredUrl);
    var base = "https://twitter.com/intent/tweet";
    var ref2;
    var text = encodeURIComponent(((ref2 = data.apps.twitter) !== null ? ref2.title : void 0) || data.title);
    var href = base + "?url=" + url + "&text=" + text;

    if (data.apps.twitter.username) {
      href += "&via=" + data.apps.twitter.username;
    }

    return template.$(".twitter-share").attr("href", href);
  });
});
Template.twitter.events({
  "click a": function (event) {
    event.preventDefault();
    return window.open(Template.instance().$(".twitter-share").attr("href"), "twitter_window", "width=750, height=650");
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"dashboard":{"social.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/dashboard/social.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.social.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.social.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/dashboard/template.social.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("socialSettings");
Template["socialSettings"] = new Template("Template.socialSettings", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("SocialSettingsComponent"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

Template.__checkName("socialDashboard");
Template["socialDashboard"] = new Template("Template.socialDashboard", (function() {
  var view = this;
  return "";
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/dashboard/social.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var SocialSettingsContainer;
module.watch(require("../../containers/socialSettingsContainer"), {
  "default": function (v) {
    SocialSettingsContainer = v;
  }
}, 1);
Template.socialSettings.helpers({
  SocialSettingsComponent: function () {
    return {
      component: SocialSettingsContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"social.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/social.html                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.social.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.social.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/template.social.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("reactionSocial");
Template["reactionSocial"] = new Template("Template.reactionSocial", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.templateInstance().subscriptionsReady());
  }, function() {
    return [ "\n    ", Blaze.Each(function() {
      return Spacebars.call(view.lookup("socialTemplates"));
    }, function() {
      return [ "\n     ", Blaze._TemplateWith(function() {
        return {
          template: Spacebars.call(view.lookup(".")),
          data: Spacebars.call(view.lookup("settings"))
        };
      }, function() {
        return Spacebars.include(function() {
          return Spacebars.call(Template.__dynamic);
        });
      }), "\n    " ];
    }), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/templates/social.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _merge;

module.watch(require("lodash/merge"), {
  "default": function (v) {
    _merge = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);
Template.reactionSocial.onCreated(function () {
  var self = this;
  return this.autorun(function () {
    var subscription = Reaction.Subscriptions.Packages;

    if (subscription.ready()) {
      var socialSettings = Packages.findOne({
        name: "reaction-social"
      });

      if (socialSettings) {
        self.socialSettings = socialSettings.settings.public;
      }
    }
  });
});
Template.reactionSocial.helpers({
  settings: function () {
    var template = Template.instance();
    return template && template.socialSettings;
  },
  socialTemplates: function () {
    var templates = [];
    var template = Template.instance();

    if (template && template.socialSettings) {
      var socialSettings = template.socialSettings;
      socialSettings = _merge({}, socialSettings, Template.currentData());

      if (socialSettings.appsOrder) {
        var _socialSettings = socialSettings,
            appsOrder = _socialSettings.appsOrder;

        for (var i = 0; i < appsOrder.length; i += 1) {
          var app = appsOrder[i];

          if ((0, _typeof2.default)(socialSettings.apps[app]) === "object" && socialSettings.apps[app].enabled) {
            templates.push(app);
          }
        }
      }
    }

    return templates;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"facebook.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/facebook.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  getOpenGraphMeta: function () {
    return getOpenGraphMeta;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Helmet;
module.watch(require("react-helmet"), {
  "default": function (v) {
    Helmet = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 4);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 5);

function getOpenGraphMeta(props) {
  var url = props.url || location.origin + location.pathname;
  var title = props.title || document.title;
  var description = props.settings.description;
  var meta = [{
    property: "og:type",
    content: "article"
  }, {
    property: "og:site_name",
    content: location.hostname
  }, {
    property: "og:url",
    content: url
  }, {
    property: "og:title",
    content: title
  }, {
    property: "og:description",
    content: description
  }];

  if (props.media) {
    var media;

    if (!/^http(s?):\/\/+/.test(data.media)) {
      media = location.origin + data.media;
    }

    meta.push({
      property: "og:image",
      content: media
    });
  }

  return meta;
}

var FacebookSocialButton =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(FacebookSocialButton, _Component);

  function FacebookSocialButton() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (window.FB) {
        window.FB.ui({
          method: "share",
          display: "popup",
          href: _this.props.url
        });
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = FacebookSocialButton.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      var _this2 = this;

      /* eslint-disable wrap-iife */
      if (window && document) {
        $('<div id="fb-root"></div>').appendTo("body");

        window.fbAsyncInit = function () {
          return FB.init({
            appId: _this2.props.settings.appId,
            xfbml: true,
            version: _this2.props.settings.version || "v2.7"
          });
        };

        (function (d, s, id) {
          var fjs = d.getElementsByTagName(s)[0];

          if (d.getElementById(id)) {
            return;
          }

          var js = d.createElement(s);
          js.id = id;
          js.src = "//connect.facebook.net/en_US/sdk.js";
          fjs.parentNode.insertBefore(js, fjs);
        })(document, "script", "facebook-jssdk");
      }
      /* eslint-enable wrap-iife */

    }

    return componentDidMount;
  }();

  _proto.renderText = function () {
    function renderText() {
      if (this.props.showText) {
        return React.createElement(Components.Translation, {
          defaultValue: "Share on Facebook",
          i18nKey: "social.shareOnFacebook"
        });
      }

      return null;
    }

    return renderText;
  }();

  _proto.render = function () {
    function render() {
      var _classnames;

      var iconClassNames = classnames((_classnames = {
        "fa": true,
        "fa-facebook": this.props.altIcon !== true,
        "fa-facebook-alt": this.props.altIcon
      }, _classnames[this.props.size] = this.props.size, _classnames));
      return React.createElement(Components.Button, {
        className: "btn btn-flat facebook-share",
        "aria-label": "Share to Facebook",
        onClick: this.handleClick
      }, React.createElement(Helmet, {
        meta: getOpenGraphMeta(this.props)
      }), React.createElement("i", {
        className: iconClassNames
      }), this.renderText());
    }

    return render;
  }();

  return FacebookSocialButton;
}(Component);

FacebookSocialButton.propTypes = {
  altIcon: PropTypes.string,
  media: PropTypes.string,
  settings: PropTypes.object,
  showText: PropTypes.bool,
  size: PropTypes.string,
  url: PropTypes.string
};
module.exportDefault(FacebookSocialButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"googleplus.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/googleplus.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  getGooglePlusMeta: function () {
    return getGooglePlusMeta;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Helmet;
module.watch(require("react-helmet"), {
  "default": function (v) {
    Helmet = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 4);

function getGooglePlusMeta(props) {
  var preferredUrl = props.url || location.origin + location.pathname;
  var url = encodeURIComponent(preferredUrl);
  var description = props.settings.description;
  var meta = [{
    property: "itemprop:name",
    content: location.hostname
  }, {
    property: "itemprop:url",
    content: url
  }, {
    property: "itemprop:description",
    content: description
  }];

  if (props.media) {
    var media;

    if (!/^http(s?):\/\/+/.test(props.media)) {
      media = location.origin + props.media;
    }

    meta.push({
      property: "itemprop:image",
      content: media
    });
  }

  return meta;
}

var GooglePlusSocialButton =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(GooglePlusSocialButton, _Component);

  function GooglePlusSocialButton() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (window) {
        window.open(_this.url, "googleplus_window", "width=750, height=650");
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = GooglePlusSocialButton.prototype;

  _proto.renderText = function () {
    function renderText() {
      if (this.props.showText) {
        return React.createElement(Components.Translation, {
          defaultValue: "Share on GooglePlus",
          i18nKey: "social.shareOnGooglePlus"
        });
      }

      return null;
    }

    return renderText;
  }();

  _proto.render = function () {
    function render() {
      var _classnames;

      var iconClassNames = classnames((_classnames = {
        "fa": true,
        "fa-google-plus": this.props.altIcon !== true,
        "fa-google-plus-alt": this.props.altIcon
      }, _classnames[this.props.size] = this.props.size, _classnames));
      return React.createElement(Components.Button, {
        className: "btn btn-flat googleplus-share",
        "aria-label": "Share to Google Plus",
        onClick: this.handleClick
      }, React.createElement(Helmet, {
        meta: getGooglePlusMeta(this.props)
      }), React.createElement("i", {
        className: iconClassNames
      }), this.renderText());
    }

    return render;
  }();

  (0, _createClass2.default)(GooglePlusSocialButton, [{
    key: "url",
    get: function () {
      var _props = this.props,
          url = _props.url,
          settings = _props.settings;
      var description = this.props.settings.description;
      var preferredUrl = url || location.origin + location.pathname;
      var encodedUrl = encodeURIComponent(preferredUrl);
      var href = "https://plus.google.com/share?url=" + encodedUrl;

      if (settings.description) {
        href += "&text=" + description;
      }

      return href;
    }
  }]);
  return GooglePlusSocialButton;
}(Component);

GooglePlusSocialButton.propTypes = {
  altIcon: PropTypes.bool,
  settings: PropTypes.object,
  showText: PropTypes.bool,
  size: PropTypes.string,
  url: PropTypes.string
};
module.exportDefault(GooglePlusSocialButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/index.js                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./socialButtons"), {
  "default": function (v) {
    exports.SocialButtons = v;
  }
}, 0);
module.watch(require("./facebook"), {
  "default": function (v) {
    exports.Facebook = v;
  }
}, 1);
module.watch(require("./twitter"), {
  "default": function (v) {
    exports.Twitter = v;
  }
}, 2);
module.watch(require("./googleplus"), {
  "default": function (v) {
    exports.GooglePlus = v;
  }
}, 3);
module.watch(require("./pinterest"), {
  "default": function (v) {
    exports.Pinterest = v;
  }
}, 4);
module.watch(require("./settings"), {
  "default": function (v) {
    exports.SocialSettings = v;
  }
}, 5);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"pinterest.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/pinterest.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);

var PinterestSocialButton =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(PinterestSocialButton, _Component);

  function PinterestSocialButton() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (window) {
        window.open(_this.url, "pinterest_window", "width=750, height=650");
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = PinterestSocialButton.prototype;

  _proto.renderText = function () {
    function renderText() {
      if (this.props.showText) {
        return React.createElement(Components.Translation, {
          defaultValue: "Share on Pinterest",
          i18nKey: "social.shareOnPinterest"
        });
      }

      return null;
    }

    return renderText;
  }();

  _proto.render = function () {
    function render() {
      var _classnames;

      var iconClassNames = classnames((_classnames = {
        "fa": true,
        "fa-pinterest": this.props.altIcon !== true,
        "fa-pinterest-alt": this.props.altIcon
      }, _classnames[this.props.size] = this.props.size, _classnames));
      return React.createElement(Components.Button, {
        className: "btn btn-flat pinterest-share",
        "aria-label": "Share to Pinterest",
        onClick: this.handleClick
      }, React.createElement("i", {
        className: iconClassNames
      }), this.renderText());
    }

    return render;
  }();

  (0, _createClass2.default)(PinterestSocialButton, [{
    key: "url",
    get: function () {
      var props = this.props;
      var preferredUrl = props.url || location.origin + location.pathname;
      var url = encodeURIComponent(preferredUrl);
      var description = props.settings.description;
      var baseUrl = "http://www.pinterest.com/pin/create/button/";
      var media = props.settings.media;

      if (props.settings.media) {
        if (!/^http(s?):\/\/+/.test(props.settings.media)) {
          media = location.origin + props.settings.media;
        }
      }

      var href = baseUrl + "?url=" + url + "&media=" + media + "&description=" + description;
      return href;
    }
  }]);
  return PinterestSocialButton;
}(Component);

PinterestSocialButton.propTypes = {
  altIcon: PropTypes.bool,
  settings: PropTypes.object,
  showText: PropTypes.bool,
  size: PropTypes.string
};
module.exportDefault(PinterestSocialButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/settings.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var CardGroup, SettingsCard, Form;
module.watch(require("../../../../core/ui/client/components"), {
  CardGroup: function (v) {
    CardGroup = v;
  },
  SettingsCard: function (v) {
    SettingsCard = v;
  },
  Form: function (v) {
    Form = v;
  }
}, 2);
var SocialPackageConfig;
module.watch(require("../../../../../../lib/collections/schemas/social"), {
  SocialPackageConfig: function (v) {
    SocialPackageConfig = v;
  }
}, 3);
var socialProviders = [{
  name: "facebook",
  icon: "fa fa-facebook",
  fields: ["appId", "appSecret", "profilePage"]
}, {
  name: "twitter",
  icon: "fa fa-twitter",
  fields: ["username", "profilePage"]
}, {
  name: "pinterest",
  icon: "fa fa-pinterest",
  fields: ["profilePage"]
}, {
  name: "googleplus",
  icon: "fa fa-google-plus",
  fields: ["profilePage"]
}];

var SocialSettings =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SocialSettings, _Component);

  function SocialSettings() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleSettingChange = function (event, value, name) {
      if (typeof _this.props.onSettingChange === "function") {
        var parts = name.split(".");

        _this.props.onSettingChange(parts[0], parts[1], value);
      }
    }, _this.handleSubmit = function (event, data, formName) {
      if (typeof _this.props.onSettingsSave === "function") {
        _this.props.onSettingsSave(formName, data.doc);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = SocialSettings.prototype;

  _proto.getSchemaForField = function () {
    function getSchemaForField(provider, field) {
      return SocialPackageConfig.getDefinition("settings.public.apps." + provider + "." + field);
    }

    return getSchemaForField;
  }();

  _proto.renderCards = function () {
    function renderCards() {
      var _this2 = this;

      if (Array.isArray(socialProviders)) {
        return socialProviders.map(function (provider, index) {
          var doc = {
            settings: (0, _objectSpread2.default)({}, _this2.props.packageData.settings)
          };
          return React.createElement(SettingsCard, {
            key: index,
            i18nKeyTitle: "admin.settings.public.apps." + provider.name + ".title",
            expandable: true,
            onExpand: _this2.props.onSettingExpand,
            expanded: _this2.props.preferences[provider.name],
            title: provider.name,
            name: provider.name,
            enabled: _this2.props.socialSettings.settings.apps[provider.name].enabled,
            icon: provider.icon,
            onSwitchChange: _this2.props.onSettingEnableChange
          }, React.createElement(Form, {
            schema: SocialPackageConfig,
            doc: doc,
            docPath: "settings.public.apps." + provider.name,
            hideFields: ["settings.public.apps." + provider.name + ".enabled"],
            name: "settings.public.apps." + provider.name,
            onSubmit: _this2.handleSubmit
          }));
        });
      }

      return null;
    }

    return renderCards;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(CardGroup, null, this.renderCards());
    }

    return render;
  }();

  return SocialSettings;
}(Component);

SocialSettings.propTypes = {
  onSettingChange: PropTypes.func,
  onSettingEnableChange: PropTypes.func,
  onSettingExpand: PropTypes.func,
  onSettingsSave: PropTypes.func,
  packageData: PropTypes.object,
  preferences: PropTypes.object,
  providers: PropTypes.arrayOf(PropTypes.string),
  socialSettings: PropTypes.object
};
module.exportDefault(SocialSettings);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"socialButtons.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/socialButtons.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  getProviderComponentByName: function () {
    return getProviderComponentByName;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Facebook, Twitter, GooglePlus, Pinterest;
module.watch(require("./"), {
  Facebook: function (v) {
    Facebook = v;
  },
  Twitter: function (v) {
    Twitter = v;
  },
  GooglePlus: function (v) {
    GooglePlus = v;
  },
  Pinterest: function (v) {
    Pinterest = v;
  }
}, 2);

function getProviderComponentByName(providerName) {
  switch (providerName) {
    case "facebook":
      return Facebook;

    case "twitter":
      return Twitter;

    case "googleplus":
      return GooglePlus;

    case "pinterest":
      return Pinterest;

    default:
      return null;
  }
}

var SocialButtons =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SocialButtons, _Component);

  function SocialButtons() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = SocialButtons.prototype;

  _proto.buttonSettngs = function () {
    function buttonSettngs(provider) {
      return this.props.settings.apps[provider];
    }

    return buttonSettngs;
  }();

  _proto.renderEditButton = function () {
    function renderEditButton() {
      if (this.props.editButton) {
        return React.createElement("span", {
          className: "social-buttons-controls"
        }, this.props.editButton);
      }

      return null;
    }

    return renderEditButton;
  }();

  _proto.renderButtons = function () {
    function renderButtons() {
      var _this = this;

      if (this.props.providers) {
        return this.props.providers.map(function (provider) {
          var buttonComponent = getProviderComponentByName(provider);

          if (buttonComponent) {
            var component = React.createElement(getProviderComponentByName(provider), {
              key: provider,
              title: _this.props.title,
              description: _this.props.description,
              url: _this.props.url,
              settings: _this.buttonSettngs(provider)
            });
            return component;
          }

          return null;
        });
      }

      return null;
    }

    return renderButtons;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "rui social-buttons"
      }, this.renderButtons(), this.renderEditButton());
    }

    return render;
  }();

  return SocialButtons;
}(Component);

SocialButtons.propTypes = {
  description: PropTypes.string,
  editButton: PropTypes.node,
  providers: PropTypes.arrayOf(PropTypes.string),
  settings: PropTypes.shape({
    apps: PropTypes.object
  }),
  title: PropTypes.string,
  url: PropTypes.string
};
module.exportDefault(SocialButtons);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"twitter.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/components/twitter.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  getTwitterMeta: function () {
    return getTwitterMeta;
  }
});
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Helmet;
module.watch(require("react-helmet"), {
  "default": function (v) {
    Helmet = v;
  }
}, 2);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 3);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 4);

function getTwitterMeta(props) {
  var title = props.title || document.title;
  var preferredUrl = props.url || location.origin + location.pathname;
  var url = encodeURIComponent(preferredUrl);
  var _props$settings = props.settings,
      username = _props$settings.username,
      description = _props$settings.description;
  var meta = [{
    property: "twitter:card",
    content: "summary"
  }, {
    property: "twitter:creator",
    content: username
  }, {
    property: "twitter:url",
    content: url
  }, {
    property: "twitter:title",
    content: title
  }, {
    property: "twitter:description",
    content: description
  }];

  if (props.media) {
    var media;

    if (!/^http(s?):\/\/+/.test(props.media)) {
      media = location.origin + props.media;
    }

    meta.push({
      property: "twitter:image",
      content: media
    });
  }
}

var TwitterSocialButton =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(TwitterSocialButton, _Component);

  function TwitterSocialButton() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleClick = function (event) {
      event.preventDefault();

      if (window) {
        window.open(_this.url, "twitter_window", "width=750, height=650");
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = TwitterSocialButton.prototype;

  _proto.renderText = function () {
    function renderText() {
      if (this.props.showText) {
        return React.createElement(Components.Translation, {
          defaultValue: "Share on Twitter",
          i18nKey: "social.shareOnTwitter"
        });
      }

      return null;
    }

    return renderText;
  }();

  _proto.render = function () {
    function render() {
      var _classnames;

      var iconClassNames = classnames((_classnames = {
        "fa": true,
        "fa-twitter": this.props.altIcon !== true,
        "fa-twitter-alt": this.props.altIcon
      }, _classnames[this.props.size] = this.props.size, _classnames));
      return React.createElement(Components.Button, {
        className: "btn btn-flat twitter-share",
        "aria-label": "Share to Twitter",
        onClick: this.handleClick
      }, React.createElement(Helmet, {
        meta: getTwitterMeta(this.props)
      }), React.createElement("i", {
        className: iconClassNames
      }), this.renderText());
    }

    return render;
  }();

  (0, _createClass2.default)(TwitterSocialButton, [{
    key: "url",
    get: function () {
      var props = this.props;
      var preferredUrl = props.url || location.origin + location.pathname;
      var url = encodeURIComponent(preferredUrl);
      var base = "https://twitter.com/intent/tweet";
      var _props$settings2 = props.settings,
          username = _props$settings2.username,
          description = _props$settings2.description;
      var href = base + "?url=" + url + "&text=" + description;

      if (username) {
        href += "&via=" + username;
      }

      return href;
    }
  }]);
  return TwitterSocialButton;
}(Component);

TwitterSocialButton.propTypes = {
  altIcon: PropTypes.bool,
  settings: PropTypes.object,
  showText: PropTypes.bool,
  size: PropTypes.string
};
module.exportDefault(TwitterSocialButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"socialSettingsContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/containers/socialSettingsContainer.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 5);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 6);
var SocialSettings;
module.watch(require("../components"), {
  SocialSettings: function (v) {
    SocialSettings = v;
  }
}, 7);
var createSocialSettings;
module.watch(require("../../lib/helpers"), {
  createSocialSettings: function (v) {
    createSocialSettings = v;
  }
}, 8);

var SocialSettingsContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SocialSettingsContainer, _Component);

  function SocialSettingsContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleSettingEnable = function (event, isChecked, name) {
      Meteor.call("reaction-social/updateSocialSetting", name, "enabled", isChecked);
    };

    _this.handleSettingExpand = function (event, card, name, isExpanded) {
      var _Reaction$updateUserP;

      Reaction.updateUserPreferences("reaction-social", "settingsCards", (_Reaction$updateUserP = {}, _Reaction$updateUserP[name] = isExpanded, _Reaction$updateUserP));
    };

    _this.handleSettingsSave = function (settingName, values) {
      Meteor.call("reaction-social/updateSocialSettings", values.settings, function (error) {
        if (!error) {
          Alerts.toast(i18next.t("admin.settings.socialSettingsSaved", {
            defaultValue: "Social settings saved"
          }), "success");
        }
      });
    };

    _this.state = {
      settings: props.settings
    };
    return _this;
  }

  var _proto = SocialSettingsContainer.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      if (_isEqual(nextProps.settings, this.props.settings) === false) {
        this.setState({
          settings: nextProps.settings
        });
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(SocialSettings, (0, _extends2.default)({
        onSettingEnableChange: this.handleSettingEnable,
        onSettingExpand: this.handleSettingExpand,
        onSettingsSave: this.handleSettingsSave
      }, this.props, {
        settings: this.state.settings
      }));
    }

    return render;
  }();

  return SocialSettingsContainer;
}(Component);

SocialSettingsContainer.propTypes = {
  settings: PropTypes.object
};

function composer(props, onData) {
  var subscription = Reaction.Subscriptions.Packages;
  var preferences = Reaction.getUserPreferences("reaction-social", "settingsCards", {});
  var socialPackage = Packages.findOne({
    name: "reaction-social"
  });

  if (subscription.ready()) {
    onData(null, {
      preferences: preferences,
      packageData: socialPackage,
      socialSettings: createSocialSettings(props)
    });
  } else {
    onData(null, {});
  }
}

var decoratedComponent = composeWithTracker(composer)(SocialSettingsContainer);
module.exportDefault(decoratedComponent);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/client/index.js                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/apps/facebook.html"));
module.watch(require("./templates/apps/facebook.js"));
module.watch(require("./templates/apps/googleplus.html"));
module.watch(require("./templates/apps/googleplus.js"));
module.watch(require("./templates/apps/pinterest.html"));
module.watch(require("./templates/apps/pinterest.js"));
module.watch(require("./templates/apps/twitter.html"));
module.watch(require("./templates/apps/twitter.js"));
module.watch(require("./templates/dashboard/social.html"));
module.watch(require("./templates/dashboard/social.js"));
module.watch(require("./templates/social.html"));
module.watch(require("./templates/social.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/social/lib/helpers.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  createSocialSettings: function () {
    return createSocialSettings;
  }
});
var Packages;
module.watch(require("../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 0);
var merge;
module.watch(require("lodash/merge"), {
  "default": function (v) {
    merge = v;
  }
}, 1);

function createSocialSettings(options) {
  var socialSettings;
  var socialPackage = Packages.findOne({
    name: "reaction-social"
  });

  if (socialPackage) {
    socialSettings = socialPackage.settings.public;
    socialSettings = merge({}, socialSettings, options);
    var socialButtons = [];

    if (socialSettings.appsOrder) {
      var _socialSettings = socialSettings,
          appsOrder = _socialSettings.appsOrder;

      for (var i = 0; i < appsOrder.length; i += 1) {
        var app = appsOrder[i];

        if ((0, _typeof2.default)(socialSettings.apps[app]) === "object" && socialSettings.apps[app].enabled) {
          socialButtons.push(app);
        }
      }
    }

    return {
      url: options.url || location.origin + location.pathname,
      media: options.media,
      settings: socialSettings,
      providers: socialButtons
    };
  }

  return null;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"connectors-shopify":{"client":{"settings":{"shopify.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/client/settings/shopify.html                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shopify.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shopify.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/client/settings/template.shopify.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shopifyConnectSettings");
Template["shopifyConnectSettings"] = new Template("Template.shopifyConnectSettings", (function() {
  var view = this;
  return [ HTML.DIV({
    class: "panel-group"
  }, "\n    ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("ShopifyConnectPackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("shopify-connect-update-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.apiKey"),
          class: Spacebars.call("form-control")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.password"),
          class: Spacebars.call("form-control"),
          type: Spacebars.call("password")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.sharedSecret"),
          class: Spacebars.call("form-control")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", HTML.LABEL({
        class: "control-label"
      }, "Shop slug"), "\n      ", HTML.DIV("\n        ", HTML.DIV({
        style: "display: inline-block",
        class: "custom-form-label"
      }, "https://"), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.shopName"),
          class: Spacebars.call("form-control shop-slug")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", HTML.DIV({
        style: "display: inline-block",
        class: "custom-form-label"
      }, ".shopify.com"), "\n      "), "\n      ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n    " ];
    });
  }), "\n  "), "\n  ", Blaze.If(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "apiKey"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel-group"
    }, "\n      ", Spacebars.include(view.lookupTemplate("shopifyImport")), "\n    "), "\n    ", HTML.DIV({
      class: "panel-group"
    }, "\n      ", Spacebars.include(view.lookupTemplate("shopifySync")), "\n    "), "\n  " ];
  }) ];
}));

Template.__checkName("shopifyImport");
Template["shopifyImport"] = new Template("Template.shopifyImport", (function() {
  var view = this;
  return HTML.Raw('<div class="panel-title">\n    <h4><span data-i18n="admin.shopifyConnectSettings.headingImport">Import</span></h4>\n  </div>\n  <div class="panel-body">\n    <div>\n      <input type="checkbox" id="shopifyCheckboxProducts"> <span data-i18n="admin.shopifyConnectSettings.optionImportProducts">Products</span>\n      <input type="checkbox" id="shopifyCheckboxCustomers"> <span data-i18n="admin.shopifyConnectSettings.optionImportCustomers">Customers</span>\n    </div>\n    <button class="btn btn-default" data-event-action="importDataFromShopify">\n      <i class="fa fa-cloud-download"></i> <span data-i18n="admin.shopifyConnectSettings.startImport">Start Import</span>\n    </button>\n  </div>');
}));

Template.__checkName("shopifySync");
Template["shopifySync"] = new Template("Template.shopifySync", (function() {
  var view = this;
  return [ HTML.Raw('<div class="panel-title">\n    <h4><span data-i18n="admin.shopifyConnectSettings.headingSync">Sync Settings</span></h4>\n  </div>\n  '), HTML.DIV({
    class: "panel-body"
  }, "\n    ", Blaze.If(function() {
    return Spacebars.call(view.lookup("activeWebhooks"));
  }, function() {
    return [ "\n      ", HTML.BUTTON({
      class: "btn btn-danger",
      "data-event-action": "stopShopifySync"
    }, "\n        ", HTML.I({
      class: "fa fa-trash-o"
    }), " ", HTML.SPAN({
      "data-i18n": "admin.shopifyConnectSettings.syncStop"
    }, "Stop Sync"), "\n      "), "\n    " ];
  }, function() {
    return [ "\n      ", HTML.FORM({
      "data-event-action": "setupShopifySync"
    }, "\n        ", HTML.DIV("\n          ", HTML.INPUT(HTML.Attrs({
      type: "checkbox",
      name: "orders/create:updateInventory"
    }, function() {
      return Spacebars.attrMustache(view.lookup("integrationIsActive"), "orders/create:updateInventory");
    })), "\n          ", HTML.LABEL({
      for: "optionOrdersCreateUpdateInventory"
    }, "\n            ", HTML.SPAN({
      "data-i18n": "admin.shopifyConnectSettings.optionOrdersCreateUpdateInventory"
    }, "\n              Update Inventory on Shopify Order\n            "), "\n          "), "\n        "), "\n        ", HTML.DIV("\n          ", HTML.LABEL({
      for: "webhooksDomain",
      id: "webhooksDomainLabel",
      "data-i18n": "admin.shopifyConnectSettings.webhooksDomain"
    }, "\n              Webhook callback domain\n          "), "\n          ", HTML.DIV("\n            ", HTML.INPUT({
      type: "text",
      name: "webhooksDomain",
      id: "webhooksDomain",
      value: function() {
        return Spacebars.mustache(view.lookup("currentDomain"));
      }
    }), "\n          "), "\n        "), "\n        ", HTML.BUTTON({
      type: "submit",
      class: "btn btn-default",
      "data-event-action": "setupShopifySync"
    }, "\n          ", HTML.I({
      class: "fa fa-exchange"
    }), " ", HTML.SPAN({
      "data-i18n": "admin.shopifyConnectSettings.syncSetup"
    }, "Setup Sync"), "\n        "), "\n      "), "\n      ", HTML.BR(), "\n      ", HTML.DIV("\n        ", HTML.FORM({
      "data-event-action": "setupShopifyHooks"
    }, "\n          ", HTML.DIV("\n            ", HTML.INPUT(HTML.Attrs({
      type: "checkbox",
      name: "orders:orders/create:exportToShopify"
    }, function() {
      return Spacebars.attrMustache(view.lookup("hookIsActive"), "orders:orders/create:exportToShopify");
    })), "\n            ", HTML.LABEL({
      for: "optionsPushOrdersOnCreate"
    }, "\n        ", HTML.SPAN({
      "data-i18n": "admin.shopifyConnectSettings.optionsPushOrdersOnCreate"
    }, "\n          Push orders to Shopify on create\n        "), "\n            "), "\n          "), "\n          ", HTML.BUTTON({
      type: "submit",
      class: "btn btn-default",
      "data-event-action": "activateHooks"
    }, "\n            ", HTML.I({
      class: "fa fa-exchange"
    }), " ", HTML.SPAN({
      "data-i18n": "admin.shopifyConnectSettings.hookSetup"
    }, "Activate Outbound Hooks"), "\n          "), "\n        "), "\n      "), "\n    " ];
  }), "\n  ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopify.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/client/settings/shopify.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 3);
var Reaction, Router, i18next;
module.watch(require("/client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Router: function (v) {
    Router = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var Packages, Shops;
module.watch(require("/lib/collections"), {
  Packages: function (v) {
    Packages = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 5);
var ShopifyConnectPackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  ShopifyConnectPackageConfig: function (v) {
    ShopifyConnectPackageConfig = v;
  }
}, 6);
module.watch(require("./shopify.less"));
module.watch(require("./shopify.html"));
Template.shopifyConnectSettings.helpers({
  packageData: function () {
    return Packages.findOne({
      name: "reaction-connectors-shopify",
      shopId: Reaction.getShopId()
    });
  },
  ShopifyConnectPackageConfig: function () {
    return ShopifyConnectPackageConfig;
  }
});
Template.shopifyImport.events({
  "click [data-event-action=importDataFromShopify]": function (event) {
    event.preventDefault();

    if ($("#shopifyCheckboxCustomers").is(":checked") || $("#shopifyCheckboxProducts").is(":checked")) {
      $(event.currentTarget).html("<i class='fa fa-circle-o-notch fa-spin'></i> " + i18next.t("admin.shopifyConnectSettings.importing"));
      event.currentTarget.disabled = true;
    } // If this is the primary shop, redirect to index


    if (Reaction.getShopId() === Reaction.getPrimaryShopId()) {
      Router.go("index");
    } else {
      var shopId = Reaction.getShopId();
      var shop = Shops.findOne({
        _id: shopId
      }); // Check to see if this shop has a slug, otherwise direct to shopId route

      if (shop && shop.slug) {
        Router.go("/shop/" + shop.slug);
      } else {
        Router.go("/shop/" + shopId);
      }
    } // If no option is selected, return error asking user to select type of import


    if (!$("#shopifyCheckboxCustomers").is(":checked") && !$("#shopifyCheckboxProducts").is(":checked")) {
      return Alerts.toast(i18next.t("admin.shopifyConnectSettings.chooseImportType"), "error");
    } // TODO transform these Meteor calls to jobs like we do for the products images
    // we got customers checkbox checked ? if yes then download customers


    if ($("#shopifyCheckboxCustomers").is(":checked")) {
      Meteor.call("connectors/shopify/import/customers", function (err) {
        $(event.currentTarget).html("\n            <i class='fa fa-cloud-download'></i> " + i18next.t("admin.shopifyConnectSettings.startImport"));
        event.currentTarget.disabled = false;

        if (!err) {
          return Alerts.toast(i18next.t("admin.shopifyConnectSettings.importSuccess"), "success");
        }

        return Alerts.toast(i18next.t("admin.shopifyConnectSettings.importFailed") + ": " + err, "error");
      });
    } // we got products checkbox checked ? if yes then download products


    if ($("#shopifyCheckboxProducts").is(":checked")) {
      Meteor.call("connectors/shopify/import/products", function (err) {
        $(event.currentTarget).html("\n            <i class='fa fa-cloud-download'></i> " + i18next.t("admin.shopifyConnectSettings.startImport"));
        event.currentTarget.disabled = false;

        if (!err) {
          return Alerts.toast(i18next.t("admin.shopifyConnectSettings.importSuccess"), "success");
        }

        return Alerts.toast(i18next.t("admin.shopifyConnectSettings.importFailed") + ": " + err, "error");
      });
    }
  }
});
Template.shopifySync.helpers({
  activeWebhooks: function () {
    var pkg = Packages.findOne({
      name: "reaction-connectors-shopify",
      shopId: Reaction.getShopId()
    });

    if (pkg && pkg.settings && Array.isArray(pkg.settings.webhooks) && pkg.settings.webhooks.length > 0) {
      return true;
    }

    return false;
  },
  integrationIsActive: function (integration) {
    var _Reaction$getPackageS = Reaction.getPackageSettings("reaction-connectors-shopify"),
        settings = _Reaction$getPackageS.settings; // If this package has webhooks, determine if there is a match for the `integration` passed in as an arg


    if (settings && Array.isArray(settings.webhooks) && settings.webhooks.length > 0) {
      var integrations = settings.webhooks.reduce(function (integrationsArray, webhook) {
        // if this webhook doesn't have any integrations, skip it.
        if (!Array.isArray(webhook.integrations)) {
          return integrationsArray;
        } // initialize with first webhook's integrations array


        if (!integrationsArray) {
          return webhook.integrations;
        } // Append integrations to integrations array - not unique, but don't really care


        return (0, _toConsumableArray2.default)(integrationsArray).concat((0, _toConsumableArray2.default)(webhook.integrations));
      }, null); // Return "checked" if we found the integration, empty string otherwise

      return integrations.indexOf(integration) !== -1 ? "checked" : "";
    } // If no webhooks are found, this integration is inactive


    return "";
  },
  currentDomain: function () {
    var _Reaction$getPackageS2 = Reaction.getPackageSettings("reaction-connectors-shopify"),
        settings = _Reaction$getPackageS2.settings;

    return settings.webhooksDomain || Meteor.absoluteUrl();
  },
  hookIsActive: function (hook) {
    var _Reaction$getPackageS3 = Reaction.getPackageSettings("reaction-connectors-shopify"),
        settings = _Reaction$getPackageS3.settings;

    var synchooks = settings.synchooks;

    if (synchooks) {
      var _hook$split = hook.split(":"),
          _hook$split2 = (0, _slicedToArray2.default)(_hook$split, 3),
          topic = _hook$split2[0],
          _event = _hook$split2[1],
          syncType = _hook$split2[2];

      var matchingHooks = synchooks.filter(function (synchook) {
        return synchook.topic === topic && synchook.event === _event && synchook.syncType === syncType;
      });

      if (matchingHooks.length > 0) {
        return "checked";
      }
    }

    return "";
  }
});
Template.shopifySync.events({
  "submit [data-event-action=setupShopifySync]": function (event) {
    event.preventDefault(); // Don't permit default form submission behavior

    var _Reaction$getPackageS4 = Reaction.getPackageSettings("reaction-connectors-shopify"),
        settings = _Reaction$getPackageS4.settings; // Our event target is the form we submitted


    var form = event.target; // Get all selected options

    var selectedOptionsNodeList = form.querySelectorAll('input[type="checkbox"]:checked');
    var webhooksDomain = document.getElementsByName("webhooksDomain")[0].value;

    if (!webhooksDomain) {
      return Alerts.toast("" + i18next.t("admin.shopifyConnectSettings.noDomainSelected"), "warning");
    }

    if (settings.webhooksDomain !== webhooksDomain) {
      settings.webhooksDomain = webhooksDomain;
      Meteor.call("package/update", "reaction-connectors-shopify", "settings", settings);
    } // Create options array
    // - create an array from the nodelist of checkboxes
    // - map names from checkbox's html name into array
    // - options should be in the form topic:integration
    // - e.g. orders/create:updateInventory


    var integrations = Array.from(selectedOptionsNodeList).map(function (integration) {
      return integration.name;
    }); // If there's at least one option

    if (integrations && Array.isArray(integrations) && integrations.length > 0) {
      // setup sync with provided integrations
      return Meteor.call("connectors/shopify/sync/setup", integrations, webhooksDomain, function (err) {
        if (!err) {
          // If there is no error, notify of success
          return Alerts.toast(i18next.t("admin.shopifyConnectSettings.syncSetupSuccess"), "success");
        } // Notify setup sync error if an error is returned


        return Alerts.toast(i18next.t("admin.shopifyConnectSettings.syncSetupFailure"), "error");
      });
    } // If no options selected, warn user


    return Alerts.toast("" + i18next.t("admin.shopifyConnectSettings.noSyncIntegrationsSelected"), "warning");
  },
  "click [data-event-action=stopShopifySync]": function () {
    // setup sync with provided integrations
    return Meteor.call("connectors/shopify/sync/teardown", function (err) {
      if (!err) {
        // If there is no error, notify of success
        return Alerts.toast(i18next.t("admin.shopifyConnectSettings.syncStopSuccess"), "success");
      } // Notify setup sync error if an error is returned


      return Alerts.toast(i18next.t("admin.shopifyConnectSettings.syncStopFailure"), "error");
    });
  },
  "submit [data-event-action=setupShopifyHooks]": function (formEvent) {
    event.preventDefault();
    var form = formEvent.target;
    var optionsNodeList = form.querySelectorAll('input[type="checkbox"]');
    var optionsList = Array.from(optionsNodeList).map(function (hook) {
      return {
        name: hook.name,
        checked: hook.checked
      };
    });
    optionsList.forEach(function (node) {
      if (node.checked) {
        Meteor.call("synchooks/shopify/addHook", node, function (error) {
          if (!error) {
            Alerts.toast(i18next.t("admin.shopifyConnectSettings.hookSetupSuccess"), "success");
          } else {
            Alerts.toast(i18next.t("admin.shopifyConnectSettings.hookSetupFailure"), "error");
          }
        });
      } else {
        Meteor.call("synchooks/shopify/removeHook", node, function (error) {
          if (!error) {
            Alerts.toast(i18next.t("admin.shopifyConnectSettings.hookSetupSuccess"), "success");
          } else {
            Alerts.toast(i18next.t("admin.shopifyConnectSettings.hookSetupFailure"), "error");
          }
        });
      }
    });
  }
});
AutoForm.hooks({
  "shopify-connect-update-form": {
    onSuccess: function () {
      Meteor.call("connectors/shopify/api/credentials/test", function (err, isValid) {
        if (isValid) {
          return Alerts.toast(i18next.t("admin.shopifyConnectSettings.validCredentials"), "Valid API key and password");
        }

        return Alerts.toast(i18next.t("admin.shopifyConnectSettings.invalidCredentials", "Invalid API key/password"), "error");
      });
    },
    onError: function (error) {
      return Alerts.toast(i18next.t("admin.settings.saveFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopify.less":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/client/settings/shopify.less                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./shopify.less.css"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopify.less.css":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/client/settings/shopify.less.css                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("meteor/modules").addStyles(
  "#webhooksDomainLabel {\n  font-size: 14px;\n  margin: 4px 0 4px 0;\n}\n.form-control.shop-slug {\n  display: inline-block;\n  width: auto;\n  min-width: 150px;\n  border: none;\n  padding: 0px;\n  height: 18px;\n  border-radius: 0px;\n  border-bottom: 1px solid black;\n  margin-bottom: 12px;\n  box-shadow: none;\n  -webkit-box-shadow: none;\n}\n.custom-form-label {\n  font-size: 14px;\n  line-height: 1.42857143;\n  color: #595959;\n}\n#webhooksDomain {\n  width: 100%;\n  padding: 5px 0px 5px 10px;\n  border-width: 1px;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  color: #595959;\n  border-bottom-color: #cccccc;\n  border-bottom-right-radius: 2px;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-image-outset: 0px;\n  border-image-repeat: stretch;\n  border-image-slice: 100%;\n  border-image-source: none;\n  border-image-width: 1;\n  border-left-color: #cccccc;\n  border-left-style: solid;\n  border-left-width: 1px;\n  border-right-color: #cccccc;\n  border-right-style: solid;\n  border-right-width: 1px;\n  border-top-color: #cccccc;\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n  border-top-style: solid;\n  border-top-width: 1px;\n}\n"
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/client/index.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/shopify"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/lib/collections/schemas/index.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./shopifyConnect"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shopifyConnect.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/connectors-shopify/lib/collections/schemas/shopifyConnect.js                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;
module1.export({
  Synchook: function () {
    return Synchook;
  },
  ShopifyConnectPackageConfig: function () {
    return ShopifyConnectPackageConfig;
  }
});
var SimpleSchema;
module1.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module1.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module1.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var PackageConfig;
module1.watch(require("/lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 3);
var registerSchema;
module1.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);

/**
 * @file ShopifyProduct
 *
 * @module connectors-shopify
 */

/**
 * @name Webhook
 * @type {SimpleSchema}
 * @property {Number} shopifyId Shopify webhook ID
 * @property {String} topic Shopify webhook topic
 * @property {String} address URL webhook will POST to
 * @property {String} format Format of webhook data
 * @property {Array} integrations Array of integration strings using this webhook
 * @property {String} description Shopify webhook description, currently unused
 */
var Webhook = new SimpleSchema({
  "shopifyId": {
    type: SimpleSchema.Integer,
    label: "Shopify webhook ID"
  },
  "topic": {
    type: String,
    label: "Shopify webhook topic"
  },
  "address": {
    type: String,
    label: "URL webhook will POST to"
  },
  "format": {
    type: String,
    label: "Format of webhook data"
  },
  "integrations": {
    type: Array,
    label: "Integrations currently using this webhook",
    optional: true
  },
  "integrations.$": {
    type: String
  },
  // Currently unused, might want it later
  "description": {
    type: String,
    label: "Shopify webhook description",
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Webhook", Webhook);
/**
 * @name Synchook
 * @type {SimpleSchema}
 * @property {String} topic - General topic this event is under
 * @property {String} event - The type of event that we are capturing
 * @property {String} syncType - The handler to run for this event
 */

var Synchook = new SimpleSchema({
  topic: {
    type: String,
    label: "Outbound Sync Topic",
    allowedValues: ["orders"] // expand as necessary

  },
  event: {
    type: String,
    label: "Event to act upon"
  },
  syncType: {
    type: String,
    label: "Exactly what to sync in this topic"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Synchook", Synchook);
/**
 * @name ShopifyConnectPackageConfig
 * @type {SimpleSchema}
 * @property {String} settings.apiKey Shopify API key
 * @property {String} settings.password Shopify API password
 * @property {String} settings.sharedSecret Shopify API shared secret
 * @property {String} settings.shopName Shop slug
 * @property {Array} settings.webhooks Array of registered Shopify webhooks
 */

var ShopifyConnectPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.apiKey": {
    type: String,
    label: "API key",
    optional: true
  },
  "settings.password": {
    type: String,
    label: "API password",
    optional: true
  },
  "settings.sharedSecret": {
    type: String,
    label: "API shared secret",
    optional: true
  },
  "settings.shopName": {
    type: String,
    label: "Shop slug",
    optional: true
  },
  "settings.synchooks": {
    type: Array,
    label: "Hooks being used to sync outbound with Shopify",
    optional: true
  },
  "settings.synchooks.$": {
    type: Synchook
  },
  "settings.webhooks": {
    type: Array,
    label: "Registered Shopify webhooks",
    optional: true
  },
  "settings.webhooks.$": {
    type: Webhook
  }
});
registerSchema("ShopifyConnectPackageConfig", ShopifyConnectPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"discount-codes":{"client":{"templates":{"codes.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/codes.html                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.codes.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.codes.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/template.codes.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("discountCodesCheckout");
Template["discountCodesCheckout"] = new Template("Template.discountCodesCheckout", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("DiscountList")),
      id: Spacebars.call(view.lookup("cartId")),
      collection: Spacebars.call("Cart")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/settings.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/template.settings.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("customDiscountCodes");
Template["customDiscountCodes"] = new Template("Template.customDiscountCodes", (function() {
  var view = this;
  return [ HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("discountGrid"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", HTML.DIV({
    class: "pull-right"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("editButton"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "isEditing");
  }, function() {
    return [ "\n    ", HTML.DIV("\n    ", Blaze.If(function() {
      return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(view.lookup("discountSchema")),
          type: Spacebars.call("method-update"),
          meteormethod: Spacebars.call("discounts/editCode"),
          doc: Spacebars.call(view.lookup("discountCode")),
          id: Spacebars.call("discount-codes-update-form"),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("code"),
              placeholder: Spacebars.call("Discount Code")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discount"),
              placeholder: Spacebars.call("Discount formula value")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("conditions.accountLimit")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("conditions.redemptionLimit")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("calculation")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discountMethod"),
              type: Spacebars.call("hidden")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("discountCodeSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n\n    " ];
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(view.lookup("discountSchema")),
          type: Spacebars.call("method"),
          meteormethod: Spacebars.call("discounts/addCode"),
          id: Spacebars.call("discount-codes-insert-form"),
          doc: Spacebars.call(view.lookup("discountCode")),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("code"),
              placeholder: Spacebars.call("Discount Code")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discount"),
              placeholder: Spacebars.call("Discount formula value")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("conditions.accountLimit")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("conditions.redemptionLimit")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("calculation")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discountMethod"),
              type: Spacebars.call("hidden")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("discountCodeSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n    " ];
    }), "\n    "), "\n  " ];
  }) ];
}));

Template.__checkName("discountCodeSettingsSubmitButton");
Template["discountCodeSettingsSubmitButton"] = new Template("Template.discountCodeSettingsSubmitButton", (function() {
  var view = this;
  return HTML.DIV({
    class: "clearfix"
  }, "\n    ", HTML.DIV({
    class: "pull-right"
  }, "\n      ", HTML.Raw('<button type="button" class="btn btn-primary cancel" data-i18n="app.cancel">Cancel</button>'), "\n      ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
  }, function() {
    return [ "\n      ", HTML.BUTTON({
      type: "button",
      class: "btn btn-primary delete",
      "data-i18n": "app.delete"
    }, "Delete"), "\n      " ];
  }), "\n      ", HTML.Raw('<button type="submit" class="btn btn-primary" data-i18n="app.saveChanges">Save Changes</button>'), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"codes.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/codes.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Cart;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  }
}, 1);
var DiscountList;
module.watch(require("../../../../core/discounts/client/components/list"), {
  "default": function (v) {
    DiscountList = v;
  }
}, 2);
module.watch(require("./codes.html"));
Template.discountCodesCheckout.helpers({
  DiscountList: function () {
    return DiscountList;
  },
  cartId: function () {
    return Cart.findOne()._id;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./codes"));
module.watch(require("./settings"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/templates/settings.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 4);
var DiscountCodes;
module.watch(require("../collections/codes"), {
  DiscountCodes: function (v) {
    DiscountCodes = v;
  }
}, 5);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var DiscountSchema;
module.watch(require("../../lib/collections/schemas"), {
  DiscountCodes: function (v) {
    DiscountSchema = v;
  }
}, 7);
var IconButton, Loading, SortableTable;
module.watch(require("../../../../core/ui/client/components"), {
  IconButton: function (v) {
    IconButton = v;
  },
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 8);
module.watch(require("./settings.html"));

/* eslint no-shadow: ["error", { "allow": ["options"] }] */

/* eslint no-unused-vars: ["error", { "argsIgnorePattern": "[oO]ptions" }] */
Template.customDiscountCodes.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("DiscountCodes");
  });
  this.state = new ReactiveDict();
  this.state.setDefault({
    isEditing: false,
    editingId: null
  });
});
Template.customDiscountCodes.helpers({
  editButton: function () {
    var instance = Template.instance();
    var state = instance.state;
    var isEditing = state.equals("isEditing", true);
    var editingId = state.get("editingId"); // toggle edit state

    if (!isEditing) {
      editingId = null;
    } // return icon


    return {
      component: IconButton,
      icon: "fa fa-plus",
      onIcon: "fa fa-pencil",
      toggle: true,
      toggleOn: isEditing,
      style: {
        position: "relative",
        top: "-25px",
        right: "8px"
      },
      onClick: function () {
        // remove active rows from grid
        $(".discount-codes-grid-row").removeClass("active");
        return state.set({
          isEditing: !isEditing,
          editingId: editingId
        });
      }
    };
  },
  discountGrid: function () {
    var filteredFields = ["code", "discount", "conditions.redemptionLimit", "calculation.method"];
    var noDataMessage = i18next.t("admin.settings.noCustomDiscountCodesFound");
    var instance = Template.instance(); //
    // helper to get and select row from griddle
    // into blaze for to select discount row for editing
    //

    function editRow(options) {
      var currentId = instance.state.get("editingId"); // isEditing is discount rate object

      instance.state.set("isEditing", options.props.data);
      instance.state.set("editingId", options.props.data._id); // toggle edit mode clicking on same row

      if (currentId === options.props.data._id) {
        instance.state.set("isEditing", null);
        instance.state.set("editingId", null);
      }
    } //
    // helper adds a class to every grid row
    //


    var customRowMetaData = {
      bodyCssClassName: function () {
        return "discount-codes-grid-row";
      }
    }; // add i18n handling to headers

    var customColumnMetadata = [];
    filteredFields.forEach(function (field) {
      var columnMeta = {
        accessor: field,
        Header: i18next.t("admin.discountGrid." + field)
      };
      customColumnMetadata.push(columnMeta);
    }); // return discount Grid

    return {
      component: SortableTable,
      publication: "DiscountCodes",
      collection: DiscountCodes,
      matchingResultsCount: "discounts-count",
      showFilter: true,
      rowMetadata: customRowMetaData,
      filteredFields: filteredFields,
      columns: filteredFields,
      noDataMessage: noDataMessage,
      onRowClick: editRow,
      columnMetadata: customColumnMetadata,
      externalLoadingComponent: Loading
    };
  },
  instance: function () {
    var instance = Template.instance();
    return instance;
  },
  // schema for forms
  discountSchema: function () {
    return DiscountSchema;
  },
  discountCode: function () {
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var discount = DiscountCodes.findOne(id) || {};
    return discount;
  }
}); //
// on submit lets clear the form state
//

Template.customDiscountCodes.events({
  "submit #discount-codes-update-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: false,
      editingId: null
    });
  },
  "submit #discount-codes-insert-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: true,
      editingId: null
    });
  },
  "click .cancel, .discount-codes-grid-row .active": function () {
    var instance = Template.instance(); // remove active rows from grid

    instance.state.set({
      isEditing: false,
      editingId: null
    }); // ugly hack

    $(".discount-codes-grid-row").removeClass("active");
  },
  "click .delete": function () {
    var confirmTitle = i18next.t("admin.settings.confirmRateDelete");
    var confirmButtonText = i18next.t("app.delete");
    var instance = Template.instance();
    var id = instance.state.get("editingId"); // confirm delete

    Alerts.alert({
      title: confirmTitle,
      type: "warning",
      showCancelButton: true,
      confirmButtonText: confirmButtonText
    }, function (isConfirm) {
      if (isConfirm) {
        if (id) {
          Meteor.call("discounts/deleteRate", id);
          instance.state.set({
            isEditing: false,
            editingId: null
          });
        }
      }
    });
  },
  "click .discount-codes-grid-row": function (event) {
    // toggle all rows off, then add our active row
    $(".discount-codes-grid-row").removeClass("active");
    Template.instance().$(event.currentTarget).addClass("active");
  }
}); //
// Hooks for update and insert forms
//

AutoForm.hooks({
  "discount-codes-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveSuccess"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveFailure") + " " + error, "error");
    }
  },
  "discount-codes-insert-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveSuccess"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveFailure") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections":{"codes.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/collections/codes.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountCodes: function () {
    return DiscountCodes;
  }
});
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 0);
var DiscountSchema;
module.watch(require("../../lib/collections/schemas"), {
  DiscountCodes: function (v) {
    DiscountSchema = v;
  }
}, 1);
var DiscountCodes = new Mongo.Collection("DiscountCodes");
// attach discount code specific schema
DiscountCodes.attachSchema(DiscountSchema);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/client/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./collections/codes"));
module.watch(require("./templates"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"codes.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/lib/collections/schemas/codes.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountCodes: function () {
    return DiscountCodes;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var Discounts;
module.watch(require("../../../../../core/discounts/lib/collections/schemas"), {
  Discounts: function (v) {
    Discounts = v;
  }
}, 1);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 2);
var DiscountCodes = Discounts.clone().extend({
  "discountMethod": {
    label: "Method",
    type: String,
    defaultValue: "code"
  },
  "calculation.method": {
    type: String,
    index: 1,
    defaultValue: "discount"
  },
  "code": {
    label: "Discount Code",
    type: String
  },
  "conditions.redemptionLimit": {
    type: SimpleSchema.Integer,
    label: "Total Limit",
    optional: true
  },
  "conditions.accountLimit": {
    type: SimpleSchema.Integer,
    label: "Account Limit",
    defaultValue: 1,
    optional: true
  }
});
registerSchema("DiscountCodes", DiscountCodes);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"config.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/lib/collections/schemas/config.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountCodesPackageConfig: function () {
    return DiscountCodesPackageConfig;
  }
});
var DiscountsPackageConfig;
module.watch(require("../../../../../core/discounts/lib/collections/schemas"), {
  DiscountsPackageConfig: function (v) {
    DiscountsPackageConfig = v;
  }
}, 0);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 1);
var DiscountCodesPackageConfig = DiscountsPackageConfig.clone().extend({
  "settings.codes": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.codes.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  }
});
registerSchema("DiscountCodesPackageConfig", DiscountCodesPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-codes/lib/collections/schemas/index.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./config"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./codes"), {
  "*": module.makeNsSetter()
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"discount-rates":{"client":{"settings":{"rates.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/client/settings/rates.html                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.rates.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.rates.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/client/settings/template.rates.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("customDiscountRates");
Template["customDiscountRates"] = new Template("Template.customDiscountRates", (function() {
  var view = this;
  return [ HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("discountGrid"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", HTML.DIV({
    class: "pull-right"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("editButton"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "isEditing");
  }, function() {
    return [ "\n    ", HTML.DIV("\n    ", Blaze.If(function() {
      return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(view.lookup("discountRateSchema")),
          type: Spacebars.call("method-update"),
          meteormethod: Spacebars.call("discounts/editRate"),
          doc: Spacebars.call(view.lookup("discountRate")),
          id: Spacebars.call("discount-rates-update-form"),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("label"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("Public Label")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("description"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("description")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discount"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discountMethod"),
              type: Spacebars.call("hidden")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("discountSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n\n    " ];
    }, function() {
      return [ "\n\n      ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(view.lookup("discountRateSchema")),
          type: Spacebars.call("method"),
          meteormethod: Spacebars.call("discounts/addRate"),
          id: Spacebars.call("discount-rates-insert-form"),
          doc: Spacebars.call(view.lookup("discountRate")),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("label"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("Public Label")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("description"),
              class: Spacebars.call("form-control"),
              placeholder: Spacebars.call("description")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discount"),
              class: Spacebars.call("form-control")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n          ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("discountMethod"),
              type: Spacebars.call("hidden"),
              value: Spacebars.call("rate")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n        "), "\n        ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("discountSettingsSubmitButton"));
          }), "\n      " ];
        });
      }), "\n    " ];
    }), "\n    "), "\n  " ];
  }) ];
}));

Template.__checkName("discountSettingsSubmitButton");
Template["discountSettingsSubmitButton"] = new Template("Template.discountSettingsSubmitButton", (function() {
  var view = this;
  return HTML.DIV({
    class: "clearfix"
  }, "\n    ", HTML.DIV({
    class: "pull-right"
  }, "\n      ", HTML.Raw('<button type="button" class="btn btn-primary cancel" data-i18n="app.cancel">Cancel</button>'), "\n      ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
  }, function() {
    return [ "\n      ", HTML.BUTTON({
      type: "button",
      class: "btn btn-primary delete",
      "data-i18n": "app.delete"
    }, "Delete"), "\n      " ];
  }), "\n      ", HTML.Raw('<button type="submit" class="btn btn-primary" data-i18n="app.saveChanges">Save Changes</button>'), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"rates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/client/settings/rates.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 1);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 4);
var DiscountRates;
module.watch(require("../collections/rates"), {
  DiscountRates: function (v) {
    DiscountRates = v;
  }
}, 5);
var DiscountRateSchema;
module.watch(require("../../lib/collections/schemas/rates"), {
  DiscountRates: function (v) {
    DiscountRateSchema = v;
  }
}, 6);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 7);
var IconButton, Loading, SortableTable;
module.watch(require("../../../../core/ui/client/components"), {
  IconButton: function (v) {
    IconButton = v;
  },
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 8);

/* eslint no-shadow: ["error", { "allow": ["options"] }] */

/* eslint no-unused-vars: ["error", { "argsIgnorePattern": "[oO]ptions" }] */
Template.customDiscountRates.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("DiscountRates");
  });
  this.state = new ReactiveDict();
  this.state.setDefault({
    isEditing: false,
    editingId: null
  });
});
Template.customDiscountRates.helpers({
  editButton: function () {
    var instance = Template.instance();
    var state = instance.state;
    var isEditing = state.equals("isEditing", true);
    var editingId = state.get("editingId"); // toggle edit state

    if (!isEditing) {
      editingId = null;
    } // return icon


    return {
      component: IconButton,
      icon: "fa fa-plus",
      onIcon: "fa fa-pencil",
      toggle: true,
      toggleOn: isEditing,
      style: {
        position: "relative",
        top: "-25px",
        right: "8px"
      },
      onClick: function () {
        // remove active rows from grid
        $(".discount-rates-grid-row").removeClass("active");
        return state.set({
          isEditing: !isEditing,
          editingId: editingId
        });
      }
    };
  },
  discountGrid: function () {
    var filteredFields = ["label", "discountMethod", "discount"];
    var noDataMessage = i18next.t("admin.settings.noCustomDiscountRatesFound");
    var instance = Template.instance(); //
    // helper to get and select row from griddle
    // into blaze for to select discount row for editing
    //

    function editRow(options) {
      var currentId = instance.state.get("editingId"); // isEditing is discount rate object

      instance.state.set("isEditing", options.props.data);
      instance.state.set("editingId", options.props.data._id); // toggle edit mode clicking on same row

      if (currentId === options.props.data._id) {
        instance.state.set("isEditing", null);
        instance.state.set("editingId", null);
      }
    } //
    // helper adds a class to every grid row
    //


    var customRowMetaData = {
      bodyCssClassName: function () {
        return "discount-rates-grid-row";
      }
    }; // add i18n handling to headers

    var customColumnMetadata = [];
    filteredFields.forEach(function (field) {
      var columnMeta = {
        accessor: field,
        Header: i18next.t("admin.discountGrid." + field)
      };
      customColumnMetadata.push(columnMeta);
    }); // return discount Grid

    return {
      component: SortableTable,
      publication: "DiscountRates",
      collection: DiscountRates,
      matchingResultsCount: "discounts-count",
      showFilter: true,
      rowMetadata: customRowMetaData,
      filteredFields: filteredFields,
      columns: filteredFields,
      noDataMessage: noDataMessage,
      onRowClick: editRow,
      columnMetadata: customColumnMetadata,
      externalLoadingComponent: Loading
    };
  },
  instance: function () {
    var instance = Template.instance();
    return instance;
  },
  // schema for forms
  discountRateSchema: function () {
    return DiscountRateSchema;
  },
  discountRate: function () {
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var discount = DiscountRates.findOne(id) || {};
    return discount;
  }
}); //
// on submit lets clear the form state
//

Template.customDiscountRates.events({
  "submit #discount-rates-update-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: false,
      editingId: null
    });
  },
  "submit #discount-rates-insert-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: true,
      editingId: null
    });
  },
  "click .cancel, .discount-rates-grid-row.active": function () {
    var instance = Template.instance(); // remove active rows from grid

    instance.state.set({
      isEditing: false,
      editingId: null
    }); // ugly hack

    $(".discount-rates-grid-row").removeClass("active");
  },
  "click .delete": function () {
    var confirmTitle = i18next.t("admin.settings.confirmRateDelete");
    var confirmButtonText = i18next.t("app.delete");
    var instance = Template.instance();
    var id = instance.state.get("editingId"); // confirm delete

    Alerts.alert({
      title: confirmTitle,
      type: "warning",
      showCancelButton: true,
      confirmButtonText: confirmButtonText
    }, function (isConfirm) {
      if (isConfirm) {
        if (id) {
          Meteor.call("discounts/deleteRate", id);
          instance.state.set({
            isEditing: false,
            editingId: null
          });
        }
      }
    });
  },
  "click .discount-rates-grid-row": function (event) {
    // toggle all rows off, then add our active row
    $(".discount-rates-grid-row").removeClass("active");
    Template.instance().$(event.currentTarget).addClass("active");
  }
});
AutoForm.hooks({
  "discount-rates-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveSuccess"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveFailure") + " " + error, "error");
    }
  }
});
AutoForm.hooks({
  "discount-rates-insert-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveSuccess"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.settings.settingsSaveFailure") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections":{"rates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/client/collections/rates.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountRates: function () {
    return DiscountRates;
  }
});
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 0);
var DiscountSchema;
module.watch(require("../../lib/collections/schemas"), {
  DiscountRates: function (v) {
    DiscountSchema = v;
  }
}, 1);
var DiscountRates = new Mongo.Collection("DiscountRates");
// attach discount code specific schema
DiscountRates.attachSchema(DiscountSchema);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/client/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./collections/rates.js"));
module.watch(require("./settings/rates.html"));
module.watch(require("./settings/rates.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"config.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/lib/collections/schemas/config.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountRatesPackageConfig: function () {
    return DiscountRatesPackageConfig;
  }
});
var DiscountsPackageConfig;
module.watch(require("../../../../../core/discounts/lib/collections/schemas"), {
  DiscountsPackageConfig: function (v) {
    DiscountsPackageConfig = v;
  }
}, 0);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 1);
var DiscountRatesPackageConfig = DiscountsPackageConfig.clone().extend({
  "settings.rates": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.rates.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  }
});
registerSchema("DiscountRatesPackageConfig", DiscountRatesPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/lib/collections/schemas/index.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./config"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./rates"), {
  "*": module.makeNsSetter()
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"rates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/discount-rates/lib/collections/schemas/rates.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DiscountRates: function () {
    return DiscountRates;
  }
});
var Discounts;
module.watch(require("../../../../../core/discounts/lib/collections/schemas/discounts"), {
  Discounts: function (v) {
    Discounts = v;
  }
}, 0);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 1);
var DiscountRates = Discounts.clone().extend({
  discountMethod: {
    label: "Calculation Method",
    type: String,
    defaultValue: "rate"
  }
});
registerSchema("DiscountRates", DiscountRates);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"notifications":{"client":{"templates":{"notifications.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/templates/notifications.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.notifications.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.notifications.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/templates/template.notifications.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("notificationRoute");
Template["notificationRoute"] = new Template("Template.notificationRoute", (function() {
  var view = this;
  return [ HTML.Raw('<div class="nav nav-dashboard">\n      <div class="nav-dashboard-heading">\n        <h3 class="nav-dashboard-title">\n           <span>Notifications</span>\n        </h3>\n      </div>\n    </div>\n    '), HTML.DIV({
    class: "container-fluid-sm"
  }, "\n        ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("notificationRoute"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n    ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notifications.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/templates/notifications.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var NotificationRouteContainer;
module.watch(require("../containers"), {
  NotificationRouteContainer: function (v) {
    NotificationRouteContainer = v;
  }
}, 1);
Template.notificationRoute.helpers({
  notificationRoute: function () {
    return {
      component: NotificationRouteContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/components/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./notificationDropdown"), {
  "default": function (v) {
    exports.NotificationDropdown = v;
  }
}, 0);
module.watch(require("./notification"), {
  "default": function (v) {
    exports.Notification = v;
  }
}, 1);
module.watch(require("./notificationRoute"), {
  "default": function (v) {
    exports.NotificationRoute = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notification.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/components/notification.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
module.watch(require("../styles/main.less"));
module.watch(require("../styles/dropdown.css"));

var Notification =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Notification, _Component);

  function Notification(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.renderButton = _this.renderButton.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = Notification.prototype;

  _proto.renderButton = function () {
    function renderButton(unread) {
      if (unread) {
        return React.createElement("button", {
          className: "btn btn-default notify-btn rui button flat"
        }, React.createElement("i", {
          className: "rui fa fa-bell"
        }), React.createElement("span", {
          className: "badge notify-icon badge-red"
        }, unread));
      }

      return React.createElement("button", {
        className: "btn btn-default rui button flat"
      }, React.createElement("i", {
        className: "rui fa fa-bell"
      }));
    }

    return renderButton;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          notificationList = _props.notificationList,
          handleDelete = _props.handleDelete,
          unread = _props.unread,
          markOneAsRead = _props.markOneAsRead,
          markAllAsRead = _props.markAllAsRead;
      return React.createElement("div", {
        className: "dropdown"
      }, React.createElement("div", {
        className: "notification-icon",
        "data-toggle": "dropdown"
      }, this.renderButton(unread)), React.createElement("div", {
        className: "notify-drop dropdown-menu"
      }, React.createElement(Components.NotificationDropdown, {
        notificationList: notificationList,
        unread: unread,
        handleDelete: handleDelete,
        markAllAsRead: markAllAsRead,
        markOneAsRead: markOneAsRead
      })));
    }

    return render;
  }();

  return Notification;
}(Component);

Notification.propTypes = {
  handleDelete: PropTypes.func,
  markAllAsRead: PropTypes.func,
  markOneAsRead: PropTypes.func,
  notificationList: PropTypes.array,
  unread: PropTypes.number
};
module.exportDefault(Notification);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notificationDropdown.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/components/notificationDropdown.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var NotificationDropdown = function (props) {
  return React.createElement(Components.NotificationRoute, (0, _extends2.default)({}, props, {
    showViewAll: true
  }));
};

NotificationDropdown.propTypes = {
  markAllAsRead: PropTypes.func.isRequired,
  markOneAsRead: PropTypes.func.isRequired,
  moment: PropTypes.func,
  notificationList: PropTypes.array.isRequired,
  unread: PropTypes.number.isRequired
};
registerComponent("NotificationDropdown", NotificationDropdown);
module.exportDefault(NotificationDropdown);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notificationRoute.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/components/notificationRoute.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Components, withMoment, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  withMoment: function (v) {
    withMoment = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Link;
module.watch(require("../../../../core/router/lib"), {
  Link: function (v) {
    Link = v;
  }
}, 4);

var NotificationRoute =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(NotificationRoute, _Component);

  function NotificationRoute() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleNoNotifications = function (notifyArr) {
      if (notifyArr.length <= 0) {
        return React.createElement("li", {
          className: "notification"
        }, React.createElement("div", {
          className: "media"
        }, React.createElement("div", {
          className: "media-body"
        }, React.createElement("strong", {
          className: "notification-title",
          "data-i18n": "notifications.body.noNotifcations"
        }, "No notifications yet"))));
      }

      return null;
    }, _this.handleClick = function (event, notify) {
      if (notify.type === "forAdmin") {
        var actionViewData = Reaction.Apps({
          name: "reaction-orders",
          provides: "dashboard"
        });
        Reaction.showActionView(actionViewData);
      } else {
        Reaction.Router.go(notify.url);
      }

      var markOneAsRead = _this.props.markOneAsRead;
      return markOneAsRead(notify._id);
    }, _this.handleMarkAllAsRead = function () {
      var _this$props = _this.props,
          notificationList = _this$props.notificationList,
          markAllAsRead = _this$props.markAllAsRead;
      markAllAsRead(notificationList);
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = NotificationRoute.prototype;

  _proto.renderDropdownHead = function () {
    function renderDropdownHead() {
      var unread = this.props.unread;
      return React.createElement("div", {
        className: "dropdown-toolbar"
      }, React.createElement("h3", {
        className: "dropdown-toolbar-title"
      }, React.createElement("span", {
        "data-i18n": "notifications.body.recent"
      }, "Recent"), " (", unread, ")"), React.createElement("div", {
        className: "dropdown-toolbar-actions"
      }, React.createElement(Components.Button, {
        label: "Mark all as read",
        i18nKeyLabel: "notifications.body.markAllAsRead",
        onClick: this.handleMarkAllAsRead
      })));
    }

    return renderDropdownHead;
  }();

  _proto.render = function () {
    function render() {
      var _this2 = this;

      var _props = this.props,
          moment = _props.moment,
          notificationList = _props.notificationList;
      return React.createElement("div", {
        className: "notify-bar"
      }, this.renderDropdownHead(), React.createElement("div", {
        className: "dropdown-notify notifications"
      }, this.handleNoNotifications(notificationList), notificationList.map(function (notify, key) {
        var timeNow = moment && moment(notify.timeSent).fromNow() || notify.timeSent.toLocaleString();
        var read = "notification " + notify.status;
        var i18n = "notifications.messages." + notify.type;
        return React.createElement(Components.ListItem, {
          key: key,
          listItemClassName: read,
          onClick: _this2.handleClick,
          value: notify
        }, React.createElement("div", {
          className: "media"
        }, React.createElement("div", {
          className: "media-body"
        }, React.createElement("strong", {
          className: "notification-title",
          "data-i18n": i18n
        }, notify.message), React.createElement("div", {
          className: "notification-meta"
        }, React.createElement("small", {
          className: "timestamp"
        }, timeNow)))));
      })), this.props.showViewAll && React.createElement("div", {
        className: "dropdown-footer text-center"
      }, React.createElement(Link, {
        to: "/notifications",
        "data-i18n": "notifications.body.viewAll"
      }, "View All")));
    }

    return render;
  }();

  return NotificationRoute;
}(Component);

NotificationRoute.propTypes = {
  markAllAsRead: PropTypes.func,
  markOneAsRead: PropTypes.func,
  moment: PropTypes.func,
  notificationList: PropTypes.array,
  showViewAll: PropTypes.bool,
  unread: PropTypes.number
};
registerComponent("NotificationRoute", NotificationRoute, withMoment);
module.exportDefault(withMoment(NotificationRoute));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/containers/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./notification"), {
  "default": function (v) {
    exports.NotificationContainer = v;
  }
}, 0);
module.watch(require("./notificationRoute"), {
  "default": function (v) {
    exports.NotificationRouteContainer = v;
  }
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notification.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/containers/notification.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Notifications;
module.watch(require("../../../../../../lib/collections"), {
  Notifications: function (v) {
    Notifications = v;
  }
}, 4);
var Notification;
module.watch(require("../components"), {
  Notification: function (v) {
    Notification = v;
  }
}, 5);

function composer(props, onData) {
  if (Meteor.subscribe("Notification", Meteor.userId()).ready()) {
    var notificationList = Notifications.find({}, {
      sort: {
        timeSent: -1
      },
      limit: 5
    }).fetch();
    var unread = Notifications.find({
      status: "unread"
    }).count();
    onData(null, {
      notificationList: notificationList,
      unread: unread
    });
  }
}

var handlers = {
  markAllAsRead: function (notificationList) {
    notificationList.map(function (notify) {
      return Meteor.call("notification/markOneAsRead", notify._id);
    });
  },
  markOneAsRead: function (id) {
    Meteor.call("notification/markOneAsRead", id);
  }
};
registerComponent("Notification", Notification, [composeWithTracker(composer, false), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer, false), _withProps(handlers))(Notification));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notificationRoute.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/containers/notificationRoute.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Notifications;
module.watch(require("../../../../../../lib/collections"), {
  Notifications: function (v) {
    Notifications = v;
  }
}, 4);
var NotificationRoute;
module.watch(require("../components"), {
  NotificationRoute: function (v) {
    NotificationRoute = v;
  }
}, 5);
var handlers = {
  markAllAsRead: function (notificationList) {
    notificationList.map(function (notify) {
      return Meteor.call("notification/markOneAsRead", notify._id);
    });
  },
  markOneAsRead: function (id) {
    Meteor.call("notification/markOneAsRead", id);
  }
};

function composer(props, onData) {
  if (Meteor.subscribe("Notification", Meteor.userId()).ready()) {
    var notificationList = Notifications.find({}, {
      sort: {
        timeSent: -1
      }
    }).fetch();
    var unread = Notifications.find({
      status: "unread"
    }).count();
    onData(null, {
      notificationList: notificationList,
      unread: unread
    });
  }
}

registerComponent("NotificationRoute", NotificationRoute, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(NotificationRoute));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"styles":{"dropdown.css":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/styles/dropdown.css                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("meteor/modules").addStyles(
  ".notify-toolbar {\n    height:30px;\n}\n\n.unread {\n  background-color: #777777;\n}\n\n.notify-mark-all {\n    float:right;\n}\n.notify-bar {\n    padding:0px;\n    height:auto;\n}\n.notify-btn {\n  left: 7px;\n  position: relative;\n}\n\n.badge.badge-red {\n    background: #d9534f !important;\n    position: relative !important;\n    min-width: 20px !important;\n    padding: 3px 3px !important;\n    left: -8px;\n    top: -8px !important;\n}\n\n.notify-icon {\n    left: 10px;\n    position: relative;\n}\n\n.dropdown .notify-drop.dropdown-menu {\n  padding: 0px;\n  margin-top: 0px;\n  min-width: 250px !important;\n}\n\nhtml:not(.rtl) .dropdown .notify-drop.dropdown-menu {\n  left: auto;\n  right: 0px;\n}\n\n.rtl .dropdown .notify-drop.dropdown-menu {\n  right: auto !important;\n  left: 0px;\n}\n\n@media (max-width: 480px) {\n  html:not(.rtl) .dropdown .notify-drop.dropdown-menu {\n    right: -75px !important;\n  }\n\n  .rtl .dropdown .notify-drop.dropdown-menu {\n    left: -75px !important;\n  }\n}\n\n@media (max-width: 767px ) {\n    .dropdown .notify-drop.dropdown-menu {\n        padding:0px;\n        left: -20px !important;\n    }\n    html:not(.rtl) .dropdown .notify-drop.dropdown-menu {\n      left: 0px;\n    }\n}\n.notify-drop {\n    min-width:290px !important;\n}\n.dropdown-container {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  float: left;\n  min-width: 200px;\n  max-width: 330px;\n  margin: 2px 0 0;\n  list-style: none;\n  font-size: 14px;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  background-clip: padding-box;\n}\n.dropdown-container > .dropdown-notify {\n  position: static;\n  z-index: 1000;\n  float: none!important;\n  padding: 10px 0;\n  margin: 0;\n  border: 0;\n  background: transparent;\n  border-radius: 0;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  max-height: 330px;\n  overflow-y: auto;\n}\n.dropdown-container > .dropdown-notify + .dropdown-notify {\n  padding-top: 0;\n}\n.dropdown-notify > li > a {\n  overflow: hidden;\n  white-space: nowrap;\n  word-wrap: normal;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  -o-text-overflow: ellipsis;\n  -webkit-transition: none;\n  -o-transition: none;\n  transition: none;\n}\n.dropdown-toggle {\n  cursor: pointer;\n}\n.dropdown-header {\n  white-space: nowrap;\n}\n.open > .dropdown-container > .dropdown-notify,\n.open > .dropdown-container {\n  display: block;\n}\n.dropdown-toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 6px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 12px;\n  background-color: #fff;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px 4px 0 0;\n}\n.dropdown-toolbar > .form-group {\n  margin: 5px -10px;\n}\n.dropdown-toolbar .dropdown-toolbar-actions {\n  float: right;\n}\n.dropdown-toolbar .dropdown-toolbar-title {\n  margin: 0;\n  color:#262626;\n  font-size: 14px;\n}\n.dropdown-footer {\n  padding: 5px 20px;\n  background-color:#eee;\n  border-top: 1px solid #ccc;\n  border-top: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 0 0 4px 4px;\n}\n.anchor-block small {\n  display: none;\n}\n@media (min-width: 992px) {\n  .anchor-block small {\n    display: block;\n    font-weight: normal;\n    color: #777777;\n  }\n  .dropdown-notify > li > a.anchor-block {\n    padding-top: 6px;\n    padding-bottom: 6px;\n  }\n}\n@media (min-width: 992px) {\n  .dropdown.hoverable:hover > ul {\n    display: block;\n  }\n}\n.dropdown-position-topright {\n  top: auto;\n  right: 0;\n  bottom: 100%;\n  left: auto;\n  margin-bottom: 2px;\n}\n.dropdown-position-topleft {\n  top: auto;\n  right: auto;\n  bottom: 100%;\n  left: 0;\n  margin-bottom: 2px;\n}\n.dropdown-position-bottomright {\n  right: 0;\n  left: auto;\n}\n.dropmenu-item-label {\n  white-space: nowrap;\n}\n.dropmenu-item-content {\n  position: absolute;\n  text-align: right;\n  max-width: 60px;\n  right: 20px;\n  color: #777777;\n  overflow: hidden;\n  white-space: nowrap;\n  word-wrap: normal;\n  -o-text-overflow: ellipsis;\n  text-overflow: ellipsis;\n}\nsmall.dropmenu-item-content {\n  line-height: 20px;\n}\n.dropdown-notify > li > a.dropmenu-item {\n  position: relative;\n  padding-right: 66px;\n}\n.dropdown-submenu .dropmenu-item-content {\n  right: 40px;\n}\n.dropdown-notify > li.dropdown-submenu > a.dropmenu-item {\n  padding-right: 86px;\n}\n.dropdown-inverse .dropdown-notify {\n  background-color: rgba(0, 0, 0, 0.8);\n  border: 1px solid rgba(0, 0, 0, 0.9);\n}\n.dropdown-inverse .dropdown-notify .divider {\n  height: 1px;\n  margin: 9px 0;\n  overflow: hidden;\n  background-color: #2b2b2b;\n}\n.dropdown-inverse .dropdown-notify > li > a {\n  color: #cccccc;\n}\n.dropdown-inverse .dropdown-notify > li > a:hover,\n.dropdown-inverse .dropdown-notify > li > a:focus {\n  color: #fff;\n  background-color: #262626;\n}\n.dropdown-inverse .dropdown-notify > .active > a,\n.dropdown-inverse .dropdown-notify > .active > a:hover,\n.dropdown-inverse .dropdown-notify > .active > a:focus {\n  color: #fff;\n  background-color: #337ab7;\n}\n.dropdown-inverse .dropdown-notify > .disabled > a,\n.dropdown-inverse .dropdown-notify > .disabled > a:hover,\n.dropdown-inverse .dropdown-notify > .disabled > a:focus {\n  color: #777777;\n}\n.dropdown-inverse .dropdown-header {\n  color: #777777;\n}\n.table > thead > tr > th.col-actions {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.table > thead > tr > th.col-actions .dropdown-toggle {\n  color: #777777;\n}\n.notifications {\n  list-style: none;\n  padding: 0;\n  margin-bottom:0px !important;\n}\n.notification {\n  display: block;\n  padding: 9.6px 12px;\n  border-bottom: 1px solid #eeeeee;\n  color: #333333;\n  cursor:pointer;\n  text-decoration: none;\n}\n.unread {\n  background-color: #F4F4FF !important;\n}\n.read {\n  background-color: #ffffff !important;\n}\n.notification:last-child {\n  border-bottom: 0;\n}\n.notification:hover,\n.notification.active:hover {\n  background-color: #f9f9f9;\n}\n.notification.active {\n  background-color: #f4f4f4;\n}\n.notification-title {\n  font-size: 15px;\n  margin-bottom: 0;\n}\n.notification-desc {\n  margin-bottom: 0;\n}\n.notification-meta {\n  color: #777777;\n}\na.notification:hover {\n  text-decoration: none;\n}\n.dropdown-notifications > .dropdown-container,\n.dropdown-notifications > .dropdown-notify {\n  width: 450px;\n  max-width: 450px;\n}\n.dropdown-notifications .dropdown-notify {\n  padding: 0;\n}\n.dropdown-notifications .dropdown-toolbar,\n.dropdown-notifications .dropdown-footer {\n  padding: 9.6px 12px;\n}\n.dropdown-notifications .dropdown-toolbar {\n  background: #fff;\n}\n.dropdown-notifications .dropdown-footer {\n  background: #eeeeee;\n}\n.notification-icon:after {\n  position: absolute;\n  content: attr(data-count);\n  margin-left: -6.8775px;\n  margin-top: -6.8775px;\n  padding: 0 4px;\n  min-width: 13.755px;\n  height: 13.755px;\n  line-height: 13.755px;\n  background: red;\n  border-radius: 10px;\n  color: #fff;\n  text-align: center;\n  vertical-align: middle;\n  font-size: 11.004px;\n  font-weight: 600;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n.notification .media-body {\n  padding-top: 5.6px;\n}\n.btn-lg .notification-icon:after {\n  margin-left: -8.253px;\n  margin-top: -8.253px;\n  min-width: 16.506px;\n  height: 16.506px;\n  line-height: 16.506px;\n  font-size: 13.755px;\n}\n.btn-xs .notification-icon:after {\n  content: '';\n  margin-left: -4.1265px;\n  margin-top: -2.06325px;\n  min-width: 6.25227273px;\n  height: 6.25227273px;\n  line-height: 6.25227273px;\n  padding: 0;\n}\n.btn-xs .notification-icon {\n  margin-right: 3.43875px;\n}\n"
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.less":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/styles/main.less                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./main.less.css"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.less.css":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/styles/main.less.css                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("meteor/modules").addStyles(
  "@import url(//fonts.googleapis.com/css?family=Source+Sans+Pro:400,400i,500,700,800);\n.rui.navbar > .navbar-notification {\n  position: relative;\n}\n@media screen and (max-width: 767px) {\n  .rui.navbar > .navbar-notification {\n    display: none;\n  }\n}\n.rui.navbar .notification-icon {\n  display: -webkit-flex;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: -ms-flex;\n  display: flex;\n  -webkit-align-items: center;\n  -moz-align-items: center;\n  -ms-align-items: center;\n  align-items: center;\n  -webkit-flex: 0 0 auto;\n  -moz-flex: 0 0 auto;\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  height: 55px;\n  padding: 0px 14px;\n  cursor: pointer;\n}\n@media screen and (max-width: 767px) {\n  .rui.navbar .notification-icon {\n    padding: 0px;\n  }\n}\n.rui.navbar .notification-icon:after {\n  background: none;\n}\n.rui.navbar .notification-icon:hover {\n  background-color: #e6e6e6;\n  border-color: #d9d9d9;\n}\n"
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/notifications/client/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./styles/main.less"));
module.watch(require("./templates/notifications.html"));
module.watch(require("./templates/notifications.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"payments-authnet":{"client":{"checkout":{"authnet.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/checkout/authnet.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.authnet.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.authnet.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/checkout/template.authnet.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("authnetPaymentForm");
Template["authnetPaymentForm"] = new Template("Template.authnetPaymentForm", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      schema: Spacebars.call(view.lookup("AuthNetPayment")),
      id: Spacebars.call("authnet-payment-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "payerName"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "payerName"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("payerName"),
          value: Spacebars.call(view.lookup("cartPayerName"))
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "payerName"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "payerName"
          }));
        })), "\n        " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cardNumber"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cardNumber"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cardNumber"),
          placeholder: Spacebars.call("XXXX XXXX XXXX XXXX")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cardNumber"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cardNumber"
          }));
        })), "\n        " ];
      }), "\n    "), "\n  "), "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireMonth"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireMonth"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireMonth"),
          options: Spacebars.call(Spacebars.dataMustache(view.lookup("monthOptions"), false)),
          firstOption: Spacebars.call(Spacebars.dataMustache(view.lookup("i18n"), "app.monthOptions", "Choose month")),
          placeholder: Spacebars.call("Exp. Month")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireMonth"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireMonth"
          }));
        })), "\n        " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireYear"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireYear"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireYear"),
          options: Spacebars.call(Spacebars.dataMustache(view.lookup("yearOptions"), false)),
          firstOption: Spacebars.call(Spacebars.dataMustache(view.lookup("i18n"), "app.yearOptions", "Choose year")),
          placeholder: Spacebars.call("Exp. Year")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireYear"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireYear"
          }));
        })), "\n        " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-3 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cvv"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cvv"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cvv"),
          placeholder: Spacebars.call("CVV")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cvv"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cvv"
          }));
        })), "\n        " ];
      }), "\n    "), "\n  "), "\n\n  ", HTML.DIV({
        class: "alert alert-danger hidden"
      }, "Oh! Snap!"), "\n  ", HTML.BUTTON({
        type: "submit",
        class: "rui btn btn-lg btn-cta btn-block"
      }, "\n    ", HTML.SPAN({
        id: "btn-complete-order"
      }, "Complete your order"), "\n    ", HTML.I({
        class: "fa fa-spinner fa-spin hidden",
        id: "btn-processing"
      }), "\n  "), "\n\n  " ];
    });
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"authnet.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/checkout/authnet.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var Reaction, Logger;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 3);
var getCardType;
module.watch(require("../../../../../../client/modules/core/helpers/globals"), {
  getCardType: function (v) {
    getCardType = v;
  }
}, 4);
var Cart, Shops, Packages;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 5);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 6);
var AuthNetPayment;
module.watch(require("../../lib/collections/schemas"), {
  AuthNetPayment: function (v) {
    AuthNetPayment = v;
  }
}, 7);
var AuthNet;
module.watch(require("../api"), {
  AuthNet: function (v) {
    AuthNet = v;
  }
}, 8);
module.watch(require("./authnet.html"));
// used to track asynchronous submitting for UI changes
var submitting = false;

function uiEnd(tpl, buttonText) {
  tpl.$(":input").removeAttr("disabled");
  tpl.$("#btn-complete-order").text(buttonText);
  tpl.$("#btn-processing").addClass("hidden");
  submitting = false;
}

function paymentAlert(errorMessage) {
  return $(".alert").removeClass("hidden").text(errorMessage);
}

function hidePaymentAlert() {
  $(".alert").addClass("hidden").text("");
}

function handleAuthNetSubmitError(error) {
  // TODO - this error handling needs to be reworked for the Authorize.net API
  paymentAlert(error);
  Logger.fatal(error);
}

Template.authnetPaymentForm.helpers({
  AuthNetPayment: function () {
    return AuthNetPayment;
  }
});
AutoForm.addHooks("authnet-payment-form", {
  onSubmit: function (doc) {
    // Process form (pre-validated by autoform)
    submitting = true;
    var tpl = this.template; // regEx in the schema ensures that there will be exactly two names with one space between

    var payerNamePieces = doc.payerName.split(" ");
    var form = {
      first_name: payerNamePieces[0],
      last_name: payerNamePieces[1],
      number: doc.cardNumber,
      expire_date: doc.expireMonth.toString() + doc.expireYear.slice(-2),
      cvv2: doc.cvv,
      type: getCardType(doc.cardNumber)
    }; // Reaction only stores type and 4 digits

    var storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + " " + doc.cardNumber.slice(-4);
    hidePaymentAlert();
    var cardInfo = {
      cardNumber: doc.cardNumber,
      expirationYear: doc.expireYear,
      expirationMonth: doc.expireMonth,
      cvv2: doc.cvv
    };
    var paymentInfo = {
      total: Cart.findOne().getTotal(),
      currency: Shops.findOne().currency
    }; // Submit for processing

    AuthNet.authorize(cardInfo, paymentInfo, function (error, transaction) {
      if (error || !transaction) {
        handleAuthNetSubmitError(error);
        uiEnd(tpl, "Resubmit payment");
      } else {
        var normalizedMode = "authorize";
        var normalizedStatus = "failed";
        var transId = transaction.transactionId[0].toString();
        Meteor.subscribe("Packages", Reaction.getShopId());
        var packageData = Packages.findOne({
          name: "reaction-auth-net",
          shopId: Reaction.getShopId()
        });

        if (transaction._original.responseCode[0] === "1") {
          normalizedStatus = "created";
        }

        var paymentMethod = {
          processor: "AuthNet",
          paymentPackageId: packageData._id,
          paymentSettingsKey: packageData.registry[0].settingsKey,
          storedCard: storedCard,
          method: "credit",
          transactionId: transId,
          amount: +paymentInfo.total,
          status: normalizedStatus,
          mode: normalizedMode,
          createdAt: new Date(),
          updatedAt: new Date(),
          transactions: [transaction._original]
        };
        Meteor.call("cart/submitPayment", paymentMethod);
        uiEnd(tpl, "Resubmit payment");
      }
    });
    return false;
  },
  beginSubmit: function () {
    this.template.$(":input").attr("disabled", true);
    this.template.$("#btn-complete-order").text("Submitting ");
    return this.template.$("#btn-processing").removeClass("hidden");
  },
  endSubmit: function () {
    // Hide processing UI here if form was not valid
    if (!submitting) {
      uiEnd(this.template, "Complete your order");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"authnet.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/settings/authnet.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.authnet.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.authnet.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/settings/template.authnet.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("authnetSettings");
Template["authnetSettings"] = new Template("Template.authnetSettings", (function() {
  var view = this;
  return [ Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "api_id"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "alert alert-info"
    }, "\n      ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.authorizenetCredentials"
    }, "Don't have a Authorize.net API Login ID and Transaction Key?"), "\n      ", HTML.A({
      href: "https://sandbox.authorize.net/",
      target: "_blank"
    }, "\n        ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.authorizenetCredentialURL"
    }, "Get them here."), "\n      "), "\n    "), "\n    " ];
  }), "\n\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("AuthNetPackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("authnet-update-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.reaction-auth-net.support"),
          options: Spacebars.call("allowed"),
          noselect: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.mode"),
          type: Spacebars.call("boolean-select"),
          trueLabel: Spacebars.call("Live - Production Mode"),
          falseLabel: Spacebars.call("Test - Sandbox Mode")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.api_id")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.transaction_key")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n\n      ", HTML.BUTTON({
        type: "submit",
        class: "btn btn-primary pull-right"
      }, HTML.SPAN({
        "data-i18n": "app.saveChanges"
      }, "Save Changes")), "\n      " ];
    });
  }), "\n    ") ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"authnet.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/settings/authnet.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 1);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 2);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var AuthNetPackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  AuthNetPackageConfig: function (v) {
    AuthNetPackageConfig = v;
  }
}, 4);
module.watch(require("./authnet.html"));
Template.authnetSettings.helpers({
  AuthNetPackageConfig: function () {
    return AuthNetPackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-auth-net",
      shopId: Reaction.getShopId()
    });
  }
});
AutoForm.hooks({
  "authnet-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.saveSuccess"), "success");
    },
    onError: function (error) {
      return Alerts.toast(i18next.t("admin.settings.saveFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"api":{"authnet.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/api/authnet.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  AuthNet: function () {
    return AuthNet;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var AuthNet = {
  authorize: function (cardInfo, paymentInfo, callback) {
    Meteor.call("authnetSubmit", "authorizeTransaction", cardInfo, paymentInfo, callback);
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/api/index.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./authnet"), {
  AuthNet: function (v) {
    exports.AuthNet = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/client/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkout/authnet"));
module.watch(require("./settings/authnet"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"authnet.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/lib/collections/schemas/authnet.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  AuthNetPackageConfig: function () {
    return AuthNetPackageConfig;
  },
  AuthNetPayment: function () {
    return AuthNetPayment;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);
var AuthNetPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.mode": {
    type: Boolean,
    defaultValue: false
  },
  "settings.reaction-auth-net": {
    type: Object,
    defaultValue: {}
  },
  "settings.reaction-auth-net.support": {
    type: Array,
    label: "Payment provider supported methods"
  },
  "settings.reaction-auth-net.support.$": {
    type: String,
    allowedValues: ["Authorize", "De-authorize", "Capture"]
  },
  "settings.api_id": {
    type: String,
    label: "API Login ID"
  },
  "settings.transaction_key": {
    type: String,
    label: "Transaction Key"
  }
});
registerSchema("AuthNetPackageConfig", AuthNetPackageConfig);
var AuthNetPayment = new SimpleSchema({
  payerName: {
    type: String,
    label: "Cardholder name"
  },
  cardNumber: {
    type: String,
    label: "Card number",
    min: 12,
    max: 19
  },
  expireMonth: {
    type: String,
    label: "Expiration month",
    max: 2
  },
  expireYear: {
    type: String,
    label: "Expiration year",
    max: 4
  },
  cvv: {
    type: String,
    label: "CVV",
    max: 4
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("AuthNetPayment", AuthNetPayment);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-authnet/lib/collections/schemas/index.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./authnet"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"payments-braintree":{"client":{"checkout":{"braintree.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/checkout/braintree.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.braintree.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.braintree.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/checkout/template.braintree.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("braintreePaymentForm");
Template["braintreePaymentForm"] = new Template("Template.braintreePaymentForm", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      schema: Spacebars.call(view.lookup("BraintreePayment")),
      id: Spacebars.call("braintree-payment-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "payerName"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n      ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "payerName"
        }));
      })), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("payerName"),
          value: Spacebars.call(view.lookup("cartPayerName"))
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n      ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "payerName"
        }));
      }, function() {
        return [ "\n      ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "payerName"
          }));
        })), "\n      " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cardNumber"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n      ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cardNumber"
        }));
      })), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cardNumber"),
          placeholder: Spacebars.call("XXXX XXXX XXXX XXXX")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n      ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cardNumber"
        }));
      }, function() {
        return [ "\n      ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cardNumber"
          }));
        })), "\n      " ];
      }), "\n    "), "\n  "), "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireMonth"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n      ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireMonth"
        }));
      })), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireMonth"),
          options: Spacebars.call(view.lookup("monthOptions")),
          placeholder: Spacebars.call("Exp. Month")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n      ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireMonth"
        }));
      }, function() {
        return [ "\n      ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireMonth"
          }));
        })), "\n      " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireYear"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n      ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireYear"
        }));
      })), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireYear"),
          options: Spacebars.call(view.lookup("yearOptions")),
          placeholder: Spacebars.call("Exp. Year")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n      ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireYear"
        }));
      }, function() {
        return [ "\n      ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireYear"
          }));
        })), "\n      " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-3 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cvv"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n      ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cvv"
        }));
      })), "\n      ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cvv"),
          placeholder: Spacebars.call("CVV")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n      ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cvv"
        }));
      }, function() {
        return [ "\n      ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cvv"
          }));
        })), "\n      " ];
      }), "\n    "), "\n  "), "\n\n  ", HTML.DIV({
        class: "alert alert-danger hidden"
      }, "Oh! Snap!"), "\n  ", HTML.BUTTON({
        type: "submit",
        class: "rui btn btn-lg btn-cta btn-block"
      }, "\n    ", HTML.SPAN({
        id: "btn-complete-order"
      }, "Complete your order"), "\n    ", HTML.I({
        class: "fa fa-spinner fa-spin hidden",
        id: "btn-processing"
      }), "\n  "), "\n\n  " ];
    });
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"braintree.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/checkout/braintree.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 2);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 3);
var getCardType;
module.watch(require("../../../../../../client/modules/core/helpers/globals"), {
  getCardType: function (v) {
    getCardType = v;
  }
}, 4);
var Cart, Shops, Packages;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 5);
var Braintree;
module.watch(require("../api/braintree"), {
  Braintree: function (v) {
    Braintree = v;
  }
}, 6);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var BraintreePayment;
module.watch(require("../../lib/collections/schemas"), {
  BraintreePayment: function (v) {
    BraintreePayment = v;
  }
}, 8);
module.watch(require("./braintree.html"));
Template.braintreePaymentForm.helpers({
  BraintreePayment: function () {
    return BraintreePayment;
  }
});

function uiEnd(template, buttonText) {
  template.$(":input").removeAttr("disabled");
  template.$("#btn-complete-order").text(buttonText);
  return template.$("#btn-processing").addClass("hidden");
}

function paymentAlert(errorMessage) {
  return $(".alert").removeClass("hidden").text(errorMessage);
}

function hidePaymentAlert() {
  return $(".alert").addClass("hidden").text("");
}

function handleBraintreeSubmitError(error) {
  var serverError = error !== null ? error.message : undefined;

  if (serverError) {
    return paymentAlert("Server Error " + serverError);
  } else if (error) {
    return paymentAlert("Oops! Credit card is invalid. Please check your information and try again.");
  }
}

var submitting = false;

function submitToBrainTree(doc, template) {
  submitting = true;
  hidePaymentAlert();
  var cardData = {
    name: doc.payerName,
    number: doc.cardNumber,
    expirationMonth: doc.expireMonth,
    expirationYear: doc.expireYear,
    cvv2: doc.cvv,
    type: getCardType(doc.cardNumber)
  };
  var cartTotal = Cart.findOne().getTotal();
  var currencyCode = Shops.findOne().currency;
  Braintree.authorize(cardData, {
    total: cartTotal,
    currency: currencyCode
  }, function (error, results) {
    var paymentMethod;
    submitting = false;

    if (error) {
      handleBraintreeSubmitError(error);
      uiEnd(template, "Resubmit payment");
    } else if (results.saved === true) {
      var tx = results && results.response && results.response.transaction;
      var normalizedStatus = normalizeState(tx.status);
      var normalizedMode = normalizeMode(tx.status);
      Meteor.subscribe("Packages", Reaction.getShopId());
      var packageData = Packages.findOne({
        name: "reaction-braintree",
        shopId: Reaction.getShopId()
      });
      var storedCard = tx.creditCard.cardType.toUpperCase() + " " + tx.creditCard.last4;
      paymentMethod = {
        processor: "Braintree",
        storedCard: storedCard,
        paymentPackageId: packageData._id,
        paymentSettingsKey: packageData.registry[0].settingsKey,
        method: "credit",
        transactionId: tx.id,
        amount: parseFloat(tx.amount),
        status: normalizedStatus,
        mode: normalizedMode,
        createdAt: new Date(),
        updatedAt: new Date(),
        transactions: []
      };
      paymentMethod.transactions.push(results.response);
      Meteor.call("cart/submitPayment", paymentMethod);
    } else {
      handleBraintreeSubmitError(results.response.message);
      uiEnd(template, "Resubmit payment");
    }
  });
}

AutoForm.addHooks("braintree-payment-form", {
  onSubmit: function (doc) {
    submitToBrainTree(doc, this.template);
    return false;
  },
  beginSubmit: function () {
    this.template.$(":input").attr("disabled", true);
    this.template.$("#btn-complete-order").text("Submitting ");
    return this.template.$("#btn-processing").removeClass("hidden");
  },
  endSubmit: function () {
    if (!submitting) {
      return uiEnd(this.template, "Complete your order");
    }
  }
});
var normalizedStates = {
  authorization_expired: "expired",
  authorized: "created",
  authorizing: "pending",
  settlement_pending: "pending",
  settlement_confirmed: "settled",
  settlement_declined: "failed",
  failed: "failed",
  gateway_rejected: "failed",
  processor_declined: "failed",
  settled: "settled",
  settling: "pending",
  submitted_for_settlement: "pending",
  voided: "voided",
  "default": "failed"
};

function normalizeState(stateString) {
  var normalizedState = normalizedStates[stateString];

  if (typeof normalizedState === "undefined") {
    normalizedState = normalizedStates.default;
  }

  return normalizedState;
}

var normalizedModes = {
  settled: "capture",
  settling: "capture",
  submitted_for_settlement: "capture",
  settlement_confirmed: "capture",
  authorized: "authorize",
  authorizing: "authorize",
  "default": "capture"
};

function normalizeMode(modeString) {
  var normalizedMode = normalizedModes[modeString];

  if (typeof normalizedMode === "undefined") {
    normalizedMode = normalizedModes.default;
  }

  return normalizedMode;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"braintree.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/settings/braintree.html                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.braintree.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.braintree.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/settings/template.braintree.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("braintreeSettings");
Template["braintreeSettings"] = new Template("Template.braintreeSettings", (function() {
  var view = this;
  return [ Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "merchant_id"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "alert alert-info"
    }, "\n      ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.braintreeCredentials"
    }, "Add credentials to enable"), "\n      ", HTML.A({
      href: "https://www.braintreepayments.com/",
      target: "_blank"
    }, "Braintree"), "\n    "), "\n    " ];
  }), "\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("BraintreePackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("braintree-update-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.merchant_id")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.public_key")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.private_key")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.reaction-braintree.support"),
          options: Spacebars.call("allowed"),
          noselect: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.mode"),
          type: Spacebars.call("boolean-select"),
          trueLabel: Spacebars.call("Live - Production Mode"),
          falseLabel: Spacebars.call("Testing - Sandbox Mode")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", HTML.BUTTON({
        type: "submit",
        class: "btn btn-primary pull-right"
      }, HTML.SPAN({
        "data-i18n": "app.saveChanges"
      }, "Save Changes")), "\n      " ];
    });
  }), "\n    ") ];
}));

Template.__checkName("braintree");
Template["braintree"] = new Template("Template.braintree", (function() {
  var view = this;
  return HTML.DIV({
    class: "container-fluid-sm flex"
  }, "\n    ", HTML.DIV({
    class: "flex-item"
  }, "\n      ", HTML.DIV({
    class: "panel panel-default"
  }, "\n        ", HTML.Raw('<div class="panel-heading">\n          <div class="panel-title">BrainTree Checkout</div>\n        </div>'), "\n        ", HTML.Raw('<div class="list-group">\n          <div class="list-group-item">\n              <span>API Client ID: <button type="button" class="btn btn-link" data-event-action="showBraintreeSettings">**********</button></span>\n          </div>\n        </div>'), "\n        ", HTML.DIV({
    class: "panel-footer"
  }, "\n          ", HTML.Raw('<div class="left"></div>'), "\n          ", HTML.DIV({
    class: "right"
  }, "\n\n            ", HTML.DIV({
    class: "panel-footer-item"
  }, "\n              ", Blaze.If(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "merchant_id"));
  }, function() {
    return [ "\n                ", HTML.I({
      class: "fa fa-check-circle fa-2x text-success"
    }), "\n              " ];
  }, function() {
    return [ "\n                ", HTML.I({
      class: "fa fa-minus-circle fa-2x text-muted"
    }), "\n              " ];
  }), "\n            "), "\n\n            ", HTML.Raw('<div class="panel-footer-item">\n              <button class="btn btn-default" data-event-action="showBraintreeSettings">\n                <i class="fa fa-gear"></i>\n              </button>\n            </div>'), "\n\n          "), "\n        "), "\n      "), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"braintree.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/settings/braintree.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);
var BraintreePackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  BraintreePackageConfig: function (v) {
    BraintreePackageConfig = v;
  }
}, 4);
module.watch(require("./braintree.html"));
Template.braintreeSettings.helpers({
  BraintreePackageConfig: function () {
    return BraintreePackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-braintree"
    });
  }
});
Template.braintree.helpers({
  packageData: function () {
    var packageData = Packages.findOne({
      name: "reaction-braintree"
    });
    return packageData;
  }
});
Template.braintree.events({
  "click [data-event-action=showBraintreeSettings]": function () {
    Reaction.showActionView();
  }
});
AutoForm.hooks({
  "braintree-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.saveSuccess"), "success");
    },
    onError: function (error) {
      return Alerts.toast(i18next.t("admin.settings.saveFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"api":{"braintree.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/api/braintree.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Braintree: function () {
    return Braintree;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Braintree = {
  // authorize submits a payment authorization to Braintree
  authorize: function (cardData, paymentData, callback) {
    Meteor.call("braintreeSubmit", "authorize", cardData, paymentData, callback);
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/client/index.js                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkout/braintree"));
module.watch(require("./settings/braintree"));
module.watch(require("./api/braintree"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"braintree.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/lib/collections/schemas/braintree.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  BraintreePackageConfig: function () {
    return BraintreePackageConfig;
  },
  BraintreePayment: function () {
    return BraintreePayment;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);
var BraintreePackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.mode": {
    type: Boolean,
    defaultValue: false
  },
  "settings.merchant_id": {
    type: String,
    label: "Merchant ID",
    optional: false
  },
  "settings.public_key": {
    type: String,
    label: "Public Key",
    optional: false
  },
  "settings.private_key": {
    type: String,
    label: "Private Key",
    optional: false
  },
  "settings.reaction-braintree": {
    type: Object,
    defaultValue: {}
  },
  "settings.reaction-braintree.support": {
    type: Array,
    label: "Payment provider supported methods"
  },
  "settings.reaction-braintree.support.$": {
    type: String,
    allowedValues: ["Authorize", "De-authorize", "Capture", "Refund"]
  }
});
registerSchema("BraintreePackageConfig", BraintreePackageConfig);
var BraintreePayment = new SimpleSchema({
  payerName: {
    type: String,
    label: "Cardholder name"
  },
  cardNumber: {
    type: String,
    min: 12,
    max: 19,
    label: "Card number"
  },
  expireMonth: {
    type: String,
    max: 2,
    label: "Expiration month"
  },
  expireYear: {
    type: String,
    max: 4,
    label: "Expiration year"
  },
  cvv: {
    type: String,
    max: 4,
    label: "CVV"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("BraintreePayment", BraintreePayment);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-braintree/lib/collections/schemas/index.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./braintree"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"payments-stripe":{"client":{"checkout":{"stripe.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/checkout/stripe.html                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.stripe.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.stripe.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/checkout/template.stripe.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("stripePaymentForm");
Template["stripePaymentForm"] = new Template("Template.stripePaymentForm", (function() {
  var view = this;
  return Blaze._TemplateWith(function() {
    return {
      schema: Spacebars.call(view.lookup("StripePayment")),
      id: Spacebars.call("stripe-payment-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "payerName"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "payerName"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("payerName"),
          value: Spacebars.call(view.lookup("cartPayerName"))
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "payerName"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "payerName"
          }));
        })), "\n        " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cardNumber"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cardNumber"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cardNumber"),
          placeholder: Spacebars.call("XXXX XXXX XXXX XXXX")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cardNumber"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cardNumber"
          }));
        })), "\n        " ];
      }), "\n    "), "\n  "), "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireMonth"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireMonth"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireMonth"),
          options: Spacebars.call(Spacebars.dataMustache(view.lookup("monthOptions"), false)),
          firstOption: Spacebars.call(Spacebars.dataMustache(view.lookup("i18n"), "app.monthOptions", "Choose month")),
          placeholder: Spacebars.call("Exp. Month")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireMonth"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireMonth"
          }));
        })), "\n        " ];
      }), "\n    "), "\n\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-6 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "expireYear"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "expireYear"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("expireYear"),
          options: Spacebars.call(Spacebars.dataMustache(view.lookup("yearOptions"), false)),
          firstOption: Spacebars.call(Spacebars.dataMustache(view.lookup("i18n"), "app.yearOptions", "Choose year")),
          placeholder: Spacebars.call("Exp. Year")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "expireYear"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "expireYear"
          }));
        })), "\n        " ];
      }), "\n    "), "\n\n  "), "\n  ", HTML.DIV({
        class: "row"
      }, "\n    ", HTML.DIV({
        class: function() {
          return [ "col-sm-12 col-lg-3 form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "cvv"
            }));
          }, function() {
            return " has-error";
          }) ];
        }
      }, "\n        ", HTML.LABEL({
        class: "control-label"
      }, Blaze.View("lookup:afFieldLabelText", function() {
        return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
          name: "cvv"
        }));
      })), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("cvv"),
          placeholder: Spacebars.call("CVV")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
          name: "cvv"
        }));
      }, function() {
        return [ "\n        ", HTML.SPAN({
          class: "help-block"
        }, Blaze.View("lookup:afFieldMessage", function() {
          return Spacebars.mustache(view.lookup("afFieldMessage"), Spacebars.kw({
            name: "cvv"
          }));
        })), "\n        " ];
      }), "\n    "), "\n  "), "\n\n  ", HTML.DIV({
        class: "alert alert-danger hidden"
      }, "Oh! Snap!"), "\n  ", HTML.BUTTON({
        type: "submit",
        class: "rui btn btn-lg btn-cta btn-block btn-complete-order"
      }, "\n    ", HTML.SPAN({
        id: "btn-complete-order",
        "data-i18n": "checkoutPayment.completeYourOrder"
      }, "Complete your order"), "\n    ", HTML.I({
        class: "fa fa-spinner fa-spin hidden",
        id: "btn-processing"
      }), "\n  "), "\n\n  " ];
    });
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripe.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/checkout/stripe.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 2);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 3);
var getCardType;
module.watch(require("../../../../../../client/modules/core/helpers/globals"), {
  getCardType: function (v) {
    getCardType = v;
  }
}, 4);
var Router;
module.watch(require("../../../../../../client/api"), {
  Router: function (v) {
    Router = v;
  }
}, 5);
var Cart, Orders;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Orders: function (v) {
    Orders = v;
  }
}, 6);
var StripePayment;
module.watch(require("../../lib/collections/schemas"), {
  StripePayment: function (v) {
    StripePayment = v;
  }
}, 7);
var submitting = false; //
// local helpers
//

function uiEnd(template, buttonText) {
  template.$(":input").removeAttr("disabled");
  template.$("#btn-complete-order").text(buttonText);
  return template.$("#btn-processing").addClass("hidden");
}

function paymentAlert(errorMessage) {
  return $(".alert").removeClass("hidden").text(errorMessage);
}

function hidePaymentAlert() {
  return $(".alert").addClass("hidden").text("");
}

function handleStripeSubmitError(error) {
  // Match error on card number. Not submitted to stripe
  if (error && error.reason && error.reason === "Match failed") {
    var message = "Your card number is invalid. Please check the number and try again";
    return paymentAlert(message);
  } // this is a server message with a client-sanitized message


  if (error && error.message) {
    return paymentAlert(error.message);
  }
} // Validation helpers


function luhnValid(x) {
  return _toConsumableArray(x).reverse().reduce(function (sum, c, i) {
    var d = parseInt(c, 10);

    if (i % 2 !== 0) {
      d *= 2;
    }

    if (d > 9) {
      d -= 9;
    }

    return sum + d;
  }, 0) % 10 === 0;
}

function validCardNumber(x) {
  return /^[0-9]{13,16}$/.test(x) && luhnValid(x);
}

function validExpireMonth(x) {
  return /^[0-9]{1,2}$/.test(x);
}

function validExpireYear(x) {
  return /^[0-9]{4}$/.test(x);
}

function validCVV(x) {
  return /^[0-9]{3,4}$/.test(x);
} //
// Template helpers
//


Template.stripePaymentForm.helpers({
  StripePayment: function () {
    return StripePayment;
  }
}); // This creates an autorun block that monitors the CompletedCartOrder subscription
// and once an order for the cart we're checking out with is available,
// We trigger a Router.go to the cart/completed page.

Template.stripePaymentForm.onCreated(function () {
  // we need to cache the current "checkoutCart" because a new cart is created during copyCartToOrder
  var checkoutCart = Cart.findOne({
    userId: Meteor.userId()
  });
  var orderSub = Meteor.subscribe("CompletedCartOrder", Meteor.userId(), checkoutCart._id); // Watch the orders subscription, once the order is created redirect to cart/completed

  this.autorun(function () {
    if (orderSub.ready()) {
      var order = Orders.findOne({
        cartId: checkoutCart._id
      });

      if (order) {
        Router.go("cart/completed", {}, {
          _id: checkoutCart._id
        });
      }
    }
  });
}); //
// autoform handling
//

AutoForm.addHooks("stripe-payment-form", {
  onSubmit: function (doc) {
    submitting = true;
    hidePaymentAlert();
    var template = this.template;
    var cart = Cart.findOne({
      userId: Meteor.userId()
    }); // validate card data
    // also validated on server

    if (!validCardNumber(doc.cardNumber)) {
      submitting = false;
      var error = {
        message: "Your card number is incorrect"
      };
      handleStripeSubmitError(error);
      uiEnd(template, "Resubmit payment");
      return false;
    }

    if (!validExpireMonth(doc.expireMonth) || !validExpireYear(doc.expireYear)) {
      submitting = false;
      var _error = {
        message: "Your expiration date is incorrect"
      };
      handleStripeSubmitError(_error);
      uiEnd(template, "Resubmit payment");
      return false;
    }

    if (!validCVV(doc.cvv)) {
      submitting = false;
      var _error2 = {
        message: "Your cvv is incorrect"
      };
      handleStripeSubmitError(_error2);
      uiEnd(template, "Resubmit payment");
      return false;
    }

    var cardData = {
      name: doc.payerName,
      number: doc.cardNumber,
      expire_month: doc.expireMonth,
      expire_year: doc.expireYear,
      cvv2: doc.cvv,
      type: getCardType(doc.cardNumber)
    }; // Use apply instead of call here to prevent the flash of "your cart is empty"
    // that happens when we wait for the cart subscription to update before forwarding

    Meteor.apply("stripe/payment/createCharges", ["authorize", cardData, cart._id], {
      onResultReceived: function (error, result) {
        submitting = false;

        if (error) {
          handleStripeSubmitError(error);
          uiEnd(template, "Resubmit payment");
        } else if (result.success) {
          Router.go("cart/completed", {}, {
            _id: cart._id
          });
        } else {
          handleStripeSubmitError(result.error);
          uiEnd(template, "Resubmit payment");
        }
      }
    });
    return false;
  },
  beginSubmit: function () {
    this.template.$(":input").attr("disabled", true);
    this.template.$("#btn-complete-order").text("Submitting ");
    return this.template.$("#btn-processing").removeClass("hidden");
  },
  endSubmit: function () {
    if (!submitting) {
      return uiEnd(this.template, "Complete your order");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"settings":{"authorize.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/authorize.html                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.authorize.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.authorize.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/template.authorize.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("stripeConnectAuthorize");
Template["stripeConnectAuthorize"] = new Template("Template.stripeConnectAuthorize", (function() {
  var view = this;
  return HTML.DIV({
    class: "stripe-connect-authorize"
  }, "\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("loading"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"merchant-settings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/merchant-settings.html                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.merchant-settings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.merchant-settings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/template.merchant-settings.js                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("stripeConnectMerchantSignup");
Template["stripeConnectMerchantSignup"] = new Template("Template.stripeConnectMerchantSignup", (function() {
  var view = this;
  return Blaze.If(function() {
    return Spacebars.call(view.lookup("stripeConnectIsConnected"));
  }, function() {
    return [ "\n    ", Spacebars.include(view.lookupTemplate("stripeConnectAccountDetails")), "\n  " ];
  }, function() {
    return [ "\n    ", Spacebars.include(view.lookupTemplate("stripeConnectSignupButton")), "\n  " ];
  });
}));

Template.__checkName("stripeConnectAccountDetails");
Template["stripeConnectAccountDetails"] = new Template("Template.stripeConnectAccountDetails", (function() {
  var view = this;
  return HTML.Raw('<i class="fa fa-check"></i> Your Stripe Account is Connected<br>\n  To check recent transactions, view your <a href="https://dashboard.stripe.com/test/dashboard" target="_blank">Stripe Account dashboard</a>.');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripe.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/stripe.html                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.stripe.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.stripe.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/template.stripe.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("stripeSettings");
Template["stripeSettings"] = new Template("Template.stripeSettings", (function() {
  var view = this;
  return [ Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "api_key"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "alert alert-info"
    }, "\n      ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.stripeSettingsDescription"
    }, "Don't have a Stripe API Secret Key?"), "\n      ", HTML.A({
      href: "https://dashboard.stripe.com/account/apikeys",
      target: "_blank"
    }, "\n        ", HTML.SPAN({
      "data-i18n": "admin.paymentSettings.stripeSettingsGetItHere"
    }, "Get it here."), "\n      "), "\n    "), "\n    " ];
  }), "\n    ", HTML.DIV("\n      ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("StripePackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("stripe-update-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.api_key")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", Blaze.If(function() {
        return Spacebars.call(view.lookup("marketplaceEnabled"));
      }, function() {
        return [ "\n          ", HTML.BR(), "\n          ", HTML.SPAN({
          "data-i18n": "admin.paymentSettings.stripeClientIdWarning"
        }, "The Client ID is a ", HTML.STRONG("PUBLIC"), " field. Please ensure you're using the `client_id` found on the "), "\n          ", HTML.A({
          target: "_blank",
          href: "https://dashboard.stripe.com/account/applications/settings"
        }, "\n            ", HTML.SPAN({
          "data-i18n": "admin.paymentSettings.stripeClientIDLink"
        }, "Stripe Connect Settings"), "\n          "), "\n          ", Blaze._TemplateWith(function() {
          return {
            name: Spacebars.call("settings.public.client_id")
          };
        }, function() {
          return Spacebars.include(view.lookupTemplate("afQuickField"));
        }), "\n          ", HTML.BR(), "\n          ", HTML.SPAN({
          "data-i18n": "admin.connect.applicationFeeDescription"
        }, "\n            This number represents a percentage fee that the marketplace (this shop) takes for any item which is sold\n            by a merchant shop for this marketplace. This fee applies only if Stripe Connect is setup and enabled on both\n            the marketplace and the merchant shops and if Stripe is the payment provider used to perform the checkout.\n          "), "\n          ", HTML.BR(), "\n          ", HTML.SPAN({
          "data-i18n": "admin.connect.moreDetails"
        }, "For more details, see the"), "\n          ", HTML.A({
          target: "_blank",
          href: "https://stripe.com/docs/connect/direct-charges#flow-of-funds-with-fees"
        }, "\n            ", HTML.SPAN({
          "data-i18n": "admin.connect.docsLink"
        }, "Stripe Connect Docs"), "\n          "), "\n          ", Blaze._TemplateWith(function() {
          return {
            name: Spacebars.call("settings.applicationFee")
          };
        }, function() {
          return Spacebars.include(view.lookupTemplate("afQuickField"));
        }), "\n        " ];
      }), "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.reaction-stripe.support"),
          options: Spacebars.call("allowed"),
          noselect: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n        ", HTML.BUTTON({
        type: "submit",
        class: "btn btn-primary pull-right"
      }, HTML.SPAN({
        "data-i18n": "app.saveChanges"
      }, "Save Changes")), "\n      " ];
    });
  }), "\n    ") ];
}));

Template.__checkName("stripe");
Template["stripe"] = new Template("Template.stripe", (function() {
  var view = this;
  return HTML.DIV({
    class: "container-fluid-sm flex"
  }, "\n    ", HTML.DIV({
    class: "flex-item"
  }, "\n      ", HTML.DIV({
    class: "panel panel-default"
  }, "\n        ", HTML.Raw('<div class="panel-heading">\n          <div class="panel-title">Stripe Checkout</div>\n        </div>'), "\n        ", HTML.DIV({
    class: "list-group"
  }, "\n          ", HTML.DIV({
    class: "list-group-item"
  }, "\n            ", Blaze.If(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "api_key"));
  }, function() {
    return [ "\n              ", HTML.SPAN("API Secret Key: ", HTML.BUTTON({
      type: "button",
      class: "btn btn-link",
      "data-event-action": "showStripeSettings"
    }, "**********")), "\n            " ];
  }, function() {
    return [ "\n              ", HTML.SPAN("API Secret Key: ", HTML.BUTTON({
      type: "button",
      class: "btn btn-link",
      "data-event-action": "showStripeSettings"
    }, "Configure Now")), "\n            " ];
  }), "\n          "), "\n        "), "\n        ", HTML.DIV({
    class: "panel-footer"
  }, "\n          ", HTML.Raw('<div class="left"></div>'), "\n          ", HTML.DIV({
    class: "right"
  }, "\n\n            ", HTML.DIV({
    class: "panel-footer-item"
  }, "\n              ", Blaze.If(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "api_key"));
  }, function() {
    return [ "\n                ", HTML.I({
      class: "fa fa-check-circle fa-2x text-success"
    }), "\n              " ];
  }, function() {
    return [ "\n                ", HTML.I({
      class: "fa fa-minus-circle fa-2x text-muted"
    }), "\n              " ];
  }), "\n            "), "\n\n            ", HTML.Raw('<div class="panel-footer-item">\n              <button class="btn btn-default" data-event-action="showStripeSettings">\n                <i class="fa fa-gear"></i>\n              </button>\n            </div>'), "\n\n          "), "\n        "), "\n      "), "\n    "), "\n  ");
}));

Template.__checkName("stripeConnectRedirect");
Template["stripeConnectRedirect"] = new Template("Template.stripeConnectRedirect", (function() {
  var view = this;
  return HTML.Raw("<p>Stripe Connect Redirect</p>");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"authorize.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/authorize.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction, Router, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Router: function (v) {
    Router = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);
Template.stripeConnectAuthorize.onCreated(function () {
  var shopId = Reaction.Router.getQueryParam("state");
  var authCode = Reaction.Router.getQueryParam("code");
  var error = Reaction.Router.getQueryParam("error");

  if (error) {
    return Alerts.toast("" + i18next.t("admin.connect.shopUserDeniedRequest"), "error");
  }

  if (shopId && authCode) {
    Meteor.call("stripe/connect/authorizeMerchant", shopId, authCode, function (err) {
      if (error) {
        Alerts.toast(i18next.t("admin.connect.stripeConnectAccountLinkFailure") + " " + err, "error");
      } else {
        Alerts.toast("" + i18next.t("admin.connect.stripeConnectAccountLinkSuccess"), "success");
      }

      Router.go("/");
    });
  }
});
Template.stripeConnectAuthorize.helpers({
  loading: function () {
    return Components.Loading;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"merchant-settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/merchant-settings.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 1);
Template.stripeConnectMerchantSignup.helpers({
  stripeConnectIsConnected: function () {
    var stripe = Reaction.getPackageSettingsWithOptions({
      shopId: Reaction.getShopId(),
      name: "reaction-stripe"
    });
    return stripe && stripe.settings && stripe.settings.connectAuth && stripe.settings.connectAuth.access_token;
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripe.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/settings/stripe.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);
var StripePackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  StripePackageConfig: function (v) {
    StripePackageConfig = v;
  }
}, 4);
Template.stripeSettings.helpers({
  StripePackageConfig: function () {
    return StripePackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-stripe",
      shopId: Reaction.getShopId()
    });
  },
  marketplaceEnabled: function () {
    var marketplace = Reaction.getMarketplaceSettings();
    return marketplace && marketplace.enabled;
  }
});
Template.stripe.helpers({
  packageData: function () {
    return Packages.findOne({
      name: "reaction-stripe",
      shopId: Reaction.getShopId()
    });
  }
});
Template.stripe.events({
  "click [data-event-action=showStripeSettings]": function () {
    Reaction.showActionView();
  }
});
AutoForm.hooks({
  "stripe-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.settings.saveSuccess"), "success");
    },
    onError: function (error) {
      return Alerts.toast(i18next.t("admin.settings.saveFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/client/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./checkout/stripe.html"));
module.watch(require("./checkout/stripe.js"));
module.watch(require("./settings/stripe.html"));
module.watch(require("./settings/stripe.js"));
module.watch(require("./settings/merchant-settings.html"));
module.watch(require("./settings/merchant-settings.js"));
module.watch(require("./settings/authorize.html"));
module.watch(require("./settings/authorize.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/lib/collections/schemas/index.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./stripe"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripe.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/payments-stripe/lib/collections/schemas/stripe.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  StripePackageConfig: function () {
    return StripePackageConfig;
  },
  StripePayment: function () {
    return StripePayment;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);

/*
 *  Meteor.settings.stripe =
 *    mode: false  #sandbox
 *    api_key: ""
 *  see: https://stripe.com/docs/api
 */
var StripeConnectAuthorizationCredentials = new SimpleSchema({
  token_type: {
    // eslint-disable-line camelcase
    type: String
  },
  stripe_publishable_key: {
    // eslint-disable-line camelcase
    type: String
  },
  scope: {
    type: String
  },
  livemode: {
    type: Boolean
  },
  stripe_user_id: {
    // eslint-disable-line camelcase
    type: String
  },
  refresh_token: {
    // eslint-disable-line camelcase
    type: String
  },
  access_token: {
    // eslint-disable-line camelcase
    type: String
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("StripeConnectAuthorizationCredentials", StripeConnectAuthorizationCredentials);
var StripePackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.mode": {
    type: Boolean,
    defaultValue: false
  },
  "settings.api_key": {
    type: String,
    label: "API Secret Key"
  },
  // This field only applies to marketplace style orders where a payment is taken on behalf of another store
  "settings.applicationFee": {
    type: Number,
    label: "Percentage Application Fee",
    optional: true,
    defaultValue: 5
  },
  "settings.connectAuth": {
    type: StripeConnectAuthorizationCredentials,
    label: "Connect Authorization Credentials",
    optional: true
  },
  "settings.reaction-stripe": {
    type: Object,
    defaultValue: {}
  },
  "settings.reaction-stripe.support": {
    type: Array,
    label: "Payment provider supported methods"
  },
  "settings.reaction-stripe.support.$": {
    type: String,
    allowedValues: ["Authorize", "De-authorize", "Capture", "Refund"]
  },
  "settings.public": {
    type: Object,
    defaultValue: {}
  },
  // Public Settings
  "settings.public.client_id": {
    type: String,
    label: "Public Client ID",
    optional: true
  }
});
registerSchema("StripePackageConfig", StripePackageConfig);
var StripePayment = new SimpleSchema({
  payerName: {
    type: String,
    label: "Cardholder name"
  },
  cardNumber: {
    type: String,
    min: 13,
    max: 16,
    label: "Card number"
  },
  expireMonth: {
    type: String,
    max: 2,
    label: "Expiration month"
  },
  expireYear: {
    type: String,
    max: 4,
    label: "Expiration year"
  },
  cvv: {
    type: String,
    max: 4,
    label: "CVV"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("StripePayment", StripePayment);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"product-admin":{"client":{"templates":{"productAdmin.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/templates/productAdmin.html                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.productAdmin.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.productAdmin.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/templates/template.productAdmin.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("ProductAdmin");
Template["ProductAdmin"] = new Template("Template.ProductAdmin", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.dataMustache(view.lookup("component"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productAdmin.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/templates/productAdmin.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
Template.ProductAdmin.helpers({
  component: function () {
    var currentData = Template.currentData() || {};
    return (0, _objectSpread2.default)({}, currentData, {
      component: Components.ProductAdmin
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/components/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./productAdmin.js"), {
  "default": function (v) {
    exports.ProductAdmin = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productAdmin.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/components/productAdmin.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Velocity;
module.watch(require("velocity-animate"), {
  "default": function (v) {
    Velocity = v;
  }
}, 3);
module.watch(require("velocity-animate/velocity.ui"));
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 4);
var Router;
module.watch(require("../../../../../../client/api"), {
  Router: function (v) {
    Router = v;
  }
}, 5);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 6);
var fieldNames = ["title", "handle", "subtitle", "vendor", "description", "origincountry", "facebookMsg", "twitterMsg", "pinterestMsg", "googleplusMsg"];
var fieldGroups = {
  title: {
    group: "productDetails"
  },
  handle: {
    group: "productDetails"
  },
  pageTitle: {
    group: "productDetails"
  },
  vendor: {
    group: "productDetails"
  },
  description: {
    group: "productDetails"
  },
  facebookMsg: {
    group: "social"
  },
  twitterMsg: {
    group: "social"
  },
  pinterestMsg: {
    group: "social"
  },
  googleplusMsg: {
    group: "social"
  },
  hashtags: {
    group: "hashtags"
  },
  metafields: {
    group: "metafields"
  }
};

var ProductAdmin =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductAdmin, _Component);

  function ProductAdmin(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleCardExpand = function (event, card, cardName, isExpanded) {
      if (_this.props.onCardExpand) {
        _this.props.onCardExpand(isExpanded ? cardName : undefined);
      }
    };

    _this.handleDeleteProduct = function () {
      if (_this.props.onDeleteProduct) {
        _this.props.onDeleteProduct(_this.props.product);
      }
    };

    _this.handleRestoreProduct = function () {
      if (_this.props.onRestoreProduct) {
        _this.props.onRestoreProduct(_this.props.product);
      }
    };

    _this.handleFieldChange = function (event, value, field) {
      var _$merge;

      var newState = update(_this.state, {
        product: {
          $merge: (_$merge = {}, _$merge[field] = value, _$merge)
        }
      });

      _this.setState(newState, function () {
        if (_this.props.onFieldChange) {
          _this.props.onFieldChange(field, value);
        }
      });
    };

    _this.handleSelectChange = function (value, field) {
      if (_this.props.onProductFieldSave) {
        _this.props.onProductFieldSave(_this.product._id, field, value);
      }
    };

    _this.handleToggleVisibility = function () {
      if (_this.props.onProductFieldSave) {
        _this.props.onProductFieldSave(_this.product._id, "isVisible", !_this.product.isVisible);
      }
    };

    _this.handleMetaChange = function (event, metafield, index) {
      if (_this.props.onMetaChange) {
        if (index >= 0) {
          var product = _this.state.product;
          product.metafields[index] = metafield;

          _this.setState({
            product: product
          });
        } else {
          _this.props.onMetaChange(metafield);
        }
      }
    };

    _this.handleFieldBlur = function (event, value, field) {
      if (_this.props.onProductFieldSave) {
        _this.props.onProductFieldSave(_this.product._id, field, value);
      }
    };

    _this.handleMetaSave = function (event, metafield, index) {
      if (_this.props.onMetaSave) {
        _this.props.onMetaSave(_this.product._id, metafield, index);
      }
    };

    _this.handleMetaRemove = function (event, metafield, index) {
      if (_this.props.onMetaRemove) {
        _this.props.onMetaRemove(_this.product._id, metafield, index);
      }
    };

    _this.isExpanded = function (groupName) {
      return _this.state.expandedCard === groupName;
    };

    _this.state = {
      expandedCard: _this.fieldGroupForFieldName(props.editFocus),
      product: props.product,
      viewProps: props.viewProps
    };
    return _this;
  }

  var _proto = ProductAdmin.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var nextProduct = nextProps.product || {};
      var currentProduct = this.props.product || {};

      if (!_isEqual(nextProduct, currentProduct)) {
        for (var _i = 0; _i < fieldNames.length; _i++) {
          var fieldName = fieldNames[_i];

          if (nextProduct[fieldName] !== currentProduct[fieldName]) {
            this.animateFieldFlash(fieldName);
          }
        }
      }

      var cardGroupName = this.fieldGroupForFieldName(nextProps.editFocus);
      this.setState({
        expandedCard: cardGroupName,
        viewProps: nextProps.viewProps
      });
      this.setState({
        product: nextProps.product
      });
    }

    return componentWillReceiveProps;
  }();

  _proto.fieldGroupForFieldName = function () {
    function fieldGroupForFieldName(field) {
      // Other wise, if a field was passed
      // const fieldName = this.state.viewProps.field;
      var fieldName; // If the field is an array of field name

      if (Array.isArray(field) && field.length) {
        // Use the first field name
        var _field = _slicedToArray(field, 1);

        fieldName = _field[0];
      } else {
        fieldName = field;
      }

      var fieldData = fieldGroups[fieldName];

      if (fieldData && fieldData.group) {
        return fieldData.group;
      }

      return fieldName;
    }

    return fieldGroupForFieldName;
  }();

  _proto.animateFieldFlash = function () {
    function animateFieldFlash(fieldName) {
      var fieldRef = this.refs[fieldName + "Input"];

      if (fieldRef) {
        var input = fieldRef.refs.input;
        Velocity.RunSequence([{
          e: input,
          p: {
            backgroundColor: "#e2f2e2"
          },
          o: {
            duration: 200
          }
        }, {
          e: input,
          p: {
            backgroundColor: "#fff"
          },
          o: {
            duration: 100
          }
        }]);
      }
    }

    return animateFieldFlash;
  }();

  _proto.renderProductVisibilityLabel = function () {
    function renderProductVisibilityLabel() {
      if (this.product.isVisible) {
        return React.createElement(Components.Translation, {
          defaultValue: "Product is visible",
          i18nKey: "productDetailEdit.productIsVisible"
        });
      }

      return React.createElement(Components.Translation, {
        defaultValue: "Product is not visible",
        i18nKey: "productDetailEdit.productIsNotVisible"
      });
    }

    return renderProductVisibilityLabel;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, {
        expanded: this.isExpanded("productDetails"),
        name: "productDetails",
        onExpand: this.handleCardExpand
      }, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "productDetailEdit.productSettings",
        title: "Product Settings",
        onChange: this.handleFieldChange
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement(Components.Select, {
        clearable: false,
        i18nKeyLabel: "productDetailEdit.template",
        i18nKeyPlaceholder: "productDetailEdit.templateSelectPlaceholder",
        label: "Template",
        name: "template",
        onChange: this.handleSelectChange,
        options: this.props.templates,
        placeholder: "Select a template",
        value: this.product.template
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.title",
        i18nKeyPlaceholder: "productDetailEdit.title",
        label: "Title",
        name: "title",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        placeholder: "Title",
        ref: "titleInput",
        value: this.product.title
      }), React.createElement(Components.TextField, {
        helpText: this.permalink,
        i18nKeyLabel: "productDetailEdit.permalink",
        i18nKeyPlaceholder: "productDetailEdit.permalink",
        label: "Permalink",
        name: "handle",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        placeholder: "Permalink",
        ref: "handleInput",
        value: this.product.handle
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.pageTitle",
        i18nKeyPlaceholder: "productDetailEdit.pageTitle",
        label: "Subtitle",
        name: "pageTitle",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        placeholder: "Subtitle",
        ref: "subtitleInput",
        value: this.product.pageTitle
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.vendor",
        i18nKeyPlaceholder: "productDetailEdit.vendor",
        label: "Vendor",
        name: "vendor",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        onReturnKeyDown: this.handleFieldBlur,
        placeholder: "Vendor",
        ref: "vendorInput",
        value: this.product.vendor
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.description",
        i18nKeyPlaceholder: "productDetailEdit.description",
        label: "Description",
        multiline: true,
        name: "description",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        placeholder: "Description",
        ref: "descriptionInput",
        value: this.product.description
      }), React.createElement(Components.Select, {
        clearable: false,
        i18nKeyLabel: "productDetailEdit.originCountry",
        i18nKeyPlaceholder: "productDetailEdit.originCountry",
        label: "Origin Country",
        name: "originCountry",
        onChange: this.handleSelectChange,
        placeholder: "Select a Country",
        ref: "countryOfOriginInput",
        value: this.product.originCountry,
        options: this.props.countries
      }))), React.createElement(Components.Card, {
        expanded: this.isExpanded("social"),
        name: "social",
        onExpand: this.handleCardExpand
      }, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "social.socialTitle",
        title: "Social"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.facebookMsg",
        i18nKeyPlaceholder: "productDetailEdit.facebookMsg",
        label: "Facebook Message",
        multiline: true,
        name: "facebookMsg",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        ref: "facebookMsgInput",
        value: this.product.facebookMsg
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.twitterMsg",
        i18nKeyPlaceholder: "productDetailEdit.twitterMsg",
        label: "Twitter Message",
        multiline: true,
        name: "twitterMsg",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        ref: "twitterMsgInput",
        value: this.product.twitterMsg
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.pinterestMsg",
        i18nKeyPlaceholder: "productDetailEdit.pinterestMsg",
        label: "Pinterest Message",
        multiline: true,
        name: "pinterestMsg",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        ref: "pinterestMsgInput",
        value: this.product.pinterestMsg
      }), React.createElement(Components.TextField, {
        i18nKeyLabel: "productDetailEdit.googleplusMsg",
        i18nKeyPlaceholder: "productDetailEdit.googleplusMsg",
        label: "Google+ Message",
        multiline: true,
        name: "googleplusMsg",
        onBlur: this.handleFieldBlur,
        onChange: this.handleFieldChange,
        ref: "googleplusMsgInput",
        value: this.product.googleplusMsg
      }))), React.createElement(Components.Card, {
        expanded: this.isExpanded("hashtags"),
        name: "hashtags",
        onExpand: this.handleCardExpand
      }, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "productDetail.tags",
        title: "Tags"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement(Components.TagList, {
        editable: this.props.editable,
        enableNewTagForm: true,
        product: this.product,
        tagProps: {
          fullWidth: true
        }
      }))), React.createElement(Components.Card, {
        expanded: this.isExpanded("metafields"),
        name: "metafields",
        onExpand: this.handleCardExpand
      }, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "productDetailEdit.details",
        title: "Details"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement(Components.Metadata, {
        metafields: this.product.metafields,
        newMetafield: this.props.newMetafield,
        onMetaChange: this.handleMetaChange,
        onMetaRemove: this.handleMetaRemove,
        onMetaSave: this.handleMetaSave
      }))));
    }

    return render;
  }();

  (0, _createClass2.default)(ProductAdmin, [{
    key: "product",
    get: function () {
      return this.state.product || this.props.product || {};
    }
  }, {
    key: "permalink",
    get: function () {
      if (this.props.product) {
        return Router.pathFor("product", {
          hash: {
            handle: this.props.product.handle
          }
        });
      }

      return "";
    }
  }]);
  return ProductAdmin;
}(Component);

ProductAdmin.propTypes = {
  countries: PropTypes.arrayOf(PropTypes.object),
  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),
  editable: PropTypes.bool,
  handleFieldBlur: PropTypes.func,
  handleFieldChange: PropTypes.func,
  handleProductFieldChange: PropTypes.func,
  newMetafield: PropTypes.object,
  onCardExpand: PropTypes.func,
  onDeleteProduct: PropTypes.func,
  onFieldChange: PropTypes.func,
  onMetaChange: PropTypes.func,
  onMetaRemove: PropTypes.func,
  onMetaSave: PropTypes.func,
  onProductFieldSave: PropTypes.func,
  onRestoreProduct: PropTypes.func,
  product: PropTypes.object,
  revisonDocumentIds: PropTypes.arrayOf(PropTypes.string),
  templates: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.string,
    value: PropTypes.any
  })),
  viewProps: PropTypes.object
};
module.exportDefault(ProductAdmin);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"productAdmin.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/containers/productAdmin.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 1);

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 2);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 3);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 4);
var registerComponent, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 5);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 6);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var getPrimaryMediaForItem, ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  getPrimaryMediaForItem: function (v) {
    getPrimaryMediaForItem = v;
  },
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 8);
var Tags, Templates;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  },
  Templates: function (v) {
    Templates = v;
  }
}, 9);
var Countries;
module.watch(require("../../../../../../client/collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 10);
var ProductAdmin;
module.watch(require("../components"), {
  ProductAdmin: function (v) {
    ProductAdmin = v;
  }
}, 11);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(ProductAdminContainer, _Component);

    function ProductAdminContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.handleCardExpand = function (cardName) {
        Reaction.state.set("edit/focus", cardName);
      };

      _this.handleDeleteProduct = function (product) {
        ReactionProduct.archiveProduct(product || _this.product);
      };

      _this.handleProductFieldSave = function (productId, fieldName, value) {
        var updateValue = value; // special case, slugify handles.

        if (fieldName === "handle") {
          updateValue = Reaction.getSlug(value);
        }

        Meteor.call("products/updateProductField", productId, fieldName, updateValue, function (error) {
          if (error) {
            Alerts.toast(error.message, "error");

            _this.forceUpdate();
          }
        });
      };

      _this.handleMetaChange = function (metafield) {
        var newState = {
          newMetafield: metafield
        };

        _this.setState(newState);
      };

      _this.handleMetafieldSave = function (productId, metafield, index) {
        // update existing metafield
        if (index >= 0) {
          Meteor.call("products/updateMetaFields", productId, metafield, index);
        } else if (metafield.key && metafield.value) {
          Meteor.call("products/updateMetaFields", productId, metafield);
        }

        _this.setState({
          newMetafield: {
            key: "",
            value: ""
          }
        });
      };

      _this.handleMetaRemove = function (productId, metafield) {
        Meteor.call("products/removeMetaFields", productId, metafield);
      };

      _this.handleProductRestore = function (product) {
        Meteor.call("products/updateProductField", product._id, "isDeleted", false);
      };

      _this.state = {
        newMetafield: {
          key: "",
          value: ""
        }
      };
      return _this;
    }

    var _proto = ProductAdminContainer.prototype;

    _proto.render = function () {
      function render() {
        return React.createElement(Comp, (0, _extends2.default)({
          newMetafield: this.state.newMetafield,
          onCardExpand: this.handleCardExpand,
          onDeleteProduct: this.handleDeleteProduct,
          onMetaChange: this.handleMetaChange,
          onMetaRemove: this.handleMetaRemove,
          onMetaSave: this.handleMetafieldSave,
          onProductFieldSave: this.handleProductFieldSave,
          onRestoreProduct: this.handleProductRestore
        }, this.props));
      }

      return render;
    }();

    return ProductAdminContainer;
  }(Component), _class.propTypes = {
    product: PropTypes.object,
    tags: PropTypes.arrayOf(PropTypes.object)
  }, _temp;
};

function composer(props, onData) {
  var product = ReactionProduct.selectedProduct();
  var editable = Reaction.hasAdminAccess();
  var tags;
  var media;
  var revisonDocumentIds;

  if (product) {
    if (_isArray(product.hashtags)) {
      tags = _map(product.hashtags, function (id) {
        return Tags.findOne(id);
      });
    }

    var selectedVariant = ReactionProduct.selectedVariant();

    if (selectedVariant) {
      media = getPrimaryMediaForItem({
        productId: product._id,
        variantId: selectedVariant._id
      });
    }

    revisonDocumentIds = [product._id];
    var templates = Templates.find({
      parser: "react",
      provides: "template",
      templateFor: {
        $in: ["pdp"]
      },
      enabled: true
    }).map(function (template) {
      return {
        label: template.title,
        value: template.name
      };
    });
    var countries = Countries.find({}).fetch();
    onData(null, {
      editFocus: Reaction.state.get("edit/focus") || "productDetails",
      product: product,
      media: media,
      tags: tags,
      revisonDocumentIds: revisonDocumentIds,
      templates: templates,
      countries: countries,
      editable: editable
    });
  } else {
    onData(null, {
      editFocus: Reaction.state.get("edit/focus") || "productDetails"
    });
  }
}

registerComponent("ProductAdmin", ProductAdmin, [composeWithTracker(composer), wrapComponent]); // Decorate component and export

module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(ProductAdmin));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-admin/client/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/productAdmin.html"));
module.watch(require("./templates/productAdmin.js"));
module.watch(require("./containers/productAdmin"), {
  "default": function (v) {
    exports.ProductAdmin = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"product-detail-simple":{"client":{"templates":{"productDetailSimple.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/templates/productDetailSimple.html                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.productDetailSimple.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.productDetailSimple.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/templates/template.productDetailSimple.js                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("productDetailSimple");
Template["productDetailSimple"] = new Template("Template.productDetailSimple", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return {
      component: Spacebars.call(view.lookup("PDC"))
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

Template.__checkName("productDetailSimpleToolbar");
Template["productDetailSimpleToolbar"] = new Template("Template.productDetailSimpleToolbar", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("PublishContainerComponent"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productDetailSimple.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/templates/productDetailSimple.js                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
Template.productDetailSimple.helpers({
  PDC: function () {
    return Components.ProductDetail;
  }
});
Template.productDetailSimpleToolbar.helpers({
  PublishContainerComponent: function () {
    return {
      component: Components.ProductPublish
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"addToCartButton.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/addToCartButton.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);

var AddToCartButton =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AddToCartButton, _Component);

  function AddToCartButton() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleCartQuantityChange = function (event) {
      if (_this.props.onCartQuantityChange) {
        _this.props.onCartQuantityChange(event, event.target.value);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = AddToCartButton.prototype;

  _proto.render = function () {
    function render() {
      if (this.hasVariants) {
        return React.createElement("div", {
          className: "pdp add-to-cart block"
        }, React.createElement("input", {
          className: "form-control input-md",
          id: "add-to-cart-quantity",
          min: "1",
          name: "addToCartQty",
          onChange: this.handleCartQuantityChange,
          type: "number",
          value: this.props.cartQuantity
        }), React.createElement("button", {
          className: "input-group-addon add-to-cart-text js-add-to-cart",
          "data-i18n": "productDetail.addToCart",
          onClick: this.props.onClick || this.props.onAddToCart
        }, React.createElement(Components.Translation, {
          defaultValue: "Add to cart",
          i18nKey: "productDetail.addToCart"
        })));
      }

      if (this.props.editable && this.hasVariants === false) {
        return React.createElement(Components.Alert, null, React.createElement(Components.Translation, {
          defaultValue: "Add options to enable 'Add to Cart' button",
          i18nKey: "productVariant.addVariantOptions"
        }));
      }

      return null;
    }

    return render;
  }();

  (0, _createClass2.default)(AddToCartButton, [{
    key: "hasVariants",
    get: function () {
      return Array.isArray(this.props.variants) && this.props.variants.length > 0;
    }
  }]);
  return AddToCartButton;
}(Component);

AddToCartButton.propTypes = {
  cartQuantity: PropTypes.number,
  editable: PropTypes.bool,
  onAddToCart: PropTypes.func,
  onCartQuantityChange: PropTypes.func,
  onClick: PropTypes.func,
  variants: PropTypes.arrayOf(PropTypes.object)
};
registerComponent("AddToCartButton", AddToCartButton);
module.exportDefault(AddToCartButton);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"childVariant.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/childVariant.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Validation;
module.watch(require("@reactioncommerce/schemas"), {
  Validation: function (v) {
    Validation = v;
  }
}, 4);
var ProductVariant;
module.watch(require("../../../../../../lib/collections/schemas/products"), {
  ProductVariant: function (v) {
    ProductVariant = v;
  }
}, 5);

var ChildVariant =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ChildVariant, _Component);

  function ChildVariant(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event, _this.props.variant);
      }
    };

    _this.renderValidationButton = function () {
      if (_this.state.invalidVariant === true) {
        return React.createElement(Components.Badge, {
          status: "danger",
          indicator: true,
          tooltip: "Validation error",
          i18nKeyTooltip: "admin.tooltip.validationError",
          onClick: _this.handleClick
        });
      }
    };

    _this.variantValidation = function () {
      var invalidVariant = _this.validation.validate(_this.props.variant);

      _this.setState({
        invalidVariant: !invalidVariant.isValid
      });
    };

    _this.validation = new Validation(ProductVariant);
    _this.state = {
      invalidVariant: false
    };
    return _this;
  }

  var _proto = ChildVariant.prototype;

  _proto.componentWillMount = function () {
    function componentWillMount() {
      this.variantValidation();
    }

    return componentWillMount;
  }();

  _proto.renderInventoryStatus = function () {
    function renderInventoryStatus() {
      var _props$variant = this.props.variant,
          inventoryManagement = _props$variant.inventoryManagement,
          inventoryPolicy = _props$variant.inventoryPolicy; // If childVariant is sold out, show Sold Out badge

      if (inventoryManagement && this.props.variant.inventoryQuantity <= 0) {
        if (inventoryPolicy) {
          return React.createElement("span", {
            className: "variant-qty-sold-out badge badge-danger child-variant-badge-label"
          }, React.createElement(Components.Translation, {
            defaultValue: "Sold Out!",
            i18nKey: "productDetail.soldOut"
          }));
        }

        return React.createElement("span", {
          className: "variant-qty-sold-out badge badge-info child-variant-badge-label"
        }, React.createElement(Components.Translation, {
          defaultValue: "Backorder",
          i18nKey: "productDetail.backOrder"
        }));
      }

      return null;
    }

    return renderInventoryStatus;
  }();

  _proto.renderDeletionStatus = function () {
    function renderDeletionStatus() {
      if (this.props.variant.isDeleted) {
        return React.createElement("span", {
          className: "badge badge-danger"
        }, React.createElement(Components.Translation, {
          className: "deleted-variant-text",
          defaultValue: "Archived",
          i18nKey: "app.archived"
        }));
      }

      return null;
    }

    return renderDeletionStatus;
  }();

  _proto.renderMedia = function () {
    function renderMedia() {
      var media = this.primaryMediaItem;
      if (!media) return null;
      return React.createElement(Components.MediaItem, {
        source: media,
        onClick: this.handleClick
      });
    }

    return renderMedia;
  }();

  _proto.render = function () {
    function render() {
      var variant = this.props.variant;
      var classes = classnames({
        "btn": true,
        "btn-default": true,
        "variant-button": true,
        "variant-detail-selected": this.props.isSelected,
        "variant-deleted": this.props.variant.isDeleted,
        "variant-notVisible": !this.props.variant.isVisible
      });
      return React.createElement("div", {
        className: "variant-select-option"
      }, React.createElement("button", {
        className: classes,
        onClick: this.handleClick,
        type: "button"
      }, this.renderMedia(), React.createElement("span", {
        className: "title"
      }, variant.optionTitle)), React.createElement("div", {
        className: "variant-controls custom-variant-control"
      }, this.renderDeletionStatus(), this.renderInventoryStatus(), this.renderValidationButton(), this.props.editButton));
    }

    return render;
  }();

  (0, _createClass2.default)(ChildVariant, [{
    key: "hasMedia",
    get: function () {
      return Array.isArray(this.props.media) && this.props.media.length > 0;
    }
  }, {
    key: "primaryMediaItem",
    get: function () {
      if (this.hasMedia) {
        return this.props.media[0];
      }

      return null;
    }
  }]);
  return ChildVariant;
}(Component);

ChildVariant.propTypes = {
  editButton: PropTypes.node,
  isSelected: PropTypes.bool,
  media: PropTypes.arrayOf(PropTypes.object),
  onClick: PropTypes.func.isRequired,
  soldOut: PropTypes.bool,
  variant: PropTypes.object,
  visibilityButton: PropTypes.node
};
registerComponent("ChildVariant", ChildVariant);
module.exportDefault(ChildVariant);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/index.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./productDetail"), {
  "default": function (v) {
    exports.ProductDetail = v;
  }
}, 0);
module.watch(require("./variant"), {
  "default": function (v) {
    exports.Variant = v;
  }
}, 1);
module.watch(require("./variantList"), {
  "default": function (v) {
    exports.VariantList = v;
  }
}, 2);
module.watch(require("./childVariant"), {
  "default": function (v) {
    exports.ChildVariant = v;
  }
}, 3);
module.watch(require("./addToCartButton"), {
  "default": function (v) {
    exports.AddToCartButton = v;
  }
}, 4);
module.watch(require("./metadata"), {
  "default": function (v) {
    exports.ProductMetadata = v;
  }
}, 5);
module.watch(require("./tags"), {
  "default": function (v) {
    exports.ProductTags = v;
  }
}, 6);
module.watch(require("./productField"), {
  "default": function (v) {
    exports.ProductField = v;
  }
}, 7);
module.watch(require("./priceRange"), {
  "default": function (v) {
    exports.PriceRange = v;
  }
}, 8);
module.watch(require("./productNotFound"), {
  "default": function (v) {
    exports.ProductNotFound = v;
  }
}, 9);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"metadata.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/metadata.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var ProductMetadata =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductMetadata, _Component);

  function ProductMetadata() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ProductMetadata.prototype;

  _proto.renderEditButton = function () {
    function renderEditButton() {
      if (this.showEditControls) {
        return React.createElement("span", {
          className: "edit-button"
        }, React.createElement(Components.EditContainer, (0, _extends2.default)({
          data: this.props.product,
          disabled: this.props.editable === false,
          editTypes: ["edit"],
          editView: "ProductAdmin",
          field: "metafields",
          i18nKeyLabel: "productDetailEdit.productSettings",
          label: "Product Settings",
          permissions: ["createProduct"]
        }, this.props.editContainerProps)));
      }

      return null;
    }

    return renderEditButton;
  }();

  _proto.render = function () {
    function render() {
      if (Array.isArray(this.metafields) && this.metafields.length > 0) {
        var headerClassName = classnames({
          "meta-header": true,
          "edit": this.showEditControls
        });
        return React.createElement("div", {
          className: "pdp product-metadata"
        }, React.createElement("h3", {
          className: headerClassName
        }, React.createElement(Components.Translation, {
          defaultValue: "Details",
          i18nKey: "productDetail.details"
        }), this.renderEditButton()), React.createElement(Components.Metadata, {
          editable: false,
          metafields: this.metafields
        }));
      }

      return null;
    }

    return render;
  }();

  (0, _createClass2.default)(ProductMetadata, [{
    key: "metafields",
    get: function () {
      return this.props.metafields || this.props.product.metafields;
    }
  }, {
    key: "showEditControls",
    get: function () {
      return this.props.product && this.props.editable;
    }
  }]);
  return ProductMetadata;
}(Component);

ProductMetadata.propTypes = {
  editContainerProps: PropTypes.object,
  editable: PropTypes.bool,
  metafields: PropTypes.arrayOf(PropTypes.object),
  product: PropTypes.object
};
registerComponent("ProductMetadata", ProductMetadata);
module.exportDefault(ProductMetadata);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"priceRange.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/priceRange.js                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);

var PriceRange = function (props) {
  return React.createElement("div", {
    className: "pdp price-range"
  }, React.createElement(Components.Currency, props));
};

registerComponent("PriceRange", PriceRange);
module.exportDefault(PriceRange);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productDetail.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/productDetail.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var ReactionLayout;
module.watch(require("../../../../core/layout/lib"), {
  ReactionLayout: function (v) {
    ReactionLayout = v;
  }
}, 3);

var ProductDetail =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductDetail, _Component);

  function ProductDetail() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ProductDetail.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "pdp",
        style: {
          position: "relative"
        }
      }, React.createElement("div", {
        className: "container-main pdp-container",
        itemScope: true,
        itemType: "http://schema.org/Product"
      }, React.createElement("div", {
        className: "row"
      }, React.createElement(Components.Alerts, {
        placement: "productManagement"
      }), React.createElement(ReactionLayout, {
        context: this,
        layoutName: this.props.layout,
        layoutProps: this.props
      }))));
    }

    return render;
  }();

  (0, _createClass2.default)(ProductDetail, [{
    key: "tags",
    get: function () {
      return this.props.tags || [];
    }
  }, {
    key: "product",
    get: function () {
      return this.props.product || {};
    }
  }, {
    key: "editable",
    get: function () {
      return this.props.editable;
    }
  }]);
  return ProductDetail;
}(Component);

ProductDetail.propTypes = {
  cartQuantity: PropTypes.number,
  editable: PropTypes.bool,
  hasAdminPermission: PropTypes.bool,
  layout: PropTypes.string,
  layoutName: PropTypes.string,
  mediaGalleryComponent: PropTypes.node,
  onAddToCart: PropTypes.func,
  onCartQuantityChange: PropTypes.func,
  onDeleteProduct: PropTypes.func,
  onProductFieldChange: PropTypes.func,
  onViewContextChange: PropTypes.func,
  priceRange: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  product: PropTypes.object,
  socialComponent: PropTypes.node,
  tags: PropTypes.arrayOf(PropTypes.object),
  topVariantComponent: PropTypes.node,
  viewAs: PropTypes.string
};
module.exportDefault(ProductDetail);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productField.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/productField.js                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Velocity;
module.watch(require("velocity-animate"), {
  "default": function (v) {
    Velocity = v;
  }
}, 3);
module.watch(require("velocity-animate/velocity.ui"));
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);

var ProductField =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductField, _Component);

  function ProductField() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      value: _this.value
    }, _this.handleChange = function (event, value) {
      _this.setState({
        value: value
      });
    }, _this.handleBlur = function (event, value) {
      if (_this.props.onProductFieldChange) {
        _this.props.onProductFieldChange(_this.props.product._id, _this.fieldName, value);
      }
    }, _this.handleFocus = function () {
      // Open actionView, if not already open
      if (!Reaction.isActionViewOpen()) {
        Reaction.showActionView();
      } // Open actionView to productDetails panel


      Reaction.state.set("edit/focus", "productDetails");
      Reaction.setActionView({
        i18nKeyLabel: "productDetailEdit.productSettings",
        label: "Product Settings",
        template: "ProductAdmin"
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ProductField.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (nextProps.product[this.fieldName] !== this.props.product[this.fieldName]) {
        this.setState({
          value: nextProps.product[this.fieldName]
        }, function () {
          if (_this2._input && _this2._input.refs.input) {
            var input = _this2._input.refs.input;
            Velocity.RunSequence([{
              e: input,
              p: {
                backgroundColor: "#e2f2e2"
              },
              o: {
                duration: 200
              }
            }, {
              e: input,
              p: {
                backgroundColor: "#fff"
              },
              o: {
                duration: 100
              }
            }]);
          }
        });
      } else {
        this.setState({
          value: nextProps.product[this.fieldName]
        });
      }
    }

    return componentWillReceiveProps;
  }();

  _proto.renderEditButton = function () {
    function renderEditButton() {
      if (this.showEditControls) {
        return React.createElement("span", {
          className: "edit-controls"
        }, React.createElement(Components.EditContainer, (0, _extends2.default)({
          autoHideEditButton: true,
          data: this.props.product,
          editView: "ProductAdmin",
          field: this.fieldName,
          i18nKeyLabel: "productDetailEdit." + this.field,
          label: "Edit Field",
          permissions: ["createProduct"]
        }, this.props.editContainerProps)));
      }

      return null;
    }

    return renderEditButton;
  }();

  _proto.renderTextField = function () {
    function renderTextField() {
      var _classnames,
          _classnames2,
          _this3 = this;

      var baseClassName = classnames((_classnames = {
        "pdp": true,
        "product-detail-edit": true
      }, _classnames[this.fieldName + "-edit"] = this.fieldName, _classnames));
      var textFieldClassName = classnames((_classnames2 = {
        "pdp": true,
        "product-detail-edit": true
      }, _classnames2[this.fieldName + "-edit-input"] = this.fieldName, _classnames2));
      return React.createElement("div", {
        className: baseClassName
      }, React.createElement(Components.TextField, (0, _extends2.default)({
        ref: function (ref) {
          _this3._input = ref;
        },
        className: textFieldClassName,
        multiline: this.props.multiline,
        onBlur: this.handleBlur,
        onChange: this.handleChange,
        onFocus: this.handleFocus,
        onReturnKeyDown: this.handleBlur,
        value: this.state.value
      }, this.props.textFieldProps)), this.renderEditButton());
    }

    return renderTextField;
  }();

  _proto.render = function () {
    function render() {
      var _classnames3;

      if (this.showEditControls) {
        return this.renderTextField();
      }

      var classNames = classnames((_classnames3 = {
        pdp: true,
        field: true
      }, _classnames3[this.fieldName] = !!this.fieldName, _classnames3));

      if (this.props.element) {
        return React.createElement(this.props.element, {
          className: classNames,
          itemProp: this.props.itemProp,
          children: this.value
        });
      }

      return React.createElement("div", {
        className: classNames
      }, this.value);
    }

    return render;
  }();

  (0, _createClass2.default)(ProductField, [{
    key: "fieldName",
    get: function () {
      return this.props.fieldName;
    }
  }, {
    key: "value",
    get: function () {
      return this.state && this.state.value || this.props.product[this.fieldName];
    }
  }, {
    key: "showEditControls",
    get: function () {
      return this.props.product && this.props.editable;
    }
  }]);
  return ProductField;
}(Component);

ProductField.propTypes = {
  editContainerProps: PropTypes.object,
  editable: PropTypes.bool,
  element: PropTypes.node,
  fieldName: PropTypes.string,
  fieldTitle: PropTypes.string,
  itemProp: PropTypes.string,
  multiline: PropTypes.bool,
  onProductFieldChange: PropTypes.func,
  product: PropTypes.object,
  textFieldProps: PropTypes.object
};
registerComponent("ProductField", ProductField);
module.exportDefault(ProductField);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productNotFound.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/productNotFound.js                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 1);

var ProductNotFound = function () {
  return React.createElement("div", {
    className: "container-fluid-sm"
  }, React.createElement("div", {
    className: "empty-view-message"
  }, React.createElement("i", {
    className: "fa fa-barcode"
  }), React.createElement(Components.Translation, {
    defaultValue: "Oops",
    i18nKey: "productDetail.notFoundTitle"
  }), React.createElement(Components.Translation, {
    defaultValue: "Product Not Found",
    i18nKey: "productDetail.notFoundError"
  })));
};

registerComponent("ProductNotFound", ProductNotFound);
module.exportDefault(ProductNotFound);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tags.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/tags.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);

var ProductTags =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductTags, _Component);

  function ProductTags() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ProductTags.prototype;

  _proto.renderEditButton = function () {
    function renderEditButton() {
      if (this.showEditControls) {
        return React.createElement("span", {
          className: "edit-button"
        }, React.createElement(Components.EditContainer, {
          data: this.props.product,
          disabled: this.props.editable === false,
          editView: "ProductAdmin",
          field: "hashtags",
          i18nKeyLabel: "productDetailEdit.productSettings",
          label: "Product Settings",
          permissions: ["createProduct"]
        }));
      }

      return null;
    }

    return renderEditButton;
  }();

  _proto.render = function () {
    function render() {
      if (Array.isArray(this.tags) && this.tags.length > 0) {
        var headerClassName = classnames({
          "tags-header": true,
          "edit": this.showEditControls
        });
        return React.createElement("div", {
          className: "pdp product-tags"
        }, React.createElement("h3", {
          className: headerClassName
        }, React.createElement(Components.Translation, {
          defaultValue: "Tags",
          i18nKey: "productDetail.tags"
        }), this.renderEditButton()), React.createElement(Components.TagList, {
          editable: false,
          product: this.props.product,
          tags: this.tags
        }));
      }

      return null;
    }

    return render;
  }();

  (0, _createClass2.default)(ProductTags, [{
    key: "tags",
    get: function () {
      return this.props.tags;
    }
  }, {
    key: "showEditControls",
    get: function () {
      return this.props.product && this.props.editable;
    }
  }]);
  return ProductTags;
}(Component);

ProductTags.propTypes = {
  editButton: PropTypes.node,
  editable: PropTypes.bool,
  product: PropTypes.object,
  tags: PropTypes.arrayOf(PropTypes.object)
};
registerComponent("ProductTags", ProductTags);
module.exportDefault(ProductTags);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variant.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/variant.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Components, registerComponent;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 3);
var Validation;
module.watch(require("@reactioncommerce/schemas"), {
  Validation: function (v) {
    Validation = v;
  }
}, 4);
var SortableItem;
module.watch(require("../../../../core/ui/client/containers"), {
  SortableItem: function (v) {
    SortableItem = v;
  }
}, 5);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 6);
var ProductVariant;
module.watch(require("../../../../../../lib/collections/schemas"), {
  ProductVariant: function (v) {
    ProductVariant = v;
  }
}, 7);

var Variant =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(Variant, _Component);

  function Variant(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleClick = function (event) {
      if (_this.props.onClick) {
        _this.props.onClick(event, _this.props.variant);
      }
    };

    _this.handleOnKeyUp = function (event) {
      // keyCode 32 (spacebar)
      // keyCode 13 (enter/return)
      if (event.keyCode === 32 || event.keyCode === 13) {
        _this.handleClick(event);
      }
    };

    _this.renderValidationButton = function () {
      if (_this.state.selfValidation.isValid === false) {
        return React.createElement(Components.Badge, {
          status: "danger",
          indicator: true,
          tooltip: "Validation error",
          i18nKeyTooltip: "admin.tooltip.validationError"
        });
      }

      if (_this.state.invalidVariant.length) {
        return React.createElement(Components.Badge, {
          status: "danger",
          indicator: true,
          tooltip: "Validation error on variant option",
          i18nKeyTooltip: "admin.tooltip.optionValidationError"
        });
      }
    };

    _this.variantValidation = function () {
      var variants = ReactionProduct.getVariants(_this.props.variant._id);
      var validationStatus;
      var invalidVariant;

      if (variants) {
        validationStatus = variants.map(function (variant) {
          return _this.validation.validate(variant);
        });
        invalidVariant = validationStatus.filter(function (status) {
          return status.isValid === false;
        });
      }

      var selfValidation = _this.validation.validate(_this.props.variant);

      _this.setState({
        invalidVariant: invalidVariant,
        selfValidation: selfValidation
      });
    };

    _this.validation = new Validation(ProductVariant);
    _this.state = {
      invalidVariant: [],
      selfValidation: []
    };
    return _this;
  }

  var _proto = Variant.prototype;

  _proto.componentWillMount = function () {
    function componentWillMount() {
      this.variantValidation();
    }

    return componentWillMount;
  }();

  _proto.renderDeletionStatus = function () {
    function renderDeletionStatus() {
      if (this.props.variant.isDeleted) {
        return React.createElement("span", {
          className: "badge badge-danger variant-badge-label"
        }, React.createElement(Components.Translation, {
          defaultValue: "Archived",
          i18nKey: "app.archived"
        }));
      }

      return null;
    }

    return renderDeletionStatus;
  }();

  _proto.render = function () {
    function render() {
      var variant = this.props.variant;
      var classes = classnames({
        "variant-detail": true,
        "variant-button": true,
        "variant-detail-selected": this.props.isSelected,
        "variant-deleted": this.props.variant.isDeleted,
        "variant-notVisible": !this.props.variant.isVisible
      });
      var variantTitleElement;

      if (typeof variant.title === "string" && variant.title.length) {
        variantTitleElement = React.createElement("span", {
          className: "variant-title"
        }, variant.title);
      } else {
        variantTitleElement = React.createElement(Components.Translation, {
          defaultValue: "Label",
          i18nKey: "productVariant.title"
        });
      }

      var variantElement = React.createElement("li", {
        className: "variant-list-item",
        id: "variant-list-item-{variant._id}",
        key: variant._id
      }, React.createElement("div", {
        onClick: this.handleClick,
        onKeyUp: this.handleOnKeyUp,
        role: "button",
        tabIndex: 0
      }, React.createElement("div", {
        className: classes
      }, React.createElement("div", {
        className: "title"
      }, variantTitleElement), React.createElement("div", {
        className: "actions"
      }, React.createElement("span", {
        className: "variant-price"
      }, React.createElement(Components.Currency, {
        amount: this.price,
        editable: this.props.editable
      })))), React.createElement("div", {
        className: "alerts"
      }, this.renderDeletionStatus(), React.createElement(Components.InventoryBadge, (0, _extends2.default)({
        className: "variant-qty-sold-out variant-badge-label"
      }, this.props)), this.renderValidationButton(), this.props.editButton)));

      if (this.props.editable) {
        return this.props.connectDragSource(this.props.connectDropTarget(variantElement));
      }

      return variantElement;
    }

    return render;
  }();

  (0, _createClass2.default)(Variant, [{
    key: "price",
    get: function () {
      return this.props.displayPrice || this.props.variant.price;
    }
  }]);
  return Variant;
}(Component);

Variant.propTypes = {
  connectDragSource: PropTypes.func,
  connectDropTarget: PropTypes.func,
  displayPrice: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  editButton: PropTypes.node,
  editable: PropTypes.bool,
  isSelected: PropTypes.bool,
  onClick: PropTypes.func,
  soldOut: PropTypes.bool,
  variant: PropTypes.object,
  visibilityButton: PropTypes.node
};
registerComponent("Variant", Variant, SortableItem("product-variant"));
module.exportDefault(SortableItem("product-variant")(Variant));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/components/variantList.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);

var VariantList =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(VariantList, _Component);

  function VariantList() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleVariantEditClick = function (event, editButtonProps) {
      if (_this.props.onEditVariant) {
        return _this.props.onEditVariant(event, editButtonProps.data);
      }

      return true;
    }, _this.handleVariantVisibilityClick = function (event, editButtonProps) {
      if (_this.props.onVariantVisibiltyToggle) {
        var isVariantVisible = !editButtonProps.data.isVisible;

        _this.props.onVariantVisibiltyToggle(event, editButtonProps.data, isVariantVisible);
      }
    }, _this.handleChildVariantClick = function (event, variant) {
      if (_this.props.onVariantClick) {
        _this.props.onVariantClick(event, variant, 1);
      }
    }, _this.handleChildVariantEditClick = function (event, editButtonProps) {
      if (_this.props.onEditVariant) {
        return _this.props.onEditVariant(event, editButtonProps.data, 1);
      }

      return true;
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = VariantList.prototype;

  _proto.isSoldOut = function () {
    function isSoldOut(variant) {
      if (this.props.isSoldOut) {
        return this.props.isSoldOut(variant);
      }

      return false;
    }

    return isSoldOut;
  }();

  _proto.renderVariants = function () {
    function renderVariants() {
      var _this2 = this;

      var variants = [];
      var addButton;

      if (this.props.editable) {
        addButton = React.createElement("div", {
          className: "rui items flex"
        }, React.createElement("div", {
          className: "rui item full justify center"
        }, React.createElement(Components.IconButton, {
          i18nKeyTooltip: "variantList.createVariant",
          icon: "fa fa-plus",
          primary: true,
          tooltip: "Create Variant",
          onClick: this.props.onCreateVariant
        })));
      }

      if (this.props.variants) {
        variants = this.props.variants.map(function (variant, index) {
          var displayPrice = _this2.props.displayPrice && _this2.props.displayPrice(variant._id);

          return React.createElement(Components.EditContainer, {
            data: variant,
            disabled: _this2.props.editable === false,
            editView: "variantForm",
            i18nKeyLabel: "productDetailEdit.editVariant",
            key: index,
            label: "Edit Variant",
            onEditButtonClick: _this2.handleVariantEditClick,
            onVisibilityButtonClick: _this2.handleVariantVisibilityClick,
            permissions: ["createProduct"],
            showsVisibilityButton: true
          }, React.createElement(Components.Variant, {
            displayPrice: displayPrice,
            editable: _this2.props.editable,
            index: index,
            isSelected: _this2.props.variantIsSelected(variant._id),
            onClick: _this2.props.onVariantClick,
            onMove: _this2.props.onMoveVariant,
            soldOut: _this2.isSoldOut(variant),
            variant: variant
          }));
        });
      }

      var variantList = React.createElement("ul", {
        className: "variant-list list-unstyled",
        id: "variant-list",
        key: "variantList"
      }, variants, addButton);

      if (variants.length === 0 && this.props.editable === false) {
        return variantList;
      } else if (variants.length > 1 || variants.length === 0) {
        return [React.createElement(Components.Divider, {
          i18nKeyLabel: "productDetail.options",
          key: "dividerWithLabel",
          label: "Options"
        }), variantList];
      } else if (variants.length === 1) {
        return [React.createElement(Components.Divider, {
          key: "divider"
        }), variantList];
      }

      return variantList;
    }

    return renderVariants;
  }();

  _proto.renderChildVariants = function () {
    function renderChildVariants() {
      var _this3 = this;

      var childVariants = [];

      if (this.props.childVariants) {
        childVariants = this.props.childVariants.map(function (childVariant, index) {
          var media = _this3.props.childVariantMedia.filter(function (mediaItem) {
            return mediaItem.document.metadata.variantId === childVariant._id;
          });

          return React.createElement(Components.EditContainer, {
            data: childVariant,
            disabled: _this3.props.editable === false,
            editView: "variantForm",
            i18nKeyLabel: "productDetailEdit.editVariant",
            key: index,
            label: "Edit Variant",
            onEditButtonClick: _this3.handleChildVariantEditClick,
            onVisibilityButtonClick: _this3.handleVariantVisibilityClick,
            permissions: ["createProduct"],
            showsVisibilityButton: true
          }, React.createElement(Components.ChildVariant, {
            isSelected: _this3.props.variantIsSelected(childVariant._id),
            media: media,
            onClick: _this3.handleChildVariantClick,
            variant: childVariant
          }));
        });
      }

      if (childVariants.length) {
        return [React.createElement(Components.Divider, {
          key: "availableOptionsDivider",
          i18nKeyLabel: "availableOptions",
          label: "Available Options"
        }), React.createElement("div", {
          className: "row variant-product-options",
          key: "childVariantList"
        }, childVariants)];
      }

      return null;
    }

    return renderChildVariants;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", {
        className: "product-variants"
      }, this.renderVariants(), this.renderChildVariants());
    }

    return render;
  }();

  return VariantList;
}(Component);

VariantList.propTypes = {
  childVariantMedia: PropTypes.arrayOf(PropTypes.any),
  childVariants: PropTypes.arrayOf(PropTypes.object),
  displayPrice: PropTypes.func,
  editable: PropTypes.bool,
  isSoldOut: PropTypes.func,
  onCreateVariant: PropTypes.func,
  onEditVariant: PropTypes.func,
  onMoveVariant: PropTypes.func,
  onVariantClick: PropTypes.func,
  onVariantVisibiltyToggle: PropTypes.func,
  variantIsSelected: PropTypes.func,
  variants: PropTypes.arrayOf(PropTypes.object)
};
module.exportDefault(VariantList);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/containers/index.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./productDetail"), {
  "default": function (v) {
    exports.ProductDetailContainer = v;
  }
}, 0);
module.watch(require("./social"), {
  "default": function (v) {
    exports.SocialContainer = v;
  }
}, 1);
module.watch(require("./variantList"), {
  "default": function (v) {
    exports.VariantListContainer = v;
  }
}, 2);
module.watch(require("./publish"), {
  "default": function (v) {
    exports.PublishContainer = v;
  }
}, 3);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"productDetail.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/containers/productDetail.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 0);

var _map;

module.watch(require("lodash/map"), {
  "default": function (v) {
    _map = v;
  }
}, 1);

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 2);

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 3);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 4);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 5);
var StyleRoot;
module.watch(require("radium"), {
  StyleRoot: function (v) {
    StyleRoot = v;
  }
}, 6);
var Components, registerComponent, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 7);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 8);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 9);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 10);
var Reaction, i18next, Logger;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 11);
var Tags, Cart;
module.watch(require("../../../../../../lib/collections"), {
  Tags: function (v) {
    Tags = v;
  },
  Cart: function (v) {
    Cart = v;
  }
}, 12);
var ProductDetail;
module.watch(require("../components"), {
  ProductDetail: function (v) {
    ProductDetail = v;
  }
}, 13);
var SocialContainer, VariantListContainer;
module.watch(require("./"), {
  SocialContainer: function (v) {
    SocialContainer = v;
  },
  VariantListContainer: function (v) {
    VariantListContainer = v;
  }
}, 14);
var Media;
module.watch(require("../../../../core/files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 15);

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(ProductDetailContainer, _Component);

    function ProductDetailContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.handleCartQuantityChange = function (event, quantity) {
        _this.setState({
          cartQuantity: Math.max(quantity, 1)
        });
      };

      _this.handleAddToCart = function () {
        var productId;
        var quantity;
        var maxQuantity;
        var totalQuantity;
        var storedQuantity = 0;
        var currentVariant = ReactionProduct.selectedVariant();
        var currentProduct = ReactionProduct.selectedProduct();

        if (currentVariant) {
          if (currentVariant.ancestors.length === 1) {
            var options = ReactionProduct.getVariants(currentVariant._id);

            if (options.length > 0) {
              Alerts.inline("Please choose options before adding to cart", "warning", {
                placement: "productDetail",
                i18nKey: "productDetail.chooseOptions",
                autoHide: 10000
              });
              return [];
            }
          }

          if (currentVariant.inventoryPolicy && currentVariant.inventoryQuantity < 1) {
            Alerts.inline("Sorry, this item is out of stock!", "warning", {
              placement: "productDetail",
              i18nKey: "productDetail.outOfStock",
              autoHide: 10000
            });
            return [];
          }

          if (_this.props.storedCart && _this.props.storedCart.items) {
            _this.props.storedCart.items.forEach(function (item) {
              if (item.variants._id === currentVariant._id) {
                storedQuantity = item.quantity;
              }
            });
          }

          quantity = parseInt(_this.state.cartQuantity, 10);
          totalQuantity = quantity + storedQuantity;
          maxQuantity = currentVariant.inventoryQuantity;

          if (quantity < 1) {
            quantity = 1;
          }

          if (currentVariant.inventoryPolicy && quantity > maxQuantity && storedQuantity < maxQuantity) {
            Alerts.inline("Your product quantity has been adjusted to the max quantity in stock", "warning", {
              placement: "productDetail",
              i18nKey: "admin.inventoryAlerts.adjustedQuantity",
              autoHide: 10000
            });
            quantity = maxQuantity - storedQuantity;
            totalQuantity = maxQuantity;
          }

          if (currentVariant.inventoryPolicy && totalQuantity > maxQuantity && storedQuantity < maxQuantity && quantity < maxQuantity) {
            Alerts.inline("Your product quantity has been adjusted to the max quantity in stock", "warning", {
              placement: "productDetail",
              i18nKey: "admin.inventoryAlerts.adjustedQuantity",
              autoHide: 10000
            });
            quantity = maxQuantity - storedQuantity;
            totalQuantity = maxQuantity;
          }

          if (currentVariant.inventoryPolicy && totalQuantity > maxQuantity) {
            Alerts.inline("Sorry, this item is out of stock!", "error", {
              placement: "productDetail",
              i18nKey: "productDetail.outOfStock",
              autoHide: 10000
            });
            return [];
          }

          if (!currentProduct.isVisible) {
            Alerts.inline("Publish product before adding to cart.", "error", {
              placement: "productDetail",
              i18nKey: "productDetail.publishFirst",
              autoHide: 10000
            });
          } else {
            productId = currentProduct._id;

            if (productId) {
              Meteor.call("cart/addToCart", productId, currentVariant._id, quantity, function (error) {
                if (error) {
                  Logger.error(error, "Failed to add to cart.");
                  return error;
                } // Reset cart quantity on success


                _this.handleCartQuantityChange(null, 1);

                _this.setState(function (_ref) {
                  var productClick = _ref.productClick;
                  return {
                    productClick: productClick + 1
                  };
                });

                return true;
              });
            } // template.$(".variant-select-option").removeClass("active");


            ReactionProduct.setCurrentVariant(null); // qtyField.val(1);
            // scroll to top on cart add

            $("html,body").animate({
              scrollTop: 0
            }, 0); // slide out label

            var addToCartText = i18next.t("productDetail.addedToCart");
            var addToCartTitle = currentVariant.title || ""; // Grab and cache the width of the alert to be used in animation

            var alertWidth = $(".cart-alert").width();
            var direction = i18next.dir() === "rtl" ? "left" : "right";
            var oppositeDirection = i18next.dir() === "rtl" ? "right" : "left";

            if ($(".cart-alert").css("display") === "none") {
              $("#spin").addClass("hidden");
              $(".cart-alert-text").text(quantity + " " + addToCartTitle + " " + addToCartText);

              _this.handleSlideOut(alertWidth, direction, oppositeDirection);

              _this.animationTimeOut = setTimeout(function () {
                _this.handleSlideIn(alertWidth, direction, oppositeDirection);
              }, 4000);
            } else {
              clearTimeout(_this.textTimeOut); // hides text and display spinner

              $(".cart-alert-text").hide();
              $("#spin").removeClass("hidden");
              _this.textTimeOut = setTimeout(function () {
                $("#spin").addClass("hidden");
                $(".cart-alert-text").text(_this.state.productClick * quantity + " " + addToCartTitle + " " + addToCartText);
                $(".cart-alert-text").fadeIn("slow");

                if (_this._isMounted) {
                  _this.setState({
                    productClick: 0
                  });
                }
              }, 2000);
              clearTimeout(_this.animationTimeOut);
              _this.animationTimeOut = setTimeout(function () {
                _this.handleSlideIn(alertWidth, direction, oppositeDirection);
              }, 4000);
            }
          }
        } else {
          Alerts.inline("Select an option before adding to cart", "warning", {
            placement: "productDetail",
            i18nKey: "productDetail.selectOption",
            autoHide: 8000
          });
        }

        return null;
      };

      _this.handleProductFieldChange = function (productId, fieldName, value) {
        Meteor.call("products/updateProductField", productId, fieldName, value, function (error) {
          if (error) {
            Alerts.toast(error.message, "error");

            _this.forceUpdate();
          }
        });
      };

      _this.handleViewContextChange = function (event, value) {
        Reaction.Router.setQueryParams({
          as: value
        });
      };

      _this.handleDeleteProduct = function () {
        ReactionProduct.archiveProduct(_this.props.product);
      };

      _this.animationTimeOut = null;
      _this.textTimeOut = null;
      _this.state = {
        cartQuantity: 1,
        productClick: 0
      };
      return _this;
    }

    var _proto = ProductDetailContainer.prototype;

    _proto.componentDidMount = function () {
      function componentDidMount() {
        this._isMounted = true;
      }

      return componentDidMount;
    }();

    _proto.componentWillUnmount = function () {
      function componentWillUnmount() {
        this._isMounted = false;
      }

      return componentWillUnmount;
    }();

    _proto.handleSlideOut = function () {
      function handleSlideOut(alertWidth, direction, oppositeDirection) {
        var _$$show$css, _$$show$css$animate;

        // Animate slide out
        return $(".cart-alert").show().css((_$$show$css = {}, _$$show$css[oppositeDirection] = "auto", _$$show$css[direction] = -alertWidth, _$$show$css)).animate((_$$show$css$animate = {}, _$$show$css$animate[oppositeDirection] = "auto", _$$show$css$animate[direction] = 0, _$$show$css$animate), 600);
      }

      return handleSlideOut;
    }();

    _proto.handleSlideIn = function () {
      function handleSlideIn(alertWidth, direction, oppositeDirection) {
        var _$$animate;

        // Animate slide in
        return $(".cart-alert").animate((_$$animate = {}, _$$animate[oppositeDirection] = "auto", _$$animate[direction] = -alertWidth, _$$animate), {
          duration: 600,
          complete: function () {
            $(".cart-alert").hide();
          }
        });
      }

      return handleSlideIn;
    }();

    _proto.render = function () {
      function render() {
        var _props = this.props,
            media = _props.media,
            product = _props.product;

        if (_isEmpty(product)) {
          return React.createElement(Components.ProductNotFound, null);
        }

        return React.createElement(StyleRoot, null, React.createElement(Comp, (0, _extends2.default)({
          cartQuantity: this.state.cartQuantity,
          mediaGalleryComponent: React.createElement(Components.MediaGallery, {
            media: media
          }),
          onAddToCart: this.handleAddToCart,
          onCartQuantityChange: this.handleCartQuantityChange,
          onViewContextChange: this.handleViewContextChange,
          socialComponent: React.createElement(SocialContainer, null),
          topVariantComponent: React.createElement(VariantListContainer, null),
          onDeleteProduct: this.handleDeleteProduct,
          onProductFieldChange: this.handleProductFieldChange
        }, this.props)));
      }

      return render;
    }();

    return ProductDetailContainer;
  }(Component), _class.propTypes = {
    media: PropTypes.arrayOf(PropTypes.object),
    product: PropTypes.object,
    storedCart: PropTypes.object
  }, _temp;
};

function composer(props, onData) {
  var tagSub = Meteor.subscribe("Tags");
  var shopIdOrSlug = Reaction.Router.getParam("shopSlug");
  var productId = Reaction.Router.getParam("handle");
  var variantId = ReactionProduct.selectedVariantId();
  var revisionType = Reaction.Router.getQueryParam("revision");
  var viewProductAs = Reaction.getUserPreferences("reaction-dashboard", "viewAs", "administrator");
  var productSub;

  if (productId) {
    productSub = Meteor.subscribe("Product", productId, shopIdOrSlug);
  }

  if (productSub && productSub.ready() && tagSub.ready() && Reaction.Subscriptions.Cart.ready()) {
    var product = ReactionProduct.setProduct(productId, variantId);

    if (Reaction.hasPermission("createProduct")) {
      if (!Reaction.getActionView() && Reaction.isActionViewOpen() === true) {
        Reaction.setActionView({
          template: "productAdmin",
          data: product
        });
      }
    } // Get the product tags


    if (product) {
      var tags;

      if (_isArray(product.hashtags)) {
        tags = _map(product.hashtags, function (id) {
          return Tags.findOne(id);
        });
      }

      Meteor.subscribe("ProductMedia", product._id);
      var mediaArray = [];
      var selectedVariant = ReactionProduct.selectedVariant();

      if (selectedVariant) {
        // Find the media for the selected variant
        mediaArray = Media.findLocal({
          "metadata.variantId": selectedVariant._id
        }, {
          sort: {
            "metadata.priority": 1
          }
        }); // If no media found, broaden the search to include other media from parents

        if (Array.isArray(mediaArray) && mediaArray.length === 0 && selectedVariant.ancestors) {
          // Loop through ancestors in reverse to find a variant that has media to use
          for (var _iterator = selectedVariant.ancestors.reverse(), _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref2;

            if (_isArray2) {
              if (_i >= _iterator.length) break;
              _ref2 = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref2 = _i.value;
            }

            var _ancestor = _ref2;
            var media = Media.findLocal({
              "metadata.variantId": _ancestor
            }, {
              sort: {
                "metadata.priority": 1
              }
            }); // If we found some media, then stop here

            if (Array.isArray(media) && media.length) {
              mediaArray = media;
              break;
            }
          }
        }
      }

      var priceRange;

      if (selectedVariant && (0, _typeof2.default)(selectedVariant) === "object") {
        var childVariants = ReactionProduct.getVariants(selectedVariant._id); // when top variant has no child variants we display only its price

        if (childVariants.length === 0) {
          priceRange = selectedVariant.price;
        } else {
          // otherwise we want to show child variants price range
          priceRange = ReactionProduct.getVariantPriceRange();
        }
      }

      var productRevision;

      if (revisionType === "published") {
        productRevision = product.__published;
      }

      var editable;

      if (viewProductAs === "customer") {
        editable = false;
      } else {
        editable = Reaction.hasPermission(["createProduct"]);
      }

      var topVariants = ReactionProduct.getTopVariants();
      var storedCart = Cart.findOne();
      onData(null, {
        variants: topVariants,
        layout: product.template || "productDetailSimple",
        product: productRevision || product,
        priceRange: priceRange,
        tags: tags,
        media: mediaArray,
        editable: editable,
        viewAs: viewProductAs,
        hasAdminPermission: Reaction.hasPermission(["createProduct"]),
        storedCart: storedCart
      });
    } else {
      // onData must be called with composeWithTracker, or else the loading icon will show forever.
      onData(null, {});
    }
  }
}

registerComponent("ProductDetail", ProductDetail, [composeWithTracker(composer), wrapComponent]); // Decorate component and export

module.exportDefault(_compose(composeWithTracker(composer), wrapComponent)(ProductDetail));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"publish.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/containers/publish.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 4);
var Products;
module.watch(require("../../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  }
}, 5);
var PublishContainer;
module.watch(require("../../../../core/revisions/client/containers/publishContainer"), {
  "default": function (v) {
    PublishContainer = v;
  }
}, 6);

var ProductPublishContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductPublishContainer, _Component);

  function ProductPublishContainer() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleMetaRemove = function (productId, metafield) {
      Meteor.call("products/removeMetaFields", productId, metafield);
    }, _this.handleProductRestore = function (product) {
      Meteor.call("products/updateProductField", product._id, "isDeleted", false);
    }, _this.handleVisibilityChange = function (event, isProductVisible) {
      var product = _this.props.product;
      if (!product) return; // Update main product

      Meteor.call("products/updateProductField", product._id, "isVisible", isProductVisible);
      var variants = Products.find({
        ancestors: {
          $in: [product._id]
        }
      }).fetch();
      variants.map(function (variant) {
        return (// update variant
          Meteor.call("products/updateProductField", variant._id, "isVisible", isProductVisible)
        );
      });
    }, _this.handlePublishActions = function (event, action, documentIds) {
      if (action === "archive") {
        ReactionProduct.archiveProduct(documentIds);
      }
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = ProductPublishContainer.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(PublishContainer, (0, _extends2.default)({
        onAction: this.handlePublishActions,
        onVisibilityChange: this.handleVisibilityChange
      }, this.props));
    }

    return render;
  }();

  return ProductPublishContainer;
}(Component);

function composer(props, onData) {
  var product = ReactionProduct.selectedProduct();
  var revisonDocumentIds;

  if (product) {
    revisonDocumentIds = [product._id];
    onData(null, {
      product: product,
      documentIds: revisonDocumentIds,
      documents: [product]
    });
  } else {
    onData(null, {});
  }
}

ProductPublishContainer.propTypes = {
  product: PropTypes.object,
  tags: PropTypes.arrayOf(PropTypes.object)
};
registerComponent("ProductPublish", ProductPublishContainer, composeWithTracker(composer)); // Decorate component and export

module.exportDefault(composeWithTracker(composer)(ProductPublishContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/containers/social.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var getPrimaryMediaForItem, ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  getPrimaryMediaForItem: function (v) {
    getPrimaryMediaForItem = v;
  },
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 3);
var SocialButtons;
module.watch(require("../../../social/client/components/socialButtons"), {
  "default": function (v) {
    SocialButtons = v;
  }
}, 4);
var createSocialSettings;
module.watch(require("../../../social/lib/helpers"), {
  createSocialSettings: function (v) {
    createSocialSettings = v;
  }
}, 5);
var EditContainer;
module.watch(require("../../../../core/ui/client/containers"), {
  EditContainer: function (v) {
    EditContainer = v;
  }
}, 6);

var ProductSocialContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ProductSocialContainer, _Component);

  function ProductSocialContainer() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ProductSocialContainer.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(EditContainer, {
        data: this.props.data,
        editView: "ProductAdmin",
        field: ["facebookMsg", "twitterMsg", "googleplusMsg", "pinterestMsg"],
        i18nKeyLabel: "productDetailEdit.editSocial",
        label: "Edit Social Messaging",
        permissions: ["createProduct"]
      }, React.createElement(SocialButtons, this.props.socialSettings));
    }

    return render;
  }();

  return ProductSocialContainer;
}(Component);

function composer(props, onData) {
  var product = ReactionProduct.selectedProduct() || {};
  var selectedVariant = ReactionProduct.selectedVariant() || {};
  var title = product.title;
  var mediaUrl;

  if (selectedVariant) {
    title = selectedVariant.title;
  }

  var description;

  if (typeof product.description === "string") {
    description = product.description.substring(0, 254);
  }

  var media = getPrimaryMediaForItem({
    productId: product._id,
    variantId: selectedVariant && selectedVariant._id
  });

  if (media) {
    mediaUrl = media.url({
      store: "large"
    });
  }

  var options = {
    data: product,
    title: product.title,
    description: description,
    placement: "productDetail",
    buttonClassName: "fa-lg",
    media: mediaUrl,
    apps: {
      facebook: {
        description: product.facebookMsg || description,
        media: mediaUrl
      },
      twitter: {
        description: product.twitterMsg || title,
        media: mediaUrl
      },
      googleplus: {
        itemtype: "Product",
        description: product.googleplusMsg || description,
        media: mediaUrl
      },
      pinterest: {
        description: product.pinterestMsg || description,
        media: mediaUrl
      }
    }
  };
  var socialSettings = createSocialSettings(options);
  onData(null, {
    data: product,
    socialSettings: socialSettings
  });
}

ProductSocialContainer.propTypes = {
  data: PropTypes.object,
  socialSettings: PropTypes.object
};
module.exportDefault(composeWithTracker(composer)(ProductSocialContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variantList.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/containers/variantList.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var composeWithTracker, Components;
module.watch(require("../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  Components: function (v) {
    Components = v;
  }
}, 4);
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 5);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var getChildVariants;
module.watch(require("../selectors/variants"), {
  getChildVariants: function (v) {
    getChildVariants = v;
  }
}, 7);
var Products;
module.watch(require("../../../../../../lib/collections"), {
  Products: function (v) {
    Products = v;
  }
}, 8);
var update;
module.watch(require("immutability-helper"), {
  "default": function (v) {
    update = v;
  }
}, 9);
var getVariantIds;
module.watch(require("../../../../../../lib/selectors/variants"), {
  getVariantIds: function (v) {
    getVariantIds = v;
  }
}, 10);
var Media;
module.watch(require("../../../../core/files/client"), {
  Media: function (v) {
    Media = v;
  }
}, 11);

function variantIsSelected(variantId) {
  var current = ReactionProduct.selectedVariant();

  if (current && (0, _typeof2.default)(current) === "object" && (variantId === current._id || current.ancestors.indexOf(variantId) >= 0)) {
    return true;
  }

  return false;
}

function variantIsInActionView(variantId) {
  var actionViewVariant = Reaction.getActionView().data;

  if (actionViewVariant) {
    // Check if the variant is selected, and also visible & selected in the action view
    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();
  }

  return false;
}

function getTopVariants() {
  var inventoryTotal = 0;
  var variants = ReactionProduct.getTopVariants();

  if (variants.length) {
    // calculate inventory total for all variants
    for (var _iterator = variants, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _variant2 = _ref;

      if (_variant2.inventoryManagement) {
        var qty = ReactionProduct.getVariantQuantity(_variant2);

        if (typeof qty === "number") {
          inventoryTotal += qty;
        }
      }
    } // calculate percentage of total inventory of this product


    for (var _iterator2 = variants, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _variant3 = _ref2;

      var _qty = ReactionProduct.getVariantQuantity(_variant3);

      _variant3.inventoryTotal = inventoryTotal;

      if (_variant3.inventoryManagement && inventoryTotal) {
        _variant3.inventoryPercentage = parseInt(_qty / inventoryTotal * 100, 10);
      } else {
        // for cases when sellers doesn't use inventory we should always show
        // "green" progress bar
        _variant3.inventoryPercentage = 100;
      }

      if (_variant3.title) {
        _variant3.inventoryWidth = parseInt(_variant3.inventoryPercentage - _variant3.title.length, 10);
      } else {
        _variant3.inventoryWidth = 0;
      }
    } // sort variants in correct order


    variants.sort(function (a, b) {
      return a.index - b.index;
    });
    return variants;
  }

  return [];
}

function isSoldOut(variant) {
  return ReactionProduct.getVariantQuantity(variant) < 1;
}

var VariantListContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(VariantListContainer, _Component);

  function VariantListContainer() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.handleCreateVariant = function () {
      var selectedProduct = ReactionProduct.selectedProduct();
      Meteor.call("products/createVariant", selectedProduct._id, function (error) {
        if (error) {
          Alerts.alert({
            text: i18next.t("productDetailEdit.addVariantFail", {
              title: selectedProduct.title
            }),
            confirmButtonText: i18next.t("app.close", {
              defaultValue: "Close"
            })
          });
        }
      });
    }, _this.handleVariantClick = function (event, variant) {
      var ancestors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;

      _this.handleEditVariant(event, variant, ancestors);
    }, _this.handleEditVariant = function (event, variant) {
      var ancestors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
      var editVariant = variant;

      if (ancestors >= 0) {
        editVariant = Products.findOne(variant.ancestors[ancestors]);
      }

      var cardName = "variant-" + variant._id;
      Reaction.state.set("edit/focus", cardName);
      ReactionProduct.setCurrentVariant(variant._id);
      Session.set("variant-form-" + editVariant._id, true);

      if (Reaction.hasPermission("createProduct") && !Reaction.isPreview()) {
        Reaction.showActionView({
          label: "Edit Variant",
          i18nKeyLabel: "productDetailEdit.editVariant",
          template: "variantForm",
          data: editVariant
        });
      } // Prevent the default edit button `onEditButtonClick` function from running


      return false;
    }, _this.handleVariantVisibilityToggle = function (event, variant, variantIsVisible) {
      Meteor.call("products/updateProductField", variant._id, "isVisible", variantIsVisible);
    }, _this.handleMoveVariant = function (dragIndex, hoverIndex) {
      var variant = _this.props.variants[dragIndex]; // Apply new sort order to variant list

      var newVariantOrder = update(_this.props.variants, {
        $splice: [[dragIndex, 1], [hoverIndex, 0, variant]]
      }); // Set local state so the component does't have to wait for a round-trip
      // to the server to get the updated list of variants

      _this.setState({
        variants: newVariantOrder
      }); // Save the updated positions


      Meteor.defer(function () {
        Meteor.call("products/updateVariantsPosition", getVariantIds(newVariantOrder));
      });
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = VariantListContainer.prototype;

  _proto.componentWillReceiveProps = function () {
    function componentWillReceiveProps() {
      this.setState({});
    }

    return componentWillReceiveProps;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement(Components.DragDropProvider, null, React.createElement(Components.VariantList, (0, _extends2.default)({
        onEditVariant: this.handleEditVariant,
        onMoveVariant: this.handleMoveVariant,
        onVariantClick: this.handleVariantClick,
        onVariantVisibiltyToggle: this.handleVariantVisibilityToggle,
        onCreateVariant: this.handleCreateVariant
      }, this.props, {
        variants: this.variants
      })));
    }

    return render;
  }();

  (0, _createClass2.default)(VariantListContainer, [{
    key: "variants",
    get: function () {
      return this.state && this.state.variants || this.props.variants;
    }
  }, {
    key: "productHandle",
    get: function () {
      var selectedProduct = ReactionProduct.selectedProduct();
      return selectedProduct.__published && selectedProduct.__published.handle || selectedProduct.handle;
    }
  }]);
  return VariantListContainer;
}(Component);

function composer(props, onData) {
  var childVariantMedia = [];
  var childVariants = getChildVariants();

  if (Array.isArray(childVariants)) {
    childVariantMedia = Media.findLocal({
      "metadata.variantId": {
        $in: getVariantIds(childVariants)
      }
    }, {
      sort: {
        "metadata.priority": 1
      }
    });
  }

  var editable;

  if (Reaction.isPreview() === true) {
    editable = false;
  } else {
    editable = Reaction.hasPermission(["createProduct"]);
  }

  onData(null, {
    variants: getTopVariants(),
    variantIsSelected: variantIsSelected,
    variantIsInActionView: variantIsInActionView,
    childVariants: childVariants,
    childVariantMedia: childVariantMedia,
    displayPrice: ReactionProduct.getVariantPriceRange,
    isSoldOut: isSoldOut,
    editable: editable
  });
}

VariantListContainer.propTypes = {
  variants: PropTypes.arrayOf(PropTypes.object)
};
module.exportDefault(composeWithTracker(composer)(VariantListContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"selectors":{"variants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/selectors/variants.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  getChildVariants: function () {
    return getChildVariants;
  }
});
var ReactionProduct;
module.watch(require("../../../../../../lib/api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 0);

function getChildVariants() {
  var childVariants = [];
  var variants = ReactionProduct.getVariants();

  if (variants.length > 0) {
    var current = ReactionProduct.selectedVariant();

    if (!current) {
      return [];
    }

    if (current.ancestors.length === 1) {
      variants.map(function (variant) {
        if (typeof variant.ancestors[1] === "string" && variant.ancestors[1] === current._id && variant.optionTitle && variant.type !== "inventory") {
          childVariants.push(variant);
        }

        return childVariants;
      });
    } else {
      // TODO not sure we need this part...
      variants.map(function (variant) {
        if (typeof variant.ancestors[1] === "string" && variant.ancestors.length === current.ancestors.length && variant.ancestors[1] === current.ancestors[1] && variant.optionTitle) {
          childVariants.push(variant);
        }

        return childVariants;
      });
    }

    return childVariants;
  }

  return null;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/product-detail-simple/client/index.js                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/productDetailSimple.html"));
module.watch(require("./templates/productDetailSimple.js"));
var registerComponent;
module.watch(require("../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 0);
var ProductField, ProductTags, ProductMetadata, PriceRange, AddToCartButton, ProductNotFound, ProductDetail, VariantList;
module.watch(require("./components"), {
  ProductField: function (v) {
    ProductField = v;
  },
  ProductTags: function (v) {
    ProductTags = v;
  },
  ProductMetadata: function (v) {
    ProductMetadata = v;
  },
  PriceRange: function (v) {
    PriceRange = v;
  },
  AddToCartButton: function (v) {
    AddToCartButton = v;
  },
  ProductNotFound: function (v) {
    ProductNotFound = v;
  },
  ProductDetail: function (v) {
    ProductDetail = v;
  },
  VariantList: function (v) {
    VariantList = v;
  }
}, 1);
var Divider;
module.watch(require("../../../core/ui/client/components"), {
  Divider: function (v) {
    Divider = v;
  }
}, 2);
var SocialContainer, VariantListContainer;
module.watch(require("./containers"), {
  SocialContainer: function (v) {
    SocialContainer = v;
  },
  VariantListContainer: function (v) {
    VariantListContainer = v;
  }
}, 3);
var AlertContainer, MediaGalleryContainer;
module.watch(require("../../../core/ui/client/containers"), {
  AlertContainer: function (v) {
    AlertContainer = v;
  },
  MediaGalleryContainer: function (v) {
    MediaGalleryContainer = v;
  }
}, 4);
// Register PDP components and some others
registerComponent("productDetail", ProductDetail);
registerComponent("ProductField", ProductField);
registerComponent("ProductTags", ProductTags);
registerComponent("ProductMetadata", ProductMetadata);
registerComponent("PriceRange", PriceRange);
registerComponent("AlertContainer", AlertContainer);
registerComponent("VariantList", VariantList);
registerComponent("MediaGalleryContainer", MediaGalleryContainer);
registerComponent("SocialContainer", SocialContainer);
registerComponent("VariantListContainer", VariantListContainer);
registerComponent("AddToCartButton", AddToCartButton);
registerComponent("Divider", Divider);
registerComponent("ProductNotFound", ProductNotFound);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"search-mongo":{"client":{"settings":{"search.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/search-mongo/client/settings/search.html                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.search.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.search.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/search-mongo/client/settings/template.search.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("searchSettings");
Template["searchSettings"] = new Template("Template.searchSettings", (function() {
  var view = this;
  return HTML.DIV({
    class: "panel panel-default"
  }, HTML.Raw('\n    <div class="panel-heading">\n      <div data-i18n="searchSettings.productSearchSettings.panelTitle" class="panel-title">Product Search Settings</div>\n    </div>\n    '), HTML.DIV({
    class: "panel-body"
  }, "\n      ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("SearchPackageConfig")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("method-update"),
      meteormethod: Spacebars.call("search/updateSearchSettings"),
      id: Spacebars.call("search-update-form"),
      class: Spacebars.call("container-fluid-md")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n\n        ", HTML.DIV({
        class: "row"
      }, "\n          ", HTML.DIV({
        class: "form-group col-md-8"
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.includes.title"),
          i18nKey: Spacebars.call("searchSettings.productSearchSettings.includeTitle"),
          template: Spacebars.call("searchCheckbox")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n\n          ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "settings.products.weights.title"
            }));
          }, function() {
            return " has-error";
          }), " col-md-3" ];
        }
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.weights.title"),
          type: Spacebars.call("number")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n        "), "\n\n        ", HTML.DIV({
        class: "row"
      }, "\n          ", HTML.DIV({
        class: "form-group col-md-8"
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.includes.description"),
          i18nKey: Spacebars.call("searchSettings.productSearchSettings.includeDescription"),
          template: Spacebars.call("searchCheckbox")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n\n          ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "settings.products.weights.description"
            }));
          }, function() {
            return " has-error";
          }), " col-md-3" ];
        }
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.weights.description")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n        "), "\n\n        ", HTML.DIV({
        class: "row"
      }, "\n          ", HTML.DIV({
        class: "form-group col-md-8"
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.includes.pageTitle"),
          i18nKey: Spacebars.call("searchSettings.productSearchSettings.includePageTitle"),
          template: Spacebars.call("searchCheckbox")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n\n          ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "settings.products.weights.pageTitle"
            }));
          }, function() {
            return " has-error";
          }), " col-md-3" ];
        }
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.weights.pageTitle"),
          type: Spacebars.call("number")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n        "), "\n\n        ", HTML.DIV({
        class: "row"
      }, "\n          ", HTML.DIV({
        class: "form-group col-md-8"
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.includes.metafields"),
          i18nKey: Spacebars.call("searchSettings.productSearchSettings.includeDetails"),
          template: Spacebars.call("searchCheckbox")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n\n          ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "settings.products.weights.metafields"
            }));
          }, function() {
            return " has-error";
          }), " col-md-3" ];
        }
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.weights.metafields"),
          type: Spacebars.call("number")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n        "), "\n\n        ", HTML.DIV({
        class: "row"
      }, "\n          ", HTML.DIV({
        class: "form-group col-md-8"
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.includes.vendor"),
          i18nKey: Spacebars.call("searchSettings.productSearchSettings.includeVendor"),
          template: Spacebars.call("searchCheckbox")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n\n          ", HTML.DIV({
        class: function() {
          return [ "form-group", Blaze.If(function() {
            return Spacebars.dataMustache(view.lookup("afFieldIsInvalid"), Spacebars.kw({
              name: "settings.products.weights.vendor"
            }));
          }, function() {
            return " has-error";
          }), " col-md-3" ];
        }
      }, "\n            ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.products.weights.vendor"),
          type: Spacebars.call("number")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afFieldInput"));
      }), "\n          "), "\n        "), "\n\n        ", HTML.BUTTON({
        type: "submit",
        class: "btn btn-primary pull-right"
      }, HTML.SPAN({
        "data-i18n": "app.saveChanges"
      }, "Save Changes")), "\n      " ];
    });
  }), "\n    "), HTML.Raw('\n    <!--<div class="panel-heading">\n      <div data-i18n="searchSettings.orderSearchSettings.panelTitle" class="panel-title">Order Search Settings</div>\n    </div>\n    <div data-i18n="searchSettings.noSettings" class="panel-body">No settings currently available</div>\n\n    <div class="panel-heading">\n      <div data-i18n="searchSettings.accountSearchSettings.panelTitle" class="panel-title">Account Search Settings</div>\n    </div>\n    <div data-i18n="searchSettings.noSettings" class="panel-body">No settings currently available</div>-->\n  '));
}));

Template.__checkName("afCheckbox_searchCheckbox");
Template["afCheckbox_searchCheckbox"] = new Template("Template.afCheckbox_searchCheckbox", (function() {
  var view = this;
  return HTML.DIV({
    class: "checkbox"
  }, "\n    ", HTML.LABEL("\n      ", HTML.INPUT(HTML.Attrs({
    type: "checkbox",
    value: "true"
  }, function() {
    return Spacebars.attrMustache(view.lookup("atts"));
  })), "\n      ", HTML.SPAN({
    class: "searchSettingsCheckbox",
    "data-i18n": function() {
      return Spacebars.mustache(Spacebars.dot(view.lookup("atts"), "i18nKey"));
    }
  }, Blaze.View("lookup:afFieldLabelText", function() {
    return Spacebars.mustache(view.lookup("afFieldLabelText"), Spacebars.kw({
      name: Spacebars.dot(view.lookup("."), "name")
    }));
  })), "\n    "), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/search-mongo/client/settings/search.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 2);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 3);
var SearchPackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  SearchPackageConfig: function (v) {
    SearchPackageConfig = v;
  }
}, 4);
Template.searchSettings.helpers({
  SearchPackageConfig: function () {
    return SearchPackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "reaction-search",
      shopId: Reaction.getShopId()
    });
  }
});
Template.searchSettings.events({
  "click [data-event-action=showSearchSettings]": function () {
    Reaction.showActionView();
  }
});
AutoForm.hooks({
  "search-update-form": {
    onSuccess: function () {
      Alerts.removeSeen();
      return Alerts.toast(i18next.t("searchSettings.settingsSaved"), "success");
    },
    onError: function (operation, error) {
      Alerts.removeSeen();
      return Alerts.toast(i18next.t("searchSettings.settingsFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/search-mongo/client/index.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/search.html"));
module.watch(require("./settings/search.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/search-mongo/lib/collections/schemas/index.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./search"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/search-mongo/lib/collections/schemas/search.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  SearchPackageConfig: function () {
    return SearchPackageConfig;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 1);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 2);
var SearchPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.products": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.products.includes": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.products.weights": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.products.includes.title": {
    type: Boolean,
    defaultValue: true,
    label: "Include title"
  },
  "settings.products.weights.title": {
    type: SimpleSchema.Integer,
    label: "Title weight",
    defaultValue: 10,
    max: 10,
    min: 1
  },
  "settings.products.includes.description": {
    type: Boolean,
    label: "Include description",
    defaultValue: true
  },
  "settings.products.weights.description": {
    type: SimpleSchema.Integer,
    label: "Desc. weight",
    defaultValue: 5,
    max: 10,
    min: 1
  },
  "settings.products.includes.pageTitle": {
    type: Boolean,
    label: "Include page title",
    defaultValue: false
  },
  "settings.products.weights.pageTitle": {
    type: SimpleSchema.Integer,
    label: "Page title weight",
    defaultValue: 2,
    max: 10,
    min: 1
  },
  "settings.products.includes.metafields": {
    type: Boolean,
    label: "Include details",
    defaultValue: true
  },
  "settings.products.weights.metafields": {
    type: SimpleSchema.Integer,
    label: "Details weight",
    defaultValue: 6,
    max: 10,
    min: 1
  },
  "settings.products.includes.vendor": {
    type: Boolean,
    label: "Include vendor",
    defaultValue: true
  },
  "settings.products.weights.vendor": {
    type: SimpleSchema.Integer,
    label: "Vendor weight",
    defaultValue: 6,
    max: 10,
    min: 1
  }
});
registerSchema("SearchPackageConfig", SearchPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"shipping-shippo":{"client":{"settings":{"carriers.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/carriers.html                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.carriers.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.carriers.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/template.carriers.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shippoCarriers");
Template["shippoCarriers"] = new Template("Template.shippoCarriers", (function() {
  var view = this;
  return [ HTML.DIV({
    class: "row"
  }, "\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("carrierGrid"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  "), "\n\n  ", Blaze.If(function() {
    return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "isEditing");
  }, function() {
    return [ "\n    ", HTML.DIV("\n      ", Blaze.If(function() {
      return Spacebars.dataMustache(Spacebars.dot(view.lookup("instance"), "state", "get"), "editingId");
    }, function() {
      return [ "\n        ", HTML.DIV("\n          ", Blaze._TemplateWith(function() {
        return {
          schema: Spacebars.call(Spacebars.dot(view.lookup("Schemas"), "ShippingProvider")),
          type: Spacebars.call("method"),
          meteormethod: Spacebars.call("shippo/carrier/update"),
          doc: Spacebars.call(view.lookup("shippoCarrier")),
          id: Spacebars.call("shipping-carrier-update-form"),
          resetOnSuccess: Spacebars.call(true)
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("autoForm"), function() {
          return [ "\n            ", HTML.DIV({
            class: "col-sm-12"
          }, "\n              ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("label"),
              style: Spacebars.call("pointer-events: none; cursor: not-allowed; tab-index: -1;")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n              ", HTML.DIV({
            class: "pull-right"
          }, "\n                ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("enabled")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afQuickField"));
          }), "\n                ", Blaze._TemplateWith(function() {
            return {
              name: Spacebars.call("_id"),
              type: Spacebars.call("hidden")
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("afFieldInput"));
          }), "\n              "), "\n            "), "\n            ", Blaze._TemplateWith(function() {
            return {
              instance: Spacebars.call(view.lookup("instance"))
            };
          }, function() {
            return Spacebars.include(view.lookupTemplate("shippoCarrierSubmitButton"));
          }), "\n          " ];
        });
      }), "\n        "), "\n      " ];
    }), "\n    "), "\n  " ];
  }) ];
}));

Template.__checkName("shippoCarrierSubmitButton");
Template["shippoCarrierSubmitButton"] = new Template("Template.shippoCarrierSubmitButton", (function() {
  var view = this;
  return HTML.Raw('<div class="clearfix">\n    <div class="pull-right">\n      <button type="button" class="btn btn-primary cancel" data-i18n="app.cancel">Cancel</button>\n      <button type="submit" class="btn btn-primary" data-i18n="app.saveChanges">Save Changes</button>\n    </div>\n  </div>');
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippo.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/shippo.html                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.shippo.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.shippo.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/template.shippo.js                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("shippoSettings");
Template["shippoSettings"] = new Template("Template.shippoSettings", (function() {
  var view = this;
  return Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "apiKey"));
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel-group"
    }, "\n      ", Blaze._TemplateWith(function() {
      return {
        meteormethod: Spacebars.call("shippo/updateApiKey"),
        schema: Spacebars.call(view.lookup("ShippoPackageConfig")),
        doc: Spacebars.call(view.lookup("packageData")),
        type: Spacebars.call("method-update"),
        id: Spacebars.call("shippo-update-form")
      };
    }, function() {
      return Spacebars.include(view.lookupTemplate("autoForm"), function() {
        return [ "\n        ", Blaze._TemplateWith(function() {
          return {
            name: Spacebars.call("settings.apiKey"),
            class: Spacebars.call("form-control")
          };
        }, function() {
          return Spacebars.include(view.lookupTemplate("afQuickField"));
        }), "\n        ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n      " ];
      });
    }), "\n    "), "\n  " ];
  }, function() {
    return [ "\n    ", HTML.DIV({
      class: "panel-group collapse",
      id: "shippo-settings"
    }, "\n      ", Blaze._TemplateWith(function() {
      return {
        meteormethod: Spacebars.call("shippo/updateApiKey"),
        schema: Spacebars.call(view.lookup("ShippoPackageConfig")),
        doc: Spacebars.call(view.lookup("packageData")),
        type: Spacebars.call("method-update"),
        id: Spacebars.call("shippo-update-form")
      };
    }, function() {
      return Spacebars.include(view.lookupTemplate("autoForm"), function() {
        return [ "\n        ", Blaze._TemplateWith(function() {
          return {
            name: Spacebars.call("settings.apiKey"),
            class: Spacebars.call("form-control")
          };
        }, function() {
          return Spacebars.include(view.lookupTemplate("afQuickField"));
        }), "\n        ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n      " ];
      });
    }), "\n    "), "\n    ", HTML.A({
      "data-toggle": "collapse",
      href: "#shippo-settings",
      "aria-expanded": "false",
      "aria-controls": "shippo-settings"
    }, "\n      ", HTML.SPAN({
      class: "text-success fa fa-circle",
      "aria-hidden": "true"
    }), "\n      ", HTML.SPAN({
      "data-i18n": "admin.shippingSettings.editApiKey"
    }, "Edit API Key"), "\n    "), "\n    ", HTML.A({
      class: "pull-right",
      "data-event-action": "fetchShippoProviders",
      "data-i18n": "admin.shippingSettings.refresh"
    }, "Refresh methods"), "\n    ", HTML.DIV("\n      ", Spacebars.include(view.lookupTemplate("shippoCarriers")), "\n    "), "\n  " ];
  });
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"carriers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/carriers.js                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 3);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 4);
var Shipping;
module.watch(require("../../../../../../lib/collections"), {
  Shipping: function (v) {
    Shipping = v;
  }
}, 5);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 6);
var Loading, SortableTable;
module.watch(require("../../../../core/ui/client/components"), {
  Loading: function (v) {
    Loading = v;
  },
  SortableTable: function (v) {
    SortableTable = v;
  }
}, 7);
var ShippoTableColumn;
module.watch(require("./shippoTableColumn"), {
  "default": function (v) {
    ShippoTableColumn = v;
  }
}, 8);
module.watch(require("./carriers.html"));
Template.shippoCarriers.onCreated(function () {
  var _this = this;

  this.autorun(function () {
    _this.subscribe("Shipping");
  });
  this.state = new ReactiveDict();
  this.state.setDefault({
    isEditing: false,
    editingId: null
  });
});
Template.shippoCarriers.helpers({
  carrierGrid: function () {
    var filteredFields = ["name", "carrier", "label", "enabled"];
    var noDataMessage = i18next.t("admin.shippingSettings.noCarriersFound");
    var instance = Template.instance(); // griddle helper to select row

    function editRow(options) {
      var currentId = instance.state.get("editingId"); // isEditing is shipping rate object

      instance.state.set("isEditing", options.props.data);
      instance.state.set("editingId", options.props.data._id); // toggle edit mode clicking on same row

      if (currentId === options.props.data._id) {
        instance.state.set("isEditing", null);
        instance.state.set("editingId", null);
      }
    } // add shipping-carriers-grid-row class


    var customRowMetaData = {
      bodyCssClassName: function () {
        return "shipping-carriers-grid-row";
      }
    }; // add i18n handling to headers

    var customColumnMetadata = [];
    filteredFields.forEach(function (field) {
      var colWidth;
      var colStyle;
      var colClassName;

      if (field === "enabled") {
        colWidth = undefined;
        colStyle = {
          textAlign: "center"
        };
        colClassName = "shippo-carrier-status";
      }

      var columnMeta = {
        accessor: field,
        Header: i18next.t("admin.shippingGrid." + field),
        Cell: function (row) {
          return (// eslint-disable-line
            React.createElement(ShippoTableColumn, {
              row: row
            })
          );
        },
        className: colClassName,
        width: colWidth,
        style: colStyle
      };
      customColumnMetadata.push(columnMeta);
    }); // filter and extract shipping methods
    // from flat rate shipping provider

    function transform(results) {
      var result = [];

      for (var _iterator = results, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _method = _ref;

        if (_method.provider && (0, _typeof2.default)(_method.provider.shippoProvider) === "object") {
          _method.provider.carrier = _method.name;
          result.push(_method.provider);
        }
      }

      return result;
    } // return shipping Grid


    return {
      component: SortableTable,
      publication: "Shipping",
      transform: transform,
      collection: Shipping,
      showFilter: true,
      rowMetadata: customRowMetaData,
      filteredFields: filteredFields,
      columns: filteredFields,
      noDataMessage: noDataMessage,
      onRowClick: editRow,
      columnMetadata: customColumnMetadata,
      externalLoadingComponent: Loading
    };
  },
  instance: function () {
    var instance = Template.instance();
    return instance;
  },
  shippoCarrier: function () {
    var instance = Template.instance();
    var id = instance.state.get("editingId");
    var shippoCarriers = Shipping.findOne({
      "provider._id": id
    });
    return shippoCarriers.provider;
  }
}); //
// on submit lets clear the form state
//

Template.shippoCarriers.events({
  "submit #shipping-carrier-insert-form": function () {
    var instance = Template.instance();
    instance.state.set({
      isEditing: true,
      editingId: null
    });
  },
  "click .cancel, .shipping-carriers-grid-row .active": function () {
    var instance = Template.instance(); // remove active rows from grid

    instance.state.set({
      isEditing: false,
      editingId: null
    });
    $(".shipping-carriers-grid-row").removeClass("active");
  },
  "click .shipping-carriers-grid-row": function (event) {
    // toggle all rows off, then add our active row
    $(".shipping-carriers-grid-row").removeClass("active");
    Template.instance().$(event.currentTarget).addClass("active");
  }
}); //
// Hooks for update and insert forms
//

AutoForm.hooks({
  "shipping-carrier-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.shippingSettings.carrierSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.shippingSettings.carrierFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippo.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/shippo.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 4);
var ShippoPackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  ShippoPackageConfig: function (v) {
    ShippoPackageConfig = v;
  }
}, 5);
module.watch(require("./shippo.html"));
Template.shippoSettings.helpers({
  packageData: function () {
    return Packages.findOne({
      name: "reaction-shippo",
      shopId: Reaction.getShopId()
    });
  },
  ShippoPackageConfig: function () {
    return ShippoPackageConfig;
  }
});
Template.shippoSettings.events({
  "click [data-event-action=fetchShippoProviders]": function (event) {
    event.preventDefault();
    Meteor.call("shippo/fetchProviders");
  }
});
AutoForm.hooks({
  "shippo-update-form": {
    onSuccess: function (formType, result) {
      Alerts.removeSeen();
      var successMsg = result.type === "delete" ? i18next.t("admin.settings.saveSuccess") : i18next.t("shippo.connectedAndSaved");
      return Alerts.toast(successMsg, "success", {
        autoHide: true
      });
    },
    onError: function (operation, error) {
      Alerts.removeSeen();
      return Alerts.toast("Shippo settings update failed. " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippoTableColumn.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/settings/shippoTableColumn.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Icon;
module.watch(require("../../../../core/ui/client/components"), {
  Icon: function (v) {
    Icon = v;
  }
}, 2);

var ShippoTableColumn =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(ShippoTableColumn, _Component);

  function ShippoTableColumn() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ShippoTableColumn.prototype;

  _proto.render = function () {
    function render() {
      var row = this.props.row;
      var renderColumn = row.column.id;

      if (renderColumn === "enabled") {
        if (row.value === true) {
          return React.createElement("span", null, React.createElement(Icon, {
            icon: "fa fa-check",
            className: "enabled"
          }));
        }

        return React.createElement("span", null, React.createElement(Icon, {
          icon: "fa fa-check",
          className: "disabled"
        }));
      }

      return React.createElement("span", null, row.value);
    }

    return render;
  }();

  return ShippoTableColumn;
}(Component);

ShippoTableColumn.propTypes = {
  data: PropTypes.object,
  row: PropTypes.object
};
module.exportDefault(ShippoTableColumn);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/client/index.js                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/shippo"));
module.watch(require("./settings/carriers"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/lib/collections/schemas/index.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./shippo"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shippo.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/shipping-shippo/lib/collections/schemas/shippo.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  ShippoPackageConfig: function () {
    return ShippoPackageConfig;
  }
});
var PackageConfig;
module.watch(require("../../../../../../../lib/collections/schemas/registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 0);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 1);
var ShippoPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.apiKey": {
    type: String,
    label: "API Key",
    min: 10,
    optional: true
  }
});
registerSchema("ShippoPackageConfig", ShippoPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"sms":{"client":{"templates":{"smsSettings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/templates/smsSettings.html                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.smsSettings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.smsSettings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/templates/template.smsSettings.js                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("smsSettings");
Template["smsSettings"] = new Template("Template.smsSettings", (function() {
  var view = this;
  return HTML.DIV("\n        ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("SmsSettings"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n    ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"smsSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/templates/smsSettings.js                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 1);
Template.smsSettings.helpers({
  SmsSettings: function () {
    return {
      component: Components.SmsSettings
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"actions":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/actions/index.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings"), {
  "default": function (v) {
    exports.settings = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/actions/settings.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Alert;
module.watch(require("sweetalert2"), {
  "default": function (v) {
    Alert = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 2);
module.exportDefault({
  /**
   * Save email settings
   * @param {Object} settings - object of mail provider settings
   * @param {Function} callback - optional callback
   * @return {Boolean} returns true if all fields provided and update method called
   */
  saveSettings: function (settings, callback) {
    var apiKey = settings.apiKey,
        apiToken = settings.apiToken,
        smsProvider = settings.smsProvider,
        smsPhone = settings.smsPhone;

    if (!apiKey) {
      Alert(i18next.t("app.error"), i18next.t("admin.alerts.noApiKey"), "error");
      return callback();
    }

    if (!apiToken) {
      Alert(i18next.t("app.error"), i18next.t("admin.alerts.noApiToken"), "error");
      return callback();
    }

    if (!smsProvider) {
      Alert(i18next.t("app.error"), i18next.t("admin.alerts.noSmsProvider"), "error");
      return callback();
    }

    if (!smsPhone) {
      Alert(i18next.t("app.error"), i18next.t("admin.alerts.noSmsPhone"), "error");
      return callback();
    }

    var save = function () {
      Meteor.call("sms/saveSettings", settings, function (err) {
        if (err) {
          return Alert(i18next.t("app.error"), "Your API credentials could not be saved", "error");
        }

        return Alert({
          title: i18next.t("app.success"),
          text: i18next.t("admin.alerts.saveSuccess"),
          type: "success",
          timer: 1700
        }).catch(function () {
          return null;
        });
      });
    };

    save();
    return callback();
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"smsSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/components/smsSettings.js                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Components;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);

var SmsSettings =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SmsSettings, _Component);

  function SmsSettings(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleProductFieldSave = function (productId, fieldName, value) {
      var updateValue = value; // special case, slugify handles.

      if (fieldName === "handle") {
        updateValue = Reaction.getSlug(value);
      }

      Meteor.call("products/updateProductField", productId, fieldName, updateValue);
    };

    _this.state = {
      settings: props.settings || {},
      isSaving: false
    };
    _this.handleStateChange = _this.handleStateChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSelect = _this.handleSelect.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = SmsSettings.prototype;

  _proto.handleStateChange = function () {
    function handleStateChange(e) {
      var settings = this.state.settings;
      settings[e.target.name] = e.target.value;
      this.setState({
        settings: settings
      });
    }

    return handleStateChange;
  }();

  _proto.handleSubmit = function () {
    function handleSubmit(e) {
      var _this2 = this;

      e.preventDefault();
      var saveSettings = this.props.saveSettings;
      var settings = this.state.settings;
      this.setState({
        isSaving: true
      });
      saveSettings(settings, function () {
        return _this2.setState({
          isSaving: false
        });
      });
    }

    return handleSubmit;
  }();

  _proto.handleSelect = function () {
    function handleSelect(e) {
      var settings = this.state.settings;
      settings.smsProvider = e;
      this.setState({
        settings: settings
      });
    }

    return handleSelect;
  }();

  _proto.render = function () {
    function render() {
      var _state = this.state,
          settings = _state.settings,
          isSaving = _state.isSaving;
      var smsProviders = [{
        label: "Twilio",
        value: "twilio"
      }, {
        label: "Nexmo",
        value: "nexmo"
      }];
      return React.createElement(Components.CardGroup, null, React.createElement(Components.Card, null, React.createElement(Components.CardHeader, {
        actAsExpander: true,
        i18nKeyTitle: "admin.settings.smsProvider",
        title: "SMS Provider"
      }), React.createElement(Components.CardBody, {
        expandable: true
      }, React.createElement("form", {
        onSubmit: this.handleSubmit
      }, React.createElement(Components.Select, {
        clearable: false,
        label: "Provider Name",
        i18nKeyLabel: "admin.settings.providerName",
        placeholder: "Select an SMS provider",
        i18nKeyPlaceholder: "admin.settings.selectProvider",
        name: "smsProvider",
        onChange: this.handleSelect,
        options: smsProviders,
        value: settings.smsProvider || ""
      }), React.createElement("hr", null), React.createElement(Components.TextField, {
        label: "SMS Phone Number",
        type: "text",
        i18nKeyLabel: "admin.settings.phoneNumber",
        name: "smsPhone",
        value: settings.smsPhone || "",
        onChange: this.handleStateChange
      }), React.createElement(Components.TextField, {
        label: "API Key",
        type: "password",
        i18nKeyLabel: "admin.settings.apiKey",
        name: "apiKey",
        value: settings.apiKey || "",
        onChange: this.handleStateChange
      }), React.createElement(Components.TextField, {
        label: "API Token/Secret",
        type: "password",
        i18nKeyLabel: "admin.settings.apiToken",
        name: "apiToken",
        value: settings.apiToken || "",
        onChange: this.handleStateChange
      }), React.createElement(Components.Button, {
        bezelStyle: "solid",
        status: "primary",
        className: "pull-right",
        type: "submit",
        disabled: isSaving
      }, isSaving ? React.createElement("i", {
        className: "fa fa-refresh fa-spin"
      }) : React.createElement("span", {
        "data-i18n": "app.save"
      }, "Save"))))));
    }

    return render;
  }();

  return SmsSettings;
}(Component);

SmsSettings.propTypes = {
  saveSettings: PropTypes.func.isRequired,
  settings: PropTypes.shape({
    apiKey: PropTypes.string,
    apiToken: PropTypes.string,
    smsPhone: PropTypes.string,
    smsProvider: PropTypes.string
  })
};
module.exportDefault(SmsSettings);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"smsSettingsContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/containers/smsSettingsContainer.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _withProps;

module.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var registerComponent, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Sms;
module.watch(require("../../../../../../lib/collections"), {
  Sms: function (v) {
    Sms = v;
  }
}, 4);
var actions;
module.watch(require("../actions"), {
  "default": function (v) {
    actions = v;
  }
}, 5);
var SmsSettings;
module.watch(require("../components/smsSettings"), {
  "default": function (v) {
    SmsSettings = v;
  }
}, 6);

var composer = function (props, onData) {
  if (Meteor.subscribe("SmsSettings").ready()) {
    var settings = Sms.findOne();
    onData(null, {
      settings: settings
    });
  }
};

var handlers = {
  saveSettings: actions.settings.saveSettings
};
registerComponent("SmsSettings", SmsSettings, [composeWithTracker(composer), _withProps(handlers)]);
module.exportDefault(_compose(composeWithTracker(composer), _withProps(handlers))(SmsSettings));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/sms/client/index.js                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./templates/smsSettings.html"));
module.watch(require("./templates/smsSettings.js"));
module.watch(require("./containers/smsSettingsContainer"), {
  "default": function (v) {
    exports.SmsSettings = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"taxes-avalara":{"client":{"settings":{"avalara.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/settings/avalara.html                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.avalara.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.avalara.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/settings/template.avalara.js                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("avalaraSettings");
Template["avalaraSettings"] = new Template("Template.avalaraSettings", (function() {
  var view = this;
  return HTML.DIV("\n      ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("avalaraSettings"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"avalara.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/settings/avalara.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var AvalaraSettingsFormContainer;
module.watch(require("../containers"), {
  AvalaraSettingsFormContainer: function (v) {
    AvalaraSettingsFormContainer = v;
  }
}, 1);
Template.avalaraSettings.helpers({
  avalaraSettings: function () {
    return {
      component: AvalaraSettingsFormContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"avalaraSettingsForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/components/avalaraSettingsForm.js                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var module1 = module;

var _inRange;

module1.watch(require("lodash/inRange"), {
  "default": function (v) {
    _inRange = v;
  }
}, 0);
var React, Component;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Form, Loading;
module1.watch(require("../../../../core/ui/client/components"), {
  Form: function (v) {
    Form = v;
  },
  Loading: function (v) {
    Loading = v;
  }
}, 4);
var Components;
module1.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 5);
var AvalaraPackageConfig;
module1.watch(require("../../lib/collections/schemas"), {
  AvalaraPackageConfig: function (v) {
    AvalaraPackageConfig = v;
  }
}, 6);
var Logs;
module1.watch(require("../../../../../../lib/collections"), {
  Logs: function (v) {
    Logs = v;
  }
}, 7);
var LogSchema;
module1.watch(require("../../../../../../lib/collections/schemas/logs"), {
  Logs: function (v) {
    LogSchema = v;
  }
}, 8);
var i18next;
module1.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 9);

/**
 * @file AvalaraSettingsForm is a React Component used to change Avalara
 * settings.
 * @module AvalaraSettingsForm
 */

/**
 * @method AvalaraSettingsForm
 * @summary renders a form for updating Avalara settings.
 * @param {Object} props - some data for use by this component.
 * @property {Function} handleSubmit - a function for saving new Avalara settings.
 * @property {Array} hiddenFields - the fields (of the Avalara Package) to hide from the form.
 * @property {Object} settings - the value of the "settings" field in the Avalara Package.
 * @property {Object} shownFields - info about the fields the form is to show.
 * @return {Node} - a React node containing the Avalara settings form.
 */
var AvalaraSettingsForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(AvalaraSettingsForm, _Component);

  /**
  * @name AvalaraSettingsForm propTypes
  * @type {propTypes}
  * @param {Object} props - React PropTypes
  * @property {Object} fieldsProps - map of field specific properties for avalara settings.
  * @property {Function} handleSubmit - a function that saves new Avalara settings.
  * @property {Array} hiddenFields - an array of the Avalara Package's fields
  * to hide from the settings form.
  * @property {Object} logFieldsProps - map of field specific properties for logs.
  * @property {Object} settings - the value of the "settings" field in the Avalara Package.
  * @property {Object} shownFields - info about the fields of the Avalara Package
  * that the settings form will allow users to change.
  * @property {Object} shownLogFields - fields to show from Log schema
  * @return {Array} React propTypes
  */
  // helper adds a class to every grid row
  function AvalaraSettingsForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleLogToggle = function () {
      _this.setState(function (prevState) {
        return {
          showLogs: !prevState.showLogs
        };
      });
    };

    _this.editRow = function (options) {
      var currentId = _this.state.editingId;
      var id = options.props.data._id;
      var log = Logs.findOne(id) || {};
      log.data = JSON.stringify(log.data, null, 4);

      _this.setState({
        editingId: id,
        log: log
      }); // toggle edit mode clicking on same row


      if (currentId === options.props.data._id) {
        _this.setState({
          editingId: undefined,
          log: undefined
        });
      }
    };

    _this.handleTestCredentials = _this.handleTestCredentials.bind((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      showLogs: props.settings.avalara.enableLogging,
      fieldsProp: (0, _objectSpread2.default)({}, props.fieldsProp, {
        "settings.avalara.enableLogging": {
          handleChange: _this.handleLogToggle
        }
      })
    };
    return _this;
  }
  /**
    * handleSubmit
    * @method
    * @summary event handler for when new Avalara settings are submitted.
    * @param {Object} event - event info.
    * @param {Object} changedInfo - info about the new Avalara settings.
    * @param {String} targetField - where to save the new settings in the Avalara Package.
    * @return {null} - returns nothing
    */


  var _proto = AvalaraSettingsForm.prototype;

  _proto.handleSubmit = function () {
    function handleSubmit(event, changedInfo, targetField) {
      // eslint-disable-line no-unused-vars
      if (!changedInfo.isValid) {
        return;
      }

      Meteor.call("package/update", "taxes-avalara", "settings", changedInfo.doc.settings, function (error) {
        if (error) {
          Alerts.toast(i18next.t("admin.update.avalaraUpdateFailed", {
            defaultValue: "Failed to update Avalara settings."
          }), "error");
          return;
        }

        Alerts.toast(i18next.t("admin.update.avalaraUpdateSucceeded", {
          defaultValue: "Avalara settings updated."
        }), "success");
      });
    }

    return handleSubmit;
  }();

  _proto.handleTestCredentials = function () {
    function handleTestCredentials() {
      Meteor.call("avalara/testCredentials", this.props.settings.avalara, function (error, result) {
        if (error && error.message) {
          return Alerts.toast(i18next.t("settings.testCredentialsFailed") + " " + error.message, "error");
        }

        try {
          var statusCode = result.statusCode;

          var connectionValid = _inRange(statusCode, 400);

          if (connectionValid) {
            return Alerts.toast(i18next.t("settings.testCredentialsSuccess"), "success");
          }

          return Alerts.toast(i18next.t("settings.testCredentialsFailed"), "error");
        } catch (err) {
          return Alerts.toast(i18next.t("settings.testCredentialsFailed"), "error");
        }
      });
    }

    return handleTestCredentials;
  }();

  _proto.render = function () {
    function render() {
      var _props = this.props,
          hiddenFields = _props.hiddenFields,
          settings = _props.settings,
          shownFields = _props.shownFields,
          shownLogFields = _props.shownLogFields; // add i18n handling to headers

      var customColumnMetadata = AvalaraSettingsForm.filteredFields.reduce(function (arr, field) {
        arr.push({
          accessor: field,
          Header: i18next.t("logGrid.columns." + field)
        });
        return arr;
      }, []);
      return React.createElement("div", {
        className: "rui avalara-update-form"
      }, !settings.avalara.apiLoginId && React.createElement("div", {
        className: "alert alert-info"
      }, React.createElement(Components.Translation, {
        defaultValue: "Add API Login ID to enable",
        i18nKey: "admin.taxSettings.avalaraCredentials"
      }), React.createElement("a", {
        href: "https://admin-development.avalara.net",
        target: "_blank"
      }, "Avalara")), React.createElement(Form, {
        schema: AvalaraPackageConfig,
        doc: {
          settings: settings
        },
        renderFromFields: true,
        fieldsProp: this.state.fieldsProp,
        docPath: "settings.avalara",
        name: "settings.avalara",
        fields: shownFields,
        hideFields: hiddenFields,
        onSubmit: this.handleSubmit
      }), React.createElement("div", {
        id: "testAvalaraCredentialsContainer"
      }, React.createElement(Components.Button, {
        id: "testAvalaraCredentials",
        label: "Test Credentials",
        buttonType: "button",
        className: "btn btn-default",
        i18nKeyLabel: "admin.dashboard.avalaraTestCredentials",
        bezelStyle: "outline",
        onClick: this.handleTestCredentials
      })), React.createElement("div", {
        className: "panel-body text-center avalara-login-box"
      }, React.createElement("a", {
        href: "https://admin-development.avalara.net",
        target: "_blank"
      }, "Avalara Admin Console Login")), !!this.state.showLogs && React.createElement(Components.SortableTable, {
        publication: "Logs",
        collection: Logs,
        query: {
          logType: "avalara"
        },
        matchingResultsCount: "logs-count",
        showFilter: true,
        rowMetadata: AvalaraSettingsForm.customRowMetaData,
        filteredFields: AvalaraSettingsForm.filteredFields,
        columns: AvalaraSettingsForm.filteredFields,
        noDataMessage: AvalaraSettingsForm.noDataMessage,
        onRowClick: this.editRow,
        columnMetadata: customColumnMetadata,
        externalLoadingComponent: Loading
      }), React.createElement("div", null, !!this.state.log && React.createElement(Form, {
        schema: LogSchema,
        doc: this.state.log,
        fields: shownLogFields,
        fieldsProp: this.props.logFieldsProp,
        autoSave: true
      })));
    }

    return render;
  }();

  return AvalaraSettingsForm;
}(Component);

AvalaraSettingsForm.propTypes = {
  fieldsProp: PropTypes.object,
  hiddenFields: PropTypes.arrayOf(PropTypes.string),
  logFieldsProp: PropTypes.object,
  settings: PropTypes.object,
  shownFields: PropTypes.object,
  shownLogFields: PropTypes.object
};
AvalaraSettingsForm.filteredFields = ["data.request.data.date", "data.request.data.type"];
AvalaraSettingsForm.noDataMessage = i18next.t("logGrid.noLogsFound");
AvalaraSettingsForm.customRowMetaData = {
  bodyCssClassName: function () {
    return "log-grid-row";
  }
};
module1.exportDefault(AvalaraSettingsForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/components/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./avalaraSettingsForm"), {
  "default": function (v) {
    exports.AvalaraSettingsForm = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"avalaraSettingsFormContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/containers/avalaraSettingsFormContainer.js                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;

var _withProps;

module1.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module1.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var composeWithTracker, registerComponent;
module1.watch(require("../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Reaction;
module1.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 4);
var AvalaraPackageConfig;
module1.watch(require("../../lib/collections/schemas"), {
  AvalaraPackageConfig: function (v) {
    AvalaraPackageConfig = v;
  }
}, 5);
var AvalaraSettingsForm;
module1.watch(require("../components"), {
  AvalaraSettingsForm: function (v) {
    AvalaraSettingsForm = v;
  }
}, 6);
var LogSchema;
module1.watch(require("../../../../../../lib/collections/schemas/logs"), {
  Logs: function (v) {
    LogSchema = v;
  }
}, 7);
var Countries;
module1.watch(require("../../../../../../client/collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 8);

/**
 * @file This is a container for AvalaraSettingsForm.
 * @module avalaraSettingsFormContainer
 */
var countryDefaults = ["US", "CA"];
var formSettings = {
  shownFields: {
    "settings.avalara.apiLoginId": AvalaraPackageConfig._schema["settings.avalara.apiLoginId"],
    "settings.avalara.username": AvalaraPackageConfig._schema["settings.avalara.username"],
    "settings.avalara.password": AvalaraPackageConfig._schema["settings.avalara.password"],
    "settings.avalara.companyCode": AvalaraPackageConfig._schema["settings.avalara.companyCode"],
    "settings.avalara.shippingTaxCode": AvalaraPackageConfig._schema["settings.avalara.shippingTaxCode"],
    "settings.addressValidation.enabled": AvalaraPackageConfig._schema["settings.addressValidation.enabled"],
    "settings.addressValidation.countryList": AvalaraPackageConfig._schema["settings.addressValidation.countryList"],
    "settings.avalara.requestTimeout": AvalaraPackageConfig._schema["settings.avalara.requestTimeout"],
    "settings.avalara.mode": AvalaraPackageConfig._schema["settings.avalara.mode"],
    "settings.avalara.performTaxCalculation": AvalaraPackageConfig._schema["settings.avalara.performTaxCalculation"],
    "settings.avalara.enableLogging": AvalaraPackageConfig._schema["settings.avalara.enableLogging"],
    "settings.avalara.logRetentionDuration": AvalaraPackageConfig._schema["settings.avalara.logRetentionDuration"],
    "settings.avalara.commitDocuments": AvalaraPackageConfig._schema["settings.avalara.commitDocuments"]
  },
  hiddenFields: ["settings.avalara.enabled", "settings.avalara.companyId"],
  fieldsProp: {
    "settings.avalara.mode": {
      renderComponent: "select",
      options: [{
        value: true,
        label: "Production Mode"
      }, {
        value: false,
        label: "Testing-Sandbox Mode"
      }],
      label: undefined
    },
    "settings.avalara.logRetentionDuration": {
      renderComponent: "string",
      inputType: "number"
    },
    "settings.avalara.requestTimeout": {
      renderComponent: "string",
      inputType: "number"
    },
    "settings.avalara.password": {
      renderComponent: "string",
      inputType: "password"
    },
    "settings.avalara.apiLoginId": {
      renderComponent: "string",
      inputType: "text"
    },
    "settings.avalara.username": {
      renderComponent: "string",
      inputType: "text"
    },
    "settings.avalara.companyCode": {
      renderComponent: "string",
      inputType: "text"
    },
    "settings.avalara.shippingTaxCode": {
      renderComponent: "string",
      inputType: "text"
    },
    "settings.addressValidation.enabled": {
      renderComponent: "boolean",
      inputType: "checkbox"
    },
    "settings.avalara.performTaxCalculation": {
      renderComponent: "boolean",
      inputType: "checkbox"
    },
    "settings.avalara.enableLogging": {
      renderComponent: "boolean",
      inputType: "checkbox"
    },
    "settings.avalara.commitDocuments": {
      renderComponent: "boolean",
      inputType: "checkbox"
    }
  },
  logFieldsProp: {
    data: {
      renderComponent: "string",
      multiline: true,
      maxRows: 15
    },
    date: {
      disabled: true
    }
  },
  shownLogFields: {
    date: LogSchema._schema.date,
    data: LogSchema._schema.data
  }
};

var composer = function (props, onData) {
  var shopId = Reaction.getShopId();
  var packageSub = Meteor.subscribe("Packages", shopId);
  var validCountries = Countries.find({
    value: {
      $in: countryDefaults
    }
  }).fetch();
  formSettings.fieldsProp["settings.addressValidation.countryList"] = {
    renderComponent: "multiselect",
    options: validCountries,
    defaultValue: validCountries.map(function (country) {
      return country.value;
    })
  };

  if (packageSub.ready()) {
    var packageData = Reaction.getPackageSettings("taxes-avalara");
    onData(null, {
      settings: packageData.settings
    });
  }
};

registerComponent("AvalaraSettingsForm", AvalaraSettingsForm, [_withProps(formSettings), composeWithTracker(composer)]);
module1.exportDefault(_compose(_withProps(formSettings), composeWithTracker(composer))(AvalaraSettingsForm));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/containers/index.js                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./avalaraSettingsFormContainer"), {
  "default": function (v) {
    exports.AvalaraSettingsFormContainer = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"styles":{"settings.less":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/styles/settings.less                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings.less.css"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"settings.less.css":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/styles/settings.less.css                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.exports = require("meteor/modules").addStyles(
  "#testAvalaraCredentials {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n#testAvalaraCredentialsContainer {\n  text-align: right;\n}\n.avalara-login-box {\n  border: 1px solid #b7d7d0;\n  margin: 0 0 14px 0;\n  width: 100%;\n  font-size: 16px;\n}\n.avalara-update-form .alert-info > a {\n  margin-left: 3px;\n}\n"
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/client/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/avalara.html"));
module.watch(require("./settings/avalara.js"));
module.watch(require("./styles/settings.less"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/lib/collections/schemas/index.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./schema"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"schema.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-avalara/lib/collections/schemas/schema.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  AvalaraPackageConfig: function () {
    return AvalaraPackageConfig;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var TaxPackageConfig;
module.watch(require("../../../../../core/taxes/lib/collections/schemas"), {
  TaxPackageConfig: function (v) {
    TaxPackageConfig = v;
  }
}, 1);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 2);
var AvalaraPackageConfig = TaxPackageConfig.clone().extend({
  "settings.avalara": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.avalara.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "settings.avalara.apiLoginId": {
    type: String,
    label: "Avalara API Login ID"
  },
  "settings.avalara.username": {
    type: String
  },
  "settings.avalara.companyCode": {
    type: String
  },
  "settings.avalara.companyId": {
    type: String,
    optional: true
  },
  "settings.avalara.password": {
    type: String
  },
  "settings.avalara.mode": {
    label: "Production Mode",
    type: Boolean,
    defaultValue: false
  },
  "settings.avalara.shippingTaxCode": {
    label: "Shipping Tax Code",
    type: String
  },
  "settings.addressValidation": {
    type: Object,
    defaultValue: {}
  },
  "settings.addressValidation.enabled": {
    label: "Address Validation",
    type: Boolean,
    defaultValue: true
  },
  "settings.avalara.commitDocuments": {
    label: "Commit Documents",
    type: Boolean,
    defaultValue: true
  },
  "settings.avalara.performTaxCalculation": {
    label: "Perform Tax Calculation",
    type: Boolean,
    defaultValue: true
  },
  "settings.avalara.enableLogging": {
    label: "Enable Transaction Logging",
    type: Boolean,
    defaultValue: false
  },
  "settings.avalara.logRetentionDuration": {
    label: "Retain Logs Duration (Days)",
    type: SimpleSchema.Integer,
    defaultValue: 30
  },
  "settings.avalara.requestTimeout": {
    label: "Request Timeout",
    type: SimpleSchema.Integer,
    defaultValue: 1500
  },
  "settings.addressValidation.countryList": {
    label: "Enable Address Validation by Country",
    type: Array,
    optional: true,
    defaultValue: ["US", "CA"]
  },
  "settings.addressValidation.countryList.$": {
    type: String
  }
});
registerSchema("AvalaraPackageConfig", AvalaraPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"taxes-taxcloud":{"client":{"settings":{"taxcloud.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/settings/taxcloud.html                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.taxcloud.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.taxcloud.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/settings/template.taxcloud.js                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("taxCloudSettings");
Template["taxCloudSettings"] = new Template("Template.taxCloudSettings", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("taxCloudForm"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxcloud.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/settings/taxcloud.js                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var TaxCloudSettingsFormContainer;
module.watch(require("../containers"), {
  TaxCloudSettingsFormContainer: function (v) {
    TaxCloudSettingsFormContainer = v;
  }
}, 1);
Template.taxCloudSettings.helpers({
  /**
   * @method taxCloudForm
   * @summary returns a component for updating the TaxCloud settings for
   * this app.
   * @since 1.5.2
   * @return {Object} - an object containing the component to render.
   */
  taxCloudForm: function () {
    return {
      component: TaxCloudSettingsFormContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/components/index.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./taxCloudSettingsForm"), {
  "default": function (v) {
    exports.TaxCloudSettingsForm = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxCloudSettingsForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/components/taxCloudSettingsForm.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;
var React;
module1.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var PropTypes;
module1.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var Form;
module1.watch(require("../../../../core/ui/client/components"), {
  Form: function (v) {
    Form = v;
  }
}, 2);
var Components;
module1.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  }
}, 3);
var TaxCloudPackageConfig;
module1.watch(require("../../lib/collections/schemas"), {
  TaxCloudPackageConfig: function (v) {
    TaxCloudPackageConfig = v;
  }
}, 4);

/**
 * @file TaxCloudSettingsForm is a React Component used to change TaxCloud
 * settings.
 * @module TaxCloudSettingsForm
 */

/**
 * @method TaxCloudSettingsForm
 * @summary renders a form for updating TaxCloud settings.
 * @param {Object} props - some data for use by this component.
 * @property {Function} handleSubmit - a function for saving new TaxCloud settings.
 * @property {Array} hiddenFields - the fields (of the TaxCloud Package) to hide from the form.
 * @property {Object} settings - the value of the "settings" field in the TaxCloud Package.
 * @property {Object} shownFields - info about the fields the form is to show.
 * @since 1.5.2
 * @return {Node} - a React node containing the TaxCloud settings form.
 */
var TaxCloudSettingsForm = function (props) {
  var handleSubmit = props.handleSubmit,
      hiddenFields = props.hiddenFields,
      settings = props.settings,
      shownFields = props.shownFields;
  return React.createElement("div", {
    className: "rui taxcloud-settings-form"
  }, !settings.taxcloud.apiLoginId && React.createElement("div", {
    className: "alert alert-info"
  }, React.createElement(Components.Translation, {
    defaultValue: "Add API Login ID to enable",
    i18nKey: "admin.taxSettings.taxcloudCredentials"
  }), "\xA0", React.createElement("a", {
    href: "https://www.taxcloud.com/",
    target: "_blank"
  }, "TaxCloud")), React.createElement(Form, {
    schema: TaxCloudPackageConfig,
    doc: {
      settings: settings
    },
    docPath: "settings.taxcloud",
    name: "settings.taxcloud",
    fields: shownFields,
    hideFields: hiddenFields,
    onSubmit: handleSubmit
  }));
};
/**
  * @name TaxCloudSettingsForm propTypes
  * @type {propTypes}
  * @param {Object} props - React PropTypes
  * @property {Function} handleSubmit - a function that saves new TaxCloud settings.
  * @property {Array} hiddenFields - an array of the TaxCloud Package's fields
  * to hide from the settings form.
  * @property {Object} settings - the value of the "settings" field in the TaxCloud Package.
  * @property {Object} shownFields - info about the fields of the TaxCloud Package
  * that the settings form will allow users to change.
  * @return {Array} React propTypes
  */


TaxCloudSettingsForm.propTypes = {
  handleSubmit: PropTypes.func,
  hiddenFields: PropTypes.arrayOf(PropTypes.string),
  settings: PropTypes.object,
  shownFields: PropTypes.object
};
module1.exportDefault(TaxCloudSettingsForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/containers/index.js                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./taxCloudSettingsFormContainer"), {
  "default": function (v) {
    exports.TaxCloudSettingsFormContainer = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxCloudSettingsFormContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/containers/taxCloudSettingsFormContainer.js                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;

var _withProps;

module1.watch(require("recompose/withProps"), {
  "default": function (v) {
    _withProps = v;
  }
}, 0);

var _compose;

module1.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var composeWithTracker, registerComponent;
module1.watch(require("../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  },
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 2);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Reaction, i18next;
module1.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 4);
var TaxCloudPackageConfig;
module1.watch(require("../../lib/collections/schemas"), {
  TaxCloudPackageConfig: function (v) {
    TaxCloudPackageConfig = v;
  }
}, 5);
var TaxCloudSettingsForm;
module1.watch(require("../components"), {
  TaxCloudSettingsForm: function (v) {
    TaxCloudSettingsForm = v;
  }
}, 6);

/**
 * @file This is a container for TaxCloudSettingsForm.
 * @module taxCloudSettingsFormContainer
 */
var handlers = {
  /**
    * handleSubmit
    * @method
    * @summary event handler for when new TaxCloud settings are submitted.
    * @param {Object} event - event info.
    * @param {Object} changedInfo - info about the new TaxCloud settings.
    * @param {String} targetField - where to save the new settings in the TaxCloud Package.
    * @since 1.5.2
    * @return {null} - returns nothing
    */
  handleSubmit: function (event, changedInfo, targetField) {
    if (!changedInfo.isValid) {
      return;
    }

    Meteor.call("package/update", "taxes-taxcloud", targetField, changedInfo.doc.settings.taxcloud, function (error) {
      if (error) {
        Alerts.toast(i18next.t("admin.update.updateFailed", {
          defaultValue: "Failed to update TaxCloud settings."
        }), "error");
        return;
      }

      Alerts.toast(i18next.t("admin.update.updateSucceeded", {
        defaultValue: "TaxCloud settings updated."
      }), "success");
    });
  }
};

var composer = function (props, onData) {
  var shownFields = {
    "settings.taxcloud.apiKey": TaxCloudPackageConfig._schema["settings.taxcloud.apiKey"],
    "settings.taxcloud.apiLoginId": TaxCloudPackageConfig._schema["settings.taxcloud.apiLoginId"]
  };
  var hiddenFields = ["settings.taxcloud.enabled", "settings.taxcloud.refreshPeriod", "settings.taxcloud.taxCodeUrl"];
  var shopId = Reaction.getShopId();
  var packageSub = Meteor.subscribe("Packages", shopId);

  if (packageSub.ready()) {
    var packageData = Reaction.getPackageSettings("taxes-taxcloud");
    onData(null, {
      settings: packageData.settings,
      shownFields: shownFields,
      hiddenFields: hiddenFields
    });
  }
};

registerComponent("TaxCloudSettingsForm", TaxCloudSettingsForm, [_withProps(handlers), composeWithTracker(composer)]);
module1.exportDefault(_compose(_withProps(handlers), composeWithTracker(composer))(TaxCloudSettingsForm));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/client/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/taxcloud.html"));
module.watch(require("./settings/taxcloud.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/lib/collections/schemas/index.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./schema"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"schema.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxcloud/lib/collections/schemas/schema.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  TaxCloudPackageConfig: function () {
    return TaxCloudPackageConfig;
  }
});
var TaxPackageConfig;
module.watch(require("../../../../../core/taxes/lib/collections/schemas"), {
  TaxPackageConfig: function (v) {
    TaxPackageConfig = v;
  }
}, 0);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 1);
var TaxCloudPackageConfig = TaxPackageConfig.clone().extend({
  "settings.taxcloud": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.taxcloud.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "settings.taxcloud.apiLoginId": {
    type: String,
    label: "TaxCloud API Login ID"
  },
  "settings.taxcloud.apiKey": {
    type: String,
    label: "TaxCloud API Key"
  },
  "settings.taxcloud.refreshPeriod": {
    type: String,
    label: "TaxCode Refresh Period",
    defaultValue: "every 7 days",
    optional: true
  },
  "settings.taxcloud.taxCodeUrl": {
    type: String,
    label: "TaxCode API Url",
    defaultValue: "https://taxcloud.net/tic/?format=json",
    optional: true
  }
});
registerSchema("TaxCloudPackageConfig", TaxCloudPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"taxes-taxjar":{"client":{"settings":{"taxjar.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxjar/client/settings/taxjar.html                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.taxjar.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.taxjar.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxjar/client/settings/template.taxjar.js                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("taxJarSettings");
Template["taxJarSettings"] = new Template("Template.taxJarSettings", (function() {
  var view = this;
  return [ Blaze.Unless(function() {
    return Spacebars.call(Spacebars.dot(view.lookup("packageData"), "settings", "taxjar", "apiLoginId"));
  }, function() {
    return [ "\n  ", HTML.DIV({
      class: "alert alert-info"
    }, "\n    ", HTML.SPAN({
      "data-i18n": "admin.taxSettings.taxjarCredentials"
    }, "Add API Login ID to enable"), HTML.CharRef({
      html: "&nbsp;",
      str: " "
    }), "\n    ", HTML.A({
      href: "https://www.taxjar.com/",
      target: "_blank"
    }, "TaxJar"), "\n  "), "\n  " ];
  }), "\n\n\n  ", Blaze._TemplateWith(function() {
    return {
      collection: Spacebars.call(Spacebars.dot(view.lookup("Collections"), "Packages")),
      schema: Spacebars.call(view.lookup("packageConfigSchema")),
      doc: Spacebars.call(view.lookup("packageData")),
      type: Spacebars.call("update"),
      id: Spacebars.call("taxjar-update-form")
    };
  }, function() {
    return Spacebars.include(view.lookupTemplate("autoForm"), function() {
      return [ "\n      ", HTML.DIV({
        class: "panel-body"
      }, "\n        ", Blaze._TemplateWith(function() {
        return {
          name: Spacebars.call("settings.taxjar.apiLoginId"),
          class: Spacebars.call("form-control")
        };
      }, function() {
        return Spacebars.include(view.lookupTemplate("afQuickField"));
      }), "\n      "), "\n      ", Spacebars.include(view.lookupTemplate("shopSettingsSubmitButton")), "\n  " ];
    });
  }) ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxjar.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxjar/client/settings/taxjar.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var Packages;
module.watch(require("../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 2);
var Reaction, i18next;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var TaxJarPackageConfig;
module.watch(require("../../lib/collections/schemas"), {
  TaxJarPackageConfig: function (v) {
    TaxJarPackageConfig = v;
  }
}, 4);
Template.taxJarSettings.helpers({
  packageConfigSchema: function () {
    return TaxJarPackageConfig;
  },
  packageData: function () {
    return Packages.findOne({
      name: "taxes-taxjar",
      shopId: Reaction.getShopId()
    });
  }
});
AutoForm.hooks({
  "taxjar-update-form": {
    onSuccess: function () {
      return Alerts.toast(i18next.t("admin.taxSettings.shopTaxMethodsSaved"), "success");
    },
    onError: function (operation, error) {
      return Alerts.toast(i18next.t("admin.taxSettings.shopTaxMethodsFailed") + " " + error, "error");
    }
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxjar/client/index.js                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/taxjar.html"));
module.watch(require("./settings/taxjar.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"lib":{"collections":{"schemas":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxjar/lib/collections/schemas/index.js                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./schema"), {
  "*": module.makeNsSetter()
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"schema.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/taxes-taxjar/lib/collections/schemas/schema.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  TaxJarPackageConfig: function () {
    return TaxJarPackageConfig;
  }
});
var TaxPackageConfig;
module.watch(require("../../../../../core/taxes/lib/collections/schemas"), {
  TaxPackageConfig: function (v) {
    TaxPackageConfig = v;
  }
}, 0);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 1);
var TaxJarPackageConfig = TaxPackageConfig.clone().extend({
  "settings.taxjar": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.taxjar.enabled": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "settings.taxjar.apiLoginId": {
    type: String,
    label: "TaxJar API Login ID",
    optional: true
  }
});
registerSchema("TaxJarPackageConfig", TaxJarPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}},"ui-search":{"lib":{"components":{"searchModal.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/ui-search/lib/components/searchModal.js                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var classnames;
module.watch(require("classnames"), {
  "default": function (v) {
    classnames = v;
  }
}, 2);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 3);
var TextField, Button, IconButton, SortableTableLegacy;
module.watch(require("../../../../core/ui/client/components"), {
  TextField: function (v) {
    TextField = v;
  },
  Button: function (v) {
    Button = v;
  },
  IconButton: function (v) {
    IconButton = v;
  },
  SortableTableLegacy: function (v) {
    SortableTableLegacy = v;
  }
}, 4);
var ProductGridContainer;
module.watch(require("../../../product-variant/containers/productGridContainer"), {
  "default": function (v) {
    ProductGridContainer = v;
  }
}, 5);
var accountsTable;
module.watch(require("../helpers"), {
  accountsTable: function (v) {
    accountsTable = v;
  }
}, 6);

var SearchModal =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SearchModal, _Component);

  function SearchModal() {
    var _temp, _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return (_temp = _this = _Component.call.apply(_Component, [this].concat(args)) || this, _this.state = {
      activeTab: "products"
    }, _this.handleToggleProducts = function () {
      _this.props.handleToggle("products");

      _this.setState({
        activeTab: "products"
      });
    }, _this.handleToggleAccounts = function () {
      _this.props.handleToggle("accounts");

      _this.setState({
        activeTab: "accounts"
      });
    }, _this.handleOnKeyUpToggleProducts = function (event) {
      if (_this.isKeyboardAction(event)) {
        _this.handleToggleProducts();
      }
    }, _this.handleOnKeyUpToggleAccounts = function (event) {
      if (_this.isKeyboardAction(event)) {
        _this.handleToggleAccounts();
      }
    }, _this.handleSubmit = function (event) {
      // Ignore submit events from form as search happens on chnage of the TextField
      event.preventDefault();
    }, _temp) || (0, _assertThisInitialized2.default)(_this);
  }

  var _proto = SearchModal.prototype;

  _proto.componentDidMount = function () {
    function componentDidMount() {
      // Focus and select all text in the search input
      var input = this.textField.refs.input;
      input.select();
    }

    return componentDidMount;
  }();

  _proto.isKeyboardAction = function () {
    function isKeyboardAction(event) {
      // keyCode 32 (spacebar)
      // keyCode 13 (enter/return)
      return event.keyCode === 13 || event.keyCode === 32;
    }

    return isKeyboardAction;
  }();

  _proto.renderSearchInput = function () {
    function renderSearchInput() {
      var _this2 = this;

      return React.createElement("form", {
        className: "rui search-modal-input",
        role: "search",
        onSubmit: this.handleSubmit
      }, React.createElement("i", {
        className: "fa fa-search search-icon"
      }), React.createElement(TextField, {
        id: "search-modal-input",
        ref: function (input) {
          _this2.textField = input;
        },
        label: "Search " + this.props.siteName,
        i18nKeyLabel: "search.searchInputLabel",
        className: "search-input",
        textFieldStyle: {
          marginBottom: 0
        },
        onChange: this.props.handleChange,
        value: this.props.value
      }), React.createElement(Button, {
        className: "search-clear",
        i18nKeyLabel: "search.clearSearch",
        label: "Clear",
        containerStyle: {
          fontWeight: "normal"
        },
        type: "button",
        onClick: this.props.handleClick
      }));
    }

    return renderSearchInput;
  }();

  _proto.renderSearchTypeToggle = function () {
    function renderSearchTypeToggle() {
      if (Reaction.hasPermission("admin")) {
        var productTabClassName = classnames({
          "search-type-option": true,
          "search-type-active": this.state.activeTab === "products"
        });
        var accountsTabClassName = classnames({
          "search-type-option": true,
          "search-type-active": this.state.activeTab === "accounts"
        });
        return React.createElement("div", {
          className: "rui search-type-toggle"
        }, React.createElement("button", {
          className: productTabClassName,
          "data-i18n": "search.searchTypeProducts",
          "data-event-action": "searchCollection",
          "data-event-value": "products",
          onClick: this.handleToggleProducts,
          onKeyUp: this.handleOnKeyUpToggleProducts
        }, "Products"), Reaction.hasPermission("accounts") && React.createElement("button", {
          className: accountsTabClassName,
          "data-i18n": "search.searchTypeAccounts",
          "data-event-action": "searchCollection",
          "data-event-value": "accounts",
          onClick: this.handleToggleAccounts,
          onKeyUp: this.handleOnKeyUpToggleAccounts
        }, "Accounts"));
      }
    }

    return renderSearchTypeToggle;
  }();

  _proto.renderProductSearchTags = function () {
    function renderProductSearchTags() {
      var _this3 = this;

      return React.createElement("div", {
        className: "rui search-modal-tags-container"
      }, React.createElement("p", {
        className: "rui suggested-tags",
        "data-i18n": "search.suggestedTags"
      }, "Suggested tags"), React.createElement("div", {
        className: "rui search-tags"
      }, this.props.tags.map(function (tag) {
        return React.createElement("span", {
          className: "rui search-tag",
          id: tag._id,
          key: tag._id,
          onClick: function () {
            return _this3.props.handleTagClick(tag._id);
          },
          onKeyUp: function (event) {
            if (_this3.isKeyboardAction(event)) {
              _this3.props.handleTagClick(tag._id);
            }
          },
          role: "button",
          tabIndex: 0
        }, tag.name);
      })));
    }

    return renderProductSearchTags;
  }();

  _proto.render = function () {
    function render() {
      return React.createElement("div", null, React.createElement("div", {
        className: "rui search-modal-close"
      }, React.createElement(IconButton, {
        icon: "fa fa-times",
        onClick: this.props.unmountMe
      })), React.createElement("div", {
        className: "rui search-modal-header"
      }, this.renderSearchInput(), this.renderSearchTypeToggle(), this.props.tags.length > 0 && this.renderProductSearchTags()), React.createElement("div", {
        className: "rui search-modal-results-container"
      }, this.props.products.length > 0 && React.createElement(ProductGridContainer, {
        products: this.props.products,
        unmountMe: this.props.unmountMe,
        isSearch: true
      }), this.props.accounts.length > 0 && React.createElement("div", {
        className: "data-table"
      }, React.createElement("div", {
        className: "table-responsive"
      }, React.createElement(SortableTableLegacy, {
        data: this.props.accounts,
        columns: accountsTable(),
        onRowClick: this.props.handleAccountClick
      })))));
    }

    return render;
  }();

  return SearchModal;
}(Component);

SearchModal.propTypes = {
  accounts: PropTypes.array,
  handleAccountClick: PropTypes.func,
  handleChange: PropTypes.func,
  handleClick: PropTypes.func,
  handleTagClick: PropTypes.func,
  handleToggle: PropTypes.func,
  products: PropTypes.array,
  siteName: PropTypes.string,
  tags: PropTypes.array,
  unmountMe: PropTypes.func,
  value: PropTypes.string
};
module.exportDefault(SearchModal);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"searchModalContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/ui-search/lib/containers/searchModalContainer.js                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _pull;

module.watch(require("lodash/pull"), {
  "default": function (v) {
    _pull = v;
  }
}, 0);

var _compose;

module.watch(require("recompose/compose"), {
  "default": function (v) {
    _compose = v;
  }
}, 1);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 2);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 3);
var ReactDom;
module.watch(require("react-dom"), {
  "default": function (v) {
    ReactDom = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var registerComponent;
module.watch(require("../../../../core/components/lib"), {
  registerComponent: function (v) {
    registerComponent = v;
  }
}, 6);
var SearchSubscription;
module.watch(require("./searchSubscription"), {
  "default": function (v) {
    SearchSubscription = v;
  }
}, 7);

function tagToggle(arr, val) {
  if (arr.length === _pull(arr, val).length) {
    arr.push(val);
  }

  return arr;
}

function getModalRootNode() {
  var modalNode = document.getElementById("search-modal-root");

  if (modalNode) {
    return modalNode;
  }

  modalNode = document.createElement("div");
  modalNode.setAttribute("id", "search-modal-root");
  document.body.appendChild(modalNode);
  return modalNode;
}

var wrapComponent = function (Comp) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inheritsLoose2.default)(SearchModalContainer, _Component);

    function SearchModalContainer(props) {
      var _this;

      _this = _Component.call(this, props) || this;

      _this.handleUrlChange = function () {
        _this.handleChildUnmount();
      };

      _this.handleKeyDown = function (event) {
        if (event.keyCode === 27) {
          _this.setState({
            renderChild: false
          });
        }
      };

      _this.handleChange = function (event, value) {
        localStorage.setItem("searchValue", value);

        _this.setState({
          value: value
        });
      };

      _this.handleClick = function () {
        localStorage.setItem("searchValue", "");

        _this.setState({
          value: ""
        });
      };

      _this.handleAccountClick = function (event) {
        Reaction.Router.go("account/profile", {}, {
          userId: event._id
        });

        _this.handleChildUnmount();
      };

      _this.handleTagClick = function (tagId) {
        var newFacet = tagId;
        var element = document.getElementById(tagId);
        element.classList.toggle("active-tag");

        _this.setState({
          facets: tagToggle(_this.state.facets, newFacet)
        });
      };

      _this.handleToggle = function (collection) {
        _this.setState({
          collection: collection
        });
      };

      _this.handleChildUnmount = function () {
        if (_this.props.onClose) {
          _this.props.onClose();
        }
      };

      _this.state = {
        collection: "products",
        value: localStorage.getItem("searchValue") || "",
        renderChild: true,
        facets: []
      };
      return _this;
    }

    var _proto = SearchModalContainer.prototype;

    _proto.componentDidMount = function () {
      function componentDidMount() {
        document.addEventListener("keydown", this.handleKeyDown);
        window.addEventListener("popstate", this.handleUrlChange);
      }

      return componentDidMount;
    }();

    _proto.componentWillUnmount = function () {
      function componentWillUnmount() {
        document.removeEventListener("keydown", this.handleKeyDown);
        window.removeEventListener("popstate", this.handleUrlChange);
      }

      return componentWillUnmount;
    }();

    _proto.render = function () {
      function render() {
        return ReactDom.createPortal(React.createElement("div", null, this.props.open ? React.createElement("div", {
          className: "rui search-modal js-search-modal"
        }, React.createElement(Comp, {
          handleChange: this.handleChange,
          handleClick: this.handleClick,
          handleToggle: this.handleToggle,
          handleAccountClick: this.handleAccountClick,
          handleTagClick: this.handleTagClick,
          value: this.state.value,
          unmountMe: this.handleChildUnmount,
          searchCollection: this.state.collection,
          facets: this.state.facets
        })) : null), getModalRootNode());
      }

      return render;
    }();

    return SearchModalContainer;
  }(Component), _class.propTypes = {
    onClose: PropTypes.func,
    open: PropTypes.bool
  }, _temp;
};

registerComponent("SearchSubscription", SearchSubscription, [wrapComponent]);
module.exportDefault(_compose(wrapComponent)(SearchSubscription));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"searchSubscription.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/ui-search/lib/containers/searchSubscription.js                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Collections;
module.watch(require("../../../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 2);
var Components, composeWithTracker;
module.watch(require("../../../../core/components/lib"), {
  Components: function (v) {
    Components = v;
  },
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 3);
var SearchModal;
module.watch(require("../components/searchModal"), {
  "default": function (v) {
    SearchModal = v;
  }
}, 4);

var SearchSubscription =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(SearchSubscription, _Component);

  function SearchSubscription() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = SearchSubscription.prototype;

  _proto.render = function () {
    function render() {
      return React.createElement(SearchModal, this.props);
    }

    return render;
  }();

  return SearchSubscription;
}(Component);

function getSiteName() {
  var shop = Collections.Shops.findOne();
  return (0, _typeof2.default)(shop) === "object" && shop.name ? shop.name : "";
}

function getProductHashtags(productResults) {
  var foundHashtags = {}; // Object to keep track of results for O(1) lookup

  return productResults.reduce(function (hashtags, product) {
    if (Array.isArray(product.hashtags)) {
      product.hashtags.forEach(function (tag) {
        // If we haven't added this tag yet, push it and add it to the foundHashtags dict
        if (!foundHashtags[tag]) {
          hashtags.push(tag);
          foundHashtags[tag] = true;
        }
      });
    }

    return hashtags;
  }, []);
}

function composer(props, onData) {
  var searchResultsSubscription = Meteor.subscribe("SearchResults", props.searchCollection, props.value, props.facets);
  var shopMembersSubscription = Meteor.subscribe("ShopMembers");

  if (searchResultsSubscription.ready() && shopMembersSubscription.ready()) {
    var siteName = getSiteName();
    var productResults = [];
    var tagSearchResults = [];
    var accountResults = [];
    /*
    * Product Search
    */

    if (props.searchCollection === "products") {
      productResults = Collections.ProductSearch.find().fetch();
      var productHashtags = getProductHashtags(productResults);
      tagSearchResults = Collections.Tags.find({
        _id: {
          $in: productHashtags
        }
      }).fetch();
    }
    /*
      * Account Search
      */


    if (props.searchCollection === "accounts") {
      accountResults = Collections.AccountSearch.find().fetch();
    }

    onData(null, {
      siteName: siteName,
      products: productResults,
      accounts: accountResults,
      tags: tagSearchResults
    });
  }
}

module.exportDefault(composeWithTracker(composer, Components.Loading)(SearchSubscription));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"helpers":{"accountsTable.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/ui-search/lib/helpers/accountsTable.js                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  "default": function () {
    return accountsTable;
  }
});
var React;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  }
}, 0);
var DataType;
module.watch(require("react-taco-table"), {
  DataType: function (v) {
    DataType = v;
  }
}, 1);
var i18next;
module.watch(require("../../../../../../client/api"), {
  i18next: function (v) {
    i18next = v;
  }
}, 2);

function accountsTable() {
  var columns = [{
    id: "_id",
    type: DataType.String,
    header: i18next.t("search.accountSearchResults.accountId", {
      defaultValue: "Account ID"
    }),
    value: function (rowData) {
      return rowData._id;
    }
  }, {
    id: "shopId",
    type: DataType.String,
    header: i18next.t("search.accountSearchResults.shopId", {
      defaultValue: "Shop ID"
    }),
    value: function (rowData) {
      return rowData.shopId;
    }
  }, {
    id: "firstName",
    type: DataType.String,
    header: i18next.t("search.accountSearchResults.firstName", {
      defaultValue: "First Name"
    }),
    value: function (rowData) {
      if (rowData.profile) {
        return rowData.profile.firstName;
      }

      return i18next.t("search.accountSearchResults.notAvailable", "Not available");
    }
  }, {
    id: "lastName",
    type: DataType.String,
    header: i18next.t("search.accountSearchResults.lastName", {
      defaultValue: "Last Name"
    }),
    value: function (rowData) {
      if (rowData.profile) {
        return rowData.profile.lastName;
      }

      return i18next.t("search.accountSearchResults.notAvailable", "Not available");
    }
  }, {
    id: "phone",
    type: DataType.String,
    header: i18next.t("search.accountSearchResults.phone", {
      defaultValue: "Phone"
    }),
    value: function (rowData) {
      if (rowData.profile) {
        return rowData.profile.phone;
      }

      return i18next.t("search.accountSearchResults.notAvailable", "Not available");
    }
  }, {
    id: "email",
    type: DataType.String,
    header: i18next.t("search.accountSearchResults.emails", {
      defaultValue: "Email"
    }),
    value: function (rowData) {
      return rowData.emails[0];
    }
  }, {
    id: "manageAccount",
    type: DataType.String,
    header: "",
    value: function (rowData) {
      return rowData.emails[0];
    },
    tdClassName: "account-manage",
    renderer: function (cellData, _ref) {
      var rowData = _ref.rowData;
      return React.createElement("span", {
        "data-event-action": "manageAccount",
        "data-event-data": rowData._id
      }, "View");
    }
  }];
  return columns;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/ui-search/lib/helpers/index.js                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./accountsTable"), {
  "default": function (v) {
    exports.accountsTable = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"client":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/ui-search/client/index.js                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("../lib/containers/searchModalContainer"), {
  "default": function (v) {
    exports.SearchModalContainer = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"default-theme":{"client":{"favicons.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/default-theme/client/favicons.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**
 * Set up default Reaction favicon for all browsers/platforms
 * Assets generated by https://realfavicongenerator.net
 */
// folder path where all assets live
var basePath = "/custom/favicon/"; // define link tags

var linkTags = [{
  rel: "apple-touch-icon",
  sizes: "180x180",
  href: basePath + "apple-touch-icon.png"
}, {
  rel: "icon",
  type: "image/png",
  sizes: "32x32",
  href: basePath + "favicon-32x32.png"
}, {
  rel: "icon",
  type: "image/png",
  sizes: "16x16",
  href: basePath + "favicon-16x16.png"
}, {
  rel: "manifest",
  href: basePath + "manifest.json"
}, {
  rel: "mask-icon",
  color: "#5bbad5",
  href: basePath + "safari-pinned-tab.svg"
}, {
  rel: "shortcut icon",
  href: basePath + "favicon.ico"
}]; // define meta tags

var metaTags = [{
  name: "msapplication-config",
  content: basePath + "browserconfig.xml"
}, {
  name: "theme-color",
  content: "#ffffff"
}];
/**
 * Add a tag to the <head> of the page
 * @param {String} type - tag type (link, meta, etc.)
 * @param {Object} details - key/value pairs for tag attributes
 * @return {undefined} no return value
 */

function addTag(type, details) {
  var props = "";

  for (var key in meteorBabelHelpers.sanitizeForInObject(details)) {
    if ({}.hasOwnProperty.call(details, key)) {
      props += key + "=\"" + details[key] + "\" ";
    }
  }

  var tag = "<" + type + " " + props + "/>";
  document.getElementsByTagName("head")[0].insertAdjacentHTML("beforeend", tag);
} // add the favicon tags to the <head>


linkTags.forEach(function (tag) {
  return addTag("link", tag);
});
metaTags.forEach(function (tag) {
  return addTag("meta", tag);
}); // HTML output should look like this...
//
// <link rel="apple-touch-icon" sizes="180x180" href="https://assets.reactioncommerce.com/favicon/apple-touch-icon.png">
// <link rel="icon" type="image/png" href="https://assets.reactioncommerce.com/favicon/favicon-32x32.png" sizes="32x32">
// <link rel="icon" type="image/png" href="https://assets.reactioncommerce.com/favicon/favicon-16x16.png" sizes="16x16">
// <link rel="manifest" href="https://assets.reactioncommerce.com/favicon/manifest.json">
// <link rel="mask-icon" href="https://assets.reactioncommerce.com/favicon/safari-pinned-tab.svg" color="#5bbad5">
// <link rel="shortcut icon" href="https://assets.reactioncommerce.com/favicon/favicon.ico">
// <meta name="msapplication-config" content="https://assets.reactioncommerce.com/favicon/browserconfig.xml">
// <meta name="theme-color" content="#ffffff">
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/included/default-theme/client/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./favicons"));
module.watch(require("bootstrap/dist/js/npm.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}},"custom":{"knowledge-payments":{"client":{"settings":{"templates":{"knowledgeSettings.html":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/templates/knowledgeSettings.html                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.knowledgeSettings.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.knowledgeSettings.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/templates/template.knowledgeSettings.js                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("knowledgeSettings");
Template["knowledgeSettings"] = new Template("Template.knowledgeSettings", (function() {
  var view = this;
  return HTML.DIV("\n    ", Blaze._TemplateWith(function() {
    return Spacebars.call(view.lookup("KnowledgeSettings"));
  }, function() {
    return Spacebars.include(view.lookupTemplate("React"));
  }), "\n  ");
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"knowledgeSettings.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/templates/knowledgeSettings.js                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var KnowledgeSettingsFormContainer;
module.watch(require("../containers"), {
  KnowledgeSettingsFormContainer: function (v) {
    KnowledgeSettingsFormContainer = v;
  }
}, 1);
module.watch(require("./knowledgeSettings.html"));
Template.knowledgeSettings.helpers({
  ExampleSettings: function () {
    return {
      component: KnowledgeSettingsFormContainer
    };
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"components":{"KnowledgeSettingsForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/components/KnowledgeSettingsForm.js                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 0);
var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 1);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 2);
var TextField, Translation, Checkbox;
module.watch(require("../../../../../core/ui/client/components"), {
  TextField: function (v) {
    TextField = v;
  },
  Translation: function (v) {
    Translation = v;
  },
  Checkbox: function (v) {
    Checkbox = v;
  }
}, 3);

var KnowledgeSettingsForm =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(KnowledgeSettingsForm, _Component);

  function KnowledgeSettingsForm(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleStateChange = function (e) {
      var settings = _this.state.settings;
      settings[e.target.name] = e.target.value;

      _this.setState({
        settings: settings
      });
    };

    _this.handleCheckBox = function (event, isInputChecked, name) {
      var _this$state = _this.state,
          checkbox = _this$state.checkbox,
          settings = _this$state.settings;
      checkbox[name] = isInputChecked;

      _this.setState({
        checkbox: checkbox
      });

      if (!_includes(settings.support, name) && isInputChecked) {
        settings.support.push(name);
        return _this.setState({
          settings: settings
        });
      }

      var index = settings.support.indexOf(name);
      settings.support.splice(index, 1);
      return _this.setState({
        settings: settings
      });
    };

    _this.handleSubmit = function (e) {
      e.preventDefault();
      return _this.props.onSubmit(_this.state.settings);
    };

    _this.state = {
      settings: {
        apiKey: props.settings.apiKey,
        support: props.settings.support
      },
      checkbox: {
        "Authorize": _includes(props.settings.support, "Authorize"),
        "De-authorize": _includes(props.settings.support, "De-authorize"),
        "Capture": _includes(props.settings.support, "Capture"),
        "Refund": _includes(props.settings.support, "Refund")
      }
    };
    return _this;
  }

  var _proto = KnowledgeSettingsForm.prototype;

  _proto.render = function () {
    function render() {
      var settings = this.props.settings;
      var setting = this.state.settings;
      return React.createElement("div", null, !settings.apiKey && React.createElement("div", {
        className: "alert alert-info"
      }, React.createElement(Translation, {
        defaultValue: "Example Credentials",
        i18nKey: "admin.paymentSettings.exampleCredentials"
      })), React.createElement("form", {
        onSubmit: this.handleSubmit
      }, React.createElement(TextField, {
        label: "API Key",
        name: "apiKey",
        type: "text",
        onChange: this.handleStateChange,
        value: setting.apiKey
      }), React.createElement("span", {
        className: "control-label"
      }, React.createElement(Translation, {
        defaultValue: "Payment provider supported methods",
        i18nKey: "reaction-payments.paymentSettings.supportedMethodsLabel"
      })), React.createElement("br", null), React.createElement("div", null, React.createElement(Checkbox, {
        label: "Authorize",
        onChange: this.handleCheckBox,
        name: "Authorize",
        checked: this.state.checkbox.Authorize
      })), React.createElement("div", null, React.createElement(Checkbox, {
        label: "De-authorize",
        onChange: this.handleCheckBox,
        name: "De-authorize",
        checked: this.state.checkbox["De-authorize"]
      })), React.createElement("div", null, React.createElement(Checkbox, {
        label: "Capture",
        onChange: this.handleCheckBox,
        name: "Capture",
        checked: this.state.checkbox.Capture
      })), React.createElement("div", null, React.createElement(Checkbox, {
        label: "Refund",
        onChange: this.handleCheckBox,
        name: "Refund",
        checked: this.state.checkbox.Refund
      })), React.createElement("button", {
        className: "btn btn-primary pull-right",
        type: "submit"
      }, React.createElement(Translation, {
        defaultValue: "Save Changes",
        i18nKey: "app.saveChanges"
      }))));
    }

    return render;
  }();

  return KnowledgeSettingsForm;
}(Component);

KnowledgeSettingsForm.propTypes = {
  onChange: PropTypes.func.isRequired,
  onSubmit: PropTypes.func.isRequired,
  settings: PropTypes.object
};
module.exportDefault(KnowledgeSettingsForm);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/components/index.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./KnowledgeSettingsForm.js"), {
  "default": function (v) {
    exports.KnowledgeSettingsForm = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"containers":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/containers/index.js                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./knowledgeSettingsFormContainer"), {
  "default": function (v) {
    exports.KnowledgeSettingsFormContainer = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"knowledgeSettingsFormContainer.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/settings/containers/knowledgeSettingsFormContainer.js              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var React, Component;
module.watch(require("react"), {
  "default": function (v) {
    React = v;
  },
  Component: function (v) {
    Component = v;
  }
}, 0);
var PropTypes;
module.watch(require("prop-types"), {
  "default": function (v) {
    PropTypes = v;
  }
}, 1);
var composeWithTracker;
module.watch(require("../../../../../core/components/lib"), {
  composeWithTracker: function (v) {
    composeWithTracker = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Packages;
module.watch(require("../../../../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  }
}, 4);
var Reaction, i18next;
module.watch(require("../../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 5);
var KnowledgeSettingsForm;
module.watch(require("../components"), {
  KnowledgeSettingsForm: function (v) {
    KnowledgeSettingsForm = v;
  }
}, 6);

var KnowledgeSettingsFormContainer =
/*#__PURE__*/
function (_Component) {
  (0, _inheritsLoose2.default)(KnowledgeSettingsFormContainer, _Component);

  function KnowledgeSettingsFormContainer(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.state = {
      apiKey: "278302390293"
    };
    _this.handleChange = _this.handleChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2.default)(_this));
    _this.saveUpdate = _this.saveUpdate.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = KnowledgeSettingsFormContainer.prototype;

  _proto.handleChange = function () {
    function handleChange(e) {
      e.preventDefault();
      this.setState({
        apiKey: e.target.value
      });
    }

    return handleChange;
  }();

  _proto.handleSubmit = function () {
    function handleSubmit(settings) {
      // e.preventDefault();
      var packageId = this.props.packageData._id;
      var settingsKey = this.props.packageData.registry[0].settingsKey;
      var fields = [{
        property: "apiKey",
        value: settings.apiKey
      }, {
        property: "support",
        value: settings.support
      }];
      this.saveUpdate(fields, packageId, settingsKey);
    }

    return handleSubmit;
  }();

  _proto.saveUpdate = function () {
    function saveUpdate(fields, id, settingsKey) {
      Meteor.call("registry/update", id, settingsKey, fields, function (err) {
        if (err) {
          return Alerts.toast(i18next.t("admin.settings.saveFailed"), "error");
        }

        return Alerts.toast(i18next.t("admin.settings.saveSuccess"), "success");
      });
    }

    return saveUpdate;
  }();

  _proto.render = function () {
    function render() {
      var settingsKey = this.props.packageData.registry[0].settingsKey;
      return React.createElement(KnowledgeSettingsForm, {
        onChange: this.handleChange,
        onSubmit: this.handleSubmit,
        settings: this.props.packageData.settings[settingsKey]
      });
    }

    return render;
  }();

  return KnowledgeSettingsFormContainer;
}(Component);

KnowledgeSettingsFormContainer.propTypes = {
  packageData: PropTypes.object
};

var composer = function (props, onData) {
  var subscription = Meteor.subscribe("Packages", Reaction.getShopId());

  if (subscription.ready()) {
    var packageData = Packages.findOne({
      name: "example-paymentmethod",
      shopId: Reaction.getShopId()
    });
    onData(null, {
      packageData: packageData
    });
  }
};

module.exportDefault(composeWithTracker(composer)(KnowledgeSettingsFormContainer));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"checkout":{"knowledgePaymentForm.jade":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/checkout/knowledgePaymentForm.jade                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./template.knowledgePaymentForm.js"), {
  "*": module.makeNsSetter(true)
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"template.knowledgePaymentForm.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/checkout/template.knowledgePaymentForm.js                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //

Template.__checkName("knowledgePaymentForm");
Template["knowledgePaymentForm"] = new Template("Template.knowledgePaymentForm", (function() {
  var view = this;
  return [ Spacebars.include(view.lookupTemplate("flashMessages")), HTML.Raw('<button type="button" class="rui btn btn-lg btn-cta btn-block btn-complete-order"><span id="btn-complete-order" data-i18n="checkoutPayment.completeYourOrder">Complete your order\n<i class="fa fa-spinner fa-spin hidden"></i></span></button>') ];
}));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"knowledgePaymentForm.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/checkout/knowledgePaymentForm.js                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../../../../client/api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Cart, Shops, Packages;
module.watch(require("../../../../../../lib/collections"), {
  Cart: function (v) {
    Cart = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 3);
module.watch(require("./knowledgePaymentForm.jade"));
Template.knowledgePaymentForm.events({
  'click .btn-complete-order': function (event) {
    console.log('click .btn-complete-order');
    event.preventDefault();
    var infoPay = {
      total: Number(Cart.findOne().getTotal()),
      currency: Shops.findOne().currency
    };
    Meteor.call('knoledgePayments/authorize', infoPay, function (error, result) {
      if (error) {
        console.error(error);
        FlashMessages.sendError(error.error);
      } else {
        console.log('Result', result);
        Meteor.subscribe("Packages", Reaction.getShopId());
        var packageData = Packages.findOne({
          name: "knowledge-paymentmethod",
          shopId: Reaction.getShopId()
        });
        console.log('PackageData', packageData);
        Meteor.call("cart/submitPayment", {
          processor: "Knowledge",
          paymentPackageId: packageData._id,
          paymentSettingsKey: packageData.registry[0].settingsKey,
          transactionId: 'tbd',
          currency: infoPay.currency,
          amount: infoPay.total,
          status: 'completed',
          mode: "authorize",
          createdAt: new Date(),
          transactions: [infoPay]
        });
      }
    });
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-payments/client/index.js                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./settings/templates/knowledgeSettings"));
module.watch(require("./checkout/knowledgePaymentForm.jade"));
module.watch(require("./checkout/knowledgePaymentForm.js"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"knowledge-theme":{"client":{"index.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// imports/plugins/custom/knowledge-theme/client/index.js                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}}}}},"lib":{"api":{"router":{"metadata.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/router/metadata.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  MetaData: function () {
    return MetaData;
  }
});
var ReactionProduct, getShopId, Reaction;
module.watch(require("./.."), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  },
  getShopId: function (v) {
    getShopId = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 0);
var Shops, SellerShops;
module.watch(require("../../collections"), {
  Shops: function (v) {
    Shops = v;
  },
  SellerShops: function (v) {
    SellerShops = v;
  }
}, 1);
var MetaData = {
  init: function (context) {
    var params = context.params;
    var product = ReactionProduct.selectedProduct();
    var shop = Shops.findOne(getShopId());
    var meta = [];
    var title = "";
    var description = "";
    var keywords = []; // case helper

    var titleCase = function (param) {
      return param.charAt(0).toUpperCase() + param.substring(1);
    }; // populate meta from shop


    if (shop) {
      // shop defaults
      if (shop.description) {
        description = shop.description.substring(0, 160);
      }

      if (shop.keywords) {
        keywords.push(shop.keywords.toString());
      } // set title defaults


      MetaData.name = shop.name; // product title default

      if (params && params.handle) {
        if (product && product.title) {
          title = titleCase(product.title);
        } else {
          title = titleCase(params.handle);
        } // tag slugs

      } else if (params && params.slug) {
        title = titleCase(params.slug); // fallback to route name
      } else if (context.route && context.route.name) {
        var route = context.route;
        var routeName = route.name; // default index to Shop Name

        if (routeName === "index") {
          title = titleCase(shop.name); // seller shop homepage
        } else if (routeName === "shop") {
          var currentShop = SellerShops.findOne(params.shopId);

          if (currentShop) {
            title = titleCase(currentShop.name);
          } else {
            title = titleCase(routeName);
          } // check for meta in package route

        } else if (route.options.meta && route.options.meta.title) {
          title = titleCase(route.options.meta.title);
        } else {
          // default routes to route's name
          title = titleCase(routeName);
        }
      } //  product details


      if (params && params.handle && product) {
        // discard defaults
        Reaction.DOM.removeDocHeadAddedTags();

        if (product.description) {
          description = product.description.substring(0, 160);
        }

        if (product && product.metafields) {
          // Clear shop keywords, to make keywords specific to this product page.
          keywords = [];

          for (var _iterator = product.metafields, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var _key = _ref;
            keywords.push(_key.value);
          }
        }
      }
    } // end shop


    Reaction.DOM.setMetaTag({
      name: "description",
      content: description
    });
    Reaction.DOM.setMetaTag({
      name: "keywords",
      content: keywords ? keywords.toString() : ""
    }); // set site defaults

    document.title = title;
    MetaData.title = title;
    MetaData.meta = meta;
    return meta;
  } // end update

};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"account-validation.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/account-validation.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  LoginFormValidation: function () {
    return LoginFormValidation;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var check, Match;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  },
  Match: function (v) {
    Match = v;
  }
}, 1);

/**
 * @file Methods for Account Validation
 * Methods for validating account username, email and password. Methods are exported globally in the `LoginFormValidation` object and they are also registered as Meteor methods. Call the methods using
 * `Meteor.call()` or `LoginFormValidation.method`.
 * @example LoginFormValidation.password(password, { validationLevel: "exists" })
 * @example Meteor.call("accounts/validation/email", newEmail, false, (result, error))
 * @namespace Methods/Accounts/Validation
 */
var validationMethods = {
  /**
   * @name accounts/validation/username
   * @method
   * @memberof Methods/Accounts/Validation
   * @summary Determines if a username meets the minimum requirement of 3 characters
   * @param  {String} username Username to validate
   * @return {Boolean|Object} true if valid, error object if invalid
   */
  username: function (username) {
    check(username, Match.OptionalOrNull(String)); // Valid

    if (username.length >= 3) {
      return true;
    } // Invalid


    return {
      error: "INVALID_USERNAME",
      reason: "Username must be at least 3 characters long",
      i18nKeyReason: "accountsUI.error.usernameMinLength"
    };
  },

  /**
   * @name accounts/validation/email
   * @method
   * @memberof Methods/Accounts/Validation
   * @summary Validates both required and optional email addresses.
   * @example LoginFormValidation.email(emailAddress)
   * @example Meteor.call("accounts/validation/email", newEmail, false, callbackFunction())
   * @param  {String} email Email address to validate
   * @param  {Boolean} optional If set to true, validation will pass if email is blank
   * @return {Boolean|Object} Returns true if valid; Returns an error object if invalid
   */
  email: function (email, optional) {
    check(email, Match.OptionalOrNull(String));
    check(optional, Match.OptionalOrNull(Boolean));
    var processedEmail = email.trim(); // Valid

    if (optional === true && processedEmail.length === 0) {
      return true;
    } else if (processedEmail.indexOf("@") !== -1) {
      return true;
    } // Invalid


    return {
      error: "INVALID_EMAIL",
      reason: "Email address is invalid",
      i18nKeyReason: "accountsUI.error.invalidEmail"
    };
  },

  /**
   * @name accounts/validation/password
   * @method
   * @memberof Methods/Accounts/Validation
   * @summary Passwords may be validated 2 ways.
   * 1. "exists" `(options.validationLevel = "exists")` - Password must not be blank.
   * Thats is the only rule. Used to validate a sign in.
   * 2. undefined `(options.validationLevel = undefined)` - Password must meet the lenght and other criteria to validate.
   * Used for validating a new sign up.
   * @example LoginFormValidation.password(pword, { validationLevel: "exists" })
   * @param  {String} password Password to validate
   * @param  {Object} options Options to apply to the password validator
   * @param  {String} options.validationLevel "exists" | undefined (default)
   * @return {Boolean|Object} true if valid | Error object otherwise: {error: String, reason: String}
   */
  password: function (password, options) {
    check(password, Match.OptionalOrNull(String));
    check(options, Match.OptionalOrNull(Object));
    var passwordOptions = options || {};
    var errors = []; // Only check if a password has been entered at all.
    // This is usefull for the login forms

    if (passwordOptions.validationLevel === "exists") {
      if (password && password.length > 0) {
        return true;
      }

      errors.push({
        error: "INVALID_PASSWORD",
        reason: "Password is required",
        i18nKeyReason: "accountsUI.error.passwordRequired"
      });
    } else if (password.length < 6) {
      // Validate the password on some rules
      // This is useful for cases where a password needs to be created or updated.
      errors.push({
        error: "INVALID_PASSWORD",
        reason: "Password must be at least 6 characters long.",
        i18nKeyReason: "accountsUI.error.passwordMustBeAtLeast6CharactersLong"
      });
    }

    if (errors.length) {
      return errors;
    } // Otherwise the password is valid


    return true;
  }
}; // Export object globally

var LoginFormValidation = validationMethods;
// Register validation methods as meteor methods
Meteor.methods({
  "accounts/validation/username": validationMethods.username,
  "accounts/validation/email": validationMethods.email,
  "accounts/validation/password": validationMethods.password
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"catalog.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/catalog.js                                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _max;

module.watch(require("lodash/max"), {
  "default": function (v) {
    _max = v;
  }
}, 0);

var _min;

module.watch(require("lodash/min"), {
  "default": function (v) {
    _min = v;
  }
}, 1);
var Products;
module.watch(require("../collections"), {
  Products: function (v) {
    Products = v;
  }
}, 2);
var ReactionProduct;
module.watch(require("./index"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  }
}, 3);
var applyProductRevision;
module.watch(require("./products"), {
  applyProductRevision: function (v) {
    applyProductRevision = v;
  }
}, 4);
module.exportDefault({
  /**
   * @method setProduct
   * @memberof Catalog
   * @summary method to set default/parameterized product variant
   * @param {String} currentProductId - set current productId
   * @param {String} currentVariantId - set current variantId
   * @return {undefined} return nothing, sets in session
   */
  setProduct: function (currentProductId, currentVariantId) {
    var productId = currentProductId;
    var variantId = currentVariantId;

    if (!productId.match(/^[A-Za-z0-9]{17}$/)) {
      var product = Products.findOne({
        handle: productId.toLowerCase()
      });

      if (product) {
        productId = product._id;
      }
    }

    ReactionProduct.setCurrentVariant(variantId);
  },

  /**
   * @method getProductPriceRange
   * @memberof Catalog
   * @summary get price range of a product
   * if only one price available, return it
   * otherwise return a string range
   * @todo move all this methods this to export function after 1.3
   * @param {String} [productId] - current product _id
   * @return {Object} range, min, max
   */
  getProductPriceRange: function (productId) {
    var _this = this;

    var product = applyProductRevision(Products.findOne(productId));

    if (!product) {
      return {
        range: "0",
        min: 0,
        max: 0
      };
    }

    var variants = this.getTopVariants(product._id); // if we have variants we have a price range.
    // this processing will default on the server

    var visibileVariant = variants.filter(function (variant) {
      return variant.isVisible === true;
    });

    if (visibileVariant.length > 0) {
      var variantPrices = [];
      variants.forEach(function (variant) {
        if (variant.isVisible === true) {
          var range = _this.getVariantPriceRange(variant._id);

          if (typeof range === "string") {
            var firstPrice = parseFloat(range.substr(0, range.indexOf(" ")));
            var lastPrice = parseFloat(range.substr(range.lastIndexOf(" ") + 1));
            variantPrices.push(firstPrice, lastPrice);
          } else {
            variantPrices.push(range);
          }
        } else {
          variantPrices.push(0, 0);
        }
      });

      var priceMin = _min(variantPrices);

      var priceMax = _max(variantPrices);

      var priceRange = priceMin + " - " + priceMax; // if we don't have a range

      if (priceMin === priceMax) {
        priceRange = priceMin.toString();
      }

      return {
        range: priceRange,
        min: priceMin,
        max: priceMax
      };
    }

    if (!product.price) {
      return {
        range: "0",
        min: 0,
        max: 0
      };
    } // if we have no variants subscribed to (client)
    // we'll get the price object previously from the product


    return product.price;
  },

  /**
   * @method getVariantPriceRange
   * @memberof Catalog
   * @summary get price range of a variant if it has child options.
   * if no child options, return main price value
   * @todo remove string return and replace with object
   * @param {String} [variantId] - current variant _Id
   * @return {String} formatted price or price range
   */
  getVariantPriceRange: function (variantId) {
    var children = this.getVariants(variantId);
    var visibleChildren = children.filter(function (child) {
      return child.isVisible;
    });

    switch (visibleChildren.length) {
      case 0:
        {
          var topVariant = applyProductRevision(Products.findOne(variantId)); // topVariant could be undefined when we removing last top variant

          return topVariant && topVariant.price;
        }

      case 1:
        {
          return visibleChildren[0].price;
        }

      default:
        {
          var priceMin = Number.POSITIVE_INFINITY;
          var priceMax = Number.NEGATIVE_INFINITY;
          children.forEach(function (child) {
            if (child.isVisible === true) {
              if (child.price < priceMin) {
                priceMin = child.price;
              }

              if (child.price > priceMax) {
                priceMax = child.price;
              }
            }
          });

          if (priceMin === priceMax) {
            // TODO check impact on i18n/formatPrice from moving return to string
            return priceMin.toString();
          }

          return priceMin + " - " + priceMax;
        }
    }
  },

  /**
   * @method getVariantQuantity
   * @memberof Catalog
   * @description calculate a sum of descendants `inventoryQuantity`
   * @param {Object} variant - top-level variant
   * @return {Number} summary of options quantity
   */
  getVariantQuantity: function (variant) {
    var options = this.getVariants(variant._id);

    if (options && options.length) {
      return options.reduce(function (sum, option) {
        return sum + parseInt(option.inventoryQuantity, 10) || 0;
      }, 0);
    }

    return variant.inventoryQuantity || 0;
  },

  /**
   * @method getPublishedOrRevision
   * @memberof Catalog
   * @description return top product revision if available
   * @param {Object} product product or variant document
   * @return {Object} product document
   */
  getPublishedOrRevision: function (product) {
    return applyProductRevision(product);
  },

  /**
  * @method getProduct
  * @method
  * @memberof ReactionProduct
  * @summary Get product object. Could be useful for products and for top level variants
  * @param {String} [id] - product _id
  * @return {Object} Product data
  */
  getProduct: function (id) {
    return Products.findOne(id);
  },

  /**
   * @method getVariants
   * @memberof Catalog
   * @description Get all parent variants
   * @summary could be useful for products and for top level variants
   * @param {String} [id] - product _id
   * @param {String} [type] - type of variant
   * @return {Array} Parent variants or empty array
   */
  getVariants: function (id, type) {
    return Products.find({
      ancestors: {
        $in: [id]
      },
      type: type || "variant"
    }).map(this.getPublishedOrRevision);
  },

  /**
   * @method getVariantParent
   * @memberof Catalog
   * @description Get direct parent variant
   * @summary could be useful for lower level variants to get direct parents
   * @param {Object} [variant] - product / variant object
   * @return {Array} Parent variant or empty
   */
  getVariantParent: function (variant) {
    var parent = Products.findOne({
      _id: {
        $in: variant.ancestors
      },
      type: "variant"
    });
    return this.getPublishedOrRevision(parent);
  },

  /**
   * @method getSiblings
   * @memberof Catalog
   * @description Get all sibling variants - variants with the same ancestor tree
   * @summary could be useful for child variants relationships with top-level variants
   * @param {Object} [variant] - product / variant object
   * @param {String} [type] - type of variant
   * @param {Boolean} [includeSelf] - include current variant in results
   * @return {Array} Sibling variants or empty array
   */
  getSiblings: function (variant, type) {
    return Products.find({
      ancestors: variant.ancestors,
      type: type || "variant"
    }).map(this.getPublishedOrRevision);
  },

  /**
   * @method getTopVariants
   * @memberof Catalog
   * @description Get only product top level variants
   * @param {String} [id] - product _id
   * @return {Array} Product top level variants or empty array
   */
  getTopVariants: function (id) {
    return Products.find({
      ancestors: [id],
      type: "variant"
    }).map(this.getPublishedOrRevision);
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"core.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/core.js                                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.export({
  Reaction: function () {
    return Reaction;
  }
});

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 2);
var Accounts, Shops, SellerShops;
module.watch(require("../collections"), {
  Accounts: function (v) {
    Accounts = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  SellerShops: function (v) {
    SellerShops = v;
  }
}, 3);
var Core; // TODO: Decide how we want to approach this problem - duplicate content on both client
// and server, or detecting client/server and DRYing up the code.

if (Meteor.isServer) {
  Core = require("../../server/api");
} else {
  Core = require("../../client/api");
}
/**
 * @method isPackageEnabled
 * @memberof Core
 * @summary Check if package is enabled
 * @example Reaction.isPackageEnabled()
 * @param  {String}  name - Package name
 * @return {Boolean}      True if the package is enabled
 */


function isPackageEnabled(name) {
  var settings = this.getPackageSettings(name);
  return !!settings.enabled;
}
/**
 * @method getSeller
 * @memberof Core
 * @example Reaction.getSeller(shopId)
 * @param  {String} shopId ID of shop
 * @return {Object}        Account object of seller
 */


function getSeller(shopId) {
  var sellerShopId;

  if (!shopId) {
    var currentUser = Meteor.user();

    if (currentUser) {
      var _Roles$getGroupsForUs = Roles.getGroupsForUser(currentUser.id, "admin");

      var _Roles$getGroupsForUs2 = _slicedToArray(_Roles$getGroupsForUs, 1);

      sellerShopId = _Roles$getGroupsForUs2[0];
    }
  } else {
    sellerShopId = shopId;
  }

  return Accounts.findOne({
    shopId: sellerShopId
  });
}
/**
 * @method getSellerShopId
 * @memberof Core
 * @summary Get a seller's shopId or default to parent shopId
 * @example Reaction.getSellerShopId(this.userId, true)
 * @param {String|Object} user - An optional user hash or userId to find a shop for
 * @param {Boolean} [noFallback=false] - Optional.If set to true doesn't fallback to owner shopId
 * when user doesn't have a shop.
 * @returns {String|Boolean} - The shopId belonging to userId, or loggedIn seller, or the parent shopId
 */


function getSellerShopId(user) {
  var noFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var seller = user;

  if (Meteor.isClient && !seller) {
    seller = Meteor.user();
  }

  if (seller) {
    var group = Roles.getGroupsForUser(seller, "admin")[0];

    if (group) {
      return group;
    }
  }

  if (noFallback) {
    return false;
  }

  return Core.Reaction.getShopId();
}
/**
 * @method getSellerShop
 * @memberof Core
 * @summary Get a seller's shop or default to parent shop
 * @param {String|Object} user - An optional user hash or userId to find a shop for
 * @param {Boolean} [noFallback=false] - Optional.If set to true doesn't fallback to owner shop
 * when user doesn't have a shop.
 * @returns {String|Boolean} - The shop hash belonging to userId, or loggedIn seller, or the parent shop
 */


function getSellerShop(user) {
  var noFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var _id = getSellerShopId(user, noFallback);

  if (!_id) {
    return false;
  }

  if (Meteor.isClient && _id !== Core.Reaction.getShopId()) {
    return SellerShops.findOne({
      _id: _id
    });
  }

  return Shops.findOne({
    _id: _id
  });
}
/**
  * getShopsForUser -
  * @summary gets shopIds of shops where user has provided permissions
  * @param {Array} roles - roles to check if user has
  * @param {Object} userId - userId to check permissions for (defaults to current user)
  * @return {Array} - shopIds user has provided permissions for
  */


function getShopsForUser(roles) {
  var userId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Meteor.userId();
  // Get full user object, and get shopIds of all shops they are attached to
  var user = Meteor.user(userId);

  if (!user || !user.roles) {
    return [];
  }

  var shopIds = Object.keys(user.roles); // Remove "__global_roles__" from the list of shopIds, as this function will always return true for
  // marketplace admins if that "id" is left in the check

  var filteredShopIds = shopIds.filter(function (shopId) {
    return shopId !== "__global_roles__";
  }); // Reduce shopIds to shopsWithPermission, using the roles passed in to this function

  var shopIdsWithRoles = filteredShopIds.reduce(function (shopsWithPermission, shopId) {
    // Get list of roles user has for this shop
    var rolesUserHas = user.roles[shopId]; // Find first role that is included in the passed in roles array, otherwise hasRole is undefined

    var hasRole = rolesUserHas.find(function (roleUserHas) {
      return roles.includes(roleUserHas);
    }); // if we found the role, then the user has permission for this shop. Add shopId to shopsWithPermission array

    if (hasRole) {
      shopsWithPermission.push(shopId);
    }

    return shopsWithPermission;
  }, []);
  return shopIdsWithRoles;
}
/**
  * hasPermissionForAll -
  * @summary return if the user has permissions for all the shops
  * @param {Array} roles - roles to check if user has
  * @param {String} userId - userId to check permissions for (defaults to current user)
  * @param {Array} shopsOfUser - shopIds to be checked
  * @return {Boolean} - true if the user has permissions for all the shops
  */


function hasPermissionForAll(roles) {
  var userId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Meteor.userId();
  var shopsOfUser = arguments.length > 2 ? arguments[2] : undefined;
  return !_isEqual(getShopsForUser(["admin"], userId), shopsOfUser);
}

var Reaction = Object.assign(Core.Reaction, {
  isPackageEnabled: isPackageEnabled,
  getSeller: getSeller,
  getSellerShopId: getSellerShopId,
  getSellerShop: getSellerShop,
  getShopsForUser: getShopsForUser,
  hasPermissionForAll: hasPermissionForAll
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/helpers.js                                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

module.export({
  latinLangs: function () {
    return latinLangs;
  },
  getShopId: function () {
    return getShopId;
  },
  getPrimaryShopId: function () {
    return getPrimaryShopId;
  },
  getShopSettings: function () {
    return getShopSettings;
  },
  getShopName: function () {
    return getShopName;
  },
  getShopLang: function () {
    return getShopLang;
  },
  getPrimaryShopLang: function () {
    return getPrimaryShopLang;
  },
  getShopPrefix: function () {
    return getShopPrefix;
  },
  getAbsoluteUrl: function () {
    return getAbsoluteUrl;
  },
  getCurrentTag: function () {
    return getCurrentTag;
  },
  getSlug: function () {
    return getSlug;
  },
  formatPhoneNumber: function () {
    return formatPhoneNumber;
  },
  toCamelCase: function () {
    return toCamelCase;
  },
  translateRegistry: function () {
    return translateRegistry;
  },
  isObject: function () {
    return isObject;
  },
  mergeDeep: function () {
    return mergeDeep;
  },
  convertWeight: function () {
    return convertWeight;
  },
  getPrimaryMediaForItem: function () {
    return getPrimaryMediaForItem;
  },
  getPrimaryMediaForOrderItem: function () {
    return getPrimaryMediaForOrderItem;
  },
  ValidCardNumber: function () {
    return ValidCardNumber;
  },
  ValidExpireMonth: function () {
    return ValidExpireMonth;
  },
  ValidExpireYear: function () {
    return ValidExpireYear;
  },
  ValidCVV: function () {
    return ValidCVV;
  },
  ValidEmail: function () {
    return ValidEmail;
  }
});
var url;
module.watch(require("url"), {
  "default": function (v) {
    url = v;
  }
}, 0);
var parse, isValidNumber, getPhoneCode;
module.watch(require("libphonenumber-js"), {
  parse: function (v) {
    parse = v;
  },
  isValidNumber: function (v) {
    isValidNumber = v;
  },
  getPhoneCode: function (v) {
    getPhoneCode = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var check, Match;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  },
  Match: function (v) {
    Match = v;
  }
}, 3);
var Router;
module.watch(require("../../imports/plugins/core/router/lib"), {
  Router: function (v) {
    Router = v;
  }
}, 4);
var Shops;
module.watch(require("../collections"), {
  Shops: function (v) {
    Shops = v;
  }
}, 5);
var latinLangs = ["az", "da", "de", "en", "es", "ff", "fr", "ha", "hr", "hu", "ig", "is", "it", "jv", "ku", "ms", "nl", "no", "om", "pl", "pt", "ro", "sv", "sw", "tl", "tr", "uz", "vi", "yo"];
// eslint-disable-line max-len
// dynamic import of slugiy/transliteration.slugify
var slugify;

function lazyLoadSlugify() {
  var mod, lang;
  return _regenerator.default.async(function () {
    function lazyLoadSlugify$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // getting the shops base language
            if (Meteor.isServer) {
              lang = getPrimaryShopLang();
            } else {
              lang = getShopLang();
            } // if slugify has been loaded but the language has changed
            // to be a non latin based language then load transliteration


            if (!(slugify && slugify.name === "replace" && latinLangs.indexOf(lang) === -1)) {
              _context.next = 7;
              break;
            }

            _context.next = 4;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("transliteration");
            }));

          case 4:
            mod = _context.sent;
            _context.next = 20;
            break;

          case 7:
            if (!slugify) {
              _context.next = 11;
              break;
            }

            return _context.abrupt("return");

          case 11:
            if (!(latinLangs.indexOf(lang) >= 0)) {
              _context.next = 17;
              break;
            }

            _context.next = 14;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("slugify");
            }));

          case 14:
            mod = _context.sent;
            _context.next = 20;
            break;

          case 17:
            _context.next = 19;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("transliteration");
            }));

          case 19:
            mod = _context.sent;

          case 20:
            // slugify is exported to modules.default while transliteration is exported to modules.slugify
            slugify = mod.default || mod.slugify;

          case 21:
          case "end":
            return _context.stop();
        }
      }
    }

    return lazyLoadSlugify$;
  }(), null, this);
}

var Media;

if (Meteor.isClient) {
  var _require = require("../../imports/plugins/core/files/client");

  Media = _require.Media;
} else {
  var _require2 = require("../../imports/plugins/core/files/server");

  Media = _require2.Media;
}
/**
 * @file Various helper methods
 *
 * @namespace Helpers
 */


var Core;

if (Meteor.isClient) {
  Core = require("../../client/api");
} else {
  Core = require("../../server/api");
}
/**
 * @name getShopId
 * @method
 * @memberof Helpers
 * @return {String} returns current shopId
 */


function getShopId() {
  return Core.Reaction.getShopId();
}

function getPrimaryShopId() {
  return Core.Reaction.getPrimaryShopId();
}

function getShopSettings() {
  return Core.Reaction.getShopSettings();
}

function getShopName() {
  var shopId = getShopId();
  var shop;

  if (shopId) {
    shop = Shops.findOne({
      _id: shopId
    });
    return shop && shop.name || "";
  }

  var domain = url.parse(Meteor.absoluteUrl()).hostname;
  shop = Shops.findOne({
    domains: {
      $in: [domain]
    }
  });
  return shop ? shop.name : "";
}

function getShopLang() {
  var shopId = getShopId();
  var shop = Shops.findOne({
    _id: shopId
  });
  return shop ? shop.language : "";
}

function getPrimaryShopLang() {
  var shopId = getPrimaryShopId();
  var shop = Shops.findOne({
    _id: shopId
  });
  return shop ? shop.language : "";
}

function getShopPrefix() {
  var leading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "/";
  var shopId = getShopId();

  if (shopId) {
    var shop = Shops.findOne({
      _id: shopId
    }, {
      fields: {
        _id: 1,
        name: 1,
        shopType: 1
      }
    });
    var settings = Core.Reaction.getMarketplaceSettings();
    var slug = leading + getSlug(shop.slug || getShopName().toLowerCase());

    if (shop.shopType === "primary") {
      // If naked routes is turned off, use the shop slug for our primary shop routes
      if (settings && settings.marketplaceNakedRoutes === false) {
        return slug;
      }

      return "";
    } // If this is not the primary shop, use the shop slug in routes for this shop
    // TODO: "/shop" should be configurable in marketplace settings


    return "/shop" + slug;
  }

  return "";
}

function getAbsoluteUrl(path) {
  var prefix = getShopPrefix("");

  if (prefix) {
    var _absUrl = Meteor.absoluteUrl(prefix + "/" + path);

    return _absUrl;
  }

  var absUrl = Meteor.absoluteUrl("" + path);
  return absUrl;
}

function getCurrentTag() {
  if (Router.getRouteName() === "tag") {
    return Router.current().params.slug;
  }

  return null;
}

function getSlug(slugString) {
  var slug;
  Promise.await(lazyLoadSlugify());

  if (slugString) {
    slug = slugify(slugString.toLowerCase());
  } else {
    slug = "";
  }

  return slug;
}

function formatPhoneNumber(phone, countryCode) {
  try {
    // phone no. already has the country code attached
    if (isValidNumber(phone)) {
      return phone;
    }

    var phoneNumber = parse(phone, countryCode).phone;
    var countryExtension = getPhoneCode(countryCode);

    if (phoneNumber && countryExtension) {
      // try attaching the country code to phone number
      return "" + countryExtension + phoneNumber;
    }

    throw new Meteor.Error("invalid-parameter", "Incorrect format for phone number " + phone + " with country " + countryCode);
  } catch (error) {
    throw new Meteor.Error("invalid-parameter", error);
  }
}

function toCamelCase(needscamels) {
  var s;
  s = needscamels.replace(/([^a-zA-Z0-9_\- ])|^[_0-9]+/g, "").trim().toLowerCase();
  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function (a, b, c) {
    return c.toUpperCase();
  });
  s = s.replace(/([0-9]+)([a-zA-Z])/g, function (a, b, c) {
    return b + c.toUpperCase();
  });
  return s;
}

function translateRegistry(registry, app) {
  var registryLabel = "";
  var i18nKey = ""; // first we check the default place for a label

  if (registry.label) {
    registryLabel = toCamelCase(registry.label);
    i18nKey = "admin." + registry.provides + "." + registryLabel; // and if we don"t find it, we are trying to look at first
    // registry entry
  } else if (app && app.registry && app.registry.length && app.registry[0].label) {
    registryLabel = toCamelCase(app.registry[0].label);
    i18nKey = "admin." + app.registry[0].provides + "." + registryLabel;
  }

  registry.i18nKeyLabel = i18nKey + "Label";
  registry.i18nKeyDescription = i18nKey + "Description";
  registry.i18nKeyPlaceholder = i18nKey + "Placeholder";
  registry.i18nKeyTooltip = i18nKey + "Tooltip";
  registry.i18nKeyTitle = i18nKey + "Title"; // return registry object with added i18n keys

  return registry;
}

function isObject(item) {
  return item && (0, _typeof2.default)(item) === "object" && !Array.isArray(item) && item !== null;
}

function mergeDeep(target, source) {
  if (isObject(target) && isObject(source)) {
    Object.keys(source).forEach(function (key) {
      if (isObject(source[key])) {
        var _Object$assign;

        if (!target[key]) Object.assign(target, (_Object$assign = {}, _Object$assign[key] = {}, _Object$assign));
        mergeDeep(target[key], source[key]);
      } else {
        var _Object$assign2;

        Object.assign(target, (_Object$assign2 = {}, _Object$assign2[key] = source[key], _Object$assign2));
      }
    });
  }

  return target;
}

function convertWeight(from, to, weight) {
  check(from, String); // we need to check for specific values

  check(to, String);
  check(weight, Number);

  if (from === to) {
    return weight;
  } // grams


  if (from === "lb" && to === "g") {
    var convertedWeight = weight * 453.592;
    return convertedWeight;
  }

  if (from === "kg" && to === "g") {
    var _convertedWeight = weight * 1000;

    return _convertedWeight;
  }

  if (from === "oz" && to === "g") {
    var _convertedWeight2 = weight * 28.3495;

    return _convertedWeight2;
  } // lbs


  if (from === "kg" && to === "lb") {
    var _convertedWeight3 = weight * 2.20462;

    return _convertedWeight3;
  }

  if (from === "g" && to === "lb") {
    var _convertedWeight4 = weight * 0.00220462;

    return _convertedWeight4;
  }

  if (from === "oz" && to === "lb") {
    var _convertedWeight5 = weight * 0.0625;

    return _convertedWeight5;
  } // oz


  if (from === "lb" && to === "oz") {
    var _convertedWeight6 = weight * 16;

    return _convertedWeight6;
  }

  if (from === "g" && to === "oz") {
    var _convertedWeight7 = weight * 0.035274;

    return _convertedWeight7;
  }

  if (from === "kg" && to === "oz") {
    var _convertedWeight8 = weight * 35.274;

    return _convertedWeight8;
  } // kilograms


  if (from === "g" && to === "kg") {
    var _convertedWeight9 = weight * 0.001;

    return _convertedWeight9;
  }

  if (from === "oz" && to === "kg") {
    var _convertedWeight10 = weight * 0.0283495;

    return _convertedWeight10;
  }

  if (from === "lb" && to === "kg") {
    var _convertedWeight11 = weight * 0.453592;

    return _convertedWeight11;
  } // if we made it here, something has gone wrong


  throw new Meteor.Error("invalid-parameter", "Invalid from or to value specified");
}

function getPrimaryMediaForItem() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      productId = _ref.productId,
      variantId = _ref.variantId;

  var result;

  if (variantId) {
    result = Media.findOneLocal({
      "metadata.variantId": variantId
    }, {
      sort: {
        "metadata.priority": 1,
        "uploadedAt": 1
      }
    });
  }

  if (!result && productId) {
    result = Media.findOneLocal({
      "metadata.productId": productId
    }, {
      sort: {
        "metadata.priority": 1,
        "uploadedAt": 1
      }
    });
  }

  return result || null;
}

function getPrimaryMediaForOrderItem() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      productId = _ref2.productId,
      variants = _ref2.variants;

  var _ref3 = variants || {},
      variantId = _ref3._id; // Order item format


  return getPrimaryMediaForItem({
    productId: productId,
    variantId: variantId
  });
}

/*
 * @name luhnValid
 * @method
 * @memberOf Helpers
 * @summary Checks if a number passes Luhn's test
 * @param {String} cardNumber The card number to check
 * @returns {Boolean} The result of the test
 */
function luhnValid(cardNumber) {
  return _toConsumableArray(cardNumber).reverse().reduce(function (sum, c, i) {
    var d = parseInt(c, 10);

    if (i % 2 !== 0) {
      d *= 2;
    }

    if (d > 9) {
      d -= 9;
    }

    return sum + d;
  }, 0) % 10 === 0;
} // Regex to do card validations


var ValidCardNumber = Match.Where(function (x) {
  return /^[0-9]{12,19}$/.test(x) && luhnValid(x);
});
var ValidExpireMonth = Match.Where(function (x) {
  return /^[0-9]{1,2}$/.test(x);
});
var ValidExpireYear = Match.Where(function (x) {
  return /^[0-9]{4}$/.test(x);
});
var ValidCVV = Match.Where(function (x) {
  return /^[0-9]{3,4}$/.test(x);
});

var ValidEmail = function (x) {
  return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(x);
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/index.js                                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./account-validation"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./catalog"), {
  "default": function (v) {
    exports.Catalog = v;
  }
}, 1);
module.watch(require("./products"), {
  "default": function (v) {
    exports.ReactionProduct = v;
  }
}, 2);
module.watch(require("./prop-types"), {
  PropTypes: function (v) {
    exports.PropTypes = v;
  }
}, 3);
module.watch(require("./core"), {
  "*": module.makeNsSetter()
}, 4);
module.watch(require("./helpers"), {
  "*": module.makeNsSetter()
}, 5);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"match.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/match.js                                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Match;
module.watch(require("meteor/check"), {
  Match: function (v) {
    Match = v;
  }
}, 0);

/**
 * @file **Meteor Match** - Extending {@link http://docs.meteor.com/api/check.html Meteor Match} argument checking
 * @see https://github.com/meteor/meteor/tree/master/packages/check
 * @extends Meteor/Check
 * @namespace Match
 */

/**
 * @name OptionalOrNull
 * @method
 * @memberof Match
 * @summary Return whether an argument is optional or null
 * @example check(options, Match.OptionalOrNull(Object))
 * @param {String} pattern - match pattern
 * @return {Boolean} matches - void, null, or pattern
 */
Match.OptionalOrNull = function (pattern) {
  return Match.OneOf(undefined, null, pattern);
};
/**
 * @name OrderHookOption
 * @method
 * @memberof Match
 * @example check(options, Match.OrderHookOptions())
 * @return {Boolean} matches - void, null, or pattern
 */


Match.OrderHookOptions = function () {
  return Match.OneOf(Object);
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"products.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/products.js                                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

module.export({
  applyProductRevision: function () {
    return applyProductRevision;
  },
  variantIsSelected: function () {
    return variantIsSelected;
  },
  resubscribeAfterCloning: function () {
    return resubscribeAfterCloning;
  }
});

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 0);
var i18next;
module.watch(require("i18next"), {
  "default": function (v) {
    i18next = v;
  }
}, 1);
var orderBy;
module.watch(require("lodash/orderBy"), {
  "default": function (v) {
    orderBy = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 4);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 5);
var Router;
module.watch(require("../../imports/plugins/core/router/lib"), {
  Router: function (v) {
    Router = v;
  }
}, 6);
var getCurrentTag, getShopName;
module.watch(require("./index"), {
  getCurrentTag: function (v) {
    getCurrentTag = v;
  },
  getShopName: function (v) {
    getShopName = v;
  }
}, 7);
var Products, Revisions;
module.watch(require("../collections"), {
  Products: function (v) {
    Products = v;
  },
  Revisions: function (v) {
    Revisions = v;
  }
}, 8);
var Catalog;
module.watch(require("./catalog"), {
  "default": function (v) {
    Catalog = v;
  }
}, 9);
var MetaData;
module.watch(require("./router/metadata"), {
  MetaData: function (v) {
    MetaData = v;
  }
}, 10);

/**
 * @file ReactionProduct is only intended to be used on the client, but it's placed
 * in common code because it is imported by the Products schema.
 * ReactionProduct is a
 * {@link https://github.com/meteor/meteor/blob/master/packages/reactive-dict/README.md| ReactiveDict},
 * a general-purpose reactive datatype to use with
 * {@link https://github.com/meteor/meteor/tree/master/packages/tracker|Meteor Tracker}.
 * ReactionProduct allows the current product to be reactive, without Session.
 * @namespace ReactionProduct
 */

/**
 * @name ReactionProduct
 * @method
 * @memberof ReactionProduct
 * @summary Reactive current product dependency, ensuring reactive products, without session
 * ReactionProduct is a `ReactiveDict`, a general-purpose reactive datatype to use with Meteor Tracker.
 * @see {@link https://github.com/meteor/meteor/blob/master/packages/reactive-dict/README.md|Meteor ReactiveDict}
 * @see {@link https://github.com/meteor/meteor/tree/master/packages/tracker|Meteor Tracker}
 * @todo this is a messy class implementation, normalize it.
 */
var ReactionProduct = new ReactiveDict("currentProduct");
/**
 * @name applyProductRevision
 * @method
 * @memberof ReactionProduct
 * @summary Apply revision to product
 * @example applyProductRevision(product)
 * @param  {Object} product product
 * @return {Object|null} product or null, if no product found
 */

function applyProductRevision(product) {
  if (product) {
    if (product.__revisions && product.__revisions.length) {
      var cleanProduct = Object.assign({}, product);
      delete cleanProduct.__revisions;
      var revisedProduct; // check for product revisions and set that as the current product

      for (var _iterator = product.__revisions, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray2) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _revision = _ref;

        if (!_revision.parentDocument) {
          revisedProduct = product.__revisions[0].documentData;
        }
      } // if there are no revision to product (image and/or tag only) just set the original product as the product


      if (!revisedProduct) {
        revisedProduct = cleanProduct;
      }

      return Object.assign({}, revisedProduct, {
        __published: cleanProduct,
        __draft: product.__revisions[0]
      });
    }

    return product;
  }

  return null;
}

function variantIsSelected(variantId) {
  var current = Object.assign({}, ReactionProduct.selectedVariant());

  if (current.ancestors && (variantId === current._id || current.ancestors.indexOf(variantId) >= 0)) {
    return true;
  }

  return false;
}

/**
 * @name sortProducts
 * @method
 * @memberof ReactionProduct
 * @summary Sort products by tag, creation date by tag and creation date
 * @param  {Array} products Array of products
 * @param  {String} tag     Tag
 * @return {Array}         Array of products
 */
ReactionProduct.sortProducts = function (products, tag) {
  var sorted = [];
  sorted = orderBy(products, // Sort by postion for tag
  function (product) {
    return product.positions && product.positions[tag] && product.positions[tag].position;
  }, // Then by creation date for tag
  function (product) {
    return product.positions && product.positions[tag] && product.positions[tag].createdAt;
  }, // Finally sort by creation date
  "createdAt");
  return sorted;
};
/**
 * @name setCurrentVariant
 * @method
 * @memberof ReactionProduct
 * @param {String} variantId - set current variantId
 * @return {undefined}
 */


ReactionProduct.setCurrentVariant = function (variantId) {
  if (variantId === null) {
    ReactionProduct.set("variantId", null);
    ReactionProduct.set("variantId", ReactionProduct.selectedVariantId());
  }

  if (!variantId) {
    return;
  }

  var currentId = ReactionProduct.selectedVariantId();

  if (currentId === variantId) {
    return;
  }

  ReactionProduct.set("variantId", variantId);
};
/**
 * @name setProduct
 * @todo this will be deprecated in favor of template.instance data.
 * @method
 * @memberof ReactionProduct
 * @summary method to set default/parameterized product variant
 * @param {String} currentProductId - set current productId
 * @param {String} currentVariantId - set current variantId
 * @return {Object} product object
 */


ReactionProduct.setProduct = function (currentProductId, currentVariantId) {
  var productId = currentProductId || Router.getParam("handle");
  var variantId = currentVariantId || Router.getParam("variantId"); // Find the current product

  var product = Products.findOne({
    $or: [{
      handle: productId.toLowerCase()
    }, // Try the handle (slug) lowercased
    {
      handle: productId
    }, // Otherwise try the handle (slug) untouched
    {
      _id: productId
    }, // try the product id
    {
      changedHandleWas: productId // Last attempt: the permalink may have changed.

    }]
  });
  productId = product && product._id;

  if (product) {
    if (Router.getParam("handle") !== product.handle && product.changedHandleWas && product.changedHandleWas !== product.handle) {
      var newUrl = Router.pathFor("product", {
        hash: {
          handle: product.handle
        }
      });
      Router.go(newUrl);
    } // Check if selected variant id really belongs to the product.
    // This has been working previously rather accidentally, because variantIsSelected(variantId) below returned always false,
    // because the Product subscription ensured, that the correct Product is in Mini-Mongo. This is not guaranteed, though.
    // If Products collection would have other products, it would fail.


    var isVariantValidChild = true;
    var variants = Products.find({
      ancestors: {
        $in: [productId]
      }
    }).map(function (variant) {
      return variant._id;
    });

    if (variantId && !variants.includes(variantId)) {
      isVariantValidChild = false;
    } // set the default variant
    // as the default.


    if (!isVariantValidChild || !variantId || !variantIsSelected(variantId)) {
      var topVariants = ReactionProduct.getTopVariants(productId);
      variantId = Array.isArray(topVariants) && topVariants.length && topVariants[0]._id || null;
    } // set in our reactive dictionary


    ReactionProduct.set("productId", productId);
    ReactionProduct.set("variantId", variantId);
  } // Update the meta data when a product is selected


  MetaData.init(Router.current());
  return applyProductRevision(product);
};
/**
 * @name selectedProductId
 * @method
 * @memberof ReactionProduct
 * @summary get the currently active/requested product
 * @return {String} currently selected product id
 */


ReactionProduct.selectedProductId = function () {
  return ReactionProduct.get("productId");
};
/**
 * @name selectedVariantId
 * @method
 * @memberof ReactionProduct
 * @summary get the currently active/requested variant
 * @return {String} currently selected variant id
 */


ReactionProduct.selectedVariantId = function () {
  var id = ReactionProduct.get("variantId");

  if (id !== null) {
    return id;
  }

  var variants = ReactionProduct.getVariants();

  if (!(variants.length > 0)) {
    return [];
  }

  id = variants[0]._id; // ReactionProduct.set("variantId", id);

  return id;
};
/**
 * @name selectedVariant
 * @method
 * @memberof ReactionProduct
 * @summary get the currently active/requested variant object
 * @return {Object} currently selected variant object
 */


ReactionProduct.selectedVariant = function () {
  var id = ReactionProduct.selectedVariantId();

  if (typeof id === "string") {
    return applyProductRevision(Products.findOne(id));
  }

  return [];
};
/**
 * @name selectedTopVariant
 * @method
 * @memberof ReactionProduct
 * @summary get the currently active TOP variant object
 * @return {Object} currently selected TOP variant object
 */


ReactionProduct.selectedTopVariant = function () {
  var topVariants = ReactionProduct.getTopVariants();
  var topVariant = topVariants.find(function (variant) {
    return variantIsSelected(variant._id);
  });
  return topVariant;
};
/**
 * @name selectedProduct
 * @method
 * @memberof ReactionProduct
 * @summary get the currently active/requested product object
 * @return {Object|undefined} currently selected product cursor
 */


ReactionProduct.selectedProduct = function () {
  var id = ReactionProduct.selectedProductId();

  if (typeof id === "string") {
    return applyProductRevision(Products.findOne(id));
  }

  return undefined;
};
/**
 * @name checkChildVariants
 * @method
 * @memberof ReactionProduct
 * @summary return number of child variants for a parent
 * @param {String} parentVariantId - parentVariantId
 * @return {Number} count of childVariants for this parentVariantId
 */


ReactionProduct.checkChildVariants = function (parentVariantId) {
  var childVariants = ReactionProduct.getVariants(parentVariantId);
  return childVariants.length ? childVariants.length : 0;
};
/**
 * @name checkInventoryVariants
 * @method
 * @memberof ReactionProduct
 * @summary return number of inventory variants for a parent
 * @param {String} parentVariantId - parentVariantId
 * @todo could be combined with checkChildVariants in one method
 * @todo inventoryVariants are deprecated. remove this.
 * @return {Number} count of inventory variants for this parentVariantId
 */


ReactionProduct.checkInventoryVariants = function (parentVariantId) {
  var inventoryVariants = ReactionProduct.getVariants(parentVariantId, "inventory");
  return inventoryVariants.length ? inventoryVariants.length : 0;
};
/**
 * @name getVariantPriceRange
 * @method
 * @memberof ReactionProduct
 * @summary get price range of a variant if it has child options.
 * if no child options, return main price value
 * @todo remove string return and replace with object
 * @param {String} [id] - current variant _Id
 * @return {String} formatted price or price range
 */


ReactionProduct.getVariantPriceRange = function (id) {
  return Catalog.getVariantPriceRange(id || ReactionProduct.selectedVariant()._id);
};
/**
 * @name getProductPriceRange
 * @method
 * @memberof ReactionProduct
 * @summary get price range of a product
 * if no only one price available, return it
 * otherwise return a string range
 * @todo remove string return and replace with object
 * @param {String} [id] - current product _id
 * @return {String} formatted price or price range
 */


ReactionProduct.getProductPriceRange = function (id) {
  return Catalog.getProductPriceRange(id || ReactionProduct.selectedProductId());
};
/**
 * @name getVariantQuantity
 * @method
 * @memberof ReactionProduct
 * @summary middleware method which calls the same named common method.
 * @todo maybe we could remove this after 1.3. But for now I like how it looks.
 * @param {Object} doc - variant object
 * @return {Number} summary of options quantity or top-level variant
 * inventoryQuantity
 */


ReactionProduct.getVariantQuantity = function (doc) {
  return Catalog.getVariantQuantity(doc);
};
/**
 * @method getProduct
 * @method
 * @memberof ReactionProduct
 * @summary Get product object. Could be useful for products and for top level variants
 * @param {String} [id] - product _id
 * @return {Object} Product data
 */


ReactionProduct.getProduct = function (id) {
  return Catalog.getProduct(id);
};
/**
 * @method getVariants
 * @method
 * @memberof ReactionProduct
 * @summary Get all parent variants. Could be useful for products and for top level variants
 * @param {String} [id] - product _id
 * @param {String} [type] - type of variant
 * @return {Array} Parent variants or empty array
 */


ReactionProduct.getVariants = function (id, type) {
  return Catalog.getVariants(id || ReactionProduct.selectedProductId(), type);
};
/**
 * @method getSiblings
 * @method
 * @memberof ReactionProduct
 * @summary Get all sibling variants - variants with the same ancestor tree
 * could be useful for child variants relationships with top-level variants
 * @param {Object} [variant] - product / variant object
 * @param {String} [type] - type of variant
 * @param {Boolean} [includeSelf] - include current variant in results
 * @return {Array} Sibling variants or empty array
 */


ReactionProduct.getSiblings = function (variant, type) {
  return Catalog.getSiblings(variant, type);
};
/**
 * @method getVariantParent
 * @method
 * @memberof ReactionProduct
 * @summary Get direct parent variant - could be useful for lower level variants to get direct parents
 * @param {Object} [variant] - product / variant object
 * @return {Array} Parent variant or empty
 */


ReactionProduct.getVariantParent = function (variant) {
  return Catalog.getVariantParent(variant);
};
/**
 * @method getTopVariants
 * @summary Get only product top level variants
 * @param {String} [id] - product _id
 * @return {Array} Product top level variants or empty array
 */


ReactionProduct.getTopVariants = function (id) {
  return Catalog.getTopVariants(id || ReactionProduct.selectedProductId());
};
/**
 * @name getTag
 * @method
 * @memberof ReactionProduct
 * @summary This needed for naming `positions` object. Method could return `tag`
 * route name or shop name as default name.
 * @return {String} tag name or shop name
 */


ReactionProduct.getTag = function () {
  return getCurrentTag() || getShopName().toLowerCase();
};
/**
 * @name getProductsByTag
 * @method
 * @memberof ReactionProduct
 * @summary method to return tag specific product
 * @param {String} tag - tag string
 * @return {Object} - return products collection cursor filtered by tag
 */


ReactionProduct.getProductsByTag = function (tag) {
  var hashtags;
  var newRelatedTags;
  var relatedTag;
  var relatedTags;
  var selector = {};

  if (tag) {
    hashtags = [];
    relatedTags = [tag];

    while (relatedTags.length) {
      newRelatedTags = [];

      for (var _iterator2 = relatedTags, _isArray3 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray3 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        if (_isArray3) {
          if (_i2 >= _iterator2.length) break;
          relatedTag = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          relatedTag = _i2.value;
        }

        if (hashtags.indexOf(relatedTag._id) === -1) {
          hashtags.push(relatedTag._id);
        }
      }

      relatedTags = newRelatedTags;
    }

    selector.hashtags = {
      $in: hashtags
    };
  }

  var cursor = Products.find(selector);
  return cursor;
};
/**
 * @name publishProduct
 * @method
 * @memberof ReactionProduct
 * @summary product publishing and alert
 * @todo review process for publishing arrays of product
 * @param {Object} productOrArray - product Object
 * @returns {undefined} - returns nothing, and alerts, happen here
 */


ReactionProduct.publishProduct = function (productOrArray) {
  var products = !_isArray(productOrArray) ? [productOrArray] : productOrArray;
  /* eslint no-loop-func: 1 */

  var _loop = function (product) {
    Meteor.call("products/publishProduct", product._id, function (error, result) {
      // eslint-disable-line no-loop-func
      if (error) {
        Alerts.add(error, "danger", {
          placement: "productGridItem",
          id: product._id
        });
        throw new Meteor.Error("error-occurred", error);
      }

      var alertSettings = {
        placement: "productGridItem",
        id: product._id,
        autoHide: true,
        dismissable: false
      };

      if (result) {
        Alerts.add(i18next.t("productDetail.publishProductVisible", {
          product: product.title
        }), "success", alertSettings);
      } else {
        Alerts.add(i18next.t("productDetail.publishProductHidden", {
          product: product.title
        }), "warning", alertSettings);
      }
    });
  };

  for (var _iterator3 = products, _isArray4 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray4 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
    var _ref2;

    if (_isArray4) {
      if (_i3 >= _iterator3.length) break;
      _ref2 = _iterator3[_i3++];
    } else {
      _i3 = _iterator3.next();
      if (_i3.done) break;
      _ref2 = _i3.value;
    }

    var product = _ref2;

    _loop(product);
  }
};
/**
 * @name toggleVisibility
 * @method
 * @memberof ReactionProduct
 * @summary product publishing and alert
 * @param {Object} productOrArray - product Object
 * @returns {undefined} - returns nothing, and alerts, happen here
 */


ReactionProduct.toggleVisibility = function (productOrArray) {
  var products = !_isArray(productOrArray) ? [productOrArray] : productOrArray;

  var _loop2 = function (product) {
    Meteor.call("products/toggleVisibility", product._id, function (error, result) {
      // eslint-disable-line no-loop-func
      if (error) {
        Alerts.add(error, "danger", {
          placement: "productGridItem",
          id: product._id
        });
        throw new Meteor.Error("error-occurred", error);
      }

      var alertSettings = {
        placement: "productGridItem",
        id: product._id,
        autoHide: true,
        dismissable: false
      };

      if (result) {
        Alerts.add(i18next.t("productDetail.publishProductVisible", {
          product: product.title
        }), "success", alertSettings);
      } else {
        Alerts.add(i18next.t("productDetail.publishProductHidden", {
          product: product.title
        }), "warning", alertSettings);
      }
    });
  };

  for (var _iterator4 = products, _isArray5 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray5 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
    var _ref3;

    if (_isArray5) {
      if (_i4 >= _iterator4.length) break;
      _ref3 = _iterator4[_i4++];
    } else {
      _i4 = _iterator4.next();
      if (_i4.done) break;
      _ref3 = _i4.value;
    }

    var product = _ref3;

    _loop2(product);
  }
};
/**
 * A reactive data source that tells any dependents that they should resubscribe their
 * active publication.
 * @type {ReactiveVar}
 */


var resubscribeAfterCloning = new ReactiveVar(false);

/**
 * @name cloneProduct
 * @method
 * @memberof ReactionProduct
 * @summary product cloning and alert
 * @param {Object|Array} productOrArray - if this method calls from productGrid
 * it receives and array with product _id or _ids, but if it calls from PDP, when
 * it receive a `Object` with _id. It needed to determine the source of call.
 * @returns {undefined} - returns nothing, and alerts, happen here
 */
ReactionProduct.cloneProduct = function (productOrArray) {
  var products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;
  return Meteor.call("products/cloneProduct", products, function (error, result) {
    if (error) {
      Alerts.add(error, "danger", {
        placement: "productGridItem"
      });
      throw new Meteor.Error("error-occurred", error);
    }

    if (result) {
      if (products.length === 1) {
        Alerts.add(i18next.t("productDetail.clonedAlert", {
          product: products[0].title
        }), "success", {
          placement: "productGridItem",
          id: products[0]._id,
          autoHide: true,
          dismissable: false
        });
      } else {
        Alerts.add(i18next.t("productDetail.clonedAlert_plural", {
          product: i18next.t("productDetail.theSelectedProducts"),
          count: 0
        }), "success", {
          placement: "productGridItem",
          id: products[0]._id,
          autoHide: true,
          dismissable: false
        });
      }
    } // this statement allow us to redirect to a new clone PDP if clone action
    // was fired within PDP, not within productGrid.


    if (!Array.isArray(productOrArray)) {
      Router.go("product", {
        handle: result[0]
      });
    } else {
      resubscribeAfterCloning.set(true);
    }
  });
};
/**
 * @name archiveProduct
 * @method
 * @memberof ReactionProduct
 * @summary confirm to archive product
 * @param {Object} productOrArray - product Object
 * @returns {undefined} - returns nothing, and alerts, happen here
 */


ReactionProduct.archiveProduct = function (productOrArray) {
  var products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;
  var productIds = products.map(function (product) {
    return typeof product === "string" ? product : product._id;
  });
  var confirmTitle; // we have to use so difficult logic with `length` check because of some
  // languages, which have different phrase forms for each of cases.
  // we are using i18next `plural` functionality here.
  // @see: http://i18next.com/translate/pluralSimple

  if (products.length === 1) {
    confirmTitle = i18next.t("productDetailEdit.archiveThisProduct");
  } else {
    confirmTitle = i18next.t("productDetailEdit.archiveSelectedProducts");
  }

  Alerts.alert({
    title: confirmTitle,
    type: "warning",
    showCancelButton: true,
    confirmButtonText: "Archive"
  }, function (isConfirm) {
    if (isConfirm) {
      Meteor.call("products/archiveProduct", productIds, function (error, result) {
        var title;

        if (error) {
          title = products.length === 1 ? products[0].title || i18next.t("productDetail.archiveErrorTheProduct") : i18next.t("productDetail.theSelectedProducts");
          Alerts.toast(i18next.t("productDetail.productArchiveError", {
            product: title
          }), "error");
          throw new Meteor.Error("error-occurred" + title, error);
        }

        if (result) {
          Router.go("/");

          if (products.length === 1) {
            title = products[0].title || i18next.t("productDetail.theProduct");
            Alerts.toast(i18next.t("productDetail.archivedAlert", {
              product: title
            }), "info");
          } else {
            title = i18next.t("productDetail.theSelectedProducts");
            Alerts.toast(i18next.t("productDetail.archivedAlert_plural", {
              product: title,
              count: 0
            }), "info");
          }
        }
      });
    }
  });
};
/**
 * @name isAncestorDeleted
 * @method
 * @memberof ReactionProduct
 * @summary Verify there are no deleted ancestors
 * Variants cannot be restored if their parent product / variant is deleted
 * @param  {Object} product     product Object
 * @param  {Boolean} includeSelf include product
 * @return {Boolean}             True or false
 */


ReactionProduct.isAncestorDeleted = function (product, includeSelf) {
  var productIds = _toConsumableArray(product.ancestors);

  if (includeSelf) {
    productIds.push(product._id);
  } // Verify there are no deleted ancestors,
  // Variants cannot be restored if their parent product / variant is deleted


  var archivedCount = Revisions.find({
    "documentId": {
      $in: productIds
    },
    "documentData.isDeleted": true,
    "workflow.status": {
      $nin: ["revision/published"]
    }
  }).count();

  if (archivedCount > 0) {
    return true;
  }

  return false;
};

module.exportDefault(ReactionProduct);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"prop-types.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/api/prop-types.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PropTypes: function () {
    return PropTypes;
  }
});

var _every;

module.watch(require("lodash/every"), {
  "default": function (v) {
    _every = v;
  }
}, 0);

var _isArray;

module.watch(require("lodash/isArray"), {
  "default": function (v) {
    _isArray = v;
  }
}, 1);

var _isEmpty;

module.watch(require("lodash/isEmpty"), {
  "default": function (v) {
    _isEmpty = v;
  }
}, 2);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 3);
var Schemas;
module.watch(require("../collections/schemas"), {
  "*": function (v) {
    Schemas = v;
  }
}, 4);

/**
 * @file **PropTypes** - React Component PropTypes methods for validating Tags
 *
 * @namespace PropTypes
 */
var TagSchema = Schemas.Tag.newContext();
var PropTypes = {};

/**
 * @name Tag
 * @summary React Component PropTypes validator for a single Tag
 * @method
 * @memberof PropTypes
 * @param  {Object} props An object containing all props passed into the component
 * @param  {String} propName Name of prop to validate
 * @return {Error|undefined} returns an error if validation us unseccessful
 */
PropTypes.Tag = function (props, propName) {
  check(props, Object);
  check(propName, String);

  if (_isEmpty(props[propName]) === false) {
    if (TagSchema.validate(props[propName]) === false) {
      return new Error("Tag must be of type: Schemas.Tag");
    }
  }
};
/**
 * @name arrayOfTags
 * @summary React Component PropTypes validator for an array of Tags
 * @method
 * @memberof PropTypes
 * @param  {Object} props An object containing all props passed into the component
 * @param  {String} propName Name of prop to validate
 * @return {Error|undefined} returns an error if validation us unseccessful
 */


PropTypes.arrayOfTags = function (props, propName) {
  check(props, Object);
  check(propName, String);

  if (_isEmpty(props[propName]) === false && _isArray(props[propName])) {
    var valid = _every(props[propName], function (tag) {
      return TagSchema.validate(tag);
    });

    if (valid === false) {
      return new Error("Objects in array must be of type: Schemas.Tag");
    }
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections":{"schemas":{"accounts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/accounts.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Profile: function () {
    return Profile;
  },
  Email: function () {
    return Email;
  },
  Accounts: function () {
    return Accounts;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, shopIdAutoValue, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 4);
var Address;
module.watch(require("./address"), {
  Address: function (v) {
    Address = v;
  }
}, 5);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 6);

/**
 * @typedef {SimpleSchema} SimpleSchema
 * @summary SimpleSchema for Collections - Reaction uses {@link https://github.com/aldeed/meteor-simple-schema SimpleSchema} to apply basic content and structure validation to Collections. See {@link https://docs.reactioncommerce.com/reaction-docs/master/simple-schema full documentation}.
 */

/**
 * @file Reaction Core schemas
 * Reaction uses {@link https://github.com/aldeed/meteor-simple-schema SimpleSchema} to apply basic content and structure validation to Collections.
 * See {@link https://docs.reactioncommerce.com/reaction-docs/master/simple-schema full documentation}.
 * @namespace schemas
 */

/**
 * @name TaxSettings
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} exemptionNo optional
 * @property {String} customerUsageType optional
 */
var TaxSettings = new SimpleSchema({
  exemptionNo: {
    type: String,
    optional: true
  },
  customerUsageType: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("TaxSettings", TaxSettings);
/**
 * @name Profile
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {Address[]} addressBook optional, array of Addresses
 * @property {Boolean} invited optional
 * @property {String} name optional
 * @property {String} picture optional
 * @property {String} bio optional
 * @property {String} username optional
 * @property {String} currency User currency
 */

var Profile = new SimpleSchema({
  "addressBook": {
    type: Array,
    optional: true
  },
  "addressBook.$": {
    type: Address
  },
  "invited": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "name": {
    type: String,
    optional: true
  },
  "picture": {
    type: String,
    optional: true
  },
  "bio": {
    type: String,
    optional: true
  },
  "username": {
    type: String,
    optional: true
  },
  "currency": {
    label: "User Currency",
    type: String,
    optional: true
  },
  "preferences": {
    label: "User preferences",
    type: Object,
    blackbox: true,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Profile", Profile);
/**
 * @name Email
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} provides optional
 * @property {String} address required
 * @property {Boolean} verified optional
 */

var Email = new SimpleSchema({
  provides: {
    type: String,
    defaultValue: "default",
    optional: true
  },
  address: {
    type: String,
    regEx: SimpleSchema.RegEx.Email
  },
  verified: {
    type: Boolean,
    defaultValue: false,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Email", Email);
/**
 * @name Accounts
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} userId required
 * @property {String[]} sessions optional, Array of strings
 * @property {String} shopId required
 * @property {String} name optional
 * @property {String} username optional
 * @property {Email[]} emails optional, Array of strings
 * @property {Boolean} acceptsMarketing optional
 * @property {String} state optional
 * @property {TaxSettings} taxSettings optional
 * @property {String} note optional
 * @property {Profile} profile optional
 * @property {String[]} groups optional, Array of groupIds of the groups the user belongs to
 * @property {Metafield[]} metafields optional
 * @property {Date} createdAt required
 * @property {Date} updatedAt optional
 */

var Accounts = new SimpleSchema({
  "userId": {
    type: String,
    regEx: SimpleSchema.RegEx.Id,
    index: 1,
    label: "Accounts ShopId"
  },
  "sessions": {
    type: Array,
    optional: true,
    index: 1
  },
  "sessions.$": {
    type: String
  },
  "shopId": {
    type: String,
    autoValue: shopIdAutoValue,
    regEx: SimpleSchema.RegEx.Id,
    index: 1
  },
  "name": {
    type: String,
    optional: true
  },
  "username": {
    type: String,
    optional: true
  },
  "emails": {
    type: Array,
    optional: true
  },
  "emails.$": {
    type: Email
  },
  "acceptsMarketing": {
    type: Boolean,
    defaultValue: false,
    optional: true
  },
  "state": {
    type: String,
    defaultValue: "new",
    optional: true
  },
  "taxSettings": {
    type: TaxSettings,
    optional: true
  },
  "note": {
    type: String,
    optional: true
  },
  "profile": {
    type: Profile,
    optional: true
  },
  "groups": {
    type: Array,
    // groupIds that user belongs to
    optional: true,
    defaultValue: []
  },
  "groups.$": {
    type: String
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Accounts", Accounts);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"address.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/address.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Address: function () {
    return Address;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 2);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 3);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 4);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 5);
var withoutCodeCountries = ["AO", "AG", "AW", "BS", "BZ", "BJ", "BW", "BF", "BI", "CM", "CF", "KM", "CG", "CD", "CK", "CI", "DJ", "DM", "GQ", "ER", "FJ", "TF", "GM", "GH", "GD", "GN", "GY", "HK", "IE", "JM", "KE", "KI", "MO", "MW", "ML", "MR", "MU", "MS", "NR", "AN", "NU", "KP", "PA", "QA", "RW", "KN", "LC", "ST", "SA", "SC", "SL", "SB", "SO", "SR", "SY", "TZ", "TL", "TK", "TO", "TT", "TV", "UG", "AE", "VU", "YE", "ZW"];
/**
 * @name Address
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id
 * @property {String} fullName required
 * @property {String} address1 required
 * @property {String} address2
 * @property {String} city required
 * @property {String} company
 * @property {String} phone required
 * @property {String} region required, State/Province/Region
 * @property {String} postal required
 * @property {String} country required
 * @property {Boolean} isCommercial required
 * @property {Boolean} isBillingDefault required
 * @property {Boolean} isShippingDefault required
 * @property {Boolean} failedValidation
 * @property {Metafield[]} metafields
 */

var Address = new SimpleSchema({
  "_id": {
    type: String,
    defaultValue: Random.id(),
    optional: true
  },
  "fullName": {
    type: String,
    label: "Full name"
  },
  "address1": {
    label: "Address 1",
    type: String
  },
  "address2": {
    label: "Address 2",
    type: String,
    optional: true
  },
  "city": {
    type: String,
    label: "City"
  },
  "company": {
    type: String,
    label: "Company",
    optional: true
  },
  "phone": {
    type: String,
    label: "Phone"
  },
  "region": {
    label: "State/Province/Region",
    type: String
  },
  "postal": {
    label: "ZIP/Postal Code",
    type: String,
    optional: true,
    custom: function () {
      var country = this.field("country");

      if (country && country.value) {
        if (!withoutCodeCountries.includes(country.value) && !this.value) {
          return "required";
        }
      }

      return true;
    }
  },
  "country": {
    type: String,
    label: "Country"
  },
  "isCommercial": {
    label: "This is a commercial address.",
    type: Boolean
  },
  "isBillingDefault": {
    label: "Make this your default billing address?",
    type: Boolean
  },
  "isShippingDefault": {
    label: "Make this your default shipping address?",
    type: Boolean
  },
  "failedValidation": {
    label: "Failed validation",
    type: Boolean,
    defaultValue: false,
    optional: true
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Address", Address);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"assets.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/assets.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Assets: function () {
    return Assets;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Assets = new SimpleSchema({
  type: {
    type: String
  },
  name: {
    type: String,
    optional: true
  },
  ns: {
    type: String,
    optional: true
  },
  path: {
    type: String,
    optional: true
  },
  content: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Assets", Assets);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cart.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/cart.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  CartItem: function () {
    return CartItem;
  },
  CartItems: function () {
    return CartItems;
  },
  Cart: function () {
    return Cart;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, shopIdAutoValueForCart, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  shopIdAutoValueForCart: function (v) {
    shopIdAutoValueForCart = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 4);
var Payment;
module.watch(require("./payments"), {
  Payment: function (v) {
    Payment = v;
  }
}, 5);
var Product, ProductVariant;
module.watch(require("./products"), {
  Product: function (v) {
    Product = v;
  },
  ProductVariant: function (v) {
    ProductVariant = v;
  }
}, 6);
var Shipment, ShippingParcel;
module.watch(require("./shipping"), {
  Shipment: function (v) {
    Shipment = v;
  },
  ShippingParcel: function (v) {
    ShippingParcel = v;
  }
}, 7);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 8);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 9);
var CartItem = new SimpleSchema({
  "_id": {
    type: String
  },
  "productId": {
    type: String,
    index: 1
  },
  "shopId": {
    type: String,
    autoValue: shopIdAutoValueForCart,
    index: 1,
    label: "Cart Item shopId",
    optional: true
  },
  "quantity": {
    label: "Quantity",
    type: SimpleSchema.Integer,
    min: 0
  },
  "product": {
    type: Product
  },
  "variants": {
    type: ProductVariant
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "title": {
    type: String,
    label: "CartItem Title"
  },
  "type": {
    label: "Product Type",
    type: String,
    optional: true
  },
  "parcel": {
    type: ShippingParcel,
    optional: true
  },
  "cartItemId": {
    type: String,
    optional: true
  },
  "transaction": {
    type: Object,
    optional: true,
    blackbox: true
  },
  "taxData": {
    type: Object,
    optional: true,
    blackbox: true
  },
  "taxRate": {
    type: Number,
    optional: true
  },
  "shippingMethod": {
    type: Object,
    optional: true,
    blackbox: true // @todo Revert this to schema at some point

  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("CartItem", CartItem);
/**
 * @name CartItems
 * @memberof schemas
 * @summary Used in check by inventory/addReserve method
 * @type {SimpleSchema}
 * @property {CartItem[]} items an Array of CartItem optional
 */

var CartItems = new SimpleSchema({
  "items": {
    type: Array,
    optional: true
  },
  "items.$": {
    type: CartItem
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("CartItems", CartItems);
/**
 * @name Cart
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id required for check of users' carts
 * @property {String} shopId required, Cart ShopId
 * @property {String} userId required
 * @property {String} sessionId required
 * @property {String} email optional
 * @property {CartItem[]} items Array of CartItem optional
 * @property {Shipment[]} shipping Array of Shipment optional, blackbox
 * @property {Payment[]} billing Array of Payment optional, blackbox
 * @property {Number} tax tax rate
 * @property {Object[]} taxes Array of objects optional
 * @property {Object} taxRatesByShop optional
 * @property {Number} discount optional
 * @property {Workflow} workflow optional
 * @property {Date} createdAt required
 * @property {Date} updatedAt optional
 */

var Cart = new SimpleSchema({
  "_id": {
    type: String,
    optional: true
  },
  "shopId": {
    type: String,
    autoValue: shopIdAutoValueForCart,
    index: 1,
    label: "Cart ShopId"
  },
  "userId": {
    type: String,
    unique: true,
    autoValue: function () {
      if (this.isInsert || this.isUpdate) {
        if (!this.isFromTrustedCode) {
          return this.userId;
        }
      } else {
        this.unset();
      }
    }
  },
  "sessionId": {
    type: String,
    index: 1
  },
  "email": {
    type: String,
    optional: true,
    index: 1,
    regEx: SimpleSchema.RegEx.Email
  },
  "items": {
    type: Array,
    optional: true
  },
  "items.$": {
    type: CartItem
  },
  "shipping": {
    type: Array,
    optional: true
  },
  "shipping.$": {
    type: Shipment
  },
  "billing": {
    type: Array,
    optional: true
  },
  "billing.$": {
    type: Payment
  },
  "tax": {
    type: Number,
    optional: true
  },
  "taxes": {
    type: Array,
    optional: true
  },
  "taxes.$": {
    type: Object,
    blackbox: true
  },
  "taxRatesByShop": {
    type: Object,
    optional: true,
    blackbox: true
  },
  "taxCalculationFailed": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "bypassAddressValidation": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "discount": {
    type: Number,
    optional: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Cart", Cart);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"catalog.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/catalog.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Catalog: function () {
    return Catalog;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var Catalog = new SimpleSchema({
  contentType: {
    type: String
  },
  media: {
    type: Object,
    blackbox: true
  },
  variants: {
    type: Object,
    blackbox: true
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"emails.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/emails.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Emails: function () {
    return Emails;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 4);
var Emails = new SimpleSchema({
  to: String,
  from: String,
  subject: String,
  text: {
    type: String,
    optional: true
  },
  html: {
    type: String,
    optional: true
  },
  userId: {
    type: String,
    optional: true
  },
  jobId: {
    type: String,
    index: true
  },
  type: {
    type: String,
    optional: true
  },
  status: String,
  createdAt: {
    type: Date,
    autoValue: createdAtAutoValue
  },
  updatedAt: {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Emails", Emails);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"event.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/event.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Event: function () {
    return Event;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Event = new SimpleSchema({
  title: {
    type: String,
    label: "Event Title"
  },
  type: {
    type: String,
    label: "Event Type"
  },
  description: {
    type: String,
    label: "Event Description",
    optional: true
  },
  userId: {
    type: String,
    label: "User who triggered event",
    optional: true
  },
  trigger: {
    type: String,
    label: "What triggered the event",
    optional: true
  },
  createdAt: {
    type: Date,
    label: "Created At"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Event", Event);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groups.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/groups.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Groups: function () {
    return Groups;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 4);
var Groups = new SimpleSchema({
  "name": {
    type: String
  },
  "description": {
    type: String,
    optional: true
  },
  "slug": {
    type: String
  },
  "permissions": {
    type: Array,
    optional: true
  },
  "permissions.$": {
    type: String
  },
  "shopId": {
    type: String,
    regEx: SimpleSchema.RegEx.Id
  },
  "createdBy": {
    type: String,
    optional: true,
    regEx: SimpleSchema.RegEx.Id,
    autoValue: function () {
      return this.userId || this.value;
    }
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Groups", Groups);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/helpers.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  createdAtAutoValue: function () {
    return createdAtAutoValue;
  },
  updatedAtAutoValue: function () {
    return updatedAtAutoValue;
  },
  shopIdAutoValue: function () {
    return shopIdAutoValue;
  },
  shopIdAutoValueForCart: function () {
    return shopIdAutoValueForCart;
  },
  schemaIdAutoValue: function () {
    return schemaIdAutoValue;
  },
  shopDefaultCountry: function () {
    return shopDefaultCountry;
  }
});
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 1);
var Reaction;
module.watch(require("../../api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);
var Shops;
module.watch(require("./.."), {
  Shops: function (v) {
    Shops = v;
  }
}, 3);

function createdAtAutoValue() {
  // We don't want to unset or overwrite a createdAt in a nested
  // document, for example, in a product being added to cart items
  if (this.closestSubschemaFieldName) return;
  if (this.isInsert) return new Date();
  if (this.isUpsert) return {
    $setOnInsert: new Date()
  };
  this.unset();
}

function updatedAtAutoValue() {
  // We don't want to overwrite an updatedAt in a nested
  // document, for example, in a product being added to cart items
  if (this.closestSubschemaFieldName) return;
  return new Date();
}

function shopIdAutoValue() {
  // we should always have a shopId
  if (this.isSet && Meteor.isServer) {
    return this.value;
  } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {
    return Reaction.getShopId();
  }

  return this.unset();
}

function shopIdAutoValueForCart() {
  // we should always have a shopId
  if (this.isSet && Meteor.isServer) {
    return this.value;
  } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {
    var shopId = Reaction.getPrimaryShopId();
    var marketplaceSettings = Reaction.getMarketplaceSettings();

    if (marketplaceSettings && marketplaceSettings.public && marketplaceSettings.public.merchantCart === true) {
      shopId = Reaction.getShopId();
    }

    return shopId;
  }

  return this.unset();
}

function schemaIdAutoValue() {
  if (this.isSet && Meteor.isServer) {
    return this.value;
  } else if (Meteor.isServer && this.operator !== "$pull" || Meteor.isClient && this.isInsert) {
    return Random.id();
  }

  return this.unset();
}

function shopDefaultCountry() {
  try {
    // Check to see if this is client or server, and the type of update being performed
    if (this.isSet && Meteor.isServer) {
      return this.value;
    } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {
      // Find the current shop
      var shop = Shops.findOne({
        _id: Reaction.getShopId()
      }); // Find the current shops primary shipping address

      if (shop && shop.addressBook) {
        var defaultShippingAddress = shop.addressBook.find(function (address) {
          return address.isShippingDefault === true;
        }); // return the shops country to auto-populate the Country of Origin field in the scheme

        return defaultShippingAddress.country;
      }

      return this.value;
    }

    return this.unset();
  } catch (e) {
    return this.value;
  }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/index.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./accounts"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./address"), {
  "*": module.makeNsSetter()
}, 1);
module.watch(require("./assets"), {
  "*": module.makeNsSetter()
}, 2);
module.watch(require("./catalog"), {
  "*": module.makeNsSetter()
}, 3);
module.watch(require("./cart"), {
  "*": module.makeNsSetter()
}, 4);
module.watch(require("./emails"), {
  "*": module.makeNsSetter()
}, 5);
module.watch(require("./inventory"), {
  "*": module.makeNsSetter()
}, 6);
module.watch(require("./layouts"), {
  "*": module.makeNsSetter()
}, 7);
module.watch(require("./logs"), {
  "*": module.makeNsSetter()
}, 8);
module.watch(require("./metafield"), {
  "*": module.makeNsSetter()
}, 9);
module.watch(require("./notifications"), {
  "*": module.makeNsSetter()
}, 10);
module.watch(require("./orders"), {
  "*": module.makeNsSetter()
}, 11);
module.watch(require("./payments"), {
  "*": module.makeNsSetter()
}, 12);
module.watch(require("./products"), {
  "*": module.makeNsSetter()
}, 13);
module.watch(require("./registry"), {
  "*": module.makeNsSetter()
}, 14);
module.watch(require("./revisions"), {
  "*": module.makeNsSetter()
}, 15);
module.watch(require("./shipping"), {
  "*": module.makeNsSetter()
}, 16);
module.watch(require("./shops"), {
  "*": module.makeNsSetter()
}, 17);
module.watch(require("./groups"), {
  "*": module.makeNsSetter()
}, 18);
module.watch(require("./sms"), {
  "*": module.makeNsSetter()
}, 19);
module.watch(require("./social"), {
  "*": module.makeNsSetter()
}, 20);
module.watch(require("./tags"), {
  "*": module.makeNsSetter()
}, 21);
module.watch(require("./templates"), {
  "*": module.makeNsSetter()
}, 22);
module.watch(require("./translations"), {
  "*": module.makeNsSetter()
}, 23);
module.watch(require("./workflow"), {
  "*": module.makeNsSetter()
}, 24);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inventory.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/inventory.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Inventory: function () {
    return Inventory;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, shopIdAutoValue, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 4);
var Document, Notes;
module.watch(require("./orders"), {
  Document: function (v) {
    Document = v;
  },
  Notes: function (v) {
    Notes = v;
  }
}, 5);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 6);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 7);
var Inventory = new SimpleSchema({
  "_id": {
    type: String,
    optional: true
  },
  "shopId": {
    type: String,
    autoValue: shopIdAutoValue,
    index: 1,
    label: "Inventory ShopId"
  },
  "productId": {
    type: String,
    index: true
  },
  "variantId": {
    type: String,
    index: true
  },
  "orderItemId": {
    type: String,
    index: true,
    optional: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  },
  "sku": {
    label: "sku",
    type: String,
    optional: true
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "documents": {
    type: Array,
    optional: true
  },
  "documents.$": {
    type: Document
  },
  "notes": {
    type: Array,
    optional: true
  },
  "notes.$": {
    type: Notes
  },
  "createdAt": {
    type: Date,
    optional: true,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Inventory", Inventory);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"layouts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/layouts.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  LayoutStructure: function () {
    return LayoutStructure;
  },
  Layout: function () {
    return Layout;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var LayoutStructure = new SimpleSchema({
  template: {
    type: String,
    optional: true,
    index: true
  },
  layoutHeader: {
    type: String,
    optional: true,
    index: true
  },
  layoutFooter: {
    type: String,
    optional: true,
    index: true
  },
  notFound: {
    type: String,
    optional: true,
    index: true
  },
  dashboardHeader: {
    type: String,
    optional: true,
    index: true
  },
  dashboardControls: {
    type: String,
    optional: true,
    index: true
  },
  dashboardHeaderControls: {
    type: String,
    optional: true,
    index: true
  },
  adminControlsFooter: {
    type: String,
    optional: true,
    index: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("LayoutStructure", LayoutStructure);
/**
 * @name Layout
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary Layout are used by the Shops and Packages schemas.
 * Read more about Layouts in {@link https://docs.reactioncommerce.com/reaction-docs/master/layout documentation}
 * @property {String} layout optional
 * @property {String} workflow optional
 * @property {String} template optional
 * @property {String} collection optional
 * @property {String} theme optional
 * @property {Boolean} enabled default value: `true`
 * @property {String} status optional
 * @property {String} label optional
 * @property {String} container optional
 * @property {String[]} audience optional
 * @property {LayoutStructure} structure optional
 * @property {Number} priority optional default value: `999` - Layouts are prioritized with lower numbers first.
 * @property {Number} position optional default value: `1`
 */

var Layout = new SimpleSchema({
  "layout": {
    type: String,
    optional: true,
    index: true
  },
  "workflow": {
    type: String,
    optional: true
  },
  "template": {
    type: String,
    optional: true
  },
  "collection": {
    type: String,
    optional: true
  },
  "theme": {
    type: String,
    optional: true
  },
  "enabled": {
    type: Boolean,
    defaultValue: true
  },
  "status": {
    type: String,
    optional: true
  },
  "label": {
    type: String,
    optional: true
  },
  "container": {
    type: String,
    optional: true
  },
  "audience": {
    type: Array,
    optional: true
  },
  "audience.$": {
    type: String
  },
  "structure": {
    type: LayoutStructure,
    optional: true
  },
  "priority": {
    type: SimpleSchema.Integer,
    optional: true,
    defaultValue: 999
  },
  "position": {
    type: SimpleSchema.Integer,
    optional: true,
    defaultValue: 1
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Layout", Layout);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"logs.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/logs.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Logs: function () {
    return Logs;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Logs = new SimpleSchema({
  logType: {
    type: String
  },
  shopId: {
    type: String
  },
  level: {
    type: String,
    defaultValue: "info",
    allowedValues: ["trace", "debug", "info", "warn", "error", "fatal"]
  },
  source: {
    type: String,
    defaultValue: "server",
    allowedValues: ["client", "server"]
  },
  handled: {
    type: Boolean,
    defaultValue: false
  },
  data: {
    type: Object,
    blackbox: true,
    label: "Data"
  },
  date: {
    type: Date,
    autoValue: function () {
      return new Date();
    },
    label: "Date"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Logs", Logs);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"metafield.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/metafield.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Metafield: function () {
    return Metafield;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Metafield = new SimpleSchema({
  key: {
    type: String,
    max: 30,
    optional: true
  },
  namespace: {
    type: String,
    max: 20,
    optional: true
  },
  scope: {
    type: String,
    optional: true
  },
  value: {
    type: String,
    optional: true
  },
  valueType: {
    type: String,
    optional: true
  },
  description: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Metafield", Metafield);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notifications.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/notifications.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Notification: function () {
    return Notification;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Notification = new SimpleSchema({
  message: {
    type: String,
    optional: false
  },
  type: {
    type: String,
    optional: false
  },
  url: {
    type: String,
    optional: false
  },
  to: {
    type: String,
    optional: false
  },
  hasDetails: {
    type: Boolean,
    optional: false
  },
  details: {
    type: String,
    optional: true
  },
  status: {
    type: String,
    optional: false,
    defaultValue: "unread"
  },
  timeSent: {
    type: Date,
    optional: false,
    autoValue: function () {
      if (this.isInsert) {
        return new Date();
      } else if (this.isUpsert) {
        return {
          $setOnInsert: new Date()
        };
      }

      this.unset();
    }
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Notification", Notification);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"orders.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/orders.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Document: function () {
    return Document;
  },
  History: function () {
    return History;
  },
  ExportHistory: function () {
    return ExportHistory;
  },
  Notes: function () {
    return Notes;
  },
  OrderItem: function () {
    return OrderItem;
  },
  OrderTransaction: function () {
    return OrderTransaction;
  },
  Order: function () {
    return Order;
  },
  OrderDocument: function () {
    return OrderDocument;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  }
}, 4);
var Cart, CartItem;
module.watch(require("./cart"), {
  Cart: function (v) {
    Cart = v;
  },
  CartItem: function (v) {
    CartItem = v;
  }
}, 5);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 6);
var Document = new SimpleSchema({
  docId: {
    type: String
  },
  docType: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Document", Document);
/**
 * @name History
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} event required
 * @property {String} value required
 * @property {String} userId required
 * @property {String} updatedAt required
 */

var History = new SimpleSchema({
  event: {
    type: String
  },
  value: {
    type: String
  },
  userId: {
    type: String
  },
  updatedAt: {
    type: Date
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("History", History);
/**
 * @name ExportHistory
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} required Whether the export attempt succeeded or failed
 * @property {Date} required Date the export was attempted
 * @property {String} required Name of the export method (e.g. CSV, Shopify)
 * @property {String} optional The identifier for this order on the remote system
 */

var ExportHistory = new SimpleSchema({
  status: {
    type: String,
    allowedValues: ["success", "failure"]
  },
  dateAttempted: {
    type: Date
  },
  exportMethod: {
    type: String
  },
  destinationIdentifier: {
    type: String,
    optional: true
  },
  shopId: {
    type: String
  }
});
registerSchema("ExportHistory", ExportHistory);
/**
 * @name Notes
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} content required
 * @property {String} userId required
 * @property {Date} updatedAt required
 */

var Notes = new SimpleSchema({
  content: {
    type: String
  },
  userId: {
    type: String
  },
  updatedAt: {
    type: Date
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Notes", Notes);
/**
 * @name OrderItem
 * @memberof schemas
 * @summary CartItem + some additional properties
 * @type {SimpleSchema}
 * @property {String} additionalField optional
 * @property {Workflow} workflow optional
 * @property {History[]} history optional
 * @property {Document[]} documents optional
*/

var OrderItem = new SimpleSchema({
  "additionalField": {
    type: String,
    optional: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  },
  "history": {
    type: Array,
    optional: true
  },
  "history.$": {
    type: History
  },
  "documents": {
    type: Array,
    optional: true
  },
  "documents.$": {
    type: Document
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("OrderItem", OrderItem);
/**
 * @name OrderTransaction Schema
 * @memberof schemas
 * @summary Order transactions tie Shipping, Payment, and Inventory transactions
 * @type {SimpleSchema}
 * @property {String} itemId optional
 * @property {String} paymentId optional
 * @property {String} shipmentId optional
 * @property {String} inventoryId optional
 * @property {Date} createdAt required
 */

var OrderTransaction = new SimpleSchema({
  itemId: {
    type: String,
    optional: true
  },
  paymentId: {
    type: String,
    optional: true
  },
  shipmentId: {
    type: String,
    optional: true
  },
  inventoryId: {
    type: String,
    optional: true
  },
  createdAt: {
    type: Date,
    autoValue: createdAtAutoValue
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("OrderTransaction", OrderTransaction);
/**
 * @name Order Schema
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary Order ties a User to a Cart and an array of History, Documents, Notes, Items and OrderTransactions.
 * @property {String} userId required
 * @property {String} cartId optional
 * @property {History[]} history optional
 * @property {Document[]} documents optional
 * @property {Notes[]} notes optional
 * @property {OrderItem[]} items optional
 * @property {OrderTransaction[]} transactions optional
 */

var Order = new SimpleSchema({
  "userId": {
    type: String,
    unique: false
  },
  "cartId": {
    type: String,
    optional: true
  },
  "history": {
    type: Array,
    optional: true
  },
  "history.$": {
    type: History
  },
  "documents": {
    type: Array,
    optional: true
  },
  "documents.$": {
    type: Document
  },
  "notes": {
    type: Array,
    optional: true
  },
  "notes.$": Notes,
  "taxCalculationFailed": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "bypassAddressValidation": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "items": {
    type: Array,
    optional: true
  },
  "items.$": CartItem.clone().extend(OrderItem),
  "transactions": {
    type: Array,
    optional: true
  },
  "transactions.$": OrderTransaction,
  "exportHistory": {
    type: Array,
    optional: true
  },
  "exportHistory.$": ExportHistory
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Order", Order);
var OrderDocument = Cart.clone().extend(Order).extend(OrderItem);
registerSchema("OrderDocument", OrderDocument);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"payments.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/payments.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  PaymentItem: function () {
    return PaymentItem;
  },
  PaymentMethod: function () {
    return PaymentMethod;
  },
  PaymentMethodArgument: function () {
    return PaymentMethodArgument;
  },
  Invoice: function () {
    return Invoice;
  },
  CurrencyExchangeRate: function () {
    return CurrencyExchangeRate;
  },
  Payment: function () {
    return Payment;
  },
  Refund: function () {
    return Refund;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, schemaIdAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  schemaIdAutoValue: function (v) {
    schemaIdAutoValue = v;
  }
}, 4);
var Address;
module.watch(require("./address"), {
  Address: function (v) {
    Address = v;
  }
}, 5);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 6);
var PaymentItem = new SimpleSchema({
  _id: {
    type: String,
    label: "Shipment Line Item",
    optional: true,
    autoValue: schemaIdAutoValue
  },
  productId: {
    type: String,
    index: 1
  },
  shopId: {
    type: String,
    index: 1,
    label: "Shipment Item ShopId",
    optional: true
  },
  quantity: {
    label: "Quantity",
    type: SimpleSchema.Integer,
    min: 0
  },
  variantId: {
    type: String
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("PaymentItem", PaymentItem);
/**
 * @name PaymentMethod
 * @type {SimpleSchema}
 * @memberof schemas
 * @property {String} processor required
 * @property {String} paymentPackageId required
 * @property {String} paymentSettingsKey required
 * @property {String} storedCard optional
 * @property {String} method, allowed values: `"credit"`, `"debit"`, `"shipping-credit"`
 * @property {String} transactionId required
 * @property {Object} metadata optional, blackbox
 * @property {Workflow} workflow optional
 * @property {String} status required
 * @property {String} mode, allowed values: `"authorize"`, `"capture"`, `"refund"`, `"cancel"`, `"void"`
 * @property {String} riskLevel, allowed values: `"normal"`, `"elevated"`, `"high"`
 * @property {Date} createdAt required
 * @property {Date} updatedAt optional
 * @property {String} authorization optional
 * @property {Number} amount optional
 * @property {String} currency required
 * @property {Object[]} transactions optional, blackbox
 * @property {PaymentItem[]} items optional
 * @property {String} shopId optional
 */

var PaymentMethod = new SimpleSchema({
  "processor": {
    type: String
  },
  "paymentPackageId": {
    type: String
  },
  "paymentSettingsKey": {
    type: String
  },
  "storedCard": {
    type: String,
    optional: true
  },
  "method": {
    type: String,
    allowedValues: ["credit", "debit", "shipping-credit"],
    optional: true
  },
  "transactionId": {
    type: String
  },
  "metadata": {
    type: Object,
    optional: true,
    blackbox: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  },
  "status": {
    type: String
  },
  "mode": {
    type: String,
    allowedValues: ["authorize", "capture", "refund", "cancel", "void"]
  },
  "riskLevel": {
    type: String,
    allowedValues: ["normal", "elevated", "high"],
    optional: true
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    optional: true
  },
  "authorization": {
    type: String,
    optional: true
  },
  "amount": {
    type: Number,
    optional: true
  },
  "currency": {
    type: String,
    optional: true
  },
  "transactions": {
    type: Array,
    optional: true
  },
  "transactions.$": {
    type: Object,
    blackbox: true
  },
  "items": {
    type: Array,
    optional: true
  },
  "items.$": {
    type: PaymentItem
  },
  "shopId": {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("PaymentMethod", PaymentMethod); // When checking paymentMethod passed as a method arg, props like createdAt
// should be optional

var PaymentMethodArgument = PaymentMethod.clone().extend({
  createdAt: {
    type: Date,
    optional: true,
    autoValue: null
  }
});
var Invoice = new SimpleSchema({
  transaction: {
    type: String,
    optional: true
  },
  shipping: {
    type: Number,
    optional: true
  },
  taxes: {
    type: Number,
    optional: true
  },
  subtotal: {
    type: Number
  },
  discounts: {
    type: Number,
    optional: true
  },
  total: {
    type: Number
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Invoice", Invoice);
/**
 * @name CurrencyExchangeRate
 * @type {SimpleSchema}
 * @memberof schemas
 * @property {String} userCurrency, default value: `"USD"`
 * @property {Number} exchangeRate optional
 */

var CurrencyExchangeRate = new SimpleSchema({
  userCurrency: {
    type: String,
    optional: true,
    defaultValue: "USD"
  },
  exchangeRate: {
    type: Number,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("CurrencyExchangeRate", CurrencyExchangeRate);
/**
 * @name Payment
 * @type {SimpleSchema}
 * @memberof schemas
 * @property {String} _id required, Payment Id
 * @property {Address} address optional
 * @property {PaymentMethod} paymentMethod optional
 * @property {Invoice} invoice optional
 * @property {CurrencyExchangeRate} currency optional
 * @property {String} shopId optional
 */

var Payment = new SimpleSchema({
  _id: {
    type: String,
    label: "Payment Id",
    autoValue: schemaIdAutoValue
  },
  address: {
    type: Address,
    optional: true
  },
  paymentMethod: {
    type: PaymentMethod,
    optional: true,
    blackbox: true
  },
  invoice: {
    type: Invoice,
    optional: true
  },
  currency: {
    type: CurrencyExchangeRate,
    optional: true,
    defaultValue: {}
  },
  shopId: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Payment", Payment);
/**
 * @name Payment
 * @type {SimpleSchema}
 * @memberof schemas
 * @property {String} type required
 * @property {Number} amount required
 * @property {Number} created required
 * @property {String} currency required
 * @property {Object} raw optional, blackbox
 */

var Refund = new SimpleSchema({
  type: {
    type: String
  },
  amount: {
    type: Number
  },
  created: {
    type: SimpleSchema.Integer
  },
  currency: {
    type: String
  },
  raw: {
    type: Object,
    optional: true,
    blackbox: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Refund", Refund);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"products.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/products.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  VariantMedia: function () {
    return VariantMedia;
  },
  ProductPosition: function () {
    return ProductPosition;
  },
  ProductVariant: function () {
    return ProductVariant;
  },
  PriceRange: function () {
    return PriceRange;
  },
  Product: function () {
    return Product;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 3);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 4);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 5);
var ReactionProduct, getSlug;
module.watch(require("../../api"), {
  ReactionProduct: function (v) {
    ReactionProduct = v;
  },
  getSlug: function (v) {
    getSlug = v;
  }
}, 6);
var createdAtAutoValue, shopIdAutoValue, shopDefaultCountry, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  },
  shopDefaultCountry: function (v) {
    shopDefaultCountry = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 7);
var Event;
module.watch(require("./event"), {
  Event: function (v) {
    Event = v;
  }
}, 8);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 9);
var ShippingParcel;
module.watch(require("./shipping"), {
  ShippingParcel: function (v) {
    ShippingParcel = v;
  }
}, 10);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 11);
var VariantMedia = new SimpleSchema({
  "mediaId": {
    type: String,
    optional: true
  },
  "priority": {
    type: SimpleSchema.Integer,
    optional: true
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "updatedAt": {
    type: Date,
    optional: true
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("VariantMedia", VariantMedia);
/**
 * @name ProductPosition
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} tag optional
 * @property {Number} position optional
 * @property {Boolean} pinned optional
 * @property {Number} weight optional, default value: `0`
 * @property {Date} updatedAt required
 */

var ProductPosition = new SimpleSchema({
  tag: {
    type: String,
    optional: true
  },
  position: {
    type: SimpleSchema.Integer,
    optional: true
  },
  pinned: {
    type: Boolean,
    optional: true
  },
  weight: {
    type: SimpleSchema.Integer,
    optional: true,
    defaultValue: 0,
    min: 0,
    max: 3
  },
  updatedAt: {
    type: Date
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ProductPosition", ProductPosition);
/**
 * @name ProductVariant
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id required, Variant ID
 * @property {String[]} ancestors, default value: `[]`
 * @property {Number} index optional, Variant position number in list. Keep array index for moving variants in a list.
 * @property {Boolean} isVisible, default value: `false`
 * @property {Boolean} isDeleted, default value: `false`
 * @property {String} barcode optional
 * @property {Number} compareAtPrice optional, Compare at price
 * @property {String} fulfillmentService optional, Fullfillment service
 * @property {Number} weight, default value: `0`
 * @property {Number} length optional, default value: `0`
 * @property {Number} width optional, default value: `0`
 * @property {Number} height optional, default value: `0`
 * @property {Boolean} inventoryManagement, default value: `true`
 * @property {Boolean} inventoryPolicy, default value: `false`, If disabled, item can be sold even if it not in stock.
 * @property {Number} lowInventoryWarningThreshold, default value: `0`, Warn of low inventory at this number
 * @property {Number} inventoryQuantity, default value: `0`
 * @property {Number} minOrderQuantity optional
 * @property {Boolean} isLowQuantity optional, true when at least 1 variant is below `lowInventoryWarningThreshold`
 * @property {Boolean} isSoldOut optional, denormalized field, indicates when all variants `inventoryQuantity` is 0
 * @property {Number} price, default value: `0.00`
 * @property {String} shopId required, Variant ShopId
 * @property {String} sku optional
 * @property {String} type, default value: `"variant"`
 * @property {Boolean} taxable, default value: `true`
 * @property {String} taxCode, default value: `"0000"`
 * @property {String} taxDescription optional
 * @property {String} title, Label for customers, default value: `""`
 * @property {String} optionTitle, Option internal name, default value: `"Untitled option"`
 * @property {Metafield[]} metafields optional
 * @property {Date} createdAt optional
 * @property {Date} updatedAt optional
 * @property {Event[]} eventLog optional, Variant Event Log
 * @property {Workflow} workflow optional
 * @property {String} originCountry optional
 */

var ProductVariant = new SimpleSchema({
  "_id": {
    type: String,
    label: "Variant ID"
  },
  "ancestors": {
    type: Array,
    defaultValue: []
  },
  "ancestors.$": {
    type: String
  },
  "index": {
    label: "Variant position number in list",
    type: SimpleSchema.Integer,
    optional: true
  },
  "isVisible": {
    type: Boolean,
    index: 1,
    defaultValue: false
  },
  "isDeleted": {
    type: Boolean,
    index: 1,
    defaultValue: false
  },
  "barcode": {
    label: "Barcode",
    type: String,
    optional: true,
    custom: function () {
      if (Meteor.isClient) {
        if (this.siblingField("type").value === "inventory" && !this.value) {
          return SimpleSchema.ErrorTypes.REQUIRED;
        }
      }
    }
  },
  "compareAtPrice": {
    label: "Compare At Price",
    type: Number,
    optional: true,
    min: 0,
    defaultValue: 0.00
  },
  "weight": {
    label: "Weight",
    type: Number,
    min: 0,
    optional: true,
    defaultValue: 0,
    custom: function () {
      if (Meteor.isClient) {
        if (!(this.siblingField("type").value === "inventory" || this.value || this.value === 0)) {
          return SimpleSchema.ErrorTypes.REQUIRED;
        }
      }
    }
  },
  "length": {
    label: "Length",
    type: Number,
    min: 0,
    optional: true,
    defaultValue: 0
  },
  "width": {
    label: "Width",
    type: Number,
    min: 0,
    optional: true,
    defaultValue: 0
  },
  "height": {
    label: "Height",
    type: Number,
    min: 0,
    optional: true,
    defaultValue: 0
  },
  "inventoryManagement": {
    type: Boolean,
    label: "Inventory Tracking",
    optional: true,
    defaultValue: true,
    custom: function () {
      if (Meteor.isClient) {
        if (!(this.siblingField("type").value === "inventory" || this.value || this.value === false)) {
          return SimpleSchema.ErrorTypes.REQUIRED;
        }
      }
    }
  },
  "inventoryPolicy": {
    type: Boolean,
    label: "Deny when out of stock",
    optional: true,
    defaultValue: false,
    custom: function () {
      if (Meteor.isClient) {
        if (!(this.siblingField("type").value === "inventory" || this.value || this.value === false)) {
          return SimpleSchema.ErrorTypes.REQUIRED;
        }
      }
    }
  },
  "lowInventoryWarningThreshold": {
    type: SimpleSchema.Integer,
    label: "Warn at",
    min: 0,
    optional: true,
    defaultValue: 0
  },
  "inventoryQuantity": {
    type: SimpleSchema.Integer,
    label: "Quantity",
    optional: true,
    defaultValue: 0,
    custom: function () {
      if (Meteor.isClient) {
        if (this.siblingField("type").value !== "inventory") {
          if (ReactionProduct.checkChildVariants(this.docId) === 0 && !this.value) {
            return SimpleSchema.ErrorTypes.REQUIRED;
          }
        }
      }
    }
  },
  "minOrderQuantity": {
    label: "Minimum order quantity",
    type: SimpleSchema.Integer,
    optional: true
  },
  "isLowQuantity": {
    label: "Indicates that the product quantity is too low",
    type: Boolean,
    optional: true
  },
  "isSoldOut": {
    label: "Indicates when the product quantity is zero",
    type: Boolean,
    optional: true
  },
  "price": {
    label: "Price",
    type: Number,
    defaultValue: 0.00,
    min: 0,
    optional: true
  },
  "shopId": {
    type: String,
    autoValue: shopIdAutoValue,
    index: 1,
    label: "Variant ShopId"
  },
  "sku": {
    label: "SKU",
    type: String,
    optional: true
  },
  "type": {
    label: "Type",
    type: String,
    defaultValue: "variant"
  },
  "taxable": {
    label: "Taxable",
    type: Boolean,
    defaultValue: true,
    optional: true
  },
  "taxCode": {
    label: "Tax Code",
    type: String,
    defaultValue: "0000",
    optional: true
  },
  "taxDescription": {
    type: String,
    optional: true,
    label: "Tax Description"
  },
  "title": {
    label: "Label",
    type: String,
    defaultValue: ""
  },
  "optionTitle": {
    label: "Option",
    type: String,
    optional: true,
    defaultValue: "Untitled Option"
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "createdAt": {
    label: "Created at",
    type: Date,
    optional: true
  },
  "updatedAt": {
    label: "Updated at",
    type: Date,
    optional: true
  },
  // TODO: REVIEW - Does this need to exist? Should we use workflow instead?
  // Should it be called 'history' or something else instead?
  // Should this go into the Logger instead? Is the logger robust enough for this?
  "eventLog": {
    label: "Variant Event Log",
    type: Array,
    optional: true
  },
  "eventLog.$": {
    type: Event
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  },
  "originCountry": {
    type: String,
    optional: true,
    autoValue: shopDefaultCountry
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ProductVariant", ProductVariant);
/**
 * @name PriceRange
 * @type {SimpleSchema}
 * @memberof schemas
 * @property {String} range, default value: `"0.00"`
 * @property {Number} min optional, default value: `0`
 * @property {Number} max optional, default value: `0`
 */

var PriceRange = new SimpleSchema({
  range: {
    type: String,
    defaultValue: "0.00"
  },
  min: {
    type: Number,
    defaultValue: 0,
    optional: true
  },
  max: {
    type: Number,
    defaultValue: 0,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("PriceRange", PriceRange);
/**
 * @name Product
 * @type {SimpleSchema}
 * @memberof schemas
 * @property {String} _id Product ID
 * @property {String[]} ancestors default value: `[]`
 * @property {String} shopId Product ShopID
 * @property {String} title Product Title
 * @property {String} pageTitle optional
 * @property {String} description optional
 * @property {String} productType optional
 * @property {String} originCountry optional
 * @property {String} type default value: `"simple"`
 * @property {String} vendor optional
 * @property {Metafield[]} metafields optional
 * @property {Object} positions ProductPosition
 * @property {PriceRange} price denormalized, object with range string, min and max
 * @property {Boolean} isLowQuantity denormalized, true when at least 1 variant is below `lowInventoryWarningThreshold`
 * @property {Boolean} isSoldOut denormalized, Indicates when all variants `inventoryQuantity` is zero
 * @property {Boolean} isBackorder denormalized, `true` if product not in stock, but customers anyway could order it
 * @property {Boolean} requiresShipping default value: `true`, Require a shipping address
 * @property {ShippingParcel} parcel optional
 * @property {String[]} hashtags optional
 * @property {String} twitterMsg optional
 * @property {String} facebookMsg optional
 * @property {String} googleplusMsg optional
 * @property {String} pinterestMsg optional
 * @property {String} metaDescription optional
 * @property {String} handle optional, slug
 * @property {Boolean} isDeleted, default value: `false`
 * @property {Boolean} isVisible, default value: `false`
 * @property {String} template, default value: `"productDetailSimple"`
 * @property {Date} createdAt required
 * @property {Date} updatedAt optional
 * @property {Date} publishedAt optional
 * @property {String} publishedScope optional
 * @property {Workflow} workflow optional
 */

var Product = new SimpleSchema({
  "_id": {
    type: String,
    label: "Product Id"
  },
  "ancestors": {
    type: Array,
    defaultValue: []
  },
  "ancestors.$": {
    type: String
  },
  "shopId": {
    type: String,
    autoValue: shopIdAutoValue,
    index: 1,
    label: "Product ShopId"
  },
  "title": {
    type: String,
    defaultValue: "",
    label: "Product Title"
  },
  "pageTitle": {
    type: String,
    optional: true
  },
  "description": {
    type: String,
    optional: true
  },
  "productType": {
    type: String,
    optional: true
  },
  "originCountry": {
    type: String,
    optional: true,
    autoValue: shopDefaultCountry
  },
  "type": {
    label: "Type",
    type: String,
    defaultValue: "simple"
  },
  "vendor": {
    type: String,
    optional: true
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "positions": {
    type: Object,
    // ProductPosition
    blackbox: true,
    optional: true
  },
  "price": {
    label: "Price",
    type: PriceRange
  },
  "isLowQuantity": {
    label: "Indicates that the product quantity is too low",
    type: Boolean,
    optional: true
  },
  "isSoldOut": {
    label: "Indicates when the product quantity is zero",
    type: Boolean,
    optional: true
  },
  "isBackorder": {
    label: "Indicates when the seller has allowed the sale of product which" + " is not in stock",
    type: Boolean,
    optional: true
  },
  "requiresShipping": {
    label: "Require a shipping address",
    type: Boolean,
    defaultValue: true,
    optional: true
  },
  "parcel": {
    type: ShippingParcel,
    optional: true
  },
  "hashtags": {
    type: Array,
    optional: true,
    index: 1
  },
  "hashtags.$": {
    type: String
  },
  "twitterMsg": {
    type: String,
    optional: true,
    max: 140
  },
  "facebookMsg": {
    type: String,
    optional: true,
    max: 255
  },
  "googleplusMsg": {
    type: String,
    optional: true,
    max: 255
  },
  "pinterestMsg": {
    type: String,
    optional: true,
    max: 255
  },
  "metaDescription": {
    type: String,
    optional: true
  },
  "handle": {
    type: String,
    optional: true,
    index: 1,
    autoValue: function () {
      var slug = getSlug(this.value);

      if (!slug && this.siblingField("title").value) {
        slug = getSlug(this.siblingField("title").value);
      } else if (!slug) {
        slug = this.siblingField("_id").value || Random.id();
      }

      if (this.isInsert) {
        return slug;
      } else if (this.isUpsert) {
        return {
          $setOnInsert: slug
        };
      }
    }
  },
  "changedHandleWas": {
    type: String,
    optional: true
  },
  "isDeleted": {
    type: Boolean,
    index: 1,
    defaultValue: false
  },
  "isVisible": {
    type: Boolean,
    index: 1,
    defaultValue: false
  },
  "template": {
    label: "Template",
    type: String,
    defaultValue: "productDetailSimple"
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  },
  "publishedAt": {
    type: Date,
    optional: true
  },
  "publishedScope": {
    type: String,
    optional: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Product", Product);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"registry.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/registry.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Permissions: function () {
    return Permissions;
  },
  Registry: function () {
    return Registry;
  },
  PackageConfig: function () {
    return PackageConfig;
  },
  CorePackageConfig: function () {
    return CorePackageConfig;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Layout;
module.watch(require("./layouts"), {
  Layout: function (v) {
    Layout = v;
  }
}, 4);
var Permissions = new SimpleSchema({
  permission: {
    type: String
  },
  label: {
    type: String
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Permissions", Permissions);
/**
 * @name Registry
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary The Registry Schema allows package settings to be defined. For more, read the in-depth {@link https://blog.reactioncommerce.com/an-intro-to-architecture-the-registry/ Intro to Architecture: The Registry}.
 * @property {String[]} provides Legacy `provides` apps use a String rather than an array. These are transformed in loadPackages.
 * @property {String} route optional
 * @property {String} name optional, Registry name must be unique. Namespace your plugin (e.g. `yourorg-plugin-name`) to avoid conflicts.
 * @property {String} template optional, Assign to a Blaze template
 * @property {String} workflow optional, A layout for a template in the package
 * @property {String} layout optional, Force the app to render a specific layout
 * @property {String[]} triggersEnter optional, Trigger on Enter
 * @property {String[]} triggersExit optional, Trigger on Exit
 * @property {Object} options optional, Routing Options
 * @property {String} description optional, deprecated
 * @property {String} icon optional, A set of CSS classes, often Font Awesome classes, used to define the package in the sidebar.
 * @property {String} label optional, Human-readable name for a Registry entry
 * @property {String} container optional, Used to group plugins
 * @property {Number} priority optional, Plugin load order. Lower values loaded first.
 * @property {Boolean} enabled optional, Enable or not
 * @property {Permissions[]} permissions optional, Define a new user permission
 * @property {String[]} audience optional, Define what permissions are required to view a step in a workflow
 * @property {Object} meta optional, Set `dashboardSize` for the `actionView`
 * @property {String[]} showForShopTypes optional, Shop Types this plugin should show for
 * @property {String[]} hideForShopTypes optional, Shop Types this plugin should not show for
 */

var Registry = new SimpleSchema({
  // TODO: This should _not_ be optional in the future, but we need to organize our packages better
  "provides": {
    // Legacy `provides` apps use a String rather than an array. These are transformed in loadPackages
    type: Array,
    index: true,
    optional: true
  },
  "provides.$": {
    type: String
  },
  "route": {
    type: String,
    optional: true,
    index: true
  },
  // TODO: This should _not_ be optional in the future, but we need to organize our packages better
  "name": {
    type: String,
    label: "Registry Name",
    index: true,
    optional: true
  },
  "template": {
    type: String,
    optional: true
  },
  "workflow": {
    type: String,
    optional: true
  },
  "layout": {
    type: String,
    optional: true
  },
  "triggersEnter": {
    type: Array,
    label: "Trigger on Entry",
    optional: true
  },
  "triggersEnter.$": {
    type: String
  },
  "triggersExit": {
    type: Array,
    label: "Trigger on Exit",
    optional: true
  },
  "triggersExit.$": {
    type: String
  },
  "options": {
    label: "Routing Options",
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "description": {
    type: String,
    optional: true
  },
  "icon": {
    type: String,
    optional: true
  },
  "label": {
    type: String,
    optional: true
  },
  "container": {
    type: String,
    optional: true
  },
  "priority": {
    type: SimpleSchema.Integer,
    optional: true
  },
  "enabled": {
    type: Boolean,
    optional: true
  },
  "permissions": {
    type: Array,
    optional: true
  },
  "permissions.$": {
    type: Permissions
  },
  "audience": {
    type: Array,
    label: "Audience",
    optional: true
  },
  "audience.$": {
    type: String
  },
  "meta": {
    label: "Meta",
    type: Object,
    optional: true,
    blackbox: true
  },
  "showForShopTypes": {
    label: "Shop Types this plugin should show for",
    type: Array,
    optional: true
  },
  "showForShopTypes.$": {
    type: String
  },
  "hideForShopTypes": {
    type: Array,
    label: "Shop Types this plugin should not show for",
    optional: true
  },
  "hideForShopTypes.$": {
    type: String
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Registry", Registry);
/**
 * @name PackageConfig
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary The PackageConfig is part of the configuration settings required for packages in the Registry.
 * The Registry Schema allows package settings to be defined. For more, read the in-depth {@link https://blog.reactioncommerce.com/an-intro-to-architecture-the-registry/ Intro to Architecture: The Registry}.
 * @property {String} shopId Autovalue removed {@link https://github.com/reactioncommerce/reaction/issues/646#issuecomment-169351842 here}
 * @property {String} name required
 * @property {Boolean} enabled defalut value: true
 * @property {String} icon optional
 * @property {Object} settings optional
 * @property {Registry[]} registry optional
 * @property {Layout[]} layout optional
 */

var PackageConfig = new SimpleSchema({
  "shopId": {
    type: String,
    index: 1,
    // see: https://github.com/reactioncommerce/reaction/issues/646#issuecomment-169351842
    // autoValue: shopIdAutoValue,
    label: "PackageConfig ShopId",
    optional: true
  },
  "name": {
    type: String,
    index: 1
  },
  "enabled": {
    type: Boolean,
    defaultValue: true
  },
  "icon": {
    type: String,
    optional: true
  },
  "settings": {
    type: Object,
    optional: true,
    blackbox: true,
    defaultValue: {}
  },
  "registry": {
    type: Array,
    optional: true
  },
  "registry.$": {
    type: Registry
  },
  "layout": {
    type: Array,
    optional: true
  },
  "layout.$": {
    type: Layout
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("PackageConfig", PackageConfig);
/**
 * @name CorePackageConfig
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary The Core Package Config is part of the Registry.
 * The Registry Schema allows package settings to be defined. For more, read the in-depth {@link https://blog.reactioncommerce.com/an-intro-to-architecture-the-registry/ Intro to Architecture: The Registry}.
 * @extends {PackageConfig}
 * @property {Object} settings.mail optional, Mail settings
 * @property {String} settings.mail.user Mail user
 * @property {String} settings.mail.password Mail password
 * @property {String} settings.mail.host Mail host
 * @property {String} settings.mail.port Mail port
 * @property {String} settings.openexchangerates.appId OpenExchangeRates Id
 * @property {String} settings.openexchangerates.refreshPeriod default value: `"every 1 hour"`
 * @property {String} settings.google.clientId default value: `null`
 * @property {String} settings.google.apiKey default value: `null`
 * @property {Object} settings.public optional Settings in `public` are published to the client.
 * @property {Boolean} settings.public.allowGuestCheckout allows guest checkout
 * @property {String} settings.cart.cleanupDurationDays default value: `"older than 3 days"`
 */

var CorePackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.mail": {
    type: Object,
    optional: true,
    label: "Mail Settings"
  },
  "settings.mail.user": {
    type: String,
    label: "Username"
  },
  "settings.mail.password": {
    type: String,
    label: "Password"
  },
  "settings.mail.host": {
    type: String,
    label: "Host"
  },
  "settings.mail.port": {
    type: String,
    label: "Port"
  },
  "settings.openexchangerates": {
    type: Object,
    optional: true
  },
  "settings.openexchangerates.appId": {
    type: String,
    label: "Open Exchange Rates App Id"
  },
  "settings.openexchangerates.refreshPeriod": {
    type: String,
    label: "Open Exchange Rates refresh period",
    defaultValue: "every 1 hour"
  },
  "settings.google": {
    type: Object,
    optional: true
  },
  "settings.google.clientId": {
    type: String,
    label: "Google Client Id"
  },
  "settings.google.apiKey": {
    type: String,
    label: "Google Api Key"
  },
  "settings.public": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.public.allowGuestCheckout": {
    type: Boolean,
    label: "Allow Guest Checkout",
    defaultValue: true
  },
  "settings.cart": {
    type: Object,
    defaultValue: {}
  },
  "settings.cart.cleanupDurationDays": {
    type: String,
    label: "Cleanup Schedule",
    defaultValue: "older than 3 days"
  }
});
registerSchema("CorePackageConfig", CorePackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"revisions.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/revisions.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Revisions: function () {
    return Revisions;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 4);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 5);
var Revisions = new SimpleSchema({
  "_id": {
    type: String,
    label: "Revision Id"
  },
  "workflow": {
    type: Workflow,
    optional: false,
    defaultValue: {}
  },
  "documentId": {
    type: String,
    label: "Reference Document Id"
  },
  "documentType": {
    type: String,
    label: "Document Type",
    defaultValue: "product",
    allowedValues: ["product", "image", "tag"]
  },
  "parentDocument": {
    type: String,
    optional: true
  },
  "documentData": {
    type: "object",
    blackbox: true
  },
  "changeType": {
    type: String,
    optional: true,
    allowedValues: ["insert", "update", "remove"]
  },
  "diff": {
    type: Array,
    optional: true
  },
  "diff.$": {
    type: Object,
    blackbox: true
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  },
  "publishAt": {
    type: Date,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Revisions", Revisions);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shipping.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/shipping.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;
module1.export({
  ShippoShippingMethod: function () {
    return ShippoShippingMethod;
  },
  ShippingMethod: function () {
    return ShippingMethod;
  },
  ShipmentQuote: function () {
    return ShipmentQuote;
  },
  ShipmentItem: function () {
    return ShipmentItem;
  },
  ShippingParcel: function () {
    return ShippingParcel;
  },
  ShippoShipment: function () {
    return ShippoShipment;
  },
  ShipmentQuotesQueryStatus: function () {
    return ShipmentQuotesQueryStatus;
  },
  Shipment: function () {
    return Shipment;
  },
  ShippoShippingProvider: function () {
    return ShippoShippingProvider;
  },
  ShippingProvider: function () {
    return ShippingProvider;
  },
  Shipping: function () {
    return Shipping;
  },
  ShippingPackageConfig: function () {
    return ShippingPackageConfig;
  }
});
var SimpleSchema;
module1.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module1.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module1.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module1.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var shopIdAutoValue, schemaIdAutoValue;
module1.watch(require("./helpers"), {
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  },
  schemaIdAutoValue: function (v) {
    schemaIdAutoValue = v;
  }
}, 4);
var Address;
module1.watch(require("./address"), {
  Address: function (v) {
    Address = v;
  }
}, 5);
var Invoice;
module1.watch(require("./payments"), {
  Invoice: function (v) {
    Invoice = v;
  }
}, 6);
var PackageConfig;
module1.watch(require("./registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 7);
var Workflow;
module1.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 8);
var ShippoShippingMethod = new SimpleSchema({
  serviceLevelToken: {
    type: String,
    optional: true
  },
  rateId: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShippoShippingMethod", ShippoShippingMethod);
/**
 * @name ShippingMethod
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id Shipment method Id
 * @property {String} name Method name
 * @property {String} label Public label
 * @property {String} group Group, allowed values: `Ground`, `Priority`, `One Day`, `Free`
 * @property {Number} cost optional
 * @property {Number} handling optional, default value: `0`
 * @property {Number} rate Rate
 * @property {Boolean} enabled default value: `false`
 * @property {Array} validRanges optional, Matching cart ranges
 * @property {Object} validRanges.$ optional
 * @property {Number} validRanges.begin optional
 * @property {Number} validRanges.end optional
 * @property {Array} validLocales optional
 * @property {Object} validLocales.$ optional
 * @property {String} validLocales.$.origination optional
 * @property {String} validLocales.$.destination optional
 * @property {Number} validLocales.$.deliveryBegin optional
 * @property {Number} validLocales.$.deliveryEnd optional
 * @property {String} carrier optional
 * @property {ShippoShippingMethod} settings optional
 */

var ShippingMethod = new SimpleSchema({
  "_id": {
    type: String,
    label: "Shipment Method Id",
    autoValue: schemaIdAutoValue
  },
  "name": {
    type: String,
    label: "Method Name",
    optional: true
  },
  "label": {
    type: String,
    label: "Public Label"
  },
  "group": {
    type: String,
    label: "Group",
    allowedValues: ["Ground", "Priority", "One Day", "Free"],
    optional: true
  },
  "cost": {
    type: Number,
    label: "Cost",
    optional: true
  },
  "handling": {
    type: Number,
    label: "Handling",
    optional: true,
    defaultValue: 0,
    min: 0
  },
  "rate": {
    type: Number,
    label: "Rate",
    min: 0
  },
  "enabled": {
    type: Boolean,
    label: "Enabled",
    defaultValue: false
  },
  "validRanges": {
    type: Array,
    optional: true,
    label: "Matching Cart Ranges"
  },
  "validRanges.$": {
    type: Object,
    optional: true
  },
  "validRanges.$.begin": {
    type: Number,
    label: "Begin",
    optional: true
  },
  "validRanges.$.end": {
    type: Number,
    label: "End",
    optional: true
  },
  "validLocales": {
    type: Array,
    optional: true,
    label: "Matching Locales"
  },
  "validLocales.$": {
    type: Object,
    optional: true
  },
  "validLocales.$.origination": {
    type: String,
    label: "From",
    optional: true
  },
  "validLocales.$.destination": {
    type: String,
    label: "To",
    optional: true
  },
  "validLocales.$.deliveryBegin": {
    type: SimpleSchema.Integer,
    label: "Shipping Est.",
    optional: true
  },
  "validLocales.$.deliveryEnd": {
    type: SimpleSchema.Integer,
    label: "Delivery Est.",
    optional: true
  },
  "carrier": {
    // kind of denormalizing, useful for having it in shipmentMethod( cart & order)
    type: String,
    // Alternatively we can make an extra Schema:ShipmentMethod, that inherits
    optional: true // ShippingMethod and add the optional carrier field

  },
  "settings": {
    type: ShippoShippingMethod,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShippingMethod", ShippingMethod);
/**
 * @name ShipmentQuote
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} carrier Name of carrier
 * @property {ShippingMethod} method ShippingMethod
 * @property {Number} rate default value: `0.00`
 */

var ShipmentQuote = new SimpleSchema({
  carrier: {
    type: String
  },
  method: {
    type: ShippingMethod
  },
  rate: {
    type: Number,
    defaultValue: 0.00
  },
  shopId: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShipmentQuote", ShipmentQuote);
/**
 * @name ShipmentItem
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary Populate with order.items that are added to a shipment
 * @property {String} _id Shipment Line Item optional
 * @property {String} productId required
 * @property {String} shopId Shipment Item ShopId optional
 * @property {Number} quantity required
 * @property {String} variantId required
 */

var ShipmentItem = new SimpleSchema({
  _id: {
    type: String,
    label: "Shipment Line Item",
    optional: true,
    autoValue: schemaIdAutoValue
  },
  productId: {
    type: String,
    index: 1
  },
  shopId: {
    type: String,
    index: 1,
    label: "Shipment Item ShopId",
    optional: true
  },
  quantity: {
    label: "Quantity",
    type: SimpleSchema.Integer,
    min: 0
  },
  variantId: {
    type: String
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShipmentItem", ShipmentItem);
/**
 * @name ShippingParcel
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} containers optional
 * @property {Number} length optional
 * @property {Number} width optional
 * @property {Number} height optional
 * @property {Number} weight optional
 */

var ShippingParcel = new SimpleSchema({
  containers: {
    type: String,
    optional: true
  },
  length: {
    type: Number,
    optional: true
  },
  width: {
    type: Number,
    optional: true
  },
  height: {
    type: Number,
    optional: true
  },
  weight: {
    type: Number,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShippingParcel", ShippingParcel);
/**
 * @name ShippoShipment
 * @summary Specific properties of Shipment for use with Shippo. We don't use
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} transactionId optional
 * @property {String} trackingStatusStatus optional Tracking Status's status
 * @property {String} trackingStatusDate optional
 */

var ShippoShipment = new SimpleSchema({
  transactionId: {
    type: String,
    optional: true
  },
  trackingStatusStatus: {
    // cause tracking_status.status
    type: String,
    optional: true
  },
  trackingStatusDate: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShippoShipment", ShippoShipment);
/**
 * @name ShipmentQuotesQueryStatusUsed
 * @todo Should requestStatus be required or not?
 * @memberof schemas
 * @type {SimpleSchema}
 * @summary Status of a query/consumption of a shipping provider's API (e.g Shippo) for shipping quotations.
 * @description Shipping quotations are the costs from different shipping methods like Fedex, DHL etc of
 * shipping one or more items to a particular place in a given amount of time.)
 * @property {String} requestStatus optional, default value: `noRequestsYet`
 * @property {String} shippingProvider optional
 * @property {Number} numOfShippingMethodsFound optional
 * @property {String} message optional
 */

var ShipmentQuotesQueryStatus = new SimpleSchema({
  requestStatus: {
    type: String,
    optional: true,
    defaultValue: "noRequestsYet"
  },
  shippingProvider: {
    type: String,
    optional: true
  },
  numOfShippingMethodsFound: {
    type: SimpleSchema.Integer,
    optional: true
  },
  message: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShipmentQuotesQueryStatus", ShipmentQuotesQueryStatus);
/**
 * @name Shipment
 * @summary Used for cart/order shipment tracking
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id Shipment ID
 * @property {String} shopId required
 * @property {String} paymentId Payment ID
 * @property {Address} address optional
 * @property {ShippingMethod} shipmentMethod optional
 * @property {ShipmentQuote[]} shipmentQuotes optional
 * @property {ShipmentQuotesQueryStatus} shipmentQuotesQueryStatus optional
 * @property {String} tracking optional
 * @property {ShippingParcel} parcel optional
 * @property {ShipmentItem[]} items optional
 * @property {Workflow} workflow optional
 * @property {Invoice} invoice optional
 * @property {Object[]} transactions optional
 * @property {String} shippingLabelUrl For printable Shipping label
 * @property {String} customsLabelUrl For customs printable label
 * @property {ShippoShipment} shippo For Shippo specific properties
 */

var Shipment = new SimpleSchema({
  "_id": {
    type: String,
    label: "Shipment Id",
    autoValue: schemaIdAutoValue
  },
  "shopId": {
    type: String
  },
  "paymentId": {
    type: String,
    label: "Payment Id",
    optional: true
  },
  "address": {
    type: Address,
    optional: true
  },
  "shipmentMethod": {
    type: ShippingMethod,
    optional: true
  },
  "shipmentQuotes": {
    type: Array,
    optional: true
  },
  "shipmentQuotes.$": {
    type: ShipmentQuote,
    optional: true
  },
  "shipmentQuotesQueryStatus": {
    type: ShipmentQuotesQueryStatus,
    optional: true,
    defaultValue: {}
  },
  "tracking": {
    type: String,
    optional: true
  },
  "parcel": {
    type: ShippingParcel,
    optional: true
  },
  "items": {
    type: Array,
    optional: true
  },
  "items.$": {
    type: ShipmentItem,
    optional: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  },
  "invoice": {
    type: Invoice,
    optional: true
  },
  "transactions": {
    type: Array,
    optional: true
  },
  "transactions.$": {
    type: Object,
    optional: true,
    blackbox: true
  },
  "shippingLabelUrl": {
    type: String,
    optional: true
  },
  "customsLabelUrl": {
    type: String,
    optional: true
  },
  "shippo": {
    type: ShippoShipment,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Shipment", Shipment);
/**
 * @name ShippoShippingProvider Schema
 * @summary Specific properties for use with Shippo.
 * @description We don't use ShippingProvider service* fields because
 * Shippo is on level higher service than simple carrier's ,e.g Fedex api.
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} carrierAccountId optional
 */

var ShippoShippingProvider = new SimpleSchema({
  carrierAccountId: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShippoShippingProvider", ShippoShippingProvider);
/**
 * @name ShippingProvider
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id optional
 * @property {String} name optional
 * @property {String} label optional
 * @property {Boolean} enabled optional, default value: `true`
 * @property {String} serviceAuth optional
 * @property {String} serviceSecret optional
 * @property {String} serviceUrl optional
 * @property {ShippoShippingProvider} shippoProvider optional
 */

var ShippingProvider = new SimpleSchema({
  _id: {
    type: String,
    label: "Provider Id",
    optional: true,
    autoValue: schemaIdAutoValue
  },
  name: {
    type: String,
    label: "Service Code",
    optional: true
  },
  label: {
    type: String,
    label: "Public Label"
  },
  enabled: {
    type: Boolean,
    defaultValue: true
  },
  serviceAuth: {
    type: String,
    label: "Auth",
    optional: true
  },
  serviceSecret: {
    type: String,
    label: "Secret",
    optional: true
  },
  serviceUrl: {
    type: String,
    label: "Service URL",
    optional: true
  },
  shippoProvider: {
    type: ShippoShippingProvider,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShippingProvider", ShippingProvider);
/**
 * @name Shipping
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id optional
 * @property {String} shopId required
 * @property {String} name optional
 * @property {ShippingProvider} provider optional
 * @property {ShippingMethod[]} methods optional
 * @property {ShipmentQuote[]} shipmentQuotes optional
 */

var Shipping = new SimpleSchema({
  "_id": {
    type: String,
    label: "Service Id",
    optional: true
  },
  "shopId": {
    type: String,
    index: 1,
    autoValue: shopIdAutoValue,
    label: "Shipping ShopId"
  },
  "name": {
    type: String,
    label: "Service Name",
    optional: true,
    index: 1
  },
  "provider": {
    type: ShippingProvider,
    label: "Shipping Provider"
  },
  "methods": {
    type: Array,
    optional: true,
    label: "Shipping Methods"
  },
  "methods.$": {
    type: ShippingMethod
  },
  "shipmentQuotes": {
    type: Array,
    optional: true,
    label: "Quoted Methods"
  },
  "shipmentQuotes.$": {
    type: ShipmentQuote
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Shipping", Shipping);
/**
 * @name ShippingPackage
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} settings.name default value: `Flat Rate Service`
 */

var ShippingPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.name": {
    type: String,
    defaultValue: "Flat Rate Service"
  }
});
registerSchema("ShippingPackageConfig", ShippingPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"shops.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/shops.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  CustomEmailSettings: function () {
    return CustomEmailSettings;
  },
  Currency: function () {
    return Currency;
  },
  Locale: function () {
    return Locale;
  },
  Languages: function () {
    return Languages;
  },
  ShopTheme: function () {
    return ShopTheme;
  },
  BrandAsset: function () {
    return BrandAsset;
  },
  Shop: function () {
    return Shop;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var getSlug;
module.watch(require("../../api"), {
  getSlug: function (v) {
    getSlug = v;
  }
}, 4);
var Email;
module.watch(require("./accounts"), {
  Email: function (v) {
    Email = v;
  }
}, 5);
var Address;
module.watch(require("./address"), {
  Address: function (v) {
    Address = v;
  }
}, 6);
var createdAtAutoValue, updatedAtAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  updatedAtAutoValue: function (v) {
    updatedAtAutoValue = v;
  }
}, 7);
var Layout;
module.watch(require("./layouts"), {
  Layout: function (v) {
    Layout = v;
  }
}, 8);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 9);
var Workflow;
module.watch(require("./workflow"), {
  Workflow: function (v) {
    Workflow = v;
  }
}, 10);
var CustomEmailSettings = new SimpleSchema({
  service: {
    type: String,
    optional: true
  },
  username: {
    type: String,
    optional: true
  },
  password: {
    type: String,
    optional: true
  },
  host: {
    type: String,
    optional: true
  },
  port: {
    type: SimpleSchema.Integer,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("CustomEmailSettings", CustomEmailSettings);
/**
 * @name Currency
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} symbol default value: `$`
 * @property {String} format default value: `%s%v`
 * @property {Number} scale optional, default value: `2`
 * @property {String} decimal optional, default value: `.`
 * @property {String} thousand optional, default value: `,`
 * @property {Number} rate optional
 */

var Currency = new SimpleSchema({
  symbol: {
    type: String,
    defaultValue: "$"
  },
  format: {
    type: String,
    defaultValue: "%s%v"
  },
  scale: {
    type: SimpleSchema.Integer,
    defaultValue: 2,
    optional: true
  },
  decimal: {
    type: String,
    defaultValue: ".",
    optional: true
  },
  thousand: {
    type: String,
    defaultValue: ",",
    optional: true
  },
  rate: {
    type: Number,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Currency", Currency);
/**
 * @name Locale
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {Object} continents blackbox
 * @property {Object} countries blackbox
 */

var Locale = new SimpleSchema({
  continents: {
    type: Object,
    blackbox: true
  },
  countries: {
    type: Object,
    blackbox: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Locale", Locale);
/**
 * @name Languages
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} label required
 * @property {String} i18n required
 * @property {Boolean} enabled, default value: `true`
 */

var Languages = new SimpleSchema({
  label: {
    type: String
  },
  i18n: {
    type: String
  },
  enabled: {
    type: Boolean,
    defaultValue: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Languages", Languages);
/**
 * @name ShopTheme
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} themeId required
 * @property {String} styles optional
 */

var ShopTheme = new SimpleSchema({
  themeId: {
    type: String
  },
  styles: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("ShopTheme", ShopTheme);
/**
 * @name BrandAsset
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} mediaId optional
 * @property {String} type optional
 */

var BrandAsset = new SimpleSchema({
  mediaId: {
    type: String,
    optional: true
  },
  type: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("BrandAsset", BrandAsset);
/**
 * @name MerchantShop
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id Shop label
 * @property {String} slug Shop slug
 * @property {String} name Shop name
 */

var MerchantShop = new SimpleSchema({
  _id: {
    type: String,
    label: "Shop Label"
  },
  slug: {
    type: String,
    label: "Shop Slug"
  },
  name: {
    type: String,
    label: "Shop Name"
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("MerchantShop", MerchantShop);
/**
 * @name Shop
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} _id optional
 * @property {String} slug optional, auto-generated
 * @property {MerchantShop[]} merchantShops optional
 * @property {String} shopType required, default value: `merchant`, accepted values: `primary`, `merchant`, `affiliate`
 * @property {Boolean} active required, default value: ` true`
 * @property {String} status default value: `active`
 * @property {String} name
 * @property {String} description optional
 * @property {String} keywords optional
 * @property {Address[]} addressBook optional
 * @property {String[]} domains default value: `[localhost]`
 * @property {Email[]} emails optional
 * @property {String} defaultPaymentMethod required, default value: `none`
 * @property {String} currency default value: `USD`
 * @property {Object} currencies optional, blackbox, `Currency` schema
 * @property {Locale} locales required
 * @property {String} language default value: `en`
 * @property {Languages[]} languages optional
 * @property {String} public optional
 * @property {String} timezone default value: `US/Pacific`
 * @property {String} baseUOL Base UOL (Unit of Length), default value: `in`, lowercased by default per style
 * @property {Object[]} unitsOfLength optional, default value: `in`
 * @property {String} unitsOfLength.$.uol  default value: `in`
 * @property {String} unitsOfLength.$.label default value: `Inches`
 * @property {Boolean} unitsOfLength.$.default default value: `false`
 * @property {String} baseUOM Base UOM (Unit of Measure), default value: `oz`, lowercased by default per style
 * @property {Object[]} unitsOfMeasure optional
 * @property {String} unitsOfMeasure.$.uom default value: `oz`
 * @property {String} unitsOfMeasure.$.label default value: `Ounces`
 * @property {Boolean} unitsOfMeasure.$.default default value: `false`
 * @property {Metafield[]} metafields optional
 * @property {String[]} defaultSellerRoles default values: `["owner", "admin", "seller", "guest", "manage-users", "orders", "account/profile", "product", "createProduct", "tag", "index", "cart/checkout", "cart/completed"]`
 * @property {Layout[]} layout optional
 * @property {ShopTheme} theme optional
 * @property {BrandAsset[]} brandAssets optional
 * @property {String} appVersion optional
 * @property {Date} createdAt optional
 * @property {Date} updatedAt optional
 * @property {Object[]} paymentMethods blackbox, default value: `[]`
 * @property {Workflow} workflow optional
 */

var Shop = new SimpleSchema({
  "_id": {
    type: String,
    optional: true
  },
  "slug": {
    type: String,
    optional: true,
    unique: true,
    autoValue: function () {
      var slug = getSlug(this.value);

      if (!slug && this.siblingField("name").value) {
        slug = getSlug(this.siblingField("name").value);
      }

      if (this.isInsert) {
        return slug;
      } else if (this.isUpsert) {
        return {
          $setOnInsert: slug
        };
      }
    }
  },
  "merchantShops": {
    type: Array,
    optional: true
  },
  "merchantShops.$": {
    type: MerchantShop
  },
  "shopType": {
    type: String,
    // Default value is merchant because we seed the first created shop with "primary"
    // In a marketplace, there should only be one "primary" shop
    defaultValue: "merchant",
    // "primary", "merchant", "affiliate",
    index: true
  },
  "active": {
    type: Boolean,
    defaultValue: true,
    index: true
  },
  // not sure what this is used for. Prefer the boolean above for indexing
  "status": {
    type: String,
    defaultValue: "active"
  },
  "name": {
    type: String,
    index: 1
  },
  "description": {
    type: String,
    optional: true
  },
  "keywords": {
    type: String,
    optional: true
  },
  "addressBook": {
    type: Array,
    optional: true
  },
  "addressBook.$": {
    type: Address
  },
  "domains": {
    type: Array,
    defaultValue: ["localhost"],
    index: 1
  },
  "domains.$": String,
  "emails": {
    type: Array,
    optional: true
  },
  "emails.$": {
    type: Email
  },
  "defaultPaymentMethod": {
    label: "Default Payment Method",
    type: String,
    defaultValue: "none"
  },
  "currency": {
    label: "Base Currency",
    type: String,
    defaultValue: "USD"
  },
  "currencies": {
    type: Object,
    // Schemas.Currency
    blackbox: true,
    optional: true
  },
  "locales": {
    type: Locale
  },
  "language": {
    label: "Base Language",
    type: String,
    defaultValue: "en"
  },
  "languages": {
    type: Array,
    optional: true
  },
  "languages.$": {
    type: Languages
  },
  "public": {
    type: String,
    optional: true
  },
  "timezone": {
    label: "Timezone",
    type: String,
    defaultValue: "US/Pacific"
  },
  "baseUOL": {
    type: String,
    optional: true,
    defaultValue: "in",
    label: "Base Unit of Length"
  },
  "unitsOfLength": {
    type: Array,
    optional: true
  },
  "unitsOfLength.$": Object,
  "unitsOfLength.$.uol": {
    type: String,
    optional: true,
    defaultValue: "in"
  },
  "unitsOfLength.$.label": {
    type: String,
    optional: true,
    defaultValue: "Inches"
  },
  "unitsOfLength.$.default": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "baseUOM": {
    type: String,
    optional: true,
    defaultValue: "oz",
    label: "Base Unit of Measure"
  },
  "unitsOfMeasure": {
    type: Array,
    optional: true
  },
  "unitsOfMeasure.$": Object,
  "unitsOfMeasure.$.uom": {
    type: String,
    optional: true,
    defaultValue: "oz"
  },
  "unitsOfMeasure.$.label": {
    type: String,
    optional: true,
    defaultValue: "Ounces"
  },
  "unitsOfMeasure.$.default": {
    type: Boolean,
    optional: true,
    defaultValue: false
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": {
    type: Metafield
  },
  "defaultSellerRoles": {
    type: Array,
    defaultValue: ["owner", "admin", "seller", "guest", "manage-users", "orders", "account/profile", "product", "createProduct", "tag", "index", "cart/checkout", "cart/completed"]
  },
  "defaultSellerRoles.$": {
    type: String
  },
  "layout": {
    type: Array,
    optional: true
  },
  "layout.$": {
    type: Layout
  },
  "theme": {
    type: ShopTheme,
    optional: true
  },
  "brandAssets": {
    type: Array,
    optional: true
  },
  "brandAssets.$": {
    type: BrandAsset
  },
  "appVersion": {
    type: String,
    optional: true
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue,
    optional: true
  },
  "updatedAt": {
    type: Date,
    autoValue: updatedAtAutoValue,
    optional: true
  },
  "paymentMethods": {
    type: Array,
    defaultValue: []
  },
  "paymentMethods.$": {
    type: Object,
    blackbox: true
  },
  "workflow": {
    type: Workflow,
    optional: true,
    defaultValue: {}
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Shop", Shop);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sms.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/sms.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Sms: function () {
    return Sms;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Sms = new SimpleSchema({
  apiKey: {
    type: String,
    optional: true
  },
  apiToken: {
    type: String,
    optional: true
  },
  shopId: {
    type: String,
    optional: true
  },
  smsPhone: {
    type: String,
    optional: true
  },
  smsProvider: {
    type: String,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Sms", Sms);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"social.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/social.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  SocialProvider: function () {
    return SocialProvider;
  },
  SocialPackageConfig: function () {
    return SocialPackageConfig;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var PackageConfig;
module.watch(require("./registry"), {
  PackageConfig: function (v) {
    PackageConfig = v;
  }
}, 4);
var SocialProvider = new SimpleSchema({
  profilePage: {
    type: String,
    regEx: SimpleSchema.RegEx.Url,
    label: "Profile Page",
    optional: true
  },
  enabled: {
    type: Boolean,
    label: "Enabled",
    defaultValue: false,
    optional: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("SocialProvider", SocialProvider);
/**
 * @name SocialPackageConfig
 * @memberof schemas
 * @type {SimpleSchema}
 * @extends {PackageConfig}
 * @property {Object} settings.public optional
 * @property {Object} settings.public.apps optional
 * @property {SocialProvider} settings.public.apps.facebook  optional, Facebook
 * @property {String} settings.public.apps.facebook.appId optional, Facebook App ID
 * @property {String} settings.public.apps.facebook.appSecret optional, Facebook App Secret
 * @property {SocialProvider} settings.public.apps.twitter optional, Twitter
 * @property {String} settings.public.apps.twitter.username optional, Twitter username
 * @property {SocialProvider} settings.public.apps.pinterest optional, Pinterest
 * @property {SocialProvider} settings.public.apps.googleplus optional, Google+
 */

var SocialPackageConfig = PackageConfig.clone().extend({
  // Remove blackbox: true from settings obj
  "settings": {
    type: Object,
    optional: true,
    blackbox: false,
    defaultValue: {}
  },
  "settings.public": {
    type: Object,
    optional: true,
    defaultValue: {}
  },
  "settings.public.apps": {
    type: Object,
    label: "Social Settings",
    optional: true,
    defaultValue: {}
  },
  "settings.public.apps.facebook": {
    type: SocialProvider,
    optional: true,
    defaultValue: {}
  },
  "settings.public.apps.facebook.appId": {
    type: String,
    regEx: /\d+/,
    label: "App Id",
    optional: true
  },
  "settings.public.apps.facebook.appSecret": {
    type: String,
    regEx: /[\da-z]+/,
    label: "App Secret",
    optional: true
  },
  "settings.public.apps.twitter": {
    type: SocialProvider,
    optional: true,
    defaultValue: {}
  },
  "settings.public.apps.twitter.username": {
    type: String,
    label: "Username",
    optional: true
  },
  "settings.public.apps.pinterest": {
    type: SocialProvider,
    optional: true,
    defaultValue: {}
  },
  "settings.public.apps.googleplus": {
    type: SocialProvider,
    label: "Google+",
    optional: true,
    defaultValue: {}
  }
});
registerSchema("SocialPackageConfig", SocialPackageConfig);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"tags.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/tags.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Tag: function () {
    return Tag;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var createdAtAutoValue, shopIdAutoValue;
module.watch(require("./helpers"), {
  createdAtAutoValue: function (v) {
    createdAtAutoValue = v;
  },
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  }
}, 4);
var Metafield;
module.watch(require("./metafield"), {
  Metafield: function (v) {
    Metafield = v;
  }
}, 5);
var Tag = new SimpleSchema({
  "_id": {
    type: String,
    optional: true
  },
  "name": {
    type: String,
    index: 1
  },
  "slug": String,
  "type": {
    type: String,
    optional: true
  },
  "metafields": {
    type: Array,
    optional: true
  },
  "metafields.$": Metafield,
  "position": {
    type: SimpleSchema.Integer,
    optional: true
  },
  "relatedTagIds": {
    type: Array,
    optional: true,
    index: 1
  },
  "relatedTagIds.$": String,
  "isDeleted": {
    type: Boolean,
    defaultValue: false
  },
  "isTopLevel": Boolean,
  "isVisible": {
    type: Boolean,
    defaultValue: true
  },
  "groups": {
    type: Array,
    // groupIds that this tag belongs to
    optional: true,
    defaultValue: []
  },
  "groups.$": String,
  "shopId": {
    type: String,
    index: 1,
    autoValue: shopIdAutoValue,
    label: "Tag shopId"
  },
  "createdAt": {
    type: Date,
    autoValue: createdAtAutoValue
  },
  "updatedAt": {
    type: Date,
    autoValue: function () {
      return new Date();
    }
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Tag", Tag);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"templates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/templates.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  ReactLayout: function () {
    return ReactLayout;
  },
  Template: function () {
    return Template;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var shopIdAutoValue;
module.watch(require("./helpers"), {
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  }
}, 4);

/**
 * @name sharedFields
 * @memberof schemas
 * @type {SimpleSchema}
 * @property {String} shopId Template ShopId
 * @property {String} name required
 * @property {String} title optional
 * @property {Number} priority optional, default value: 1
 * @property {Boolean} enabled default value: true
 * @property {String} route optional
 * @property {String} type default value: `template`
 * @property {String} provides default value: `template`
 * @property {String} block optional
 * @property {Object} defaultData optional, blackbox
 * @property {String} parser required
 * @property {String} language optional, default value: `en`
 * @property {String} source optional
 */
var sharedFields = {
  shopId: {
    type: String,
    index: 1,
    autoValue: shopIdAutoValue,
    label: "Template ShopId"
  },
  name: {
    type: String
  },
  title: {
    type: String,
    optional: true
  },
  priority: {
    type: SimpleSchema.Integer,
    optional: true,
    defaultValue: 1
  },
  enabled: {
    type: Boolean,
    defaultValue: true
  },
  route: {
    type: String,
    optional: true
  },
  type: {
    type: String,
    defaultValue: "template"
  },
  provides: {
    type: String,
    defaultValue: "template"
  },
  block: {
    type: String,
    optional: true
  },
  defaultData: {
    type: Object,
    blackbox: true,
    optional: true
  },
  parser: {
    type: String
  },
  language: {
    type: String,
    optional: true,
    defaultValue: "en"
  },
  source: {
    type: String,
    optional: true
  }
};
/**
 * @name ReactLayout
 * @memberof schemas
 * @summary Extends fields from sharedFields
 * @type {SimpleSchema}
 * @extends {sharedFields}
 * @property {String[]} templateFor optional
 * @property {Object[]} template optional, blackbox
 */

var ReactLayout = new SimpleSchema((0, _objectSpread2.default)({}, sharedFields, {
  "templateFor": {
    type: Array,
    optional: true
  },
  "templateFor.$": String,
  "template": {
    type: Array,
    optional: true
  },
  "template.$": {
    type: Object,
    blackbox: true
  }
}), {
  check: check,
  tracker: Tracker
});
registerSchema("ReactLayout", ReactLayout);
/**
 * @name Template
 * @memberof schemas
 * @summary Extends fields from sharedFields
 * @type {SimpleSchema}
 * @extends {sharedFields}
 * @property {Object[]} template optional, blackbox
 */

var Template = new SimpleSchema((0, _objectSpread2.default)({}, sharedFields, {
  template: {
    type: String,
    optional: true
  }
}), {
  check: check,
  tracker: Tracker
});
registerSchema("Template", Template);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"translations.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/translations.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Translation: function () {
    return Translation;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var shopIdAutoValue;
module.watch(require("./helpers"), {
  shopIdAutoValue: function (v) {
    shopIdAutoValue = v;
  }
}, 4);
var Translation = new SimpleSchema({
  shopId: {
    type: String,
    index: 1,
    autoValue: shopIdAutoValue,
    label: "Translation ShopId"
  },
  language: {
    type: String
  },
  i18n: {
    type: String,
    index: 1
  },
  ns: {
    type: String,
    label: "Namespace"
  },
  translation: {
    type: Object,
    blackbox: true
  }
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Translation", Translation);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"workflow.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/schemas/workflow.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Workflow: function () {
    return Workflow;
  }
});
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 0);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var registerSchema;
module.watch(require("@reactioncommerce/schemas"), {
  registerSchema: function (v) {
    registerSchema = v;
  }
}, 3);
var Workflow = new SimpleSchema({
  "status": {
    type: String,
    defaultValue: "new",
    index: 1
  },
  "workflow": {
    type: Array,
    optional: true
  },
  "workflow.$": String
}, {
  check: check,
  tracker: Tracker
});
registerSchema("Workflow", Workflow);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"transform":{"cartOrder.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/transform/cartOrder.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;
module1.export({
  cartOrderTransform: function () {
    return cartOrderTransform;
  }
});

var _sortBy;

module1.watch(require("lodash/sortBy"), {
  "default": function (v) {
    _sortBy = v;
  }
}, 0);

var _values;

module1.watch(require("lodash/values"), {
  "default": function (v) {
    _values = v;
  }
}, 1);
var accounting;
module1.watch(require("accounting-js"), {
  "default": function (v) {
    accounting = v;
  }
}, 2);
var Shops;
module1.watch(require("./.."), {
  Shops: function (v) {
    Shops = v;
  }
}, 3);

/**
 * getSummary
 * @private
 * @summary iterates over cart items with computations
 * @param {Array} items - cart.items array
 * @param {Array} prop - path to item property represented by array
 * @param {Array} [prop2] - path to another item property represented by array
 * @param {String} [shopId] - shopId
 * @return {Number} - computations result
 */
function getSummary(items, prop, prop2, shopId) {
  try {
    if (Array.isArray(items)) {
      return items.reduce(function (sum, item) {
        if (prop2) {
          if (shopId) {
            if (shopId === item.shopId) {
              // if we're looking for a specific shop's items and this item does match
              // if prop2 is an empty array
              if (!prop2.length) {
                return sum + (prop.length === 1 ? item[prop[0]] : item[prop[0]][prop[1]]);
              }

              return sum + item[prop[0]] * (prop2.length === 1 ? item[prop2[0]] : item[prop2[0]][prop2[1]]);
            } // If we're looking for a specific shop's items and this item doesn't match


            return sum;
          } // No shopId param
          // S + a * b, where b could be b1 or b2


          return sum + item[prop[0]] * (prop2.length === 1 ? item[prop2[0]] : item[prop2[0]][prop2[1]]);
        } // No prop2 param
        // S + b, where b could be b1 or b2


        return sum + (prop.length === 1 ? item[prop[0]] : item[prop[0]][prop[1]]);
      }, 0);
    }
  } catch (e) {
    // If data not prepared we should send a number to avoid exception with
    // `toFixed`. This could happens if user stuck on `completed` checkout stage
    // by some reason.
    return 0;
  }

  return 0;
}
/**
 * Reaction transform methods on Collections
 * @file Use transform methods to return Cart and Order calculated values: count, subTotal, shipping, taxes, total.
 * Use these methods on Cart and Orders in templates, `{{cart.getCount}}` and in code, `Cart.findOne().getTotal()`.
 * These use Meteor Collection {@link http://docs.meteor.com/api/collections.html#Mongo-Collection transforms}.
 * @module cartOrderTransform
 */


var cartOrderTransform = {
  /**
   * @summary Return the total quantity on the order
   * @method getCount
   * @example {cart ? cart.getCount() : 0}
   * @returns {Number}  Total quantity of items on the order
   */
  getCount: function () {
    return getSummary(this.items, ["quantity"]);
  },

  /**
   * @summary Return the total price of shipping/handling on the order
   * @method getShippingTotal
   * @returns {Number} Total price of shipping/handling on the order
   */
  getShippingTotal: function () {
    // loop through the cart.shipping, sum shipments.
    var rate = getSummary(this.shipping, ["shipmentMethod", "rate"]);
    var handling = getSummary(this.shipping, ["shipmentMethod", "handling"]);
    var shipping = handling + rate || 0;
    return accounting.toFixed(shipping, 2);
  },

  /**
   * @summary Get the total price of shipping, broken down by shop
   * @method getShippingTotalByShop
   * @returns {{Object}} - Total price of shipping, broken down by shop
   */
  getShippingTotalByShop: function () {
    var _this = this;

    return this.shipping.reduce(function (uniqueShopShippingTotals, shippingRec) {
      if (!uniqueShopShippingTotals[shippingRec.shopId]) {
        var rate = getSummary(_this.shipping, ["shipmentMethod", "rate"], [], shippingRec.shopId);
        var handling = getSummary(_this.shipping, ["shipmentMethod", "handling"], [], shippingRec.shopId);
        var shipping = handling + rate || 0;
        uniqueShopShippingTotals[shippingRec.shopId] = accounting.toFixed(shipping, 2);
        return uniqueShopShippingTotals;
      }

      return uniqueShopShippingTotals;
    }, {});
  },

  /**
   * @summary Return the total price of goods on an order
   * @method getSubTotal
   * @returns {Number} Total price of goods for the order
   */
  getSubTotal: function () {
    var subTotal = getSummary(this.items, ["quantity"], ["variants", "price"]);
    return accounting.toFixed(subTotal, 2);
  },

  /**
   * @summary Aggregates the subtotals by shopId
   * @method getSubtotalByShop
   * @return {object} Object with a key for each shopId in the cart/order where the value is the subtotal for that shop
   */
  getSubtotalByShop: function () {
    var _this2 = this;

    return this.items.reduce(function (uniqueShopSubTotals, item) {
      if (!uniqueShopSubTotals[item.shopId]) {
        var subTotal = getSummary(_this2.items, ["quantity"], ["variants", "price"], item.shopId);
        uniqueShopSubTotals[item.shopId] = accounting.toFixed(subTotal, 2);
        return uniqueShopSubTotals;
      }

      return uniqueShopSubTotals;
    }, {});
  },

  /**
   * @summary Total taxes for order
   * @method getTaxTotal
   * @returns {Number} Total price of taxes for an order
   */
  getTaxTotal: function () {
    // taxes are calculated in a Cart.after.update hooks
    // the tax value stored with the cart/order is the effective tax rate
    // calculated by line items
    // in the imports/core/taxes plugin
    var tax = this.tax || 0;
    var subTotal = parseFloat(this.getSubTotal());
    var taxTotal = subTotal * tax;
    return accounting.toFixed(taxTotal, 2);
  },

  /**
   * @summary Aggregates the taxes by shopId
   * @method getTaxesByShop
   * @return {Object} Object with a key for each shopId in cart/order where the value is the tax total for that shop
   */
  getTaxesByShop: function () {
    var _this3 = this;

    var subtotals = this.getSubtotalByShop();
    var taxRates = this.taxRatesByShop;
    return Object.keys(subtotals).reduce(function (shopTaxTotals, shopId) {
      if (!shopTaxTotals[shopId]) {
        var shopSubtotal = parseFloat(subtotals[shopId]); // In case of taxAPI's tax rate is stored in tax.

        var shopTaxRate = taxRates && taxRates[shopId] || _this3.tax || 0;
        var shopTaxTotal = shopSubtotal * shopTaxRate;
        shopTaxTotals[shopId] = accounting.toFixed(shopTaxTotal, 2);
      }

      return shopTaxTotals;
    }, {});
  },

  /**
   * @summary Discount for cart/order.
   * @description Grabs discounts from the invoice records if they exist, otherwise from this.discounts
   * @example const cartTaxesByShop = cart.getTaxesByShop();
   * @method getDiscounts
   * @return {Number} Total value of discounts
   */
  getDiscounts: function () {
    var orderDiscounts = 0;
    orderDiscounts = this.billing.reduce(function (acc, item) {
      if (item.invoice) {
        return acc + parseFloat(item.invoice.discounts);
      }

      return acc;
    }, 0);
    var cartDiscount = parseFloat(this.discount) || 0;
    var discount = orderDiscounts || cartDiscount || 0;
    return accounting.toFixed(discount, 2);
  },

  /**
   * @summary Discounts by Shop
   * @method getDiscountsByShop
   * @returns {object} - An object where the key is a shopId and the value is the discount for that shop
   */
  getDiscountsByShop: function () {
    var discountsByShop = {};

    if (this.billing && this.billing[0].invoice) {
      // check if we have the invoice object on the billing records
      for (var _iterator = this.billing, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _billingRecord = _ref;
        discountsByShop[_billingRecord.shopId] = accounting.toFixed(_billingRecord.invoice.discounts);
      }
    }

    return discountsByShop;
  },

  /**
   * @summary Total for Order
   * @method getTotal
   * @return {Number} Total for order
   */
  getTotal: function () {
    var subTotal = parseFloat(this.getSubTotal());
    var shipping = parseFloat(this.getShippingTotal());
    var taxes = parseFloat(this.getTaxTotal());
    var discount = parseFloat(this.getDiscounts());
    var discountTotal = Math.max(0, subTotal - discount);
    var total = discountTotal + shipping + taxes;
    return accounting.toFixed(total, 2);
  },

  /**
   * @summary Aggregates the cart/order total by shopId
   * @method getTotalByShop
   * @return {object} An object with a key for each shopId in the cart/order where the value is the total for that shop
   */
  getTotalByShop: function () {
    var _this4 = this;

    var subtotals = this.getSubtotalByShop();
    var taxes = this.getTaxesByShop();
    var shippingTotalByShop = this.getShippingTotalByShop(); // no discounts right now because that will need to support multi-shop
    // TODO: Build out shop-by-shop discounts and permit discounts to reduce application fee

    var shopsInCart = Object.keys(subtotals);
    return Object.keys(subtotals).reduce(function (shopTotals, shopId) {
      if (!shopTotals[shopId]) {
        var shopSubtotal = parseFloat(subtotals[shopId]); // pending the implementation of shop-by-shop discounts, we allow discounts to apply only on single shop carts

        if (shopsInCart.length === 1) {
          var discount = parseFloat(_this4.getDiscounts());
          shopSubtotal = parseFloat(subtotals[shopId]) - discount;
        }

        var shopTaxes = parseFloat(taxes[shopId]);
        var shipping = parseFloat(shippingTotalByShop[shopId]);
        var shopTotal = shopSubtotal + shopTaxes + shipping;
        shopTotals[shopId] = accounting.toFixed(shopTotal, 2);
      }

      return shopTotals;
    }, {});
  },

  /**
   * @summary Cart items organized by shopId
   * @method getItemsByShop
   * @example const cartTotals = cart.getTotalByShop();
   * @return {Object} Dict of shopIds with an array of items from that shop that are present in the cart/order
   */
  getItemsByShop: function () {
    if (this.items) {
      return this.items.reduce(function (itemsByShop, item) {
        if (!itemsByShop[item.shopId]) {
          itemsByShop[item.shopId] = [item];
        } else {
          itemsByShop[item.shopId].push(item);
        }

        return itemsByShop;
      }, {});
    }

    return {};
  },

  /**
   * @summary Returns an array of payment methods, normalized
   * @method getPaymentMethods
   * @returns {Array} Array of Payment Method objects
   */
  getPaymentMethods: function () {
    var billingMethods = this.billing.map(function (method) {
      return method.paymentMethod;
    });
    var methodObjects = billingMethods.map(function (method) {
      var paymentMethodObject = {
        storedCard: method.storedCard,
        processor: method.processor,
        mode: method.mode,
        transactionId: method.transactionId,
        amount: method.amount,
        method: method.method
      };
      return paymentMethodObject;
    });
    return methodObjects;
  },

  /**
   * @summary Return an array of payment methods for display removing duplicates
   * @method getUniquePaymentMethods
   * @returns {object} - An object containing the payment methods used on this order excluding duplicates
   */
  getUniquePaymentMethods: function () {
    var billingMethods = this.billing.map(function (method) {
      return method.paymentMethod;
    });
    var uniqueMethods = {};

    for (var _iterator2 = billingMethods, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _billingMethod = _ref2;
      var key = "" + _billingMethod.storedCard + _billingMethod.processor + _billingMethod.method;

      if (!uniqueMethods[key]) {
        uniqueMethods[key] = {
          storedCard: _billingMethod.storedCard,
          processor: _billingMethod.processor,
          method: _billingMethod.method,
          key: key
        };
      }
    }

    var uniqueValueArray = _values(uniqueMethods);

    return uniqueValueArray;
  },

  /**
   * @summary Create an object that contains a summary for each shop
   * @method getShopSummary
   * @return {Object}  An object with a key for each shopId, and name + summary data for each
   */
  getShopSummary: function () {
    // massage items into an object by Shop
    var taxesByShop = this.getTaxesByShop();
    var subTotalsByShop = this.getSubtotalByShop();
    var shippingByShop = this.getShippingTotalByShop();
    var shipping = this.shipping;
    var itemsByShop = this.items.reduce(function (shopItems, item) {
      if (!shopItems[item.shopId]) {
        shopItems[item.shopId] = [item];
      } else {
        shopItems[item.shopId].push(item);
      }

      return shopItems;
    }, {});
    var shopObjects = Object.keys(itemsByShop).map(function (shop) {
      var _ref3;

      return _ref3 = {}, _ref3[shop] = {
        name: Shops.findOne(shop).name,
        subTotal: subTotalsByShop[shop],
        taxes: taxesByShop[shop],
        items: itemsByShop[shop],
        quantityTotal: itemsByShop[shop].reduce(function (qty, item) {
          return qty + item.quantity;
        }, 0),
        shipping: shippingByShop[shop],
        shippingMethod: shipping[0].shipmentMethod
      }, _ref3;
    }); // TODO we just assume now that every shop uses the same carrier, thus the hard-coded zero index
    // because shipping records are not stored by shop

    var sortedShopObjects = _sortBy(shopObjects, function (shopObject) {
      return shopObject.name;
    });

    return sortedShopObjects;
  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/collections.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  Accounts: function () {
    return Accounts;
  },
  Assets: function () {
    return Assets;
  },
  Cart: function () {
    return Cart;
  },
  Emails: function () {
    return Emails;
  },
  Inventory: function () {
    return Inventory;
  },
  Orders: function () {
    return Orders;
  },
  Packages: function () {
    return Packages;
  },
  Catalog: function () {
    return Catalog;
  },
  Products: function () {
    return Products;
  },
  Revisions: function () {
    return Revisions;
  },
  Shipping: function () {
    return Shipping;
  },
  Shops: function () {
    return Shops;
  },
  Groups: function () {
    return Groups;
  },
  SellerShops: function () {
    return SellerShops;
  },
  Tags: function () {
    return Tags;
  },
  Templates: function () {
    return Templates;
  },
  Translations: function () {
    return Translations;
  },
  Notifications: function () {
    return Notifications;
  },
  Sms: function () {
    return Sms;
  },
  Logs: function () {
    return Logs;
  },
  MediaRecords: function () {
    return MediaRecords;
  }
});

var _extend;

module.watch(require("lodash/extend"), {
  "default": function (v) {
    _extend = v;
  }
}, 0);
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 1);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 2);
var Schemas;
module.watch(require("./schemas"), {
  "*": function (v) {
    Schemas = v;
  }
}, 3);
var cartOrderTransform;
module.watch(require("./transform/cartOrder"), {
  cartOrderTransform: function (v) {
    cartOrderTransform = v;
  }
}, 4);

/**
 * @name mediaRecordsIndex
 * @private
 * @param {RawMongoCollection} rawMedia
 *
 * Sets up necessary indexes on the Media FileCollection
 */
function mediaRecordsIndex(rawMedia) {
  return _regenerator.default.async(function () {
    function mediaRecordsIndex$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return _regenerator.default.awrap(rawMedia.createIndex({
              "metadata.productId": 1
            }, {
              background: true
            }));

          case 3:
            _context.next = 5;
            return _regenerator.default.awrap(rawMedia.createIndex({
              "metadata.variantId": 1
            }, {
              background: true
            }));

          case 5:
            _context.next = 7;
            return _regenerator.default.awrap(rawMedia.createIndex({
              "metadata.priority": 1
            }, {
              background: true
            }));

          case 7:
            _context.next = 9;
            return _regenerator.default.awrap(rawMedia.createIndex({
              "original.remoteURL": 1
            }, {
              background: true
            }));

          case 9:
            _context.next = 11;
            return _regenerator.default.awrap(rawMedia.createIndex({
              "original.tempStoreId": 1
            }, {
              background: true
            }));

          case 11:
            _context.next = 16;
            break;

          case 13:
            _context.prev = 13;
            _context.t0 = _context["catch"](0);
            console.error(_context.t0); // eslint-disable-line no-console

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }

    return mediaRecordsIndex$;
  }(), null, this, [[0, 13]]);
}
/**
 *
 * Reaction Core Collections
 * @ignore
 */

/**
 * Accounts Collection
 * @ignore
 */


var Accounts = new Mongo.Collection("Accounts");
Accounts.attachSchema(Schemas.Accounts);
/**
 * Assets Collection
 * Store file asset paths or contents in a Collection
 * @ignore
 */

var Assets = new Mongo.Collection("Assets");
Assets.attachSchema(Schemas.Assets);
/**
 * Cart Collection
 * @ignore
 */

var Cart = new Mongo.Collection("Cart", {
  transform: function (cart) {
    var newInstance = Object.create(cartOrderTransform);
    return _extend(newInstance, cart);
  }
});
Cart.attachSchema(Schemas.Cart);
/**
 * Emails Collection
 * @ignore
 */

var Emails = new Mongo.Collection("Emails");
Emails.attachSchema(Schemas.Emails);
/**
 * Inventory Collection
 * @ignore
 */

var Inventory = new Mongo.Collection("Inventory");
Inventory.attachSchema(Schemas.Inventory);
/**
 * Orders Collection
 * @ignore
 */

var Orders = new Mongo.Collection("Orders", {
  transform: function (order) {
    var newInstance = Object.create(cartOrderTransform);
    return _extend(newInstance, order);
  }
});
Orders.attachSchema(Schemas.OrderDocument);
/**
 * Packages Collection
 * @ignore
 */

var Packages = new Mongo.Collection("Packages");
Packages.attachSchema(Schemas.PackageConfig);
/**
 * Catalog Collection
 * @todo: Attach a schema to the Catalog collection
 * @ignore
 */

var Catalog = new Mongo.Collection("Catalog");
var Products = new Mongo.Collection("Products");
Products.attachSchema(Schemas.Product, {
  selector: {
    type: "simple"
  }
});
Products.attachSchema(Schemas.ProductVariant, {
  selector: {
    type: "variant"
  }
});
/**
 * Revisions Collection
 * @ignore
 */

var Revisions = new Mongo.Collection("Revisions");
Revisions.attachSchema(Schemas.Revisions);
/**
 * Shipping Collection
 * @ignore
 */

var Shipping = new Mongo.Collection("Shipping");
Shipping.attachSchema(Schemas.Shipping);
/**
* Shops Collection
* @ignore
*/

var Shops = new Mongo.Collection("Shops");
Shops.attachSchema(Schemas.Shop);
/**
 * Groups Collection
 * @ignore
 */

var Groups = new Mongo.Collection("Groups");
Groups.attachSchema(Schemas.Groups);
/**
 * SellerShops Collection (client-only)
 * @ignore
 */

var sellerShops;

if (Meteor.isClient) {
  sellerShops = new Mongo.Collection("SellerShops");
  sellerShops.attachSchema(Schemas.Shop);
}

var SellerShops = sellerShops;
var Tags = new Mongo.Collection("Tags");
Tags.attachSchema(Schemas.Tag);
/**
 * Templates Collection
 * @ignore
 */

var Templates = new Mongo.Collection("Templates");
Templates.attachSchema(Schemas.Templates, {
  selector: {
    type: "template"
  }
});
Templates.attachSchema(Schemas.ReactLayout, {
  selector: {
    type: "react"
  }
});
/**
 * Translations Collection
 * @ignore
 */

var Translations = new Mongo.Collection("Translations");
Translations.attachSchema(Schemas.Translation);
/**
 * Notifications Collection
 * @ignore
 */

var Notifications = new Mongo.Collection("Notifications");
Notifications.attachSchema(Schemas.Notification);
/**
 * Sms Collection
 * @ignore
 */

var Sms = new Mongo.Collection("Sms");
Sms.attachSchema(Schemas.Sms);
/**
 * Logs Collection
 * @ignore
 */

var Logs = new Mongo.Collection("Logs");
Logs.attachSchema(Schemas.Logs);
/**
 * MediaRecords Collection
 * @ignore
 */

var MediaRecords = new Mongo.Collection("cfs.Media.filerecord");

// Index on the props we search on
if (Meteor.isServer) {
  mediaRecordsIndex(MediaRecords.rawCollection());
} // Might want to do this at some point.
// MediaRecords.attachSchema();
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/index.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./collections"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./search"), {
  "*": module.makeNsSetter()
}, 1);
module.watch(require("./jobs"), {
  Jobs: function (v) {
    exports.Jobs = v;
  }
}, 2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"jobs.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/jobs.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Jobs: function () {
    return Jobs;
  }
});
var JobCollection;
module.watch(require("../../imports/plugins/core/job-collection/lib"), {
  JobCollection: function (v) {
    JobCollection = v;
  }
}, 0);
var Jobs = new JobCollection("Jobs", {
  noCollectionSuffix: true
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"search.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/collections/search.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  ProductSearch: function () {
    return ProductSearch;
  },
  OrderSearch: function () {
    return OrderSearch;
  },
  AccountSearch: function () {
    return AccountSearch;
  }
});
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 0);
var ProductSearch = new Mongo.Collection("ProductSearch");
var OrderSearch = new Mongo.Collection("OrderSearch");
var AccountSearch = new Mongo.Collection("AccountSearch");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"core":{"templates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/core/templates.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  html: function () {
    return html;
  }
});

function html(strings) {
  return strings.raw[0];
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"selectors":{"tags.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/selectors/tags.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  getTagIds: function () {
    return getTagIds;
  }
});

var getTagIds = function (state) {
  if (Array.isArray(state.tags)) {
    return state.tags.map(function (tag) {
      return tag._id;
    });
  }

  return [];
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"variants.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/selectors/variants.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  getVariantIds: function () {
    return getVariantIds;
  }
});

var getVariantIds = function (variants) {
  return Array.isArray(variants) && variants.map(function (variant) {
    return variant._id;
  });
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},"client":{"lib":{"buffer.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/lib/buffer.js                                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
// this is an expensive polyfill for clientside Buffer usage
// TODO refactor to remove this buffer dependency
global.Buffer = global.Buffer || require("buffer").Buffer; // eslint-disable-line
// how to refactor
// you can easily drop a breakpoint on the error in your browser's inspector, then refresh the page to hit the breakpoint and see via the call stack which package is trying to use Buffer
// https://github.com/meteor/meteor/issues/8645
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"modules":{"core":{"helpers":{"apps.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/helpers/apps.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Apps: function () {
    return Apps;
  }
});

var _cloneDeep;

module.watch(require("lodash/cloneDeep"), {
  "default": function (v) {
    _cloneDeep = v;
  }
}, 0);

var _filter;

module.watch(require("lodash/filter"), {
  "default": function (v) {
    _filter = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var Packages, Shops;
module.watch(require("../../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  },
  Shops: function (v) {
    Shops = v;
  }
}, 6);

function Apps(optionHash) {
  var filter = {};
  var registryFilter = {};
  var key;
  var reactionApps = [];
  var options = {}; // allow for object or option.hash

  if (optionHash) {
    if (optionHash.hash) {
      options = optionHash.hash;
    } else {
      options = optionHash;
    }
  } // you could provide a shopId in optionHash


  if (!options.shopId) {
    options.shopId = Reaction.getShopId();
  } // Get the shop to determine shopType


  var shop = Shops.findOne({
    _id: options.shopId
  }) || {};
  var shopType = shop.shopType; // remove audience permissions for owner (still needed here for older/legacy calls)

  if (Reaction.hasOwnerAccess() && options.audience) {
    delete options.audience;
  } //
  // build filter to only get matching registry elements
  //


  for (key in meteorBabelHelpers.sanitizeForInObject(options)) {
    if ({}.hasOwnProperty.call(options, key)) {
      var value = options[key];

      if (value) {
        if (!(key === "enabled" || key === "name" || key === "shopId")) {
          filter["registry." + key] = Array.isArray(options[key]) ? {
            $in: value
          } : value;
          registryFilter[key] = value;
        } else {
          // perhaps not the best way to check but lets admin see all packages
          if (!Reaction.hasOwnerAccess()) {
            if (key !== "shopId") {
              registryFilter[key] = value;
            }
          }

          filter[key] = value;
        }
      }
    }
  }

  delete filter["registry.audience"]; // Temporarily remove "audience" key (see comment below)
  // TODO: Review fix for filter on Packages.find(filter)
  // The current "filter" setup uses "audience" field which is not present in the registry array in most (if not all) docs
  // in the Packages coll.
  // For now, the audience checks (after the Package.find call) filters out the registry items based on permissions. But
  // part of the filtering should have been handled by the Package.find call, if the "audience" filter works as it should.

  Packages.find(filter).forEach(function (app) {
    var matchingRegistry = _filter(app.registry, function (item) {
      var itemFilter = _cloneDeep(registryFilter); // check audience permissions only if they exist as part of optionHash and are part of the registry item
      // ideally all routes should use it, safe for backwards compatibility though
      // owner bypasses permissions


      if (!Reaction.hasOwnerAccess() && item.permissions && registryFilter.audience) {
        var hasAccess;

        for (var _iterator = registryFilter.audience, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _permission = _ref;
          // This checks that the registry item contains a permissions matches with the user's permission for the shop
          var hasPermissionToRegistryItem = item.permissions.indexOf(_permission) > -1; // This checks that the user's permission set have the right value that is on the registry item

          var hasRoleAccessForShop = Roles.userIsInRole(Meteor.userId(), _permission, Reaction.getShopId()); // both checks must pass for access to be granted

          if (hasPermissionToRegistryItem && hasRoleAccessForShop) {
            hasAccess = true;
            break;
          }
        }

        if (!hasAccess) {
          return false;
        } // safe to clean up now, and isMatch can ignore audience


        delete itemFilter.audience;
      } // Check that shopType matches showForShopType if option is present


      if (item.showForShopTypes && Array.isArray(item.showForShopTypes) && item.showForShopTypes.indexOf(shopType) === -1) {
        return false;
      } // Check that shopType does not match hideForShopType if option is present


      if (item.hideForShopTypes && Array.isArray(item.hideForShopTypes) && item.hideForShopTypes.indexOf(shopType) !== -1) {
        return false;
      } // Loop through all keys in the itemFilter
      // each filter item should match exactly with the property in the registry or
      // should be included in the array if that property is an array


      return Object.keys(itemFilter).every(function (property) {
        var filterVal = itemFilter[property];
        var itemVal = item[property]; // Check to see if the registry entry is an array.
        // Legacy registry entries could exist that use a string even when the schema requires an array.
        // If it's not an array, the filter should match exactly

        return Array.isArray(itemVal) ? itemVal.includes(filterVal) : itemVal === filterVal;
      });
    });

    for (var _iterator2 = matchingRegistry, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _registry = _ref2;
      reactionApps.push(_registry);
    }
  }); // Sort apps by priority (registry.priority)

  return reactionApps.sort(function (a, b) {
    return a.priority - b.priority;
  }).slice();
}

// Register global template helper
Template.registerHelper("reactionApps", function (optionHash) {
  return Reaction.Apps(optionHash);
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"globals.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/helpers/globals.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  toggleSession: function () {
    return toggleSession;
  },
  getCardType: function () {
    return getCardType;
  },
  getGuestLoginState: function () {
    return getGuestLoginState;
  }
});

var _pluck;

module.watch(require("lodash/fp/pluck"), {
  "default": function (v) {
    _pluck = v;
  }
}, 0);

var _isEqual;

module.watch(require("lodash/isEqual"), {
  "default": function (v) {
    _isEqual = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 4);

function toggleSession(sessionVariable, positiveState) {
  var session = Session.get(sessionVariable);
  var positive = positiveState || true;

  if (_isEqual(positive, session)) {
    Session.set(sessionVariable, false);
  } else {
    Session.set(sessionVariable, positive);
  }

  return Session.get(sessionVariable);
}

function getCardType(cardNumber) {
  var re = new RegExp("^4");

  if (cardNumber.match(re) !== null) {
    return "visa";
  }

  re = new RegExp("^(34|37)");

  if (cardNumber.match(re) !== null) {
    return "amex";
  }

  re = new RegExp("^5[1-5]");

  if (cardNumber.match(re) !== null) {
    return "mastercard";
  }

  re = new RegExp("^6011");

  if (cardNumber.match(re) !== null) {
    return "discover";
  }

  return "";
}

function getGuestLoginState() {
  if (Meteor.userId() === "string" && this.getShopId() && this.allowGuestCheckout()) {
    var isGuestFlow = Session.equals("guestCheckoutFlow", true);
    var isGuest = Roles.userIsInRole(Meteor.userId(), "guest", this.getShopId());
    var isAnonymous = Roles.userIsInRole(Meteor.userId(), "anonymous", this.getShopId());

    if (!isGuestFlow && !isGuest && isAnonymous) {
      return false;
    } else if (!isGuestFlow && isGuest && !isAnonymous) {
      return true;
    }
  } else if (Session.equals("guestCheckoutFlow", true) && _pluck(Meteor.user().emails, "address")) {
    return true;
  }

  return false;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"layout.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/helpers/layout.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _includes;

module.watch(require("lodash/includes"), {
  "default": function (v) {
    _includes = v;
  }
}, 0);

var _filter;

module.watch(require("lodash/filter"), {
  "default": function (v) {
    _filter = v;
  }
}, 1);

var _find;

module.watch(require("lodash/find"), {
  "default": function (v) {
    _find = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 4);
var Reaction;
module.watch(require("../../../api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);
var Logger;
module.watch(require("../../logger"), {
  "default": function (v) {
    Logger = v;
  }
}, 6);
var Collections;
module.watch(require("../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 7);

/**
 * reactionTemplate helper
 * use the reactionTemplate helper when you are using templates defined
 * as workflow templates in the package registery.Layout
 * use "collection" on the layout to indicate a workflow source
 *
 * @summary reactionTemplate provides templates as defined in ReactionRegistry.Layout
 * @param {Object} options - workflow defaults to "coreLayout/coreWorkflow"
 * @returns {Array} returns an array with labels, templates that match workflow
 */
Template.registerHelper("reactionTemplate", function (options) {
  var shopId = options.hash.shopId || Reaction.getShopId(); // get shop info, defaults to current

  var Shop = Collections.Shops.findOne(shopId);
  var groupSub = Meteor.subscribe("Groups", {
    shopId: shopId
  });
  var defaultRoles;

  if (groupSub.ready()) {
    var groups = Collections.Groups.findOne({
      slug: "customer",
      shopId: shopId
    });
    defaultRoles = groups.permissions;
  }

  var reactionTemplates = []; // fetch collection from shop.layout configuration

  var layout = _find(Shop.layout, {
    workflow: options.hash.workflow || "coreWorkflow"
  });

  var layoutConfigCollection;
  var currentId; // determine if workflow has a target
  // collection defined. This is where we'll
  // fetch/save workflow changes.

  if (layout) {
    layoutConfigCollection = layout.collection || "Cart";
  } else {
    Logger.error("Shop Layout Undefined");
    layoutConfigCollection = "Cart";
  } // if we've got an id, we'll use it with the layout's collection
  // and get the current status of the workflowTargetCollection


  if (Template.currentData() && Template.currentData()._id) {
    currentId = Template.currentData()._id;
  } else {
    var currentCart = Collections.Cart.findOne({
      userId: Meteor.userId()
    });
    currentId = currentCart && currentCart._id;
  } // we'll get current cart status by default, as the most common case
  // TODO: expand query options


  currentId = options.hash.id || currentId; // The currentCollection must have workflow schema attached.
  // layoutConfigCollection is the collection defined in Shops.workflow

  var workflowTargetCollection = Collections[layoutConfigCollection];
  var currentCollection = workflowTargetCollection.findOne(currentId);
  var currentStatus = currentCollection.workflow.status;
  var currentCollectionWorkflow = currentCollection.workflow.workflow;
  var packages = Collections.Packages.find({
    layout: {
      $elemMatch: options.hash
    },
    shopId: shopId
  }); //  we can have multiple packages contributing to the layout / workflow

  packages.forEach(function (reactionPackage) {
    var layoutWorkflows = _filter(reactionPackage.layout, options.hash); // check the packages for layout workflow templates


    for (var _iterator = layoutWorkflows, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      if (_isArray) {
        if (_i >= _iterator.length) break;
        layout = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        layout = _i.value;
      }

      // audience is layout permissions
      if (layout.audience === undefined) {
        layout.audience = defaultRoles || "owner";
      } // check permissions so you don't have to on template.


      if (Reaction.hasPermission(layout.audience)) {
        // todo: review this hack to remove layout
        // from the workflow
        if (!layout.layout) {
          // default is boolean false status
          // true = we've completed this workflow
          // false = pending (future) step
          // <template> = in process (current) step.
          layout.status = _includes(currentCollectionWorkflow, layout.template); // if the current template is already the current status

          if (layout.template === currentStatus) {
            layout.status = currentStatus;
          } // push to reactionTemplates


          reactionTemplates.push(layout);
        }
      }
    }
  });
  return reactionTemplates;
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"permissions.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/helpers/permissions.js                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var Reaction;
module.watch(require("../../../api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 2);

/*
 * Methods for the reaction permissions
 * helpers for roles, uses alanning:meteor-roles
 * see: http://alanning.github.io/meteor-roles/classes/Roles.html
 * use: {{hasPermission admin userId}}
 */

/**
 * hasPermission template helper
 * @summary check current user hasPermission
 * @param  {String|Array} "permissions"
 * @param  {String} checkUserId - optional Meteor.userId, default to current
 * @return {Boolean}
 */
Template.registerHelper("hasPermission", function (permissions, options) {
  // default to checking this.userId
  var loggedInUser = Meteor.userId();
  var shopId = Reaction.getShopId(); // we don't necessarily need to check here
  // as these same checks and defaults are
  // also performed in Reaction.hasPermission

  if ((0, _typeof2.default)(options) === "object") {
    if (options.hash.userId) {
      var userId = options.hash.userId;
      return Reaction.hasPermission(permissions, userId || loggedInUser, shopId);
    }
  }

  return Reaction.hasPermission(permissions, loggedInUser, shopId);
});
/**
 * hasOwnerAccess template helper
 * @summary check if user has owner access
 * @return {Boolean} return true if owner
 */

Template.registerHelper("hasOwnerAccess", function () {
  return Reaction.hasOwnerAccess();
});
/**
 * hasAdminAccess template helper
 * @summary check if user has admin access
 * @return {Boolean} return true if admin
 */

Template.registerHelper("hasAdminAccess", function () {
  return Reaction.hasAdminAccess();
});
/**
 * hasDashboardAccess template helper
 * @summary check if user has dashboard access
 * @return {Boolean} return true if user has dashboard permission
 */

Template.registerHelper("hasDashboardAccess", function () {
  return Reaction.hasDashboardAccess();
});
/**
 * allowGuestCheckout template helper
 * @summary check if guest users are allowed to checkout
 * @return {Boolean} return true if shop has guest checkout enabled
 */

Template.registerHelper("allowGuestCheckout", function () {
  return Reaction.allowGuestCheckout();
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"templates.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/helpers/templates.js                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _each;

module.watch(require("lodash/each"), {
  "default": function (v) {
    _each = v;
  }
}, 0);
module.watch(require("moment/min/locales.min.js"));
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 2);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 3);
var Spacebars;
module.watch(require("meteor/spacebars"), {
  Spacebars: function (v) {
    Spacebars = v;
  }
}, 4);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 5);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 6);
var i18next, Reaction;
module.watch(require("../../../api"), {
  i18next: function (v) {
    i18next = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 7);
var Collections;
module.watch(require("../../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 8);
var Schemas;
module.watch(require("../../../../lib/collections/schemas"), {
  "*": function (v) {
    Schemas = v;
  }
}, 9);
var toCamelCase;
module.watch(require("../../../../lib/api"), {
  toCamelCase: function (v) {
    toCamelCase = v;
  }
}, 10);
// Lazyload moment-timezone.months
var monthOptionsVar = new ReactiveVar([]);

function lazyLoadMonths() {
  var _ref, locale, months, lang, monthOptions, monthsList, index, month, mnum;

  return _regenerator.default.async(function () {
    function lazyLoadMonths$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!monthOptionsVar.get().length) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return");

          case 2:
            _context.next = 4;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("moment-timezone");
            }));

          case 4:
            _ref = _context.sent;
            locale = _ref.locale;
            months = _ref.months;
            lang = i18next.language;

            if (lang === "zh") {
              lang = "zh-cn";
            }

            locale(lang);
            monthOptions = [];
            monthsList = months(); // parse into autoform array

            for (index in meteorBabelHelpers.sanitizeForInObject(monthsList)) {
              if ({}.hasOwnProperty.call(monthsList, index)) {
                month = monthsList[index];
                mnum = parseInt(index, 10) + 1;
                monthOptions.push({
                  value: mnum,
                  label: mnum + " | " + month
                });
              }
            }

            monthOptionsVar.set(monthOptions);

          case 14:
          case "end":
            return _context.stop();
        }
      }
    }

    return lazyLoadMonths$;
  }(), null, this);
}

Template.registerHelper("Collections", function () {
  return Collections;
});
Template.registerHelper("Schemas", function () {
  return Schemas;
});
/**
 * currentUser
 * @summary overrides Meteor Package.blaze currentUser method
 * @return {Boolean} returns true/null if user has registered
 */

Template.registerHelper("currentUser", function () {
  if ((0, _typeof2.default)(Reaction) === "object") {
    var shopId = Reaction.getShopId();
    var user = Accounts.user();
    if (!shopId || (0, _typeof2.default)(user) !== "object") return null; // shoppers should always be guests

    var isGuest = Roles.userIsInRole(user, "guest", shopId); // but if a user has never logged in then they are anonymous

    var isAnonymous = Roles.userIsInRole(user, "anonymous", shopId);
    return isGuest && !isAnonymous ? user : null;
  }

  return null;
});
Template.registerHelper("monthOptions", function () {
  var showDefaultOption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var label = i18next.t("app.monthOptions", "Choose month"); // Call to get monthOptinosVar ReactiveVar

  lazyLoadMonths();
  var monthOptions = [];

  if (showDefaultOption) {
    monthOptions.push({
      value: "",
      label: label
    });
  }

  monthOptions = monthOptions.concat(monthOptionsVar.get());
  return monthOptions;
});
/**
 * yearOptions
 * @summary formats moment.js next 9 years into array for autoform selector
 * @return {Array} returns array of years [value:, label:]
 */

Template.registerHelper("yearOptions", function () {
  var showDefaultOption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var label = i18next.t("app.yearOptions", "Choose year");
  var yearOptions = [];

  if (showDefaultOption) {
    yearOptions.push({
      value: "",
      label: label
    });
  }

  var year = new Date().getFullYear();

  for (var i = 1; i < 9; i += 1) {
    yearOptions.push({
      value: year,
      label: year
    });
    year += 1;
  }

  return yearOptions;
});
/**
 * camelToSpace
 * @summary convert a camelcased string to spaces
 * @param {String} str - camelcased string
 * @return {String} returns space formatted string
 */

Template.registerHelper("camelToSpace", function (str) {
  var downCamel = str.replace(/\W+/g, "-").replace(/([a-z\d])([A-Z])/g, "$1 $2");
  return downCamel.toLowerCase();
});
/**
 * toLowerCase
 * @summary convert a string to lower case
 * @param {String} str - string
 * @return {String} returns lowercased string
 */

Template.registerHelper("toLowerCase", function (str) {
  return str.toLowerCase();
});
/**
 * toUpperCase
 * @summary convert a string to upper case
 * @param {String} str - string
 * @return {String} returns uppercased string
 */

Template.registerHelper("toUpperCase", function (str) {
  return str.toUpperCase();
});
/**
 * capitalize
 * @summary capitalize first character of string
 * @param {String} str - string
 * @return {String} returns string with first letter capitalized
 */

Template.registerHelper("capitalize", function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
/**
 * toCamelCase
 * @summary camelCases a string
 * @param {String} str - string
 * @return {String|undefined} returns camelCased string
 */

Template.registerHelper("toCamelCase", function (str) {
  return !!str && toCamelCase(str);
});
/**
 * siteName
 * @summary get the shop name
 * @return {String} returns site name
 */

Template.registerHelper("siteName", function () {
  var shop = Collections.Shops.findOne();
  return (0, _typeof2.default)(shop) === "object" && shop.name ? shop.name : "";
});
/*
 *  General helpers for template functionality
 */

/**
 * condition
 * @summary conditional string comparison template helper
 * @example {{#if condition status "eq" ../value}}
 * @param {String} v1 - first variable to compare
 * @param {String} operator - eq,neq,ideq,or,lt,gt comparision operator
 * @param {String} v2 - second variable to compare
 * @return {Boolean} returns true/false
 */

Template.registerHelper("condition", function (v1, operator, v2) {
  switch (operator) {
    case "==":
    case "eq":
      return v1 === v2;

    case "!=":
    case "neq":
      return v1 !== v2;

    case "===":
    case "ideq":
      return v1 === v2;

    case "!==":
    case "nideq":
      return v1 !== v2;

    case "&&":
    case "and":
      return v1 && v2;

    case "||":
    case "or":
      return v1 || v2;

    case "<":
    case "lt":
      return v1 < v2;

    case "<=":
    case "lte":
      return v1 <= v2;

    case ">":
    case "gt":
      return v1 > v2;

    case ">=":
    case "gte":
      return v1 >= v2;

    default:
      throw new Meteor.Error("undefined-operator", "Undefined conditional operator " + operator);
  }
});
/**
 * orElse
 * @summary if this is true, or else this
 * @param {String} v1 - variable one
 * @param {String} v2 - variable two
 * @return {String} returns v1 || v2
 */

Template.registerHelper("orElse", function (v1, v2) {
  return v1 || v2;
});
/**
 * key_value
 * @summary template helper pushing object key/value into array
 * @param {Object} context - object to parse into key / value
 * @return {Array} returns array[key:,value:]
 */

Template.registerHelper("key_value", function (context) {
  var result = [];

  _each(context, function (value, key) {
    return result.push({
      key: key,
      value: value
    });
  });

  return result;
});
/**
 * nl2br
 * @summary template helper nl2br - Converts new line (\n\r) to <br>
 * from http://phpjs.org/functions/nl2br:480
 * @param {String} text - text
 * @returns {String} returns formatted Spacebars.SafeString
 */

Template.registerHelper("nl2br", function (text) {
  var nl2br = ("" + text).replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, "$1<br>$2");
  return new Spacebars.SafeString(nl2br);
});
/**
 * pluralize
 * @summary general helper for plurization of strings
 * @example {{plurize "1 thing"}}
 * @param {String} nCount - number, ie "1 "
 * @param {String} pString - plural string ie " thing"
 * @todo adapt to, and use i18next
 */

Template.registerHelper("pluralize", function (nCount, pString) {
  if (nCount === 1) {
    return "1 " + pString;
  }

  return nCount + " " + pString + "s";
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"utils.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/helpers/utils.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  getSlug: function () {
    return getSlug;
  }
});
var latinLangs, getShopLang;
module.watch(require("../../../../lib/api/helpers"), {
  latinLangs: function (v) {
    latinLangs = v;
  },
  getShopLang: function (v) {
    getShopLang = v;
  }
}, 0);
// dynamic import of slugiy/transliteration.slugify
var slugify;

function lazyLoadSlugify() {
  var mod, lang;
  return _regenerator.default.async(function () {
    function lazyLoadSlugify$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // getting the shops base language
            lang = getShopLang(); // if slugify has been loaded but the language has changed
            // to be a non latin based language then load transliteration

            if (!(slugify && slugify.name === "replace" && latinLangs.indexOf(lang) === -1)) {
              _context.next = 7;
              break;
            }

            _context.next = 4;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("transliteration");
            }));

          case 4:
            mod = _context.sent;
            _context.next = 20;
            break;

          case 7:
            if (!slugify) {
              _context.next = 11;
              break;
            }

            return _context.abrupt("return");

          case 11:
            if (!(latinLangs.indexOf(lang) >= 0)) {
              _context.next = 17;
              break;
            }

            _context.next = 14;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("slugify");
            }));

          case 14:
            mod = _context.sent;
            _context.next = 20;
            break;

          case 17:
            _context.next = 19;
            return _regenerator.default.awrap(Promise.resolve().then(function () {
              return require("transliteration");
            }));

          case 19:
            mod = _context.sent;

          case 20:
            // slugify is exported to modules.default while transliteration is exported to modules.slugify
            slugify = mod.default || mod.slugify;

          case 21:
          case "end":
            return _context.stop();
        }
      }
    }

    return lazyLoadSlugify$;
  }(), null, this);
}
/**
 * @name getSlug
 * @summary Return a client slugified string using the "slugify" global from the transliteration package
 * @see https://www.npmjs.com/package/transliteration
 * @method
 * @memberof Helpers
 * @locus Client
 * @param  {String} slugString - string to slugify
 * @return {String} slugified string
 */


function getSlug(slugString) {
  var slug;
  Promise.resolve(lazyLoadSlugify());

  if (slugString && slugify) {
    slug = slugify(slugString.toLowerCase());
  } else {
    slug = "";
  }

  return slug;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"accounts.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/accounts.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var store;
module.watch(require("store"), {
  "default": function (v) {
    store = v;
  }
}, 0);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 1);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 2);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 3);

/*
 * registerLoginHandler
 * method to create anonymous users
 */
Accounts.loginWithAnonymous = function (anonymous, callback) {
  // We need to be sure that every user will work inside a session. Sometimes
  // session could be destroyed, for example, by clearing browser's cache. In
  // that case we need to take care about creating new session before new
  // user or anonymous will be created/logged in.
  // The problem here - looks like where is no way to track localStorage:
  // `store.get("Reaction.session")` itself. That's why we need to use
  // another way: `accounts` package uses `setTimeout` for monitoring connection
  // Accounts.callLoginMethod will be called after clearing cache. We could
  // latch on this computations by running extra check here.
  if (typeof store.get("Reaction.session") !== "string") {
    var newSession = Random.id();
    store.set("Reaction.session", newSession);
    Session.set("sessionId", newSession);
  }

  Accounts.callLoginMethod({
    methodArguments: [{
      anonymous: true,
      sessionId: Session.get("sessionId")
    }],
    userCallback: callback
  });
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/index.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Reaction: function () {
    return Reaction;
  }
});
var Core;
module.watch(require("./main"), {
  "default": function (v) {
    Core = v;
  }
}, 0);
var Apps;
module.watch(require("./helpers/apps"), {
  "*": function (v) {
    Apps = v;
  }
}, 1);
var Globals;
module.watch(require("./helpers/globals"), {
  "*": function (v) {
    Globals = v;
  }
}, 2);
var Utils;
module.watch(require("./helpers/utils"), {
  "*": function (v) {
    Utils = v;
  }
}, 3);
var Subscriptions;
module.watch(require("./subscriptions"), {
  Subscriptions: function (v) {
    Subscriptions = v;
  }
}, 4);
var Log;
module.watch(require("../logger"), {
  "default": function (v) {
    Log = v;
  }
}, 5);
var DOM;
module.watch(require("../../../imports/plugins/core/dom/client"), {
  DOM: function (v) {
    DOM = v;
  }
}, 6);
var Router;
module.watch(require("../router"), {
  Router: function (v) {
    Router = v;
  }
}, 7);
var Collections;
module.watch(require("../../../lib/collections"), {
  "*": function (v) {
    Collections = v;
  }
}, 8);
var Schemas;
module.watch(require("../../../lib/collections/schemas"), {
  "*": function (v) {
    Schemas = v;
  }
}, 9);
var Reaction = Object.assign(Core, Apps, Globals, Utils, {
  Subscriptions: Subscriptions
}, {
  Log: Log
}, {
  DOM: DOM
}, {
  Router: Router
}, {
  Collections: Collections
}, {
  Schemas: Schemas
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"startup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/startup.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var store;
module.watch(require("store"), {
  "default": function (v) {
    store = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 2);
var AccountsCollection;
module.watch(require("../../../lib/collections"), {
  Accounts: function (v) {
    AccountsCollection = v;
  }
}, 3);
var Accounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    Accounts = v;
  }
}, 4);
var Reaction, Logger;
module.watch(require("../../api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 5);
var userPrefs;
module.watch(require("./main"), {
  userPrefs: function (v) {
    userPrefs = v;
  }
}, 6);
var cookieName = "_RcFallbackLoginToken";
/**
 *  Startup Reaction
 *  Init Reaction client
 */

Meteor.startup(function () {
  // init the core
  Reaction.init(); // initialize anonymous guest users

  Tracker.autorun(function () {
    var userId = Meteor.userId(); // Load data from Accounts collection into the localStorage

    Tracker.nonreactive(function () {
      // Don't load the data from Accounts Collection again when something changes
      // as we are already storing everything in the localStorage reactively
      try {
        var user = AccountsCollection.findOne(userId);

        if (user && user.profile && user.profile.preferences) {
          Object.keys(user.profile.preferences).forEach(function (packageName) {
            var packageSettings = user.profile.preferences[packageName];
            Object.keys(packageSettings).forEach(function (preference) {
              if (packageName === "reaction" && preference === "activeShopId") {
                // Because activeShopId is cached on client side.
                Reaction.setShopId(packageSettings[preference]);
              } else {
                Reaction.setUserPreferences(packageName, preference, packageSettings[preference]);
              }
            });
          });
        }
      } catch (err) {
        Logger.error("Problem in loading user preferences from Accounts collection");
      }
    });

    if (userId && !isLocalStorageAvailable() && !readCookie(cookieName)) {
      Logger.debug("No local storage available. About to set up fallback login " + "mechanism with cookie login token.");
      Meteor.call("accounts/createFallbackLoginToken", function (err, token) {
        if (!err && token) {
          window.onbeforeunload = function () {
            return createSessionCookie(cookieName, token);
          };

          return;
        } // Can't set login cookie. Fail silently.


        Logger.error("Setting up fallback login mechanism failed!");
      });
    } // TODO: maybe `visibilityState` will be better here


    var loggingIn;
    var sessionId;
    Tracker.nonreactive(function () {
      loggingIn = Accounts.loggingIn();
      sessionId = store.get("Reaction.session");
    });

    if (!userId) {
      if (!loggingIn || typeof sessionId !== "string") {
        if (!isLocalStorageAvailable() && readCookie(cookieName)) {
          // If re-login through local storage fails, RC falls back
          // to cookie-based login. E.g. Applies for Safari browser in
          // incognito mode.
          Accounts.loginWithToken(readCookie(cookieName));
        } else {
          Accounts.loginWithAnonymous();
        }
      }
    }
  }); // Set up an autorun to get fine-grained reactivity on only the
  // user preferences

  Tracker.autorun(function () {
    var userId = Meteor.userId();
    if (!userId) return;
    var user = Meteor.users.findOne(userId, {
      fields: {
        profile: 1
      }
    });
    userPrefs.set(user && user.profile && user.profile.preferences || undefined);
  });
});

function isLocalStorageAvailable() {
  try {
    localStorage.testKey = "testValue";
  } catch (e) {
    return false;
  }

  delete localStorage.testKey;
  return true;
}

function readCookie(name) {
  var nameEq = name + "=";
  var ca = document.cookie.split(";");

  for (var i = 0; i < ca.length; i += 1) {
    var c = ca[i];

    while (c.charAt(0) === " ") {
      c = c.substring(1, c.length);
    }

    if (c.indexOf(nameEq) === 0) {
      return c.substring(nameEq.length, c.length);
    }
  }

  return null;
}

function createSessionCookie(name, value) {
  document.cookie = name + "=" + value + "; path=/";
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"subscriptions.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/subscriptions.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Subscriptions: function () {
    return Subscriptions;
  }
});
var store;
module.watch(require("store"), {
  "default": function (v) {
    store = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Random;
module.watch(require("meteor/random"), {
  Random: function (v) {
    Random = v;
  }
}, 2);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 3);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 4);
var SubsManager;
module.watch(require("meteor/meteorhacks:subs-manager"), {
  SubsManager: function (v) {
    SubsManager = v;
  }
}, 5);
var Reaction;
module.watch(require("./main"), {
  "default": function (v) {
    Reaction = v;
  }
}, 6);
var Subscriptions = {};
// Subscription Manager
// See: https://github.com/kadirahq/subs-manager
Subscriptions.Manager = new SubsManager();
Subscriptions.Account = Subscriptions.Manager.subscribe("Accounts", Meteor.userId());
/*
 * Reaction.session
 * Create persistent sessions for users
 * The server returns only one record, so findOne will return that record
 * Stores into client session all data contained in server session
 * supports reactivity when server changes `newSession`
 * Stores the server session id into local storage / cookies
 *
 * Also localStorage session could be set from the client-side. This could
 * happen when user flush browser's cache, for example.
 * @see https://github.com/reactioncommerce/reaction/issues/609#issuecomment-166389252
 */

/**
 * General Subscriptions
 */
// Primary shop subscription

Subscriptions.PrimaryShop = Subscriptions.Manager.subscribe("PrimaryShop"); // Additional shop subscriptions

Subscriptions.MerchantShops = Subscriptions.Manager.subscribe("MerchantShops"); // This Packages subscription is used for the Active shop's packages
// // Init sub here so we have a "ready" state

Subscriptions.Packages = Subscriptions.Manager.subscribe("Packages"); // This packages subscription is used for the Primary Shop's packages
// The Packages publication defaults to returning the primaryShopId's packages,
// so this subscription shouldn't ever need to be changed
// TODO: Consider how to handle routes for several shops which are all active at once

Subscriptions.PrimaryShopPackages = Subscriptions.Manager.subscribe("Packages");
Subscriptions.Tags = Subscriptions.Manager.subscribe("Tags");
Subscriptions.Groups = Subscriptions.Manager.subscribe("Groups");
Subscriptions.BrandAssets = Subscriptions.Manager.subscribe("BrandAssets");
/**
 * Subscriptions that need to reload on new sessions
 */

Tracker.autorun(function () {
  // we are trying to track both amplify and Session.get here, but the problem
  // is - we can't track amplify. It just not tracked. So, to track amplify we
  // are using dirty hack inside Accounts.loginWithAnonymous method.
  var sessionId = store.get("Reaction.session");
  var newSession;
  Tracker.nonreactive(function () {
    newSession = Random.id();
  });

  if (typeof sessionId !== "string") {
    store.set("Reaction.session", newSession);
    Session.set("sessionId", newSession);
  }

  if (typeof Session.get("sessionId") !== "string") {
    Session.set("sessionId", store.get("Reaction.session"));
  }

  Subscriptions.Sessions = Meteor.subscribe("Sessions", Session.get("sessionId"));
}); // @see http://guide.meteor.com/data-loading.html#changing-arguments

Tracker.autorun(function () {
  var sessionId; // we really don't need to track the sessionId here

  Tracker.nonreactive(function () {
    sessionId = Session.get("sessionId");
  });
  Subscriptions.Cart = Subscriptions.Manager.subscribe("Cart", sessionId, Meteor.userId());
  Subscriptions.UserProfile = Meteor.subscribe("UserProfile", Meteor.userId());
});
Tracker.autorun(function () {
  // Reload Packages sub if shopId changes
  // We have a persistent subscription to the primary shop's packages,
  // so don't refresh sub if we're updating to primaryShopId sub
  if (Reaction.getShopId() && Reaction.getShopId() !== Reaction.getPrimaryShopId()) {
    Subscriptions.Packages = Subscriptions.Manager.subscribe("Packages", Reaction.getShopId());
  }
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/core/main.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.export({
  userPrefs: function () {
    return userPrefs;
  }
});

var _find;

module.watch(require("lodash/find"), {
  "default": function (v) {
    _find = v;
  }
}, 0);

var _difference;

module.watch(require("lodash/difference"), {
  "default": function (v) {
    _difference = v;
  }
}, 1);

var _uniq;

module.watch(require("lodash/uniq"), {
  "default": function (v) {
    _uniq = v;
  }
}, 2);
var store;
module.watch(require("store"), {
  "default": function (v) {
    store = v;
  }
}, 3);
var MeteorAccounts;
module.watch(require("meteor/accounts-base"), {
  Accounts: function (v) {
    MeteorAccounts = v;
  }
}, 4);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 5);
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 6);
var check;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  }
}, 7);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 8);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 9);
var ReactiveDict;
module.watch(require("meteor/reactive-dict"), {
  ReactiveDict: function (v) {
    ReactiveDict = v;
  }
}, 10);
var Roles;
module.watch(require("meteor/alanning:roles"), {
  Roles: function (v) {
    Roles = v;
  }
}, 11);
var Logger;
module.watch(require("../logger"), {
  "default": function (v) {
    Logger = v;
  }
}, 12);
var Countries;
module.watch(require("../../collections"), {
  Countries: function (v) {
    Countries = v;
  }
}, 13);
var localeDep;
module.watch(require("../i18n"), {
  localeDep: function (v) {
    localeDep = v;
  }
}, 14);
var Packages, Shops, Accounts;
module.watch(require("../../../lib/collections"), {
  Packages: function (v) {
    Packages = v;
  },
  Shops: function (v) {
    Shops = v;
  },
  Accounts: function (v) {
    Accounts = v;
  }
}, 15);
var Router;
module.watch(require("../router"), {
  Router: function (v) {
    Router = v;
  }
}, 16);
// Global, private state object for client side
// This is placed outside the main object to make it a private variable.
// access using `Reaction.state`
var reactionState = new ReactiveDict();
var userPrefs = new ReactiveVar(undefined, function (val, newVal) {
  return JSON.stringify(val) === JSON.stringify(newVal);
});
var deps = new Map();
/**
 * Reaction namespace
 * Global reaction shop permissions methods and shop initialization
 */

module.exportDefault({
  _shopId: new ReactiveVar(null),
  // The active shop
  _primaryShopId: new ReactiveVar(null),
  // The first shop created
  marketplace: {
    _ready: false
  },
  // Marketplace Settings
  Locale: new ReactiveVar({}),
  init: function () {
    var _this = this;

    Tracker.autorun(function () {
      // marketplaceSettings come over on the PrimaryShopPackages subscription
      if (_this.Subscriptions.PrimaryShopPackages.ready()) {
        if (!_this.marketplace._ready) {
          var marketplacePkgSettings = _this.getMarketplaceSettings();

          if (marketplacePkgSettings && marketplacePkgSettings.public) {
            _this.marketplace._ready = true;
            _this.marketplace = marketplacePkgSettings.public;
            _this.marketplace.enabled = true;
          }
        }
      }
    }); // Listen for the primary shop subscription and set accordingly

    Tracker.autorun(function () {
      var shop;

      if (_this.Subscriptions.PrimaryShop.ready()) {
        // There should only ever be one "primary" shop
        shop = Shops.findOne({
          shopType: "primary"
        });

        if (shop) {
          _this.primaryShopId = shop._id;
          _this.primaryShopName = shop.name; // We'll initialize locale and currency for the primary shop unless
          // marketplace settings exist and merchantLocale is set to true

          if (_this.marketplace.merchantLocale !== true) {
            // initialize local client Countries collection
            if (!Countries.findOne()) {
              createCountryCollection(shop.locales.countries);
            }

            var locale = _this.Locale.get() || {}; // fix for https://github.com/reactioncommerce/reaction/issues/248
            // we need to keep an eye for rates changes

            if ((0, _typeof2.default)(locale.locale) === "object" && (0, _typeof2.default)(locale.currency) === "object" && typeof locale.locale.currency === "string") {
              var localeCurrency = locale.locale.currency.split(",")[0];

              if ((0, _typeof2.default)(shop.currencies[localeCurrency]) === "object") {
                if (typeof shop.currencies[localeCurrency].rate === "number") {
                  locale.currency.rate = shop.currencies[localeCurrency].rate;
                  localeDep.changed();
                }
              }
            } // we are looking for a shopCurrency changes here


            if ((0, _typeof2.default)(locale.shopCurrency) === "object") {
              locale.shopCurrency = shop.currencies[shop.currency];
              localeDep.changed();
            }
          }
        }
      }
    }); // Listen for active shop change

    return Tracker.autorun(function () {
      var shop;

      if (_this.Subscriptions.MerchantShops.ready()) {
        // get domain (e.g localhost) from absolute url (e.g http://localhost:3000/)
        var _Meteor$absoluteUrl$s = Meteor.absoluteUrl().split("/"),
            _Meteor$absoluteUrl$s2 = _slicedToArray(_Meteor$absoluteUrl$s, 3),
            host = _Meteor$absoluteUrl$s2[2];

        var _host$split = host.split(":"),
            _host$split2 = _slicedToArray(_host$split, 1),
            domain = _host$split2[0]; // if we don't have an active shopId, try to retreive it from the userPreferences object
        // and set the shop from the storedShopId


        if (!_this.shopId) {
          var storedShopId = _this.getUserPreferences("reaction", "activeShopId");

          if (storedShopId) {
            shop = Shops.findOne({
              _id: storedShopId
            });
          } else {
            shop = Shops.findOne({
              domains: domain
            });
          }
        }

        if (shop) {
          // Only set shopId if it hasn't been set yet
          if (!_this.shopId) {
            _this.shopId = shop._id;
            _this.shopName = shop.name;
          } // We only use the active shop to setup locale if marketplace settings
          // are enabled and merchantLocale is set to true


          if (_this.marketplace.merchantLocale === true) {
            // initialize local client Countries collection
            if (!Countries.findOne()) {
              createCountryCollection(shop.locales.countries);
            }

            var locale = _this.Locale.get() || {}; // fix for https://github.com/reactioncommerce/reaction/issues/248
            // we need to keep an eye for rates changes

            if ((0, _typeof2.default)(locale.locale) === "object" && (0, _typeof2.default)(locale.currency) === "object" && typeof locale.locale.currency === "string") {
              var localeCurrency = locale.locale.currency.split(",")[0];

              if ((0, _typeof2.default)(shop.currencies[localeCurrency]) === "object") {
                if (typeof shop.currencies[localeCurrency].rate === "number") {
                  locale.currency.rate = shop.currencies[localeCurrency].rate;
                  localeDep.changed();
                }
              }
            } // we are looking for a shopCurrency changes here


            if ((0, _typeof2.default)(locale.shopCurrency) === "object") {
              locale.shopCurrency = shop.currencies[shop.currency];
              localeDep.changed();
            }
          }

          return _this;
        }
      }
    });
  },

  // Return global "reactionState" Reactive Dict
  get state() {
    return reactionState;
  },

  /**
   * hasPermission - client
   * client permissions checks
   * hasPermission exists on both the server and the client.
   *
   * @param {String | Array} checkPermissions -String or Array of permissions if empty, defaults to "admin, owner"
   * @param {String} checkUserId - userId, defaults to Meteor.userId()
   * @param {String} checkGroup group - default to shopId
   * @return {Boolean} Boolean - true if has permission
   */
  hasPermission: function (checkPermissions, checkUserId, checkGroup) {
    var group; // default group to the shop or global if shop isn't defined for some reason.

    if (checkGroup !== undefined && typeof checkGroup === "string") {
      group = checkGroup;
    } else {
      group = this.getShopId() || Roles.GLOBAL_GROUP;
    }

    var permissions = ["owner"];
    var id = "";
    var userId = checkUserId || Meteor.userId(); //
    // local roleCheck function
    // is the bulk of the logic
    // called out a userId is validated.
    //

    function roleCheck() {
      // permissions can be either a string or an array
      // we'll force it into an array and use that
      if (checkPermissions === undefined) {
        permissions = ["owner"];
      } else if (typeof checkPermissions === "string") {
        permissions = [checkPermissions];
      } else {
        permissions = checkPermissions;
      } // if the user has owner permissions we'll always check if those roles are enough
      // By adding the "owner" role to the permissions list, we are making hasPermission always return
      // true for "owners". This gives owners global access.
      // TODO: Review this way of granting global access for owners


      permissions.push("owner");
      permissions = _uniq(permissions); //
      // return if user has permissions in the group
      //

      if (Roles.userIsInRole(userId, permissions, group)) {
        return true;
      } // global roles check
      // TODO: Review this commented out code

      /*
       const sellerShopPermissions = Roles.getGroupsForUser(userId, "admin");
      // we're looking for seller permissions.
      if (sellerShopPermissions) {
        // loop through shops roles and check permissions
        for (const key in sellerShopPermissions) {
          if (key) {
            const shop = sellerShopPermissions[key];
            if (Roles.userIsInRole(userId, permissions, shop)) {
              return true;
            }
          }
        }
      }*/
      // no specific permissions found returning false


      return false;
    } //
    // check if a user id has been found
    // in line 156 setTimeout
    //


    function validateUserId() {
      if (Meteor.userId()) {
        Meteor.clearTimeout(id);
        Router.reload();
        return roleCheck();
      }

      return false;
    } //
    // actual logic block to check permissions
    // we'll bypass unecessary checks during
    // a user logging, as we'll check again
    // when everything is ready
    //


    var loggingIn;
    Tracker.nonreactive(function () {
      loggingIn = MeteorAccounts.loggingIn();
    });

    if (loggingIn === false) {
      //
      // this userId check happens because when logout
      // occurs it takes a few cycles for a new anonymous user
      // to get created and during this time the user has no
      // permission, not even guest permissions so we
      // need to wait and reload the routes. This
      // mainly affects the logout from dashboard pages
      //
      if (!userId) {
        id = Meteor.setTimeout(validateUserId, 5000);
      } else {
        return roleCheck();
      }
    } // return false to be safe


    return false;
  },

  /**
   * hasDashboardAccessForAnyShop - client
   * client permission check for any "owner", "admin", or "dashboard" permissions for any shop.
   *
   * @todo This could be faster with a dedicated hasAdminDashboard boolean on the user object
   * @param { Object } options - options object that can be passed a user and/or a set of permissions
   * @return {Boolean} Boolean - true if has dashboard access for any shop
   */
  hasDashboardAccessForAnyShop: function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      user: Meteor.user(),
      permissions: ["owner", "admin", "dashboard"]
    };
    var user = options.user,
        permissions = options.permissions;

    if (!user || !user.roles) {
      return false;
    } // Nested find that determines if a user has any of the permissions
    // specified in the `permissions` array for any shop


    var hasPermissions = Object.keys(user.roles).find(function (shopId) {
      return user.roles[shopId].find(function (role) {
        return permissions.find(function (permission) {
          return permission === role;
        });
      });
    }); // Find returns undefined if nothing is found.
    // This will return true if permissions are found, false otherwise

    return typeof hasPermissions !== "undefined";
  },

  /**
   * hasDashboardAccessForAnyShop - client
   * @summary - client permission check for any "owner", "admin", or "dashboard" permissions for more than one shop.
   * @return {Boolean} Boolean - true if has dashboard access for more than one shop
   */
  hasDashboardAccessForMultipleShops: function () {
    var adminShopIds = this.getShopsForUser(["owner", "admin", "dashboard"]);
    return Array.isArray(adminShopIds) && adminShopIds.length > 1;
  },
  hasOwnerAccess: function () {
    var ownerPermissions = ["owner"];
    return this.hasPermission(ownerPermissions);
  },

  /**
   * Checks to see if the user has admin permissions. If a shopId is optionally
   * passed in, we check for that shopId, otherwise we check against the default
   * @method hasAdminAccess
   * @param  {string} [shopId] Optional shopId to check access against
   * @return {Boolean} true if the user has admin or owner permission,
   *                   otherwise false
   */
  hasAdminAccess: function (shopId) {
    var adminPermissions = ["owner", "admin"];

    if (shopId) {
      return this.hasPermission(adminPermissions, Meteor.userId(), shopId);
    }

    return this.hasPermission(adminPermissions);
  },
  hasDashboardAccess: function () {
    var dashboardPermissions = ["owner", "admin", "dashboard"];
    return this.hasPermission(dashboardPermissions);
  },
  hasShopSwitcherAccess: function () {
    return this.hasDashboardAccessForMultipleShops();
  },
  getSellerShopId: function () {
    var userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Meteor.userId();
    var noFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (userId) {
      var _group = Roles.getGroupsForUser(userId, "admin")[0];

      if (_group) {
        return _group;
      }
    }

    if (noFallback) {
      return false;
    }

    return this.getShopId();
  },
  getUserPreferences: function (packageName, preference, defaultValue) {
    getDep(packageName + "." + preference).depend();

    if (Meteor.user()) {
      var packageSettings = store.get(packageName); // packageSettings[preference] should not be undefined or null.

      if (packageSettings && typeof packageSettings[preference] !== "undefined" && packageSettings[preference] !== null) {
        return packageSettings[preference];
      }
    }

    return defaultValue || undefined;
  },
  setUserPreferences: function (packageName, preference, value) {
    getDep(packageName + "." + preference).changed(); // User preferences are not stored in Meteor.user().profile
    // to prevent all autorun() with dependency on Meteor.user() to run again.

    if (Meteor.user()) {
      // "reaction" package settings should be synced to
      // the Accounts collection.
      var syncedPackages = ["reaction"];

      if (syncedPackages.indexOf(packageName) > -1) {
        var _$set;

        Accounts.update(Meteor.userId(), {
          $set: (_$set = {}, _$set["profile.preferences." + packageName + "." + preference] = value, _$set)
        });
      }
    }

    var packageSettings = store.get(packageName) || {};
    packageSettings[preference] = value;
    return store.set(packageName, packageSettings);
  },
  updateUserPreferences: function (packageName, preference, values) {
    var currentPreference = this.getUserPreferences(packageName, preference, {});
    return this.setUserPreferences(packageName, preference, (0, _objectSpread2.default)({}, currentPreference, values));
  },

  // primaryShopId is the first created shop. In a marketplace setting it's
  // the shop that controls the marketplace and can see all other shops.
  get primaryShopId() {
    return this._primaryShopId.get();
  },

  set primaryShopId(shopId) {
    this._primaryShopId.set(shopId);
  },

  getPrimaryShopId: function () {
    return this.primaryShopId;
  },
  getPrimaryShopName: function () {
    var shopId = this.getPrimaryShopId();
    var shop = Shops.findOne({
      _id: shopId
    });

    if (shop && shop.name) {
      return shop.name;
    } // If we can't find the primaryShop return an empty string


    return "";
  },
  // Primary Shop should probably not have a prefix (or should it be /shop?)
  getPrimaryShopPrefix: function () {
    return "/" + this.getSlug(this.getPrimaryShopName().toLowerCase());
  },
  getPrimaryShopSettings: function () {
    var settings = Packages.findOne({
      name: "core",
      shopId: this.getPrimaryShopId()
    }) || {};
    return settings.settings || {};
  },
  getPrimaryShopCurrency: function () {
    var shop = Shops.findOne({
      _id: this.getPrimaryShopId()
    });
    return shop && shop.currency || "USD";
  },

  // shopId refers to the active shop. For most shoppers this will be the same
  // as the primary shop, but for administrators this will usually be the shop
  // they administer.
  get shopId() {
    return this._shopId.get();
  },

  getShopId: function () {
    return this.shopId || this.getUserPreferences("reaction", "activeShopId");
  },

  set shopId(id) {
    this._shopId.set(id);
  },

  setShopId: function (id) {
    if (!id || this.shopId === id) {
      return;
    }

    this.shopId = id;
    this.setUserPreferences("reaction", "activeShopId", id);
    Meteor.call("shop/resetShopId");
  },

  /**
   * getShopName
   * @summary gets name of shop by provided shopId, or current active shop if shopId is not provided
   * @param {String} providedShopID - shopId of shop to return name of
   * @return {String} - shop name
   */
  getShopName: function (providedShopId) {
    var shopId = providedShopId || this.getShopId();
    var shop = Shops.findOne({
      _id: shopId
    });
    return shop && shop.name;
  },
  getShopPrefix: function () {
    var shopName = this.getShopName();

    if (shopName) {
      return Router.pathFor("index", {
        hash: {
          shopSlug: this.getSlug(shopName.toLowerCase())
        }
      });
    }
  },
  getShopSettings: function () {
    var settings = Packages.findOne({
      name: "core",
      shopId: this.shopId
    }) || {};
    return settings.settings || {};
  },
  getShopCurrency: function () {
    var shop = Shops.findOne({
      _id: this.shopId
    });
    return shop && shop.currency || "USD";
  },
  isPreview: function () {
    var viewAs = this.getUserPreferences("reaction-dashboard", "viewAs", "administrator");

    if (viewAs === "customer") {
      return true;
    }

    return false;
  },
  getPackageSettings: function (name) {
    var shopId = this.getShopId();
    var query = {
      name: name
    };

    if (shopId) {
      query.shopId = shopId;
    }

    return Packages.findOne(query);
  },
  getPackageSettingsWithOptions: function (options) {
    var query = options;
    return Packages.findOne(query);
  },
  allowGuestCheckout: function () {
    var settings = this.getShopSettings(); // we can disable in admin, let's check.

    return !!(settings.public && settings.public.allowGuestCheckout);
  },

  /**
   * canInviteToGroup - client (similar to server/api canInviteToGroup)
   * @summary checks if the user making the request is allowed to make invitation to that group
   * @param {Object} options -
   * @param {Object} options.group - group to invite to
   * @param {Object} options.user - user object  making the invite (Meteor.user())
   * @return {Boolean} -
   */
  canInviteToGroup: function (options) {
    var group = options.group;
    var user = options.user;

    if (!user) {
      user = Meteor.user();
    }

    var userPermissions = user.roles[group.shopId];
    var groupPermissions = group.permissions; // granting invitation right for user with `owner` role in a shop

    if (this.hasPermission(["owner"], Meteor.userId(), group.shopId)) {
      return true;
    } // checks that userPermissions includes all elements from groupPermissions
    // we are not using Reaction.hasPermission here because it returns true if the user has at least one


    return _difference(groupPermissions, userPermissions).length === 0;
  },

  /**
   * @description showActionView
   *
   * @param {String} viewData {label, template, data}
   * @returns {String} Session "admin/showActionView"
   */
  showActionView: function (viewData) {
    Session.set("admin/showActionView", true);
    this.setActionView(viewData);
  },
  isActionViewOpen: function () {
    return Session.equals("admin/showActionView", true);
  },
  isActionViewDetailOpen: function () {
    return Session.equals("admin/showActionViewDetail", true);
  },
  setActionView: function (viewData) {
    this.hideActionViewDetail();

    if (viewData) {
      var viewStack;

      if (Array.isArray(viewData)) {
        viewStack = viewData;
      } else {
        viewStack = [viewData];
      }

      Session.set("admin/actionView", viewStack);
    } else {
      var registryItem = this.getRegistryForCurrentRoute("settings");

      if (registryItem) {
        this.setActionView(registryItem);
      } else {
        this.setActionView({
          template: "blankControls"
        });
      }
    }
  },
  pushActionView: function (viewData) {
    Session.set("admin/showActionView", true);
    var actionViewStack = Session.get("admin/actionView");

    if (viewData) {
      actionViewStack.push(viewData);
      Session.set("admin/actionView", actionViewStack);
    } else {
      var registryItem = this.getRegistryForCurrentRoute("settings");

      if (registryItem) {
        this.pushActionView(registryItem);
      } else {
        this.pushActionView({
          template: "blankControls"
        });
      }
    }
  },
  isActionViewAtRootView: function () {
    var actionViewStack = Session.get("admin/actionView");

    if (Array.isArray(actionViewStack) && actionViewStack.length === 1) {
      return true;
    }

    return false;
  },
  popActionView: function () {
    var actionViewStack = Session.get("admin/actionView");
    actionViewStack.pop();
    Session.set("admin/actionView", actionViewStack);
    this.setActionViewDetail({}, {
      open: false
    });
  },
  setActionViewDetail: function (viewData) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var open = options.open;
    Session.set("admin/showActionView", true);
    Session.set("admin/showActionViewDetail", typeof open === "boolean" ? open : true);
    Session.set("admin/detailView", [viewData]);
  },
  pushActionViewDetail: function (viewData) {
    Session.set("admin/showActionView", true);
    Session.set("admin/showActionViewDetail", true);
    var detailViewStack = Session.get("admin/detailView");

    if (viewData) {
      detailViewStack.push(viewData);
      Session.set("admin/detailView", detailViewStack);
    }
  },
  popActionViewDetail: function () {
    var detailViewStack = Session.get("admin/detailView");
    detailViewStack.pop();
    Session.set("admin/detailView", detailViewStack);
  },
  isActionViewDetailAtRootView: function () {
    var actionViewDetailStack = Session.get("admin/detailView");

    if (Array.isArray(actionViewDetailStack) && actionViewDetailStack.length === 1) {
      return true;
    }

    return false;
  },
  getActionView: function () {
    var actionViewStack = Session.get("admin/actionView");

    if (Array.isArray(actionViewStack) && actionViewStack.length) {
      return actionViewStack.pop();
    }

    return {};
  },
  getActionViewDetail: function () {
    var detailViewStack = Session.get("admin/detailView");

    if (Array.isArray(detailViewStack) && detailViewStack.length) {
      return detailViewStack.pop();
    }

    return {};
  },
  hideActionView: function () {
    Session.set("admin/showActionView", false);
    this.clearActionView();
  },
  hideActionViewDetail: function () {
    Session.set("admin/showActionViewDetail", false);
    this.clearActionViewDetail();
  },
  clearActionView: function () {
    Session.set("admin/actionView", [{
      label: "",
      i18nKeyLabel: ""
    }]);
    Session.set("admin/detailView", [{
      label: "",
      i18nKeyLabel: ""
    }]);
  },
  clearActionViewDetail: function () {
    Session.set("admin/detailView", [{
      label: "",
      i18nKeyLabel: ""
    }]);
  },
  getCurrentTag: function () {
    if (this.Router.getRouteName() === "tag") {
      return this.Router.current().params.slug;
    }
  },
  getRegistryForCurrentRoute: function () {
    var provides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "dashboard";
    this.Router.watchPathChange();
    var currentRouteName = this.Router.getRouteName();
    var currentRoute = this.Router.current();
    var template = currentRoute.route.options.template; // find registry entries for routeName

    var reactionApp = Packages.findOne({
      "registry.name": currentRouteName,
      "registry.provides": provides,
      "enabled": true
    }, {
      enabled: 1,
      registry: 1,
      route: 1,
      name: 1,
      label: 1,
      settings: 1
    }); // valid application

    if (reactionApp) {
      var settingsData = _find(reactionApp.registry, function (item) {
        return item.provides && item.provides.includes(provides) && item.template === template;
      });

      return settingsData;
    }

    Logger.debug("getRegistryForCurrentRoute not found", template, provides);
    return {};
  },

  /**
   * getMarketplaceSettingsFromPackages finds the enabled `reaction-marketplace` package for
   * the primary shop and returns the settings
   * @method getMarketplaceSettingsFromPackages
   * @return {Object} The marketplace settings from the primary shop or undefined
   */
  getMarketplaceSettings: function () {
    var marketplaceSettings = Packages.findOne({
      name: "reaction-marketplace",
      shopId: this.getPrimaryShopId(),
      // the primary shop always owns the marketplace settings
      enabled: true // only use the marketplace settings if marketplace is enabled

    });
    return marketplaceSettings && marketplaceSettings.settings;
  }
});

/**
 * createCountryCollection
 * Create a client-side only collection of Countries for a dropdown form
 * properly sorted*
 * @param {Object} countries -  The countries array on the Shop collection
 * @returns {Array} countryOptions - Sorted array of countries
 */
function createCountryCollection(countries) {
  check(countries, Object);
  var countryOptions = [];

  for (var locale in meteorBabelHelpers.sanitizeForInObject(countries)) {
    if ({}.hasOwnProperty.call(countries, locale)) {
      var country = countries[locale];
      countryOptions.push({
        label: country.name,
        value: locale
      });
    }
  }

  countryOptions.sort(function (a, b) {
    if (a.label < b.label) {
      return -1;
    }

    if (a.label > b.label) {
      return 1;
    }

    return 0;
  });

  for (var _i2 = 0; _i2 < countryOptions.length; _i2++) {
    var _country = countryOptions[_i2];
    Countries.insert(_country);
  }

  return countryOptions;
}
/**
 * getDep
 * Gets the dependency for the key if available, else creates
 * a new dependency for the key and returns it.
 * @param {String} -  The key to get the dependency for
 * @returns {Tracker.Dependency}
 */


function getDep(key) {
  if (!deps.has(key)) {
    deps.set(key, new Tracker.Dependency());
  }

  return deps.get(key);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"i18n":{"currency.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/i18n/currency.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

module.export({
  findCurrency: function () {
    return findCurrency;
  },
  formatPriceString: function () {
    return formatPriceString;
  },
  formatNumber: function () {
    return formatNumber;
  }
});
var accounting;
module.watch(require("accounting-js"), {
  "default": function (v) {
    accounting = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Reaction, Logger;
module.watch(require("../../api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Logger: function (v) {
    Logger = v;
  }
}, 2);
var Shops, Accounts;
module.watch(require("../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  },
  Accounts: function (v) {
    Accounts = v;
  }
}, 3);
var currencyDep;
module.watch(require("./main"), {
  currencyDep: function (v) {
    currencyDep = v;
  }
}, 4);

function findCurrency(defaultCurrency, useDefaultShopCurrency) {
  var shop = Shops.findOne(Reaction.getPrimaryShopId(), {
    fields: {
      currencies: 1,
      currency: 1
    }
  });
  var shopCurrency = shop && shop.currency || "USD";
  var user = Accounts.findOne({
    _id: Meteor.userId()
  });
  var profileCurrency = user && user.profile && user.profile.currency;

  if ((0, _typeof2.default)(shop) === "object" && shop.currencies && profileCurrency) {
    var _userCurrency = {};

    if (shop.currencies[profileCurrency]) {
      if (useDefaultShopCurrency) {
        _userCurrency = shop.currencies[shop.currency];
        _userCurrency.exchangeRate = 1;
      } else {
        _userCurrency = shop.currencies[profileCurrency];
        _userCurrency.exchangeRate = shop.currencies[profileCurrency].rate;
      }
    }

    return _userCurrency;
  }

  return shop.currencies[shopCurrency];
}

function formatPriceString(formatPrice, useDefaultShopCurrency) {
  var defaultShopCurrency = useDefaultShopCurrency; // in case useDefaultShopCurrency is a Spacebars.kw we have this check

  if ((0, _typeof2.default)(useDefaultShopCurrency) === "object" || !useDefaultShopCurrency) {
    defaultShopCurrency = false;
  }

  currencyDep.depend();
  var locale = Reaction.Locale.get();

  if ((0, _typeof2.default)(locale) !== "object" || (0, _typeof2.default)(locale.currency) !== "object") {
    // locale not yet loaded, so we don"t need to return anything.
    return false;
  }

  if (typeof formatPrice !== "string" && typeof formatPrice !== "number") {
    return false;
  } // get user currency instead of locale currency


  var userCurrency = findCurrency(locale.currency, defaultShopCurrency); // for the cases then we have only one price. It is a number.

  var currentPrice = formatPrice.toString();
  var price = 0;
  var prices = currentPrice.indexOf(" - ") >= 0 ? currentPrice.split(" - ") : [currentPrice]; // basic "for" is faster then "for ...of" for arrays. We need more speed here

  var len = prices.length;

  for (var i = 0; i < len; i += 1) {
    var originalPrice = prices[i];

    try {
      // we know the locale, but we don"t know exchange rate. In that case we
      // should return to default shop currency
      if (typeof userCurrency.rate !== "number") {
        throw new Meteor.Error("invalid-exchange-rate", "Exchange rate is invalid");
      } // Only convert for non-admin view.


      if (!defaultShopCurrency) {
        prices[i] *= userCurrency.rate;
      }

      price = _formatPrice(price, originalPrice, prices[i], currentPrice, userCurrency, i, len);
    } catch (error) {
      Logger.debug("currency error, fallback to shop currency");
      price = _formatPrice(price, originalPrice, prices[i], currentPrice, locale.shopCurrency, i, len);
    }
  }

  return price;
}

function formatNumber(currentPrice) {
  var locale = Reaction.Locale.get();
  var price = currentPrice;
  var format = Object.assign({}, locale.currency, {
    format: "%v"
  });
  var shopFormat = Object.assign({}, locale.shopCurrency, {
    format: "%v"
  });

  if ((0, _typeof2.default)(locale.currency) === "object" && locale.currency.rate) {
    price = currentPrice * locale.currency.rate;
    return accounting.formatMoney(price, format);
  }

  Logger.debug("currency error, fallback to shop currency");
  return accounting.formatMoney(currentPrice, shopFormat);
}

/**
 * _formatPrice
 * private function for formatting locale currency
 * @private
 * @param  {Number} price         price
 * @param  {Number} originalPrice originalPrice
 * @param  {Number} actualPrice   actualPrice
 * @param  {Number} currentPrice  currentPrice
 * @param  {Number} currency      currency
 * @param  {Number} pos           position
 * @param  {Number} len           length
 * @return {Number}               formatted price
 */
function _formatPrice(price, originalPrice, actualPrice, currentPrice, currency, pos, len) {
  // this checking for locale.shopCurrency mostly
  if ((0, _typeof2.default)(currency) !== "object") {
    return false;
  }

  var adjustedPrice = actualPrice;
  var formattedPrice; // Precision is mis-used in accounting js. Scale is the propery term for number
  // of decimal places. Let's adjust it here so accounting.js does not break.

  if (currency.scale !== undefined) {
    currency.precision = currency.scale;
  } // If there are no decimal places, in the case of the Japanese Yen, we adjust it here.


  if (currency.scale === 0) {
    adjustedPrice = actualPrice * 100;
  } // @param {string} currency.where: If it presents - in situation then two
  // prices in string, currency sign will be placed just outside the right price.
  // For now it should be manually added to fixtures shop data.


  if (typeof currency.where === "string" && currency.where === "right" && len > 1 && pos === 0) {
    var modifiedCurrency = Object.assign({}, currency, {
      symbol: ""
    });
    formattedPrice = accounting.formatMoney(adjustedPrice, modifiedCurrency);
  } else {
    // accounting api: http://openexchangerates.github.io/accounting.js/
    formattedPrice = accounting.formatMoney(adjustedPrice, currency);
  }

  return price === 0 ? currentPrice.replace(originalPrice, formattedPrice) : price.replace(originalPrice, formattedPrice);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/i18n/helpers.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 0);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 1);
var check, Match;
module.watch(require("meteor/check"), {
  check: function (v) {
    check = v;
  },
  Match: function (v) {
    Match = v;
  }
}, 2);
var Reaction, Logger, i18next;
module.watch(require("../../api"), {
  Reaction: function (v) {
    Reaction = v;
  },
  Logger: function (v) {
    Logger = v;
  },
  i18next: function (v) {
    i18next = v;
  }
}, 3);
var Shops, Accounts;
module.watch(require("../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  },
  Accounts: function (v) {
    Accounts = v;
  }
}, 4);
var localeDep, i18nextDep;
module.watch(require("./main"), {
  localeDep: function (v) {
    localeDep = v;
  },
  i18nextDep: function (v) {
    i18nextDep = v;
  }
}, 5);
var formatPriceString;
module.watch(require("./currency"), {
  formatPriceString: function (v) {
    formatPriceString = v;
  }
}, 6);

/**
 * @name i18n
 * @see http://i18next.com/
 * @summary Pass the translation key as the first argument and the default message as the second argument
 * @memberof i18n
 * @method
 * @param {String} i18nKey - i18nKey
 * @param {String} i18nMessage - message text
 * @example {{i18n "accountsTemplate.error" "Invalid Email"}}
 * @return {String} returns i18n translated message
 */
Template.registerHelper("i18n", function (i18nKey, i18nMessage) {
  if (!i18nKey || typeof i18nMessage !== "string") {
    Logger.warn("i18n key string required to translate", i18nKey, i18nMessage);
    return "";
  }

  check(i18nKey, String);
  check(i18nMessage, String);
  i18nextDep.depend(); // returning translated key

  return i18next.t(i18nKey, {
    defaultValue: i18nMessage
  });
});
/**
 * @name currencySymbol
 * @memberof i18n
 * @method
 * @summary Eeturn shop /locale specific currency format (ie: $)
 * @returns {String} return current locale currency symbol
 */

Template.registerHelper("currencySymbol", function () {
  var locale = Reaction.Locale.get();
  var user = Accounts.findOne({
    _id: Meteor.userId()
  });
  var profileCurrency = user.profile && user.profile.currency;

  if (profileCurrency) {
    var shop = Shops.findOne();

    if (Match.test(shop, Object) && shop.currencies) {
      return shop.currencies[profileCurrency].symbol;
    }
  }

  return locale.currency.symbol;
});
/**
 * @name formatPrice
 * @memberof i18n
 * @method
 * @summary Return shop /locale specific formatted price. Also accepts a range formatted with " - "
 * @example {{formatPrice displayPrice}}
 * @param {String} currentPrice - currentPrice or "xx.xx - xx.xx" formatted String
 * @param {Boolean} useDefaultShopCurrency - flag for displaying shop's currency in Admin view of PDP
 * @return {String} returns locale formatted and exchange rate converted values
 */

Template.registerHelper("formatPrice", function (formatPrice, useDefaultShopCurrency) {
  localeDep.depend();
  return formatPriceString(formatPrice, useDefaultShopCurrency);
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/i18n/index.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  i18next: function () {
    return i18next;
  },
  getBrowserLanguage: function () {
    return getBrowserLanguage;
  },
  i18nextDep: function () {
    return i18nextDep;
  },
  localeDep: function () {
    return localeDep;
  },
  currencyDep: function () {
    return currencyDep;
  }
});
var i18next, getBrowserLanguage, i18nextDep, localeDep, currencyDep;
module.watch(require("./main"), {
  "default": function (v) {
    i18next = v;
  },
  getBrowserLanguage: function (v) {
    getBrowserLanguage = v;
  },
  i18nextDep: function (v) {
    i18nextDep = v;
  },
  localeDep: function (v) {
    localeDep = v;
  },
  currencyDep: function (v) {
    currencyDep = v;
  }
}, 0);
module.watch(require("./currency"), {
  "*": module.makeNsSetter()
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"startup.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/i18n/startup.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var i18nextBrowserLanguageDetector;
module.watch(require("i18next-browser-languagedetector"), {
  "default": function (v) {
    i18nextBrowserLanguageDetector = v;
  }
}, 0);
var i18nextLocalStorageCache;
module.watch(require("i18next-localstorage-cache"), {
  "default": function (v) {
    i18nextLocalStorageCache = v;
  }
}, 1);
var i18nextSprintfPostProcessor;
module.watch(require("i18next-sprintf-postprocessor"), {
  "default": function (v) {
    i18nextSprintfPostProcessor = v;
  }
}, 2);
var i18nextJquery;
module.watch(require("jquery-i18next"), {
  "default": function (v) {
    i18nextJquery = v;
  }
}, 3);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 4);
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 5);
var $;
module.watch(require("meteor/jquery"), {
  $: function (v) {
    $ = v;
  }
}, 6);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 7);
var ReactiveVar;
module.watch(require("meteor/reactive-var"), {
  ReactiveVar: function (v) {
    ReactiveVar = v;
  }
}, 8);
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 9);
var Reaction;
module.watch(require("../../api"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 10);
var Shops, Translations, Packages;
module.watch(require("../../../lib/collections"), {
  Shops: function (v) {
    Shops = v;
  },
  Translations: function (v) {
    Translations = v;
  },
  Packages: function (v) {
    Packages = v;
  }
}, 11);
var Schemas;
module.watch(require("@reactioncommerce/schemas"), {
  "default": function (v) {
    Schemas = v;
  }
}, 12);
var i18next, getLabelsFor, getValidationErrorMessages, i18nextDep, currencyDep;
module.watch(require("./main"), {
  "default": function (v) {
    i18next = v;
  },
  getLabelsFor: function (v) {
    getLabelsFor = v;
  },
  getValidationErrorMessages: function (v) {
    getValidationErrorMessages = v;
  },
  i18nextDep: function (v) {
    i18nextDep = v;
  },
  currencyDep: function (v) {
    currencyDep = v;
  }
}, 13);
var mergeDeep;
module.watch(require("../../../lib/api"), {
  mergeDeep: function (v) {
    mergeDeep = v;
  }
}, 14);

/**
 * Every schema that feature an expireMonth and an expireYear
 * field will be validated against the dateBeforeNow rule.
 */
SimpleSchema.addValidator(function () {
  var expireMonth;
  var expireYear;
  var sibling;

  if (this.key === "expireMonth") {
    sibling = "expireYear";
    expireMonth = this.value;
    expireYear = this.field(sibling).value;
  }

  if (this.key === "expireYear") {
    sibling = "expireMonth";
    expireMonth = this.field(sibling).value;
    expireYear = this.value;
  }

  if (expireYear && expireMonth) {
    var now = new Date();
    var expire = new Date(expireYear, expireMonth);

    if (now > expire) {
      return "dateBeforeNow";
    } // Remove error message from the other field as well.


    var validationErrors = this.validationContext && this.validationContext._validationErrors;
    var deps = this.validationContext && this.validationContext._deps;

    if (validationErrors) {
      var index = validationErrors.findIndex(function (error) {
        return error.name === sibling && error.type === "dateBeforeNow";
      });

      if (index !== -1) {
        validationErrors.splice(index, 1);
        if (deps) deps[sibling].changed();
      }
    }
  }
});
/**
 * Error messages that are used for all SimpleSchema instances
 * ATM, validation errors are not translated in Reaction in general.
 */

SimpleSchema.setDefaultMessages({
  messages: {
    en: {
      dateBeforeNow: "Dates in the past are not allowed."
    }
  }
}); // setup options for i18nextBrowserLanguageDetector
// note: this isn't fully operational yet
// language is set by user currently
// progress toward detecting language
// should focus around i18nextBrowserLanguageDetector
//

var options = {
  // order and from where user language should be detected
  order: ["querystring", "cookie", "localStorage", "navigator", "htmlTag"],
  // keys or params to lookup language from
  lookupQuerystring: "lng",
  lookupCookie: "i18next",
  lookupLocalStorage: "i18nextLng",
  // cache user language on
  caches: ["localStorage", "cookie"],
  // optional htmlTag with lang attribute, the default is:
  htmlTag: document.documentElement
};
var userProfileLanguage = new ReactiveVar(null);
Meteor.startup(function () {
  // We need to ensure fine-grained reactivity on only the profile.lang because
  // user.profile changed frequently and causes excessive reruns
  Tracker.autorun(function () {
    var userId = Meteor.userId();
    var user = userId && Meteor.users.findOne(userId, {
      fields: {
        profile: 1
      }
    });
    userProfileLanguage.set(user && user.profile && user.profile.lang || null);
  }); // use tracker autorun to detect language changes
  // this only runs on initial page loaded
  // and when user.profile.lang updates

  Tracker.autorun(function () {
    if (!Reaction.Subscriptions.PrimaryShop.ready() || !Reaction.Subscriptions.MerchantShops.ready()) return; // Depend on user.profile.language reactively

    var userLanguage = userProfileLanguage.get(); // Choose shop to get language from

    var shopId;

    if (Reaction.marketplaceEnabled && Reaction.merchantLanguage) {
      shopId = Reaction.getShopId();
    } else {
      shopId = Reaction.getPrimaryShopId();
    } // By specifying "fields", we limit reruns to only when that field changes


    var shop = Shops.findOne({
      _id: shopId
    }, {
      fields: {
        language: 1
      },
      reactive: false
    });
    var shopLanguage = shop && shop.language || null; // Use fallbacks to determine the final language

    var language = userLanguage || shopLanguage || "en"; //
    // subscribe to user + shop Translations
    //

    return Meteor.subscribe("Translations", language, function () {
      // Get the list of packages for that shop
      var packageNamespaces = Packages.find({
        shopId: shopId
      }, {
        fields: {
          name: 1
        }
      }).map(function (pkg) {
        return pkg.name;
      }); //
      // reduce and merge translations
      // into i18next resource format
      //

      var resources = {};
      Translations.find({}).forEach(function (translation) {
        var _mergeDeep;

        resources = mergeDeep(resources, (_mergeDeep = {}, _mergeDeep[translation.i18n] = translation.translation, _mergeDeep));
      }); //
      // initialize i18next
      //

      i18next.use(i18nextBrowserLanguageDetector).use(i18nextLocalStorageCache).use(i18nextSprintfPostProcessor).init({
        detection: options,
        debug: false,
        ns: packageNamespaces,
        // translation namespace for every package
        defaultNS: "core",
        // reaction "core" is the default namespace
        fallbackNS: packageNamespaces,
        lng: language,
        fallbackLng: shopLanguage,
        resources: resources
      }, function () {
        // Loop through registered Schemas to change labels and messages
        for (var schemaName in meteorBabelHelpers.sanitizeForInObject(Schemas)) {
          if ({}.hasOwnProperty.call(Schemas, schemaName)) {
            var _schemaInstance$messa;

            var schemaInstance = Schemas[schemaName];
            schemaInstance.labels(getLabelsFor(schemaInstance, schemaName));
            schemaInstance.messageBox.messages((_schemaInstance$messa = {}, _schemaInstance$messa[language] = getValidationErrorMessages(), _schemaInstance$messa));
            schemaInstance.messageBox.setLanguage(language);
          }
        }

        i18nextDep.changed(); // global first time init event finds and replaces
        // data-i18n attributes in html/template source.

        $("[data-i18n]").localize(); // apply language direction to html

        if (i18next.dir(language) === "rtl") {
          return $("html").addClass("rtl");
        }

        return $("html").removeClass("rtl");
      });
    }); // return
  }); // Detect user currency changes.
  // These two autoruns work together to ensure currencyDep is only considered
  // to be changed when it should be.
  // XXX currencyDep is not used by the main app. Maybe can get rid of this
  // if no add-on packages use it?

  var userCurrency = new ReactiveVar();
  Tracker.autorun(function () {
    // We are using the reactive var only to be sure that currencyDep.changed()
    // is called only when the value is actually changed from the previous value.
    var currency = userCurrency.get();
    if (currency) currencyDep.changed();
  });
  Tracker.autorun(function () {
    var user = Meteor.user();

    if (Reaction.Subscriptions.PrimaryShop.ready() && Reaction.Subscriptions.MerchantShops.ready() && user) {
      userCurrency.set(user.profile && user.profile.currency || undefined);
    }
  }); //
  // init i18nextJquery
  //

  i18nextJquery.init(i18next, $, {
    tName: "t",
    // --> appends $.t = i18next.t
    i18nName: "i18n",
    // --> appends $.i18n = i18next
    handleName: "localize",
    // --> appends $(selector).localize(opts);
    selectorAttr: "data-i18n",
    // selector for translating elements
    targetAttr: "data-i18n-target",
    // element attribute to grab target element to translate (if diffrent then itself)
    parseDefaultValueFromContent: true // parses default values from content ele.val or ele.text

  }); // global onRendered event finds and replaces
  // data-i18n attributes in html/template source.
  // uses methods from i18nextJquery

  Template.onRendered(function () {
    this.autorun(function () {
      return function () {
        i18nextDep.depend();
        $("[data-i18n]").localize();
      };
    }(this));
  });
});
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/i18n/main.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  getBrowserLanguage: function () {
    return getBrowserLanguage;
  },
  getLabelsFor: function () {
    return getLabelsFor;
  },
  getValidationErrorMessages: function () {
    return getValidationErrorMessages;
  },
  i18nextDep: function () {
    return i18nextDep;
  },
  localeDep: function () {
    return localeDep;
  },
  currencyDep: function () {
    return currencyDep;
  }
});

var _values;

module.watch(require("lodash/values"), {
  "default": function (v) {
    _values = v;
  }
}, 0);
var i18next;
module.watch(require("i18next"), {
  "default": function (v) {
    i18next = v;
  }
}, 1);
var SimpleSchema;
module.watch(require("simpl-schema"), {
  "default": function (v) {
    SimpleSchema = v;
  }
}, 2);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 3);
var Tracker;
module.watch(require("meteor/tracker"), {
  Tracker: function (v) {
    Tracker = v;
  }
}, 4);
var Logger, Reaction;
module.watch(require("../../api"), {
  Logger: function (v) {
    Logger = v;
  },
  Reaction: function (v) {
    Reaction = v;
  }
}, 5);

function getBrowserLanguage() {
  if (typeof navigator.languages !== "undefined") {
    if (navigator.languages[0].indexOf("-") >= 0) {
      return navigator.languages[0].split("-")[0];
    } else if (navigator.languages[0].indexOf("_") >= 0) {
      return navigator.languages[0].split("_")[0];
    }

    return navigator.languages[0];
  }

  return navigator.language || navigator.browserLanguage;
}

function getLabelsFor(schema, name) {
  var titleCaseName = name.charAt(0).toLowerCase() + name.slice(1);
  var labels = {}; // loop through all the rendered form fields and generate i18n keys

  Object.keys(schema.mergedSchema()).forEach(function (fieldName) {
    var i18nKey = titleCaseName + "." + fieldName.split(".$").join(""); // translate autoform label

    var t = i18next.t(i18nKey);

    if (t && new RegExp("string").test(t) !== true && t !== i18nKey) {
      labels[fieldName] = t;
    }
  });
  return labels;
}

function getValidationErrorMessages() {
  var messages = {};

  _values(SimpleSchema.ErrorTypes).forEach(function (errorType) {
    var i18nKey = "globalMessages." + errorType;
    var message = i18next.t(i18nKey);

    if (new RegExp("string").test(message) !== true && message !== i18nKey) {
      messages[errorType] = message;
    }
  });

  return messages;
}

var i18nextDep = new Tracker.Dependency();
var localeDep = new Tracker.Dependency();
var currencyDep = new Tracker.Dependency();
Meteor.startup(function () {
  Tracker.autorun(function (c) {
    var merchantShopsReadyOrSkipped = false; // Choose shopSubscription based on marketplace settings

    if (Reaction.marketplaceEnabled && Reaction.merchantLanguage) {
      merchantShopsReadyOrSkipped = Reaction.Subscriptions.MerchantShops.ready();
    } else {
      merchantShopsReadyOrSkipped = true;
    } // setting local and active packageNamespaces
    // packageNamespaces are used to determine i18n namespace


    if (Reaction.Subscriptions.PrimaryShop.ready() && merchantShopsReadyOrSkipped) {
      // use i18n detected language to getLocale info and set it client side
      Meteor.call("shop/getLocale", function (error, result) {
        if (error || !result) {
          Logger.error(error, "Unable to get shop locale");
          return;
        }

        var locale = result;
        locale.language = getBrowserLanguage();
        Reaction.Locale.set(locale);
        localeDep.changed(); // Stop the tracker

        c.stop();
      });
    }
  });
});
module.exportDefault(i18next);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"logger":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/logger/index.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var module1 = module;
var bunyan;
module1.watch(require("@reactioncommerce/logger"), {
  bunyan: function (v) {
    bunyan = v;
  }
}, 0);
var Meteor;
module1.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);

/*
 * configure bunyan logging module for reaction client
 * See: https://github.com/trentm/node-bunyan#levels
 * client we'll cofigure WARN as default
 */
var levels = ["FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"]; // set stdout log level

var level = Meteor.settings.public.REACTION_LOG_LEVEL || "WARN";
level = level.toUpperCase();

if (!levels.includes(level)) {
  level = "WARN";
}

var Logger = bunyan.createLogger({
  name: "reaction-client",
  level: level
});
module1.exportDefault(Logger);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"router":{"helpers.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/router/helpers.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Template;
module.watch(require("meteor/templating"), {
  Template: function (v) {
    Template = v;
  }
}, 0);
var Meteor;
module.watch(require("meteor/meteor"), {
  Meteor: function (v) {
    Meteor = v;
  }
}, 1);
var Router;
module.watch(require("./main"), {
  "default": function (v) {
    Router = v;
  }
}, 2);
//
// pathFor
// template helper to return path
//
Template.registerHelper("pathFor", Router.pathFor); //
// urlFor
// template helper to return absolute + path
//

Template.registerHelper("urlFor", function (path, params) {
  return Meteor.absoluteUrl(Router.pathFor(path, params).substr(1));
});
Template.registerHelper("active", Router.isActiveClassName);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hooks.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/router/hooks.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("../../../imports/plugins/core/router/lib/hooks"), {
  "default": function (v) {
    exports.default = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/router/index.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("../../../imports/plugins/core/router/lib/router"), {
  "default": function (v) {
    exports.Router = v;
  }
}, 0);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"main.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/router/main.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var Router;
module.watch(require("../../../imports/plugins/core/router/lib"), {
  Router: function (v) {
    Router = v;
  }
}, 0);
module.exportDefault(Router);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"index.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/modules/index.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"api":{"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/api/index.js                                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Reaction: function () {
    return Reaction;
  },
  Router: function () {
    return Router;
  }
});
var Reaction;
module.watch(require("../modules/core"), {
  Reaction: function (v) {
    Reaction = v;
  }
}, 0);
var Router;
module.watch(require("../modules/router"), {
  Router: function (v) {
    Router = v;
  }
}, 1);
module.watch(require("../modules/i18n"), {
  "*": module.makeNsSetter()
}, 2);
module.watch(require("../modules/logger"), {
  "default": function (v) {
    exports.Logger = v;
  }
}, 3);
window.ReactionCore = Reaction;
window.ReactionRouter = Router;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections":{"countries.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/collections/countries.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  Countries: function () {
    return Countries;
  }
});
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 0);
var Countries = new Mongo.Collection(null);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"index.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/collections/index.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("./countries"), {
  "*": module.makeNsSetter()
}, 0);
module.watch(require("./taxEntitycodes"), {
  "*": module.makeNsSetter()
}, 1);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"taxEntitycodes.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/collections/taxEntitycodes.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  TaxEntityCodes: function () {
    return TaxEntityCodes;
  }
});
var Mongo;
module.watch(require("meteor/mongo"), {
  Mongo: function (v) {
    Mongo = v;
  }
}, 0);
var TaxEntityCodes = new Mongo.Collection(null);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"config":{"defaults.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/config/defaults.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.export({
  DEFAULT_LAYOUT: function () {
    return DEFAULT_LAYOUT;
  },
  DEFAULT_WORKFLOW: function () {
    return DEFAULT_WORKFLOW;
  },
  INDEX_OPTIONS: function () {
    return INDEX_OPTIONS;
  },
  ITEMS_INCREMENT: function () {
    return ITEMS_INCREMENT;
  }
});
var Session;
module.watch(require("meteor/session"), {
  Session: function (v) {
    Session = v;
  }
}, 0);
var AutoForm;
module.watch(require("meteor/aldeed:autoform"), {
  AutoForm: function (v) {
    AutoForm = v;
  }
}, 1);
var DEFAULT_LAYOUT = "coreLayout";
var DEFAULT_WORKFLOW = "coreWorkflow";
var INDEX_OPTIONS = {
  workflow: "coreProductGridWorkflow"
};
var ITEMS_INCREMENT = 24;

/**
 * Set Reaction layout defaults
 */
Session.setDefault("DEFAULT_LAYOUT", DEFAULT_LAYOUT);
Session.setDefault("DEFAULT_WORKFLOW", DEFAULT_WORKFLOW);
Session.setDefault("INDEX_OPTIONS", INDEX_OPTIONS);
Session.setDefault("productScrollLimit", ITEMS_INCREMENT);
/**
 * Autoform default template
 */

AutoForm.setDefaultTemplate("bootstrap3");
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"plugins.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// client/plugins.js                                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
module.watch(require("../imports/plugins/core/accounts/client"));
module.watch(require("../imports/plugins/core/catalog/client"));
module.watch(require("../imports/plugins/core/checkout/client"));
module.watch(require("../imports/plugins/core/connectors/client"));
module.watch(require("../imports/plugins/core/dashboard/client"));
module.watch(require("../imports/plugins/core/dom/client"));
module.watch(require("../imports/plugins/core/email/client"));
module.watch(require("../imports/plugins/core/files/client"));
module.watch(require("../imports/plugins/core/i18n/client"));
module.watch(require("../imports/plugins/core/layout/client"));
module.watch(require("../imports/plugins/core/orders/client"));
module.watch(require("../imports/plugins/core/payments/client"));
module.watch(require("../imports/plugins/core/revisions/client"));
module.watch(require("../imports/plugins/core/router/client"));
module.watch(require("../imports/plugins/core/shipping/client"));
module.watch(require("../imports/plugins/core/taxes/client"));
module.watch(require("../imports/plugins/core/templates/client"));
module.watch(require("../imports/plugins/core/ui/client"));
module.watch(require("../imports/plugins/core/ui-navbar/client"));
module.watch(require("../imports/plugins/core/ui-tagnav/client"));
module.watch(require("../imports/plugins/included/connectors-shopify/client"));
module.watch(require("../imports/plugins/included/default-theme/client"));
module.watch(require("../imports/plugins/included/discount-codes/client"));
module.watch(require("../imports/plugins/included/discount-rates/client"));
module.watch(require("../imports/plugins/included/inventory/client"));
module.watch(require("../imports/plugins/included/marketplace/client"));
module.watch(require("../imports/plugins/included/notifications/client"));
module.watch(require("../imports/plugins/included/payments-authnet/client"));
module.watch(require("../imports/plugins/included/payments-braintree/client"));
module.watch(require("../imports/plugins/included/payments-paypal/client"));
module.watch(require("../imports/plugins/included/payments-stripe/client"));
module.watch(require("../imports/plugins/included/product-admin/client"));
module.watch(require("../imports/plugins/included/product-detail-simple/client"));
module.watch(require("../imports/plugins/included/product-variant/client"));
module.watch(require("../imports/plugins/included/search-mongo/client"));
module.watch(require("../imports/plugins/included/shipping-rates/client"));
module.watch(require("../imports/plugins/included/shipping-shippo/client"));
module.watch(require("../imports/plugins/included/sms/client"));
module.watch(require("../imports/plugins/included/social/client"));
module.watch(require("../imports/plugins/included/taxes-avalara/client"));
module.watch(require("../imports/plugins/included/taxes-taxcloud/client"));
module.watch(require("../imports/plugins/included/taxes-taxjar/client"));
module.watch(require("../imports/plugins/included/ui-search/client"));
module.watch(require("../imports/plugins/custom/knowledge-payments/client"));
module.watch(require("../imports/plugins/custom/knowledge-theme/client"));
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},{
  "extensions": [
    ".js",
    ".json",
    ".html",
    ".jade",
    ".css",
    ".less",
    ".jsx"
  ]
});
require("/lib/api/router/metadata.js");
require("/lib/collections/schemas/accounts.js");
require("/lib/collections/schemas/address.js");
require("/lib/collections/schemas/assets.js");
require("/lib/collections/schemas/cart.js");
require("/lib/collections/schemas/catalog.js");
require("/lib/collections/schemas/emails.js");
require("/lib/collections/schemas/event.js");
require("/lib/collections/schemas/groups.js");
require("/lib/collections/schemas/helpers.js");
require("/lib/collections/schemas/index.js");
require("/lib/collections/schemas/inventory.js");
require("/lib/collections/schemas/layouts.js");
require("/lib/collections/schemas/logs.js");
require("/lib/collections/schemas/metafield.js");
require("/lib/collections/schemas/notifications.js");
require("/lib/collections/schemas/orders.js");
require("/lib/collections/schemas/payments.js");
require("/lib/collections/schemas/products.js");
require("/lib/collections/schemas/registry.js");
require("/lib/collections/schemas/revisions.js");
require("/lib/collections/schemas/shipping.js");
require("/lib/collections/schemas/shops.js");
require("/lib/collections/schemas/sms.js");
require("/lib/collections/schemas/social.js");
require("/lib/collections/schemas/tags.js");
require("/lib/collections/schemas/templates.js");
require("/lib/collections/schemas/translations.js");
require("/lib/collections/schemas/workflow.js");
require("/lib/collections/transform/cartOrder.js");
require("/client/lib/buffer.js");
require("/lib/api/account-validation.js");
require("/lib/api/catalog.js");
require("/lib/api/core.js");
require("/lib/api/helpers.js");
require("/lib/api/index.js");
require("/lib/api/match.js");
require("/lib/api/products.js");
require("/lib/api/prop-types.js");
require("/lib/collections/collections.js");
require("/lib/collections/index.js");
require("/lib/collections/jobs.js");
require("/lib/collections/search.js");
require("/lib/core/templates.js");
require("/lib/selectors/tags.js");
require("/lib/selectors/variants.js");
require("/client/modules/core/helpers/apps.js");
require("/client/modules/core/helpers/globals.js");
require("/client/modules/core/helpers/layout.js");
require("/client/modules/core/helpers/permissions.js");
require("/client/modules/core/helpers/templates.js");
require("/client/modules/core/helpers/utils.js");
require("/client/modules/core/accounts.js");
require("/client/modules/core/index.js");
require("/client/modules/core/startup.js");
require("/client/modules/core/subscriptions.js");
require("/client/modules/i18n/currency.js");
require("/client/modules/i18n/helpers.js");
require("/client/modules/i18n/index.js");
require("/client/modules/i18n/startup.js");
require("/client/modules/logger/index.js");
require("/client/modules/router/helpers.js");
require("/client/modules/router/hooks.js");
require("/client/modules/router/index.js");
require("/client/api/index.js");
require("/client/collections/countries.js");
require("/client/collections/index.js");
require("/client/collections/taxEntitycodes.js");
require("/client/config/defaults.js");
require("/client/modules/index.js");
require("/client/plugins.js");
require("/client/modules/core/main.js");
require("/client/modules/i18n/main.js");
require("/client/modules/router/main.js");